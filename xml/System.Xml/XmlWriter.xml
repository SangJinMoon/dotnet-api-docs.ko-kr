<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlWriter.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5dcd30f646e86925308aadd60df5091f39fbb0df2.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dcd30f646e86925308aadd60df5091f39fbb0df2</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>Represents a writer that provides a fast, non-cached, forward-only way to generate streams or files that contain XML data.</source>
          <target state="translated">XML 데이터가 포함된 스트림 또는 파일을 생성할 수 있도록 빠르고, 앞으로만 이동 가능하며, 캐시되지 않은 방법을 제공하는 작성기를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> class writes XML data to a stream, file, text reader, or string.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> 클래스 스트림, 파일, 텍스트 판독기 또는 문자열에 XML 데이터를 기록 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>It supports the W3C <bpt id="p1">[</bpt>Extensible Markup Language (XML) 1.0 (fourth edition)<ept id="p1">](http://www.w3.org/TR/2006/REC-xml-20060816/)</ept> and <bpt id="p2">[</bpt>Namespaces in XML 1.0 (third edition)<ept id="p2">](http://www.w3.org/TR/REC-xml-names/)</ept> recommendations.</source>
          <target state="translated">W3C 지원 <bpt id="p1">[</bpt>태그 XML (Extensible Language) 1.0 (fourth edition)<ept id="p1">](http://www.w3.org/TR/2006/REC-xml-20060816/)</ept> 및 <bpt id="p2">[</bpt>XML 1.0에 대 한 네임 스페이스 (세 번째 버전)<ept id="p2">](http://www.w3.org/TR/REC-xml-names/)</ept> 권장 사항입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The members of the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> class enable you to:</source>
          <target state="translated">멤버는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> 클래스를 사용 하면 수:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Verify that the characters are legal XML characters and that element and attribute names are valid XML names.</source>
          <target state="translated">문자가 올바른 XML 문자인지와 요소 및 특성 이름이 유효한 XML 이름인지 확인합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Verify that the XML document is well-formed.</source>
          <target state="translated">XML 문서가 제대로 구성되었는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Encode binary bytes as Base64 or BinHex, and write out the resulting text.</source>
          <target state="translated">Base64 또는 BinHex를 이진 바이트를 인코딩하고 결과 텍스트를 작성 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Pass values by using common language runtime types instead of strings, to avoid having to manually perform value conversions.</source>
          <target state="translated">수동으로 값을 변환 하지 않으려면 공용 언어 런타임 형식 문자열을 대신 사용 하 여 값을 전달 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Write multiple documents to one output stream.</source>
          <target state="translated">출력 스트림 하나에 문서를 여러 개 작성합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Write valid names, qualified names, and name tokens.</source>
          <target state="translated">올바른 이름, 정규화된 이름, 이름 토큰을 작성합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>In this section:</source>
          <target state="translated">섹션 내용</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><bpt id="p1">[</bpt>Creating an XML writer<ept id="p1">](#create)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>XML 작성기를 만들지<ept id="p1">](#create)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><bpt id="p1">[</bpt>Specifying the output format<ept id="p1">](#output)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>출력 형식 지정<ept id="p1">](#output)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><bpt id="p1">[</bpt>Data conformance<ept id="p1">](#conformance)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>데이터 규칙<ept id="p1">](#conformance)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><bpt id="p1">[</bpt>Writing elements<ept id="p1">](#writing_elements)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>쓰기 요소<ept id="p1">](#writing_elements)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><bpt id="p1">[</bpt>Writing attributes<ept id="p1">](#writing_attributes)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>특성 작성<ept id="p1">](#writing_attributes)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><bpt id="p1">[</bpt>Handling namespaces<ept id="p1">](#handling_ns)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>네임 스페이스 처리<ept id="p1">](#handling_ns)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><bpt id="p1">[</bpt>Writing typed data<ept id="p1">](#writing_types)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>형식화 된 데이터 작성<ept id="p1">](#writing_types)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><bpt id="p1">[</bpt>Closing the XML writer<ept id="p1">](#close)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>XML 작성기를 닫고<ept id="p1">](#close)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><bpt id="p1">[</bpt>Asynchronous programming<ept id="p1">](#async)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>비동기 프로그래밍<ept id="p1">](#async)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><bpt id="p1">[</bpt>Security considerations<ept id="p1">](#security)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>보안 고려 사항<ept id="p1">](#security)</ept></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Creating an XML writer</source>
          <target state="translated">XML 작성기를 만들지</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To create an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance, use the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">만들려는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> 인스턴스를 사용 하 여는 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To specify the set of features you want to enable on the XML writer, pass an <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> to the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> method.</source>
          <target state="translated">전달 된 XML 작성기에서 사용 하도록 설정 하려는 기능 집합을 지정 하려면는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Otherwise, default settings are used.</source>
          <target state="translated">그렇지 않으면 기본 설정이 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>See the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> reference pages for details.</source>
          <target state="translated">참조는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> 대 한 자세한 내용은 페이지를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Specifying the output format</source>
          <target state="translated">출력 형식 지정</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class includes several properties that control how <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> output is formatted:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> 클래스를 제어 하는 여러 속성이 포함 방법을 <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> 출력 서식을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Specifies the text encoding to use.</source>
          <target state="translated">사용할 텍스트 인코딩을 지정합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The default is <ph id="ph1">`Encoding.UTF8`</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">`Encoding.UTF8`</ph>입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Indicates whether to indent elements.</source>
          <target state="translated">요소를 들여쓸 것인지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The default is <ph id="ph1">`false`</ph> (no indentation).</source>
          <target state="translated">기본값은 <ph id="ph1">`false`</ph> (들여쓰기 사용 안 함).</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Specifies the character string to use when indenting.</source>
          <target state="translated">들여쓰기할 때 사용할 문자열을 지정합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The default is two spaces.</source>
          <target state="translated">기본값은 공백 두 개입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Specifies the character string to use for line breaks.</source>
          <target state="translated">줄 바꿈에 사용할 문자열을 지정합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The default is <ph id="ph1">`\r\n`</ph> (carriage return, line feed).</source>
          <target state="translated">기본값은 <ph id="ph1">`\r\n`</ph>(캐리지 리턴, 줄 바꿈)입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Specifies how to handle newline characters.</source>
          <target state="translated">줄 바꿈 문자를 처리 하는 방법을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Indicates whether to write attributes on a new line.</source>
          <target state="translated">특성을 새 줄에 쓸지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Indent%2A&gt;</ph> should be set to <ph id="ph2">`true`</ph> when using this property.</source>
          <target state="translated">이 속성을 사용하는 경우 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Indent%2A&gt;</ph>를 <ph id="ph2">`true`</ph>로 설정해야 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">`false`</ph>입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Indicates whether to write an XML declaration.</source>
          <target state="translated">XML 선언을 작성할 것인지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">`false`</ph>입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Indent%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings.IndentChars%2A&gt;</ph> properties control how insignificant white space is formatted.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Indent%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings.IndentChars%2A&gt;</ph> 속성은 무효 공백 서식이 지정되는 방법을 제어합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For example, to indent element nodes:</source>
          <target state="translated">예를 들어, 요소 노드를 들여쓰려면</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A&gt;</ph> to write each attribute on a new line with one extra level of indentation:</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A&gt;</ph> 하나의 추가 수준의 들여쓰기 된 새 줄에 각 특성을 쓰려고 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Data conformance</source>
          <target state="translated">데이터 규칙</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>An XML writer uses two properties from the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to check for data conformance:</source>
          <target state="translated">두 개의 속성을 사용 하는 XML 작성기는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> 클래스를 확인할 데이터:</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.CheckCharacters%2A&gt;</ph> property instructs the XML writer to check characters and throw an <ph id="ph2">&lt;xref:System.Xml.XmlException&gt;</ph> exception if any characters are outside the legal range, as defined by the W3C.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.CheckCharacters%2A&gt;</ph> 속성 지시 하 문자를 확인 하 고 throw 된 XML 작성기는 <ph id="ph2">&lt;xref:System.Xml.XmlException&gt;</ph> 는 W3C에서 정의 된 대로 모든 문자는 사용할 범위를 벗어나는 경우 예외입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A&gt;</ph> property configures the XML writer to check that the stream being written complies with the rules for a well-formed XML 1.0 document or document fragment, as defined by the W3C.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A&gt;</ph> 속성은 W3C에서 정의 된 대로 기록 되는 스트림을 올바른 형식의 XML 1.0 문서 또는 문서 조각에 대 한 규칙 준수 하는지 확인 하려면 XML 작성기를 구성 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The three conformance levels are described in the following table.</source>
          <target state="translated">세 가지 받는 규칙 수준 다음 표에 설명 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The default is <ph id="ph1">&lt;xref:System.Xml.ConformanceLevel.Document&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;xref:System.Xml.ConformanceLevel.Document&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For details, see the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=nameWithType&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Xml.ConformanceLevel?displayProperty=nameWithType&gt;</ph> enumeration.</source>
          <target state="translated">자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=nameWithType&gt;</ph> 속성 및 <ph id="ph2">&lt;xref:System.Xml.ConformanceLevel?displayProperty=nameWithType&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Level</source>
          <target state="translated">수준</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The XML output conforms to the rules for a well-formed XML 1.0 document and can be processed by any conforming processor.</source>
          <target state="translated">XML 출력 올바른 형식의 XML 1.0 문서에 대 한 규칙을 준수 하 고 표준에 맞는 프로세서에서 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The XML output conforms to the rules for a well-formed XML 1.0 document fragment.</source>
          <target state="translated">XML 출력 올바른 형식의 XML 1.0 문서 조각에 대 한 규칙을 따릅니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The XML writer determines which level of conformation checking to apply (document or fragment) based on the incoming data.</source>
          <target state="translated">XML 작성기 conformation 적용할 검사 (문서 또는 조각) 기반으로 들어오는 데이터의 수준을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Writing elements</source>
          <target state="translated">쓰기 요소</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>You can use the following <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> methods to write element nodes.</source>
          <target state="translated">다음을 사용할 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> 요소 노드를 쓰는 메서드가 있습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For examples, see the methods listed.</source>
          <target state="translated">예제를 나열 된 메서드를 참조 하세요.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Use</source>
          <target state="translated">사용</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To</source>
          <target state="translated">대상</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Write an entire element  node, including a string value.</source>
          <target state="translated">문자열 값을 포함 하 여 전체 요소 노드를 작성 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To write an element value by using multiple method calls.</source>
          <target state="translated">여러 방법을 사용 하 여 요소 값을 쓰기 위해 호출 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For example, you can call <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> to write a typed value, <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteCharEntity%2A&gt;</ph> to write a character entity, <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> to write an attribute, or you can write a child element.</source>
          <target state="translated">예를 들어, <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph>를 호출하여 입력된 값을 작성하고, <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteCharEntity%2A&gt;</ph>를 호출하여 문자 엔터티를 작성하고, <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph>을 호출하여 특성을 작성하거나 자식 요소를 작성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>This is a more sophisticated version of the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementString%2A&gt;</ph> method.</source>
          <target state="translated">이 보다 복잡 한 버전의는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementString%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To close the element, you call the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndElement%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteFullEndElement%2A&gt;</ph> method.</source>
          <target state="translated">호출 하면 요소를 닫으려면는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndElement%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteFullEndElement%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To copy an element node found at the current position of an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> object.</source>
          <target state="translated">현재 위치에서 찾을 요소 노드를 복사 하는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>When called, it copies everything from the source object to the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance.</source>
          <target state="translated">이 메서드를 호출하면 소스 개체의 모든 항목이 <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> 인스턴스에 복사됩니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Writing attributes</source>
          <target state="translated">특성 작성</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>You can use the following <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> methods to write attributes on element nodes.</source>
          <target state="translated">다음을 사용할 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> 요소 노드에서 특성을 쓰는 메서드가 있습니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>These methods can also be used to create namespace declarations on an element, as discussed in the next section.</source>
          <target state="translated">이러한 메서드 데도 사용할 수 있습니다 프로그램 요소에 네임 스페이스 선언을 만들려면 다음 섹션에서 설명 했 듯이 합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Use</source>
          <target state="translated">기능</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To</source>
          <target state="translated">대상</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To write an entire attribute node, including a string value.</source>
          <target state="translated">에 문자열 값을 포함 하 여 전체 특성 노드를 작성 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To write the attribute value using multiple method calls.</source>
          <target state="translated">여러 메서드를 사용 하 여 특성 값을 쓰기 위해 호출 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For example, you can call <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> to write a typed value.</source>
          <target state="translated">예를 들어, 호출할 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> 형식화 된 값을 쓸 수 있습니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>This is a more sophisticated version of the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementString%2A&gt;</ph> method.</source>
          <target state="translated">이 보다 복잡 한 버전의는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementString%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To close the element, you call the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndAttribute%2A&gt;</ph> method.</source>
          <target state="translated">호출 하면 요소를 닫으려면는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndAttribute%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To copy all the attributes found at the current position of an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object.</source>
          <target state="translated">현재 위치에 있는 모든 특성을 복사 하는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The attributes that are written depend on the type of node the reader is currently positioned on:</source>
          <target state="translated">기록 되는 특성에 판독기가 현재 노드의 유형에 따라 다릅니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>-   For an attribute node, it writes the current attribute, and then the rest of the attributes until the element closing tag.</source>
          <target state="translated">-특성 노드에 기록 현재 특성 및 특성의 나머지 부분까지 요소의 닫는 태그입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>-   For an element node, it writes all attributes contained by the element.</source>
          <target state="translated">-프로그램 요소 노드에 대 한 요소에 포함 된 모든 특성을 기록 합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>-   For an XML declaration node, it writes all the attributes in the declaration.</source>
          <target state="translated">-에 대해서는 XML 선언 노드 선언에서 특성을 모두 씁니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>-   For all other node types, the method throws an exception.</source>
          <target state="translated">-메서드 다른 노드 형식에 대 한 예외를 throw합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Handling namespaces</source>
          <target state="translated">네임 스페이스 처리</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Namespaces are used to qualify element and attribute names in an XML document.</source>
          <target state="translated">네임스페이스는 XML 문서에서 요소 및 특성 이름을 정규화하는 데 사용합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Namespace prefixes associate elements and attributes with namespaces, which are in turn associated with URI references.</source>
          <target state="translated">Namespace 접두사 연관 시킬 특성과 해당 요소 네임 스페이스 URI 참조와 연결 됩니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Namespaces create element and attribute name uniqueness in an XML document.</source>
          <target state="translated">네임스페이스는 XML 문서에서 요소 및 특성 이름을 고유하게 만듭니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> maintains a namespace stack that corresponds to all the namespaces defined in the current namespace scope.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> 현재 네임 스페이스 범위에 정의 된 모든 네임 스페이스에 해당 하는 네임 스페이스 스택을 유지 관리 합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>When writing elements and attributes you can utilize namespaces in the following ways:</source>
          <target state="translated">요소와 특성을 작성할 때 다음과 같은 방법으로 네임스페이스를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Declare namespaces manually by using the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> method.</source>
          <target state="translated">네임 스페이스를 사용 하 여 수동으로 선언 된 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>This can be useful when you know how to best optimize the number of namespace declarations.</source>
          <target state="translated">이 기능은 네임스페이스 선언 수를 최적화하는 방법을 알 경우에 유용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For an example, see the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29&gt;</ph> method.</source>
          <target state="translated">예를 들어 참조는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Override the current namespace declaration with a new namespace.</source>
          <target state="translated">현재 네임스페이스 선언을 새 네임스페이스로 재정의</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>In the following code, the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> method changes the namespace URI for the <ph id="ph2">`"x"`</ph> prefix from <ph id="ph3">`"123"`</ph> to <ph id="ph4">`"abc"`</ph>.</source>
          <target state="translated">다음 코드에서는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> 메서드 네임 스페이스 URI를 변경에 대 한는 <ph id="ph2">`"x"`</ph> 에서 접두사 <ph id="ph3">`"123"`</ph> 를 <ph id="ph4">`"abc"`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The code generates the following XML string:</source>
          <target state="translated">이 코드는 다음 XML 문자열을 생성합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Specify a namespace prefix when writing attributes or elements.</source>
          <target state="translated">특성 또는 요소를 작성할 때 네임스페이스 접두사를 지정합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Many of the methods used to write element and attributes enable you to do this.</source>
          <target state="translated">대부분의 요소 및 특성을 쓰는 데 사용 되는 메서드를 사용이 작업을 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For example, the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartElement%28System.String%2CSystem.String%2CSystem.String%29&gt;</ph> method writes a start tag and associates it with a specified namespace and prefix.</source>
          <target state="translated">예를 들어는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartElement%28System.String%2CSystem.String%2CSystem.String%29&gt;</ph> 메서드 시작 태그를 작성 하 고 지정 된 네임 스페이스 및 접두사와 연결 합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Writing typed data</source>
          <target state="translated">형식화 된 데이터 작성</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method accepts a common language runtime (CLR) object, converts the input value to its string representation according to XML schema definition language (XSD) data type conversion rules, and writes it out by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> 메서드 공용 언어 런타임 (CLR) 개체를 허용 입력된 값에 XML 스키마 정의 언어 (XSD) 데이터 형식 변환 규칙을 따라 문자열 표현으로 변환 하 고 사용 하 여 로그 아웃 씁니다는 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>This is easier than using the methods in the <ph id="ph1">&lt;xref:System.Xml.XmlConvert&gt;</ph> class to convert the typed data to a string value before writing it out.</source>
          <target state="translated">이에 있는 메서드를 사용 하 여 보다 쉽게는 <ph id="ph1">&lt;xref:System.Xml.XmlConvert&gt;</ph> 형식화 된 데이터를 쓰기 전에 문자열 값으로 변환 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>When writing to text, the typed value is serialized to text by using the <ph id="ph1">&lt;xref:System.Xml.XmlConvert&gt;</ph> rules for that schema type.</source>
          <target state="translated">사용 하 여 형식화 된 값을 텍스트로 직렬화 텍스트에 쓸 때 여 <ph id="ph1">&lt;xref:System.Xml.XmlConvert&gt;</ph> 해당 스키마 유형에 대 한 규칙입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For default XSD data types that correspond to CLR types, see the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method.</source>
          <target state="translated">CLR 형식에 해당 하는 기본 XSD 데이터 형식에 대 한 참조는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> can also be used to write to an XML data store.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> XML 데이터 저장소에 쓸 수 사용할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For example, the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> class can create an <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> object to create nodes for an <ph id="ph3">&lt;xref:System.Xml.XmlDocument&gt;</ph> object.</source>
          <target state="translated">예를 들어, <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> 클래스는 <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> 개체를 만들어 <ph id="ph3">&lt;xref:System.Xml.XmlDocument&gt;</ph> 개체에 대한 노드를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>If the data store has schema information available to it, the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method throws an exception if you try to convert to a type that is not allowed.If the data store does not have schema information available to it, the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method treats all values as an <ph id="ph3">`xsd:anySimpleType`</ph> type.</source>
          <target state="translated">데이터 저장소에 스키마 정보를 사용할 수 있는 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> 메서드에서 허용 되지 않는 형식으로 변환 하려고 하면 예외가 throw 됩니다. 데이터 저장소에 스키마 정보를 사용할 수 없는 경우는 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> 메서드에서 모든 값 처리 하는 <ph id="ph3">`xsd:anySimpleType`</ph> 유형입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Closing the XML writer</source>
          <target state="translated">XML 작성기를 닫고</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>When you use <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> methods to output XML, the elements and attributes are not written until you call the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Close%2A&gt;</ph> method.</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> XML 요소 및 특성을 출력 하는 메서드를 호출 하기 전에 기록 되지 않습니다는 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Close%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For example, if you are using <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> to populate an <ph id="ph2">&lt;xref:System.Xml.XmlDocument&gt;</ph> object, you won't be able to see the written elements and attributes in the target document until you close the <ph id="ph3">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance.</source>
          <target state="translated">예를 들어, 사용 중인 경우 <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> 채우는 데는 <ph id="ph2">&lt;xref:System.Xml.XmlDocument&gt;</ph> 개체를 닫을 때까지 쓰여진된 요소 및 대상 문서에는 특성을 볼 수 없습니다는 <ph id="ph3">&lt;xref:System.Xml.XmlWriter&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Asynchronous programming</source>
          <target state="translated">비동기 프로그래밍</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Most of the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> methods have asynchronous counterparts that have "Async" at the end of their method names.</source>
          <target state="translated">대부분의 <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> 메서드는 "Async" 메서드 이름의 끝에 있는 비동기 메서드인 합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For example, the asynchronous equivalent of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> is <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A&gt;</ph>.</source>
          <target state="translated">예를 들어 비동기 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> 은 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method, which doesn't have an asynchronous counterpart, convert the return value to a string and use the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> method instead.</source>
          <target state="translated">에 대 한는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> 메서드를 비동기가, 반환 값을 문자열로 변환할 및 사용 하지 않습니다는 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> 메서드 대신 합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Security considerations</source>
          <target state="translated">보안 고려 사항</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Consider the following when working with the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> class:</source>
          <target state="translated">작업할 때는 다음 사항을 고려는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> 클래스:</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Exceptions thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> can disclose path information that you do not want bubbled up to the app.</source>
          <target state="translated">throw 된 예외는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> 응용 프로그램에 버블링 원하지 않는 경로 정보가 공개 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Your app must catch exceptions and process them appropriately.</source>
          <target state="translated">응용 프로그램 예외를 catch 하 고 적절 하 게 처리 해야 합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> does not validate any data that is passed to the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteDocType%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteRaw%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> 에 전달 되는 모든 데이터의 유효성을 검사 하지 않습니다는 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteDocType%2A&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteRaw%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>You should not pass arbitrary data to these methods.</source>
          <target state="translated">임의의 데이터를 이러한 메서드에 전달 해서는 안 됩니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The following example code shows how to use the asynchronous API to generate XML.</source>
          <target state="translated">다음 코드 예제에서는 XML을 생성 하는 비동기 API를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Close">
          <source>When overridden in a derived class, closes this stream and the underlying stream.</source>
          <target state="translated">파생 클래스에서 재정의되면 이 스트림 및 내부 스트림을 닫습니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Close">
          <source>Any elements or attributes left open are automatically closed.</source>
          <target state="translated">모든 요소 또는 특성을 열린 상태로 자동으로 닫힙니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Close">
          <source>When you use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> methods to output XML, the elements and attributes will not be written until you call the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Close%2A&gt;</ph> method.</source>
          <target state="translated">사용 하는 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> XML 요소 및 특성을 출력 하는 메서드를 호출 하기 전에 기록 되지 것입니다는 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Close%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Close">
          <source>For example, if you are using the XmlWriter to populate an <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>, until you close the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>, you will not be able to observe the written elements and attributes in the target document.</source>
          <target state="translated">예를 들어를 채우는 XmlWriter를 사용 하는 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>닫을 때까지는 <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>, 쓰여진된 요소 및 대상 문서에 특성을 확인할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Close">
          <source>The following example writes an XML node.</source>
          <target state="translated">다음 예제에서는 XML 노드를 작성 합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Close">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Close">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Some of the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> overloads include a <ph id="ph2">`settings`</ph> parameter that accepts an <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object.</source>
          <target state="translated">일부는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> 오버 로드는 포함 한 <ph id="ph2">`settings`</ph> 을 받는 매개 변수는 <ph id="ph3">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>You can use this object to:</source>
          <target state="translated">이 개체를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Specify which features you want supported on the created <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> object.</source>
          <target state="translated">만든에 지원 되는 원하는 어떤 기능 지정 <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Reuse the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object to create multiple writer objects.</source>
          <target state="translated">다시 사용 된 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> 여러 기록기 개체를 만들 개체입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object is copied and marked read-only for each created writer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> 개체가 복사되고 생성된 각 작성기에 대해 읽기 전용으로 표시됩니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Changes to the settings on an <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> instance do not affect existing writers with the same settings.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> 인스턴스에서 설정을 변경해도 설정이 같은 기존 작성기에는 영향을 주지 않습니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Thus, you can use the same settings to create multiple writers with the same functionality.</source>
          <target state="translated">그러므로 같은 설정을 사용하면 같은 기능을 갖춘 여러 작성기를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Or, you can modify the settings on an <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> instance and create a new writer with a different set of features.</source>
          <target state="translated">또는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> 인스턴스에서 설정을 수정하고 다른 기능 집합이 포함된 새 작성기를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Add features to an existing XML writer.</source>
          <target state="translated">기존 XML 작성기에 기능을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> method can accept another <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> 메서드는 다른 <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> 개체를 허용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The underlying <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> object does not have to be an XML writer created by the static <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> method.</source>
          <target state="translated">내부 <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> 개체에는 정적 만든 XML 작성기 수 없는 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For example, you can specify a user-defined XML writer to add additional features to.</source>
          <target state="translated">예를 들어 추가 기능을 추가 하려면 사용자 지정 XML 작성기를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Take full advantage of features such as better conformance checking and compliance to the <bpt id="p1">[</bpt>XML 1.0 recommendation<ept id="p1">](http://www.w3.org/TR/2006/REC-xml-20060816/)</ept> that are available only on <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> objects created by the static <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> method.</source>
          <target state="translated">더 나은 규칙 검사에 대 한 규정 준수 등의 기능을 완전히 활용는 <bpt id="p1">[</bpt>XML 1.0 권장 사항<ept id="p1">](http://www.w3.org/TR/2006/REC-xml-20060816/)</ept> 는 에서만 사용할 수 있는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> 정적이 만든 개체 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>If you use a <ph id="ph1">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> overload that doesn't accept an <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object, the following default writer settings are used:</source>
          <target state="translated">사용 하는 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> 받지 않은 오버 로드는 <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> 개체를 다음과 같은 기본 기록기 설정이 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Setting</source>
          <target state="translated">설정</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Default</source>
          <target state="translated">기본</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Two spaces</source>
          <target state="translated">공백 두 개</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><ph id="ph1">&lt;xref:System.Xml.NamespaceHandling.Default&gt;</ph> (no removal)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.NamespaceHandling.Default&gt;</ph> (제거 제외)</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><ph id="ph1">`\r\n`</ph> (carriage return, new line)</source>
          <target state="translated"><ph id="ph1">`\r\n`</ph>(캐리지 리턴, 줄 바꿈)</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Although the .NET Framework includes the <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> class, which is a concrete implementation of the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> class, we recommend that you create <ph id="ph3">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id="ph4">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> method.</source>
          <target state="translated">.NET Framework에 포함 되어 있지만 <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> 구체적인 구현인 클래스의는 <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> 클래스인 것이 좋습니다 만드는 <ph id="ph3">&lt;xref:System.Xml.XmlWriter&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph4">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>The stream to which you want to write.</source>
          <target state="translated">작성하려는 스트림입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> writes XML 1.0 text syntax and appends it to the specified stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>는 XML 1.0 텍스트 구문을 작성한 후 지정된 스트림에 추가합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance using the specified stream.</source>
          <target state="translated">지정된 스트림을 사용하여 새 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>When you use this overload, an <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object with the following default settings is used to create the XML writer:</source>
          <target state="translated">이 오버 로드를 사용 하는 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> 다음 기본 설정 된 개체는 XML 작성기를 만드는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>Setting</source>
          <target state="translated">설정</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>Default</source>
          <target state="translated">기본</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>Two spaces</source>
          <target state="translated">공백 두 개</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source><ph id="ph1">&lt;xref:System.Xml.NamespaceHandling.Default&gt;</ph> (no removal)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.NamespaceHandling.Default&gt;</ph> (제거 제외)</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source><ph id="ph1">`\r\n`</ph> (carriage return, new line)</source>
          <target state="translated"><ph id="ph1">`\r\n`</ph>(캐리지 리턴, 줄 바꿈)</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>If you want to specify the features to support on the created writer, use an overload that takes an <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object as one of its arguments, and pass in an <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object with your custom settings.</source>
          <target state="translated">사용 하는 오버 로드를 사용 하 여 만들어진된 작성기에서 지원할 기능을 지정 하려는 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> 개체를 해당 인수를 전달는 <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> 사용자 지정 설정으로는 개체입니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>Also, XmlWriter always writes a Byte Order Mark (BOM) to the underlying data stream; however, some streams must not have a BOM.</source>
          <target state="translated">또한 XmlWriter 항상 바이트 순서 표시가 (BOM) 기본 데이터 스트림에 씁니다. 그러나 일부 스트림에서 BOM을 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>To omit the BOM, create a new <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object and set the Encoding property to be a new <ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph> object with the Boolean value in the constructor set to false.</source>
          <target state="translated">BOM를 생략 하려면 새 만듭니다 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> 개체 및 인코딩 속성을 새 설정 <ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph> false로 설정 하는 생성자에 부울 값을 가진 개체입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>The following example writes an XML fragment to a memory stream.</source>
          <target state="translated">다음 예제에서는 XML 조각을 메모리 스트림을 씁니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>(It uses the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.Create%28System.IO.Stream%2CSystem.Xml.XmlWriterSettings%29&gt;</ph> overload, which also configures the settings on the new XML writer instance.)</source>
          <target state="translated">(사용 하 여는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.Create%28System.IO.Stream%2CSystem.Xml.XmlWriterSettings%29&gt;</ph> 오버 로드, 새 XML 기록기 인스턴스에서 설정을 구성입니다.)</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> to which you want to write.</source>
          <target state="translated">쓰기에 사용할 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> writes XML 1.0 text syntax and appends it to the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>는 XML 1.0 텍스트 구문을 작성한 후 지정된 <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>에 추가합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance using the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>를 사용하여 새 <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
          <source>When you use this overload, an <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object with default settings is used to create the XML writer.</source>
          <target state="translated">이 오버 로드를 사용 하는 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> 개체 기본 설정으로 XML 작성기를 만드는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
          <source>Setting</source>
          <target state="translated">설정</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
          <source>Default</source>
          <target state="translated">기본</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
          <source>Two spaces</source>
          <target state="translated">공백 두 개</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
          <source><ph id="ph1">&lt;xref:System.Xml.NamespaceHandling.Default&gt;</ph> (no removal)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.NamespaceHandling.Default&gt;</ph> (제거 제외)</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
          <source><ph id="ph1">`\r\n`</ph> (carriage return, new line)</source>
          <target state="translated"><ph id="ph1">`\r\n`</ph>(캐리지 리턴, 줄 바꿈)</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
          <source>If you want to specify the features to support on the created writer, use an overload that takes an <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object as one of its arguments, and pass in an <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object with your custom settings.</source>
          <target state="translated">사용 하는 오버 로드를 사용 하 여 만들어진된 작성기에서 지원할 기능을 지정 하려는 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> 개체를 해당 인수를 전달는 <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> 사용자 지정 설정으로는 개체입니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
          <source>The following example creates a writer that outputs to the console.</source>
          <target state="translated">다음 예제에서는 콘솔에 출력 하는 작성기를 만듭니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;paramref name="text" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="text" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source>The file to which you want to write.</source>
          <target state="translated">쓰기에 사용할 파일입니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> creates a file at the specified path and writes to it in XML 1.0 text syntax.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>는 지정된 경로에 파일을 만들어 XML 1.0 텍스트 구문으로 해당 파일에 씁니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>outputFileName<ept id="p1">&lt;/c&gt;</ept> must be a file system path.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>outputFileName<ept id="p1">&lt;/c&gt;</ept>은 파일 시스템 경로여야 합니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance using the specified filename.</source>
          <target state="translated">지정된 파일 이름을 사용하여 새 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source>When you use this overload, an <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object with default settings is used to create the XML writer.</source>
          <target state="translated">이 오버 로드를 사용 하는 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> 개체 기본 설정으로 XML 작성기를 만드는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source>Setting</source>
          <target state="translated">설정</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source>Default</source>
          <target state="translated">기본</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source>Two spaces</source>
          <target state="translated">공백 두 개</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source><ph id="ph1">&lt;xref:System.Xml.NamespaceHandling.Default&gt;</ph> (no removal)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.NamespaceHandling.Default&gt;</ph> (제거 제외)</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source><ph id="ph1">`\r\n`</ph> (carriage return, new line)</source>
          <target state="translated"><ph id="ph1">`\r\n`</ph>(캐리지 리턴, 줄 바꿈)</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source>If you want to specify the features to support on the created XML writer, use an overload that takes an <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object as one of its arguments, and pass in a <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object with your custom settings.</source>
          <target state="translated">사용 하는 오버 로드를 사용 하 여 만들어진된 XML 작성기에서 지원할 기능을 지정 하려는 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> 개체를 해당 인수를 전달는 <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> 사용자 지정 설정으로는 개체입니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> object and writes a book node.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> 개체를 book 노드를 작성 합니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="url" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="url" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> to which to write to.</source>
          <target state="translated">쓰기에 사용할 <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
          <source>Content written by the <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> is appended to the <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>가 쓰는 콘텐츠는 <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>에 추가됩니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance using the specified <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>를 사용하여 새 <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
          <source>When you use this overload, an <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object with default settings is used to create the XML writer.</source>
          <target state="translated">이 오버 로드를 사용 하는 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> 개체 기본 설정으로 XML 작성기를 만드는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
          <source>Setting</source>
          <target state="translated">설정</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
          <source>Default</source>
          <target state="translated">기본</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
          <source>Two spaces</source>
          <target state="translated">공백 두 개</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
          <source><ph id="ph1">&lt;xref:System.Xml.NamespaceHandling.Default&gt;</ph> (no removal)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.NamespaceHandling.Default&gt;</ph> (제거 제외)</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
          <source><ph id="ph1">`\r\n`</ph> (carriage return, new line)</source>
          <target state="translated"><ph id="ph1">`\r\n`</ph>(캐리지 리턴, 줄 바꿈)</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
          <source>If you want to specify the features to support on the created XML writer, use an overload that takes an <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object as one of its arguments, and pass in a <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object with your custom settings.</source>
          <target state="translated">사용 하는 오버 로드를 사용 하 여 만들어진된 XML 작성기에서 지원할 기능을 지정 하려는 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> 개체를 해당 인수를 전달는 <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> 사용자 지정 설정으로는 개체입니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
          <source>The <ph id="ph1">&lt;paramref name="builder" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="builder" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object that you want to use as the underlying writer.</source>
          <target state="translated">내부 작성기로 사용할 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 개체를 사용하여 새 <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object that is wrapped around the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 개체를 래핑하는 <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
          <source>This method allows you add features to an underlying <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> object.</source>
          <target state="translated">이 방법을 사용 하는 기본 기능을 추가 하면 <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
          <source>The underlying <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> object can be an object created by the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method, or an object created using the <ph id="ph3">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> implementation.</source>
          <target state="translated">내부 <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> 개체에서 만든 개체 수는 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> 메서드 또는 사용 하 여 만든 개체는 <ph id="ph3">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> 구현 합니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
          <source>When you use this overload, an <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object with default settings is used to create the XML writer.</source>
          <target state="translated">이 오버 로드를 사용 하는 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> 개체 기본 설정으로 XML 작성기를 만드는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
          <source>Setting</source>
          <target state="translated">설정</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
          <source>Default</source>
          <target state="translated">기본</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
          <source>Two spaces</source>
          <target state="translated">공백 두 개</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
          <source><ph id="ph1">&lt;xref:System.Xml.NamespaceHandling.Default&gt;</ph> (no removal)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.NamespaceHandling.Default&gt;</ph> (제거 제외)</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
          <source><ph id="ph1">`\r\n`</ph> (carriage return, new line)</source>
          <target state="translated"><ph id="ph1">`\r\n`</ph>(캐리지 리턴, 줄 바꿈)</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
          <source>If you want to specify the features to support on the created XML writer, use an overload that takes an <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object as one of its arguments, and pass in a <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object with your custom settings.</source>
          <target state="translated">사용 하는 오버 로드를 사용 하 여 만들어진된 XML 작성기에서 지원할 기능을 지정 하려는 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> 개체를 해당 인수를 전달는 <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> 사용자 지정 설정으로는 개체입니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;paramref name="writer" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
          <source>The stream to which you want to write.</source>
          <target state="translated">작성하려는 스트림입니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> writes XML 1.0 text syntax and appends it to the specified stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>는 XML 1.0 텍스트 구문을 작성한 후 지정된 스트림에 추가합니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object used to configure the new <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> 인스턴스를 구성하는 데 사용되는 <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
          <source>If this is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, a <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> with default settings is used.</source>
          <target state="translated">값이 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이면 기본 설정이 지정된 <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph>이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> is being used with the <ph id="ph2">&lt;see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /&gt;</ph> method, you should use the <ph id="ph3">&lt;see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /&gt;</ph> property to obtain an <ph id="ph4">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object with the correct settings.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>가 <ph id="ph2">&lt;see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /&gt;</ph> 메서드와 함께 사용되는 경우 <ph id="ph3">&lt;see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /&gt;</ph> 속성을 사용하여 올바른 설정을 포함하는 <ph id="ph4">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> 개체를 가져와야 합니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
          <source>This ensures that the created <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object has the correct output settings.</source>
          <target state="translated">이에 따라 만들어진 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 개체가 올바른 출력 설정을 갖게 됩니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance using the stream and <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object.</source>
          <target state="translated">스트림과 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 개체를 사용하여 새 <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
          <source>XmlWriter always writes a Byte Order Mark (BOM) to the underlying data stream; however, some streams must not have a BOM.</source>
          <target state="translated">XmlWriter 항상 바이트 순서 표시가 (BOM) 기본 데이터 스트림에 씁니다. 그러나 일부 스트림에서 BOM을 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
          <source>To omit the BOM, create a new <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object and set the Encoding property to be a new <ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph> object with the Boolean value in the constructor set to false.</source>
          <target state="translated">BOM를 생략 하려면 새 만듭니다 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> 개체 및 인코딩 속성을 새 설정 <ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph> false로 설정 하는 생성자에 부울 값을 가진 개체입니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
          <source>The following example writes an XML fragment to a memory stream.</source>
          <target state="translated">다음 예제에서는 XML 조각을 메모리 스트림을 씁니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> to which you want to write.</source>
          <target state="translated">쓰기에 사용할 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> writes XML 1.0 text syntax and appends it to the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>는 XML 1.0 텍스트 구문을 작성한 후 지정된 <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>에 추가합니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object used to configure the new <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> 인스턴스를 구성하는 데 사용되는 <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
          <source>If this is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, a <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> with default settings is used.</source>
          <target state="translated">값이 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이면 기본 설정이 지정된 <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph>이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> is being used with the <ph id="ph2">&lt;see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /&gt;</ph> method, you should use the <ph id="ph3">&lt;see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /&gt;</ph> property to obtain an <ph id="ph4">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object with the correct settings.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>가 <ph id="ph2">&lt;see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /&gt;</ph> 메서드와 함께 사용되는 경우 <ph id="ph3">&lt;see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /&gt;</ph> 속성을 사용하여 올바른 설정을 포함하는 <ph id="ph4">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> 개체를 가져와야 합니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
          <source>This ensures that the created <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object has the correct output settings.</source>
          <target state="translated">이에 따라 만들어진 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 개체가 올바른 출력 설정을 갖게 됩니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance using the <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 개체를 사용하여 새 <ph id="ph3">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
          <source>The following example writes out an XML string.</source>
          <target state="translated">다음 예제는 XML 문자열을 작성합니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;paramref name="text" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="text" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
          <source>The file to which you want to write.</source>
          <target state="translated">쓰기에 사용할 파일입니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> creates a file at the specified path and writes to it in XML 1.0 text syntax.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>는 지정된 경로에 파일을 만들어 XML 1.0 텍스트 구문으로 해당 파일에 씁니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>outputFileName<ept id="p1">&lt;/c&gt;</ept> must be a file system path.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>outputFileName<ept id="p1">&lt;/c&gt;</ept>은 파일 시스템 경로여야 합니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object used to configure the new <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> 인스턴스를 구성하는 데 사용되는 <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
          <source>If this is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, a <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> with default settings is used.</source>
          <target state="translated">값이 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이면 기본 설정이 지정된 <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph>이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> is being used with the <ph id="ph2">&lt;see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /&gt;</ph> method, you should use the <ph id="ph3">&lt;see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /&gt;</ph> property to obtain an <ph id="ph4">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object with the correct settings.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>가 <ph id="ph2">&lt;see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /&gt;</ph> 메서드와 함께 사용되는 경우 <ph id="ph3">&lt;see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /&gt;</ph> 속성을 사용하여 올바른 설정을 포함하는 <ph id="ph4">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> 개체를 가져와야 합니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
          <source>This ensures that the created <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object has the correct output settings.</source>
          <target state="translated">이에 따라 만들어진 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 개체가 올바른 출력 설정을 갖게 됩니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance using the filename and <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object.</source>
          <target state="translated">파일 이름과 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 개체를 사용하여 새 <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> object with the defined settings.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> 정의 된 설정 가진 개체입니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;paramref name="url" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="url" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> to which to write to.</source>
          <target state="translated">쓰기에 사용할 <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
          <source>Content written by the <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> is appended to the <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>가 쓰는 콘텐츠는 <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>에 추가됩니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object used to configure the new <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> 인스턴스를 구성하는 데 사용되는 <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
          <source>If this is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, a <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> with default settings is used.</source>
          <target state="translated">값이 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이면 기본 설정이 지정된 <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph>이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> is being used with the <ph id="ph2">&lt;see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /&gt;</ph> method, you should use the <ph id="ph3">&lt;see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /&gt;</ph> property to obtain an <ph id="ph4">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object with the correct settings.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>가 <ph id="ph2">&lt;see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /&gt;</ph> 메서드와 함께 사용되는 경우 <ph id="ph3">&lt;see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /&gt;</ph> 속성을 사용하여 올바른 설정을 포함하는 <ph id="ph4">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> 개체를 가져와야 합니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
          <source>This ensures that the created <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object has the correct output settings.</source>
          <target state="translated">이에 따라 만들어진 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 개체가 올바른 출력 설정을 갖게 됩니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance using the <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 개체를 사용하여 새 <ph id="ph3">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;paramref name="builder" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="builder" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object that you want to use as the underlying writer.</source>
          <target state="translated">내부 작성기로 사용할 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object used to configure the new <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> 인스턴스를 구성하는 데 사용되는 <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
          <source>If this is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, a <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> with default settings is used.</source>
          <target state="translated">값이 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이면 기본 설정이 지정된 <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph>이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> is being used with the <ph id="ph2">&lt;see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /&gt;</ph> method, you should use the <ph id="ph3">&lt;see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /&gt;</ph> property to obtain an <ph id="ph4">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object with the correct settings.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>가 <ph id="ph2">&lt;see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /&gt;</ph> 메서드와 함께 사용되는 경우 <ph id="ph3">&lt;see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /&gt;</ph> 속성을 사용하여 올바른 설정을 포함하는 <ph id="ph4">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> 개체를 가져와야 합니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
          <source>This ensures that the created <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object has the correct output settings.</source>
          <target state="translated">이에 따라 만들어진 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 개체가 올바른 출력 설정을 갖게 됩니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> objects.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 개체를 사용하여 새 <ph id="ph3">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object that is wrapped around the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 개체를 래핑하는 <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
          <source>This method allows you add additional features to an underlying <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> object.</source>
          <target state="translated">이 메서드는 내부에 추가 기능을 사용 하면 <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
          <source>The underlying <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> object can be an object created by the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> method, or an object created using the <ph id="ph3">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> implementation.</source>
          <target state="translated">내부 <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> 개체에서 만든 개체 수는 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph> 메서드 또는 사용 하 여 만든 개체는 <ph id="ph3">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> 구현 합니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
          <source>The <ph id="ph1">&lt;paramref name="writer" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message “An asynchronous operation is already in progress.”</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 클래스에서 사용하는 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 클래스의 현재 인스턴스에서 사용하는 모든 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Dispose">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Dispose">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>로 설정하고, 관리되지 않는 리소스만 해제하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Dispose(System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Dispose(System.Boolean)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Flush">
          <source>When overridden in a derived class, flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.</source>
          <target state="translated">파생 클래스에서 재정의되면 버퍼에 있는 항목을 내부 스트림으로 플러시하고 내부 스트림도 플러시합니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Flush">
          <source>This is called instead of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.Close%2A&gt;</ph> when you want to write more to the underlying stream without losing what is still in the buffer.</source>
          <target state="translated">이 대신 이라고 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.Close%2A&gt;</ph> 버퍼에 있는 내용을 손실 하지 않고 기본 스트림에 더 작성 하려는 경우.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Flush">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.FlushAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.FlushAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.Flush">
          <source>The following example writes two XML fragments.</source>
          <target state="translated">다음 예제에서는 두 개의 XML 조각을 씁니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Flush">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.Flush">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.FlushAsync">
          <source>Asynchronously flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.</source>
          <target state="translated">버퍼에 있는 모든 내용을 내부 스트림으로 비동기적으로 플러시하고 내부 스트림도 플러시합니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.FlushAsync">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="Flush" /&gt;</ph> operation.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see langword="Flush" /&gt;</ph> 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.FlushAsync">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.Flush%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.Flush%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.FlushAsync">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.FlushAsync">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.FlushAsync">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.LookupPrefix(System.String)">
          <source>The namespace URI whose prefix you want to find.</source>
          <target state="translated">찾으려는 접두사를 가진 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.LookupPrefix(System.String)">
          <source>When overridden in a derived class, returns the closest prefix defined in the current namespace scope for the namespace URI.</source>
          <target state="translated">파생 클래스에서 재정의되면 네임스페이스 URI의 현재 네임스페이스 범위에 정의된 가장 비슷한 접두사를 반환합니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.LookupPrefix(System.String)">
          <source>The matching prefix or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no matching namespace URI is found in the current scope.</source>
          <target state="translated">일치하는 접두사이거나 현재 범위에 일치하는 네임스페이스 URI가 없는 경우 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.LookupPrefix(System.String)">
          <source>The following example writes out a book.</source>
          <target state="translated">다음 예제에서는 책을 작성 합니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.LookupPrefix(System.String)">
          <source><ph id="ph1">&lt;paramref name="ns" /&gt;</ph> is either <ph id="ph2">&lt;see langword="null" /&gt;</ph> or <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ns" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph> 또는 <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.LookupPrefix(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.LookupPrefix(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlWriter.Settings">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object used to create this <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> instance.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 인스턴스를 만드는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.Settings">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph> object used to create this writer instance.</source>
          <target state="translated">이 작성기 인스턴스를 만드는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriterSettings" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.Settings">
          <source>If this writer was not created using the <ph id="ph1">&lt;see cref="Overload:System.Xml.XmlWriter.Create" /&gt;</ph> method, this property returns <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.Xml.XmlWriter.Create" /&gt;</ph> 메서드를 사용하여 작성기를 만들지 않은 경우 이 속성은 <ph id="ph2">&lt;see langword="null" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.Settings">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class is used to specify the set of features to support on the created writer instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> 클래스 만들어진된 작성기 인스턴스에 대해 지원할 기능 집합을 지정 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.Settings">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object returned by the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Settings%2A&gt;</ph> property cannot be modified.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> 에서 반환 된 개체는 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Settings%2A&gt;</ph> 속성을 수정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.Settings">
          <source>Any attempt to change individual settings results in an exception being thrown.</source>
          <target state="translated">예외가 throw 되 고 개별 설정을 결과 변경 하려고 시도 합니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlWriter.Settings">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlWriter.Settings">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>The <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> from which to copy the attributes.</source>
          <target state="translated">특성을 복사할 원본 <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to copy the default attributes from the <ph id="ph2">&lt;see langword="XmlReader" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>에서 기본 특성을 복사하려면 <ph id="ph2">&lt;see langword="XmlReader" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>When overridden in a derived class, writes out all the attributes found at the current position in the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">파생 클래스에서 재정의되면 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>의 현재 위치에 있는 모든 특성을 작성합니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>If the reader is positioned on an <ph id="ph1">`element`</ph> node <ph id="ph2">`WriteAttributes`</ph> copies all the contained attributes.</source>
          <target state="translated">판독기가 배치 되 면는 <ph id="ph1">`element`</ph> 노드 <ph id="ph2">`WriteAttributes`</ph> 포함 된 모든 특성을 복사 합니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>If the reader is positioned on an <ph id="ph1">`attribute`</ph> node, this method writes the current attribute, then the rest of the attributes until the element closing tag.</source>
          <target state="translated">판독기가 배치 되 면는 <ph id="ph1">`attribute`</ph> 노드를이 메서드는 현재 특성을 다음 나머지 특성 작성을 작성 요소의 닫는 태그입니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>If the reader is positioned on an <ph id="ph1">`XmlDeclaration`</ph> node, this method writes all the attributes in the declaration.</source>
          <target state="translated">판독기가 배치 되 면는 <ph id="ph1">`XmlDeclaration`</ph> 노드를이 메서드는 선언에 있는 모든 특성을 작성 합니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>If the reader is positioned on any other node type this method throws an <ph id="ph1">&lt;xref:System.Xml.XmlException&gt;</ph>.</source>
          <target state="translated">다른 노드 형식에 판독기가 배치 하는 경우이 메서드에서 throw 된 <ph id="ph1">&lt;xref:System.Xml.XmlException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>If this method is called using <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph>, to ensure well-formed XML any content (which has been expanded from the entities) that could result in an invalid document is replaced when written.</source>
          <target state="translated">이 메서드를 사용 하 여 호출 하면 <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph>, 올바른 형식의 XML을 쓸 때 모든 내용 (엔터티에서 확장 되었습니다) 문서가 잘못 될 수 있는 대체 됩니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>For example, if an attribute includes an <ph id="ph1">`&amp;gt;`</ph> entity that has been expanded, to ensure a well-formed document the expanded &gt; is replaced when written out with <ph id="ph2">`&amp;gt;`</ph>.</source>
          <target state="translated">예를 들어, 특성에는 <ph id="ph1">`&amp;gt;`</ph> 엔터티는 확장 된, 잘 구성 된 문서를 확장 된 되도록 &gt;과 함께 작성 하는 경우이 교체 <ph id="ph2">`&amp;gt;`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributesAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributesAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>The following example copies all the elements to the output, changes the tag names to upper case, and copies all the attributes unchanged.</source>
          <target state="translated">다음 예제에서는 요소를 모두 출력에 복사 하 고, 태그 이름은 대문자나 소문자를 변경, 변경 되지 않은 모든 특성을 복사 합니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>The example uses the file, <ph id="ph1">`test1.xml`</ph>, as input.</source>
          <target state="translated">이 예제에서는 파일을 사용 하 여 <ph id="ph1">`test1.xml`</ph>입력으로 합니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>The reader is not positioned on an <ph id="ph1">&lt;see langword="element" /&gt;</ph>, <ph id="ph2">&lt;see langword="attribute" /&gt;</ph> or <ph id="ph3">&lt;see langword="XmlDeclaration" /&gt;</ph> node.</source>
          <target state="translated">판독기가 <ph id="ph1">&lt;see langword="element" /&gt;</ph>, <ph id="ph2">&lt;see langword="attribute" /&gt;</ph> 또는 <ph id="ph3">&lt;see langword="XmlDeclaration" /&gt;</ph> 노드에 배치되지 않은 경우</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)">
          <source>The <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> from which to copy the attributes.</source>
          <target state="translated">특성을 복사할 원본 <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to copy the default attributes from the <ph id="ph2">&lt;see langword="XmlReader" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>에서 기본 특성을 복사하려면 <ph id="ph2">&lt;see langword="XmlReader" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)">
          <source>Asynchronously writes out all the attributes found at the current position in the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>의 현재 위치에서 찾은 모든 특성을 비동기적으로 작성합니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteAttributes" /&gt;</ph> operation.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see langword="WriteAttributes" /&gt;</ph> 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributes%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributes%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>When overridden in a derived class, writes an attribute with the specified value.</source>
          <target state="translated">파생 클래스에서 재정의되면 지정된 값이 있는 특성을 작성합니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementStringAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementStringAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">특성의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
          <source>The value of the attribute.</source>
          <target state="translated">특성 값</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
          <source>When overridden in a derived class, writes out the attribute with the specified local name and value.</source>
          <target state="translated">파생 클래스에서 재정의되면 지정된 로컬 이름 및 값이 있는 특성을 작성합니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
          <source><ph id="ph1">`WriteAttributeString`</ph> does the following:</source>
          <target state="translated"><ph id="ph1">`WriteAttributeString`</ph>에서는 다음을 수행합니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
          <source>If the attribute value includes double or single quotes, they are replaced with <ph id="ph1">`&amp;quot;`</ph> and <ph id="ph2">`&amp;apos;`</ph> respectively.</source>
          <target state="translated">특성 값에 작은따옴표를 포함 하는 경우와 대체 <ph id="ph1">`&amp;quot;`</ph> 및 <ph id="ph2">`&amp;apos;`</ph> 각각.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
          <source>If writing an <ph id="ph1">`xml:space`</ph> attribute, the writer verifies the attribute value is valid.</source>
          <target state="translated">작성 하는 경우는 <ph id="ph1">`xml:space`</ph> 특성 작성기 특성 값이 유효한 지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
          <source>(Valid values are <ph id="ph1">`preserve`</ph> or <ph id="ph2">`default`</ph>.)</source>
          <target state="translated">(유효한 값은 <ph id="ph1">`preserve`</ph> 또는 <ph id="ph2">`default`</ph>.)</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
          <source>If writing an <ph id="ph1">`xml:lang`</ph> attribute, the writer does not verify that the attribute value is valid according to the W3C XML 1.0 recommendation.</source>
          <target state="translated">작성 하는 경우는 <ph id="ph1">`xml:lang`</ph> 특성 작성기 특성 값이 W3C XML 1.0 권장 사항에 따라 유효한 지 확인 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
          <source>The following example writes out a book.</source>
          <target state="translated">다음 예제에서는 책을 작성 합니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
          <source>The <ph id="ph1">&lt;see langword="xml:space" /&gt;</ph> or <ph id="ph2">&lt;see langword="xml:lang" /&gt;</ph> attribute value is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="xml:space" /&gt;</ph> 또는 <ph id="ph2">&lt;see langword="xml:lang" /&gt;</ph> 특성 값이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">특성의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>The namespace URI to associate with the attribute.</source>
          <target state="translated">특성에 연결할 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>The value of the attribute.</source>
          <target state="translated">특성 값</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>When overridden in a derived class, writes an attribute with the specified local name, namespace URI, and value.</source>
          <target state="translated">파생 클래스에서 재정의되면 지정된 로컬 이름, 네임스페이스 URI 및 값을 갖는 특성을 작성합니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>This method writes out the attribute with a user defined namespace prefix and associates it with the given namespace.</source>
          <target state="translated">이 메서드는 사용자 정의 된 네임 스페이스 접두사가 포함 된 특성을 작성 하 고 주어진된 네임 스페이스에 연결.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>If <ph id="ph1">`localName`</ph> is "xmlns" then this method also treats this as a namespace declaration.</source>
          <target state="translated">경우 <ph id="ph1">`localName`</ph> 가 "xmlns"이이 방법으로 처리 네임 스페이스 선언 합니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>In this case, the <ph id="ph1">`ns`</ph> argument can be <ph id="ph2">`null`</ph>.</source>
          <target state="translated">이 경우에 <ph id="ph1">`ns`</ph> 인수 일 수 <ph id="ph2">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source><ph id="ph1">`WriteAttributeString`</ph> does the following:</source>
          <target state="translated"><ph id="ph1">`WriteAttributeString`</ph>에서는 다음을 수행합니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>If the attribute value includes double or single quotes, they are replaced with <ph id="ph1">`&amp;quot;`</ph> and <ph id="ph2">`&amp;apos;`</ph> respectively.</source>
          <target state="translated">특성 값에 작은따옴표를 포함 하는 경우와 대체 <ph id="ph1">`&amp;quot;`</ph> 및 <ph id="ph2">`&amp;apos;`</ph> 각각.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>If writing an <ph id="ph1">`xml:space`</ph> attribute, the writer verifies the attribute value is valid.</source>
          <target state="translated">작성 하는 경우는 <ph id="ph1">`xml:space`</ph> 특성 작성기 특성 값이 유효한 지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>(Valid values are <ph id="ph1">`preserve`</ph> or <ph id="ph2">`default`</ph>.)</source>
          <target state="translated">(유효한 값은 <ph id="ph1">`preserve`</ph> 또는 <ph id="ph2">`default`</ph>.)</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>If writing an <ph id="ph1">`xml:lang`</ph> attribute, the writer does not verify that the attribute value is valid according to the W3C XML 1.0 recommendation.</source>
          <target state="translated">작성 하는 경우는 <ph id="ph1">`xml:lang`</ph> 특성 작성기 특성 값이 W3C XML 1.0 권장 사항에 따라 유효한 지 확인 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> method to write a namespace declaration.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> 메서드를 네임 스페이스 선언을 작성 합니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;see langword="xml:space" /&gt;</ph> or <ph id="ph2">&lt;see langword="xml:lang" /&gt;</ph> attribute value is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="xml:space" /&gt;</ph> 또는 <ph id="ph2">&lt;see langword="xml:lang" /&gt;</ph> 특성 값이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>The namespace prefix of the attribute.</source>
          <target state="translated">특성의 네임스페이스 접두사입니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">특성의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>The namespace URI of the attribute.</source>
          <target state="translated">특성의 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>The value of the attribute.</source>
          <target state="translated">특성 값</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>When overridden in a derived class, writes out the attribute with the specified prefix, local name, namespace URI, and value.</source>
          <target state="translated">파생 클래스에서 재정의되면 지정된 접두사, 로컬 이름, 네임스페이스 URI 및 값을 갖는 특성을 작성합니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>This method writes out the attribute with a user defined namespace prefix and associates it with the given namespace.</source>
          <target state="translated">이 메서드는 사용자 정의 된 네임 스페이스 접두사가 포함 된 특성을 작성 하 고 주어진된 네임 스페이스에 연결.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>If the prefix is "xmlns" then this method also treats this as a namespace declaration and associates the declared prefix with the namespace URI provided in the given attribute value.</source>
          <target state="translated">접두사 "xmlns"는 경우 다음이 메서드도이 네임 스페이스 선언으로 처리 하 고 지정된 된 특성 값에 제공 된 URI 네임 스페이스 선언 된 접두사에 연결 합니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>In this case the <ph id="ph1">`ns`</ph> argument can be <ph id="ph2">`null`</ph>.</source>
          <target state="translated">이 경우에 <ph id="ph1">`ns`</ph> 인수 일 수 <ph id="ph2">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source><ph id="ph1">`WriteAttributeString`</ph> does the following:</source>
          <target state="translated"><ph id="ph1">`WriteAttributeString`</ph>에서는 다음을 수행합니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>If the attribute value includes double or single quotes, they are replaced with <ph id="ph1">`&amp;quot;`</ph> and <ph id="ph2">`&amp;apos;`</ph> respectively.</source>
          <target state="translated">특성 값에 작은따옴표를 포함 하는 경우와 대체 <ph id="ph1">`&amp;quot;`</ph> 및 <ph id="ph2">`&amp;apos;`</ph> 각각.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>If writing an <ph id="ph1">`xml:space`</ph> attribute, the writer verifies the attribute value is valid.</source>
          <target state="translated">작성 하는 경우는 <ph id="ph1">`xml:space`</ph> 특성 작성기 특성 값이 유효한 지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>(Valid values are <ph id="ph1">`preserve`</ph> or <ph id="ph2">`default`</ph>.)</source>
          <target state="translated">(유효한 값은 <ph id="ph1">`preserve`</ph> 또는 <ph id="ph2">`default`</ph>.)</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>If writing an <ph id="ph1">`xml:lang`</ph> attribute, the writer does not verify that the attribute value is valid according to the W3C XML 1.0 recommendation.</source>
          <target state="translated">작성 하는 경우는 <ph id="ph1">`xml:lang`</ph> 특성 작성기 특성 값이 W3C XML 1.0 권장 사항에 따라 유효한 지 확인 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> method to write a namespace declaration.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> 메서드를 네임 스페이스 선언을 작성 합니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;see langword="xml:space" /&gt;</ph> or <ph id="ph2">&lt;see langword="xml:lang" /&gt;</ph> attribute value is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="xml:space" /&gt;</ph> 또는 <ph id="ph2">&lt;see langword="xml:lang" /&gt;</ph> 특성 값이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="localName" /&gt;</ph> or <ph id="ph2">&lt;paramref name="ns" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="localName" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="ns" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
          <source>The namespace prefix of the attribute.</source>
          <target state="translated">특성의 네임스페이스 접두사입니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">특성의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
          <source>The namespace URI of the attribute.</source>
          <target state="translated">특성의 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
          <source>The value of the attribute.</source>
          <target state="translated">특성 값</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
          <source>Asynchronously writes out the attribute with the specified prefix, local name, namespace URI, and value.</source>
          <target state="translated">지정된 접두사, 로컬 이름, 네임스페이스 URI 및 값을 사용하여 특성을 비동기적으로 작성합니다.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteAttributeString" /&gt;</ph> operation.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see langword="WriteAttributeString" /&gt;</ph> 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>Byte array to encode.</source>
          <target state="translated">인코딩할 바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The position in the buffer indicating the start of the bytes to write.</source>
          <target state="translated">쓸 바이트의 시작을 나타내는 버퍼 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to write.</source>
          <target state="translated">쓸 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>When overridden in a derived class, encodes the specified binary bytes as Base64 and writes out the resulting text.</source>
          <target state="translated">파생 클래스에서 재정의되면 지정된 이진 바이트를 Base64로 인코딩하고 결과 텍스트를 작성합니다.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>For example, the byte buffer may contain the binary contents of a GIF image.</source>
          <target state="translated">예를 들어 바이트 버퍼가 GIF 이미지의 이진 내용을 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This clearly would not be valid XML.</source>
          <target state="translated">명확 하 게 하지 않는 것이 올바른 XML입니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">`Base64`</ph> encoding is designed to represent arbitrary byte sequences in a text form comprised of the 65 US-ASCII characters ([A-Za-z0-9+/=]) where each character encodes 6 bits of the binary data.</source>
          <target state="translated"><ph id="ph1">`Base64`</ph> 인코딩 65 US-ASCII 문자로 구성 된 텍스트 형식으로 임의의 바이트 시퀀스를 나타내는 하도록 구성 되었습니다 ([z0-9 + =]) 각 문자는 이진 데이터의 6 비트를 인코딩합니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>For more information, see Requests for Comments (RFC) 1521 located on the Request for Comments Web site at <ph id="ph1">http://www.rfc-editor.org/</ph>.</source>
          <target state="translated">자세한 내용은 대 한 참조 요청에 대 한 RFC 의견 웹 사이트에 대 한 요청에 있는 1521 <ph id="ph1">http://www.rfc-editor.org/</ph>합니다.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteBase64Async%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteBase64Async%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteBase64%2A&gt;</ph> method to write <ph id="ph2">`Base64`</ph> data.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteBase64%2A&gt;</ph> 쓰도록 메서드를 <ph id="ph2">`Base64`</ph> 데이터입니다.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">`Base64`</ph> data is embedded within an <ph id="ph2">`&lt;image&gt;`</ph> element.</source>
          <target state="translated"><ph id="ph1">`Base64`</ph> 데이터 내에 포함 되는 <ph id="ph2">`&lt;image&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>가 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer length minus <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">버퍼 길이에서 <ph id="ph1">&lt;paramref name="index" /&gt;</ph>를 빼면 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>보다 작은 경우</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>Byte array to encode.</source>
          <target state="translated">인코딩할 바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>The position in the buffer indicating the start of the bytes to write.</source>
          <target state="translated">쓸 바이트의 시작을 나타내는 버퍼 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to write.</source>
          <target state="translated">쓸 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>Asynchronously encodes the specified binary bytes as Base64 and writes out the resulting text.</source>
          <target state="translated">지정된 바이너리 바이트를 Base64로 비동기적으로 인코딩하고 결과 텍스트를 작성합니다.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteBase64" /&gt;</ph> operation.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see langword="WriteBase64" /&gt;</ph> 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteBase64%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteBase64%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>Byte array to encode.</source>
          <target state="translated">인코딩할 바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The position in the buffer indicating the start of the bytes to write.</source>
          <target state="translated">쓸 바이트의 시작을 나타내는 버퍼 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to write.</source>
          <target state="translated">쓸 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>When overridden in a derived class, encodes the specified binary bytes as <ph id="ph1">&lt;see langword="BinHex" /&gt;</ph> and writes out the resulting text.</source>
          <target state="translated">파생 클래스에서 재정의되면 지정된 이진 바이트를 <ph id="ph1">&lt;see langword="BinHex" /&gt;</ph>로 인코딩하고 결과 텍스트를 작성합니다.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteBinHexAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteBinHexAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteBinHex%2A&gt;</ph> method to write <ph id="ph2">`BinHex`</ph> data.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteBinHex%2A&gt;</ph> 쓰도록 메서드를 <ph id="ph2">`BinHex`</ph> 데이터입니다.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">`BinHex`</ph> data is embedded within an <ph id="ph2">`&lt;image&gt;`</ph> element.</source>
          <target state="translated"><ph id="ph1">`BinHex`</ph> 데이터 내에 포함 되는 <ph id="ph2">`&lt;image&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>가 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer length minus <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">버퍼 길이에서 <ph id="ph1">&lt;paramref name="index" /&gt;</ph>를 빼면 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>보다 작은 경우</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>Byte array to encode.</source>
          <target state="translated">인코딩할 바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>The position in the buffer indicating the start of the bytes to write.</source>
          <target state="translated">쓸 바이트의 시작을 나타내는 버퍼 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to write.</source>
          <target state="translated">쓸 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>Asynchronously encodes the specified binary bytes as <ph id="ph1">&lt;see langword="BinHex" /&gt;</ph> and writes out the resulting text.</source>
          <target state="translated">지정된 바이너리 바이트를 <ph id="ph1">&lt;see langword="BinHex" /&gt;</ph>로 비동기적으로 인코딩하고 결과 텍스트를 작성합니다.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteBinHex" /&gt;</ph> operation.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see langword="WriteBinHex" /&gt;</ph> 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteBinHex%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteBinHex%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCData(System.String)">
          <source>The text to place inside the CDATA block.</source>
          <target state="translated">CDATA 블록 내부에 배치할 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCData(System.String)">
          <source>When overridden in a derived class, writes out a <ph id="ph1">&amp;lt;</ph>![CDATA[...]]<ph id="ph2">&amp;gt;</ph> block containing the specified text.</source>
          <target state="translated">파생 클래스에서 재정의되면 지정된 텍스트가 포함된 <ph id="ph1">&amp;lt;</ph>![CDATA[...]]<ph id="ph2">&amp;gt;</ph> 블록을 작성합니다.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCData(System.String)">
          <source>If <ph id="ph1">`text`</ph> is either <ph id="ph2">`null`</ph> or <ph id="ph3">`String.Empty`</ph>, this method writes an empty CDATA block, for example <ph id="ph4">\&lt;</ph>![CDATA[]]]&gt;&lt;![CDATA[]&gt;.</source>
          <target state="translated">경우 <ph id="ph1">`text`</ph> 있거나 <ph id="ph2">`null`</ph> 또는 <ph id="ph3">`String.Empty`</ph>,이 메서드는 빈 CDATA 블록을 예를 들어 작성 <ph id="ph4">\&lt;</ph>! [ CDATA []]] &gt;&lt;! [CDATA] &gt;.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCData(System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteCDataAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteCDataAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCData(System.String)">
          <source>The following example writes an XML file representing a book.</source>
          <target state="translated">다음 예제에서는 책을 나타내는 XML 파일을 씁니다.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCData(System.String)">
          <source>The text would result in a non-well formed XML document.</source>
          <target state="translated">텍스트로 인해 XML 문서가 제대로 구성되지 않은 경우</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCData(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCData(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)">
          <source>The text to place inside the CDATA block.</source>
          <target state="translated">CDATA 블록 내부에 배치할 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)">
          <source>Asynchronously writes out a <ph id="ph1">&amp;lt;</ph>![CDATA[...]]<ph id="ph2">&amp;gt;</ph> block containing the specified text.</source>
          <target state="translated">지정된 텍스트를 포함하는 <ph id="ph1">&amp;lt;</ph>![CDATA[...]]<ph id="ph2">&amp;gt;</ph> 블록을 비동기적으로 작성합니다.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteCData" /&gt;</ph> operation.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see langword="WriteCData" /&gt;</ph> 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteCData%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteCData%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)">
          <source>The Unicode character for which to generate a character entity.</source>
          <target state="translated">문자 엔터티를 생성할 유니코드 문자입니다.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)">
          <source>When overridden in a derived class, forces the generation of a character entity for the specified Unicode character value.</source>
          <target state="translated">파생 클래스에서 재정의되면 지정된 유니코드 문자 값의 문자 엔터티를 생성하게 합니다.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)">
          <source>This method writes the Unicode character in hexadecimal character entity reference format.</source>
          <target state="translated">이 메서드는 16 진 문자 엔터티 참조 형식에는 유니코드 문자를 씁니다.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteCharEntityAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteCharEntityAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)">
          <source>See <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter.WriteCharEntity%2A?displayProperty=nameWithType&gt;</ph> for an example using this method.</source>
          <target state="translated">참조 <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter.WriteCharEntity%2A?displayProperty=nameWithType&gt;</ph> 이 메서드를 사용 하는 예제에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)">
          <source>The character is in the surrogate pair character range, <ph id="ph1">&lt;see langword="0xd800" /&gt;</ph><ph id="ph2"> - </ph><ph id="ph3">&lt;see langword="0xdfff" /&gt;</ph>.</source>
          <target state="translated">문자가 서로게이트 쌍 문자 범위 <ph id="ph1">&lt;see langword="0xd800" /&gt;</ph><ph id="ph2"> - </ph><ph id="ph3">&lt;see langword="0xdfff" /&gt;</ph>에 있습니다.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)">
          <source>The Unicode character for which to generate a character entity.</source>
          <target state="translated">문자 엔터티를 생성할 유니코드 문자입니다.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)">
          <source>Asynchronously forces the generation of a character entity for the specified Unicode character value.</source>
          <target state="translated">지정된 유니코드 문자 값에 대한 문자 엔터티가 비동기적으로 생성되도록 합니다.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteCharEntity" /&gt;</ph> operation.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see langword="WriteCharEntity" /&gt;</ph> 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteCharEntity%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteCharEntity%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>Character array containing the text to write.</source>
          <target state="translated">쓸 텍스트가 포함된 문자 배열입니다.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>The position in the buffer indicating the start of the text to write.</source>
          <target state="translated">쓸 텍스트의 시작을 나타내는 버퍼 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write.</source>
          <target state="translated">쓸 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>When overridden in a derived class, writes text one buffer at a time.</source>
          <target state="translated">파생 클래스에서 재정의되면 한 번에 한 버퍼씩 텍스트를 작성합니다.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>This method can be used to write large amounts of text one buffer at a time.</source>
          <target state="translated">이 메서드는 한 번에 많은 양의 텍스트 한 버퍼를 쓰는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>Special handling must be done to ensure the <ph id="ph1">`WriteChars`</ph> method does not split surrogate pair characters across multiple buffer writes.</source>
          <target state="translated">되도록 특수 처리를 수행 해야 합니다는 <ph id="ph1">`WriteChars`</ph> 메서드가 여러 버퍼 쓰기 서로게이트 쌍 문자가 분할 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>The XML specification defines the valid ranges for surrogate pairs.</source>
          <target state="translated">서로게이트 쌍에 대 한 유효한 범위를 정의 하는 XML 사양입니다.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteCharsAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteCharsAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>가 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>The buffer length minus <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>; the call results in surrogate pair characters being split or an invalid surrogate pair being written.</source>
          <target state="translated">버퍼 길이에서 <ph id="ph1">&lt;paramref name="index" /&gt;</ph>를 뺀 값이 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>보다 작고, 호출한 결과 서로게이트 쌍 문자가 분할되거나 잘못된 서로게이트 쌍이 작성되는 경우</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> parameter value is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 매개 변수 값이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
          <source>Character array containing the text to write.</source>
          <target state="translated">쓸 텍스트가 포함된 문자 배열입니다.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
          <source>The position in the buffer indicating the start of the text to write.</source>
          <target state="translated">쓸 텍스트의 시작을 나타내는 버퍼 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write.</source>
          <target state="translated">쓸 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
          <source>Asynchronously writes text one buffer at a time.</source>
          <target state="translated">한 번에 한 버퍼씩 텍스트를 비동기적으로 씁니다.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteChars" /&gt;</ph> operation.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see langword="WriteChars" /&gt;</ph> 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteChars%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteChars%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteComment(System.String)">
          <source>Text to place inside the comment.</source>
          <target state="translated">주석 내에 배치할 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteComment(System.String)">
          <source>When overridden in a derived class, writes out a comment <ph id="ph1">&amp;lt;</ph>!--...--<ph id="ph2">&amp;gt;</ph> containing the specified text.</source>
          <target state="translated">파생 클래스에서 재정의되면 지정된 텍스트가 포함된 주석 <ph id="ph1">&amp;lt;</ph>!--...--<ph id="ph2">&amp;gt;</ph>을 작성합니다.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteComment(System.String)">
          <source>If <ph id="ph1">`text`</ph> is either <ph id="ph2">`null`</ph> or <ph id="ph3">`String.Empty`</ph>, this method writes a comment with no data content, for example <ph id="ph4">\&lt;</ph>!----&gt;.</source>
          <target state="translated">경우 <ph id="ph1">`text`</ph> 있거나 <ph id="ph2">`null`</ph> 또는 <ph id="ph3">`String.Empty`</ph>, 예를 들어이 메서드는 데이터 콘텐츠가 없는 사용 하 여 주석을 작성 <ph id="ph4">\&lt;</ph>!---&gt;.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteComment(System.String)">
          <source>If <ph id="ph1">`text`</ph> contains an invalid sequence of two dashes "--" the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> can either throw an <ph id="ph3">&lt;xref:System.ArgumentException&gt;</ph> (<ph id="ph4">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> objects) or insert a space between the dashes "- -" so that the text is a valid XML comment (<ph id="ph5">&lt;xref:System.Xml.XmlWriter&gt;</ph> objects created by the <ph id="ph6">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> method).</source>
          <target state="translated">경우 <ph id="ph1">`text`</ph> 대시 두 개에 잘못 된 시퀀스가 포함 된 "-"는 <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> throw 하거나 수는 <ph id="ph3">&lt;xref:System.ArgumentException&gt;</ph> (<ph id="ph4">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> 개체) 또는 대시 사이 공백을 삽입 "--" 텍스트는 올바른 XML 주석 있도록 (<ph id="ph5">&lt;xref:System.Xml.XmlWriter&gt;</ph> 가 만든 개체는 <ph id="ph6">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> 메서드).</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteComment(System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteCommentAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteCommentAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteComment(System.String)">
          <source>The following example writes an XML file representing a book.</source>
          <target state="translated">다음 예제에서는 책을 나타내는 XML 파일을 씁니다.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteComment(System.String)">
          <source>The text would result in a non-well-formed XML document.</source>
          <target state="translated">텍스트로 인해 XML 문서가 제대로 구성되지 않은 경우</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteComment(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteComment(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)">
          <source>Text to place inside the comment.</source>
          <target state="translated">주석 내에 배치할 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)">
          <source>Asynchronously writes out a comment <ph id="ph1">&amp;lt;</ph>!--...--<ph id="ph2">&amp;gt;</ph> containing the specified text.</source>
          <target state="translated">지정된 텍스트를 포함하는 주석 <ph id="ph1">&amp;lt;</ph>!--...--<ph id="ph2">&amp;gt;</ph>을 비동기적으로 작성합니다.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteComment" /&gt;</ph> operation.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see langword="WriteComment" /&gt;</ph> 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteComment%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteComment%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>The name of the DOCTYPE.</source>
          <target state="translated">DOCTYPE의 이름입니다.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>This must be non-empty.</source>
          <target state="translated">이 이름은 비어 있지 않아야 합니다.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>If non-null it also writes PUBLIC "pubid" "sysid" where <bpt id="p1">&lt;c&gt;</bpt>pubid<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>sysid<ept id="p2">&lt;/c&gt;</ept> are replaced with the value of the given arguments.</source>
          <target state="translated">null이 아닌 경우 PUBLIC "pubid" "sysid"도 씁니다. 여기서 <bpt id="p1">&lt;c&gt;</bpt>pubid<ept id="p1">&lt;/c&gt;</ept>와 <bpt id="p2">&lt;c&gt;</bpt>sysid<ept id="p2">&lt;/c&gt;</ept>는 지정된 인수 값으로 바뀝니다.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>pubid<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph> and <bpt id="p2">&lt;c&gt;</bpt>sysid<ept id="p2">&lt;/c&gt;</ept> is non-null it writes SYSTEM "sysid" where <bpt id="p3">&lt;c&gt;</bpt>sysid<ept id="p3">&lt;/c&gt;</ept> is replaced with the value of this argument.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>pubid<ept id="p1">&lt;/c&gt;</ept>가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이고 <bpt id="p2">&lt;c&gt;</bpt>sysid<ept id="p2">&lt;/c&gt;</ept>가 null이 아닌 경우 SYSTEM "sysid"를 씁니다. 여기서 <bpt id="p3">&lt;c&gt;</bpt>sysid<ept id="p3">&lt;/c&gt;</ept>는 이 인수 값으로 바뀝니다.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>If non-null it writes [subset] where subset is replaced with the value of this argument.</source>
          <target state="translated">null이 아닌 경우 하위 집합이 이 인수 값으로 대체되는 [subset]을 작성합니다.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>When overridden in a derived class, writes the DOCTYPE declaration with the specified name and optional attributes.</source>
          <target state="translated">파생 클래스에서 재정의되면 지정된 이름 및 선택적 특성이 있는 DOCTYPE 선언을 작성합니다.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>This method does not check for invalid characters in <ph id="ph1">`pubid`</ph>, <ph id="ph2">`sysid`</ph> or <ph id="ph3">`subset`</ph>.</source>
          <target state="translated">이 메서드는 잘못 된 문자에 대 한 확인 하지 않습니다 <ph id="ph1">`pubid`</ph>, <ph id="ph2">`sysid`</ph> 또는 <ph id="ph3">`subset`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>It also does not check that the internal subset is well-formed.</source>
          <target state="translated">또한 확인 하지 않습니다 내부 하위 집합이 올바른 형식이 있습니다.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> does not validate the data that is passed to the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteDocType%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> 에 전달 되는 데이터의 유효성을 검사 하지 않습니다는 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteDocType%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>You should not pass arbitrary data to this method.</source>
          <target state="translated">이 메서드를 임의의 데이터를 전달 하지 않아야 합니다.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteDocTypeAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteDocTypeAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>The following example writes an XML file representing a book.</source>
          <target state="translated">다음 예제에서는 책을 나타내는 XML 파일을 씁니다.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>The value for <ph id="ph1">&lt;paramref name="name" /&gt;</ph> would result in invalid XML.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph>의 값이 잘못된 XML이 되는 경우</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
          <source>The name of the DOCTYPE.</source>
          <target state="translated">DOCTYPE의 이름입니다.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
          <source>This must be non-empty.</source>
          <target state="translated">이 이름은 비어 있지 않아야 합니다.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
          <source>If non-null it also writes PUBLIC "pubid" "sysid" where <bpt id="p1">&lt;c&gt;</bpt>pubid<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>sysid<ept id="p2">&lt;/c&gt;</ept> are replaced with the value of the given arguments.</source>
          <target state="translated">null이 아닌 경우 PUBLIC "pubid" "sysid"도 씁니다. 여기서 <bpt id="p1">&lt;c&gt;</bpt>pubid<ept id="p1">&lt;/c&gt;</ept>와 <bpt id="p2">&lt;c&gt;</bpt>sysid<ept id="p2">&lt;/c&gt;</ept>는 지정된 인수 값으로 바뀝니다.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>pubid<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph> and <bpt id="p2">&lt;c&gt;</bpt>sysid<ept id="p2">&lt;/c&gt;</ept> is non-null it writes SYSTEM "sysid" where <bpt id="p3">&lt;c&gt;</bpt>sysid<ept id="p3">&lt;/c&gt;</ept> is replaced with the value of this argument.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>pubid<ept id="p1">&lt;/c&gt;</ept>가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이고 <bpt id="p2">&lt;c&gt;</bpt>sysid<ept id="p2">&lt;/c&gt;</ept>가 null이 아닌 경우 SYSTEM "sysid"를 씁니다. 여기서 <bpt id="p3">&lt;c&gt;</bpt>sysid<ept id="p3">&lt;/c&gt;</ept>는 이 인수 값으로 바뀝니다.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
          <source>If non-null it writes [subset] where subset is replaced with the value of this argument.</source>
          <target state="translated">null이 아닌 경우 하위 집합이 이 인수 값으로 대체되는 [subset]을 작성합니다.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
          <source>Asynchronously writes the DOCTYPE declaration with the specified name and optional attributes.</source>
          <target state="translated">지정된 이름과 선택적 특성을 사용하여 DOCTYPE 선언을 비동기적으로 작성합니다.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteDocType" /&gt;</ph> operation.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see langword="WriteDocType" /&gt;</ph> 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteDocType%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteDocType%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>Writes an element containing a string value.</source>
          <target state="translated">문자열 값이 포함된 요소를 씁니다.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementStringAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementStringAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">요소의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>The value of the element.</source>
          <target state="translated">요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>Writes an element with the specified local name and value.</source>
          <target state="translated">지정된 로컬 이름 및 값을 사용하여 요소를 작성합니다.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementStringAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementStringAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>The following example uses several write methods to create an XML fragment.</source>
          <target state="translated">다음 예제에서는 XML 조각을 만드는 몇 가지 쓰기 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="localName" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="localName" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph> 또는 빈 문자열인 경우</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>The parameter values are not valid.</source>
          <target state="translated">매개 변수 값이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</source>
          <target state="translated">유효한 XML 문자이나 출력 인코딩에는 유효하지 않은 버퍼에 문자가 있습니다.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</source>
          <target state="translated">예를 들어, 출력 인코딩이 ASCII인 경우, 요소 및 특성 이름에 대해서는 0부터 127까지 범주의 문자만 사용해야 합니다.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</source>
          <target state="translated">유효하지 않은 문자가 이 메서드의 인수 안이나 버퍼에 쓰고 있었던 이전 메서드의 인수 안에 있을지도 모릅니다.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</source>
          <target state="translated">이러한 문자는 가능한 경우 (예를 들어, 텍스트 노드 또는 특성 값에서) 문자 엔터티 참조에 의해 이스케이프됩니다.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</source>
          <target state="translated">그러나, 문자 엔터티 참조가 요소 및 특성 이름, 주석, 처리 명령, 또는 CDATA 섹션에서는 허용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">요소의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>The namespace URI to associate with the element.</source>
          <target state="translated">요소와 연결할 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>The value of the element.</source>
          <target state="translated">요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>Writes an element with the specified local name, namespace URI, and value.</source>
          <target state="translated">지정된 로컬 이름, 네임스페이스 URI 및 값을 사용하여 요소를 작성합니다.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementStringAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementStringAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>The following example uses several write methods to create an XML fragment.</source>
          <target state="translated">다음 예제에서는 XML 조각을 만드는 몇 가지 쓰기 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="localName" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="localName" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph> 또는 빈 문자열인 경우</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>The parameter values are not valid.</source>
          <target state="translated">매개 변수 값이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</source>
          <target state="translated">유효한 XML 문자이나 출력 인코딩에는 유효하지 않은 버퍼에 문자가 있습니다.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</source>
          <target state="translated">예를 들어, 출력 인코딩이 ASCII인 경우, 요소 및 특성 이름에 대해서는 0부터 127까지 범주의 문자만 사용해야 합니다.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</source>
          <target state="translated">유효하지 않은 문자가 이 메서드의 인수 안이나 버퍼에 쓰고 있었던 이전 메서드의 인수 안에 있을지도 모릅니다.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</source>
          <target state="translated">이러한 문자는 가능한 경우 (예를 들어, 텍스트 노드 또는 특성 값에서) 문자 엔터티 참조에 의해 이스케이프됩니다.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</source>
          <target state="translated">그러나, 문자 엔터티 참조가 요소 및 특성 이름, 주석, 처리 명령, 또는 CDATA 섹션에서는 허용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>The prefix of the element.</source>
          <target state="translated">요소의 접두사입니다.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">요소의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>The namespace URI of the element.</source>
          <target state="translated">요소의 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>The value of the element.</source>
          <target state="translated">요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>Writes an element with the specified prefix, local name, namespace URI, and value.</source>
          <target state="translated">지정된 접두사, 로컬 이름, 네임스페이스 URI 및 값을 사용하여 요소를 씁니다.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementStringAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementStringAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="localName" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="localName" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph> 또는 빈 문자열인 경우</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>The parameter values are not valid.</source>
          <target state="translated">매개 변수 값이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</source>
          <target state="translated">유효한 XML 문자이나 출력 인코딩에는 유효하지 않은 버퍼에 문자가 있습니다.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</source>
          <target state="translated">예를 들어, 출력 인코딩이 ASCII인 경우, 요소 및 특성 이름에 대해서는 0부터 127까지 범주의 문자만 사용해야 합니다.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</source>
          <target state="translated">유효하지 않은 문자가 이 메서드의 인수 안이나 버퍼에 쓰고 있었던 이전 메서드의 인수 안에 있을지도 모릅니다.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</source>
          <target state="translated">이러한 문자는 가능한 경우 (예를 들어, 텍스트 노드 또는 특성 값에서) 문자 엔터티 참조에 의해 이스케이프됩니다.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</source>
          <target state="translated">그러나, 문자 엔터티 참조가 요소 및 특성 이름, 주석, 처리 명령, 또는 CDATA 섹션에서는 허용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
          <source>The prefix of the element.</source>
          <target state="translated">요소의 접두사입니다.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">요소의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
          <source>The namespace URI of the element.</source>
          <target state="translated">요소의 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
          <source>The value of the element.</source>
          <target state="translated">요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
          <source>Asynchronously writes an element with the specified prefix, local name, namespace URI, and value.</source>
          <target state="translated">지정된 접두사, 로컬 이름, 네임스페이스 URI 및 값을 사용하여 요소를 비동기적으로 작성합니다.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteElementString" /&gt;</ph> operation.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see langword="WriteElementString" /&gt;</ph> 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementString%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteElementString%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndAttribute">
          <source>When overridden in a derived class, closes the previous <ph id="ph1">&lt;see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /&gt;</ph> call.</source>
          <target state="translated">파생 클래스에서 재정의되면 이전 <ph id="ph1">&lt;see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /&gt;</ph> 호출을 닫습니다.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndAttribute">
          <source>If you call <ph id="ph1">`WriteStartAttribute`</ph>, you can close the attribute with this method.</source>
          <target state="translated">호출 하는 경우 <ph id="ph1">`WriteStartAttribute`</ph>,이 방법으로 특성을 닫을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndAttribute">
          <source>You can also close the attribute by calling <ph id="ph1">`WriteStartAttribute`</ph> again, calling <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph>, or calling <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteEndElement%2A&gt;</ph>.</source>
          <target state="translated">호출 하 여 특성을 닫을 수도 <ph id="ph1">`WriteStartAttribute`</ph> 다시 호출 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph>, 또는 호출 <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteEndElement%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndAttribute">
          <source>When you use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> methods to output XML, the elements and attributes will not be written until you call the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Close%2A&gt;</ph> method.</source>
          <target state="translated">사용 하는 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> XML 요소 및 특성을 출력 하는 메서드를 호출 하기 전에 기록 되지 것입니다는 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Close%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndAttribute">
          <source>For example, if you are using the XmlWriter to populate an <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>, until you close the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>, you will not be able to observe the written elements and attributes in the target document.</source>
          <target state="translated">예를 들어를 채우는 XmlWriter를 사용 하는 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>닫을 때까지는 <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>, 쓰여진된 요소 및 대상 문서에 특성을 확인할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndAttribute">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndAttributeAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndAttributeAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndAttribute">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndAttribute">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndAttributeAsync">
          <source>Asynchronously closes the previous <ph id="ph1">&lt;see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /&gt;</ph> call.</source>
          <target state="translated">이전 <ph id="ph1">&lt;see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /&gt;</ph> 호출을 비동기적으로 닫습니다.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndAttributeAsync">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteEndAttribute" /&gt;</ph> operation.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see langword="WriteEndAttribute" /&gt;</ph> 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndAttributeAsync">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndAttribute%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndAttribute%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndAttributeAsync">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndAttributeAsync">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndAttributeAsync">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndDocument">
          <source>When overridden in a derived class, closes any open elements or attributes and puts the writer back in the Start state.</source>
          <target state="translated">파생 클래스에서 재정의되면 열려 있는 모든 요소나 특성을 닫고 작성기를 다시 시작 상태로 설정합니다.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndDocument">
          <source>When you use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> methods to output XML, the elements and attributes will not be written until you call the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Close%2A&gt;</ph> method.</source>
          <target state="translated">사용 하는 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> XML 요소 및 특성을 출력 하는 메서드를 호출 하기 전에 기록 되지 것입니다는 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Close%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndDocument">
          <source>For example, if you are using the XmlWriter to populate an <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>, until you close the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>, you will not be able to observe the written elements and attributes in the target document.</source>
          <target state="translated">예를 들어를 채우는 XmlWriter를 사용 하는 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>닫을 때까지는 <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>, 쓰여진된 요소 및 대상 문서에 특성을 확인할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndDocument">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndDocumentAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndDocumentAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndDocument">
          <source>The following example writes an XML file representing a book.</source>
          <target state="translated">다음 예제에서는 책을 나타내는 XML 파일을 씁니다.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndDocument">
          <source>The XML document is invalid.</source>
          <target state="translated">XML 문서가 잘못된 경우</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndDocument">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndDocument">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndDocumentAsync">
          <source>Asynchronously closes any open elements or attributes and puts the writer back in the Start state.</source>
          <target state="translated">열려 있는 모든 요소나 특성을 비동기적으로 닫고 작성기를 시작 상태로 설정합니다.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndDocumentAsync">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteEndDocument" /&gt;</ph> operation.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see langword="WriteEndDocument" /&gt;</ph> 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndDocumentAsync">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndDocument%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndDocument%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndDocumentAsync">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndDocumentAsync">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndDocumentAsync">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndElement">
          <source>When overridden in a derived class, closes one element and pops the corresponding namespace scope.</source>
          <target state="translated">파생 클래스에서 재정의되면 한 요소를 닫고 해당 네임스페이스 범위를 팝합니다.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndElement">
          <source>If the element contains no content, a short end tag "/&gt;" is written; otherwise, a full end tag is written.</source>
          <target state="translated">짧은 끝 태그 요소에 콘텐츠가 없는 경우 "/ &gt;" 작성 됩니다. 그렇지 않으면 전체 끝 태그를 작성 됩니다.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndElement">
          <source>When you use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> methods to output XML, the elements and attributes will not be written until you call the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Close%2A&gt;</ph> method.</source>
          <target state="translated">사용 하는 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> XML 요소 및 특성을 출력 하는 메서드를 호출 하기 전에 기록 되지 것입니다는 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Close%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndElement">
          <source>For example, if you are using the XmlWwriter to populate an <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>, until you close the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>, you will not be able to observe the written elements and attributes in the target document.</source>
          <target state="translated">예를 들어는 XmlWwriter 채우는 데 사용 하는 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>닫을 때까지는 <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>, 쓰여진된 요소 및 대상 문서에 특성을 확인할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndElement">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndElementAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndElementAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndElement">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndElement%2A&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteFullEndElement%2A&gt;</ph> methods.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndElement%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteFullEndElement%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndElement">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndElement">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndElementAsync">
          <source>Asynchronously closes one element and pops the corresponding namespace scope.</source>
          <target state="translated">한 요소를 비동기적으로 닫고 해당 네임스페이스 범위를 팝합니다.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndElementAsync">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteEndElement" /&gt;</ph> operation.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see langword="WriteEndElement" /&gt;</ph> 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndElementAsync">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndElement%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndElement%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEndElementAsync">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndElementAsync">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEndElementAsync">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEntityRef(System.String)">
          <source>The name of the entity reference.</source>
          <target state="translated">엔터티 참조의 이름입니다.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEntityRef(System.String)">
          <source>When overridden in a derived class, writes out an entity reference as <ph id="ph1">&lt;see langword="&amp;amp;name;" /&gt;</ph>.</source>
          <target state="translated">파생 클래스에서 재정의되면 <ph id="ph1">&lt;see langword="&amp;amp;name;" /&gt;</ph> 같이 엔터티 참조를 작성합니다.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEntityRef(System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEntityRefAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEntityRefAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEntityRef(System.String)">
          <source>The following example writes an XML file representing a book.</source>
          <target state="translated">다음 예제에서는 책을 나타내는 XML 파일을 씁니다.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEntityRef(System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is either <ph id="ph2">&lt;see langword="null" /&gt;</ph> or <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph> 또는 <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEntityRef(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEntityRef(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)">
          <source>The name of the entity reference.</source>
          <target state="translated">엔터티 참조의 이름입니다.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)">
          <source>Asynchronously writes out an entity reference as <ph id="ph1">&lt;see langword="&amp;amp;name;" /&gt;</ph>.</source>
          <target state="translated">엔터티 참조를 <ph id="ph1">&lt;see langword="&amp;amp;name;" /&gt;</ph>으로 비동기적으로 작성합니다.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteEntityRef" /&gt;</ph> operation.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see langword="WriteEntityRef" /&gt;</ph> 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEntityRef%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEntityRef%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteFullEndElement">
          <source>When overridden in a derived class, closes one element and pops the corresponding namespace scope.</source>
          <target state="translated">파생 클래스에서 재정의되면 한 요소를 닫고 해당 네임스페이스 범위를 팝합니다.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteFullEndElement">
          <source>This method always writes the full end tag.</source>
          <target state="translated">이 메서드는 항상 전체 끝 태그를 씁니다.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteFullEndElement">
          <source>This is useful when dealing with elements that must include a full end tag.</source>
          <target state="translated">전체 끝 태그를 포함 해야 하는 요소를 처리할 때 유용 합니다.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteFullEndElement">
          <source>For example, browsers expect HTML script blocks to be closed with "<ph id="ph1">\&lt;</ph>/script&gt;".</source>
          <target state="translated">브라우저에서 HTML 스크립트 블록으로 끝나도록를 예상 하는 예를 들어 " <ph id="ph1">\&lt;</ph> /&gt;"입니다.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteFullEndElement">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteFullEndElementAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteFullEndElementAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteFullEndElement">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndElement%2A&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteFullEndElement%2A&gt;</ph> methods.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndElement%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteFullEndElement%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteFullEndElement">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteFullEndElement">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteFullEndElementAsync">
          <source>Asynchronously closes one element and pops the corresponding namespace scope.</source>
          <target state="translated">한 요소를 비동기적으로 닫고 해당 네임스페이스 범위를 팝합니다.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteFullEndElementAsync">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteFullEndElement" /&gt;</ph> operation.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see langword="WriteFullEndElement" /&gt;</ph> 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteFullEndElementAsync">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteFullEndElement%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteFullEndElement%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteFullEndElementAsync">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteFullEndElementAsync">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteFullEndElementAsync">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteName(System.String)">
          <source>The name to write.</source>
          <target state="translated">작성할 이름입니다.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteName(System.String)">
          <source>When overridden in a derived class, writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (<ph id="ph1">http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)</ph>.</source>
          <target state="translated">파생 클래스에서 재정의되면 W3C XML 1.0 권장 사항(<ph id="ph1">http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)</ph>)에 따라 유효한 이름이 되도록 지정된 이름을 작성합니다.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteName(System.String)">
          <source>If <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter.Namespaces%2A&gt;</ph> is set to <ph id="ph2">`true`</ph>, <ph id="ph3">`WriteName`</ph> also checks that the name is also valid according to the W3C Namespaces in XML recommendation.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter.Namespaces%2A&gt;</ph> 로 설정 된 <ph id="ph2">`true`</ph>, <ph id="ph3">`WriteName`</ph> name은 XML 권장 사항에 W3C 네임 스페이스에 유효도 확인 합니다.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteName(System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNameAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNameAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteName(System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is not a valid XML name; or <ph id="ph2">&lt;paramref name="name" /&gt;</ph> is either <ph id="ph3">&lt;see langword="null" /&gt;</ph> or <ph id="ph4">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph>이 올바른 XML 이름이 아니거나 <ph id="ph2">&lt;paramref name="name" /&gt;</ph>이 <ph id="ph3">&lt;see langword="null" /&gt;</ph> 또는 <ph id="ph4">&lt;see langword="String.Empty" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteName(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteName(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNameAsync(System.String)">
          <source>The name to write.</source>
          <target state="translated">작성할 이름입니다.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNameAsync(System.String)">
          <source>Asynchronously writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (<ph id="ph1">http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)</ph>.</source>
          <target state="translated">W3C XML 1.0 권장 사항(<ph id="ph1">http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)</ph>)에 따라 유효한 이름이 되도록 지정된 이름을 비동기적으로 작성합니다.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNameAsync(System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteName" /&gt;</ph> operation.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see langword="WriteName" /&gt;</ph> 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNameAsync(System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteName%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteName%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNameAsync(System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNameAsync(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNameAsync(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNmToken(System.String)">
          <source>The name to write.</source>
          <target state="translated">작성할 이름입니다.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNmToken(System.String)">
          <source>When overridden in a derived class, writes out the specified name, ensuring it is a valid NmToken according to the W3C XML 1.0 recommendation (<ph id="ph1">http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)</ph>.</source>
          <target state="translated">파생 클래스에서 재정의되면 W3C XML 1.0 권장 사항(<ph id="ph1">http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)</ph>)에 따라 유효한 NmToken이 되도록 지정된 이름을 작성합니다.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNmToken(System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNmTokenAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNmTokenAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNmToken(System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is not a valid NmToken; or <ph id="ph2">&lt;paramref name="name" /&gt;</ph> is either <ph id="ph3">&lt;see langword="null" /&gt;</ph> or <ph id="ph4">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph>이 올바른 NmToken이 아니거나 <ph id="ph2">&lt;paramref name="name" /&gt;</ph>이 <ph id="ph3">&lt;see langword="null" /&gt;</ph> 또는 <ph id="ph4">&lt;see langword="String.Empty" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNmToken(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNmToken(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)">
          <source>The name to write.</source>
          <target state="translated">작성할 이름입니다.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)">
          <source>Asynchronously writes out the specified name, ensuring it is a valid NmToken according to the W3C XML 1.0 recommendation (<ph id="ph1">http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)</ph>.</source>
          <target state="translated">W3C XML 1.0 권장 사항(<ph id="ph1">http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)</ph>)에 따라 유효한 NmToken이 되도록 지정된 이름을 비동기적으로 작성합니다.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteNmToken" /&gt;</ph> operation.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see langword="WriteNmToken" /&gt;</ph> 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNmToken%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNmToken%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>Copies everything from the source object to the current writer instance.</source>
          <target state="translated">소스 개체 전체를 현재 작성기 인스턴스에 복사합니다.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNodeAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNodeAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> to read from.</source>
          <target state="translated">읽을 소스 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to copy the default attributes from the <ph id="ph2">&lt;see langword="XmlReader" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>에서 기본 특성을 복사하려면 <ph id="ph2">&lt;see langword="XmlReader" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>When overridden in a derived class, copies everything from the reader to the writer and moves the reader to the start of the next sibling.</source>
          <target state="translated">파생 클래스에서 재정의되면 판독기에서 작성기로 모든 항목을 복사하고 판독기를 다음 형제 노드의 시작 부분으로 이동합니다.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>The following table shows the supported node types for this method.</source>
          <target state="translated">다음 표에서이 메서드는 지원 되는 노드 형식을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>NodeType</source>
          <target state="translated">노드 형식</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>WriteNode Behavior</source>
          <target state="translated">WriteNode 동작</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>Writes out all the nodes irrespective of type.</source>
          <target state="translated">형식에 관계 없이 모든 노드를 작성합니다.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>That is, the writer consumes the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> and writes out all the nodes read including attributes, processing instructions, comments, and so on.</source>
          <target state="translated">즉, 작성기를 사용는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 모든 노드를 작성 하 여 특성, 처리 명령, 주석, 읽습니다.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>This situation occurs when the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> is in an initial state.</source>
          <target state="translated">이러한 상황이 발생 때는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 초기 상태입니다.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>(The <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadState%2A?displayProperty=nameWithType&gt;</ph> property returns <ph id="ph2">`ReaderState.Initial`</ph>).</source>
          <target state="translated">(의 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadState%2A?displayProperty=nameWithType&gt;</ph> 속성에서 반환 <ph id="ph2">`ReaderState.Initial`</ph>).</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>Writes out the element node and any attribute nodes.</source>
          <target state="translated">요소 노드 및 특성 노드를 작성합니다.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>No operation.</source>
          <target state="translated">작동하지 않습니다.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>Use <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttribute%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> instead.</source>
          <target state="translated">대신 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttribute%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph>를 사용하십시오.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>Writes out the text node.</source>
          <target state="translated">텍스트 노드를 작성합니다.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>Writes out the CDATA section node.</source>
          <target state="translated">CDATA 섹션 노드를 작성합니다.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>Writes out the entity reference node.</source>
          <target state="translated">엔터티 참조 노드를 작성합니다.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>Writes out the processing instruction node.</source>
          <target state="translated">처리 명령 노드를 작성합니다.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>Writes out the comment node.</source>
          <target state="translated">주석 노드를 작성합니다.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>Writes out the document type node.</source>
          <target state="translated">문서 형식 노드를 작성합니다.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>Writes out the significant white space node.</source>
          <target state="translated">유효 공백 노드를 작성 합니다.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>Writes out the white space node.</source>
          <target state="translated">공백 노드를 작성 합니다.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>Writes out the end element tag.</source>
          <target state="translated">끝 요소 태그를 작성합니다.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>No operation.</source>
          <target state="translated">작동하지 않습니다.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>Writes out the XML declaration node.</source>
          <target state="translated">XML 선언 노드를 작성합니다.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>If the reader is in the initial state, this method moves the reader to the end of file.</source>
          <target state="translated">판독기 초기 상태에 있으면이 메서드는 파일의 끝에 판독기를 이동 합니다.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>If the reader is already at the end of file or in a closed state, this method is non-operational.</source>
          <target state="translated">판독기 closed 상태에서 또는 파일 끝에 이미 있으면이 메서드는 작동 하지 않는 합니다.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>The following C# code copies an entire XML input document to the console:</source>
          <target state="translated">다음 C# 코드는 콘솔에는 전체 XML 입력된 문서를 복사합니다.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>If you have moved off the root node and are positioned elsewhere in the document the following C# example correctly writes out the nodes.</source>
          <target state="translated">루트 노드 외부로 이동 하 고 다른 곳에서 다음 C# 예제 올바르게 노드를 작성 하는 문서에 배치 합니다.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>If the reader is configured to return white space and the writer has is configured to indent output, <ph id="ph1">`WriteNode`</ph> may produce strange output.</source>
          <target state="translated">출력을 들여쓰기에 구성 된 경우 공백을 반환 하도록 구성 된 판독기 및 작성기가 <ph id="ph1">`WriteNode`</ph> 이상한 결과가 만들어질 수 있습니다.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>You will essentially be getting double formatting.</source>
          <target state="translated">기본적으로 가져오는 것은 double 형식 지정 합니다.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNodeAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNodeAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>The following example writes the first and last book nodes out to the console.</source>
          <target state="translated">다음 예제에서는 콘솔에 첫 번째 및 마지막 책 노드를 씁니다.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>The example uses the file, <ph id="ph1">`books.xml`</ph>, as input.</source>
          <target state="translated">이 예제에서는 파일을 사용 하 여 <ph id="ph1">`books.xml`</ph>입력으로 합니다.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> contains invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph>에 잘못된 문자가 들어 있는 경우</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> to copy from.</source>
          <target state="translated">복사할 원본 <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to copy the default attributes; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본 특성을 복사하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>Copies everything from the <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> object to the writer.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> 개체 전체를 작성기에 복사합니다.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>The position of the <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> remains unchanged.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> 위치는 변경되지 않습니다.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>The following table shows the supported <ph id="ph1">`XPath`</ph> node types for this method.</source>
          <target state="translated">다음 표에서 지원 되는 <ph id="ph1">`XPath`</ph> 이 메서드에 대 한 노드 형식입니다.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>XPathNodeType</source>
          <target state="translated">XPathNodeType</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>WriteNode Behavior</source>
          <target state="translated">WriteNode 동작</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>Writes out all the nodes irrespective of type.</source>
          <target state="translated">형식에 관계 없이 모든 노드를 작성합니다.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>That is, the writer consumes the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> and writes out all the nodes from the root node (including attributes, processing instructions, comments and so on.)</source>
          <target state="translated">즉, 작성기를 사용는 <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> 루트 노드 (특성, 처리 명령, 주석 포함)에서 모든 노드를 작성 하 고</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>Writes out the element node and any attribute nodes.</source>
          <target state="translated">요소 노드 및 특성 노드를 작성합니다.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>No operation.</source>
          <target state="translated">작동하지 않습니다.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>Use <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttribute%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> instead.</source>
          <target state="translated">대신 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttribute%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph>를 사용하십시오.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>Writes out the text node.</source>
          <target state="translated">텍스트 노드를 작성합니다.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>No operation.</source>
          <target state="translated">작동하지 않습니다.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttribute%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> method to write the namespace declaration.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttribute%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> 메서드가 네임 스페이스 선언을 작성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>Writes out the processing instruction node.</source>
          <target state="translated">처리 명령 노드를 작성합니다.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>Writes out the comment node.</source>
          <target state="translated">주석 노드를 작성합니다.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>Writes out the significant white space node.</source>
          <target state="translated">유효 공백 노드를 작성 합니다.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>Writes out the white space node.</source>
          <target state="translated">공백 노드를 작성 합니다.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNodeAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNodeAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNode%2A&gt;</ph> method to copy the first book node from a document and write it to the console.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNode%2A&gt;</ph> 메서드를 문서에서 첫 번째 book 노드를 복사 하 고 콘솔에 작성 합니다.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>The example uses the books.xml file as input.</source>
          <target state="translated">이 예제에서는 입력으로 books.xml 파일을 사용합니다.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="navigator" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="navigator" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>Asynchronously copies everything from the source object to the current writer instance.</source>
          <target state="translated">소스 개체 전체를 현재 작성기 인스턴스에 비동기적으로 복사합니다.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNode%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNode%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> to read from.</source>
          <target state="translated">읽을 소스 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to copy the default attributes from the <ph id="ph2">&lt;see langword="XmlReader" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>에서 기본 특성을 복사하려면 <ph id="ph2">&lt;see langword="XmlReader" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)">
          <source>Asynchronously copies everything from the reader to the writer and moves the reader to the start of the next sibling.</source>
          <target state="translated">파생 클래스에서 재정의되면 판독기에서 작성기로 모든 항목을 비동기적으로 복사하고 판독기를 다음 형제 노드의 시작 부분으로 이동합니다.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteNode" /&gt;</ph> operation.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see langword="WriteNode" /&gt;</ph> 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNode%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNode%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> to copy from.</source>
          <target state="translated">복사할 원본 <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to copy the default attributes; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본 특성을 복사하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>Asynchronously copies everything from the <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> object to the writer.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> 개체의 모든 항목을 작성기에 비동기적으로 복사합니다.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>The position of the <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> remains unchanged.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> 위치는 변경되지 않습니다.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteNode" /&gt;</ph> operation.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see langword="WriteNode" /&gt;</ph> 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNode%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteNode%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>The name of the processing instruction.</source>
          <target state="translated">처리 명령의 이름입니다.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>The text to include in the processing instruction.</source>
          <target state="translated">처리 명령에 포함할 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>When overridden in a derived class, writes out a processing instruction with a space between the name and text as follows: <ph id="ph1">&amp;lt;</ph>?name text?<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">파생 클래스에서 재정의되면 <ph id="ph1">&amp;lt;</ph>?name text?<ph id="ph2">&amp;gt;</ph> 같이 이름과 텍스트 사이에 공백이 있는 처리 명령을 작성합니다.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>This method can be used to write the XML declaration (rather than <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocument%2A&gt;</ph>).</source>
          <target state="translated">이 메서드를 사용 하 여 XML 선언을 작성할 수 있습니다 (대신 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocument%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>This could result in the encoding attribute being incorrectly written.</source>
          <target state="translated">이 제대로 작성 되지 인코딩 특성이 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>For example, the following C# code would result in an invalid XML document because the default encoding is UTF-8.</source>
          <target state="translated">예를 들어 다음 C# 코드 이므로 기본 인코딩은 u t F-8 잘못 된 XML 문서에서 초래 합니다.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>If <ph id="ph1">`text`</ph> is either <ph id="ph2">`null`</ph> or <ph id="ph3">`String.Empty`</ph>, this method writes a <ph id="ph4">`ProcessingInstruction`</ph> with no data content, for example <ph id="ph5">\&lt;</ph>?name?&gt;.</source>
          <target state="translated">경우 <ph id="ph1">`text`</ph> 있거나 <ph id="ph2">`null`</ph> 또는 <ph id="ph3">`String.Empty`</ph>,이 메서드는 작성는 <ph id="ph4">`ProcessingInstruction`</ph> 데이터 예제에 대 한 콘텐츠가 없는 <ph id="ph5">\&lt;</ph>? 이름? &gt; 합니다.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>If text contains an invalid sequence of "?&gt;", the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> can either throw an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> (<ph id="ph3">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> objects) or insert a space "?</source>
          <target state="translated">텍스트에 잘못 된 시퀀스를 포함 하는 경우 "? &gt;", <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> throw 하거나 수는 <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> (<ph id="ph3">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> 개체)에 공백을 넣으세요. 또는 "?</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>&gt;" to avoid writing invalid XML (<ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> objects created by the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> method).</source>
          <target state="translated">&gt; "잘못 된 XML을 작성 하지 않는 (<ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> 가 만든 개체는 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> 메서드).</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteProcessingInstructionAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteProcessingInstructionAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>The following example writes an XML file representing a book.</source>
          <target state="translated">다음 예제에서는 책을 나타내는 XML 파일을 씁니다.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>The text would result in a non-well formed XML document.</source>
          <target state="translated">텍스트로 인해 XML 문서가 제대로 구성되지 않은 경우</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is either <ph id="ph2">&lt;see langword="null" /&gt;</ph> or <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph> 또는 <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>This method is being used to create an XML declaration after <ph id="ph1">&lt;see cref="M:System.Xml.XmlWriter.WriteStartDocument" /&gt;</ph> has already been called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Xml.XmlWriter.WriteStartDocument" /&gt;</ph>가 이미 호출된 후 이 메서드를 사용하여 XML 선언을 만드는 경우</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)">
          <source>The name of the processing instruction.</source>
          <target state="translated">처리 명령의 이름입니다.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)">
          <source>The text to include in the processing instruction.</source>
          <target state="translated">처리 명령에 포함할 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)">
          <source>Asynchronously writes out a processing instruction with a space between the name and text as follows: <ph id="ph1">&amp;lt;</ph>?name text?<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">이름과 텍스트 사이의 공백을 사용하여 처리 명령을 비동기적으로 씁니다(예: <ph id="ph1">&amp;lt;</ph>?name text?<ph id="ph2">&amp;gt;</ph>).</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteProcessingInstruction" /&gt;</ph> operation.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see langword="WriteProcessingInstruction" /&gt;</ph> 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source>The local name to write.</source>
          <target state="translated">작성할 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source>The namespace URI for the name.</source>
          <target state="translated">이름의 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source>When overridden in a derived class, writes out the namespace-qualified name.</source>
          <target state="translated">파생 클래스에서 재정의되면 네임스페이스로 한정된 이름을 작성합니다.</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source>This method looks up the prefix that is in scope for the given namespace.</source>
          <target state="translated">이 메서드는 지정된 네임스페이스의 범위에 속하는 접두사를 찾습니다.</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source>If <ph id="ph1">`ns`</ph> maps to the current default namespace, no prefix is generated.</source>
          <target state="translated">경우 <ph id="ph1">`ns`</ph> 접두사가 없습니다. 현재 기본 네임 스페이스로 맵이 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source>When writing attribute values, this method generates a prefix if <ph id="ph1">`ns`</ph> is not found.</source>
          <target state="translated">이 메서드는 접두사는 경우 생성 특성 값을 작성할 때 <ph id="ph1">`ns`</ph> 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source>When writing element content, it throws an exception if <ph id="ph1">`ns`</ph> is not found.</source>
          <target state="translated">이면 예외가 발생 요소 콘텐츠를 작성할 때 <ph id="ph1">`ns`</ph> 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source>If a class derived from the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> does not override this method <ph id="ph2">`localName`</ph> is not checked to be a valid W3C XML name.</source>
          <target state="translated">클래스에서 파생 하는 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> 이 메서드를 재정의 하지 않는 <ph id="ph2">`localName`</ph> 은 유효한 W3C XML 이름으로 확인 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source>In such case, before calling this method, the validity of the string can be checked by <ph id="ph1">&lt;xref:System.Xml.XmlReader.IsName%2A&gt;</ph> method.</source>
          <target state="translated">이러한 경우에이 메서드를 호출 하기 전에 문자열의 유효성을 검사 여 확인할 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader.IsName%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteQualifiedNameAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteQualifiedNameAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source>The example writes the following element:</source>
          <target state="translated">이 예제에서는 다음 요소를 작성합니다.</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="localName" /&gt;</ph> is either <ph id="ph2">&lt;see langword="null" /&gt;</ph> or <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="localName" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph> 또는 <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="localName" /&gt;</ph> is not a valid name.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="localName" /&gt;</ph>이 올바른 이름이 아닌 경우</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)">
          <source>The local name to write.</source>
          <target state="translated">작성할 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)">
          <source>The namespace URI for the name.</source>
          <target state="translated">이름의 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)">
          <source>Asynchronously writes out the namespace-qualified name.</source>
          <target state="translated">네임스페이스로 한정된 이름을 비동기적으로 작성합니다.</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)">
          <source>This method looks up the prefix that is in scope for the given namespace.</source>
          <target state="translated">이 메서드는 지정된 네임스페이스의 범위에 속하는 접두사를 찾습니다.</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteQualifiedName" /&gt;</ph> operation.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see langword="WriteQualifiedName" /&gt;</ph> 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteQualifiedName%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteQualifiedName%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>When overridden in a derived class, writes raw markup manually.</source>
          <target state="translated">파생 클래스에서 재정의되면 원시 태그를 직접 작성합니다.</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteRawAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteRawAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.String)">
          <source>String containing the text to write.</source>
          <target state="translated">작성할 텍스트를 포함하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.String)">
          <source>When overridden in a derived class, writes raw markup manually from a string.</source>
          <target state="translated">파생 클래스에서 재정의되면 문자열에서 원시 태그를 직접 작성합니다.</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteRaw(System.String)">
          <source>This method does not escape special characters.</source>
          <target state="translated">이 메서드는 특수 문자를 이스케이프 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteRaw(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> does not validate the data that is passed to the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteRaw%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> 에 전달 되는 데이터의 유효성을 검사 하지 않습니다는 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteRaw%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteRaw(System.String)">
          <source>You should not pass arbitrary data to this method.</source>
          <target state="translated">이 메서드를 임의의 데이터를 전달 하지 않아야 합니다.</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteRaw(System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteRawAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteRawAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteRaw(System.String)">
          <source>See <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter.WriteRaw%2A?displayProperty=nameWithType&gt;</ph> for an example using this method.</source>
          <target state="translated">참조 <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter.WriteRaw%2A?displayProperty=nameWithType&gt;</ph> 이 메서드를 사용 하는 예제에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.String)">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> is either <ph id="ph2">&lt;see langword="null" /&gt;</ph> or <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph> 또는 <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>Character array containing the text to write.</source>
          <target state="translated">쓸 텍스트가 포함된 문자 배열입니다.</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>The position within the buffer indicating the start of the text to write.</source>
          <target state="translated">쓸 텍스트의 시작을 나타내는 버퍼 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write.</source>
          <target state="translated">쓸 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>When overridden in a derived class, writes raw markup manually from a character buffer.</source>
          <target state="translated">파생 클래스에서 재정의되면 문자 버퍼에서 원시 태그를 직접 작성합니다.</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>This method does not escape special characters.</source>
          <target state="translated">이 메서드는 특수 문자를 이스케이프 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> does not validate the data that is passed to the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteRaw%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> 에 전달 되는 데이터의 유효성을 검사 하지 않습니다는 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteRaw%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>You should not pass arbitrary data to this method.</source>
          <target state="translated">이 메서드를 임의의 데이터를 전달 하지 않아야 합니다.</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteRawAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteRawAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>가 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>The buffer length minus <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">버퍼 길이에서 <ph id="ph1">&lt;paramref name="index" /&gt;</ph>를 빼면 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>보다 작은 경우</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>Asynchronously writes raw markup manually.</source>
          <target state="translated">직접 원시 태그를 비동기적으로 작성합니다.</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteRaw%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteRaw%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.String)">
          <source>String containing the text to write.</source>
          <target state="translated">작성할 텍스트를 포함하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.String)">
          <source>Asynchronously writes raw markup manually from a string.</source>
          <target state="translated">문자열에서 직접 원시 태그를 비동기적으로 작성합니다.</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteRaw" /&gt;</ph> operation.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see langword="WriteRaw" /&gt;</ph> 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteRaw%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteRaw%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
          <source>Character array containing the text to write.</source>
          <target state="translated">쓸 텍스트가 포함된 문자 배열입니다.</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
          <source>The position within the buffer indicating the start of the text to write.</source>
          <target state="translated">쓸 텍스트의 시작을 나타내는 버퍼 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write.</source>
          <target state="translated">쓸 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
          <source>Asynchronously writes raw markup manually from a character buffer.</source>
          <target state="translated">문자 버퍼에서 직접 원시 태그를 비동기적으로 작성합니다.</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteRaw" /&gt;</ph> operation.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see langword="WriteRaw" /&gt;</ph> 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteRaw%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteRaw%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>When overridden in a derived class, writes the start of an attribute.</source>
          <target state="translated">파생 클래스에서 재정의되면 특성의 시작을 작성합니다.</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">특성의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
          <source>Writes the start of an attribute with the specified local name.</source>
          <target state="translated">지정된 로컬 이름을 사용하여 특성의 시작 부분을 작성합니다.</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
          <source>This method enables you to write a value using multiple Write methods.</source>
          <target state="translated">이 메서드를 사용 하면 여러 쓰기 메서드를 사용 하 여 값을 쓸 수 있습니다.</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
          <source>There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</source>
          <target state="translated">유효한 XML 문자이나 출력 인코딩에는 유효하지 않은 버퍼에 문자가 있습니다.</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
          <source>For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</source>
          <target state="translated">예를 들어, 출력 인코딩이 ASCII인 경우, 요소 및 특성 이름에 대해서는 0부터 127까지 범주의 문자만 사용해야 합니다.</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
          <source>The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</source>
          <target state="translated">유효하지 않은 문자가 이 메서드의 인수 안이나 버퍼에 쓰고 있었던 이전 메서드의 인수 안에 있을지도 모릅니다.</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
          <source>Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</source>
          <target state="translated">이러한 문자는 가능한 경우 (예를 들어, 텍스트 노드 또는 특성 값에서) 문자 엔터티 참조에 의해 이스케이프됩니다.</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
          <source>However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</source>
          <target state="translated">그러나, 문자 엔터티 참조가 요소 및 특성 이름, 주석, 처리 명령, 또는 CDATA 섹션에서는 허용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">특성의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
          <source>The namespace URI of the attribute.</source>
          <target state="translated">특성의 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
          <source>Writes the start of an attribute with the specified local name and namespace URI.</source>
          <target state="translated">지정된 로컬 이름과 네임스페이스 URI를 사용하여 특성의 시작 부분을 작성합니다.</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
          <source>This is a more advanced version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> that allows you to write an attribute value using multiple write methods, such as <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteQualifiedName%2A&gt;</ph>, and so on.</source>
          <target state="translated">이 고급 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> 같은 여러 쓰기 메서드를 사용 하 여 특성 값을 작성할 수 있는 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteQualifiedName%2A&gt;</ph>등입니다.</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
          <source>See <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter.WriteStartAttribute%2A?displayProperty=nameWithType&gt;</ph> for an example using this method.</source>
          <target state="translated">참조 <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter.WriteStartAttribute%2A?displayProperty=nameWithType&gt;</ph> 이 메서드를 사용 하는 예제에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
          <source>There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</source>
          <target state="translated">유효한 XML 문자이나 출력 인코딩에는 유효하지 않은 버퍼에 문자가 있습니다.</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
          <source>For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</source>
          <target state="translated">예를 들어, 출력 인코딩이 ASCII인 경우, 요소 및 특성 이름에 대해서는 0부터 127까지 범주의 문자만 사용해야 합니다.</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
          <source>The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</source>
          <target state="translated">유효하지 않은 문자가 이 메서드의 인수 안이나 버퍼에 쓰고 있었던 이전 메서드의 인수 안에 있을지도 모릅니다.</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
          <source>Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</source>
          <target state="translated">이러한 문자는 가능한 경우 (예를 들어, 텍스트 노드 또는 특성 값에서) 문자 엔터티 참조에 의해 이스케이프됩니다.</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
          <source>However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</source>
          <target state="translated">그러나, 문자 엔터티 참조가 요소 및 특성 이름, 주석, 처리 명령, 또는 CDATA 섹션에서는 허용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>The namespace prefix of the attribute.</source>
          <target state="translated">특성의 네임스페이스 접두사입니다.</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">특성의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>The namespace URI for the attribute.</source>
          <target state="translated">특성의 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>When overridden in a derived class, writes the start of an attribute with the specified prefix, local name, and namespace URI.</source>
          <target state="translated">파생 클래스에서 재정의되면 지정된 접두사, 로컬 이름 및 네임스페이스 URI를 사용하여 특성의 시작 부분을 작성합니다.</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>This method enables you to write a value using multiple Write methods.</source>
          <target state="translated">이 메서드를 사용 하면 여러 쓰기 메서드를 사용 하 여 값을 쓸 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</source>
          <target state="translated">유효한 XML 문자이나 출력 인코딩에는 유효하지 않은 버퍼에 문자가 있습니다.</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</source>
          <target state="translated">예를 들어, 출력 인코딩이 ASCII인 경우, 요소 및 특성 이름에 대해서는 0부터 127까지 범주의 문자만 사용해야 합니다.</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</source>
          <target state="translated">유효하지 않은 문자가 이 메서드의 인수 안이나 버퍼에 쓰고 있었던 이전 메서드의 인수 안에 있을지도 모릅니다.</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</source>
          <target state="translated">이러한 문자는 가능한 경우 (예를 들어, 텍스트 노드 또는 특성 값에서) 문자 엔터티 참조에 의해 이스케이프됩니다.</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</source>
          <target state="translated">그러나, 문자 엔터티 참조가 요소 및 특성 이름, 주석, 처리 명령, 또는 CDATA 섹션에서는 허용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
          <source>The namespace prefix of the attribute.</source>
          <target state="translated">특성의 네임스페이스 접두사입니다.</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">특성의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
          <source>The namespace URI for the attribute.</source>
          <target state="translated">특성의 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
          <source>Asynchronously writes the start of an attribute with the specified prefix, local name, and namespace URI.</source>
          <target state="translated">지정된 접두사, 로컬 이름 및 네임스페이스 URI를 사용하여 특성의 시작 부분을 비동기적으로 작성합니다.</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteStartAttribute" /&gt;</ph> operation.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see langword="WriteStartAttribute" /&gt;</ph> 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttribute%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartAttribute%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>When overridden in a derived class, writes the XML declaration.</source>
          <target state="translated">파생 클래스에서 재정의되면 XML 선언을 작성합니다.</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocument">
          <source>When overridden in a derived class, writes the XML declaration with the version "1.0".</source>
          <target state="translated">파생 클래스에서 재정의되면 버전이 "1.0"인 XML 선언을 작성합니다.</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument">
          <source>The encoding level of the document is determined by how the writer is implemented.</source>
          <target state="translated">문서의 인코딩 수준 작성기를 구현 하는 방법을 의해 결정 됩니다.</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument">
          <source>For example, if an <ph id="ph1">&lt;xref:System.Text.Encoding&gt;</ph> object is specified in the <ph id="ph2">`XmlTextWriter`</ph> constructor, this determines the value of the encoding attribute.</source>
          <target state="translated">예를 들어 경우는 <ph id="ph1">&lt;xref:System.Text.Encoding&gt;</ph> 개체에 지정 된는 <ph id="ph2">`XmlTextWriter`</ph> 생성자가 인코딩 특성의 값을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument">
          <source>This method does not create a standalone attribute.</source>
          <target state="translated">이 메서드는 독립형 특성을 만들지 않습니다.</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument">
          <source>When <ph id="ph1">`WriteStartDocument`</ph> is called the writer validates that what you are writing is a well-formed XML document.</source>
          <target state="translated">때 <ph id="ph1">`WriteStartDocument`</ph> 라고 작성기 작성 하는 올바른 형식의 XML 문서 유효성을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument">
          <source>For example, it checks that the XML declaration is the first node, that one and only one root-level element exists, and so on.</source>
          <target state="translated">예를 들어 XML 선언이 하나는 첫 번째 노드 및 하나의 루트 수준 요소가 있고 등 확인 합니다.</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument">
          <source>If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</source>
          <target state="translated">이 메서드가 호출 되지 않으면 XML 조각을 쓰고 및 없는 루트 수준 규칙을 적용 작성기 가정 합니다.</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument">
          <source>If <ph id="ph1">`WriteStartDocument`</ph> has been called and then the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A&gt;</ph> method is used to create another XML declaration, an exception will be thrown.</source>
          <target state="translated">경우 <ph id="ph1">`WriteStartDocument`</ph> 를 호출한 다음는 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A&gt;</ph> 메서드는 XML 선언을 다른 데, 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocument">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocument">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, it writes "standalone=yes"; if <ph id="ph2">&lt;see langword="false" /&gt;</ph>, it writes "standalone=no".</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>이면 "standalone=yes"로 작성하고, <ph id="ph2">&lt;see langword="false" /&gt;</ph>이면 "standalone=no"로 작성합니다.</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
          <source>When overridden in a derived class, writes the XML declaration with the version "1.0" and the standalone attribute.</source>
          <target state="translated">파생 클래스에서 재정의되면 버전이 "1.0"이고 독립형 특성이 포함된 XML 선언을 작성합니다.</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
          <source>The encoding level of the document is determined by how the writer is implemented.</source>
          <target state="translated">문서의 인코딩 수준 작성기를 구현 하는 방법을 의해 결정 됩니다.</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
          <source>For example, if an <ph id="ph1">&lt;xref:System.Text.Encoding&gt;</ph> object is specified in the <ph id="ph2">`XmlTextWriter`</ph> constructor, this determines the value of the encoding attribute.</source>
          <target state="translated">예를 들어 경우는 <ph id="ph1">&lt;xref:System.Text.Encoding&gt;</ph> 개체에 지정 된는 <ph id="ph2">`XmlTextWriter`</ph> 생성자가 인코딩 특성의 값을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
          <source>When <ph id="ph1">`WriteStartDocument`</ph> is called, the writer validates that what you are writing is a well-formed XML document.</source>
          <target state="translated">때 <ph id="ph1">`WriteStartDocument`</ph> 가 호출 된 작성기의 유효성을 검사 작성 하는 올바른 형식의 XML 문서입니다.</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
          <source>For example, it checks that the XML declaration is the first node, that one and only one root-level element exists, and so on.</source>
          <target state="translated">예를 들어 XML 선언이 하나는 첫 번째 노드 및 하나의 루트 수준 요소가 있고 등 확인 합니다.</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
          <source>If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</source>
          <target state="translated">이 메서드가 호출 되지 않으면 XML 조각을 쓰고 및 없는 루트 수준 규칙을 적용 작성기 가정 합니다.</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
          <source>If <ph id="ph1">`WriteStartDocument`</ph> has been called and then the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A&gt;</ph> method is used to create another XML declaration, an exception will be thrown.</source>
          <target state="translated">경우 <ph id="ph1">`WriteStartDocument`</ph> 를 호출한 다음는 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A&gt;</ph> 메서드는 XML 선언을 다른 데, 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>Asynchronously writes the XML declaration.</source>
          <target state="translated">XML 선언을 비동기적으로 작성합니다.</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocument%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocument%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocumentAsync">
          <source>Asynchronously writes the XML declaration with the version "1.0".</source>
          <target state="translated">버전 "1.0"을 사용하여 XML 선언을 비동기적으로 작성합니다.</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocumentAsync">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteStartDocument" /&gt;</ph> operation.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see langword="WriteStartDocument" /&gt;</ph> 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocumentAsync">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocument%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocument%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocumentAsync">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocumentAsync">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocumentAsync">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, it writes "standalone=yes"; if <ph id="ph2">&lt;see langword="false" /&gt;</ph>, it writes "standalone=no".</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>이면 "standalone=yes"로 작성하고, <ph id="ph2">&lt;see langword="false" /&gt;</ph>이면 "standalone=no"로 작성합니다.</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)">
          <source>Asynchronously writes the XML declaration with the version "1.0" and the standalone attribute.</source>
          <target state="translated">버전 "1.0"과 독립형 특성을 사용하여 XML 선언을 비동기적으로 작성합니다.</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteStartDocument" /&gt;</ph> operation.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see langword="WriteStartDocument" /&gt;</ph> 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocument%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartDocument%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>When overridden in a derived class, writes the specified start tag.</source>
          <target state="translated">파생 클래스에서 재정의되면 지정된 시작 태그를 작성합니다.</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartElementAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartElementAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
          <source>The local name of the element.</source>
          <target state="translated">요소의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
          <source>When overridden in a derived class, writes out a start tag with the specified local name.</source>
          <target state="translated">파생 클래스에서 재정의되면 지정된 로컬 이름을 사용하여 시작 태그를 작성합니다.</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartElementAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartElementAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
          <source>The following example writes an XML node.</source>
          <target state="translated">다음 예제에서는 XML 노드를 작성 합니다.</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
          <source>There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</source>
          <target state="translated">유효한 XML 문자이나 출력 인코딩에는 유효하지 않은 버퍼에 문자가 있습니다.</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
          <source>For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</source>
          <target state="translated">예를 들어, 출력 인코딩이 ASCII인 경우, 요소 및 특성 이름에 대해서는 0부터 127까지 범주의 문자만 사용해야 합니다.</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
          <source>The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</source>
          <target state="translated">유효하지 않은 문자가 이 메서드의 인수 안이나 버퍼에 쓰고 있었던 이전 메서드의 인수 안에 있을지도 모릅니다.</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
          <source>Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</source>
          <target state="translated">이러한 문자는 가능한 경우 (예를 들어, 텍스트 노드 또는 특성 값에서) 문자 엔터티 참조에 의해 이스케이프됩니다.</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
          <source>However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</source>
          <target state="translated">그러나, 문자 엔터티 참조가 요소 및 특성 이름, 주석, 처리 명령, 또는 CDATA 섹션에서는 허용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">요소의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>The namespace URI to associate with the element.</source>
          <target state="translated">요소와 연결할 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>If this namespace is already in scope and has an associated prefix, the writer automatically writes that prefix also.</source>
          <target state="translated">이 네임스페이스가 이미 범위에 있고 관련된 접두사가 있는 경우 작성기는 해당 접두사도 자동으로 작성합니다.</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>When overridden in a derived class, writes the specified start tag and associates it with the given namespace.</source>
          <target state="translated">파생 클래스에서 재정의되면 지정된 시작 태그를 작성하고 지정된 네임스페이스에 연결합니다.</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>After calling this method you can either write attributes, or create content using <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteComment%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph>, or <ph id="ph3">`WriteStartElement`</ph> for child elements.</source>
          <target state="translated">특성을 작성 하거나 만들려면이 메서드를 호출한 후 사용 하는 콘텐츠 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteComment%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph>, 또는 <ph id="ph3">`WriteStartElement`</ph> 자식 요소에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>You can close the element with either <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndElement%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteFullEndElement%2A&gt;</ph>.</source>
          <target state="translated">사용 하 여 요소를 닫을 수 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteEndElement%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteFullEndElement%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>For example, the following C# code:</source>
          <target state="translated">예를 들어 다음 C# 코드:</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>Generates the following output:</source>
          <target state="translated">다음과 같은 출력을 생성합니다.</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartElementAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartElementAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</source>
          <target state="translated">유효한 XML 문자이나 출력 인코딩에는 유효하지 않은 버퍼에 문자가 있습니다.</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</source>
          <target state="translated">예를 들어, 출력 인코딩이 ASCII인 경우, 요소 및 특성 이름에 대해서는 0부터 127까지 범주의 문자만 사용해야 합니다.</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</source>
          <target state="translated">유효하지 않은 문자가 이 메서드의 인수 안이나 버퍼에 쓰고 있었던 이전 메서드의 인수 안에 있을지도 모릅니다.</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</source>
          <target state="translated">이러한 문자는 가능한 경우 (예를 들어, 텍스트 노드 또는 특성 값에서) 문자 엔터티 참조에 의해 이스케이프됩니다.</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
          <source>However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</source>
          <target state="translated">그러나, 문자 엔터티 참조가 요소 및 특성 이름, 주석, 처리 명령, 또는 CDATA 섹션에서는 허용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>The namespace prefix of the element.</source>
          <target state="translated">요소의 네임스페이스 접두사입니다.</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">요소의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>The namespace URI to associate with the element.</source>
          <target state="translated">요소와 연결할 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>When overridden in a derived class, writes the specified start tag and associates it with the given namespace and prefix.</source>
          <target state="translated">파생 클래스에서 재정의되면 지정된 시작 태그를 작성하고 지정된 네임스페이스 및 접두사에 연결합니다.</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartElementAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartElementAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>The following example writes out an XML fragment.</source>
          <target state="translated">다음 예제에서는 XML 조각을 씁니다.</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>There is a character in the buffer that is a valid XML character but is not valid for the output encoding.</source>
          <target state="translated">유효한 XML 문자이나 출력 인코딩에는 유효하지 않은 버퍼에 문자가 있습니다.</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names.</source>
          <target state="translated">예를 들어, 출력 인코딩이 ASCII인 경우, 요소 및 특성 이름에 대해서는 0부터 127까지 범주의 문자만 사용해야 합니다.</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer.</source>
          <target state="translated">유효하지 않은 문자가 이 메서드의 인수 안이나 버퍼에 쓰고 있었던 이전 메서드의 인수 안에 있을지도 모릅니다.</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values).</source>
          <target state="translated">이러한 문자는 가능한 경우 (예를 들어, 텍스트 노드 또는 특성 값에서) 문자 엔터티 참조에 의해 이스케이프됩니다.</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</source>
          <target state="translated">그러나, 문자 엔터티 참조가 요소 및 특성 이름, 주석, 처리 명령, 또는 CDATA 섹션에서는 허용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)">
          <source>The namespace prefix of the element.</source>
          <target state="translated">요소의 네임스페이스 접두사입니다.</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">요소의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)">
          <source>The namespace URI to associate with the element.</source>
          <target state="translated">요소와 연결할 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)">
          <source>Asynchronously writes the specified start tag and associates it with the given namespace and prefix.</source>
          <target state="translated">지정된 시작 태그를 비동기적으로 작성하고 주어진 네임스페이스 및 접두사와 연결합니다.</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteStartElement" /&gt;</ph> operation.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see langword="WriteStartElement" /&gt;</ph> 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartElement%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStartElement%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlWriter.WriteState">
          <source>When overridden in a derived class, gets the state of the writer.</source>
          <target state="translated">파생 클래스에서 재정의되면 작성기의 상태를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.WriteState">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Xml.WriteState" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.WriteState" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlWriter.WriteState">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlWriter.WriteState">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>The text to write.</source>
          <target state="translated">쓸 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>When overridden in a derived class, writes the given text content.</source>
          <target state="translated">파생 클래스에서 재정의되는 경우 지정된 텍스트 콘텐츠를 작성합니다.</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source><ph id="ph1">`WriteString`</ph> does the following:</source>
          <target state="translated"><ph id="ph1">`WriteString`</ph>에서는 다음을 수행합니다.</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>The characters <ph id="ph1">`&amp;`</ph>, <ph id="ph2">`&lt;`</ph>, and <ph id="ph3">`&gt;`</ph> are replaced with <ph id="ph4">`&amp;amp;`</ph>, <ph id="ph5">`&amp;lt;`</ph>, and <ph id="ph6">`&amp;gt;`</ph>, respectively.</source>
          <target state="translated">문자 <ph id="ph1">`&amp;`</ph>, <ph id="ph2">`&lt;`</ph>, 및 <ph id="ph3">`&gt;`</ph> 바뀝니다 <ph id="ph4">`&amp;amp;`</ph>, <ph id="ph5">`&amp;lt;`</ph>, 및 <ph id="ph6">`&amp;gt;`</ph>각각.</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>The default behavior of an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> created using <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> is to throw an <ph id="ph3">&lt;xref:System.ArgumentException&gt;</ph> when attempting to write character values in the range 0x-0x1F (excluding white space characters 0x9, 0xA, and 0xD).</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> 사용 하 여 만든 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> throw 하는 것는 <ph id="ph3">&lt;xref:System.ArgumentException&gt;</ph> 문자 값 범위는 0 x-0x1F (공백 문자 0x9, 0xA 및 0xD)에 쓰려고 할 때입니다.</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>These invalid XML characters can be written by creating the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> with the <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings.CheckCharacters%2A&gt;</ph> property set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">잘못 된 XML 문자를 만들어서 작성할 수 있습니다는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings.CheckCharacters%2A&gt;</ph> 속성이로 설정 <ph id="ph3">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>Doing so will result in the characters being replaced with numeric character entities (&amp;<ph id="ph1">\#</ph>0; through &amp;#0x1F).</source>
          <target state="translated">이렇게 하면 숫자 문자 엔터티로 교체 되었기 문자에서 (&amp;<ph id="ph1">\#</ph>0부터; &amp; #0x1F).</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>Additionally, an <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> created with the <ph id="ph2">`new`</ph> operator will replace the invalid characters with numeric character entities by default.</source>
          <target state="translated">또한는 <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> 사용 하 여 만든는 <ph id="ph2">`new`</ph> 연산자 기본적으로 숫자 문자 엔터티도 잘못 된 문자에 대체 됩니다.</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> Microsoft does not encourage the practice of writing invalid XML characters since many applications that consume XML are not designed to handle invalid characters.</source>
          <target state="translated"><bpt id="p1">**</bpt>참고<ept id="p1">**</ept> Microsoft XML을 사용 하는 많은 응용 프로그램 잘못 된 문자를 처리 하도록 설계 되지 않은 있으므로 잘못 된 XML 문자를 작성 하는 방법 것을 권장 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>If <ph id="ph1">`WriteString`</ph> is called in the context of an attribute value, double and single quotes are replaced with <ph id="ph2">`&amp;quot;`</ph> and <ph id="ph3">`&amp;apos;`</ph> respectively.</source>
          <target state="translated">경우 <ph id="ph1">`WriteString`</ph> 라고 큰따옴표와 작은따옴표 바뀝니다 특성 값의 컨텍스트에서 <ph id="ph2">`&amp;quot;`</ph> 및 <ph id="ph3">`&amp;apos;`</ph> 각각.</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>For example, this input string <ph id="ph1">`test&lt;item&gt;test`</ph> is written out as</source>
          <target state="translated">예를 들어이 입력 문자열 <ph id="ph1">`test&lt;item&gt;test`</ph> 으로 기록 됩니다</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>If <ph id="ph1">`text`</ph> is either <ph id="ph2">`null`</ph> or <ph id="ph3">`String.Empty`</ph>, this method writes a text node with no data content.</source>
          <target state="translated">경우 <ph id="ph1">`text`</ph> 있거나 <ph id="ph2">`null`</ph> 또는 <ph id="ph3">`String.Empty`</ph>,이 메서드는 데이터 콘텐츠가 없는 텍스트 노드를 씁니다.</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>The following example writes an XML node.</source>
          <target state="translated">다음 예제에서는 XML 노드를 작성 합니다.</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>The text string contains an invalid surrogate pair.</source>
          <target state="translated">텍스트 문자열에 잘못된 서로게이트 쌍이 포함된 경우</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteString(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStringAsync(System.String)">
          <source>The text to write.</source>
          <target state="translated">쓸 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStringAsync(System.String)">
          <source>Asynchronously writes the given text content.</source>
          <target state="translated">주어진 텍스트 콘텐츠를 비동기적으로 작성합니다.</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStringAsync(System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteString" /&gt;</ph> operation.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see langword="WriteString" /&gt;</ph> 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStringAsync(System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteStringAsync(System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStringAsync(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteStringAsync(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>The low surrogate.</source>
          <target state="translated">하위 서로게이트입니다.</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>This must be a value between 0xDC00 and 0xDFFF.</source>
          <target state="translated">이 값은 0xDC00에서 0xDFFF 사이에 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>The high surrogate.</source>
          <target state="translated">상위 서로게이트입니다.</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>This must be a value between 0xD800 and 0xDBFF.</source>
          <target state="translated">이 값은 0xD800에서 0xDBFF 사이에 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>When overridden in a derived class, generates and writes the surrogate character entity for the surrogate character pair.</source>
          <target state="translated">파생 클래스에서 재정의되면 서로게이트 문자 쌍에 대한 서로게이트 문자 엔터티를 생성하고 작성합니다.</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>This method is only applicable on systems that use UTF-16 encoding.</source>
          <target state="translated">이 메서드는 utf-16 인코딩을 사용 하는 시스템에 적용할 수만 있습니다.</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>The surrogate character entity is written in hexadecimal format.</source>
          <target state="translated">서로게이트 문자 엔터티는 16 진수 형식으로 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>The range for surrogate characters is #x10000 to #x10FFFF.</source>
          <target state="translated">서로게이트 문자에 대 한 범위를 #x10FFFF #x입니다.</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>The following formula is used to generate the surrogate character entity: (<ph id="ph1">`highChar`</ph> -0xD800) * 0x400 + (<ph id="ph2">`lowChar`</ph> -0xDC00) + 0x10000</source>
          <target state="translated">서로게이트 문자 엔터티를 생성 하려면 다음 수식을 사용 하는: (<ph id="ph1">`highChar`</ph> -0xD800) * 0x400 + (<ph id="ph2">`lowChar`</ph> -0xDC00) + 0x10000</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>For both HTML and XML, the document character set (and therefore the notation of numeric character references) is based on UCS [ISO-10646].</source>
          <target state="translated">HTML 및 XML 모두에 대 한 문서 문자 집합 (및 따라서 숫자 문자 참조의 표기법) 기반으로 u c S [ISO 10646] 합니다.</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>A single numeric character reference in a source document may therefore in some cases correspond to two 16-bit units in a string (a high surrogate and a low surrogate).</source>
          <target state="translated">소스 문서에서 단일 숫자 문자 참조 (상위 서로게이트 및 하위 서로게이트) 문자열에 두 명의 16 비트 단위에 해당할 경우에 따라 따라서 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>These 16-bit units are referred to as a surrogate pair.</source>
          <target state="translated">이러한 16 비트 단위는 서로게이트 쌍 이라고 합니다.</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>For more information regarding surrogates or characters, refer to section 3.7 of the Unicode 3.0/Unicode 2.0 standard located at <ph id="ph1">http://www.unicode.org</ph>, or section 2.2 of the W3C XML 1.0 Recommendation located at <ph id="ph2">http://www.w3.org/TR/REC-xml#charsets</ph>.</source>
          <target state="translated">문자나 서로게이트에 관한 자세한 내용은의 섹션을 3.7는 유니코드 표준 3.0/유니코드 2.0에 있는 참조 <ph id="ph1">http://www.unicode.org</ph>, 섹션 2.2의 W3C XML 1.0 권장 사항에 위치 하거나 <ph id="ph2">http://www.w3.org/TR/REC-xml#charsets</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>An invalid surrogate character pair was passed.</source>
          <target state="translated">잘못된 서로게이트 문자 쌍이 전달된 경우</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
          <source>The low surrogate.</source>
          <target state="translated">하위 서로게이트입니다.</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
          <source>This must be a value between 0xDC00 and 0xDFFF.</source>
          <target state="translated">이 값은 0xDC00에서 0xDFFF 사이에 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
          <source>The high surrogate.</source>
          <target state="translated">상위 서로게이트입니다.</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
          <source>This must be a value between 0xD800 and 0xDBFF.</source>
          <target state="translated">이 값은 0xD800에서 0xDBFF 사이에 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
          <source>Asynchronously generates and writes the surrogate character entity for the surrogate character pair.</source>
          <target state="translated">서로게이트 문자 쌍에 대한 서로게이트 문자 엔터티를 비동기적으로 생성하고 작성합니다.</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteSurrogateCharEntity" /&gt;</ph> operation.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see langword="WriteSurrogateCharEntity" /&gt;</ph> 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteSurrogateCharEntity%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteSurrogateCharEntity%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlWriter">
          <source>Writes a single simple-typed value.</source>
          <target state="translated">단순 형식의 단일 값을 작성합니다.</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method accepts common language runtime (CLR) simple-typed values, converts them to their string representations according to the XML schema definition language (XSD) data type conversion rules, and writes them out by using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> 메서드 수용 공용 언어 런타임 (CLR) 단순 형식의 값에는 XML 스키마 정의 언어 (XSD) 데이터 형식 변환 규칙을 따라 해당 문자열 표현으로 변환 하 고, 사용 하 여 로그 아웃 씁니다는 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> 메서드입니다.</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>This enables you to pipeline simple-type values with minimal reparsing overhead when passing data between <ph id="ph1">&lt;xref:System.Xml.XPath.XPathDocument&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>, and <ph id="ph3">&lt;xref:System.Xml.XmlWriter&gt;</ph> objects.</source>
          <target state="translated">이렇게 하면 최소한의 구문 오버 헤드 간에 데이터를 전달할 때와 단순 유형 값을 파이프라인 하 <ph id="ph1">&lt;xref:System.Xml.XPath.XPathDocument&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Xml.XmlWriter&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>This ability is also useful when dealing with CLR simple-types and an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance.</source>
          <target state="translated">이 기능은 CLR 단순 형식과 다룰 때와 <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>You can call the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method to write the typed value instead of using the methods in the <ph id="ph2">&lt;xref:System.Xml.XmlConvert&gt;</ph> class to convert the typed data to a string value before writing it out.</source>
          <target state="translated">호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> 의 메서드를 사용 하는 대신 형식화 된 값을 작성 하는 메서드는 <ph id="ph2">&lt;xref:System.Xml.XmlConvert&gt;</ph> 형식화 된 데이터를 쓰기 전에 문자열 값으로 변환 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>For asynchronous operations, convert the return value of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> to a string and use the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> method.</source>
          <target state="translated">비동기 작업의 반환 값으로 변환 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> 문자열 및 사용에는 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>The following table shows the default XSD data types that correspond to CLR types.</source>
          <target state="translated">다음 표에서 기본 CLR 형식에 해당 하는 XSD 데이터 형식을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>If the CLR object is a list type, such as <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>, or <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph>, it is treated as an array of the value type.</source>
          <target state="translated">CLR 개체가 <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph> 같은 목록 형식인 경우 값 형식의 배열로 처리됩니다.</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>CLR type</source>
          <target state="translated">CLR 형식</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>Default XSD data type</source>
          <target state="translated">기본 XSD 데이터 형식</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:boolean</source>
          <target state="translated">xsd:boolean</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:integer</source>
          <target state="translated">xsd:integer</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source><ph id="ph1">&lt;xref:System.Byte?displayProperty=nameWithType&gt;</ph> array</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Byte?displayProperty=nameWithType&gt;</ph> 배열</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:base64Binary</source>
          <target state="translated">xsd:base64Binary</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:string</source>
          <target state="translated">xsd:string</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:dateTime</source>
          <target state="translated">xsd:dateTime</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:decimal</source>
          <target state="translated">xsd:decimal</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:double</source>
          <target state="translated">xsd:double</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:integer</source>
          <target state="translated">xsd:integer</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:integer</source>
          <target state="translated">xsd:integer</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:integer</source>
          <target state="translated">xsd:integer</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:float</source>
          <target state="translated">xsd:float</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:string</source>
          <target state="translated">xsd:string</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:string</source>
          <target state="translated">xsd:string</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>xsd:base64Binary</source>
          <target state="translated">xsd:base64Binary</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>**These types are not CLS-compliant.</source>
          <target state="translated">**이 형식은 CLS 규격이 아니며</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>They do not have corresponding <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> methods.</source>
          <target state="translated">해당 없는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>If <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> is called multiple times in succession, the values are not delimited by a space.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph>를 연속해서 여러 번 호출하면 값이 공백으로 구분되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlWriter">
          <source>You must call <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> between calls to <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> to insert white space.</source>
          <target state="translated">공백을 넣으려면 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph>를 호출하는 사이에 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph>를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value to write.</source>
          <target state="translated">쓸 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
          <source>Writes a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 값을 씁니다.</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
          <source>This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</source>
          <target state="translated">이 메서드는 공용 언어 런타임 개체를 사용 하 고 XML 스키마 정의 언어 (XSD) 데이터 형식 변환 규칙을 사용 하 여 원하는 출력 형식으로 입력된 값을 변환 합니다.</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> 메서드를 호출하면 <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>는 XSD(XML 스키마) 데이터 형식 규칙에 따라 값을 문자열 표시로 변환하고 <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> 메서드를 사용하여 씁니다.</target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
          <source>If <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> is called multiple times in succession, the values are not delimited by a space.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph>를 연속해서 여러 번 호출하면 값이 공백으로 구분되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
          <source>You must call <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> between calls to <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> to insert white space.</source>
          <target state="translated">공백을 넣으려면 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph>를 호출하는 사이에 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph>를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
          <source>Pass an array type to the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> overload to write out an array of distinct values.</source>
          <target state="translated">에 배열 형식을 전달는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> 고유 값의 배열을 작성 하는 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
          <source>If this method is called on an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance that outputs text-only, the typed value is serialized to text.</source>
          <target state="translated">이 메서드를 호출할 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> 텍스트 전용, 형식화 된 값을 텍스트로 직렬화 해당 출력 인스턴스.</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
          <source>For asynchronous operations, convert the return value of this method to a string and use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> method.</source>
          <target state="translated">비동기 작업에 대 한이 메서드의 반환 값을 문자열로 변환 하 고 사용 하 여는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
          <source>An invalid value was specified.</source>
          <target state="translated">잘못된 값이 지정된 경우</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
          <source>The <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> value to write.</source>
          <target state="translated">쓸 <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
          <source>Writes a <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> 값을 씁니다.</target>       </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
          <source>This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</source>
          <target state="translated">이 메서드는 공용 언어 런타임 개체를 사용 하 고 XML 스키마 정의 언어 (XSD) 데이터 형식 변환 규칙을 사용 하 여 원하는 출력 형식으로 입력된 값을 변환 합니다.</target>       </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> 메서드를 호출하면 <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>는 XSD(XML 스키마) 데이터 형식 규칙에 따라 값을 문자열 표시로 변환하고 <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> 메서드를 사용하여 씁니다.</target>       </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
          <source>If <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> is called multiple times in succession, the values are not delimited by a space.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph>를 연속해서 여러 번 호출하면 값이 공백으로 구분되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
          <source>You must call <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> between calls to <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> to insert white space.</source>
          <target state="translated">공백을 넣으려면 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph>를 호출하는 사이에 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph>를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
          <source>Pass an array type to the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> overload to write out an array of distinct values.</source>
          <target state="translated">에 배열 형식을 전달는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> 고유 값의 배열을 작성 하는 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
          <source>If this method is called on an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance that outputs text-only, the typed value is serialized to text.</source>
          <target state="translated">이 메서드를 호출할 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> 텍스트 전용, 형식화 된 값을 텍스트로 직렬화 해당 출력 인스턴스.</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
          <source>For asynchronous operations, convert the return value of this method to a string and use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> method.</source>
          <target state="translated">비동기 작업에 대 한이 메서드의 반환 값을 문자열로 변환 하 고 사용 하 여는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
          <source>The following example writes a book node using typed data.</source>
          <target state="translated">다음 예제에서는 형식화 된 데이터를 사용 하 여 책 노드를 씁니다.</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
          <source>An invalid value was specified.</source>
          <target state="translated">잘못된 값이 지정된 경우</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTimeOffset)">
          <source>The <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> value to write.</source>
          <target state="translated">쓸 <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTimeOffset)">
          <source>Writes a <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> 값을 씁니다.</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTimeOffset)">
          <source>For asynchronous operations, convert the return value of this method to a string and use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> method.</source>
          <target state="translated">비동기 작업에 대 한이 메서드의 반환 값을 문자열로 변환 하 고 사용 하 여는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTimeOffset)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.DateTimeOffset)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value to write.</source>
          <target state="translated">쓸 <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
          <source>Writes a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 값을 씁니다.</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
          <source>This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</source>
          <target state="translated">이 메서드는 공용 언어 런타임 개체를 사용 하 고 XML 스키마 정의 언어 (XSD) 데이터 형식 변환 규칙을 사용 하 여 원하는 출력 형식으로 입력된 값을 변환 합니다.</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> 메서드를 호출하면 <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>는 XSD(XML 스키마) 데이터 형식 규칙에 따라 값을 문자열 표시로 변환하고 <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> 메서드를 사용하여 씁니다.</target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
          <source>If <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> is called multiple times in succession, the values are not delimited by a space.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph>를 연속해서 여러 번 호출하면 값이 공백으로 구분되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
          <source>You must call <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> between calls to <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> to insert white space.</source>
          <target state="translated">공백을 넣으려면 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph>를 호출하는 사이에 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph>를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
          <source>Pass an array type to the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> overload to write out an array of distinct values.</source>
          <target state="translated">에 배열 형식을 전달는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> 고유 값의 배열을 작성 하는 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
          <source>If this method is called on an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance that outputs text-only, the typed value is serialized to text.</source>
          <target state="translated">이 메서드를 호출할 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> 텍스트 전용, 형식화 된 값을 텍스트로 직렬화 해당 출력 인스턴스.</target>       </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
          <source>For asynchronous operations, convert the return value of this method to a string and use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> method.</source>
          <target state="translated">비동기 작업에 대 한이 메서드의 반환 값을 문자열로 변환 하 고 사용 하 여는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
          <source>An invalid value was specified.</source>
          <target state="translated">잘못된 값이 지정된 경우</target>       </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Double)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> value to write.</source>
          <target state="translated">쓸 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Double)">
          <source>Writes a <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 값을 씁니다.</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Double)">
          <source>This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</source>
          <target state="translated">이 메서드는 공용 언어 런타임 개체를 사용 하 고 XML 스키마 정의 언어 (XSD) 데이터 형식 변환 규칙을 사용 하 여 원하는 출력 형식으로 입력된 값을 변환 합니다.</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Double)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> 메서드를 호출하면 <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>는 XSD(XML 스키마) 데이터 형식 규칙에 따라 값을 문자열 표시로 변환하고 <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> 메서드를 사용하여 씁니다.</target>       </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Double)">
          <source>If <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> is called multiple times in succession, the values are not delimited by a space.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph>를 연속해서 여러 번 호출하면 값이 공백으로 구분되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Double)">
          <source>You must call <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> between calls to <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> to insert white space.</source>
          <target state="translated">공백을 넣으려면 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph>를 호출하는 사이에 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph>를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Double)">
          <source>Pass an array type to the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> overload to write out an array of distinct values.</source>
          <target state="translated">에 배열 형식을 전달는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> 고유 값의 배열을 작성 하는 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Double)">
          <source>If this method is called on an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance that outputs text-only, the typed value is serialized to text.</source>
          <target state="translated">이 메서드를 호출할 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> 텍스트 전용, 형식화 된 값을 텍스트로 직렬화 해당 출력 인스턴스.</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Double)">
          <source>For asynchronous operations, convert the return value of this method to a string and use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> method.</source>
          <target state="translated">비동기 작업에 대 한이 메서드의 반환 값을 문자열로 변환 하 고 사용 하 여는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Double)">
          <source>The following example writes a book node using typed data.</source>
          <target state="translated">다음 예제에서는 형식화 된 데이터를 사용 하 여 책 노드를 씁니다.</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Double)">
          <source>An invalid value was specified.</source>
          <target state="translated">잘못된 값이 지정된 경우</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Double)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Double)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value to write.</source>
          <target state="translated">쓸 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
          <source>Writes a <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값을 씁니다.</target>       </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
          <source>This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</source>
          <target state="translated">이 메서드는 공용 언어 런타임 개체를 사용 하 고 XML 스키마 정의 언어 (XSD) 데이터 형식 변환 규칙을 사용 하 여 원하는 출력 형식으로 입력된 값을 변환 합니다.</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> 메서드를 호출하면 <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>는 XSD(XML 스키마) 데이터 형식 규칙에 따라 값을 문자열 표시로 변환하고 <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> 메서드를 사용하여 씁니다.</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
          <source>If <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> is called multiple times in succession, the values are not delimited by a space.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph>를 연속해서 여러 번 호출하면 값이 공백으로 구분되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
          <source>You must call <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> between calls to <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> to insert white space.</source>
          <target state="translated">공백을 넣으려면 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph>를 호출하는 사이에 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph>를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
          <source>Pass an array type to the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> overload to write out an array of distinct values.</source>
          <target state="translated">에 배열 형식을 전달는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> 고유 값의 배열을 작성 하는 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
          <source>If this method is called on an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance that outputs text-only, the typed value is serialized to text.</source>
          <target state="translated">이 메서드를 호출할 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> 텍스트 전용, 형식화 된 값을 텍스트로 직렬화 해당 출력 인스턴스.</target>       </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
          <source>For asynchronous operations, convert the return value of this method to a string and use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> method.</source>
          <target state="translated">비동기 작업에 대 한이 메서드의 반환 값을 문자열로 변환 하 고 사용 하 여는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
          <source>An invalid value was specified.</source>
          <target state="translated">잘못된 값이 지정된 경우</target>       </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> value to write.</source>
          <target state="translated">쓸 <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
          <source>Writes a <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 값을 씁니다.</target>       </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
          <source>This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</source>
          <target state="translated">이 메서드는 공용 언어 런타임 개체를 사용 하 고 XML 스키마 정의 언어 (XSD) 데이터 형식 변환 규칙을 사용 하 여 원하는 출력 형식으로 입력된 값을 변환 합니다.</target>       </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> 메서드를 호출하면 <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>는 XSD(XML 스키마) 데이터 형식 규칙에 따라 값을 문자열 표시로 변환하고 <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> 메서드를 사용하여 씁니다.</target>       </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
          <source>If <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> is called multiple times in succession, the values are not delimited by a space.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph>를 연속해서 여러 번 호출하면 값이 공백으로 구분되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
          <source>You must call <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> between calls to <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> to insert white space.</source>
          <target state="translated">공백을 넣으려면 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph>를 호출하는 사이에 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph>를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
          <source>Pass an array type to the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> overload to write out an array of distinct values.</source>
          <target state="translated">에 배열 형식을 전달는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> 고유 값의 배열을 작성 하는 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
          <source>If this method is called on an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance that outputs text-only, the typed value is serialized to text.</source>
          <target state="translated">이 메서드를 호출할 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> 텍스트 전용, 형식화 된 값을 텍스트로 직렬화 해당 출력 인스턴스.</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
          <source>For asynchronous operations, convert the return value of this method to a string and use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> method.</source>
          <target state="translated">비동기 작업에 대 한이 메서드의 반환 값을 문자열로 변환 하 고 사용 하 여는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
          <source>An invalid value was specified.</source>
          <target state="translated">잘못된 값이 지정된 경우</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Object)">
          <source>The object value to write.</source>
          <target state="translated">쓸 개체 값입니다.</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Object)">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> With the release of the .NET Framework 3.5, this method accepts <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> as a parameter.</source>
          <target state="translated"><bpt id="p1">**</bpt>참고<ept id="p1">**</ept> .NET Framework 3.5 릴리스에서 이 메서드는 <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>을 매개 변수로 받습니다.</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Object)">
          <source>Writes the object value.</source>
          <target state="translated">개체 값을 씁니다.</target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Object)">
          <source>This method takes the common language runtime (CLR) object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</source>
          <target state="translated">이 메서드는 공용 언어 런타임 (CLR) 개체를 사용 하 고 XML 스키마 정의 언어 (XSD) 데이터 형식 변환 규칙을 사용 하 여 원하는 출력 형식으로 입력된 값을 변환 합니다.</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Object)">
          <source>If the CLR object is a list type such as <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>, or <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph>, it is treated as an array of the value type.</source>
          <target state="translated">CLR 개체 목록 형식 인지와 같은 <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>, 또는 <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph>, 값 형식의 배열로 처리 됩니다.</target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> 변환 XSD (XML 스키마) 데이터 형식에 따라 해당 문자열 표현으로 값 규칙를 사용 하 여 작성 된 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Object)">
          <source>If this method is called on an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance that outputs text-only, the typed value is serialized to text.</source>
          <target state="translated">이 메서드를 호출할 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> 텍스트 전용, 형식화 된 값을 텍스트로 직렬화 해당 출력 인스턴스.</target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Object)">
          <source>For asynchronous operations, convert the return value of this method to a string and use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> method.</source>
          <target state="translated">비동기 작업에 대 한이 메서드의 반환 값을 문자열로 변환 하 고 사용 하 여는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Object)">
          <source>An invalid value was specified.</source>
          <target state="translated">잘못된 값이 지정된 경우</target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Object)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Single)">
          <source>The single-precision floating-point number to write.</source>
          <target state="translated">쓸 단정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Single)">
          <source>Writes a single-precision floating-point number.</source>
          <target state="translated">단정밀도 부동 소수점 숫자를 씁니다.</target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Single)">
          <source>This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</source>
          <target state="translated">이 메서드는 공용 언어 런타임 개체를 사용 하 고 XML 스키마 정의 언어 (XSD) 데이터 형식 변환 규칙을 사용 하 여 원하는 출력 형식으로 입력된 값을 변환 합니다.</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Single)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> 메서드를 호출하면 <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>는 XSD(XML 스키마) 데이터 형식 규칙에 따라 값을 문자열 표시로 변환하고 <ph id="ph3">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> 메서드를 사용하여 씁니다.</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Single)">
          <source>If <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> is called multiple times in succession, the values are not delimited by a space.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph>를 연속해서 여러 번 호출하면 값이 공백으로 구분되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Single)">
          <source>You must call <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> between calls to <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> to insert white space.</source>
          <target state="translated">공백을 넣으려면 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph>를 호출하는 사이에 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph>를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Single)">
          <source>Pass an array type to the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> overload to write out an array of distinct values.</source>
          <target state="translated">에 배열 형식을 전달는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> 고유 값의 배열을 작성 하는 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Single)">
          <source>If this method is called on an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance that outputs text-only, the typed value is serialized to text.</source>
          <target state="translated">이 메서드를 호출할 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> 텍스트 전용, 형식화 된 값을 텍스트로 직렬화 해당 출력 인스턴스.</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.Single)">
          <source>For asynchronous operations, convert the return value of this method to a string and use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> method.</source>
          <target state="translated">비동기 작업에 대 한이 메서드의 반환 값을 문자열로 변환 하 고 사용 하 여는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Single)">
          <source>An invalid value was specified.</source>
          <target state="translated">잘못된 값이 지정된 경우</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Single)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.Single)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> value to write.</source>
          <target state="translated">쓸 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.String)">
          <source>Writes a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 값을 씁니다.</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.String)">
          <source>This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.</source>
          <target state="translated">이 메서드는 공용 언어 런타임 개체를 사용 하 고 XML 스키마 정의 언어 (XSD) 데이터 형식 변환 규칙을 사용 하 여 원하는 출력 형식으로 입력된 값을 변환 합니다.</target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.String)">
          <source>If <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> is called multiple times in succession, the values are not delimited by a space.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph>를 연속해서 여러 번 호출하면 값이 공백으로 구분되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.String)">
          <source>You must call <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> between calls to <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph> to insert white space.</source>
          <target state="translated">공백을 넣으려면 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph>를 호출하는 사이에 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.WriteValue%2A&gt;</ph>를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.String)">
          <source>Pass an array type to the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> overload to write out an array of distinct values.</source>
          <target state="translated">에 배열 형식을 전달는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType&gt;</ph> 고유 값의 배열을 작성 하는 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.String)">
          <source>If this method is called on an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance that outputs text-only, the typed value is serialized to text.</source>
          <target state="translated">이 메서드를 호출할 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> 텍스트 전용, 형식화 된 값을 텍스트로 직렬화 해당 출력 인스턴스.</target>       </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteValue(System.String)">
          <source>For asynchronous operations, use the <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> method.</source>
          <target state="translated">비동기 작업에 사용 된 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteStringAsync%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.String)">
          <source>An invalid value was specified.</source>
          <target state="translated">잘못된 값이 지정된 경우</target>       </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteValue(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteWhitespace(System.String)">
          <source>The string of white space characters.</source>
          <target state="translated">공백 문자의 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteWhitespace(System.String)">
          <source>When overridden in a derived class, writes out the given white space.</source>
          <target state="translated">파생 클래스에서 재정의되면 지정된 공백을 작성합니다.</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteWhitespace(System.String)">
          <source>This method is used to manually format your document.</source>
          <target state="translated">이 메서드를 수동으로 문서 형식을 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteWhitespace(System.String)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespaceAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespaceAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteWhitespace(System.String)">
          <source>The string contains non-white space characters.</source>
          <target state="translated">문자열에 공백이 아닌 문자가 포함된 경우</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteWhitespace(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteWhitespace(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)">
          <source>The string of white space characters.</source>
          <target state="translated">공백 문자의 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)">
          <source>Asynchronously writes out the given white space.</source>
          <target state="translated">주어진 공백을 비동기적으로 작성합니다.</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)">
          <source>The task that represents the asynchronous <ph id="ph1">&lt;see langword="WriteWhitespace" /&gt;</ph> operation.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see langword="WriteWhitespace" /&gt;</ph> 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlWriterSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlWriterSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>은 “비동기 메서드를 사용하려면 XmlWriterSettings.Async를 true로 설정하십시오.”라는 메시지와 함께 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlWriter.XmlLang">
          <source>When overridden in a derived class, gets the current <ph id="ph1">&lt;see langword="xml:lang" /&gt;</ph> scope.</source>
          <target state="translated">파생 클래스에서 재정의되면 현재 <ph id="ph1">&lt;see langword="xml:lang" /&gt;</ph> 범위를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.XmlLang">
          <source>The current <ph id="ph1">&lt;see langword="xml:lang" /&gt;</ph> scope.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see langword="xml:lang" /&gt;</ph> 범위입니다.</target>       </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.XmlLang">
          <source>This property allows one component to find out in what state another component has left the writer.</source>
          <target state="translated">이 속성에는 한 구성 요소를 내 다른 구성 요소가 유지 작성기 상태를 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.XmlLang">
          <source>For example, perhaps one component wants to tell another which language help text to generate.</source>
          <target state="translated">예를 들어 아마도 한 구성 하려고 다른 어떤 언어 도움말 텍스트를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="1350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.XmlLang">
          <source>The language information is communicated by writing an <ph id="ph1">`xml:lang`</ph> attribute.</source>
          <target state="translated">작성 하 여 전달 되는 언어 정보는 <ph id="ph1">`xml:lang`</ph> 특성입니다.</target>       </trans-unit>
        <trans-unit id="1351" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlWriter.XmlLang">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1352" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlWriter.XmlLang">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1353" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlWriter.XmlSpace">
          <source>When overridden in a derived class, gets an <ph id="ph1">&lt;see cref="T:System.Xml.XmlSpace" /&gt;</ph> representing the current <ph id="ph2">&lt;see langword="xml:space" /&gt;</ph> scope.</source>
          <target state="translated">파생 클래스에서 재정의되면 현재 <ph id="ph2">&lt;see langword="xml:space" /&gt;</ph> 범위를 나타내는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlSpace" /&gt;</ph>를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.XmlSpace">
          <source>An <ph id="ph1">&lt;see langword="XmlSpace" /&gt;</ph> representing the current <ph id="ph2">&lt;see langword="xml:space" /&gt;</ph> scope.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see langword="XmlSpace" /&gt;</ph> 범위를 나타내는 <ph id="ph2">&lt;see langword="xml:space" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.XmlSpace">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 값</target>       </trans-unit>
        <trans-unit id="1356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.XmlSpace">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meaning</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 의미</target>       </trans-unit>
        <trans-unit id="1357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.XmlSpace">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="None" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> This is the default if no <ph id="ph6">&lt;see langword="xml:space" /&gt;</ph> scope exists.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="None" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 되지 않은 경우 이것이 기본값 <ph id="ph6">&lt;see langword="xml:space" /&gt;</ph> 범위가 있습니다.</target>       </trans-unit>
        <trans-unit id="1358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.XmlSpace">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Default" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The current scope is <ph id="ph6">&lt;see langword="xml:space" /&gt;</ph>="default".</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Default" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 현재 범위는 <ph id="ph6">&lt;see langword="xml:space" /&gt;</ph>= "default"입니다.</target>       </trans-unit>
        <trans-unit id="1359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.XmlSpace">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Preserve" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The current scope is <ph id="ph6">&lt;see langword="xml:space" /&gt;</ph>="preserve".</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Preserve" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 현재 범위는 <ph id="ph6">&lt;see langword="xml:space" /&gt;</ph>= "preserve"입니다.</target>       </trans-unit>
        <trans-unit id="1360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlWriter.XmlSpace">
          <source>This allows one component to find out what state another component has left the writer in.</source>
          <target state="translated">따라서 한 구성 요소 어떤 상태를 다른 구성 요소가 유지 작성기 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1361" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlWriter.XmlSpace">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1362" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlWriter.XmlSpace">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>