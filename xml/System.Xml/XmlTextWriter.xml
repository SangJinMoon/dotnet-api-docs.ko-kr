<Type Name="XmlTextWriter" FullName="System.Xml.XmlTextWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fda932d8ded1d91a06f6ca7b146d93c88df64ce8" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48729345" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlTextWriter : System.Xml.XmlWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlTextWriter extends System.Xml.XmlWriter" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlTextWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlTextWriter&#xA;Inherits XmlWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlTextWriter : System::Xml::XmlWriter" />
  <TypeSignature Language="F#" Value="type XmlTextWriter = class&#xA;    inherit XmlWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c563e-101">W3C XML(Extensible Markup Language) 1.0 및 Namespaces in XML 권장 사항을 따르는 XML 데이터를 포함하는 스트림이나 파일을 생성하는 빠르고, 캐시되지 않으며, 앞으로만 이동 가능한 방법을 제공하는 작성기를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c563e-101">Represents a writer that provides a fast, non-cached, forward-only way of generating streams or files containing XML data that conforms to the W3C Extensible Markup Language (XML) 1.0 and the Namespaces in XML recommendations.</span>
      </span>
      <span data-ttu-id="c563e-102">.NET Framework 2.0부터 <see cref="T:System.Xml.XmlWriter" /> 클래스를 대신 사용하는 것이 좋습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c563e-102">Starting with the .NET Framework 2.0, we recommend that you use the <see cref="T:System.Xml.XmlWriter" /> class instead.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c563e-103">이 클래스에서 구현 된 <xref:System.Xml.XmlWriter> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-103">This class implements the <xref:System.Xml.XmlWriter> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c563e-104">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-104">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c563e-105">`XmlTextWriter` 현재 요소 스택에서 정의 된 모든 네임 스페이스에 해당 하는 네임 스페이스 스택을 유지 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-105">`XmlTextWriter` maintains a namespace stack corresponding to all the namespaces defined in the current element stack.</span></span> <span data-ttu-id="c563e-106">사용 하 여 `XmlTextWriter` 수동으로 네임 스페이스를 선언할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-106">Using `XmlTextWriter` you can declare namespaces manually.</span></span>  
  
```csharp  
w.WriteStartElement("root");  
w.WriteAttributeString("xmlns", "x", null, "urn:1");  
 w.WriteStartElement("item","urn:1");  
 w.WriteEndElement();  
 w.WriteStartElement("item","urn:1");  
 w.WriteEndElement();  
w.WriteEndElement();  
```  
  
 <span data-ttu-id="c563e-107">위의 C# 코드는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-107">The above C# code produces the following output.</span></span> <span data-ttu-id="c563e-108">`XmlTextWriter` 네임 스페이스 선언 두 자식 요소에서 중복 것을 방지 하려면 루트 요소를 승격 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-108">`XmlTextWriter` promotes the namespace declaration to the root element to avoid having it duplicated on the two child elements.</span></span> <span data-ttu-id="c563e-109">자식 요소를 네임 스페이스 선언에서 접두사를 선택합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-109">The child elements pick up the prefix from the namespace declaration.</span></span>  
  
```xml  
<root xmlns:x="urn:1">  
 <x:item/>  
 <x:item/>  
</x:root>  
```  
  
 <span data-ttu-id="c563e-110">`XmlTextWriter` 현재 네임 스페이스 선언 재정의 할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-110">`XmlTextWriter` also allows you to override the current namespace declaration.</span></span> <span data-ttu-id="c563e-111">다음 예제에서는 네임 스페이스 URI "123"을 "abc" XML 요소를 생성 하 여 재정의 `<x:node xmlns:x="abc"/>`합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-111">In the following example, the namespace URI "123" is overridden by "abc" to produce the XML element `<x:node xmlns:x="abc"/>`.</span></span>  
  
```csharp  
w.WriteStartElement("x","node","123");  
w.WriteAttributeString("xmlns","x",null,"abc");  
```  
  
 <span data-ttu-id="c563e-112">인수로 서 접두사를 사용 하는 write 메서드를 사용 하 여 사용할 접두사를 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-112">By using the write methods that take a prefix as an argument you can also specify which prefix to use.</span></span> <span data-ttu-id="c563e-113">다음 예제에서는 두 개의 서로 다른 접두사를 같은 네임 스페이스의 XML 텍스트를 생성 하는 URI 매핑됩니다 `<x:root xmlns:x="urn:1"><y:item xmlns:y="urn:1"/></x:root>`합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-113">In the following example, two different prefixes are mapped to the same namespace URI to produce the XML text `<x:root xmlns:x="urn:1"><y:item xmlns:y="urn:1"/></x:root>`.</span></span>  
  
```csharp  
XmlTextWriter w = new XmlTextWriter(Console.Out);  
w.WriteStartElement("x","root","urn:1");  
 w.WriteStartElement("y","item","urn:1");  
 w.WriteEndElement();  
w.WriteEndElement();  
w.Close();  
```  
  
 <span data-ttu-id="c563e-114">동일한 네임 스페이스 URI와 다른 접두사를 매핑하는 여러 네임 스페이스 선언이 있을 경우 `XmlTextWriter` 스택을 네임 스페이스 선언의 뒤로 하 고 가장 가까운 것을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-114">If there are multiple namespace declarations mapping different prefixes to the same namespace URI, `XmlTextWriter` walks the stack of namespace declarations backwards and picks the closest one.</span></span>  
  
```csharp  
XmlTextWriter w = new XmlTextWriter(Console.Out);  
w.Formatting = Formatting.Indented;  
w.WriteStartElement("x","root","urn:1");  
w.WriteStartElement("y","item","urn:1");  
w.WriteAttributeString("attr","urn:1","123");  
w.WriteEndElement();  
w.WriteEndElement();  
w.Close();  
```  
  
 <span data-ttu-id="c563e-115">위의 C# 예제에서는 때문에 `WriteAttributeString` 호출 접두사를 지정 하지 않습니다 하 고 작성기는 네임 스페이스 스택에 푸시된 마지막 접두사를 사용 하 여 다음 XML을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-115">In the above C# example, because the `WriteAttributeString` call does not specify a prefix, the writer uses the last prefix pushed onto the namespace stack, and produces the following XML:</span></span>  
  
```xml  
<x:root xmlns:x="urn:1">  
 <y:item y:attr="123" xmlns:y="urn:1" />  
</x:root>  
```  
  
 <span data-ttu-id="c563e-116">네임 스페이스 충돌이 발생 하면 `XmlTextWriter` 대체 접두사를 생성 하 여이 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-116">If namespace conflicts occur, `XmlTextWriter` resolves them by generating alternate prefixes.</span></span> <span data-ttu-id="c563e-117">예를 들어, 특성 및 요소는 경우 접두사는 다른 네임 스페이스 `XmlWriter` 는 특성에 대 한 대체 접두사를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-117">For example, if an attribute and element have the same prefix but different namespaces, `XmlWriter` generates an alternate prefix for the attribute.</span></span> <span data-ttu-id="c563e-118">생성 된 접두사의 이름은 `n{i}` 여기서 `i` 1부터 시작 하는 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-118">The generated prefixes are named `n{i}` where `i` is a number beginning at 1.</span></span> <span data-ttu-id="c563e-119">수는 각 요소에 대해 1로 다시 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-119">The number is reset to 1 for each element.</span></span>  
  
 <span data-ttu-id="c563e-120">네임 스페이스 URI와 연결 된 특성에는 접두사 (기본 네임 스페이스 특성에 적용 되지 않습니다) 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-120">Attributes which are associated with a namespace URI must have a prefix (default namespaces do not apply to attributes).</span></span> <span data-ttu-id="c563e-121">이 XML 권장 사항의 W3C 네임 스페이스의 섹션 5.2에 따릅니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-121">This conforms to section 5.2 of the W3C Namespaces in XML recommendation.</span></span> <span data-ttu-id="c563e-122">특성 네임 스페이스 URI를 참조 하지만 접두사를 지정 하지 않는 경우 작성기 특성에 대 한 접두사를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-122">If an attribute references a namespace URI, but does not specify a prefix, the writer generates a prefix for the attribute.</span></span>  
  
 <span data-ttu-id="c563e-123">빈 요소를 작성 하는 경우는 추가 사이 공백을 추가 태그 이름 및 닫는 태그, 예를 들어 `<item />`합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-123">When writing an empty element, an additional space is added between tag name and the closing tag, for example `<item />`.</span></span> <span data-ttu-id="c563e-124">오래 된 브라우저와 호환성을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-124">This provides compatibility with older browsers.</span></span>  
  
 <span data-ttu-id="c563e-125">경우는 `String` 메서드 매개 변수로 사용 됩니다 `null` 고 `String.Empty` 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-125">When a `String` is used as method parameter, `null` and `String.Empty` are equivalent.</span></span> <span data-ttu-id="c563e-126">`String.Empty` W3C 규칙을 따릅니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-126">`String.Empty` follows the W3C rules.</span></span>  
  
 <span data-ttu-id="c563e-127">강력한 형식의 데이터를 작성 하려면 사용는 <xref:System.Xml.XmlConvert> 데이터 형식을 문자열로 변환 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-127">To write strongly typed data, use the <xref:System.Xml.XmlConvert> class to convert data types to string.</span></span> <span data-ttu-id="c563e-128">다음 C# 코드에서 데이터를 변환 하는 예를 들어 `Double` 하 `String` 요소를 쓰고 `<price>19.95</price>`합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-128">For example, the following C# code converts the data from `Double` to `String` and writes the element `<price>19.95</price>`.</span></span>  
  
```csharp  
Double price = 19.95;  
writer.WriteElementString("price", XmlConvert.ToString(price));  
```  
  
 <span data-ttu-id="c563e-129">`XmlTextWriter` 다음을 확인 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-129">`XmlTextWriter` does not check for the following:</span></span>  
  
-   <span data-ttu-id="c563e-130">특성 및 요소 이름에 잘못 된 문자가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-130">Invalid characters in attribute and element names.</span></span>  
  
-   <span data-ttu-id="c563e-131">지정 된 인코딩을 맞지 않는 유니코드 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-131">Unicode characters that do not fit the specified encoding.</span></span> <span data-ttu-id="c563e-132">지정 된 인코딩과 유니코드 문자를 맞지 않는 경우는 `XmlTextWriter` 문자 엔터티를 유니코드 문자를 이스케이프 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-132">If the Unicode characters do not fit the specified encoding, the `XmlTextWriter` does not escape the Unicode characters into character entities.</span></span>  
  
-   <span data-ttu-id="c563e-133">중복 된 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-133">Duplicate attributes.</span></span>  
  
-   <span data-ttu-id="c563e-134">DOCTYPE의 공용 식별자 또는 시스템 식별자 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-134">Characters in the DOCTYPE public identifier or system identifier.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="c563e-135">보안 고려 사항</span><span class="sxs-lookup"><span data-stu-id="c563e-135">Security Considerations</span></span>  
 <span data-ttu-id="c563e-136">다음 항목은 작업할 때 고려해 야 할 사항은 <xref:System.Xml.XmlTextWriter> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-136">The following items are things to consider when working with the <xref:System.Xml.XmlTextWriter> class.</span></span>  
  
-   <span data-ttu-id="c563e-137">throw 된 예외는 <xref:System.Xml.XmlTextWriter> 응용 프로그램에 버블링 하지 않을 경로 정보가 노출 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-137">Exceptions thrown by the <xref:System.Xml.XmlTextWriter> can disclose path information that you do not want bubbled up to the application.</span></span> <span data-ttu-id="c563e-138">응용 프로그램에서는 예외를 캐치하고 적절히 처리해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-138">Your applications must catch exceptions and process them appropriately.</span></span>  
  
-   <span data-ttu-id="c563e-139"><xref:System.Xml.XmlTextWriter>를 다른 응용 프로그램에 전달하면 원본으로 사용하는 스트림이 해당 응용 프로그램에 노출됩니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-139">When you pass the <xref:System.Xml.XmlTextWriter> to another application the underlying stream is exposed to that application.</span></span> <span data-ttu-id="c563e-140"><xref:System.Xml.XmlTextWriter>를 부분 신뢰 응용 프로그램에 전달해야 할 경우 <xref:System.Xml.XmlWriter> 메서드에서 만든 <xref:System.Xml.XmlWriter.Create%2A> 개체를 대신 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-140">If you need to pass the <xref:System.Xml.XmlTextWriter> to a semi-trusted application, you should use an <xref:System.Xml.XmlWriter> object created by the <xref:System.Xml.XmlWriter.Create%2A> method instead.</span></span>  
  
-   <span data-ttu-id="c563e-141">합니다 <xref:System.Xml.XmlTextWriter> 에 전달 되는 모든 데이터의 유효성을 검사 하지 않습니다 합니다 <xref:System.Xml.XmlTextWriter.WriteDocType%2A> 또는 <xref:System.Xml.XmlTextWriter.WriteRaw%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c563e-141">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteDocType%2A> or <xref:System.Xml.XmlTextWriter.WriteRaw%2A> methods.</span></span> <span data-ttu-id="c563e-142">임의의 데이터를 이러한 메서드에 전달 해서는 안 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-142">You should not pass arbitrary data to these methods.</span></span>  
  
-   <span data-ttu-id="c563e-143">기본 설정이 변경 되 경우 생성 된 출력을 올바른 형식의 XML 데이터 임을 보장할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-143">If the default settings are changed, there is no guarantee that the generated output is well-formed XML data.</span></span>  
  
-   <span data-ttu-id="c563e-144">와 같은 지원 구성 요소를 받지 않는 <xref:System.Text.Encoding> 신뢰할 수 없는 소스에서 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-144">Do not accept supporting components, such as an <xref:System.Text.Encoding> object, from an untrusted source.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="http://msdn.microsoft.com/library/e695047f-3c0f-4045-8708-5baea91cc380">
      <span data-ttu-id="c563e-145">XML 문서 및 데이터</span>
      <span class="sxs-lookup">
        <span data-stu-id="c563e-145">XML Documents and Data</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c563e-146">
            <see langword="XmlTextWriter" /> 클래스의 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-146">Creates an instance of the <see langword="XmlTextWriter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-147">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-147">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (System.IO.TextWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (w As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::IO::TextWriter ^ w);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextWriter : System.IO.TextWriter -&gt; System.Xml.XmlTextWriter" Usage="new System.Xml.XmlTextWriter w" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="w" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="c563e-148">쓸 <see langword="TextWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-148">The <see langword="TextWriter" /> to write to.</span>
          </span>
          <span data-ttu-id="c563e-149">
            <see langword="TextWriter" />가 이미 올바른 인코딩으로 설정된 것으로 가정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-149">It is assumed that the <see langword="TextWriter" /> is already set to the correct encoding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c563e-150">지정된 <see cref="T:System.IO.TextWriter" />를 사용하여 <see langword="XmlTextWriter" /> 클래스의 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-150">Creates an instance of the <see langword="XmlTextWriter" /> class using the specified <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-151">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-151">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (System.IO.Stream w, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream w, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::IO::Stream ^ w, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextWriter : System.IO.Stream * System.Text.Encoding -&gt; System.Xml.XmlTextWriter" Usage="new System.Xml.XmlTextWriter (w, encoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="w" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="c563e-152">작성하려는 스트림입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-152">The stream to which you want to write.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="c563e-153">생성할 인코딩입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-153">The encoding to generate.</span>
          </span>
          <span data-ttu-id="c563e-154">인코딩이 <see langword="null" />이면 스트림이 UTF-8로 작성되고 <see langword="ProcessingInstruction" />의 인코딩 특성이 생략됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-154">If encoding is <see langword="null" /> it writes out the stream as UTF-8 and omits the encoding attribute from the <see langword="ProcessingInstruction" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c563e-155">지정된 스트림 및 인코딩을 사용하여 <see langword="XmlTextWriter" /> 클래스의 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-155">Creates an instance of the <see langword="XmlTextWriter" /> class using the specified stream and encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-156">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-156">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c563e-157">인코딩이 지원되지 않거나 스트림을 작성할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-157">The encoding is not supported or the stream cannot be written to.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c563e-158">
            <paramref name="w" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-158">
              <paramref name="w" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (string filename, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::String ^ filename, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextWriter : string * System.Text.Encoding -&gt; System.Xml.XmlTextWriter" Usage="new System.Xml.XmlTextWriter (filename, encoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="filename">
          <span data-ttu-id="c563e-159">작성할 파일 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-159">The filename to write to.</span>
          </span>
          <span data-ttu-id="c563e-160">파일이 있으면 해당 파일이 잘리고 새 콘텐츠로 덮어써집니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-160">If the file exists, it truncates it and overwrites it with the new content.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="c563e-161">생성할 인코딩입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-161">The encoding to generate.</span>
          </span>
          <span data-ttu-id="c563e-162">인코딩이 <see langword="null" />이면 파일이 UTF-8로 작성되고 <see langword="ProcessingInstruction" />의 인코딩 특성이 생략됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-162">If encoding is <see langword="null" /> it writes the file out as UTF-8, and omits the encoding attribute from the <see langword="ProcessingInstruction" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c563e-163">지정된 파일을 사용하여 <see cref="T:System.Xml.XmlTextWriter" /> 클래스의 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-163">Creates an instance of the <see cref="T:System.Xml.XmlTextWriter" /> class using the specified file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-164">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-164">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c563e-165">인코딩이 지원되지 않는 경우 또는 파일 이름이 비어 있거나 공백 또는 잘못된 문자가 포함되어 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-165">The encoding is not supported; the filename is empty, contains only white space, or contains one or more invalid characters.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="c563e-166">액세스가 거부되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-166">Access is denied.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c563e-167">파일 이름이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-167">The filename is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="c563e-168">쓸 디렉터리가 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-168">The directory to write to is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c563e-169">파일 이름에 정확하지 않거나 올바르지 않은 파일 이름, 디렉터리 이름 또는 볼륨 레이블 구문이 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-169">The filename includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="c563e-170">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-170">The caller does not have the required permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BaseStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream BaseStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream BaseStream" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.BaseStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ BaseStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseStream : System.IO.Stream" Usage="System.Xml.XmlTextWriter.BaseStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c563e-171">내부 스트림 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-171">Gets the underlying stream object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c563e-172">
            <see langword="XmlTextWriter" />가 작성 중인 스트림이거나, <see cref="T:System.IO.TextWriter" /> 클래스에서 상속되지 않은 <see cref="T:System.IO.StreamWriter" />를 사용하여 <see langword="null" />가 생성된 경우에는 <see langword="XmlTextWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-172">The stream to which the <see langword="XmlTextWriter" /> is writing or <see langword="null" /> if the <see langword="XmlTextWriter" /> was constructed using a <see cref="T:System.IO.TextWriter" /> that does not inherit from the <see cref="T:System.IO.StreamWriter" /> class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-173">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-173">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c563e-174">작성기를 사용 하 여 생성 된 경우는 `TextWriter` 에서 파생 된를 `StreamWriter` 클래스에서이 속성은 해당 하는 <xref:System.IO.StreamWriter.BaseStream%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-174">If the writer was constructed using a `TextWriter` that is derived from the `StreamWriter` class, this property is equivalent to the <xref:System.IO.StreamWriter.BaseStream%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="c563e-175">작성기를 사용 하 여 생성 된 경우는 <xref:System.IO.Stream>,이 속성을 반환 합니다 `Stream` 생성자에 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-175">If the writer was constructed using a <xref:System.IO.Stream>, this property returns the `Stream` passed to the constructor.</span></span> <span data-ttu-id="c563e-176">이 속성을 반환 하는 경우 기록기에 생성 된 파일 이름을 사용 하는 `Stream` 파일을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-176">If the writer was constructed using a file name, this property returns the `Stream` representing the file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="xmlTextWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c563e-177">이 스트림과 내부 스트림을 닫습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-177">Closes this stream and the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-178">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-178">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c563e-179">모든 요소 또는 특성 열려 자동으로 닫힙니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-179">Any elements or attributes left open are automatically closed.</span></span>  
  
 <span data-ttu-id="c563e-180">이 메서드는 모든 예외를 throw 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-180">This method does not throw any exceptions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c563e-181">다음 예제에서는 XML 조각을 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-181">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="xmlTextWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c563e-182">버퍼에 있는 모든 내용을 내부 스트림으로 플러시하고 내부 스트림도 플러시합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-182">Flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-183">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-183">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c563e-184">대신 이것을 <xref:System.Xml.XmlTextWriter.Close%2A> 버퍼에 있는 내용을 손실 하지 않고 내부 스트림에 자세히 작성 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="c563e-184">This is called instead of <xref:System.Xml.XmlTextWriter.Close%2A> when you want to write more to the underlying stream without losing what is still in the buffer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c563e-185">다음 예제에서는 두 개의 XML 조각을 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-185">The following example writes out two XML fragments.</span></span>  
  
 [!code-cpp[XmlTextWriter.Flush#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextWriter.Flush/CPP/write2docs.cpp#1)]
 [!code-csharp[XmlTextWriter.Flush#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextWriter.Flush/CS/write2docs.cs#1)]
 [!code-vb[XmlTextWriter.Flush#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextWriter.Flush/VB/write2docs.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Formatting">
      <MemberSignature Language="C#" Value="public System.Xml.Formatting Formatting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Formatting Formatting" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Formatting" />
      <MemberSignature Language="VB.NET" Value="Public Property Formatting As Formatting" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Formatting Formatting { System::Xml::Formatting get(); void set(System::Xml::Formatting value); };" />
      <MemberSignature Language="F#" Value="member this.Formatting : System.Xml.Formatting with get, set" Usage="System.Xml.XmlTextWriter.Formatting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Formatting</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c563e-186">출력의 형식이 지정되는 방법을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-186">Indicates how the output is formatted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c563e-187">
            <see cref="T:System.Xml.Formatting" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-187">One of the <see cref="T:System.Xml.Formatting" /> values.</span>
          </span>
          <span data-ttu-id="c563e-188">기본값은 <see langword="Formatting.None" />(특별한 형식 지정 없음)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-188">The default is <see langword="Formatting.None" /> (no special formatting).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-189">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-189">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c563e-190">경우는 `Indented` 옵션을 설정 하면 사용 하 여 자식 요소가 들여쓰기 됩니다 합니다 <xref:System.Xml.XmlTextWriter.Indentation%2A> 및 <xref:System.Xml.XmlTextWriter.IndentChar%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-190">If the `Indented` option is set, child elements are indented using the <xref:System.Xml.XmlTextWriter.Indentation%2A> and <xref:System.Xml.XmlTextWriter.IndentChar%2A> properties.</span></span> <span data-ttu-id="c563e-191">만 요소 콘텐츠를 들여씁니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-191">Only element content is indented.</span></span> <span data-ttu-id="c563e-192">다음 C# 코드를 혼합 된 콘텐츠를 포함 하 여 HTML 요소를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-192">The following C# code writes out HTML elements including mixed content:</span></span>  
  
```csharp  
XmlTextWriter w = new XmlTextWriter(Console.Out);   
 w.Formatting = Formatting.Indented;   
 w.WriteStartElement("ol");   
 w.WriteStartElement("li");   
 w.WriteString("The big "); // This means "li" now has a mixed content model.  
 w.WriteElementString("b", "E");   
 w.WriteElementString("i", "lephant");   
 w.WriteString(" walks slowly.");   
 w.WriteEndElement();   
 w.WriteEndElement();  
```  
  
 <span data-ttu-id="c563e-193">위 코드의 출력은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-193">The above code produces the following output:</span></span>  
  
```xml  
<ol>   
  <li>The big <b>E</b><i>lephant</i> walks slowly.</li>   
</ol>  
```  
  
 <span data-ttu-id="c563e-194">HTML에서이 볼 때 굵게 및 기울임꼴 요소 사이 공백이 없음 나타납니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-194">When this is viewed in HTML no white space appears between the bold and italic elements.</span></span> <span data-ttu-id="c563e-195">사실,이 예제에서는 이러한 요소 사이 추가 된 들여쓰기 하는 경우 단어 "코끼리" 것 잘못 중단입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-195">In fact, in this example, if indenting was added between these elements the word "Elephant" would be incorrectly broken.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c563e-196">모든 텍스트 콘텐츠를 제외 하 고 쓰기 `String.Empty` 혼합된 콘텐츠 모드에 해당 요소를 배치 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-196">Writing any text content, excluding `String.Empty` puts that element into mixed content mode.</span></span> <span data-ttu-id="c563e-197">자식 요소는이 "혼합된" 모드 상태를 상속 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-197">Child elements do not inherit this "mixed" mode status.</span></span> <span data-ttu-id="c563e-198">"혼합"는 요소의 자식 요소를 들여쓰기지 않습니다, 그리고 경우가 "mixed" 콘텐츠를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-198">A child element of a "mixed" element does indenting, unless it is also contains "mixed" content.</span></span> <span data-ttu-id="c563e-199">요소 콘텐츠 (http://www.w3.org/TR/1998/REC-xml-19980210#sec-element-content) 콘텐츠를 혼합 하 고 (http://www.w3.org/TR/1998/REC-xml-19980210#sec-mixed-content) 이러한 용어의 XML 1.0 정의 따라 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-199">Element content (http://www.w3.org/TR/1998/REC-xml-19980210#sec-element-content) and mixed content (http://www.w3.org/TR/1998/REC-xml-19980210#sec-mixed-content) are defined according to the XML 1.0 definitions of these terms.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c563e-200">다음 예제에서는 XML 조각을 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-200">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="Indentation">
      <MemberSignature Language="C#" Value="public int Indentation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Indentation" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Indentation" />
      <MemberSignature Language="VB.NET" Value="Public Property Indentation As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Indentation { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Indentation : int with get, set" Usage="System.Xml.XmlTextWriter.Indentation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c563e-201">
            <see cref="P:System.Xml.XmlTextWriter.Formatting" />이 <see langword="Formatting.Indented" />로 설정될 때 계층구조의 각 수준에 작성할 IndentChars 수를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-201">Gets or sets how many IndentChars to write for each level in the hierarchy when <see cref="P:System.Xml.XmlTextWriter.Formatting" /> is set to <see langword="Formatting.Indented" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c563e-202">각 수준의 <see langword="IndentChars" /> 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-202">Number of <see langword="IndentChars" /> for each level.</span>
          </span>
          <span data-ttu-id="c563e-203">기본값은 2입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-203">The default is 2.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-204">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-204">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c563e-205">들여쓰기는 노드 형식에서 수행 됩니다. `DocumentType`, `Element`, `Comment`, `ProcessingInstruction`, 및 `CDATASection`합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-205">Indentation is performed on following node types: `DocumentType`, `Element`, `Comment`, `ProcessingInstruction`, and `CDATASection`.</span></span> <span data-ttu-id="c563e-206">다른 모든 노드 유형에 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-206">All other node types are not affected.</span></span> <span data-ttu-id="c563e-207">`XmlTextWriter` 내부 DTD 하위 집합을 들여쓰지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-207">The `XmlTextWriter` does not indent the internal DTD subset.</span></span> <span data-ttu-id="c563e-208">그러나 내부 DTD 하위 집합에 서식을 적용 하려면 다음을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-208">However, you could do the following to apply formatting to the internal DTD subset.</span></span>  
  
```csharp  
String name = "Employees";  
String pubid = null;  
String sysid = null;  
String subset =  
@"  
    <!ELEMENT Employees (Employee)+>  
    <!ELEMENT Employee EMPTY>  
    <!ATTLIST Employee firstname CDATA #REQUIRED>  
    <!ENTITY Company 'Microsoft']]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c563e-209">이 속성을 음의 값으로 설정하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-209">Setting this property to a negative value.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlTextWriter.IndentChar" />
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="IndentChar">
      <MemberSignature Language="C#" Value="public char IndentChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char IndentChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.IndentChar" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char IndentChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.IndentChar : char with get, set" Usage="System.Xml.XmlTextWriter.IndentChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c563e-210">
            <see cref="P:System.Xml.XmlTextWriter.Formatting" />이 <see langword="Formatting.Indented" />로 설정된 경우 들여쓰기에 사용할 문자를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-210">Gets or sets which character to use for indenting when <see cref="P:System.Xml.XmlTextWriter.Formatting" /> is set to <see langword="Formatting.Indented" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c563e-211">들여쓰기에 사용할 문자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-211">The character to use for indenting.</span>
          </span>
          <span data-ttu-id="c563e-212">기본값은 공백입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-212">The default is space.</span>
          </span>
          <block subset="none" type="note">
            <para>
              <span data-ttu-id="c563e-213">
                <see langword="XmlTextWriter" />를 사용하면 이 속성을 모든 문자로 설정할 수 있습니다.</span>
              <span class="sxs-lookup">
                <span data-stu-id="c563e-213">The <see langword="XmlTextWriter" /> allows you to set this property to any character.</span>
              </span>
              <span data-ttu-id="c563e-214">유효한 XML을 확인하려면 유효한 공백 문자 0x9, 0x10, 0x13 또는 0x20을 지정해야 합니다.</span>
              <span class="sxs-lookup">
                <span data-stu-id="c563e-214">To ensure valid XML, you must specify a valid white space character, 0x9, 0x10, 0x13 or 0x20.</span>
              </span>
            </para>
          </block>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-215">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-215">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlTextWriter.Indentation" />
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="LookupPrefix">
      <MemberSignature Language="C#" Value="public override string LookupPrefix (string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string LookupPrefix(string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function LookupPrefix (ns As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ LookupPrefix(System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.LookupPrefix : string -&gt; string" Usage="xmlTextWriter.LookupPrefix ns" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ns">
          <span data-ttu-id="c563e-216">찾으려는 접두사를 가진 네임스페이스 URI입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-216">Namespace URI whose prefix you want to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c563e-217">네임스페이스 URI의 현재 네임스페이스 범위에 정의된 가장 비슷한 접두사를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-217">Returns the closest prefix defined in the current namespace scope for the namespace URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c563e-218">일치하는 접두사입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-218">The matching prefix.</span>
          </span>
          <span data-ttu-id="c563e-219">또는 현재 범위에 일치하는 네임스페이스 URI가 없는 경우에는 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-219">Or <see langword="null" /> if no matching namespace URI is found in the current scope.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-220">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-220">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c563e-221">다음 예제에서는 책을 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-221">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c563e-222">
            <paramref name="ns" />가 <see langword="null" /> 또는 <see langword="String.Empty" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-222">
              <paramref name="ns" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Namespaces">
      <MemberSignature Language="C#" Value="public bool Namespaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Namespaces" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Namespaces" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespaces As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Namespaces { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Namespaces : bool with get, set" Usage="System.Xml.XmlTextWriter.Namespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c563e-223">네임스페이스 지원 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-223">Gets or sets a value indicating whether to do namespace support.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c563e-224">네임스페이스를 지원하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-224">
              <see langword="true" /> to support namespaces; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c563e-225">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-225">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-226">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-226">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c563e-227">이 속성은 작성기 www.w3.org/TR/REC-xml-names 위치한 XML 권장 사항의 W3C 네임 스페이스를 지원 하는지 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-227">This property determines whether the writer supports the W3C Namespaces in XML recommendation located at www.w3.org/TR/REC-xml-names.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c563e-228">
            <see langword="WriteState.Start" /> 상태일 때만 이 속성을 변경할 수 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-228">You can only change this property when in the <see langword="WriteState.Start" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="QuoteChar">
      <MemberSignature Language="C#" Value="public char QuoteChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char QuoteChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.QuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Property QuoteChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char QuoteChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.QuoteChar : char with get, set" Usage="System.Xml.XmlTextWriter.QuoteChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c563e-229">특성 값을 인용하는 데 사용할 문자를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-229">Gets or sets which character to use to quote attribute values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c563e-230">특성 값을 인용하는 데 사용할 문자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-230">The character to use to quote attribute values.</span>
          </span>
          <span data-ttu-id="c563e-231">작은따옴표를 이어야 합니다 (&amp;#39;) 또는 큰따옴표 (&amp;#34;) (&amp;#34;).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-231">This must be a single quote (&amp;#39;) or a double quote (&amp;#34;).</span>
          </span>
          <span data-ttu-id="c563e-232">기본값은 큰따옴표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-232">The default is a double quote.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-233">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-233">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c563e-234">이 속성을 작은따옴표 또는 큰따옴표 이외의 값으로 설정하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-234">Setting this property to something other than either a single or double quote.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64">
      <MemberSignature Language="C#" Value="public override void WriteBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteBase64 (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteBase64 : byte[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="c563e-235">인코딩할 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-235">Byte array to encode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="c563e-236">쓸 바이트의 시작을 나타내는 버퍼 내의 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-236">The position within the buffer indicating the start of the bytes to write.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="c563e-237">쓸 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-237">The number of bytes to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c563e-238">지정된 바이너리 바이트를 base64로 인코딩하고 결과 텍스트를 작성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-238">Encodes the specified binary bytes as base64 and writes out the resulting text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-239">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-239">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c563e-240">다음 예에서는 사용 하 여 입력된 파일을 인코딩합니다 `WriteBase64` 및 임시 XML 파일을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-240">The following example encodes an input file using `WriteBase64` and generates a temporary XML file.</span></span> <span data-ttu-id="c563e-241">임시 XML 파일을 사용 하 여 디코드 되는 <xref:System.Xml.XmlTextReader.ReadBase64%2A> 메서드 하 고 원본 파일 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-241">The temporary XML file is decoded using the <xref:System.Xml.XmlTextReader.ReadBase64%2A> method and compared to the original file.</span></span>  
  
 [!code-cpp[XmlWriter.WriteBase64#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteBase64/CPP/writebase64.cpp#1)]
 [!code-csharp[XmlWriter.WriteBase64#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteBase64/CS/writebase64.cs#1)]
 [!code-vb[XmlWriter.WriteBase64#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteBase64/VB/writebase64.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c563e-242">
            <paramref name="buffer" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-242">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c563e-243">버퍼 길이에서 <paramref name="index" />를 빼면 <paramref name="count" />보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-243">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c563e-244">
            <paramref name="index" /> 또는 <paramref name="count" />가 0보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-244">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c563e-245">
            <see cref="P:System.Xml.XmlTextWriter.WriteState" />이 <see langword="Closed" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-245">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBinHex">
      <MemberSignature Language="C#" Value="public override void WriteBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteBinHex (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteBinHex : byte[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="c563e-246">인코딩할 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-246">Byte array to encode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="c563e-247">쓸 바이트의 시작을 나타내는 버퍼 내의 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-247">The position in the buffer indicating the start of the bytes to write.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="c563e-248">쓸 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-248">The number of bytes to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c563e-249">지정된 바이너리 바이트를 Binhex로 인코딩하고 결과 텍스트를 작성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-249">Encodes the specified binary bytes as binhex and writes out the resulting text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-250">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-250">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c563e-251">
            <paramref name="buffer" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-251">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c563e-252">버퍼 길이에서 <paramref name="index" />를 빼면 <paramref name="count" />보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-252">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c563e-253">
            <paramref name="index" /> 또는 <paramref name="count" />가 0보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-253">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c563e-254">
            <see cref="P:System.Xml.XmlTextWriter.WriteState" />가 Closed인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-254">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is Closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCData">
      <MemberSignature Language="C#" Value="public override void WriteCData (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteCData(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteCData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteCData (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteCData(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteCData : string -&gt; unit" Usage="xmlTextWriter.WriteCData text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="c563e-255">CDATA 블록 내에 배치할 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-255">Text to place inside the CDATA block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c563e-256">지정된 텍스트를 포함하는 &lt;![CDATA[...]]&gt; 블록을 작성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-256">Writes out a &lt;![CDATA[...]]&gt; block containing the specified text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-257">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-257">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c563e-258">하는 경우 `text` 중 하나는 `null` 또는 `String.Empty`,이 메서드는 빈 CDATA 블록을 예를 들어 씁니다 \<! [ CDATA]</span><span class="sxs-lookup"><span data-stu-id="c563e-258">If `text` is either `null` or `String.Empty`, this method writes an empty CDATA block, for example \<![CDATA[]</span></span>]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c563e-259">텍스트로 인해 XML 문서가 제대로 구성되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-259">The text would result in a non-well formed XML document.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c563e-260">
            <see cref="P:System.Xml.XmlTextWriter.WriteState" />이 <see langword="Closed" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-260">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCharEntity">
      <MemberSignature Language="C#" Value="public override void WriteCharEntity (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteCharEntity(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteCharEntity(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteCharEntity (ch As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteCharEntity(char ch);" />
      <MemberSignature Language="F#" Value="override this.WriteCharEntity : char -&gt; unit" Usage="xmlTextWriter.WriteCharEntity ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">
          <span data-ttu-id="c563e-261">문자 엔터티를 생성할 유니코드 문자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-261">Unicode character for which to generate a character entity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c563e-262">지정된 유니코드 문자 값에 대한 문자 엔터티가 생성되도록 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-262">Forces the generation of a character entity for the specified Unicode character value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-263">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-263">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c563e-264">이 메서드는 16 진수 문자 엔터티 참조 형식에서 유니코드 문자를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-264">This method writes the Unicode character in hexadecimal character entity reference format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c563e-265">다음 예제에서는 `WriteCharEntity` 전자 메일 주소를 작성 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-265">The following example uses the `WriteCharEntity` method to write an email address.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c563e-266">문자가 서로게이트 쌍 문자 범위 <see langword="0xd800" /> - <see langword="0xdfff" />에 있거나 텍스트로 인해 XML 문서가 제대로 구성되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-266">The character is in the surrogate pair character range, <see langword="0xd800" /> - <see langword="0xdfff" />; or the text would result in a non-well formed XML document.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c563e-267">
            <see cref="P:System.Xml.XmlTextWriter.WriteState" />이 <see langword="Closed" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-267">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteChars">
      <MemberSignature Language="C#" Value="public override void WriteChars (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteChars(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteChars (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteChars(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteChars : char[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteChars (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="c563e-268">쓸 텍스트가 포함된 문자 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-268">Character array containing the text to write.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="c563e-269">쓸 텍스트의 시작을 나타내는 버퍼 내의 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-269">The position in the buffer indicating the start of the text to write.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="c563e-270">쓸 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-270">The number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c563e-271">한 번에 한 버퍼씩 텍스트를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-271">Writes text one buffer at a time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-272">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-272">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c563e-273">이 메서드 한 번에 많은 양의 텍스트 하나의 버퍼를 쓰는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-273">This method can be used to write large amounts of text one buffer at a time.</span></span>  
  
 <span data-ttu-id="c563e-274">특수 한 처리 되도록 해야 합니다 `WriteChars` 메서드가 여러 버퍼 쓰기 서로게이트 쌍 문자가 분할 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-274">Special handling must be done to ensure the `WriteChars` method does not split surrogate pair characters across multiple buffer writes.</span></span> <span data-ttu-id="c563e-275">XML 사양 서로게이트 쌍에 대 한 유효한 범위를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-275">The XML specification defines the valid ranges for surrogate pairs.</span></span>  
  
 <span data-ttu-id="c563e-276">서로게이트 쌍 문자 버퍼에서 분할 되는 서로게이트 쌍 문자에 작성 되 면 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-276">An exception is thrown if surrogate pair characters are written that would result in the surrogate pair characters being split in the buffer.</span></span>  
  
   
  
## Examples  
 [!code-csharp[XmlTextWriter.WriteChars#1](~/samples/snippets/csharp/VS_Snippets_Data/xmltextwriter.writechars/cs/xmlwriterwritecharsexample.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c563e-277">
            <paramref name="buffer" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-277">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c563e-278">
            <paramref name="index" /> 또는 <paramref name="count" />가 0보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-278">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="c563e-279">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-279">-or-</span>
          </span>
          <span data-ttu-id="c563e-280">버퍼 길이에서 <paramref name="index" />를 뺀 값이 <paramref name="count" />보다 작고, 호출한 결과 서로게이트 쌍 문자가 분할되거나 잘못된 서로게이트 쌍이 작성되는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-280">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />; the call results in surrogate pair characters being split or an invalid surrogate pair being written.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c563e-281">
            <see cref="P:System.Xml.XmlTextWriter.WriteState" />가 Closed인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-281">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is Closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteComment">
      <MemberSignature Language="C#" Value="public override void WriteComment (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteComment(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteComment(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteComment (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteComment(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteComment : string -&gt; unit" Usage="xmlTextWriter.WriteComment text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="c563e-282">주석 내에 배치할 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-282">Text to place inside the comment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c563e-283">지정된 텍스트를 포함하는 주석 &lt;!--...--&gt;을 작성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-283">Writes out a comment &lt;!--...--&gt; containing the specified text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-284">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-284">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c563e-285">경우 `text` 은 `null` 또는 `String.Empty`,이 메서드는 작성을 `Comment` 예를 들어 콘텐츠, 데이터가 없는 \<!--->.</span><span class="sxs-lookup"><span data-stu-id="c563e-285">If `text` is either `null` or `String.Empty`, this method writes a `Comment` with no data content, for example \<!---->.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c563e-286">다음 예제에서는 책을 나타내는 XML 파일을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-286">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c563e-287">텍스트로 인해 XML 문서가 제대로 구성되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-287">The text would result in a non-well formed XML document</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c563e-288">
            <see cref="P:System.Xml.XmlTextWriter.WriteState" />이 <see langword="Closed" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-288">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteDocType">
      <MemberSignature Language="C#" Value="public override void WriteDocType (string name, string pubid, string sysid, string subset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteDocType(string name, string pubid, string sysid, string subset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteDocType (name As String, pubid As String, sysid As String, subset As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteDocType(System::String ^ name, System::String ^ pubid, System::String ^ sysid, System::String ^ subset);" />
      <MemberSignature Language="F#" Value="override this.WriteDocType : string * string * string * string -&gt; unit" Usage="xmlTextWriter.WriteDocType (name, pubid, sysid, subset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="pubid" Type="System.String" />
        <Parameter Name="sysid" Type="System.String" />
        <Parameter Name="subset" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c563e-289">DOCTYPE의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-289">The name of the DOCTYPE.</span>
          </span>
          <span data-ttu-id="c563e-290">이 이름은 비어 있지 않아야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-290">This must be non-empty.</span>
          </span>
        </param>
        <param name="pubid">
          <span data-ttu-id="c563e-291">null이 아닌 경우 PUBLIC "pubid" "sysid"도 씁니다. 여기서 <c>pubid</c>와 <c>sysid</c>는 지정된 인수 값으로 바뀝니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-291">If non-null it also writes PUBLIC "pubid" "sysid" where <c>pubid</c> and <c>sysid</c> are replaced with the value of the given arguments.</span>
          </span>
        </param>
        <param name="sysid">
          <span data-ttu-id="c563e-292">
            <c>pubid</c>가 null이고 <c>sysid</c>가 null이 아닌 경우 SYSTEM "sysid"를 씁니다. 여기서 <c>sysid</c>는 이 인수 값으로 바뀝니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-292">If <c>pubid</c> is null and <c>sysid</c> is non-null it writes SYSTEM "sysid" where <c>sysid</c> is replaced with the value of this argument.</span>
          </span>
        </param>
        <param name="subset">
          <span data-ttu-id="c563e-293">null이 아닌 경우 하위 집합이 이 인수 값으로 대체되는 [subset]을 작성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-293">If non-null it writes [subset] where subset is replaced with the value of this argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c563e-294">지정된 이름과 선택적 특성을 사용하여 DOCTYPE 선언을 작성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-294">Writes the DOCTYPE declaration with the specified name and optional attributes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-295">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-295">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c563e-296">이 메서드는 잘못 된 문자에 대 한 확인 되지 `pubid`하십시오 `sysid` 또는 `subset`합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-296">This method does not check for invalid characters in `pubid`, `sysid` or `subset`.</span></span> <span data-ttu-id="c563e-297">또한 확인 하지 않습니다 잘 구성 된 내부 하위 집합 인지 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-297">It also does not check that the internal subset is well-formed.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c563e-298">합니다 <xref:System.Xml.XmlTextWriter> 에 전달 되는 모든 데이터의 유효성을 검사 하지 않습니다는 <xref:System.Xml.XmlTextWriter.WriteDocType%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c563e-298">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteDocType%2A> method.</span></span> <span data-ttu-id="c563e-299">이 메서드를 임의의 데이터를 전달 하지 않아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-299">You should not pass arbitrary data to this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c563e-300">다음 예제에서는 책을 나타내는 XML 파일을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-300">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c563e-301">이 메서드가 루트 요소 다음의 프롤로그 외부에서 호출된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-301">This method was called outside the prolog (after the root element).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c563e-302">
            <paramref name="name" />이 <see langword="null" /> 또는 <see langword="String.Empty" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-302">
              <paramref name="name" /> is <see langword="null" /> or <see langword="String.Empty" /></span>
          </span>
          <span data-ttu-id="c563e-303">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-303">-or-</span>
          </span>
          <span data-ttu-id="c563e-304">
            <paramref name="name" />의 값이 잘못된 XML이 되는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-304">the value for <paramref name="name" /> would result in invalid XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndAttribute">
      <MemberSignature Language="C#" Value="public override void WriteEndAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndAttribute ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndAttribute();" />
      <MemberSignature Language="F#" Value="override this.WriteEndAttribute : unit -&gt; unit" Usage="xmlTextWriter.WriteEndAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c563e-305">이전 <see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" /> 호출을 닫습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-305">Closes the previous <see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" /> call.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-306">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-306">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c563e-307">호출 하는 경우 `WriteStartAttribute`,이 메서드를 사용 하 여 특성을 닫을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-307">If you call `WriteStartAttribute`, you can close the attribute with this method.</span></span>  
  
 <span data-ttu-id="c563e-308">호출 하 여 특성을 닫을 수도 있습니다 `WriteStartAttribute` 다시 호출 <xref:System.Xml.XmlWriter.WriteAttributeString%2A>를 호출 하거나 <xref:System.Xml.XmlTextWriter.WriteEndElement%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-308">You can also close the attribute by calling `WriteStartAttribute` again, calling <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, or calling <xref:System.Xml.XmlTextWriter.WriteEndElement%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c563e-309">다음 예제에서는 책을 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-309">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocument">
      <MemberSignature Language="C#" Value="public override void WriteEndDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndDocument();" />
      <MemberSignature Language="F#" Value="override this.WriteEndDocument : unit -&gt; unit" Usage="xmlTextWriter.WriteEndDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c563e-310">열려 있는 모든 요소나 특성을 닫고 작성기를 시작 상태로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-310">Closes any open elements or attributes and puts the writer back in the Start state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-311">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-311">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c563e-312">다음 예제에서는 책을 나타내는 XML 파일을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-312">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c563e-313">XML 문서가 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-313">The XML document is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndElement">
      <MemberSignature Language="C#" Value="public override void WriteEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndElement();" />
      <MemberSignature Language="F#" Value="override this.WriteEndElement : unit -&gt; unit" Usage="xmlTextWriter.WriteEndElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c563e-314">한 요소를 닫고 해당 네임스페이스 범위를 팝합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-314">Closes one element and pops the corresponding namespace scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-315">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-315">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c563e-316">짧은 끝 태그 요소에 콘텐츠가 없는 경우 "/ >" 작성 됩니다. 그렇지 않은 경우 전체 끝 태그를 작성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-316">If the element contains no content a short end tag "/>" is written; otherwise a full end tag is written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c563e-317">다음 예제에서는 책을 나타내는 XML 파일을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-317">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEntityRef">
      <MemberSignature Language="C#" Value="public override void WriteEntityRef (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEntityRef(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEntityRef(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEntityRef (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEntityRef(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.WriteEntityRef : string -&gt; unit" Usage="xmlTextWriter.WriteEntityRef name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c563e-318">엔터티 참조의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-318">Name of the entity reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c563e-319">엔터티 참조를 <see langword="&amp;name;" />처럼 작성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-319">Writes out an entity reference as <see langword="&amp;name;" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-320">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-320">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c563e-321">다음 예제에서는 책을 나타내는 XML 파일을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-321">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c563e-322">텍스트로 인해 XML 문서가 제대로 구성되지 않거나 <paramref name="name" />이 <see langword="null" /> 또는 <see langword="String.Empty" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-322">The text would result in a non-well formed XML document or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFullEndElement">
      <MemberSignature Language="C#" Value="public override void WriteFullEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteFullEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteFullEndElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteFullEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteFullEndElement();" />
      <MemberSignature Language="F#" Value="override this.WriteFullEndElement : unit -&gt; unit" Usage="xmlTextWriter.WriteFullEndElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c563e-323">한 요소를 닫고 해당 네임스페이스 범위를 팝합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-323">Closes one element and pops the corresponding namespace scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-324">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-324">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c563e-325">이 메서드는 항상 전체 끝 태그를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-325">This method always writes the full end tag.</span></span> <span data-ttu-id="c563e-326">전체 끝 태그를 포함 해야 하는 요소를 처리할 때 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-326">This is useful when dealing with elements that must include a full end tag.</span></span> <span data-ttu-id="c563e-327">브라우저에서 HTML 스크립트 블록을 사용 하 여 닫아야를 예상 하는 예를 들어, "\<스크립트/>"입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-327">For example, browsers expect HTML script blocks to be closed with "\</script>".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c563e-328">다음 예제에서는 콘텐츠가 없는 요소를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-328">The following example writes out an element with no content.</span></span> <span data-ttu-id="c563e-329">전체 끝 요소 태그를 쓸 WriteFullEndElement 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-329">It uses WriteFullEndElement to write the full end element tag.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteName">
      <MemberSignature Language="C#" Value="public override void WriteName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.WriteName : string -&gt; unit" Usage="xmlTextWriter.WriteName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c563e-330">작성할 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-330">Name to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c563e-331">W3C XML 1.0 권장 사항(http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name))에 따라 유효한 이름이 되도록 지정된 이름을 작성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-331">Writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-332">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-332">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c563e-333">하는 경우 <xref:System.Xml.XmlTextWriter.Namespaces%2A> 로 설정 된 `true`, `WriteName` 는 이름을 사용 하는 유효한 XML 권장 사항의 W3C 네임 스페이스에 따라 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-333">If <xref:System.Xml.XmlTextWriter.Namespaces%2A> is set to `true`, `WriteName` also checks that the name is also valid according to the W3C Namespaces in XML recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c563e-334">
            <paramref name="name" />이 올바른 XML 이름이 아니거나 <paramref name="name" />이 <see langword="null" /> 또는 <see langword="String.Empty" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-334">
              <paramref name="name" /> is not a valid XML name; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNmToken">
      <MemberSignature Language="C#" Value="public override void WriteNmToken (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteNmToken(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteNmToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteNmToken (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteNmToken(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.WriteNmToken : string -&gt; unit" Usage="xmlTextWriter.WriteNmToken name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c563e-335">작성할 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-335">Name to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c563e-336">W3C XML 1.0 권장 사항(http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name))에 따라 유효한 <see langword="NmToken" />이 되도록 지정된 이름을 작성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-336">Writes out the specified name, ensuring it is a valid <see langword="NmToken" /> according to the W3C XML 1.0 recommendation (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-337">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-337">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c563e-338">
            <paramref name="name" />이 올바른 <see langword="NmToken" />이 아니거나 <paramref name="name" />이 <see langword="null" /> 또는 <see langword="String.Empty" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-338">
              <paramref name="name" /> is not a valid <see langword="NmToken" />; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteProcessingInstruction">
      <MemberSignature Language="C#" Value="public override void WriteProcessingInstruction (string name, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteProcessingInstruction(string name, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteProcessingInstruction(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteProcessingInstruction (name As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteProcessingInstruction(System::String ^ name, System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteProcessingInstruction : string * string -&gt; unit" Usage="xmlTextWriter.WriteProcessingInstruction (name, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c563e-339">처리 명령의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-339">Name of the processing instruction.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="c563e-340">처리 명령에 포함할 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-340">Text to include in the processing instruction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c563e-341">이름과 텍스트 사이의 공백을 사용하여 처리 명령을 작성합니다(예: &lt;?name text?&gt;).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-341">Writes out a processing instruction with a space between the name and text as follows: &lt;?name text?&gt;.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-342">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-342">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c563e-343">경우 `text` 은 `null` 또는 `String.Empty`,이 메서드는 작성을 `ProcessingInstruction` 예를 들어 콘텐츠, 데이터가 없는 \<? 이름? >.</span><span class="sxs-lookup"><span data-stu-id="c563e-343">If `text` is either `null` or `String.Empty`, this method writes a `ProcessingInstruction` with no data content, for example \<?name?>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c563e-344">다음 예제에서는 책을 나타내는 XML 파일을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-344">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c563e-345">텍스트로 인해 XML 문서가 제대로 구성되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-345">The text would result in a non-well formed XML document.</span>
          </span>
          <span data-ttu-id="c563e-346">
            <paramref name="name" />가 <see langword="null" /> 또는 <see langword="String.Empty" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-346">
              <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
          <span data-ttu-id="c563e-347">
            <see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" />가 이미 호출된 후 이 메서드를 사용하여 XML 선언을 만드는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-347">This method is being used to create an XML declaration after <see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" /> has already been called.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteQualifiedName">
      <MemberSignature Language="C#" Value="public override void WriteQualifiedName (string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteQualifiedName(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteQualifiedName (localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteQualifiedName(System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.WriteQualifiedName : string * string -&gt; unit" Usage="xmlTextWriter.WriteQualifiedName (localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="c563e-348">작성할 로컬 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-348">The local name to write.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="c563e-349">이름과 연결할 네임스페이스 URI 입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-349">The namespace URI to associate with the name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c563e-350">네임스페이스로 한정된 이름을 작성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-350">Writes out the namespace-qualified name.</span>
          </span>
          <span data-ttu-id="c563e-351">이 메서드는 지정된 네임스페이스의 범위에 속하는 접두사를 찾습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-351">This method looks up the prefix that is in scope for the given namespace.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-352">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-352">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c563e-353">예를 들어, 다음 Microsoft Visual C# 코드.</span><span class="sxs-lookup"><span data-stu-id="c563e-353">For example, the following Microsoft Visual C# code:</span></span>  
  
```csharp  
writer.Formatting = Formatting.Indented;  
writer.WriteStartElement("root");  
 writer.WriteAttributeString("xmlns","x",null,"urn:abc");  
 writer.WriteStartElement("item");  
 writer.WriteStartAttribute("href",null);  
 writer.WriteString("#");  
 writer.WriteQualifiedName("test","urn:abc");  
 writer.WriteEndAttribute();  
 writer.WriteEndElement();  
 writer.WriteEndElement();  
 writer.Close();  
```  
  
 <span data-ttu-id="c563e-354">다음 출력이 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-354">Generates the following output:</span></span>  
  
```xml  
<root xmlns:x="urn:abc">  
 <item href="#x:test"/>  
 </root>  
```  
  
 <span data-ttu-id="c563e-355">경우 `ns` 매핑되는 현재 기본 네임 스페이스 접두사가 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-355">If `ns` maps to the current default namespace, no prefix is generated.</span></span>  
  
 <span data-ttu-id="c563e-356">특성 값을 작성할 때이 메서드는 경우 접두사를 생성 하는 `ns` 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-356">When writing attribute values, this method generates a prefix if `ns` is not found.</span></span> <span data-ttu-id="c563e-357">요소 콘텐츠를 작성할 때 예외가 발생 하는 경우 `ns` 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-357">When writing element content, it throws an exception if `ns` is not found.</span></span>  
  
 <span data-ttu-id="c563e-358">이 기록기 네임 스페이스를 지 원하는 경우 (<xref:System.Xml.XmlTextWriter.Namespaces%2A> 로 설정 된 `true`),이 메서드는 또한 XML 권장 사항의 W3C 네임 스페이스에 따라 올바른 이름 인지 확인 (http://www.w3.org/TR/REC-xml-names)합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-358">If this writer supports namespaces (<xref:System.Xml.XmlTextWriter.Namespaces%2A> is set to `true`), this method also checks that the name is valid according to the W3C Namespaces in XML recommendation (http://www.w3.org/TR/REC-xml-names).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c563e-359">다음 예제에서는 XSD 스키마의 일부를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-359">The following example writes out a portion of a XSD schema.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c563e-360">
            <paramref name="localName" />가 <see langword="null" /> 또는 <see langword="String.Empty" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-360">
              <paramref name="localName" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
          <span data-ttu-id="c563e-361">
            <paramref name="localName" />이 W3C Namespaces 사양에 따르는 유효한 이름이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-361">
              <paramref name="localName" /> is not a valid name according to the W3C Namespaces spec.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteRaw">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c563e-362">원시 태그를 직접 작성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-362">Writes raw markup manually.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-363">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-363">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public override void WriteRaw (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteRaw(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteRaw(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteRaw (data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteRaw(System::String ^ data);" />
      <MemberSignature Language="F#" Value="override this.WriteRaw : string -&gt; unit" Usage="xmlTextWriter.WriteRaw data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="c563e-364">작성할 텍스트를 포함하는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-364">String containing the text to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c563e-365">문자열에서 직접 원시 태그를 작성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-365">Writes raw markup manually from a string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-366">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-366">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c563e-367">이 메서드는 특수 문자를 이스케이프 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-367">This method does not escape special characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c563e-368">합니다 <xref:System.Xml.XmlTextWriter> 에 전달 되는 모든 데이터의 유효성을 검사 하지 않습니다는 <xref:System.Xml.XmlTextWriter.WriteRaw%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c563e-368">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="c563e-369">이 메서드를 임의의 데이터를 전달 하지 않아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-369">You should not pass arbitrary data to this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c563e-370">다음 예제에서는 사용 하 여 문자열을 작성 합니다 `WriteRaw` 메서드.</span><span class="sxs-lookup"><span data-stu-id="c563e-370">The following example writes a string using the `WriteRaw` method.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public override void WriteRaw (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteRaw(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteRaw (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteRaw(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteRaw : char[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteRaw (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="c563e-371">쓸 텍스트가 포함된 문자 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-371">Character array containing the text to write.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="c563e-372">쓸 텍스트의 시작을 나타내는 버퍼 내의 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-372">The position within the buffer indicating the start of the text to write.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="c563e-373">쓸 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-373">The number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c563e-374">문자 버퍼에서 직접 원시 태그를 작성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-374">Writes raw markup manually from a character buffer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-375">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-375">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c563e-376">이 메서드는 특수 문자를 이스케이프 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-376">This method does not escape special characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c563e-377">합니다 <xref:System.Xml.XmlTextWriter> 에 전달 되는 모든 데이터의 유효성을 검사 하지 않습니다는 <xref:System.Xml.XmlTextWriter.WriteRaw%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c563e-377">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="c563e-378">이 메서드를 임의의 데이터를 전달 하지 않아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-378">You should not pass arbitrary data to this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c563e-379">
            <paramref name="buffer" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-379">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c563e-380">
            <paramref name="index" /> 또는 <paramref name="count" />가 0보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-380">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="c563e-381">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-381">-or-</span>
          </span>
          <span data-ttu-id="c563e-382">버퍼 길이에서 <paramref name="index" />를 빼면 <paramref name="count" />보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-382">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartAttribute">
      <MemberSignature Language="C#" Value="public override void WriteStartAttribute (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartAttribute(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartAttribute (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartAttribute(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.WriteStartAttribute : string * string * string -&gt; unit" Usage="xmlTextWriter.WriteStartAttribute (prefix, localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="c563e-383">특성의 <see langword="Namespace" /> 접두사입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-383">
              <see langword="Namespace" /> prefix of the attribute.</span>
          </span>
        </param>
        <param name="localName">
          <span data-ttu-id="c563e-384">특성의 <see langword="LocalName" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-384">
              <see langword="LocalName" /> of the attribute.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="c563e-385">특성의 <see langword="NamespaceURI" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-385">
              <see langword="NamespaceURI" /> of the attribute</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c563e-386">특성의 시작을 작성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-386">Writes the start of an attribute.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-387">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-387">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c563e-388">이 버전의 고급 버전 이기 <xref:System.Xml.XmlWriter.WriteAttributeString%2A> 와 같은 여러 write 메서드를 사용 하 여 특성 값을 작성할 수 있도록 <xref:System.Xml.XmlTextWriter.WriteString%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-388">This is a more advanced version of <xref:System.Xml.XmlWriter.WriteAttributeString%2A> that allows you to write an attribute value using multiple write methods, such as <xref:System.Xml.XmlTextWriter.WriteString%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c563e-389">다음 예제에서는 책을 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-389">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c563e-390">
            <paramref name="localName" />가 <see langword="null" /> 또는 <see langword="String.Empty" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-390">
              <paramref name="localName" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlTextWriter.WriteEndAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartDocument">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c563e-391">버전 "1.0"을 사용하여 XML 선언을 작성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-391">Writes the XML declaration with the version "1.0".</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-392">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-392">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public override void WriteStartDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartDocument();" />
      <MemberSignature Language="F#" Value="override this.WriteStartDocument : unit -&gt; unit" Usage="xmlTextWriter.WriteStartDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c563e-393">버전 "1.0"을 사용하여 XML 선언을 작성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-393">Writes the XML declaration with the version "1.0".</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-394">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-394">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c563e-395">문서의 인코딩 수준은 작성기 구현 방법으로 결정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-395">The encoding level of the document is determined by how the writer is implemented.</span></span> <span data-ttu-id="c563e-396">예를 들어 경우는 <xref:System.Text.Encoding> 개체에 지정 된는 `XmlTextWriter` 생성자가 인코딩 특성의 값을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-396">For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.</span></span> <span data-ttu-id="c563e-397">이 메서드는 독립 실행형 특성을 만들지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-397">This method does not create a standalone attribute.</span></span>  
  
 <span data-ttu-id="c563e-398">때 `WriteStartDocument` 라고 기록기를 작성 하는 올바른 형식의 XML 문서 인지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-398">When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document.</span></span> <span data-ttu-id="c563e-399">예를 들어, XML 선언이 첫 번째 노드를 하나 고 하나의 루트 수준 요소에 존재 하는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-399">For example, it checks that the XML declaration is the first node, that one and only one root-level element exists and so on.</span></span> <span data-ttu-id="c563e-400">이 메서드를 호출 하지 않으면 경우 작성기 가정 XML 조각을 쓰고 없습니다 루트 수준 규칙을 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-400">If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</span></span>  
  
 <span data-ttu-id="c563e-401">하는 경우 `WriteStartDocument` 를 호출한 다음는 <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> 메서드는 다른 XML 선언을 만드는 데, 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-401">If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c563e-402">다음 예제에서는 책을 나타내는 XML 파일을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-402">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c563e-403">생성자 다음에 호출된 첫 번째 쓰기 메서드가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-403">This is not the first write method called after the constructor.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public override void WriteStartDocument (bool standalone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartDocument(bool standalone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartDocument(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartDocument (standalone As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartDocument(bool standalone);" />
      <MemberSignature Language="F#" Value="override this.WriteStartDocument : bool -&gt; unit" Usage="xmlTextWriter.WriteStartDocument standalone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standalone" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="standalone">
          <span data-ttu-id="c563e-404">
            <see langword="true" />이면 "standalone=yes"로 작성하고, <see langword="false" />이면 "standalone=no"로 작성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-404">If <see langword="true" />, it writes "standalone=yes"; if <see langword="false" />, it writes "standalone=no".</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c563e-405">버전 "1.0"과 독립형 특성을 사용하여 XML 선언을 작성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-405">Writes the XML declaration with the version "1.0" and the standalone attribute.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-406">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-406">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c563e-407">문서의 인코딩 수준은 작성기 구현 방법으로 결정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-407">The encoding level of the document is determined by how the writer is implemented.</span></span> <span data-ttu-id="c563e-408">예를 들어 경우는 <xref:System.Text.Encoding> 개체에 지정 된는 `XmlTextWriter` 생성자가 인코딩 특성의 값을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-408">For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.</span></span>  
  
 <span data-ttu-id="c563e-409">때 `WriteStartDocument` 라고 기록기를 작성 하는 올바른 형식의 XML 문서 인지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-409">When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document.</span></span> <span data-ttu-id="c563e-410">예를 들어, XML 선언이 첫 번째 노드를 하나 고 하나의 루트 수준 요소에 존재 하는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-410">For example, it checks that the XML declaration is the first node, that one and only one root-level element exists and so on.</span></span> <span data-ttu-id="c563e-411">이 메서드를 호출 하지 않으면 경우 작성기 가정 XML 조각을 쓰고 없습니다 루트 수준 규칙을 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-411">If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</span></span>  
  
 <span data-ttu-id="c563e-412">하는 경우 `WriteStartDocument` 를 호출한 다음는 <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> 메서드는 다른 XML 선언을 만드는 데, 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-412">If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c563e-413">생성자 다음에 호출된 첫 번째 쓰기 메서드가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-413">This is not the first write method called after the constructor.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartElement">
      <MemberSignature Language="C#" Value="public override void WriteStartElement (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartElement(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartElement (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartElement(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.WriteStartElement : string * string * string -&gt; unit" Usage="xmlTextWriter.WriteStartElement (prefix, localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="c563e-414">요소의 네임스페이스 접두사입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-414">The namespace prefix of the element.</span>
          </span>
        </param>
        <param name="localName">
          <span data-ttu-id="c563e-415">요소의 로컬 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-415">The local name of the element.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="c563e-416">요소와 연결할 네임스페이스 URI입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-416">The namespace URI to associate with the element.</span>
          </span>
          <span data-ttu-id="c563e-417">이 네임스페이스가 이미 범위에 있고 관련된 접두사가 있는 경우 작성기는 해당 접두사도 자동으로 작성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-417">If this namespace is already in scope and has an associated prefix then the writer automatically writes that prefix also.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c563e-418">지정된 시작 태그를 작성하고 주어진 네임스페이스 및 접두사와 연결합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-418">Writes the specified start tag and associates it with the given namespace and prefix.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-419">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-419">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c563e-420">특성을 작성 하거나 만들려면이 메서드를 호출한 후 사용 하 여 콘텐츠 <xref:System.Xml.XmlTextWriter.WriteComment%2A>하십시오 <xref:System.Xml.XmlTextWriter.WriteString%2A>, 또는 <xref:System.Xml.XmlTextWriter.WriteStartElement%2A> 자식 요소에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-420">After calling this method you can either write attributes or create content using <xref:System.Xml.XmlTextWriter.WriteComment%2A>, <xref:System.Xml.XmlTextWriter.WriteString%2A>, or <xref:System.Xml.XmlTextWriter.WriteStartElement%2A> for child elements.</span></span> <span data-ttu-id="c563e-421">요소를 사용 하 여 닫을 수 있습니다 <xref:System.Xml.XmlTextWriter.WriteEndElement%2A> 이때 끝 태그를 기록 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-421">You can close the element with <xref:System.Xml.XmlTextWriter.WriteEndElement%2A> at which time an end tag is written out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c563e-422">다음 예제에서는 책을 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-422">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c563e-423">작성기가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-423">The writer is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteState">
      <MemberSignature Language="C#" Value="public override System.Xml.WriteState WriteState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.WriteState WriteState" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.WriteState" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property WriteState As WriteState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::WriteState WriteState { System::Xml::WriteState get(); };" />
      <MemberSignature Language="F#" Value="member this.WriteState : System.Xml.WriteState" Usage="System.Xml.XmlTextWriter.WriteState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.WriteState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c563e-424">작성기의 상태를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-424">Gets the state of the writer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c563e-425">
            <see cref="T:System.Xml.WriteState" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-425">One of the <see cref="T:System.Xml.WriteState" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-426">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-426">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public override void WriteString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteString (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteString(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteString : string -&gt; unit" Usage="xmlTextWriter.WriteString text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="c563e-427">작성할 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-427">Text to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c563e-428">주어진 텍스트 콘텐츠를 작성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-428">Writes the given text content.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-429">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-429">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c563e-430">`WriteString` 다음 작업을 수행합니다</span><span class="sxs-lookup"><span data-stu-id="c563e-430">`WriteString` does the following</span></span>  
  
-   <span data-ttu-id="c563e-431">문자 `&`, `<`, 및 `>` 바뀝니다 `&amp;`를 `&lt;`, 및 `&gt;`, 각각.</span><span class="sxs-lookup"><span data-stu-id="c563e-431">The characters `&`, `<`, and `>` are replaced with `&amp;`, `&lt;`, and `&gt;`, respectively.</span></span>  
  
-   <span data-ttu-id="c563e-432">문자 값 범위는 0-0x1f (공백 문자 0x9, 0xA 및 0xD)에서 숫자 엔터티로 대체 됩니다 (`&#0;` 를 통해 `&#0x1F`).</span><span class="sxs-lookup"><span data-stu-id="c563e-432">Character values in the range 0x-0x1F (excluding white space characters 0x9, 0xA, and 0xD) are replaced with numeric character entities (`&#0;` through `&#0x1F`).</span></span>  
  
-   <span data-ttu-id="c563e-433">하는 경우 `WriteString` 라고 특성 값의 컨텍스트에서 사용 하 여 큰따옴표와 작은따옴표 바뀝니다 `&quot;` 고 `&apos;` 각각.</span><span class="sxs-lookup"><span data-stu-id="c563e-433">If `WriteString` is called in the context of an attribute value, double and single quotes are replaced with `&quot;` and `&apos;` respectively.</span></span>  
  
 <span data-ttu-id="c563e-434">이 문자열을 입력 하는 예를 들어 `test<item>test` 로 작성 됩니다</span><span class="sxs-lookup"><span data-stu-id="c563e-434">For example, this input string `test<item>test` is written as</span></span>  
  
```  
test&lt;item&gt;test  
```  
  
 <span data-ttu-id="c563e-435">경우 `text` 중 하나는 `null` 또는 `String.Empty`,이 메서드가 데이터 콘텐츠가 없는 텍스트 노드를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-435">If `text` is either `null` or `String.Empty`, this method writes a text node with no data content.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c563e-436">다음 예제에서는 XML 조각을 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-436">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c563e-437">텍스트 문자열에 잘못된 서로게이트 쌍이 포함된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-437">The text string contains an invalid surrogate pair.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSurrogateCharEntity">
      <MemberSignature Language="C#" Value="public override void WriteSurrogateCharEntity (char lowChar, char highChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteSurrogateCharEntity(char lowChar, char highChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteSurrogateCharEntity (lowChar As Char, highChar As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteSurrogateCharEntity(char lowChar, char highChar);" />
      <MemberSignature Language="F#" Value="override this.WriteSurrogateCharEntity : char * char -&gt; unit" Usage="xmlTextWriter.WriteSurrogateCharEntity (lowChar, highChar)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowChar" Type="System.Char" />
        <Parameter Name="highChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="lowChar">
          <span data-ttu-id="c563e-438">하위 서로게이트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-438">The low surrogate.</span>
          </span>
          <span data-ttu-id="c563e-439">이 값은 <see langword="0xDC00" />에서 <see langword="0xDFFF" /> 사이에 있어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-439">This must be a value between <see langword="0xDC00" /> and <see langword="0xDFFF" />.</span>
          </span>
        </param>
        <param name="highChar">
          <span data-ttu-id="c563e-440">상위 서로게이트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-440">The high surrogate.</span>
          </span>
          <span data-ttu-id="c563e-441">이 값은 <see langword="0xD800" />에서 <see langword="0xDBFF" /> 사이에 있어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-441">This must be a value between <see langword="0xD800" /> and <see langword="0xDBFF" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c563e-442">서로게이트 문자 쌍에 대한 서로게이트 문자 엔터티를 생성하고 작성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-442">Generates and writes the surrogate character entity for the surrogate character pair.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-443">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-443">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c563e-444">이 메서드는 utf-16 인코딩을 사용 하는 시스템에 적용할 수만 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-444">This method is only applicable on systems that use UTF-16 encoding.</span></span>  
  
 <span data-ttu-id="c563e-445">서로게이트 문자 엔터티는 16 진수 형식으로 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-445">The surrogate character entity is written in hexadecimal format.</span></span> <span data-ttu-id="c563e-446">서로게이트 문자에 대 한 범위가 `#x10000` 에 `#x10FFFF`입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-446">The range for surrogate characters is `#x10000` to `#x10FFFF`.</span></span> <span data-ttu-id="c563e-447">다음 수식을 사용 하는 서로게이트 문자 엔터티를 생성할: (`highChar` - `0xD800`) \* `0x400` + (`lowChar` - `0xDC00`) + `0x10000`합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-447">The following formula is used to generate the surrogate character entity: (`highChar` - `0xD800`) \* `0x400` + (`lowChar` - `0xDC00`) + `0x10000`.</span></span>  
  
 <span data-ttu-id="c563e-448">HTML 및 XML을 문서 문자 집합 (및 따라서 숫자 문자 참조의 표기) 기반으로 UCS [ISO 10646] 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-448">For both HTML and XML, the document character set (and therefore the notation of numeric character references) is based on UCS [ISO-10646].</span></span> <span data-ttu-id="c563e-449">원본 문서에 대 한 단일 숫자 문자 참조 (high surrogate 및 하위 서로게이트) 문자열에서 두 명의 16 비트 장치에 해당할 경우에 따라 따라서 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-449">A single numeric character reference in a source document may therefore in some cases correspond to two 16-bit units in a string (a high surrogate and a low surrogate).</span></span> <span data-ttu-id="c563e-450">이러한 16 비트 단위 서로게이트 쌍 이라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-450">These 16-bit units are referred to as a surrogate pair.</span></span>  
  
 <span data-ttu-id="c563e-451">문자나 서로게이트에 대 한 자세한 내용은 섹션 3.7 유니코드 표준 3.0 유니코드 2.0에 있는 참조 http://www.unicode.org에 있는 W3C XML 1.0 Recommendation의 2.2 섹션 또는 http://www.w3.org/TR/REC-xml#charsets합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-451">For more information regarding surrogates or characters, refer to section 3.7 of the Unicode 3.0/Unicode 2.0 standard located at http://www.unicode.org, or section 2.2 of the W3C XML 1.0 Recommendation located at http://www.w3.org/TR/REC-xml#charsets.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="c563e-452">잘못된 서로게이트 문자 쌍이 전달된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-452">An invalid surrogate character pair was passed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteWhitespace">
      <MemberSignature Language="C#" Value="public override void WriteWhitespace (string ws);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteWhitespace(string ws) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteWhitespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteWhitespace (ws As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteWhitespace(System::String ^ ws);" />
      <MemberSignature Language="F#" Value="override this.WriteWhitespace : string -&gt; unit" Usage="xmlTextWriter.WriteWhitespace ws" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ws" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ws">
          <span data-ttu-id="c563e-453">공백 문자의 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-453">The string of white space characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c563e-454">주어진 공백을 작성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-454">Writes out the given white space.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-455">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-455">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c563e-456">이 메서드는 수동으로 문서 서식을 지정 하려면 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-456">This method is used to manually format your document.</span></span> <span data-ttu-id="c563e-457">사용 된 <xref:System.Xml.XmlTextWriter.Formatting%2A> 속성을 자동으로 출력 형식을 지정 하는 작성기가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-457">Use the <xref:System.Xml.XmlTextWriter.Formatting%2A> property to have the writer format the output automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c563e-458">다음 예제에서는 `WriteWhitespace` 파일의 서식 지정 하는 방법을 제어 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-458">The following example uses the `WriteWhitespace` method to control how the file is formatted.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c563e-459">문자열에 공백이 아닌 문자가 포함된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-459">The string contains non-white space characters.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlTextWriter.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public override string XmlLang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlLang As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlLang : string" Usage="System.Xml.XmlTextWriter.XmlLang" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c563e-460">현재 <see langword="xml:lang" /> 범위를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-460">Gets the current <see langword="xml:lang" /> scope.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c563e-461">현재 <see langword="xml:lang" />이거나, 현재 범위에 <see langword="null" />이 없으면 <see langword="xml:lang" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-461">The current <see langword="xml:lang" /> or <see langword="null" /> if there is no <see langword="xml:lang" /> in the current scope.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-462">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-462">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c563e-463">이 속성에는 한 구성 요소를 상태 다른 구성 요소가 유지 한 작성기를 찾을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-463">This property allows one component to find out what state another component has left the writer in.</span></span> <span data-ttu-id="c563e-464">예를 들어, 아마도 하나의 구성 요소 하려고 생성 언어 도움말 텍스트는 다른 지시 합니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-464">For example, perhaps one component wants to tell another which language help text to generate.</span></span> <span data-ttu-id="c563e-465">언어 정보를 작성 하 여 전달 되는 `xml:lang` 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-465">The language information is communicated by writing an `xml:lang` attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlSpace XmlSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlSpace XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlSpace As XmlSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlSpace : System.Xml.XmlSpace" Usage="System.Xml.XmlTextWriter.XmlSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c563e-466">현재 <see langword="xml:space" /> 범위를 나타내는 <see cref="T:System.Xml.XmlSpace" />를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-466">Gets an <see cref="T:System.Xml.XmlSpace" /> representing the current <see langword="xml:space" /> scope.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c563e-467">현재 <see langword="XmlSpace" /> 범위를 나타내는 <see langword="xml:space" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c563e-467">An <see langword="XmlSpace" /> representing the current <see langword="xml:space" /> scope.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="c563e-468">값</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c563e-468">Value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="c563e-469">의미</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c563e-469">Meaning</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="c563e-470">없음</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c563e-470">None</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="c563e-471">
                  <see langword="xml:space" /> 범위가 없는 경우 기본값입니다.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c563e-471">This is the default if no <see langword="xml:space" /> scope exists.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="c563e-472">기본</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c563e-472">Default</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="c563e-473">현재 범위가 <see langword="xml:space" />="default"입니다.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c563e-473">The current scope is <see langword="xml:space" />="default".</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="c563e-474">Preserve</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c563e-474">Preserve</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="c563e-475">현재 범위가 <see langword="xml:space" />="preserve"입니다.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c563e-475">The current scope is <see langword="xml:space" />="preserve".</span>
                </span>
              </description>
            </item>
          </list>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c563e-476">사용자가 만든 권장.NET Framework 2.0 부터는 <xref:System.Xml.XmlWriter> 를 사용 하 여 인스턴스를 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Xml.XmlWriterSettings> 새 기능을 활용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-476">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="c563e-477">이 속성에는 한 구성 요소를 내 다른 구성 요소가 기록기를 유지 하는 상태를 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-477">This property allows one component to find out in what state another component has left the writer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c563e-478">다음 예제에서는 `WriteWhitespace` 파일의 서식 지정 하는 방법을 제어 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="c563e-478">The following example uses the `WriteWhitespace` method to control how the file is formatted.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>