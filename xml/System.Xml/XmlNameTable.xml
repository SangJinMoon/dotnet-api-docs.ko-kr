<Type Name="XmlNameTable" FullName="System.Xml.XmlNameTable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9eb84fcf2eeea4a4ba5b98ef8014e2353bd5a834" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39852925" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class XmlNameTable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlNameTable extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlNameTable" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlNameTable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlNameTable abstract" />
  <TypeSignature Language="F#" Value="type XmlNameTable = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="6b5a5-101">원자화된 문자열 개체의 테이블입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6b5a5-101">Table of atomized string objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b5a5-102">와 같은 몇 가지 클래스 <xref:System.Xml.XmlDocument> 및 <xref:System.Xml.XmlReader>를 사용 하 여는 `XmlNameTable` 특성 및 요소 이름을 저장 하는 내부적으로 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6b5a5-102">Several classes, such as <xref:System.Xml.XmlDocument> and <xref:System.Xml.XmlReader>, use the `XmlNameTable` class internally to store attribute and element names.</span></span> <span data-ttu-id="6b5a5-103">XML 문서에서 요소나 특성 이름이 여러 번 나오더라도 `XmlNameTable`에는 한 번만 저장되며,</span><span class="sxs-lookup"><span data-stu-id="6b5a5-103">When an element or attribute name occurs multiple times in an XML document, it is stored only once in the `XmlNameTable`.</span></span>  
  
 <span data-ttu-id="6b5a5-104">이름은 CLR(공용 언어 런타임) 개체 형식으로 저장됩니다.</span><span class="sxs-lookup"><span data-stu-id="6b5a5-104">The names are stored as common language runtime (CLR) object types.</span></span> <span data-ttu-id="6b5a5-105">따라서 비용이 많이 드는 문자열 비교를 수행하지 않고도 이 문자열에 대해 개체 비교를 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6b5a5-105">This enables you to do object comparisons on these strings rather than a more expensive string comparison.</span></span> <span data-ttu-id="6b5a5-106">이러한 문자열 개체를 "원자화 된 문자열" 이라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="6b5a5-106">These string objects are referred to as "atomized strings".</span></span>  
  
 <span data-ttu-id="6b5a5-107">`XmlNameTable` 구현 되는 <xref:System.Xml.NameTable> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6b5a5-107">`XmlNameTable` is implemented in the <xref:System.Xml.NameTable> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b5a5-108">다음 예제에서는 두 개의 요소 이름을 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="6b5a5-108">The following example compares two element names.</span></span>  
  
 [!code-csharp[NameTable_v2#1](~/samples/snippets/csharp/VS_Snippets_Data/NameTable_v2/CS/nametable.cs#1)]
 [!code-vb[NameTable_v2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/NameTable_v2/VB/nametable.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.NameTable" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlNameTable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNameTable.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlNameTable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6b5a5-109">
            <see cref="T:System.Xml.XmlNameTable" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b5a5-109">Initializes a new instance of the <see cref="T:System.Xml.XmlNameTable" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6b5a5-110">파생 클래스에서 재정의할 경우 지정한 문자열을 원자화하여 이를 <see langword="XmlNameTable" />에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b5a5-110">When overridden in a derived class, atomizes the specified string and adds it to the <see langword="XmlNameTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b5a5-111">원자화된 문자열에 대한 자세한 내용은 <xref:System.Xml.XmlNameTable>을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="6b5a5-111">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public abstract string Add (string array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Add(string array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNameTable.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Add (array As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ Add(System::String ^ array);" />
      <MemberSignature Language="F#" Value="abstract member Add : string -&gt; string" Usage="xmlNameTable.Add array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="6b5a5-112">추가할 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b5a5-112">The name to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b5a5-113">파생 클래스에서 재정의할 경우 지정한 문자열을 원자화하여 이를 <see langword="XmlNameTable" />에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b5a5-113">When overridden in a derived class, atomizes the specified string and adds it to the <see langword="XmlNameTable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b5a5-114">원자화된 새 문자열이거나 이미 문자열이 존재하는 경우 기존 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b5a5-114">The new atomized string or the existing one if it already exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b5a5-115">원자화된 문자열에 대한 자세한 내용은 <xref:System.Xml.XmlNameTable>을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="6b5a5-115">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6b5a5-116">
            <paramref name="array" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b5a5-116">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public abstract string Add (char[] array, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Add(char[] array, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNameTable.Add(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Add (array As Char(), offset As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ Add(cli::array &lt;char&gt; ^ array, int offset, int length);" />
      <MemberSignature Language="F#" Value="abstract member Add : char[] * int * int -&gt; string" Usage="xmlNameTable.Add (array, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Char[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="6b5a5-117">추가할 이름이 포함된 문자 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b5a5-117">The character array containing the name to add.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="6b5a5-118">이름의 첫 번째 문자를 지정하는 인덱스이며 배열에서 0부터 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b5a5-118">Zero-based index into the array specifying the first character of the name.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="6b5a5-119">이름에 있는 문자의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b5a5-119">The number of characters in the name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b5a5-120">파생 클래스에서 재정의할 경우 지정한 문자열을 원자화하여 이를 <see langword="XmlNameTable" />에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b5a5-120">When overridden in a derived class, atomizes the specified string and adds it to the <see langword="XmlNameTable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b5a5-121">원자화된 새 문자열이거나 이미 문자열이 존재하는 경우 기존 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b5a5-121">The new atomized string or the existing one if it already exists.</span>
          </span>
          <span data-ttu-id="6b5a5-122">길이가 0이면 String.Empty가 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b5a5-122">If length is zero, String.Empty is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b5a5-123">원자화된 문자열에 대한 자세한 내용은 <xref:System.Xml.XmlNameTable>을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="6b5a5-123">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="6b5a5-124">0 &gt; <paramref name="offset" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="6b5a5-124">0 &gt; <paramref name="offset" /></span>
          </span>
          <span data-ttu-id="6b5a5-125">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b5a5-125">-or-</span>
          </span>
          <span data-ttu-id="6b5a5-126">
            <paramref name="offset" /> &gt;= <paramref name="array" />.Length</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b5a5-126">
              <paramref name="offset" /> &gt;= <paramref name="array" />.Length</span>
          </span>
          <span data-ttu-id="6b5a5-127">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b5a5-127">-or-</span>
          </span>
          <span data-ttu-id="6b5a5-128">
            <paramref name="length" /> &gt; <paramref name="array" />.Length</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b5a5-128">
              <paramref name="length" /> &gt; <paramref name="array" />.Length</span>
          </span>
          <span data-ttu-id="6b5a5-129">위의 경우 <paramref name="length" /> =0이면 예외가 throw되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b5a5-129">The above conditions do not cause an exception to be thrown if <paramref name="length" /> =0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6b5a5-130">
            <paramref name="length" /> &lt; 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b5a5-130">
              <paramref name="length" /> &lt; 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Get">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6b5a5-131">파생 클래스에서 재정의할 경우 원자화된 문자열을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b5a5-131">When overridden in a derived class, gets the atomized string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b5a5-132">원자화된 문자열에 대한 자세한 내용은 <xref:System.Xml.XmlNameTable>을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="6b5a5-132">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public abstract string Get (string array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Get(string array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNameTable.Get(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Get (array As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ Get(System::String ^ array);" />
      <MemberSignature Language="F#" Value="abstract member Get : string -&gt; string" Usage="xmlNameTable.Get array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="6b5a5-133">검색할 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b5a5-133">The name to look up.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b5a5-134">파생 클래스에서 재정의할 경우 지정된 문자열과 같은 값을 포함하는 원자화된 문자열을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b5a5-134">When overridden in a derived class, gets the atomized string containing the same value as the specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b5a5-135">문자열이 이미 원자화되지 않은 경우 원자화된 문자열 또는 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b5a5-135">The atomized string or <see langword="null" /> if the string has not already been atomized.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b5a5-136">원자화된 문자열에 대한 자세한 내용은 <xref:System.Xml.XmlNameTable>을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="6b5a5-136">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6b5a5-137">
            <paramref name="array" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b5a5-137">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public abstract string Get (char[] array, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Get(char[] array, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNameTable.Get(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Get (array As Char(), offset As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ Get(cli::array &lt;char&gt; ^ array, int offset, int length);" />
      <MemberSignature Language="F#" Value="abstract member Get : char[] * int * int -&gt; string" Usage="xmlNameTable.Get (array, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Char[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="6b5a5-138">검색할 이름이 포함된 문자 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b5a5-138">The character array containing the name to look up.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="6b5a5-139">이름의 첫 번째 문자를 지정하는 배열의 0부터 시작하는 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b5a5-139">The zero-based index into the array specifying the first character of the name.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="6b5a5-140">이름에 있는 문자의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b5a5-140">The number of characters in the name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b5a5-141">파생 클래스에서 재정의할 경우 지정된 배열에 있는 지정된 범위의 문자와 같은 문자를 포함하는 원자화된 문자열을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b5a5-141">When overridden in a derived class, gets the atomized string containing the same characters as the specified range of characters in the given array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b5a5-142">문자열이 이미 원자화되지 않은 경우 원자화된 문자열 또는 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b5a5-142">The atomized string or <see langword="null" /> if the string has not already been atomized.</span>
          </span>
          <span data-ttu-id="6b5a5-143">
            <paramref name="length" />가 0이면 String.Empty가 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b5a5-143">If <paramref name="length" /> is zero, String.Empty is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b5a5-144">원자화된 문자열에 대한 자세한 내용은 <xref:System.Xml.XmlNameTable>을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="6b5a5-144">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="6b5a5-145">0 &gt; <paramref name="offset" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="6b5a5-145">0 &gt; <paramref name="offset" /></span>
          </span>
          <span data-ttu-id="6b5a5-146">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b5a5-146">-or-</span>
          </span>
          <span data-ttu-id="6b5a5-147">
            <paramref name="offset" /> &gt;= <paramref name="array" />.Length</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b5a5-147">
              <paramref name="offset" /> &gt;= <paramref name="array" />.Length</span>
          </span>
          <span data-ttu-id="6b5a5-148">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b5a5-148">-or-</span>
          </span>
          <span data-ttu-id="6b5a5-149">
            <paramref name="length" /> &gt; <paramref name="array" />.Length</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b5a5-149">
              <paramref name="length" /> &gt; <paramref name="array" />.Length</span>
          </span>
          <span data-ttu-id="6b5a5-150">위의 경우 <paramref name="length" /> =0이면 예외가 throw되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b5a5-150">The above conditions do not cause an exception to be thrown if <paramref name="length" /> =0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6b5a5-151">
            <paramref name="length" /> &lt; 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b5a5-151">
              <paramref name="length" /> &lt; 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>