<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlValidatingReader.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5152ddc86c4ef3ea4af41b9a9b68178df6ebc1aeb.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">152ddc86c4ef3ea4af41b9a9b68178df6ebc1aeb</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlValidatingReader">
          <source>Represents a reader that provides document type definition (DTD), XML-Data Reduced (XDR) schema, and XML Schema definition language (XSD) validation.</source>
          <target state="translated">DTD(문서 종류 정의), XDR(XML-Data Reduced) 스키마 및 XSD(XML 스키마 정의 언어)의 유효성 검사를 제공하는 판독기를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlValidatingReader">
          <source>This class is obsolete.</source>
          <target state="translated">이 클래스는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlValidatingReader">
          <source>Starting with the .NET Framework 2.0, we recommend that you use the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReaderSettings" /&gt;</ph> class and the <ph id="ph2">&lt;see cref="Overload:System.Xml.XmlReader.Create" /&gt;</ph> method to create a validating XML reader.</source>
          <target state="translated">.NET Framework 2.0으로 시작하여 유효성 검사 XML 판독기를 만들려면 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReaderSettings" /&gt;</ph> 클래스 및 <ph id="ph2">&lt;see cref="Overload:System.Xml.XmlReader.Create" /&gt;</ph> 메서드를 사용하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlValidatingReader">
          <source><ph id="ph1">`XmlValidatingReader`</ph> implements the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> class and provides support for data validation.</source>
          <target state="translated"><ph id="ph1">`XmlValidatingReader`</ph> 구현 하는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스 하 고 데이터 유효성 검사에 대 한 지원을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlValidatingReader">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.Schemas%2A&gt;</ph> property to have the reader validate by using schema files that are cached in an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph>.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.Schemas%2A&gt;</ph> 속성에 캐시 된 스키마 파일을 사용 하 여 유효성을 검사 하는 판독기가을 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlValidatingReader">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.ValidationType%2A&gt;</ph> property specifies what type of validation the reader should perform.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.ValidationType%2A&gt;</ph> 속성은 판독기가 수행할 유효성 검사의 유형을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlValidatingReader">
          <source>Setting the property to ValidationType.None creates a non-validating reader.</source>
          <target state="translated">이 속성을 ValidationType.None 설정 유효성을 검사 하지 판독기를 만듭니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlValidatingReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> throws an <ph id="ph2">&lt;xref:System.Xml.XmlException&gt;</ph> on XML parse errors.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> throw 한 <ph id="ph2">&lt;xref:System.Xml.XmlException&gt;</ph> xml 구문 분석 오류입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlValidatingReader">
          <source>After an exception is thrown the state of the reader is not predictable.</source>
          <target state="translated">예외가 throw 되는 판독기의 상태 예측 가능한있지 않습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlValidatingReader">
          <source>For example, the reported node type may be different than the actual node type of the current node.</source>
          <target state="translated">예를 들어 보고 된 노드 형식 현재 노드의 실제 노드 형식과 다를 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlValidatingReader">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.ReadState%2A&gt;</ph> property to check whether a reader is in error state.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.ReadState%2A&gt;</ph> 판독기가 오류 상태에 있는지 여부를 확인할 속성입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlValidatingReader">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlValidatingReader">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlValidatingReader">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlValidatingReader">
          <source>This class has an inheritance demand.</source>
          <target state="translated">이 클래스는 상속 요청.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlValidatingReader">
          <source>Full trust is required to inherit from <ph id="ph1">&lt;see langword="XmlValidatingReader" /&gt;</ph>.</source>
          <target state="translated">상속 하려면 완전 신뢰가 필요 <ph id="ph1">&lt;see langword="XmlValidatingReader" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlValidatingReader">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see langword="XmlValidatingReader" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlValidatingReader" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.#ctor(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> to read from while validating.</source>
          <target state="translated">유효성을 검사하는 동안 읽을 <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.#ctor(System.Xml.XmlReader)">
          <source>The current implementation supports only <ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph>.</source>
          <target state="translated">현재 구현은 <ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph>만 지원합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.#ctor(System.Xml.XmlReader)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see langword="XmlValidatingReader" /&gt;</ph> class that validates the content returned from the given <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">주어진 <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>에서 반환된 콘텐츠의 유효성을 검사하는 <ph id="ph1">&lt;see langword="XmlValidatingReader" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.Xml.XmlReader)">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.Xml.XmlReader)">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.Xml.XmlReader)">
          <source>All nodes returned from the given <ph id="ph1">`XmlReader`</ph> are also returned from this validating reader, so there is no information loss in the process.</source>
          <target state="translated">반환 된 모든 노드에 주어진 <ph id="ph1">`XmlReader`</ph> 도에서 반환 되는이 목록을 유효성 검사 판독기는 프로세스의 정보는 손실 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.Xml.XmlReader)">
          <source>New nodes not returned from the underlying reader may be added by this reader (for example, default attributes and the children of an entity reference).</source>
          <target state="translated">새 노드를 기본 판독기에서 반환 되지 않았습니다 (예를 들어 기본 특성 및 엔터티 참조의 자식)이이 판독기에서 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.Xml.XmlReader)">
          <source>Any properties set on the given <ph id="ph1">`XmlTextReader`</ph> also apply to this validating reader.</source>
          <target state="translated">에 설정 된 모든 속성은 주어진 <ph id="ph1">`XmlTextReader`</ph> 이 유효성 검사 판독기에도 적용 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.Xml.XmlReader)">
          <source>For example, if the supplied reader had WhitespaceHandling.None set, this validating reader also ignores white space.</source>
          <target state="translated">예를 들어 제공 된 판독기 WhitespaceHandling.None 집합이 있으면이 유효성 검사 판독기 공백을 또한 무시 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.Xml.XmlReader)">
          <source>When external document type definitions (DTDs) or schemas are needed for validation, the <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.XmlResolver%2A&gt;</ph> property sets the <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> object to use for resolving external resources.</source>
          <target state="translated">외부 문서 유형 정의 (Dtd) 또는 스키마 유효성 검사를 위해 필요한 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.XmlResolver%2A&gt;</ph> 속성 집합은 <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> 외부 리소스 확인에 사용할 개체입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.Xml.XmlReader)">
          <source>The following example validates two documents.</source>
          <target state="translated">다음 예제에서는 두 개의 문서를 확인합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.Xml.XmlReader)">
          <source>The sample uses the following input files:</source>
          <target state="translated">샘플에서는 다음 입력된 파일을 사용합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.#ctor(System.Xml.XmlReader)">
          <source>The reader specified is not an <ph id="ph1">&lt;see langword="XmlTextReader" /&gt;</ph>.</source>
          <target state="translated">지정된 판독기가 <ph id="ph1">&lt;see langword="XmlTextReader" /&gt;</ph>가 아닌 경우</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>The stream containing the XML fragment to parse.</source>
          <target state="translated">구문 분석할 XML 조각을 포함하는 스트림입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeType" /&gt;</ph> of the XML fragment.</source>
          <target state="translated">XML 조각의 <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeType" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>This determines what the fragment can contain (see table below).</source>
          <target state="translated">이 매개 변수는 조각에 포함되는 내용을 결정합니다(아래 표 참조).</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlParserContext" /&gt;</ph> in which the XML fragment is to be parsed.</source>
          <target state="translated">XML 조각을 구문 분석할 <ph id="ph1">&lt;see cref="T:System.Xml.XmlParserContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>This includes the <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> to use, encoding, namespace scope, current <ph id="ph2">&lt;see langword="xml:lang" /&gt;</ph>, and <ph id="ph3">&lt;see langword="xml:space" /&gt;</ph> scope.</source>
          <target state="translated">사용할 <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph>, 인코딩, 네임스페이스 범위, 현재 <ph id="ph2">&lt;see langword="xml:lang" /&gt;</ph> 및 <ph id="ph3">&lt;see langword="xml:space" /&gt;</ph> 범위가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see langword="XmlValidatingReader" /&gt;</ph> class with the specified values.</source>
          <target state="translated">지정된 값을 사용하여 <ph id="ph1">&lt;see langword="XmlValidatingReader" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>This constructor parses the given string as a fragment of XML.</source>
          <target state="translated">이 생성자의 XML 조각으로 지정된 된 문자열을 구문 분석합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>If the XML fragment is an element or attribute, you can bypass the root level rules for well-formed XML documents.</source>
          <target state="translated">XML 조각 요소 또는 특성 이면 올바른 형식의 XML 문서에 대 한 루트 수준 규칙을 무시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>The following table lists valid values for <ph id="ph1">`fragType`</ph> and how the reader parses each of the different node types.</source>
          <target state="translated">다음 표에서 유효한 값에 대 한 <ph id="ph1">`fragType`</ph> 목록과 판독기 다양 한 노드 형식을 구문 분석 하는 방법입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>XmlNodeType</source>
          <target state="translated">XmlNodeType</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>Fragment May Contain</source>
          <target state="translated">조각에 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>Element</source>
          <target state="translated">요소</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>Any valid element content (for example, any combination of elements, comments, processing instructions, cdata, text, and entity references).</source>
          <target state="translated">모든 유효한 요소 내용 (예를 들어 요소, 주석, 처리 명령, cdata, 텍스트 및 엔터티 참조의 조합)입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>Attribute</source>
          <target state="translated">특성</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>The value of an attribute (the part inside the quotes).</source>
          <target state="translated">(따옴표 안에 부분) 특성의 값입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>Document</source>
          <target state="translated">문서</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>The contents of an entire XML document; this enforces document level rules.</source>
          <target state="translated">전체 XML 문서의;의 내용 문서 수준 규칙을 적용합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>The reader uses the following steps to determine the encoding of the stream:</source>
          <target state="translated">판독기에서 다음 단계를 사용 하 여 스트림의 인코딩을 결정:</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>Checks the <ph id="ph1">&lt;xref:System.Xml.XmlParserContext.Encoding%2A?displayProperty=nameWithType&gt;</ph> property to determine the encoding.</source>
          <target state="translated">확인 된 <ph id="ph1">&lt;xref:System.Xml.XmlParserContext.Encoding%2A?displayProperty=nameWithType&gt;</ph> 인코딩을 결정 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>If the <ph id="ph1">`Encoding`</ph> property is <ph id="ph2">`null`</ph>, the reader checks for a byte-order mark at the beginning of the stream.</source>
          <target state="translated">경우는 <ph id="ph1">`Encoding`</ph> 속성은 <ph id="ph2">`null`</ph>, 판독기가 스트림의 시작 부분에서 바이트 순서 표시를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>If the <ph id="ph1">`Encoding`</ph> property is <ph id="ph2">`null`</ph>, and no byte-order mark is found, the reader assumes the stream is encoded in UTF-8.</source>
          <target state="translated">경우는 <ph id="ph1">`Encoding`</ph> 속성은 <ph id="ph2">`null`</ph>, 바이트 순서 표시가 없으면 발견 되 고, 판독기 가정 스트림을 인코딩하는 u t F-8입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>If this reader will be validating using document type definition (DTD) (that is, <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.ValidationType%2A&gt;</ph> is set to ValidationType.DTD or ValidationType.Auto), the <ph id="ph2">`XmlParserContext`</ph> specified in the constructor must supply all the necessary DocumentType information.</source>
          <target state="translated">이 판독기 유효성을 검사할 문서 유형 정의 (DTD)를 사용 하는 경우 (즉, <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.ValidationType%2A&gt;</ph> ValidationType.DTD 또는 ValidationType.Auto로 설정), <ph id="ph2">`XmlParserContext`</ph> 에 지정 된 생성자는 필요한 모든 DocumentType 정보를 제공 해야 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>It is not possible to validate a fragment by using a DTD.</source>
          <target state="translated">DTD를 사용 하 여 조각 유효성을 검사 하는 것이 불가능 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>By definition a DTD requires an entire document to be loaded for validation.</source>
          <target state="translated">정의상 DTD는 전체 문서를 로드 하 여 유효성 검사 필요 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>If this reader will be validating by using XML-Data Reduced (XDR) or XML Schema definition language (XSD) schemas, use the <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.Schemas%2A&gt;</ph> property to specify the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> that contains the schemas (that is, the <ph id="ph3">`XmlParserContext`</ph> does not need to supply the DocumentType information).</source>
          <target state="translated">이 판독기 Xml-data Reduced (XDR) 또는 XML 스키마 정의 언어 (XSD) 스키마를 사용 하 여 유효성을 검사할를 사용 하 여는 <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.Schemas%2A&gt;</ph> 속성을 지정 된 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> 스키마를 포함 하는 (즉,는 <ph id="ph3">`XmlParserContext`</ph> 제공 하지 않아도 DocumentType 정보)입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source><ph id="ph1">&lt;paramref name="fragType" /&gt;</ph> is not one of the node types listed in the table below.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fragType" /&gt;</ph>가 아래 표에 나열된 노드 형식 중 하나가 아닌 경우</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>The string containing the XML fragment to parse.</source>
          <target state="translated">구문 분석할 XML 조각을 포함하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeType" /&gt;</ph> of the XML fragment.</source>
          <target state="translated">XML 조각의 <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeType" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>This also determines what the fragment string can contain (see table below).</source>
          <target state="translated">이 매개 변수는 조각에 포함되는 내용도 결정합니다(아래 표 참조).</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlParserContext" /&gt;</ph> in which the XML fragment is to be parsed.</source>
          <target state="translated">XML 조각을 구문 분석할 <ph id="ph1">&lt;see cref="T:System.Xml.XmlParserContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>This includes the <ph id="ph1">&lt;see cref="T:System.Xml.NameTable" /&gt;</ph> to use, encoding, namespace scope, current xml:lang, and xml:space scope.</source>
          <target state="translated">사용할 <ph id="ph1">&lt;see cref="T:System.Xml.NameTable" /&gt;</ph>, 인코딩, 네임스페이스 범위, 현재 xml:lang 및 xml:space 범위가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see langword="XmlValidatingReader" /&gt;</ph> class with the specified values.</source>
          <target state="translated">지정된 값을 사용하여 <ph id="ph1">&lt;see langword="XmlValidatingReader" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>This constructor parses the given string as a fragment of XML.</source>
          <target state="translated">이 생성자의 XML 조각으로 지정된 된 문자열을 구문 분석합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>If the XML fragment is an element or attribute, you can bypass the root level rules for well-formed XML documents.</source>
          <target state="translated">XML 조각 요소 또는 특성 이면 올바른 형식의 XML 문서에 대 한 루트 수준 규칙을 무시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>This constructor can handle strings returned from <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadInnerXml%2A&gt;</ph>.</source>
          <target state="translated">이 생성자에서 반환 된 문자열을 처리할 수 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadInnerXml%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>The following table lists valid values for <ph id="ph1">`fragType`</ph> and how the reader parses each of the different node types.</source>
          <target state="translated">다음 표에서 유효한 값에 대 한 <ph id="ph1">`fragType`</ph> 목록과 판독기 다양 한 노드 형식을 구문 분석 하는 방법입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>XmlNodeType</source>
          <target state="translated">XmlNodeType</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>Fragment May Contain</source>
          <target state="translated">조각에 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>Element</source>
          <target state="translated">요소</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>Any valid element content (for example, any combination of elements, comments, processing instructions, cdata, text, and entity references).</source>
          <target state="translated">모든 유효한 요소 내용 (예를 들어 요소, 주석, 처리 명령, cdata, 텍스트 및 엔터티 참조의 조합)입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>Attribute</source>
          <target state="translated">특성</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>The value of an attribute (the part inside the quotes).</source>
          <target state="translated">(따옴표 안에 부분) 특성의 값입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>Document</source>
          <target state="translated">문서</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>The contents of an entire XML document; this enforces document level rules.</source>
          <target state="translated">전체 XML 문서의;의 내용 문서 수준 규칙을 적용합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>If this reader will be validating by using document type definition (DTD) (that is, <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.ValidationType%2A&gt;</ph> is set to ValidationType.DTD or ValidationType.Auto), the <ph id="ph2">`XmlParserContext`</ph> specified in the constructor must supply all the necessary DocumentType information.</source>
          <target state="translated">이 판독기 문서 형식 정의 (DTD)를 사용 하 여 유효성을 검사할 경우 (즉, <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.ValidationType%2A&gt;</ph> ValidationType.DTD 또는 ValidationType.Auto로 설정), <ph id="ph2">`XmlParserContext`</ph> 에 지정 된 생성자는 필요한 모든 DocumentType 정보를 제공 해야 합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>It is not possible to validate a fragment by using DTD.</source>
          <target state="translated">DTD를 사용 하 여 조각 유효성을 검사 하는 것이 불가능 합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>By definition DTD requires an entire document to be loaded for validation.</source>
          <target state="translated">정의상 dtd는 전체 문서 유효성 검사에 대 한 로드 되도록 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>If this reader will be validating by using XML-Data Reduced (XDR) or XML Schema definition language (XSD) schemas, use the <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.Schemas%2A&gt;</ph> property to specify the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> that contains the schemas (the <ph id="ph3">`XmlParserContext`</ph> does not need to supply the DocumentType information).</source>
          <target state="translated">이 판독기 Xml-data Reduced (XDR) 또는 XML 스키마 정의 언어 (XSD) 스키마를 사용 하 여 유효성을 검사할를 사용 하 여는 <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.Schemas%2A&gt;</ph> 속성을 통해 지정는 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> 스키마를 포함 하는 (의 <ph id="ph3">`XmlParserContext`</ph> DocumentType 제공 하지 않아도 정보)입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>The following example reads an XML fragment.</source>
          <target state="translated">다음 예제에서는 XML 조각이 읽습니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source>It uses an <ph id="ph1">`XmlParserContext`</ph> and its <ph id="ph2">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> to handle namespace matching.</source>
          <target state="translated">사용 하 여 프로그램 <ph id="ph1">`XmlParserContext`</ph> 및 해당 <ph id="ph2">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> 네임 스페이스와 일치 하는 처리 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
          <source><ph id="ph1">&lt;paramref name="fragType" /&gt;</ph> is not one of the node types listed in the table below.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fragType" /&gt;</ph>가 아래 표에 나열된 노드 형식 중 하나가 아닌 경우</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlValidatingReader.AttributeCount">
          <source>Gets the number of attributes on the current node.</source>
          <target state="translated">현재 노드의 특성 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.AttributeCount">
          <source>The number of attributes on the current node.</source>
          <target state="translated">현재 노드에 포함된 특성의 수입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.AttributeCount">
          <source>This number includes default attributes.</source>
          <target state="translated">이 수에는 기본 특성이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.AttributeCount">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.AttributeCount">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.AttributeCount">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.AttributeCount">
          <source>This property is relevant to <ph id="ph1">`Element`</ph>, <ph id="ph2">`DocumentType`</ph>, and <ph id="ph3">`XmlDeclaration`</ph> nodes only.</source>
          <target state="translated">이 속성은 관련이 <ph id="ph1">`Element`</ph>, <ph id="ph2">`DocumentType`</ph>, 및 <ph id="ph3">`XmlDeclaration`</ph> 노드만 해당 합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.AttributeCount">
          <source>(Other node types do not have attributes.)</source>
          <target state="translated">(다른 노드 형식 특성이 없습니다.)</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.AttributeCount">
          <source>The following example reads all the elements on the root node.</source>
          <target state="translated">다음 예제에서는 루트 노드에서 모든 요소를 읽습니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlValidatingReader.BaseURI">
          <source>Gets the base URI of the current node.</source>
          <target state="translated">현재 노드의 기본 URI를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.BaseURI">
          <source>The base URI of the current node.</source>
          <target state="translated">현재 노드의 기본 URI입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.BaseURI">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.BaseURI">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.BaseURI">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.BaseURI">
          <source>A networked XML document is comprised of chunks of data aggregated by using various World Wide Web Consortium (W3C) standard inclusion mechanisms and therefore contains nodes that come from different places.</source>
          <target state="translated">네트워크 XML 문서는 다양 한 World Wide Web Consortium (W3C) 표준 포함 메커니즘을 사용 하 여 집계 된 데이터의 청크 한 이루어져 서로 다른 위치에서 제공 하는 노드를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.BaseURI">
          <source>document type definition (DTD) entities are an example of this, but this is not limited to DTDs.</source>
          <target state="translated">문서 유형 정의 (DTD) 엔터티가 있으며이 있지만 Dtd 제한 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.BaseURI">
          <source>The base URI tells you where these nodes came from.</source>
          <target state="translated">기본 URI 출처를 보여 줍니다 여기서 이러한 노드.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.BaseURI">
          <source>If there is no base URI for the nodes being returned (for example, they were parsed from an in-memory string), String.Empty is returned.</source>
          <target state="translated">반환 되는 노드에 대 한 기본 URI에 없는 경우 (예를 들어 구문 분석 된 메모리에 문자열에서), String.Empty가 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.BaseURI">
          <source>The following example parses a file and displays the base URI of each node.</source>
          <target state="translated">다음 예제에서는 파일의 구문 분석 하 고 각 노드의 기본 URI를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.BaseURI">
          <source>The example uses the file, <ph id="ph1">`uri.xml`</ph>, as input.</source>
          <target state="translated">이 예제에서는 파일을 사용 하 여 <ph id="ph1">`uri.xml`</ph>입력으로 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.BaseURI">
          <source>The <ph id="ph1">`style.xml`</ph> file contains the XML text <ph id="ph2">`&lt;style&gt;hardcover&lt;/style&gt;`</ph>.</source>
          <target state="translated"><ph id="ph1">`style.xml`</ph> XML 텍스트 파일에 포함 되어 <ph id="ph2">`&lt;style&gt;hardcover&lt;/style&gt;`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlValidatingReader.CanReadBinaryContent">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Xml.XmlValidatingReader" /&gt;</ph> implements the binary content read methods.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlValidatingReader" /&gt;</ph>가 이진 콘텐츠 읽기 메서드를 구현하는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.CanReadBinaryContent">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the binary content read methods are implemented; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이진 콘텐츠 읽기 메서드를 구현하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.CanReadBinaryContent">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlValidatingReader" /&gt;</ph> class returns <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlValidatingReader" /&gt;</ph> 클래스는 <ph id="ph2">&lt;see langword="true" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.CanReadBinaryContent">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.CanReadBinaryContent">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.CanReadBinaryContent">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page..</source>
          <target state="translated">자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지...</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.CanReadBinaryContent">
          <source>The binary content read methods include the <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlValidatingReader.ReadElementContentAsBase64%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex%2A&gt;</ph> methods.</source>
          <target state="translated">이진 콘텐츠 읽기는 <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlValidatingReader.ReadElementContentAsBase64%2A&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlValidatingReader.CanResolveEntity">
          <source>Gets a value indicating whether this reader can parse and resolve entities.</source>
          <target state="translated">이 판독기가 엔터티를 구문 분석하고 확인할 수 있는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.CanResolveEntity">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the reader can parse and resolve entities; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">판독기가 엔터티를 구문 분석하고 확인할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.CanResolveEntity">
          <source><ph id="ph1">&lt;see langword="XmlValidatingReader" /&gt;</ph> always returns <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlValidatingReader" /&gt;</ph>는 항상 <ph id="ph2">&lt;see langword="true" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.CanResolveEntity">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.CanResolveEntity">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.CanResolveEntity">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.Close">
          <source>Changes the <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.ReadState" /&gt;</ph> to Closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.ReadState" /&gt;</ph>를 Closed로 변경합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.Close">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.Close">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.Close">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.Close">
          <source>This method also releases any resources held while reading.</source>
          <target state="translated">이 메서드는 또한 읽는 동안 보유 한 모든 리소스를 해제 합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.Close">
          <source>If this reader was constructed by using an <ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph>, this method also calls <ph id="ph2">`Close`</ph> on the underlying reader.</source>
          <target state="translated">이 판독기가 사용 하 여 생성 된 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph>,이 메서드를 호출 또한 <ph id="ph2">`Close`</ph> 기본 판독기에 있습니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.Close">
          <source>If this reader was constructed by using a stream, this method also calls <ph id="ph1">`Close`</ph> on the underlying stream.</source>
          <target state="translated">이 판독기가 스트림을 사용 하 여 생성 된, 하는 경우이 메서드 호출 <ph id="ph1">`Close`</ph> 내부 스트림의 합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.Close">
          <source>If <ph id="ph1">`Close`</ph> has already been called, no action is performed.</source>
          <target state="translated">경우 <ph id="ph1">`Close`</ph> 가 이미 호출 아무 작업도 수행 합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlValidatingReader.Depth">
          <source>Gets the depth of the current node in the XML document.</source>
          <target state="translated">XML 문서에서 현재 노드의 수준을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Depth">
          <source>The depth of the current node in the XML document.</source>
          <target state="translated">XML 문서의 현재 노드 수준입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Depth">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Depth">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Depth">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Depth">
          <source>The following example displays each node including its depth, line number, and line position.</source>
          <target state="translated">다음 예에서는 수준, 줄 번호 및 줄 위치를 포함 하 여 각 노드를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlValidatingReader.Encoding">
          <source>Gets the encoding attribute for the document.</source>
          <target state="translated">문서의 인코딩 특성을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Encoding">
          <source>The encoding value.</source>
          <target state="translated">인코딩 값입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Encoding">
          <source>If no encoding attribute exists, and there is not byte-order mark, this defaults to UTF-8.</source>
          <target state="translated">인코딩 특성이 없는 경우 바이트 순서 표시가 없으면 기본값은 UTF-8로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Encoding">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Encoding">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Encoding">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Encoding">
          <source>When any external reference is read (such as expanding an entity in a document type definition (DTD) file or reading a schema file) the encoding property is set to the encoding value of the external reference.</source>
          <target state="translated">(예: 문서 형식 정의 (DTD) 파일에서 엔터티를 넓히거나 스키마 파일을 읽는) 모든 외부 참조를 읽을 때의 인코딩 속성이 외부 참조의 인코딩 값으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Encoding">
          <source>If encoding is not specified in the external reference, and there is no byte-order mark, this defaults to UTF-8.</source>
          <target state="translated">외부 참조에는 인코딩이 지정 되지 않은 경우 바이트 순서 표시가 없으면 기본값은 u t F-8로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Encoding">
          <source>All the encoding standards that the underlying operating system supports are supported.</source>
          <target state="translated">기본 운영 체제가 지 원하는 인코딩 표준은 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlValidatingReader.EntityHandling">
          <source>Gets or sets a value that specifies how the reader handles entities.</source>
          <target state="translated">판독기가 엔터티를 처리하는 방법을 지정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.EntityHandling">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Xml.EntityHandling" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.EntityHandling" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.EntityHandling">
          <source>If no <ph id="ph1">&lt;see langword="EntityHandling" /&gt;</ph> is specified, it defaults to EntityHandling.ExpandEntities.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="EntityHandling" /&gt;</ph>이 지정되지 않으면 기본값은 EntityHandling.ExpandEntities로 지정됩니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.EntityHandling">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.EntityHandling">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.EntityHandling">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.EntityHandling">
          <source>This property can be changed and takes effect after the next <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.Read%2A&gt;</ph> call.</source>
          <target state="translated">이 속성을 변경할 수 있고 다음 후에 적용 됩니다 <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.Read%2A&gt;</ph> 호출 합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.EntityHandling">
          <source>When <ph id="ph1">`EntityHandling`</ph> is set to <ph id="ph2">`ExpandCharEntities`</ph>, attribute values are only partially normalized.</source>
          <target state="translated">때 <ph id="ph1">`EntityHandling`</ph> 로 설정 된 <ph id="ph2">`ExpandCharEntities`</ph>, 특성 값은 부분적 으로만 정규화 합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.EntityHandling">
          <source>The reader normalizes each individual text node independently from the content of adjacent entity reference nodes.</source>
          <target state="translated">판독기는 인접 한 엔터티 참조 노드 내용에서 독립적으로 각 개별 텍스트 노드를 정규화합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.EntityHandling">
          <source>To illustrate the difference between the entity handling modes consider the following XML:</source>
          <target state="translated">엔터티 간의 차이 설명 하기 위해 처리 모드는 다음과 같은 XML을 고려 합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.EntityHandling">
          <source>When <ph id="ph1">`EntityHandling`</ph> is set to <ph id="ph2">`ExpandEntities`</ph> the "doc" element node contains one text node with the expanded entity text:</source>
          <target state="translated">때 <ph id="ph1">`EntityHandling`</ph> 로 설정 된 <ph id="ph2">`ExpandEntities`</ph> "doc" 요소 노드 확장된 엔터티 텍스트와 함께 하나의 텍스트 노드를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.EntityHandling">
          <source>Depth</source>
          <target state="translated">깊이</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.EntityHandling">
          <source>NodeType</source>
          <target state="translated">노드 형식</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.EntityHandling">
          <source>Name</source>
          <target state="translated">name</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.EntityHandling">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.EntityHandling">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.EntityHandling">
          <source>Text</source>
          <target state="translated">텍스트</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.EntityHandling">
          <source>A 123</source>
          <target state="translated">A 123</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.EntityHandling">
          <source>When <ph id="ph1">`EntityHandling`</ph> is set to <ph id="ph2">`ExpandCharEntites`</ph>, and <ph id="ph3">&lt;xref:System.Xml.XmlTextReader.WhitespaceHandling%2A&gt;</ph> is set to Significant or All, the "doc" element expands the character entity and returns the general entity as a node:</source>
          <target state="translated">때 <ph id="ph1">`EntityHandling`</ph> 로 설정 된 <ph id="ph2">`ExpandCharEntites`</ph>, 및 <ph id="ph3">&lt;xref:System.Xml.XmlTextReader.WhitespaceHandling%2A&gt;</ph> "doc" 유효 또는 전부로 설정 되어 요소 문자 엔터티를 확장 및 일반 엔터티 노드를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.EntityHandling">
          <source>Depth</source>
          <target state="translated">깊이</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.EntityHandling">
          <source>NodeType</source>
          <target state="translated">노드 형식</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.EntityHandling">
          <source>Name</source>
          <target state="translated">name</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.EntityHandling">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.EntityHandling">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.EntityHandling">
          <source>Text</source>
          <target state="translated">텍스트</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.EntityHandling">
          <source>A</source>
          <target state="translated">A</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.EntityHandling">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.EntityHandling">
          <source>EntityReference</source>
          <target state="translated">EntityReference</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.EntityHandling">
          <source>num</source>
          <target state="translated">num</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.EntityHandling">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.EntityHandling">
          <source>SignificantWhitespace</source>
          <target state="translated">SignificantWhitespace</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.EntityHandling">
          <source>The following example uses the <ph id="ph1">`ResolveEntity`</ph> method to expand a general entity.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`ResolveEntity`</ph> 메서드를 일반 엔터티를 확장 합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.EntityHandling">
          <source>The example uses the file, <ph id="ph1">`book1.xml`</ph>, as input.</source>
          <target state="translated">이 예제에서는 파일을 사용 하 여 <ph id="ph1">`book1.xml`</ph>입력으로 합니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlValidatingReader.EntityHandling">
          <source>Invalid value was specified.</source>
          <target state="translated">잘못된 값이 지정된 경우</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlValidatingReader.EOF">
          <source>Gets a value indicating whether the reader is positioned at the end of the stream.</source>
          <target state="translated">판독기가 스트림의 맨 끝에 있는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.EOF">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the reader is positioned at the end of the stream; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">판독기가 스트림의 맨 끝에 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.EOF">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.EOF">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.EOF">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlValidatingReader">
          <source>Gets the value of an attribute.</source>
          <target state="translated">특성의 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.GetAttribute(System.Int32)">
          <source>The index of the attribute.</source>
          <target state="translated">특성의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.GetAttribute(System.Int32)">
          <source>The index is zero-based.</source>
          <target state="translated">인덱스는 0부터 시작합니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.GetAttribute(System.Int32)">
          <source>(The first attribute has index 0.)</source>
          <target state="translated">첫 번째 특성의 인덱스는 0입니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.GetAttribute(System.Int32)">
          <source>Gets the value of the attribute with the specified index.</source>
          <target state="translated">지정된 인덱스가 있는 특성의 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.GetAttribute(System.Int32)">
          <source>The value of the specified attribute.</source>
          <target state="translated">지정된 특성의 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.GetAttribute(System.Int32)">
          <source>This method does not move the reader.</source>
          <target state="translated">이 메서드는 판독기를 이동하지 않습니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.GetAttribute(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.GetAttribute(System.Int32)">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.GetAttribute(System.Int32)">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.GetAttribute(System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="i" /&gt;</ph> parameter is less than 0 or greater than or equal to <ph id="ph2">&lt;see cref="P:System.Xml.XmlValidatingReader.AttributeCount" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="i" /&gt;</ph> 매개 변수가 0보다 작거나 <ph id="ph2">&lt;see cref="P:System.Xml.XmlValidatingReader.AttributeCount" /&gt;</ph>보다 크거나 같은 경우</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.GetAttribute(System.String)">
          <source>The qualified name of the attribute.</source>
          <target state="translated">특성의 정규화된 이름입니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.GetAttribute(System.String)">
          <source>Gets the value of the attribute with the specified name.</source>
          <target state="translated">지정된 이름이 있는 특성의 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.GetAttribute(System.String)">
          <source>The value of the specified attribute.</source>
          <target state="translated">지정된 특성의 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.GetAttribute(System.String)">
          <source>If the attribute is not found, <ph id="ph1">&lt;see langword="null" /&gt;</ph> is returned.</source>
          <target state="translated">특성이 없으면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이 반환됩니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.GetAttribute(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.GetAttribute(System.String)">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.GetAttribute(System.String)">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.GetAttribute(System.String)">
          <source>This method does not move the reader.</source>
          <target state="translated">이 메서드는 판독기를 이동하지 않습니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.GetAttribute(System.String)">
          <source>If the reader is positioned on a <ph id="ph1">`DocumentType`</ph> node, this method can be used to get the PUBLIC and SYSTEM literals, for example, <ph id="ph2">`reader.GetAttribute("PUBLIC")`</ph></source>
          <target state="translated">판독기가 배치 되 면는 <ph id="ph1">`DocumentType`</ph> 노드를이 메서드는 PUBLIC 및 시스템 리터럴, 예를 들어, 가져오는 데 사용할 수 있습니다 <ph id="ph2">`reader.GetAttribute("PUBLIC")`</ph></target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.GetAttribute(System.String)">
          <source>The following example gets the value of the ISBN attribute.</source>
          <target state="translated">다음 예제에서는 ISBN 특성의 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.GetAttribute(System.String)">
          <source>The example uses the file, <ph id="ph1">`attrs.xml`</ph>, as input.</source>
          <target state="translated">이 예제에서는 파일을 사용 하 여 <ph id="ph1">`attrs.xml`</ph>입력으로 합니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.GetAttribute(System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">특성의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.GetAttribute(System.String,System.String)">
          <source>The namespace URI of the attribute.</source>
          <target state="translated">특성의 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.GetAttribute(System.String,System.String)">
          <source>Gets the value of the attribute with the specified local name and namespace Uniform Resource Identifier (URI).</source>
          <target state="translated">지정된 로컬 이름이나 네임스페이스 URI(Uniform Resource Identifier)가 있는 특성의 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.GetAttribute(System.String,System.String)">
          <source>The value of the specified attribute.</source>
          <target state="translated">지정된 특성의 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.GetAttribute(System.String,System.String)">
          <source>If the attribute is not found, <ph id="ph1">&lt;see langword="null" /&gt;</ph> is returned.</source>
          <target state="translated">특성이 없으면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이 반환됩니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.GetAttribute(System.String,System.String)">
          <source>This method does not move the reader.</source>
          <target state="translated">이 메서드는 판독기를 이동하지 않습니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.GetAttribute(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.GetAttribute(System.String,System.String)">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.GetAttribute(System.String,System.String)">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.GetAttribute(System.String,System.String)">
          <source>The following XML contains an attribute in a specific namespace:</source>
          <target state="translated">다음 XML 특성을 특정 네임 스페이스에 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.GetAttribute(System.String,System.String)">
          <source>You can look up the <ph id="ph1">`dt:type`</ph> attribute by using one argument (prefix and local name) or two arguments (local name and namespace URI):</source>
          <target state="translated">조회할 수 있습니다는 <ph id="ph1">`dt:type`</ph> (접두사와 로컬 이름)에 하나의 인수 또는 (로컬 이름 및 네임 스페이스 URI)는 두 개의 인수를 사용 하 여 특성:</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.GetAttribute(System.String,System.String)">
          <source>To look up the <ph id="ph1">`xmlns:dt`</ph> attribute, use one of the following arguments:</source>
          <target state="translated">조회 하는 <ph id="ph1">`xmlns:dt`</ph> 특성 다음 인수 중 하나를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.GetAttribute(System.String,System.String)">
          <source>You can also get this information by using the <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.Prefix%2A&gt;</ph> property.</source>
          <target state="translated">사용 하 여이 정보를 가져올 수도 있습니다는 <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.Prefix%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.HasLineInfo">
          <source>Gets a value indicating whether the class can return line information.</source>
          <target state="translated">클래스에서 줄 정보를 반환할 수 있는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.HasLineInfo">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the class can return line information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">클래스에서 줄 정보를 반환할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.HasLineInfo">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.HasLineInfo">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.HasLineInfo">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlValidatingReader.HasValue">
          <source>Gets a value indicating whether the current node can have a <ph id="ph1">&lt;see cref="P:System.Xml.XmlValidatingReader.Value" /&gt;</ph> other than String.Empty.</source>
          <target state="translated">현재 노드에 String.Empty 이외의 <ph id="ph1">&lt;see cref="P:System.Xml.XmlValidatingReader.Value" /&gt;</ph>가 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.HasValue">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the node on which the reader is currently positioned can have a <ph id="ph2">&lt;see langword="Value" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 판독기가 위치한 노드에 <ph id="ph2">&lt;see langword="Value" /&gt;</ph>가 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.HasValue">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.HasValue">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.HasValue">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.HasValue">
          <source>The following table lists node types that have a value to return.</source>
          <target state="translated">다음 표에서는 반환할 값이 있는 노드 형식을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.HasValue">
          <source>Node Type</source>
          <target state="translated">노드 형식</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.HasValue">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.HasValue">
          <source>The value of the attribute.</source>
          <target state="translated">특성 값</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.HasValue">
          <source>The content of the CDATA section.</source>
          <target state="translated">CDATA 섹션 내용입니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.HasValue">
          <source>The content of the comment.</source>
          <target state="translated">주석의 내용입니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.HasValue">
          <source>The internal subset.</source>
          <target state="translated">내부 하위 집합입니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.HasValue">
          <source>The entire content, excluding the target.</source>
          <target state="translated">대상을 제외한 전체 내용입니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.HasValue">
          <source>The white space between markup in a mixed content model.</source>
          <target state="translated">혼합된 콘텐츠 모델의 태그 간 공백입니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.HasValue">
          <source>The content of the text node.</source>
          <target state="translated">텍스트 노드의 내용입니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.HasValue">
          <source>The white space between markup.</source>
          <target state="translated">태그 사이의 공백입니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.HasValue">
          <source>The content of the declaration.</source>
          <target state="translated">선언 내용입니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.HasValue">
          <source>The following example reads in XML with various data types and displays each of the nodes.</source>
          <target state="translated">다음 예제에서는 XML에서 다양 한 데이터 형식에 읽고 각 노드를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlValidatingReader.IsDefault">
          <source>Gets a value indicating whether the current node is an attribute that was generated from the default value defined in the document type definition (DTD) or schema.</source>
          <target state="translated">현재 노드가 DTD(문서 종류 정의) 또는 스키마에서 정의한 기본값에서 생성된 특성인지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.IsDefault">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current node is an attribute whose value was generated from the default value defined in the DTD or schema; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the attribute value was explicitly set.</source>
          <target state="translated">현재 노드가 DTD나 스키마에서 정의한 기본값에서 생성된 값을 가진 특성이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 특성 값이 명시적으로 설정되었으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.IsDefault">
          <source>This property applies only to an attribute node.</source>
          <target state="translated">특성 노드의 경우에이 속성이 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.IsDefault">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.IsDefault">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.IsDefault">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.IsDefault">
          <source>The following example displays all attributes nodes on the root element.</source>
          <target state="translated">다음 예제에서는 루트 요소에 모든 특성 노드를 표시합니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.IsDefault">
          <source>The example uses the following files as input.</source>
          <target state="translated">이 예제에서는 입력으로 다음 파일을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlValidatingReader.IsEmptyElement">
          <source>Gets a value indicating whether the current node is an empty element (for example, <bpt id="p1">&lt;c&gt;</bpt><ph id="ph1">&amp;lt;</ph>MyElement/<ph id="ph2">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>).</source>
          <target state="translated">현재 노드가 빈 요소(예: <bpt id="p1">&lt;c&gt;</bpt><ph id="ph1">&amp;lt;</ph>MyElement/<ph id="ph2">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>)인지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.IsEmptyElement">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current node is an element (<ph id="ph2">&lt;see cref="P:System.Xml.XmlValidatingReader.NodeType" /&gt;</ph> equals <ph id="ph3">&lt;see langword="XmlNodeType.Element" /&gt;</ph>) that ends with <bpt id="p1">&lt;c&gt;</bpt><ph id="ph4">/</ph><ph id="ph5">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>; otherwise, <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 현재 노드가 요소 이면 (<ph id="ph2">&lt;see cref="P:System.Xml.XmlValidatingReader.NodeType" /&gt;</ph> equals <ph id="ph3">&lt;see langword="XmlNodeType.Element" /&gt;</ph>)로 끝나는 <bpt id="p1">&lt;c&gt;</bpt> <ph id="ph4">/</ph> <ph id="ph5">&amp;gt;</ph> <ept id="p1">&lt;/c&gt;</ept>, 그렇지 않으면 <ph id="ph6">&lt;see langword="false" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.IsEmptyElement">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.IsEmptyElement">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.IsEmptyElement">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.IsEmptyElement">
          <source>This property enables you to determine the difference between the following:</source>
          <target state="translated">이 속성을 사용하여 다음 간의 차이를 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.IsEmptyElement">
          <source><ph id="ph1">`&lt;item num="123"/&gt;`</ph> (<ph id="ph2">`IsEmptyElement`</ph> is <ph id="ph3">`true`</ph>).</source>
          <target state="translated"><ph id="ph1">`&lt;item num="123"/&gt;`</ph> (<ph id="ph2">`IsEmptyElement`</ph> 은 <ph id="ph3">`true`</ph>).</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.IsEmptyElement">
          <source><ph id="ph1">`&lt;item num="123"&gt;`</ph> (<ph id="ph2">`IsEmptyElement`</ph> is <ph id="ph3">`false`</ph>, although element content is empty).</source>
          <target state="translated"><ph id="ph1">`&lt;item num="123"&gt;`</ph> (<ph id="ph2">`IsEmptyElement`</ph> 은 <ph id="ph3">`false`</ph>요소 내용이 비어 있지만).</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.IsEmptyElement">
          <source>A corresponding <ph id="ph1">`EndElement`</ph> node is not generated for empty elements.</source>
          <target state="translated">해당 <ph id="ph1">`EndElement`</ph> 빈 요소에 대 한 노드는 생성 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.IsEmptyElement">
          <source>If default content has been added to an element due to schema validation, <ph id="ph1">`IsEmptyElement`</ph> still returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">기본 콘텐츠 스키마 유효성 검사로 인해 요소에 추가한 경우 <ph id="ph1">`IsEmptyElement`</ph> 여전히 반환 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.IsEmptyElement">
          <source>It has no bearing on whether or not the element has a default value.</source>
          <target state="translated">여부는 요소에는 기본값에 관계가 없습니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.IsEmptyElement">
          <source>In other words, <ph id="ph1">`IsEmptyElement`</ph> simply reports whether or not the element in the source document had an end element tag.</source>
          <target state="translated">즉, <ph id="ph1">`IsEmptyElement`</ph> 단순히 원본 문서의 요소에 끝 요소 태그가 있는지 여부를 보고 합니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.IsEmptyElement">
          <source>The following example displays the text content of each element.</source>
          <target state="translated">다음 예제에서는 각 요소의 텍스트 콘텐츠를 표시합니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.IsEmptyElement">
          <source>The example uses the file, <ph id="ph1">`elems.xml`</ph>, as input.</source>
          <target state="translated">이 예제에서는 파일을 사용 하 여 <ph id="ph1">`elems.xml`</ph>입력으로 합니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlValidatingReader.LineNumber">
          <source>Gets the current line number.</source>
          <target state="translated">현재 줄 번호를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.LineNumber">
          <source>The current line number.</source>
          <target state="translated">현재 줄 번호입니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.LineNumber">
          <source>The starting value for this property is 1.</source>
          <target state="translated">이 속성의 시작 값은 1입니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.LineNumber">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.LineNumber">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.LineNumber">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.LineNumber">
          <source>This property is most commonly used for error reporting, but can be called at any time.</source>
          <target state="translated">이 속성은 오류 보고를 위해 가장 많이 사용 되지만 언제 든 지 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.LineNumber">
          <source>The starting value for this property is 1.</source>
          <target state="translated">이 속성의 시작 값은 1입니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.LineNumber">
          <source>Combined with <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.LinePosition%2A&gt;</ph>, a value of 1,1 indicates the start of the document.</source>
          <target state="translated">와 결합 <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.LinePosition%2A&gt;</ph>, 값이 1, 1은 문서의 시작을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlValidatingReader.LinePosition">
          <source>Gets the current line position.</source>
          <target state="translated">현재 줄 위치를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.LinePosition">
          <source>The current line position.</source>
          <target state="translated">현재 줄 위치입니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.LinePosition">
          <source>The starting value for this property is 1.</source>
          <target state="translated">이 속성의 시작 값은 1입니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.LinePosition">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.LinePosition">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.LinePosition">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.LinePosition">
          <source>This property is most commonly used for error reporting, but can be called at any time.</source>
          <target state="translated">이 속성은 오류 보고를 위해 가장 많이 사용 되지만 언제 든 지 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.LinePosition">
          <source>The starting value for this property is <ph id="ph1">`1`</ph>.</source>
          <target state="translated">시작 값이 속성은 <ph id="ph1">`1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.LinePosition">
          <source>The position indicated is the first character of text in the markup.</source>
          <target state="translated">지정 된 위치에는 텍스트 태그에서의 첫 번째 문자입니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.LinePosition">
          <source>On the first line of the preceding XML text, a <ph id="ph1">`LinePosition`</ph> of <ph id="ph2">`2`</ph> corresponds to the character <ph id="ph3">`r`</ph>; on the second line, a <ph id="ph4">`LinePosition`</ph> of <ph id="ph5">`5`</ph> corresponds to the character <ph id="ph6">`t`</ph>; and on the third line, a <ph id="ph7">`LinePosition`</ph> of <ph id="ph8">`3`</ph> corresponds to the character <ph id="ph9">`r`</ph>.</source>
          <target state="translated">위 XML 텍스트의 첫 번째 줄에는 <ph id="ph1">`LinePosition`</ph> 의 <ph id="ph2">`2`</ph> 문자에 해당 <ph id="ph3">`r`</ph>; 두 번째 줄에는 <ph id="ph4">`LinePosition`</ph> 의 <ph id="ph5">`5`</ph> 문자에 해당 <ph id="ph6">`t`</ph>; 및 세 번째 줄에서 한 <ph id="ph7">`LinePosition`</ph> 의 <ph id="ph8">`3`</ph> 문자에 해당 <ph id="ph9">`r`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.LinePosition">
          <source>Combined with <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.LineNumber%2A&gt;</ph>, a value of <ph id="ph2">`1,1`</ph> indicates the start of the document.</source>
          <target state="translated">와 결합 <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.LineNumber%2A&gt;</ph>, 값이 <ph id="ph2">`1,1`</ph> 문서의 시작을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlValidatingReader.LocalName">
          <source>Gets the local name of the current node.</source>
          <target state="translated">현재 노드의 로컬 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.LocalName">
          <source>The name of the current node with the prefix removed.</source>
          <target state="translated">접두사를 제거한 현재 노드의 이름입니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.LocalName">
          <source>For example, <ph id="ph1">&lt;see langword="LocalName" /&gt;</ph> is <ph id="ph2">&lt;see langword="book" /&gt;</ph> for the element <bpt id="p1">&lt;c&gt;</bpt><ph id="ph3">&amp;lt;</ph>bk:book<ph id="ph4">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">예를 들어 <ph id="ph1">&lt;see langword="LocalName" /&gt;</ph> 은 <ph id="ph2">&lt;see langword="book" /&gt;</ph> 요소에 대해 <bpt id="p1">&lt;c&gt;</bpt> <ph id="ph3">&amp;lt;</ph>예<ph id="ph4">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.LocalName">
          <source>For node types that do not have a name (like <ph id="ph1">&lt;see langword="Text" /&gt;</ph>, <ph id="ph2">&lt;see langword="Comment" /&gt;</ph>, and so on), this property returns String.Empty.</source>
          <target state="translated">이름이 없는 노드 형식(예: <ph id="ph1">&lt;see langword="Text" /&gt;</ph>, <ph id="ph2">&lt;see langword="Comment" /&gt;</ph> 등)의 경우, 이 속성은 String.Empty를 반환합니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.LocalName">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.LocalName">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.LocalName">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.LocalName">
          <source>The following example reads an XML fragment.</source>
          <target state="translated">다음 예제에서는 XML 조각이 읽습니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.LookupNamespace(System.String)">
          <source>The prefix whose namespace Uniform Resource Identifier (URI) you want to resolve.</source>
          <target state="translated">확인하려는 네임스페이스 URI(Uniform Resource Identifier)의 접두사입니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.LookupNamespace(System.String)">
          <source>To match the default namespace, pass an empty string.</source>
          <target state="translated">기본 네임스페이스와 일치시키려면 빈 문자열을 전달합니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.LookupNamespace(System.String)">
          <source>Resolves a namespace prefix in the current element's scope.</source>
          <target state="translated">현재 요소의 범위에서 네임스페이스 접두사를 확인합니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.LookupNamespace(System.String)">
          <source>The namespace URI to which the prefix maps or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no matching prefix is found.</source>
          <target state="translated">접두사가 매핑되는 네임스페이스 URI이거나 일치하는 접두사가 없는 경우 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.LookupNamespace(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.LookupNamespace(System.String)">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.LookupNamespace(System.String)">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page..</source>
          <target state="translated">자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지...</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.LookupNamespace(System.String)">
          <source>In the following XML string, if the reader is positioned on the <ph id="ph1">`href`</ph> attribute, the prefix <ph id="ph2">`a`</ph> is resolved by calling <ph id="ph3">`reader.LookupNamespace("a", true)`</ph>.</source>
          <target state="translated">판독기가 배치 되 면 다음 XML 문자열에는 <ph id="ph1">`href`</ph> 특성을 접두사 <ph id="ph2">`a`</ph> 호출 하 여 확인 <ph id="ph3">`reader.LookupNamespace("a", true)`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.LookupNamespace(System.String)">
          <source>The returned string is <ph id="ph1">`urn:456`</ph>.</source>
          <target state="translated">반환 된 문자열은 <ph id="ph1">`urn:456`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlValidatingReader">
          <source>Moves to the specified attribute.</source>
          <target state="translated">지정된 특성으로 이동합니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.Int32)">
          <source>The index of the attribute.</source>
          <target state="translated">특성의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.Int32)">
          <source>Moves to the attribute with the specified index.</source>
          <target state="translated">지정된 인덱스가 있는 특성으로 이동합니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.Int32)">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.Int32)">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.Int32)">
          <source>The following example reads all the elements on the root node.</source>
          <target state="translated">다음 예제에서는 루트 노드에서 모든 요소를 읽습니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="i" /&gt;</ph> parameter is less than 0 or greater than or equal to <ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.AttributeCount" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="i" /&gt;</ph> 매개 변수가 0보다 작거나 <ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.AttributeCount" /&gt;</ph>보다 크거나 같은 경우</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String)">
          <source>The qualified name of the attribute.</source>
          <target state="translated">특성의 정규화된 이름입니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String)">
          <source>Moves to the attribute with the specified name.</source>
          <target state="translated">지정된 이름이 있는 특성으로 이동합니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the attribute is found; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">특성이 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, the position of the reader does not change.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph>이면 판독기 위치가 변경되지 않습니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String)">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String)">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String)">
          <source>After calling this method, the <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.Name%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader.NamespaceURI%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Xml.XmlValidatingReader.Prefix%2A&gt;</ph> properties reflect the properties of that attribute.</source>
          <target state="translated">이 메서드를 호출한 후의 <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.Name%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader.NamespaceURI%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Xml.XmlValidatingReader.Prefix%2A&gt;</ph> 속성 해당 특성의 속성을 반영 합니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String)">
          <source>The following example reads an attribute with text and entity reference nodes.</source>
          <target state="translated">다음 예제에서는 텍스트 및 엔터티 참조 노드를 사용 하 여 특성을 읽습니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">특성의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String,System.String)">
          <source>The namespace URI of the attribute.</source>
          <target state="translated">특성의 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String,System.String)">
          <source>Moves to the attribute with the specified local name and namespace Uniform Resource Identifier (URI).</source>
          <target state="translated">지정된 로컬 이름이나 네임스페이스 URI(Uniform Resource Identifier)가 있는 특성으로 이동합니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the attribute is found; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">특성이 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String,System.String)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, the position of the reader does not change.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph>이면 판독기 위치가 변경되지 않습니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String,System.String)">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String,System.String)">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String,System.String)">
          <source>After calling this method, the <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.Name%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader.NamespaceURI%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Xml.XmlValidatingReader.Prefix%2A&gt;</ph> properties reflect the properties of that attribute.</source>
          <target state="translated">이 메서드를 호출한 후의 <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.Name%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader.NamespaceURI%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Xml.XmlValidatingReader.Prefix%2A&gt;</ph> 속성 해당 특성의 속성을 반영 합니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.MoveToElement">
          <source>Moves to the element that contains the current attribute node.</source>
          <target state="translated">현재 특성 노드가 포함된 요소로 이동합니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.MoveToElement">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the reader is positioned on an attribute (the reader moves to the element that owns the attribute); <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the reader is not positioned on an attribute (the position of the reader does not change).</source>
          <target state="translated">판독기가 특성에 있으면(특성이 있는 요소로 판독기가 이동하면) <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 판독기가 특성에 없으면(판독기의 위치가 바뀌지 않으면) <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.MoveToElement">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.MoveToElement">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.MoveToElement">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.MoveToElement">
          <source>Use this method to return to an element after navigating through its attributes.</source>
          <target state="translated">이 메서드를 사용 하 여 특성을 탐색 한 후 요소 돌아갑니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.MoveToElement">
          <source>This method moves the reader to one of the following node types: <ph id="ph1">`Element`</ph>, <ph id="ph2">`DocumentType`</ph>, or <ph id="ph3">`XmlDeclaration`</ph>.</source>
          <target state="translated">이 메서드는 다음과 같은 노드 유형 중 하나에 판독기를 이동: <ph id="ph1">`Element`</ph>, <ph id="ph2">`DocumentType`</ph>, 또는 <ph id="ph3">`XmlDeclaration`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.MoveToElement">
          <source>The following example reads all the elements on the root node.</source>
          <target state="translated">다음 예제에서는 루트 노드에서 모든 요소를 읽습니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.MoveToFirstAttribute">
          <source>Moves to the first attribute.</source>
          <target state="translated">첫 번째 특성으로 이동합니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.MoveToFirstAttribute">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if an attribute exists (the reader moves to the first attribute); otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph> (the position of the reader does not change).</source>
          <target state="translated">특성이 있으면(판독기가 첫 번째 특성으로 이동하면) <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면(판독기의 위치가 바뀌지 않으면) <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.MoveToFirstAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.MoveToFirstAttribute">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.MoveToFirstAttribute">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.MoveToFirstAttribute">
          <source>The following example reads an XML fragment.</source>
          <target state="translated">다음 예제에서는 XML 조각이 읽습니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.MoveToNextAttribute">
          <source>Moves to the next attribute.</source>
          <target state="translated">다음 특성으로 이동합니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.MoveToNextAttribute">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if there is a next attribute; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if there are no more attributes.</source>
          <target state="translated">다음 특성이 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 더 이상 특성이 없으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.MoveToNextAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.MoveToNextAttribute">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.MoveToNextAttribute">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.MoveToNextAttribute">
          <source>If the current node is an element node, this method is equivalent to <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.MoveToFirstAttribute%2A&gt;</ph>.</source>
          <target state="translated">현재 노드가 요소 노드 이면이 메서드는 <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.MoveToFirstAttribute%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.MoveToNextAttribute">
          <source>If <ph id="ph1">`MoveToNextAttribute`</ph> returns <ph id="ph2">`true`</ph>, the reader moves to the next attribute; otherwise, the position of the reader does not change.</source>
          <target state="translated">경우 <ph id="ph1">`MoveToNextAttribute`</ph> 반환 <ph id="ph2">`true`</ph>, 판독기가 다음 특성으로 이동, 그렇지 않으면 판독기의 위치가 변경 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.MoveToNextAttribute">
          <source>The following example reads an XML fragment.</source>
          <target state="translated">다음 예제에서는 XML 조각이 읽습니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlValidatingReader.Name">
          <source>Gets the qualified name of the current node.</source>
          <target state="translated">현재 노드의 정규화된 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Name">
          <source>The qualified name of the current node.</source>
          <target state="translated">현재 노드의 정규화된 이름입니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Name">
          <source>For example, <ph id="ph1">&lt;see langword="Name" /&gt;</ph> is <ph id="ph2">&lt;see langword="bk:book" /&gt;</ph> for the element <bpt id="p1">&lt;c&gt;</bpt><ph id="ph3">&amp;lt;</ph>bk:book<ph id="ph4">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">예를 들어 <ph id="ph1">&lt;see langword="Name" /&gt;</ph> 은 <ph id="ph2">&lt;see langword="bk:book" /&gt;</ph> 요소에 대해 <bpt id="p1">&lt;c&gt;</bpt> <ph id="ph3">&amp;lt;</ph>예<ph id="ph4">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Name">
          <source>The name returned is dependent on the <ph id="ph1">&lt;see cref="P:System.Xml.XmlValidatingReader.NodeType" /&gt;</ph> of the node.</source>
          <target state="translated">반환되는 이름은 다음과 같이 노드의 <ph id="ph1">&lt;see cref="P:System.Xml.XmlValidatingReader.NodeType" /&gt;</ph>에 따라 달라집니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Name">
          <source>The following node types return the listed values.</source>
          <target state="translated">다음 노드 형식은 나열된 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Name">
          <source>All other node types return an empty string.</source>
          <target state="translated">기타 모든 노드 형식은 빈 문자열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Name">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Node Type</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 노드 형식</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Name">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Name</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이름</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Name">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Attribute" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The name of the attribute.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Attribute" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 특성의 이름입니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Name">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="DocumentType" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The document type name.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="DocumentType" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 문서 종류 이름입니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Name">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Element" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The tag name.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Element" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 태그 이름입니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Name">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="EntityReference" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The name of the entity referenced.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="EntityReference" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 참조 엔터티의 이름입니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Name">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="ProcessingInstruction" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The target of the processing instruction.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="ProcessingInstruction" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 처리 명령의 대상입니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Name">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="XmlDeclaration" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The literal string <ph id="ph6">&lt;see langword="xml" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="XmlDeclaration" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 리터럴 문자열 <ph id="ph6">&lt;see langword="xml" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Name">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Name">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Name">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Name">
          <source>The following example reads an XML file and displays each of the nodes.</source>
          <target state="translated">다음 예제에서는 XML 파일을 읽고 각 노드를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Name">
          <source>The example uses the file, <ph id="ph1">`items.xml`</ph>, as input.</source>
          <target state="translated">이 예제에서는 파일을 사용 하 여 <ph id="ph1">`items.xml`</ph>입력으로 합니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlValidatingReader.Namespaces">
          <source>Gets or sets a value indicating whether to do namespace support.</source>
          <target state="translated">네임스페이스 지원 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Namespaces">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to do namespace support; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">네임스페이스를 지원하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Namespaces">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Namespaces">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Namespaces">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Namespaces">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlValidatingReader.NamespaceURI">
          <source>Gets the namespace Uniform Resource Identifier (URI) (as defined in the World Wide Web Consortium (W3C) Namespace specification) of the node on which the reader is positioned.</source>
          <target state="translated">W3C(World Wide Web 컨소시엄) 네임스페이스 사양에서 정의된 것처럼 판독기가 있는 노드의 네임스페이스 URI(Uniform Resource Identifier)를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.NamespaceURI">
          <source>The namespace URI of the current node; otherwise an empty string.</source>
          <target state="translated">현재 노드의 네임스페이스 URI이거나 빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.NamespaceURI">
          <source>This property is relevant to <ph id="ph1">`Element`</ph> and <ph id="ph2">`Attribute`</ph> nodes only.</source>
          <target state="translated">이 속성은 관련이 <ph id="ph1">`Element`</ph> 및 <ph id="ph2">`Attribute`</ph> 노드만 해당 합니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.NamespaceURI">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.NamespaceURI">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.NamespaceURI">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.NamespaceURI">
          <source>The following example reads an XML fragment.</source>
          <target state="translated">다음 예제에서는 XML 조각이 읽습니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlValidatingReader.NameTable">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> associated with this implementation.</source>
          <target state="translated">이 구현과 관련된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph>을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.NameTable">
          <source><ph id="ph1">&lt;see langword="XmlNameTable" /&gt;</ph> that enables you to get the atomized version of a string within the node.</source>
          <target state="translated">노드 내에 있는 문자열의 원자화된 버전을 가져올 수 있도록 하는 <ph id="ph1">&lt;see langword="XmlNameTable" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.NameTable">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.NameTable">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.NameTable">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.NameTable">
          <source>All node and attribute names returned from <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> are atomized by using the <ph id="ph2">`NameTable`</ph>.</source>
          <target state="translated">반환 된 모든 노드 및 특성 이름은 <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 를 사용 하 여 원자화는 <ph id="ph2">`NameTable`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.NameTable">
          <source>When the same name is returned multiple times (for example, <ph id="ph1">`Customer`</ph>), the same <ph id="ph2">`String`</ph> object will be returned for that name.</source>
          <target state="translated">이름이 같은 여러 번에 반환 될 때 (예를 들어 <ph id="ph1">`Customer`</ph>), 동일한 <ph id="ph2">`String`</ph> 해당 이름에 대 한 개체를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.NameTable">
          <source>This makes it possible for you to write efficient code that does object comparisons on these strings instead of expensive string comparisons.</source>
          <target state="translated">이렇게 하면 개체 비용이 많이 드는 문자열 비교 대신이 문자열에 대해 비교를 수행 하는 효율적인 코드를 작성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlValidatingReader.NodeType">
          <source>Gets the type of the current node.</source>
          <target state="translated">현재 노드의 형식을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.NodeType">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeType" /&gt;</ph> values representing the type of the current node.</source>
          <target state="translated">현재 노드의 형식을 나타내는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeType" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.NodeType">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.NodeType">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.NodeType">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.NodeType">
          <source>This property never returns the following <ph id="ph1">`XmlNodeType`</ph> types: <ph id="ph2">`Document`</ph>, <ph id="ph3">`DocumentFragment`</ph>, <ph id="ph4">`Entity`</ph>, or <ph id="ph5">`Notation`</ph>.</source>
          <target state="translated">이 속성이 반환 하지 않습니다. 다음 <ph id="ph1">`XmlNodeType`</ph> 형식: <ph id="ph2">`Document`</ph>, <ph id="ph3">`DocumentFragment`</ph>, <ph id="ph4">`Entity`</ph>, 또는 <ph id="ph5">`Notation`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.NodeType">
          <source>The following example reads an XML file and displays each of the nodes.</source>
          <target state="translated">다음 예제에서는 XML 파일을 읽고 각 노드를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.NodeType">
          <source>The example uses the file, <ph id="ph1">`items.xml`</ph>, as input.</source>
          <target state="translated">이 예제에서는 파일을 사용 하 여 <ph id="ph1">`items.xml`</ph>입력으로 합니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlValidatingReader.Prefix">
          <source>Gets the namespace prefix associated with the current node.</source>
          <target state="translated">현재 노드와 관련된 네임스페이스 접두사를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Prefix">
          <source>The namespace prefix associated with the current node.</source>
          <target state="translated">현재 노드와 관련된 네임스페이스 접두사입니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Prefix">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Prefix">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Prefix">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Prefix">
          <source>The following example reads an XML fragment.</source>
          <target state="translated">다음 예제에서는 XML 조각이 읽습니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlValidatingReader.QuoteChar">
          <source>Gets the quotation mark character used to enclose the value of an attribute node.</source>
          <target state="translated">특성 노드의 값을 묶을 때 사용하는 인용 부호 문자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.QuoteChar">
          <source>The quotation mark character (" or ') used to enclose the value of an attribute node.</source>
          <target state="translated">특성 노드의 값을 묶을 때 사용하는 인용 부호 문자입니다.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.QuoteChar">
          <source>This property applies only to an attribute node.</source>
          <target state="translated">특성 노드의 경우에이 속성이 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.QuoteChar">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.QuoteChar">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.QuoteChar">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.Read">
          <source>Reads the next node from the stream.</source>
          <target state="translated">스트림에서 다음 노드를 읽습니다.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.Read">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the next node was read successfully; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if there are no more nodes to read.</source>
          <target state="translated">다음 노드를 읽었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 더 이상 읽을 노드가 없으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.Read">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.Read">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.Read">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.Read">
          <source>When a reader is first created and initialized, there is no information available.</source>
          <target state="translated">판독기가 먼저 초기화를 만들고 이면 정보가 없습니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.Read">
          <source>You must call <ph id="ph1">`Read`</ph> to read the first node.</source>
          <target state="translated">호출 해야 <ph id="ph1">`Read`</ph> 첫 번째 노드를 읽을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.Read">
          <source>The following example reads an XML file and displays each node.</source>
          <target state="translated">다음 예제에서는 XML 파일을 읽고 각 노드를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.Read">
          <source>The example uses the file, <ph id="ph1">`items.xml`</ph>, as input.</source>
          <target state="translated">이 예제에서는 파일을 사용 하 여 <ph id="ph1">`items.xml`</ph>입력으로 합니다.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadAttributeValue">
          <source>Parses the attribute value into one or more <ph id="ph1">&lt;see langword="Text" /&gt;</ph>, <ph id="ph2">&lt;see langword="EntityReference" /&gt;</ph>, or <ph id="ph3">&lt;see langword="EndEntity" /&gt;</ph> nodes.</source>
          <target state="translated">특성 값을 하나 이상의 <ph id="ph1">&lt;see langword="Text" /&gt;</ph>, <ph id="ph2">&lt;see langword="EntityReference" /&gt;</ph> 또는 <ph id="ph3">&lt;see langword="EndEntity" /&gt;</ph> 노드로 구문 분석합니다.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadAttributeValue">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if there are nodes to return.</source>
          <target state="translated">반환할 노드가 있는 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadAttributeValue">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.</source>
          <target state="translated">처음 호출할 때 판독기가 특성 노드에 있거나 모든 특성 값을 읽은 경우 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadAttributeValue">
          <source>An empty attribute, such as, <bpt id="p1">&lt;c&gt;</bpt>misc=""<ept id="p1">&lt;/c&gt;</ept>, returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> with a single node with a value of String.Empty.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>misc=""<ept id="p1">&lt;/c&gt;</ept>와 같은 빈 특성은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>를 반환하며 이것은 단일 노드가 String.Empty의 값을 갖는 것을 의미합니다.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadAttributeValue">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadAttributeValue">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadAttributeValue">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadAttributeValue">
          <source>Use this method after calling <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.MoveToAttribute%2A&gt;</ph> to read through the text or entity reference nodes that make up the attribute value.</source>
          <target state="translated">이 메서드를 사용 하 여 호출한 후 <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.MoveToAttribute%2A&gt;</ph> 특성 값을 구성 하는 텍스트 또는 엔터티 참조 노드를 읽을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadAttributeValue">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader.Depth%2A&gt;</ph> of the attribute value nodes is one plus the depth of the attribute node.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.Depth%2A&gt;</ph> 특성 값 노드는 1을 더한 특성 노드 수준입니다.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadAttributeValue">
          <source>The <ph id="ph1">`Depth`</ph> increments and decrements by one when you step into and out of general entity references.</source>
          <target state="translated"><ph id="ph1">`Depth`</ph> 증가 하 고 내부 / 외부로 일반 엔터티 참조를 단계별로 실행할 때 1 씩 감소 합니다.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadAttributeValue">
          <source>For example, suppose you have the following XML: <ph id="ph1">`&lt;test name="a &amp;b; c"/&gt;`</ph></source>
          <target state="translated">예를 들어 다음 XML을 있다고 가정 합니다. <ph id="ph1">`&lt;test name="a &amp;b; c"/&gt;`</ph></target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadAttributeValue">
          <source>where the entity <ph id="ph1">`b`</ph> is defined in the document type definition (DTD) as follows: <ph id="ph2">`&lt;!ENTITY b "123"&gt;`</ph></source>
          <target state="translated">여기서 엔터티 <ph id="ph1">`b`</ph> 문서 형식 정의 (DTD)에서 다음과 같이 정의 됩니다. <ph id="ph2">`&lt;!ENTITY b "123"&gt;`</ph></target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadAttributeValue">
          <source>If <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.EntityHandling%2A&gt;</ph> is set to <ph id="ph2">`ExpandCharEntities`</ph>, the following C# code returns the attribute value as two text nodes and one entity reference node:</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.EntityHandling%2A&gt;</ph> 로 설정 된 <ph id="ph2">`ExpandCharEntities`</ph>, 다음 C# 코드는 두 개의 텍스트 노드와 하나의 엔터티 참조 노드 특성 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadAttributeValue">
          <source>The following example reads an attribute with text and entity reference nodes.</source>
          <target state="translated">다음 예제에서는 텍스트 및 엔터티 참조 노드를 사용 하 여 특성을 읽습니다.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer into which to copy the resulting text.</source>
          <target state="translated">결과 텍스트를 복사해 넣을 버퍼입니다.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This value cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 없습니다.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the buffer where to start copying the result.</source>
          <target state="translated">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to copy into the buffer.</source>
          <target state="translated">버퍼에 복사할 최대 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The actual number of bytes copied is returned from this method.</source>
          <target state="translated">복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>Reads the content and returns the Base64 decoded binary bytes.</source>
          <target state="translated">콘텐츠를 읽고 Base64 디코딩된 이진 바이트를 반환합니다.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes written to the buffer.</source>
          <target state="translated">버퍼에 쓴 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page..</source>
          <target state="translated">자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지...</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This method streams the content, decodes the Base64 content, and returns the decoded binary bytes (for example, an inline Base64 encoded GIF image) into the buffer.</source>
          <target state="translated">이 메서드는 콘텐츠를 Base64 콘텐츠를 디코딩합니다 고 (예를 들어, 인라인 Base64 인코딩된 GIF 이미지) 버퍼에 있습니다.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This method can be called successively to read large streams of embedded text.</source>
          <target state="translated">이 메서드는 포함 된 텍스트의 큰 스트림을 읽도록 연속적으로 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>For more information, see RFC 1521, "MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies".</source>
          <target state="translated">자세한 내용은 RFC 1521을 참조 하십시오. "MIME (Multipurpose Internet Mail Extensions) 파트 1:를 지정 하 고 인터넷 메시지 본문의 형식을 설명 하는 메커니즘"입니다.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>You can obtain RFCs from the Request for Comments Web site at <ph id="ph1">http://www.rfc-editor.org</ph>.</source>
          <target state="translated">주석 웹 사이트에 대 한 요청에서 Rfc를 얻을 수 있습니다 <ph id="ph1">http://www.rfc-editor.org</ph>합니다.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>You should not access any of the reader properties between calls to the <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A&gt;</ph> method until the method returns the value 0.</source>
          <target state="translated">에 대 한 호출 간의 판독기 속성을 액세스 하지 않아야는 <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A&gt;</ph> 메서드 값 0을 반환 될 때까지 메서드.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This method has the following behavior:</source>
          <target state="translated">이 메서드에 다음과 같은 동작이 있습니다.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A&gt;</ph> returns the value 0 when it has reached the end of the byte stream it was operating on.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A&gt;</ph> 작업 중인 바이트 스트림의 끝에 도달한 경우 값 0을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The reader is positioned on the first non-content node.</source>
          <target state="translated">첫 번째 비 콘텐츠 노드에 판독기가 있습니다.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>If you ask for fewer, or the exact number, of bytes than are left in the stream, the reader remains in its current position.</source>
          <target state="translated">요청 하거나 바이트, 스트림 판독기에에서 남은 보다 정확한 수의 현재 위치에 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A&gt;</ph> is not supported on the following XML node types:  Element, XmlDeclaration, None, Document, DocumentType, Notation, Entity, and DocumentFragment.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A&gt;</ph> 다음 XML 노드 형식에서 지원 되지 않습니다: 요소, XmlDeclaration, None, 문서, DocumentType, 표기법, 엔터티 및 DocumentFragment 합니다.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> is not supported on the current node.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /&gt;</ph>가 현재 노드에서 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The index into the buffer or index + count is larger than the allocated buffer size.</source>
          <target state="translated">버퍼 내의 인덱스 또는 인덱스와 개수를 합한 값이 할당된 버퍼 크기보다 큰 경우</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer into which to copy the resulting text.</source>
          <target state="translated">결과 텍스트를 복사해 넣을 버퍼입니다.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This value cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 없습니다.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the buffer where to start copying the result.</source>
          <target state="translated">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to copy into the buffer.</source>
          <target state="translated">버퍼에 복사할 최대 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The actual number of bytes copied is returned from this method.</source>
          <target state="translated">복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>Reads the content and returns the BinHex decoded binary bytes.</source>
          <target state="translated">내용을 읽고 BinHex 디코딩된 이진 바이트를 반환합니다.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes written to the buffer.</source>
          <target state="translated">버퍼에 쓴 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page..</source>
          <target state="translated">자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지...</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This method streams the content, decodes the BinHex content, and returns the decoded binary bytes (for example, an inline BinHex encoded GIF image) into the buffer.</source>
          <target state="translated">이 메서드는 콘텐츠를 스트리밍하 고 BinHex 콘텐츠를 고 (예를 들어, 인라인 BinHex 인코딩된 GIF 이미지) 버퍼에 있습니다.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This method can be called successively to read large streams of embedded text.</source>
          <target state="translated">이 메서드는 포함 된 텍스트의 큰 스트림을 읽도록 연속적으로 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>You should not access any of the reader properties between calls to the <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A&gt;</ph> method until the method returns the value 0.</source>
          <target state="translated">에 대 한 호출 간의 판독기 속성을 액세스 하지 않아야는 <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A&gt;</ph> 메서드 값 0을 반환 될 때까지 메서드.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This method has the following behavior:</source>
          <target state="translated">이 메서드에 다음과 같은 동작이 있습니다.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A&gt;</ph> returns the value 0 when it has reached the end of the byte stream it was operating on.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A&gt;</ph> 작업 중인 바이트 스트림의 끝에 도달한 경우 값 0을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The reader is positioned on the first non-content node.</source>
          <target state="translated">첫 번째 비 콘텐츠 노드에 판독기가 있습니다.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>If you ask for fewer, or the exact number, of bytes than are left in the stream, the reader remains in its current position.</source>
          <target state="translated">요청 하거나 바이트, 스트림 판독기에에서 남은 보다 정확한 수의 현재 위치에 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A&gt;</ph> is not supported on the following XML node types:  Element, XmlDeclaration, None, Document, DocumentType, Notation, Entity, and DocumentFragment.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A&gt;</ph> 다음 XML 노드 형식에서 지원 되지 않습니다: 요소, XmlDeclaration, None, 문서, DocumentType, 표기법, 엔터티 및 DocumentFragment 합니다.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> is not supported on the current node.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /&gt;</ph>가 현재 노드에서 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The index into the buffer or index + count is larger than the allocated buffer size.</source>
          <target state="translated">버퍼 내의 인덱스 또는 인덱스와 개수를 합한 값이 할당된 버퍼 크기보다 큰 경우</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlValidatingReader" /&gt;</ph> implementation does not support this method.</source>
          <target state="translated">구현된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlValidatingReader" /&gt;</ph>에서 이 메서드를 지원하지 않는 경우</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer into which to copy the resulting text.</source>
          <target state="translated">결과 텍스트를 복사해 넣을 버퍼입니다.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This value cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 없습니다.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the buffer where to start copying the result.</source>
          <target state="translated">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to copy into the buffer.</source>
          <target state="translated">버퍼에 복사할 최대 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The actual number of bytes copied is returned from this method.</source>
          <target state="translated">복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>Reads the element and decodes the Base64 content.</source>
          <target state="translated">요소를 읽고 Base64 콘텐츠를 디코딩합니다.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes written to the buffer.</source>
          <target state="translated">버퍼에 쓴 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This method reads the element content, decodes it using Base64 encoding, and returns the decoded binary bytes (for example, an inline Base64 encoded GIF image) into the buffer.</source>
          <target state="translated">이 메서드는 요소 내용을 읽고 Base64 인코딩을 사용 하 여 디코딩하고 디코딩된 이진 바이트를 반환 합니다 (예를 들어, 인라인 Base64 인코딩된 GIF 이미지) 버퍼에 있습니다.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>For more information, see RFC 1521, "MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies".</source>
          <target state="translated">자세한 내용은 RFC 1521을 참조 하십시오. "MIME (Multipurpose Internet Mail Extensions) 파트 1:를 지정 하 고 인터넷 메시지 본문의 형식을 설명 하는 메커니즘"입니다.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>You can obtain RFCs from the Request for Comments Web site at <ph id="ph1">http://www.rfc-editor.org</ph>.</source>
          <target state="translated">주석 웹 사이트에 대 한 요청에서 Rfc를 얻을 수 있습니다 <ph id="ph1">http://www.rfc-editor.org</ph>합니다.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This method can read only simple-content elements.</source>
          <target state="translated">이 메서드는 단순 콘텐츠 요소에만 읽을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The element can contain text, white space, significant white space, CDATA sections, comments, and processing instructions.</source>
          <target state="translated">요소에는 텍스트, 공백, 유효 공백, CDATA 섹션, 주석 및 처리 명령이 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>It can also contain entity references, which are automatically expanded.</source>
          <target state="translated">자동으로 확장 되는 엔터티 참조를 포함할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The element cannot have child elements.</source>
          <target state="translated">요소는 자식 요소를 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This method is very similar to the <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A&gt;</ph> method except that it can be called only on element node types.</source>
          <target state="translated">이 메서드는 매우 비슷합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A&gt;</ph> 요소 노드 형식에 대해서만 한다는 점 제외 하면 메서드를 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>If the <ph id="ph1">`count`</ph> value is higher than the number of bytes in the document, or if it is equal to the number of bytes in the document, the <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> reads all the remaining bytes in the document and returns the number of bytes read.</source>
          <target state="translated">경우는 <ph id="ph1">`count`</ph> 값이 문서에서 바이트 수와 같은 경우 또는 <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 문서에 나머지 모든 바이트를 읽고 읽은 바이트 수를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The next <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> method call returns a zero and moves the reader to the node following the <ph id="ph2">&lt;xref:System.Xml.XmlNodeType.EndElement&gt;</ph>.</source>
          <target state="translated">다음 <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 0을 반환 하 고 노드 다음에는 판독기를 이동 하는 메서드 호출의 <ph id="ph2">&lt;xref:System.Xml.XmlNodeType.EndElement&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>If you call <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.Read%2A&gt;</ph> before all of the element content is consumed, the reader may behave as if the first content was consumed and then the <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader.Read%2A&gt;</ph> method was called.</source>
          <target state="translated">호출 하는 경우 <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.Read%2A&gt;</ph> 요소 콘텐츠를 모두 사용 하기 전에 요소에서 사용 하는 경우 다음는 <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader.Read%2A&gt;</ph> 메서드를 호출 했습니다.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This means that the reader will read all the text until the end element is encountered.</source>
          <target state="translated">즉, 판독기는 end 요소가 발견 될 때까지 모든 텍스트를 읽습니다.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>It will then read the end tag node, read the next node, and then position itself on the next subsequent node.</source>
          <target state="translated">그런 다음 끝 태그 노드를 읽고, 다음 노드를 읽이 되며 다음 노드로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The current node is not an element node.</source>
          <target state="translated">현재 노드가 요소 노드가 아닌 경우</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The index into the buffer or index + count is larger than the allocated buffer size.</source>
          <target state="translated">버퍼 내의 인덱스 또는 인덱스와 개수를 합한 값이 할당된 버퍼 크기보다 큰 경우</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlValidatingReader" /&gt;</ph> implementation does not support this method.</source>
          <target state="translated">구현된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlValidatingReader" /&gt;</ph>에서 이 메서드를 지원하지 않는 경우</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The element contains mixed-content.</source>
          <target state="translated">요소가 혼합 콘텐츠를 포함하는 경우</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The content cannot be converted to the requested type.</source>
          <target state="translated">요소를 요청한 형식으로 변환할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer into which to copy the resulting text.</source>
          <target state="translated">결과 텍스트를 복사해 넣을 버퍼입니다.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This value cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 없습니다.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the buffer where to start copying the result.</source>
          <target state="translated">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to copy into the buffer.</source>
          <target state="translated">버퍼에 복사할 최대 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The actual number of bytes copied is returned from this method.</source>
          <target state="translated">복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>Reads the element and decodes the BinHex content.</source>
          <target state="translated">요소를 읽고 BinHex 콘텐츠를 디코딩합니다.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes written to the buffer.</source>
          <target state="translated">버퍼에 쓴 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This method reads the element content, decodes it using BinHex encoding, and returns the decoded binary bytes (for example, an inline BinHex encoded GIF image) into the buffer.</source>
          <target state="translated">이 메서드는 요소 내용을 읽고 BinHex 인코딩을 사용 하 여 디코딩하고 디코딩된 이진 바이트를 반환 합니다 (예를 들어, 인라인 BinHex 인코딩된 GIF 이미지) 버퍼에 있습니다.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This method can read only simple-content elements.</source>
          <target state="translated">이 메서드는 단순 콘텐츠 요소에만 읽을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The element can contain text, white space, significant white space, CDATA sections, comments, and processing instructions.</source>
          <target state="translated">요소에는 텍스트, 공백, 유효 공백, CDATA 섹션, 주석 및 처리 명령이 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>It can also contain entity references, which are automatically expanded.</source>
          <target state="translated">자동으로 확장 되는 엔터티 참조를 포함할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The element cannot have child elements.</source>
          <target state="translated">요소는 자식 요소를 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This method is very similar to the <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A&gt;</ph> method except that it can be called only on element node types.</source>
          <target state="translated">이 메서드는 매우 비슷합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A&gt;</ph> 요소 노드 형식에 대해서만 한다는 점 제외 하면 메서드를 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>If the <ph id="ph1">`count`</ph> value is higher than the number of bytes in the document, or if it is equal to the number of bytes in the document, the <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> reads all the remaining bytes in the document and returns the number of bytes read.</source>
          <target state="translated">경우는 <ph id="ph1">`count`</ph> 값이 문서에서 바이트 수와 같은 경우 또는 <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 문서에 나머지 모든 바이트를 읽고 읽은 바이트 수를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The next <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> method call returns a zero and moves the reader to the node following the <ph id="ph2">&lt;xref:System.Xml.XmlNodeType.EndElement&gt;</ph>.</source>
          <target state="translated">다음 <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 0을 반환 하 고 노드 다음에는 판독기를 이동 하는 메서드 호출의 <ph id="ph2">&lt;xref:System.Xml.XmlNodeType.EndElement&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>If you call <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.Read%2A&gt;</ph> before all of the element content is consumed, the reader may behave as if the first content was consumed and then the <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader.Read%2A&gt;</ph> method was called.</source>
          <target state="translated">호출 하는 경우 <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.Read%2A&gt;</ph> 요소 콘텐츠를 모두 사용 하기 전에 요소에서 사용 하는 경우 다음는 <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader.Read%2A&gt;</ph> 메서드를 호출 했습니다.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This means that the reader will read all the text until the end element is encountered.</source>
          <target state="translated">즉, 판독기는 end 요소가 발견 될 때까지 모든 텍스트를 읽습니다.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>It will then read the end tag node, read the next node, and then position itself on the next subsequent node.</source>
          <target state="translated">그런 다음 끝 태그 노드를 읽고, 다음 노드를 읽이 되며 다음 노드로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The current node is not an element node.</source>
          <target state="translated">현재 노드가 요소 노드가 아닌 경우</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The index into the buffer or index + count is larger than the allocated buffer size.</source>
          <target state="translated">버퍼 내의 인덱스 또는 인덱스와 개수를 합한 값이 할당된 버퍼 크기보다 큰 경우</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlValidatingReader" /&gt;</ph> implementation does not support this method.</source>
          <target state="translated">구현된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlValidatingReader" /&gt;</ph>에서 이 메서드를 지원하지 않는 경우</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The element contains mixed-content.</source>
          <target state="translated">요소가 혼합 콘텐츠를 포함하는 경우</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The content cannot be converted to the requested type.</source>
          <target state="translated">요소를 요청한 형식으로 변환할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlValidatingReader.Reader">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> used to construct this <ph id="ph2">&lt;see langword="XmlValidatingReader" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see langword="XmlValidatingReader" /&gt;</ph>를 생성하는 데 사용된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Reader">
          <source>The <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> specified in the constructor.</source>
          <target state="translated">생성자에 지정된 <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Reader">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Reader">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Reader">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Reader">
          <source>This property allows the user to access properties specific to the supplied reader.</source>
          <target state="translated">이 속성에 제공 된 판독기에 관련 된 속성에 액세스할 수가 있습니다.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Reader">
          <source>It returns a typed <ph id="ph1">`XmlReader`</ph>.</source>
          <target state="translated">형식화 된 반환 <ph id="ph1">`XmlReader`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Reader">
          <source>The user should query for the type before casting.</source>
          <target state="translated">캐스팅 하기 전에 형식에 대 한 사용자를 쿼리해야 합니다.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Reader">
          <source>Changing the state of the returned reader (for example, calling one of the read methods) can lead to unpredictable results.</source>
          <target state="translated">반환된 된 판독기 (예를 들어 중 하나를 호출 읽기 메서드)의 상태를 변경 하면 예기치 않은 결과가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlValidatingReader.ReadState">
          <source>Gets the state of the reader.</source>
          <target state="translated">판독기의 상태를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.ReadState">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Xml.ReadState" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.ReadState" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.ReadState">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.ReadState">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.ReadState">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadString">
          <source>Reads the contents of an element or text node as a string.</source>
          <target state="translated">요소 또는 텍스트 노드의 내용을 문자열로 읽습니다.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadString">
          <source>The contents of the element or text node.</source>
          <target state="translated">요소 또는 텍스트 노드의 내용입니다.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadString">
          <source>This can be an empty string if the reader is positioned on something other than an element or text node, or if there is no more text content to return in the current context.</source>
          <target state="translated">판독기가 요소 또는 텍스트 노드 이외의 위치에 있거나 현재 컨텍스트에 반환할 텍스트 콘텐츠가 없는 경우 이것은 빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadString">
          <source>The text node can be either an element or an attribute text node.</source>
          <target state="translated">텍스트 노드는 요소 또는 특성 텍스트 노드입니다.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadString">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadString">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadString">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadString">
          <source>If positioned on an element, <ph id="ph1">`ReadString`</ph> concatenates all text, significant white space, white space, and CDATA section node types together and returns the concatenated data as the element content.</source>
          <target state="translated">요소에 배치 되 면 <ph id="ph1">`ReadString`</ph> 모든 텍스트, 유효 공백 문자, 공백 및 CDATA 섹션 노드 형식을 함께 연결 하 고 요소 내용, 연결 된 데이터를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadString">
          <source>The reader stops when any markup is encountered, including comments and processing instructions.</source>
          <target state="translated">판독기 처리 명령 및 메모를 포함 하 여 모든 태그에 오류가 발생 하면 중지 합니다.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadString">
          <source>This could occur in a mixed content model, or when an element end tag is read.</source>
          <target state="translated">이러한 동작은 혼합 내용 모델에서 발생하거나 요소 끝 태그를 읽을 때 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadString">
          <source>If positioned on a text node, <ph id="ph1">`ReadString`</ph> performs the same concatenation from the text node to the element end tag.</source>
          <target state="translated">텍스트 노드에 있을 경우 <ph id="ph1">`ReadString`</ph> 요소 끝 태그를 텍스트 노드를 동일한 연결을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadString">
          <source>If the reader is positioned on an attribute text node, <ph id="ph1">`ReadString`</ph> has the same functionality as if the reader were position on the element start tag.</source>
          <target state="translated">판독기가 특성 텍스트 노드에 있을 경우 <ph id="ph1">`ReadString`</ph>에는 판독기가 요소 시작 태그에 있을 때와 같은 기능이 있습니다.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadString">
          <source>It returns all the concatenated element text nodes.</source>
          <target state="translated">연결된 모든 요소 텍스트 노드를 반환합니다.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadString">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.EntityHandling%2A&gt;</ph> property determines how <ph id="ph2">`ReadString`</ph> works as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.EntityHandling%2A&gt;</ph> 속성 결정 방법을 <ph id="ph2">`ReadString`</ph> 다음과 같이 작동 합니다.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadString">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadString">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadString">
          <source>ExpandEntities</source>
          <target state="translated">ExpandEntities</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadString">
          <source>Returns expanded character and general entities.</source>
          <target state="translated">확장 된 문자와 일반 엔터티를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadString">
          <source>This is the default.</source>
          <target state="translated">이 값이 기본값입니다.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadString">
          <source>ExpandCharEntities</source>
          <target state="translated">ExpandCharEntities</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadString">
          <source>Returns the text content up to but not including a general entity reference.</source>
          <target state="translated">일반 엔터티 참조를 포함 하지 텍스트 내용을 반환합니다.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadString">
          <source>This means a general entity causes ReadString to stop.</source>
          <target state="translated">즉, 일반 엔터티 하면 ReadString를 중지 합니다.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadString">
          <source>You must call <ph id="ph1">`Read`</ph> to step over the entity reference.</source>
          <target state="translated">호출 해야 <ph id="ph1">`Read`</ph> 단계로 엔터티 참조 합니다.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadString">
          <source>The following example displays the text content of each of the elements.</source>
          <target state="translated">다음 예제에서는 각 요소의 텍스트 콘텐츠를 표시합니다.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadString">
          <source>The example uses the file, <ph id="ph1">`elems.xml`</ph>, as input.</source>
          <target state="translated">이 예제에서는 파일을 사용 하 여 <ph id="ph1">`elems.xml`</ph>입력으로 합니다.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadTypedValue">
          <source>Gets the common language runtime type for the specified XML Schema definition language (XSD) type.</source>
          <target state="translated">지정된 XSD(XML 스키마 정의 언어) 형식의 공용 언어 런타임 형식을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ReadTypedValue">
          <source>The common language runtime type for the specified XML Schema type.</source>
          <target state="translated">지정된 XML 스키마 형식의 공용 언어 런타임 형식입니다.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadTypedValue">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadTypedValue">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadTypedValue">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadTypedValue">
          <source>For example, if the schema type is defined as <ph id="ph1">`xsd:int`</ph>, the runtime type <ph id="ph2">`int32`</ph> is returned for the object.</source>
          <target state="translated">예를 들어, 스키마 형식으로 정의 된 경우 <ph id="ph1">`xsd:int`</ph>, 런타임 형식 <ph id="ph2">`int32`</ph> 개체에 대해 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadTypedValue">
          <source>This can be tested using the <ph id="ph1">&lt;xref:System.Object.GetType%2A&gt;</ph> method and cast accordingly.</source>
          <target state="translated">사용 하 여 테스트할 수 있습니다는 <ph id="ph1">&lt;xref:System.Object.GetType%2A&gt;</ph> 메서드와 캐스트 적절 하 게 합니다.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadTypedValue">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.ReadTypedValue%2A&gt;</ph> method always returns a type that is derived from the <ph id="ph2">&lt;xref:System.Object&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.ReadTypedValue%2A&gt;</ph> 메서드는 항상에서 파생 된 형식을 반환 된 <ph id="ph2">&lt;xref:System.Object&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadTypedValue">
          <source>It never returns the <ph id="ph1">&lt;xref:System.Object&gt;</ph> type.</source>
          <target state="translated">반환 하지 않습니다는 <ph id="ph1">&lt;xref:System.Object&gt;</ph> 유형입니다.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadTypedValue">
          <source>If the reader is positioned on an attribute, this method returns the runtime typed object, but does not change the position of the reader.</source>
          <target state="translated">특성에 판독기가 하는 경우이 메서드는 런타임 형식의 개체를 반환 하지만 판독기의 위치가 변경 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadTypedValue">
          <source>If the reader is positioned on an element, <ph id="ph1">`ReadTypedValue`</ph> reads any CDATA, text, white space, significant white space, and comment nodes, returns the runtime typed object and positions the reader on the end tag.</source>
          <target state="translated">판독기가 요소에 배치 하는 경우 <ph id="ph1">`ReadTypedValue`</ph> 런타임 형식의 개체를 반환 하 고 끝 태그에 판독기를 배치 CDATA, 텍스트, 공백, 유효 공백 및 설명 노드를 읽습니다.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadTypedValue">
          <source>Any types that do not have a direct mapping, for example <ph id="ph1">`NMTOKENS`</ph>, are returned as strings.</source>
          <target state="translated">예를 들어 직접 매핑을 포함 하지 하는 모든 형식 <ph id="ph1">`NMTOKENS`</ph>를 문자열로 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadTypedValue">
          <source>If <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.ValidationType%2A&gt;</ph> has been set to ValidationType.None, data type information is not provided from either schemas or document type definitions (DTDs).</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.ValidationType%2A&gt;</ph> 설정한 ValidationType.None를 데이터 형식 정보는 스키마 또는 문서 유형 정의 (Dtd)에서 제공 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadTypedValue">
          <source>After calling <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.Close%2A&gt;</ph>, <ph id="ph2">`ReadTypedValue`</ph> will return <ph id="ph3">`null`</ph>.</source>
          <target state="translated">호출한 후 <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.Close%2A&gt;</ph>, <ph id="ph2">`ReadTypedValue`</ph> 돌아갑니다 <ph id="ph3">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadTypedValue">
          <source>The following example displays the type information for each of the elements in the XML document.</source>
          <target state="translated">다음 예제에서는 XML 문서에 나오는 각 요소에 대 한 형식 정보를 표시합니다.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ReadTypedValue">
          <source>The example uses the following input files.</source>
          <target state="translated">이 예제에서는 다음 입력된 파일을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ResolveEntity">
          <source>Resolves the entity reference for <ph id="ph1">&lt;see langword="EntityReference" /&gt;</ph> nodes.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="EntityReference" /&gt;</ph> 노드에 대해 엔터티 참조를 확인합니다.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ResolveEntity">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ResolveEntity">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ResolveEntity">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ResolveEntity">
          <source>If the reader is positioned on an <ph id="ph1">`EntityReference`</ph> node (<ph id="ph2">`XmlNodeType.EntityReference`</ph>), if <ph id="ph3">&lt;xref:System.Xml.XmlValidatingReader.Read%2A&gt;</ph> is called after calling this method, the entity replacement text is parsed.</source>
          <target state="translated">판독기가 배치 되 면는 <ph id="ph1">`EntityReference`</ph> 노드 (<ph id="ph2">`XmlNodeType.EntityReference`</ph>) 하는 경우, <ph id="ph3">&lt;xref:System.Xml.XmlValidatingReader.Read%2A&gt;</ph> 이 방법에서는 엔터티 대체 텍스트를 구문 분석 하는 호출 후에 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ResolveEntity">
          <source>After the entity replacement text is finished, an <ph id="ph1">`EndEntity`</ph> node is returned to close the entity reference scope.</source>
          <target state="translated">엔터티 대체 텍스트를 완료 한 후 한 <ph id="ph1">`EndEntity`</ph> 노드가 엔터티 참조 범위를 닫습니다 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ResolveEntity">
          <source>After calling this method, if the entity is part of an attribute value, you must call <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.ReadAttributeValue%2A&gt;</ph> to step into the entity.</source>
          <target state="translated">이 메서드를 호출한 후 엔터티의 특성 값의 일부인 경우 호출 해야 <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.ReadAttributeValue%2A&gt;</ph> 를 엔터티로 단계로 합니다.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ResolveEntity">
          <source>The following example uses <ph id="ph1">`ResolveEntity`</ph> to expand a general entity.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`ResolveEntity`</ph> 일반 엔터티를 확장 합니다.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.ResolveEntity">
          <source>The example uses the file, <ph id="ph1">`book1.xml`</ph>, as input.</source>
          <target state="translated">이 예제에서는 파일을 사용 하 여 <ph id="ph1">`book1.xml`</ph>입력으로 합니다.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.ResolveEntity">
          <source>The reader is not positioned on an <ph id="ph1">&lt;see langword="EntityReference" /&gt;</ph> node.</source>
          <target state="translated">판독기가 <ph id="ph1">&lt;see langword="EntityReference" /&gt;</ph> 노드에 배치되지 않은 경우</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlValidatingReader.Schemas">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaCollection" /&gt;</ph> to use for validation.</source>
          <target state="translated">유효성 검사에 사용할 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaCollection" /&gt;</ph>을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Schemas">
          <source>The <ph id="ph1">&lt;see langword="XmlSchemaCollection" /&gt;</ph> to use for validation.</source>
          <target state="translated">유효성 검사에 사용할 <ph id="ph1">&lt;see langword="XmlSchemaCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Schemas">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Schemas">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Schemas">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Schemas">
          <source>The <ph id="ph1">`XmlSchemaCollection`</ph> holds pre-loaded XML-Data Reduced (XDR) and XML Schema definition language (XSD) schemas.</source>
          <target state="translated"><ph id="ph1">`XmlSchemaCollection`</ph> 미리 로드 된 Xml-data Reduced (XDR) 및 XML 스키마 정의 언어 (XSD) 스키마를 보유 합니다.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Schemas">
          <source>This property gives the reader access to the cache of schemas and allows it to validate without having to re-load schemas every time.</source>
          <target state="translated">이 속성 스키마의 캐시에 판독기를 연결 하 고 유효성을 검사할 스키마를 다시 로드 될 때마다 필요 없이 허용 합니다.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Schemas">
          <source>The reader does not add anything to the <ph id="ph1">`XmlSchemaCollection`</ph>.</source>
          <target state="translated">판독기에 아무 것도 추가 하지 않습니다는 <ph id="ph1">`XmlSchemaCollection`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Schemas">
          <source>If the <ph id="ph1">`XmlSchemaCollection`</ph> includes an XML schema (XSD) which contains <ph id="ph2">`include`</ph> or <ph id="ph3">`import`</ph> elements that reference other namespaces, the schemas for these other namespaces are loaded for validation purposes only.</source>
          <target state="translated">경우는 <ph id="ph1">`XmlSchemaCollection`</ph> 포함 된 XML 스키마 (XSD)를 포함 <ph id="ph2">`include`</ph> 또는 <ph id="ph3">`import`</ph> 유효성 검사를 위해서만 다른 네임 스페이스는 로드에 대 한 다른 네임 스페이스에 스키마를 참조 하는 요소입니다.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Schemas">
          <source>Unless these schemas were explicitly added to the schema collection, they will not be accessible using any of the collection methods or properties.</source>
          <target state="translated">이러한 스키마는 스키마 컬렉션에 명시적으로 추가 된, 하지 않는 한 컬렉션 메서드 또는 속성 중 하나를 사용 하 여 액세스할 됩니다.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Schemas">
          <source>For example, if the collection contains the schema file <ph id="ph1">`a.xsd`</ph>, which contains a reference to the schema file <ph id="ph2">`b.xsd`</ph>, you must add <ph id="ph3">`b.xsd`</ph> to the schema collection before you can access it using any of the collection methods or properties.</source>
          <target state="translated">예를 들어, 컬렉션에 스키마 파일 <ph id="ph1">`a.xsd`</ph>, 스키마 파일에 대 한 참조를 포함 하 <ph id="ph2">`b.xsd`</ph>를 추가 해야 <ph id="ph3">`b.xsd`</ph> 를 스키마 컬렉션 컬렉션 메서드 또는 속성 중 하나를 사용 하 여 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Schemas">
          <source>When the <ph id="ph1">`XmlSchemaCollection`</ph> is accessed using the <ph id="ph2">`Schemas`</ph> property, the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaCollection.Add%2A?displayProperty=nameWithType&gt;</ph> method uses the <ph id="ph4">&lt;xref:System.Xml.XmlResolver&gt;</ph> specified by the <ph id="ph5">&lt;xref:System.Xml.XmlValidatingReader.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">때는 <ph id="ph1">`XmlSchemaCollection`</ph> 를 사용 하 여 액세스 하는 <ph id="ph2">`Schemas`</ph> 속성에는 <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaCollection.Add%2A?displayProperty=nameWithType&gt;</ph> 메서드는 <ph id="ph4">&lt;xref:System.Xml.XmlResolver&gt;</ph> 에 지정 된는 <ph id="ph5">&lt;xref:System.Xml.XmlValidatingReader.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> 속성.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Schemas">
          <source>The schemas must be added to the <ph id="ph1">`XmlSchemaCollection`</ph> before the first <ph id="ph2">`Read`</ph> call.</source>
          <target state="translated">스키마에 추가 되어야 합니다는 <ph id="ph1">`XmlSchemaCollection`</ph> 첫 번째 <ph id="ph2">`Read`</ph> 호출 합니다.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Schemas">
          <source>The following example validates three XML files using schemas stored in the XmlSchemaCollection.</source>
          <target state="translated">다음 예제에서는 XmlSchemaCollection에 저장 된 스키마를 사용 하 여 세 개의 XML 파일의 유효성을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Schemas">
          <source>The sample uses the following five input files:</source>
          <target state="translated">샘플에서는 다음과 같은 5 개의 입력된 파일을 사용합니다.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlValidatingReader.SchemaType">
          <source>Gets a schema type object.</source>
          <target state="translated">스키마 형식 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.SchemaType">
          <source><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /&gt;</ph>, or <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaComplexType" /&gt;</ph> depending whether the node value is a built in XML Schema definition language (XSD) type or a user defined simpleType or complexType; <ph id="ph4">&lt;see langword="null" /&gt;</ph> if the current node has no schema type.</source>
          <target state="translated">노드 값이 기본 제공 XSD(XML 스키마 정의 언어) 형식인지 사용자 정의 simpleType 또는 complexType인지 여부에 따라 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaComplexType" /&gt;</ph>입니다. 현재 노드에 스키마 형식이 없으면 <ph id="ph4">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.SchemaType">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.SchemaType">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.SchemaType">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.SchemaType">
          <source>The user needs to test for the returned type.</source>
          <target state="translated">사용자가 반환 되는 형식에 대 한 테스트 해야 합니다.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.SchemaType">
          <source>For example,</source>
          <target state="translated">예를 들어 개체에 적용된</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.SchemaType">
          <source>If XML Schema validation is being performed, the <ph id="ph1">`XmlSchemaType`</ph> or <ph id="ph2">`XmlSchemaDatatype`</ph> corresponds to the current element being read.</source>
          <target state="translated">XML 스키마 유효성 검사를 수행 하는 경우는 <ph id="ph1">`XmlSchemaType`</ph> 또는 <ph id="ph2">`XmlSchemaDatatype`</ph> 읽혀질 현재 요소에 해당 합니다.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.SchemaType">
          <source>If document type definition (DTD validation) is being performed, this property returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">이 속성을 반환 하는 경우 문서 유형 정의 (DTD 유효성 검사)를 수행할 <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.SchemaType">
          <source><ph id="ph1">`XmlSchemaDatatype`</ph> is returned if the current element, or attribute, is a simple type that can specify special validation constraints on the simple types, like min and max.</source>
          <target state="translated"><ph id="ph1">`XmlSchemaDatatype`</ph> 현재 요소 또는 특성, min 및 max와 같은 간단한 형식에 특별 한 유효성 검사 제약 조건을 지정할 수 있는 단순 유형 인지 여부를 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.SchemaType">
          <source><ph id="ph1">`XmlSchemaSimpleType`</ph> is returned if the current element, or attribute, is a user defined simpleType.</source>
          <target state="translated"><ph id="ph1">`XmlSchemaSimpleType`</ph> 현재 요소 또는 특성을 사용자 정의 simpleType가 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.SchemaType">
          <source><ph id="ph1">`XmlSchemaComplexType`</ph> is returned if the current element is a user defined complexType.</source>
          <target state="translated"><ph id="ph1">`XmlSchemaComplexType`</ph> 현재 요소는 사용자 정의 complexType가 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.SchemaType">
          <source>This type cannot be returned by attributes.</source>
          <target state="translated">이 형식은 특성으로 반환할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.SchemaType">
          <source>If <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.ValidationType%2A&gt;</ph> has been set to ValidationType.None, no data type information is provided from either schemas or DTDs.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.ValidationType%2A&gt;</ph> 설정한 ValidationType.None을 위해 데이터 형식 정보가 없는 스키마 또는 Dtd에서 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.SchemaType">
          <source>After calling <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.Close%2A&gt;</ph>, SchemaType will return Null.</source>
          <target state="translated">호출한 후 <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.Close%2A&gt;</ph>, SchemaType Null이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.SchemaType">
          <source>The following example displays the type information for each of the elements in the XML document.</source>
          <target state="translated">다음 예제에서는 XML 문서에 나오는 각 요소에 대 한 형식 정보를 표시합니다.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.SchemaType">
          <source>The example uses the following input files.</source>
          <target state="translated">이 예제에서는 다음 입력된 파일을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlNamespaceScope" /&gt;</ph> object that identifies the scope of the reader.</source>
          <target state="translated">판독기의 범위를 식별하는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlNamespaceScope" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
          <source>An T:System.Collections.IDictionary object that identifies the namespaces in scope.</source>
          <target state="translated">범위에서 네임스페이스를 식별하는 T:System.Collections.IDictionary 개체입니다.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
          <source>The namespace prefix.</source>
          <target state="translated">네임스페이스 접두사입니다.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
          <source>A string value that contains the namespace Uri that is associated with the prefix.</source>
          <target state="translated">접두사와 관련된 네임스페이스 URI가 포함된 문자열 값입니다.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
          <source>The namespace that is associated with the prefix.</source>
          <target state="translated">접두사와 관련된 네임스페이스입니다.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
          <source>A string value that contains the namespace prefix that is associated with the <ph id="ph1">&lt;paramref name="namespaceName" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="namespaceName" /&gt;</ph>과 관련된 네임스페이스 접두사가 포함된 문자열 값입니다.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" uid="E:System.Xml.XmlValidatingReader.ValidationEventHandler">
          <source>Sets an event handler for receiving information about document type definition (DTD), XML-Data Reduced (XDR) schema, and XML Schema definition language (XSD) schema validation errors.</source>
          <target state="translated">DTD(언어 종류 정의), XDR(XML-Data Reduced) 스키마 및 XSD(XML 스키마 정의 언어) 스키마 유효성 검사 오류에 대한 정보를 받는 이벤트 처리기를 설정합니다.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.XmlValidatingReader.ValidationEventHandler">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.XmlValidatingReader.ValidationEventHandler">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.XmlValidatingReader.ValidationEventHandler">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.XmlValidatingReader.ValidationEventHandler">
          <source>These events occur during <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.Read%2A&gt;</ph> and only if a <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader.ValidationType%2A&gt;</ph> of DTD, XDR, Schema, or Auto is specified.</source>
          <target state="translated">이러한 이벤트 중 발생 <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.Read%2A&gt;</ph> 및 경우에만 <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader.ValidationType%2A&gt;</ph> DTD의 XDR, 스키마 또는 자동 지정 합니다.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.XmlValidatingReader.ValidationEventHandler">
          <source>If no event handler is provided, an <ph id="ph1">&lt;xref:System.Xml.XmlException&gt;</ph> is thrown on the first validation error (Severity is equal to XmlSeverityType.Error).</source>
          <target state="translated">없는 이벤트 처리기가 제공 하는 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlException&gt;</ph> (심각도 않으면) 첫 번째 유효성 검사 오류에서 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.XmlValidatingReader.ValidationEventHandler">
          <source>If an element reports a validation error, the rest of the content model for that element is not validated, however, its children are validated.</source>
          <target state="translated">하지만 요소는 유효성 검사 오류를 보고 하는 경우 해당 요소에 대 한 콘텐츠 모델의 나머지 유효성이 검사 되지 않은, 자식의 유효성을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.XmlValidatingReader.ValidationEventHandler">
          <source>The reader only reports the first error for a given element.</source>
          <target state="translated">판독기는 지정된 된 요소에 대 한 첫 번째 오류만 보고합니다.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.XmlValidatingReader.ValidationEventHandler">
          <source>The callback handler can use the <ph id="ph1">&lt;xref:System.Xml.Schema.ValidationEventArgs.Severity%2A?displayProperty=nameWithType&gt;</ph> property to guarantee that an XML instance document is validated against a schema.</source>
          <target state="translated">콜백 처리기는 <ph id="ph1">&lt;xref:System.Xml.Schema.ValidationEventArgs.Severity%2A?displayProperty=nameWithType&gt;</ph> 는 XML 인스턴스 문서의 유효성을 검사 스키마에 대해 보장 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.XmlValidatingReader.ValidationEventHandler">
          <source>The <ph id="ph1">`Severity`</ph> property allows you to distinguish between validation errors (Severity is equal to XmlSeverityType.Error) that indicate a fatal error, and validation warnings (Severity is equal to XmlSeverityType.Warning) that indicate that no schema information is available.</source>
          <target state="translated"><ph id="ph1">`Severity`</ph> 속성을 통해 치명적인 오류 (심각도 않으면) 유효성 검사 오류 및 있음을 (심각도 XmlSeverityType.Warning 같음) 유효성 검사 경고를 구별할 수 있습니다. 스키마가 없습니다 정보를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.XmlValidatingReader.ValidationEventHandler">
          <source>The following example validates a file against an XML Schema.</source>
          <target state="translated">다음 예제에서는 XML 스키마에 대해 파일의 유효성을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.XmlValidatingReader.ValidationEventHandler">
          <source>The sample uses the following two input files:</source>
          <target state="translated">이 샘플에서는 다음과 같은 두 개의 입력된 파일을 사용합니다.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.XmlValidatingReader.ValidationEventHandler">
          <source><ph id="ph1">`notValidXSD.xml`</ph> (The <ph id="ph2">`xsi:schemaLocation`</ph> attribute identifies the XML Schema for the reader.)</source>
          <target state="translated"><ph id="ph1">`notValidXSD.xml`</ph> (의 <ph id="ph2">`xsi:schemaLocation`</ph> 특성 판독기에 대 한 XML 스키마를 식별 합니다.)</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlValidatingReader.ValidationType">
          <source>Gets or sets a value indicating the type of validation to perform.</source>
          <target state="translated">수행할 유효성 검사의 형식을 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.ValidationType">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Xml.ValidationType" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.ValidationType" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.ValidationType">
          <source>If this property is not set, it defaults to ValidationType.Auto.</source>
          <target state="translated">이 속성이 설정되지 않으면 기본값은 ValidationType.Auto로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.ValidationType">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.ValidationType">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.ValidationType">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.ValidationType">
          <source>This property must be set before the first call to <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.Read%2A&gt;</ph>.</source>
          <target state="translated">첫 번째 호출 하기 전에이 속성을 설정 해야 <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.Read%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.ValidationType">
          <source>Setting this property to ValidationType.None creates a non-validating reader.</source>
          <target state="translated">이 속성을 ValidationType.None 유효성을 검사 하지 판독기를 만듭니다.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.ValidationType">
          <source>If external document type definitions (DTDs) or schemas are needed for validation, the <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> is used.</source>
          <target state="translated">외부 문서 유형 정의 (Dtd) 또는 스키마 유효성 검사를 위해 필요한 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.ValidationType">
          <source>The following example validates two files.</source>
          <target state="translated">다음 예제에서는 두 파일의 유효성을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.ValidationType">
          <source>The sample uses the following four input files:</source>
          <target state="translated">샘플에서는 다음과 같은 4 개의 입력된 파일을 사용합니다.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.ValidationType">
          <source><ph id="ph1">`notValid.xml`</ph> (The "x-schema:" prefix identifies the XML-Data Reduced (XDR) schema for the reader.)</source>
          <target state="translated"><ph id="ph1">`notValid.xml`</ph> (의 "x 스키마:" 접두사 판독기에 대 한 Xml-data Reduced (XDR) 스키마를 식별 합니다.)</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlValidatingReader.ValidationType">
          <source>Setting the property after a Read has been called.</source>
          <target state="translated">Read를 호출한 후 속성을 설정하는 경우</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlValidatingReader.Value">
          <source>Gets the text value of the current node.</source>
          <target state="translated">현재 노드의 텍스트 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Value">
          <source>The value returned depends on the <ph id="ph1">&lt;see cref="P:System.Xml.XmlValidatingReader.NodeType" /&gt;</ph> of the node.</source>
          <target state="translated">노드의 <ph id="ph1">&lt;see cref="P:System.Xml.XmlValidatingReader.NodeType" /&gt;</ph>에 따라 반환되는 값이 달라집니다.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Value">
          <source>The following table lists node types that have a value to return.</source>
          <target state="translated">다음 표에서는 반환할 값이 있는 노드 형식을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Value">
          <source>All other node types return String.Empty.</source>
          <target state="translated">다른 모든 노드 형식은 String.Empty를 반환합니다.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Value">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Node Type</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 노드 형식</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Value">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 값</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Attribute" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The value of the attribute.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Attribute" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 특성의 값입니다.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="CDATA" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The content of the CDATA section.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="CDATA" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> CDATA 섹션의 내용입니다.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Comment" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The content of the comment.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Comment" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 주석의 내용입니다.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="DocumentType" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The internal subset.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="DocumentType" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 내부 하위 집합입니다.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="ProcessingInstruction" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The entire content, excluding the target.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="ProcessingInstruction" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 대상을 제외한 전체 내용입니다.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="SignificantWhitespace" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The white space between markup in a mixed content model.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="SignificantWhitespace" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 혼합된 내용 모델에서 태그 사이의 공백입니다.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Text" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The content of the text node.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Text" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 텍스트 노드의 내용입니다.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Whitespace" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The white space between markup.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Whitespace" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 태그 사이의 공백입니다.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="XmlDeclaration" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The content of the declaration.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="XmlDeclaration" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 선언 내용입니다.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Value">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Value">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Value">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Value">
          <source>The following example reads an XML file and displays each node.</source>
          <target state="translated">다음 예제에서는 XML 파일을 읽고 각 노드를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.Value">
          <source>The example uses the file, <ph id="ph1">`items.xml`</ph>, as input.</source>
          <target state="translated">이 예제에서는 파일을 사용 하 여 <ph id="ph1">`items.xml`</ph>입력으로 합니다.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlValidatingReader.XmlLang">
          <source>Gets the current <ph id="ph1">&lt;see langword="xml:lang" /&gt;</ph> scope.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see langword="xml:lang" /&gt;</ph> 범위를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.XmlLang">
          <source>The current <ph id="ph1">&lt;see langword="xml:lang" /&gt;</ph> scope.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see langword="xml:lang" /&gt;</ph> 범위입니다.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.XmlLang">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.XmlLang">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.XmlLang">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.XmlLang">
          <source>This property represents the xml:lang scope within which the current node resides.</source>
          <target state="translated">이 속성은 현재 노드가 속해 있는 xml: lang 범위를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.XmlLang">
          <source>For example, here is an XML fragment with <ph id="ph1">`xml:lang`</ph> set to U.S. English in the root element:</source>
          <target state="translated">예를 들어 여기는 XML 조각으로 <ph id="ph1">`xml:lang`</ph> 미국으로 설정 루트 요소에서 영어:</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.XmlLang">
          <source>When the reader is positioned on the <ph id="ph1">`name`</ph> element, you can use this property to find that it is in the scope of a U.S. English <ph id="ph2">`xml:lang`</ph> attribute.</source>
          <target state="translated">에 판독기가 배치 하는 경우는 <ph id="ph1">`name`</ph> 요소를이 속성을 사용 하 여 미국의 범위에 필요할 수 있습니다 영어 <ph id="ph2">`xml:lang`</ph> 특성입니다.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlValidatingReader.XmlResolver">
          <source>Sets the <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> used for resolving external document type definition (DTD) and schema location references.</source>
          <target state="translated">외부 DTD(Document Type Definition) 및 스키마 위치 참조를 확인하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph>를 설정합니다.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlValidatingReader.XmlResolver">
          <source>The <ph id="ph1">&lt;see langword="XmlResolver" /&gt;</ph> is also used to handle any import or include elements found in XML Schema definition language (XSD) schemas.</source>
          <target state="translated">또한 <ph id="ph1">&lt;see langword="XmlResolver" /&gt;</ph>는 XSD(XML 스키마 정의 언어) 스키마에 있는 포함 요소 또는 가져오기 요소를 처리하는 데도 사용됩니다.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.XmlResolver">
          <source>The <ph id="ph1">&lt;see langword="XmlResolver" /&gt;</ph> to use.</source>
          <target state="translated">사용할 <ph id="ph1">&lt;see langword="XmlResolver" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.XmlResolver">
          <source>If set to <ph id="ph1">&lt;see langword="null" /&gt;</ph>, external resources are not resolved.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>로 설정되면 외부 리소스는 확인되지 않습니다.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.XmlResolver">
          <source>In version 1.1 of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>, the caller must be fully trusted to specify an <ph id="ph2">&lt;see langword="XmlResolver" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 버전 1.1에서는 완전히 신뢰할 수 있는 호출자만 <ph id="ph2">&lt;see langword="XmlResolver" /&gt;</ph>를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.XmlResolver">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.XmlResolver">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.XmlResolver">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.XmlResolver">
          <source>The <ph id="ph1">`XmlResolver`</ph> is used to load any DTDs, entities, or schemas needed to complete the validation process.</source>
          <target state="translated"><ph id="ph1">`XmlResolver`</ph> 모든 Dtd, 엔터티 또는 유효성 검사 프로세스를 완료 하는 데 필요한 스키마를 로드 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.XmlResolver">
          <source>This property can be set at any time and takes affect after the next <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.Read%2A&gt;</ph> call.</source>
          <target state="translated">언제 든 지가이 속성을 설정할 수 있습니다 및은 언제 다음 <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader.Read%2A&gt;</ph> 호출 합니다.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.XmlResolver">
          <source>If this property is set to <ph id="ph1">`null`</ph>, the reader assumes the user is not interested in resolving external references.</source>
          <target state="translated">이 속성은로 설정 하는 경우 <ph id="ph1">`null`</ph>, 판독기는 외부 참조를 확인 하지 않으려는 가정 합니다.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.XmlResolver">
          <source>In this case, the reader only validates against internal resources, if the resource is present.</source>
          <target state="translated">이 경우 판독기 유효성만 검사 내부 리소스에 대 한 리소스가 있는 경우.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.XmlResolver">
          <source>In version 1.1 of <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> , if this property is not set, the trust level of the application determines the default behavior.</source>
          <target state="translated">버전 1.1에서는 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> ,이 속성을 설정 하지 않으면 응용 프로그램의 신뢰 수준을 기본 동작을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.XmlResolver">
          <source><ph id="ph1">`Fully trusted code:`</ph> The reader uses a default <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no user credentials.</source>
          <target state="translated"><ph id="ph1">`Fully trusted code:`</ph> 판독기는 기본 <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 자격 증명이 없는 사용자입니다.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.XmlResolver">
          <source>If authentication is required to access a network resource, use the <ph id="ph1">`XmlResolver`</ph> property to specify an <ph id="ph2">`XmlResolver`</ph> with the necessary credentials.</source>
          <target state="translated">사용 하 여 네트워크 리소스에 액세스 하는 데 인증이 필요는 <ph id="ph1">`XmlResolver`</ph> 속성을 통해 지정 된 <ph id="ph2">`XmlResolver`</ph> 에 필요한 자격 증명입니다.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.XmlResolver">
          <source><ph id="ph1">`Semi-trusted code:`</ph> The <ph id="ph2">`XmlResolver`</ph> property is set to <ph id="ph3">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`Semi-trusted code:`</ph> <ph id="ph2">`XmlResolver`</ph> 속성이 <ph id="ph3">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.XmlResolver">
          <source>External resources are not resolved.</source>
          <target state="translated">외부 리소스 확인 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.XmlResolver">
          <source>When validating using schemas, you can avoid the expensive load process by providing an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> using the <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader.Schemas%2A&gt;</ph> property.</source>
          <target state="translated">스키마를 사용 하 여 유효성을 검사할 때 제공 하 여 비용이 많이 드는 로드 프로세스를 방지할 수 있습니다는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> 를 사용 하 여 <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader.Schemas%2A&gt;</ph> 속성.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.XmlResolver">
          <source>The following example uses the <ph id="ph1">`XmlResolver`</ph> property to specify the credentials necessary to access the networked DTD file.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`XmlResolver`</ph> 속성을 통해 네트워크로 연결 된 DTD 파일에 액세스 하는 데 필요한 자격 증명을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.XmlResolver">
          <source>The example uses the following files as input.</source>
          <target state="translated">이 예제에서는 입력으로 다음 파일을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlValidatingReader.XmlSpace">
          <source>Gets the current <ph id="ph1">&lt;see langword="xml:space" /&gt;</ph> scope.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see langword="xml:space" /&gt;</ph> 범위를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.XmlSpace">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlSpace" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlSpace" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.XmlSpace">
          <source>If no <ph id="ph1">&lt;see langword="xml:space" /&gt;</ph> scope exists, this property defaults to <ph id="ph2">&lt;see langword="XmlSpace.None" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="xml:space" /&gt;</ph> 범위가 존재하지 않으면 이 속성은 기본적으로 <ph id="ph2">&lt;see langword="XmlSpace.None" /&gt;</ph>으로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.XmlSpace">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class is obsolete in <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스에서 사용 되지 않는 <ph id="ph2">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.XmlSpace">
          <source>You can create a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사를 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlValidatingReader.XmlSpace">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>