<Type Name="XmlWriterSettings" FullName="System.Xml.XmlWriterSettings">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="63ddcdd7384be28c669a1c85111fa799861ce60c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XmlWriterSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlWriterSettings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlWriterSettings" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlWriterSettings" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlWriterSettings sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="29020-101">
        <see cref="T:System.Xml.XmlWriter" /> 메서드를 사용하여 만든 <see cref="Overload:System.Xml.XmlWriter.Create" /> 개체에서 지원할 기능 집합을 지정합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="29020-101">Specifies a set of features to support on the <see cref="T:System.Xml.XmlWriter" /> object created by the <see cref="Overload:System.Xml.XmlWriter.Create" /> method.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29020-102"><xref:System.Xml.XmlWriter.Create%2A> 메서드를 가져오기 위한 기본 메커니즘은 <xref:System.Xml.XmlWriter> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="29020-102">The <xref:System.Xml.XmlWriter.Create%2A> method is the preferred mechanism for obtaining <xref:System.Xml.XmlWriter> instances.</span></span> <span data-ttu-id="29020-103"><xref:System.Xml.XmlWriter.Create%2A> 메서드는 <xref:System.Xml.XmlWriterSettings> 클래스에서 구현 하는 기능을 지정 하는 <xref:System.Xml.XmlWriter> 만들어지는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="29020-103">The <xref:System.Xml.XmlWriter.Create%2A> method uses the <xref:System.Xml.XmlWriterSettings> class to specify which features to implement in the <xref:System.Xml.XmlWriter> object that is created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="29020-104">사용 중인 경우는 <xref:System.Xml.XmlWriter> 개체는 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 사용 해야 합니다는 <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings%2A> 속성을는 <xref:System.Xml.XmlWriterSettings> 올바른 설정으로는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="29020-104">If you're using the <xref:System.Xml.XmlWriter> object with the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method, you should use the <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings%2A> property to obtain an <xref:System.Xml.XmlWriterSettings> object with the correct settings.</span></span> <span data-ttu-id="29020-105">이에 따라 만들어진 <xref:System.Xml.XmlWriter> 개체가 올바른 출력 설정을 갖게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-105">This ensures that the created <xref:System.Xml.XmlWriter> object has the correct output settings.</span></span>  
  
 <span data-ttu-id="29020-106"><xref:System.Xml.XmlWriterSettings> 클래스 속성을 해당 컨트롤 데이터의 적합성 및 출력 형식을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-106">The <xref:System.Xml.XmlWriterSettings> class provides properties that control data conformance and output format.</span></span>  
  
 <span data-ttu-id="29020-107">데이터 규칙 검사 및 자동 수정에 대 한 이러한 속성을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-107">For data conformance checks and auto-corrections, use these properties:</span></span>  
  
|<span data-ttu-id="29020-108">속성</span><span class="sxs-lookup"><span data-stu-id="29020-108">Property</span></span>|<span data-ttu-id="29020-109">설명</span><span class="sxs-lookup"><span data-stu-id="29020-109">Specifies</span></span>|<span data-ttu-id="29020-110">값</span><span class="sxs-lookup"><span data-stu-id="29020-110">Value</span></span>|<span data-ttu-id="29020-111">기본</span><span class="sxs-lookup"><span data-stu-id="29020-111">Default</span></span>|  
|--------------|---------------|-----------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|<span data-ttu-id="29020-112">W3C에 정의 된 대로 올바른 xml에서 문자는 확인할 지 여부를 문자 집합을입니다.</span><span class="sxs-lookup"><span data-stu-id="29020-112">Whether to check that characters are in the legal XML character set, as defined by W3C.</span></span>|<span data-ttu-id="29020-113">`true` 또는 `false`</span><span class="sxs-lookup"><span data-stu-id="29020-113">`true` or `false`</span></span>|`true`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<span data-ttu-id="29020-114">올바른 형식의 XML 1.0 문서 또는 조각 출력 인지 확인 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="29020-114">Whether to check that output is a well-formed XML 1.0 document or fragment.</span></span>|<span data-ttu-id="29020-115"><xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> (문서 수준), <xref:System.Xml.ConformanceLevel.Fragment> (조각 수준), 또는 <xref:System.Xml.ConformanceLevel.Auto> (자동 검색)</span><span class="sxs-lookup"><span data-stu-id="29020-115"><xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> (document-level), <xref:System.Xml.ConformanceLevel.Fragment> (fragment-level), or <xref:System.Xml.ConformanceLevel.Auto> (auto-detection)</span></span>|<span data-ttu-id="29020-116"><xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> (문서 수준 규칙)</span><span class="sxs-lookup"><span data-stu-id="29020-116"><xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> (document-level conformance)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|<span data-ttu-id="29020-117">닫히지 않은 모든 요소에 닫는 태그를 추가할 것인지 때는 <xref:System.Xml.XmlWriter.Close%2A> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-117">Whether to add closing tags to all unclosed elements when the <xref:System.Xml.XmlWriter.Close%2A> method is called.</span></span>|<span data-ttu-id="29020-118">`true` 또는 `false`</span><span class="sxs-lookup"><span data-stu-id="29020-118">`true` or `false`</span></span>|`true`|  
  
 <span data-ttu-id="29020-119">출력 형식을 지정 하려면 이러한 속성을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-119">To specify output format, use these properties:</span></span>  
  
|<span data-ttu-id="29020-120">속성</span><span class="sxs-lookup"><span data-stu-id="29020-120">Property</span></span>|<span data-ttu-id="29020-121">설명</span><span class="sxs-lookup"><span data-stu-id="29020-121">Specifies</span></span>|<span data-ttu-id="29020-122">값</span><span class="sxs-lookup"><span data-stu-id="29020-122">Value</span></span>|<span data-ttu-id="29020-123">기본</span><span class="sxs-lookup"><span data-stu-id="29020-123">Default</span></span>|  
|--------------|---------------|-----------|-------------|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<span data-ttu-id="29020-124">사용할 텍스트 인코딩입니다.</span><span class="sxs-lookup"><span data-stu-id="29020-124">Text encoding to use.</span></span>|<span data-ttu-id="29020-125"><xref:System.Text.Encoding?displayProperty=nameWithType> 값</span><span class="sxs-lookup"><span data-stu-id="29020-125"><xref:System.Text.Encoding?displayProperty=nameWithType> value</span></span>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|<span data-ttu-id="29020-126">요소의 들여쓰기 여부를</span><span class="sxs-lookup"><span data-stu-id="29020-126">Whether to indent elements</span></span>|<span data-ttu-id="29020-127">`true` 또는 `false`</span><span class="sxs-lookup"><span data-stu-id="29020-127">`true` or `false`</span></span>|<span data-ttu-id="29020-128">`false` (들여쓰기 사용 안 함)</span><span class="sxs-lookup"><span data-stu-id="29020-128">`false` (no indentation)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="29020-129">들여쓸 때 사용할 문자열 (때 <xref:System.Xml.XmlWriterSettings.Indent%2A> 로 설정 된 `true`).</span><span class="sxs-lookup"><span data-stu-id="29020-129">Character string to use when indenting (used when <xref:System.Xml.XmlWriterSettings.Indent%2A> is set to `true`).</span></span>|<span data-ttu-id="29020-130">문자열</span><span class="sxs-lookup"><span data-stu-id="29020-130">String</span></span>|<span data-ttu-id="29020-131">공백 두 개</span><span class="sxs-lookup"><span data-stu-id="29020-131">Two spaces</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="29020-132">줄 바꿈에 사용할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="29020-132">Character string to use for line breaks.</span></span>|<span data-ttu-id="29020-133">문자열</span><span class="sxs-lookup"><span data-stu-id="29020-133">String</span></span>|<span data-ttu-id="29020-134">`\r\n` (캐리지 리턴, 줄 바꿈)</span><span class="sxs-lookup"><span data-stu-id="29020-134">`\r\n` (carriage return, line feed)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<span data-ttu-id="29020-135">줄 바꿈 문자를 처리 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="29020-135">How to handle newline characters.</span></span>|<span data-ttu-id="29020-136"><xref:System.Xml.NewLineHandling?displayProperty=nameWithType> 값: <xref:System.Xml.NewLineHandling.Entitize> (정규화) <xref:System.Xml.NewLineHandling.Replace> (replace) 또는 <xref:System.Xml.NewLineHandling.None> (상태로 표시 됨)</span><span class="sxs-lookup"><span data-stu-id="29020-136"><xref:System.Xml.NewLineHandling?displayProperty=nameWithType> value: <xref:System.Xml.NewLineHandling.Entitize> (normalize), <xref:System.Xml.NewLineHandling.Replace> (replace), or <xref:System.Xml.NewLineHandling.None> (leave unchanged)</span></span>|<span data-ttu-id="29020-137"><xref:System.Xml.NewLineHandling.Replace> (지정 된 문자로 바꿀 <xref:System.Xml.XmlWriterSettings.NewLineChars%2A>)</span><span class="sxs-lookup"><span data-stu-id="29020-137"><xref:System.Xml.NewLineHandling.Replace> (replace with characters specified by <xref:System.Xml.XmlWriterSettings.NewLineChars%2A>)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|<span data-ttu-id="29020-138">특성을 개별 줄에 쓸지 여부를 (이 없는 하면 적용 <xref:System.Xml.XmlWriterSettings.Indent%2A> 은 `false`).</span><span class="sxs-lookup"><span data-stu-id="29020-138">Whether to write attributes on individual lines (has no effect when <xref:System.Xml.XmlWriterSettings.Indent%2A> is `false`).</span></span>|<span data-ttu-id="29020-139">`true` 또는 `false`</span><span class="sxs-lookup"><span data-stu-id="29020-139">`true` or `false`</span></span>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|<span data-ttu-id="29020-140">XML 선언을 작성할 것인지 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-140">Whether to write an XML declaration.</span></span>|<span data-ttu-id="29020-141">`true` 또는 `false`</span><span class="sxs-lookup"><span data-stu-id="29020-141">`true` or `false`</span></span>|`false`|  
  
   
  
## Examples  
 <span data-ttu-id="29020-142">다음 예제에서는 <xref:System.Xml.XmlWriter> XML 파일에 기록 하 고 새 줄에 각 특성을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="29020-142">The following example creates an <xref:System.Xml.XmlWriter> that writes to an XML file and writes each attribute on a new line.</span></span>  
  
 [!code-csharp[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/CS/writenewlineattrs.cs#1)]
 [!code-vb[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/VB/writenewlineattrs.vb#1)]  
  
 <span data-ttu-id="29020-143">예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-143">The sample produces the following output:</span></span>  
  
```  
<order  
  orderID="367A54"  
  date="2001-05-03">  
  <price>19.95</price>  
</order>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriterSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterSettings();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="29020-144">
            <see cref="T:System.Xml.XmlWriterSettings" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-144">Initializes a new instance of the <see cref="T:System.Xml.XmlWriterSettings" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29020-145">다음 표에서의 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Xml.XmlWriterSettings>합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-145">The following table shows initial property values for an instance of <xref:System.Xml.XmlWriterSettings>.</span></span>  
  
|<span data-ttu-id="29020-146">속성</span><span class="sxs-lookup"><span data-stu-id="29020-146">Property</span></span>|<span data-ttu-id="29020-147">초기 값</span><span class="sxs-lookup"><span data-stu-id="29020-147">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Xml.XmlWriterSettings.Async%2A>|<span data-ttu-id="29020-148">`false`.</span><span class="sxs-lookup"><span data-stu-id="29020-148">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|<span data-ttu-id="29020-149">`true`.</span><span class="sxs-lookup"><span data-stu-id="29020-149">`true`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|<span data-ttu-id="29020-150">`false`.</span><span class="sxs-lookup"><span data-stu-id="29020-150">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<span data-ttu-id="29020-151"><xref:System.Xml.ConformanceLevel.Document>.</span><span class="sxs-lookup"><span data-stu-id="29020-151"><xref:System.Xml.ConformanceLevel.Document>.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<span data-ttu-id="29020-152">`Encoding.UTF8`.</span><span class="sxs-lookup"><span data-stu-id="29020-152">`Encoding.UTF8`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|<span data-ttu-id="29020-153">`false`.</span><span class="sxs-lookup"><span data-stu-id="29020-153">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="29020-154">공백 두 개입니다.</span><span class="sxs-lookup"><span data-stu-id="29020-154">Two spaces.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="29020-155">`\r\n` (캐리지 리턴, 줄 바꿈).</span><span class="sxs-lookup"><span data-stu-id="29020-155">`\r\n` (carriage return, new line).</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<span data-ttu-id="29020-156"><xref:System.Xml.NewLineHandling.Replace>.</span><span class="sxs-lookup"><span data-stu-id="29020-156"><xref:System.Xml.NewLineHandling.Replace>.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|<span data-ttu-id="29020-157">`false`.</span><span class="sxs-lookup"><span data-stu-id="29020-157">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|<span data-ttu-id="29020-158">`false`.</span><span class="sxs-lookup"><span data-stu-id="29020-158">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|<span data-ttu-id="29020-159">`true`.</span><span class="sxs-lookup"><span data-stu-id="29020-159">`true`.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="29020-160">다음 예제에서는 <xref:System.Xml.XmlWriter> 들여쓰기에 탭 문자를 사용 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="29020-160">The following example creates an <xref:System.Xml.XmlWriter> object that uses the TAB character for indentation.</span></span>  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Async">
      <MemberSignature Language="C#" Value="public bool Async { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Async" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.Async" />
      <MemberSignature Language="VB.NET" Value="Public Property Async As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Async { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29020-161">비동기 <see cref="T:System.Xml.XmlWriter" /> 메서드를 특정 <see cref="T:System.Xml.XmlWriter" /> 인스턴스에서 사용할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-161">Gets or sets a value that indicates whether asynchronous <see cref="T:System.Xml.XmlWriter" /> methods can be used on a particular <see cref="T:System.Xml.XmlWriter" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29020-162">비동기 메서드를 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-162">
              <see langword="true" /> if asynchronous methods can be used; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29020-163">이 값을 설정 해야 `true` 새 만들 때 <xref:System.Xml.XmlWriter> 하려는 경우 사용 하 여 비동기 인스턴스 <xref:System.Xml.XmlWriter> 해당 인스턴스에서 메서드.</span><span class="sxs-lookup"><span data-stu-id="29020-163">You must set this value to `true` when you create a new <xref:System.Xml.XmlWriter> instance if you want to use asynchronous <xref:System.Xml.XmlWriter> methods on that instance.</span></span> <span data-ttu-id="29020-164">이후에 <xref:System.Xml.XmlWriter> 인스턴스를 만들는 <xref:System.Xml.XmlWriterSettings.Async%2A> 속성은 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="29020-164">After the <xref:System.Xml.XmlWriter> instance is created, the <xref:System.Xml.XmlWriterSettings.Async%2A> property is read-only.</span></span> <span data-ttu-id="29020-165">이 속성의 기본값은 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="29020-165">The default value of this property is `false`.</span></span>  
  
 <span data-ttu-id="29020-166">이 플래그는 무시 됩니다는 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-166">This flag is ignored by the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> overload.</span></span> <span data-ttu-id="29020-167">하는 경우 새 <xref:System.Xml.XmlWriter> 기존 기반 <xref:System.Xml.XmlWriter>, 비동기 동작은 입력에 따라 <xref:System.Xml.XmlWriter>, 사용할 수 없는 <xref:System.Xml.XmlWriterSettings.Async%2A> 비동기 동작을 변경 하는 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="29020-167">This means that if you create a new <xref:System.Xml.XmlWriter> based on an existing <xref:System.Xml.XmlWriter>, the async behavior depends on the input <xref:System.Xml.XmlWriter>, and you cannot use the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to change the async behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckCharacters">
      <MemberSignature Language="C#" Value="public bool CheckCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.CheckCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckCharacters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckCharacters { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29020-168">XML 작성기가 문서의 모든 문자가 W3C [XML 1.0 권장 사항](http://www.w3.org/TR/REC-xml/#charsets)의 "2.2 문자" 섹션을 따르는지 확인해야 하는지 표시하는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-168">Gets or sets a value that indicates whether the XML writer should check to ensure that all characters in the document conform to the "2.2 Characters" section of the W3C [XML 1.0 Recommendation](http://www.w3.org/TR/REC-xml/#charsets).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29020-169">문자를 검사하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-169">
              <see langword="true" /> to do character checking; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="29020-170">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-170">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29020-171">경우는 <xref:System.Xml.XmlWriter> 개체가 지원 문자 검사, 문자가 올바른 XML 문자는 W3C의 "2.2 문자" 섹션에서 지정의 범위 밖에 있으면 예외를 throw [XML 1.0 권장 사항](http://www.w3.org/TR/REC-xml/#charsets)합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-171">If the <xref:System.Xml.XmlWriter> object supports character checking, it throws an exception if any characters are outside the range of legal XML characters specified by the "2.2 Characters" section of the W3C [XML 1.0 Recommendation](http://www.w3.org/TR/REC-xml/#charsets).</span></span>  
  
 <span data-ttu-id="29020-172">문자 검사 XML 이름에 잘못 된 문자에 대 한 검사 또는 모든 XML 이름이 유효한 지 검사 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="29020-172">Character checking does not include checking for illegal characters in XML names or checking that all XML names are valid.</span></span> <span data-ttu-id="29020-173">이러한 검사 규칙 검사의 일부 이며 항상 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-173">These checks are part of conformance checking and are always performed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Xml.XmlWriterSettings Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlWriterSettings Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriterSettings.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As XmlWriterSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlWriterSettings ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriterSettings</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="29020-174">
            <see cref="T:System.Xml.XmlWriterSettings" /> 인스턴스의 복사본을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-174">Creates a copy of the <see cref="T:System.Xml.XmlWriterSettings" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29020-175">복제된 <see cref="T:System.Xml.XmlWriterSettings" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-175">The cloned <see cref="T:System.Xml.XmlWriterSettings" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29020-176">복제 된 <xref:System.Xml.XmlWriterSettings> 원래 개체의 설정에 영향을 주지 않고 개체를 수정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="29020-176">The cloned <xref:System.Xml.XmlWriterSettings> object can be modified without affecting the settings on the original object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseOutput">
      <MemberSignature Language="C#" Value="public bool CloseOutput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CloseOutput" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.CloseOutput" />
      <MemberSignature Language="VB.NET" Value="Public Property CloseOutput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CloseOutput { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29020-177">
            <see cref="T:System.Xml.XmlWriter" /> 메서드를 호출한 경우 <see cref="T:System.IO.TextWriter" />가 내부 스트림 또는 <see cref="M:System.Xml.XmlWriter.Close" />도 함께 닫을지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-177">Gets or sets a value indicating whether the <see cref="T:System.Xml.XmlWriter" /> should also close the underlying stream or <see cref="T:System.IO.TextWriter" /> when the <see cref="M:System.Xml.XmlWriter.Close" /> method is called.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29020-178">내부 스트림 또는 <see cref="T:System.IO.TextWriter" />를 함께 닫으려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-178">
              <see langword="true" /> to also close the underlying stream or <see cref="T:System.IO.TextWriter" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="29020-179">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-179">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29020-180">이 설정은 XML 스트림에 작성 한 다음 후 스트림의 끝에 추가 정보를 추가 하려는 경우 유용는 <xref:System.Xml.XmlWriter> 가 쓰기를 완료 합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-180">This setting is useful when you wish to write XML to a stream, and then add extra information to the end of the stream after the <xref:System.Xml.XmlWriter> has finished writing.</span></span>  
  
 <span data-ttu-id="29020-181">이 속성에만 적용 됩니다 <xref:System.Xml.XmlWriter> XML 출력 인스턴스 데이터를 문자열로 콘텐츠 또는 <xref:System.IO.TextWriter>, 그렇지 않으면이 설정은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-181">This property only applies to <xref:System.Xml.XmlWriter> instances that output XML content to a stream or <xref:System.IO.TextWriter>; otherwise, this setting is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29020-182">다음 예제에서는 XML 조각을 메모리 스트림을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="29020-182">The following example writes an XML fragment to a memory stream.</span></span>  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConformanceLevel">
      <MemberSignature Language="C#" Value="public System.Xml.ConformanceLevel ConformanceLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ConformanceLevel ConformanceLevel" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.ConformanceLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ConformanceLevel As ConformanceLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::ConformanceLevel ConformanceLevel { System::Xml::ConformanceLevel get(); void set(System::Xml::ConformanceLevel value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.ConformanceLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29020-183">XML 작성기가 XML 출력을 확인하는 규칙 수준을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-183">Gets or sets the level of conformance that the XML writer checks the XML output for.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29020-184">규칙 수준(문서, 조각 또는 자동 검색)을 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-184">One of the enumeration values that specifies the level of conformance (document, fragment, or automatic detection).</span>
          </span>
          <span data-ttu-id="29020-185">기본값은 <see cref="F:System.Xml.ConformanceLevel.Document" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-185">The default is <see cref="F:System.Xml.ConformanceLevel.Document" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29020-186"><xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=nameWithType> 속성을 확인 하 고 쓰는 스트림을 특정 규칙 집합을 준수 하는지 보장할 XML 작성기를 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-186">The <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=nameWithType> property configures the XML writer to check and guarantee that the stream being written complies with a certain set of rules.</span></span> <span data-ttu-id="29020-187">XML 데이터는 올바른 형식의 XML 1.0 문서 또는 문서 조각에 대 한 규칙을 따르는지를 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="29020-187">The XML data can be checked to see that it conforms to the rules for a well-formed XML 1.0 document or a document fragment.</span></span> <span data-ttu-id="29020-188">다음 표에 세 가지 설정이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="29020-188">The following table describes the three settings.</span></span> <span data-ttu-id="29020-189">기본값은 문서 수준 규칙.</span><span class="sxs-lookup"><span data-stu-id="29020-189">The default is document-level conformance.</span></span>  
  
|<span data-ttu-id="29020-190">설정</span><span class="sxs-lookup"><span data-stu-id="29020-190">Setting</span></span>|<span data-ttu-id="29020-191">설명</span><span class="sxs-lookup"><span data-stu-id="29020-191">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.Xml.ConformanceLevel.Document>|<span data-ttu-id="29020-192">XML 출력 일치 하는지를 확인 하 고 [올바른 형식의 XML 1.0 문서에 대 한 규칙](http://www.w3.org/TR/REC-xml/#sec-well-formed) 표준에 맞는 프로세서에서 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="29020-192">Ensures that the XML output conforms to the [rules for a well-formed XML 1.0 document](http://www.w3.org/TR/REC-xml/#sec-well-formed) and can be processed by any conforming processor.</span></span><br /><br /> <span data-ttu-id="29020-193">대부분의 조각 수준 검사를 포함 하 고 또한 다음을 확인 하는 문서 규칙 검사.</span><span class="sxs-lookup"><span data-stu-id="29020-193">The document conformance checks include most of the fragment-level checks and also ensure the following:</span></span><br /><br /> <span data-ttu-id="29020-194">-최상위 항목에는 XML 선언, DTD, 요소, 주석, 공백 또는 처리 명령 이외의 다른 노드가 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="29020-194">-   The top-level item doesn't have any nodes other than XML Declaration, DTD, element, comment, white space, or processing instruction.</span></span><br /><span data-ttu-id="29020-195">-XML 데이터에 하나의 최상위 요소 노드가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="29020-195">-   The XML data has one and only one top-level element node.</span></span><br /><br /> <span data-ttu-id="29020-196">XML 작성기로 작성 된 DTD 정보 구문 분석 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="29020-196">The XML writer doesn't parse DTD information that is written.</span></span> <span data-ttu-id="29020-197">사용자가 DTD 형식이 올바른지 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-197">The user is responsible for ensuring that the DTD is well-formed.</span></span>|  
|<xref:System.Xml.ConformanceLevel.Fragment>|<span data-ttu-id="29020-198">XML 출력 일치 하는지를 확인 하 고 [올바른 형식의 XML 1.0 문서 조각에 대 한 규칙](http://www.w3.org/TR/REC-xml/#wf-entities)합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-198">Ensures that the XML output conforms to the [rules for a well-formed XML 1.0 document fragment](http://www.w3.org/TR/REC-xml/#wf-entities).</span></span><br /><br /> <span data-ttu-id="29020-199">이 설정은 최상위 수준에 여러 루트 요소 또는 텍스트 노드는 XML 데이터를 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-199">This setting accepts XML data that has multiple root elements or text nodes at the top level.</span></span> <span data-ttu-id="29020-200">이 검사 수준은 프로세서에서 구문 분석된 외부 XML 1.0 엔터티로 읽히는 스트림을 사용할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-200">This level of checking ensures that any processor can consume the stream being read as an XML 1.0 external parsed entity.</span></span><br /><br /> <span data-ttu-id="29020-201">DTD 정보는 문서 조각에 허용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="29020-201">DTD information isn't allowed in document fragments.</span></span>|  
|<xref:System.Xml.ConformanceLevel.Auto>|<span data-ttu-id="29020-202">지정 된 XML 작성기가 들어오는 데이터를 기반으로 규칙 검사의 수준을 결정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-202">Specifies that the XML writer should determine the level of conformance checking based on the incoming data.</span></span> <span data-ttu-id="29020-203">이 설정은 생성된 된 XML이 올바른 형식의 XML 문서 또는 조각 않을 것인지 여부를 알 수 없는 경우에 유용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="29020-203">This setting can be useful when you don't know whether the generated XML will be a well-formed XML document or a fragment.</span></span><br /><br /> <span data-ttu-id="29020-204">다음과 같은 경우 문서 규칙 검사가 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-204">Document conformance checking is applied in the following cases:</span></span><br /><br /> <span data-ttu-id="29020-205">If는 <xref:System.Xml.XmlWriter.WriteStartDocument%2A> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-205">-   If the <xref:System.Xml.XmlWriter.WriteStartDocument%2A> method is called.</span></span><br /><span data-ttu-id="29020-206">-경우 DTD 정보가 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-206">-   If DTD information is written.</span></span><br /><br /> <span data-ttu-id="29020-207">XML 데이터는 다음 중 하나 포함 되어 있는 경우 fragment 규칙 검사가 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-207">Fragment conformance checking is applied if the XML data contains one of these:</span></span><br /><br /> <span data-ttu-id="29020-208">루트 수준에서 텍스트, CDATA 또는 EntityReference 노드.</span><span class="sxs-lookup"><span data-stu-id="29020-208">-   Text, CDATA, or EntityReference node at the root level.</span></span><br /><span data-ttu-id="29020-209">-루트 수준에서 둘 이상의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="29020-209">-   More than one element at the root level.</span></span><br /><span data-ttu-id="29020-210">-루트 수준 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="29020-210">-   No element at the root level.</span></span><br /><br /> <span data-ttu-id="29020-211">루트 수준에 텍스트 노드와 DTD를 쓰려고 시도하는 경우와 같이 충돌이 있을 경우 <xref:System.Xml.XmlException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-211">An <xref:System.Xml.XmlException> is thrown if there is a conflict, such as when you try to write a text node and a DTD at the root level.</span></span><br /><br /> <span data-ttu-id="29020-212">다른 줄 바꿈 하는 경우 <xref:System.Xml.XmlWriter> 개체를 외부 개체에서 별도 규칙 검사를 수행 하지 않으면이 내부 개체에 남아 있습니다.</span><span class="sxs-lookup"><span data-stu-id="29020-212">If you are wrapping another <xref:System.Xml.XmlWriter> object, the outer object doesn't do any additional conformance checking; this is left to the underlying object.</span></span>|  
  
 <span data-ttu-id="29020-213">XML 작성기에서 지정된 된 수준의 규칙을 위반 하는 모든 정보를 감지 하면 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-213">If the XML writer detects any information that would violate the specified level of conformance, it throws an exception.</span></span> <span data-ttu-id="29020-214">경우에 따라 XML 작성기에서 규칙 오류를 자동으로 해결 합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-214">In some cases, the XML writer automatically corrects the conformance error.</span></span> <span data-ttu-id="29020-215">예를 들어 작성기는 예외를 throw 하지 않고 닫히지 않은 특성을 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="29020-215">For example, the writer closes an unclosed attribute without throwing an exception.</span></span> <span data-ttu-id="29020-216">다음 표에서 각 설정에서 처리 되는 다양 한 규칙 위반을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="29020-216">The following table shows how various conformance violations are handled in each setting.</span></span>  
  
|<span data-ttu-id="29020-217">조건</span><span class="sxs-lookup"><span data-stu-id="29020-217">Condition</span></span>|<xref:System.Xml.ConformanceLevel.Document>|<xref:System.Xml.ConformanceLevel.Fragment>|<xref:System.Xml.ConformanceLevel.Auto>|  
|---------------|---------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------|  
|<span data-ttu-id="29020-218">DTD 정보를 찾을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="29020-218">DTD information is found.</span></span>|<span data-ttu-id="29020-219">이 설정에 대 한 위반 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="29020-219">Not a violation for this setting.</span></span> <span data-ttu-id="29020-220">그러나 XML 작성기; DTD를 확인 하지 않습니다. 사용자는 DTD 형식이 올바른지 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-220">However, the XML writer doesn't check the DTD; the user must ensure that the DTD is well-formed.</span></span>|<span data-ttu-id="29020-221"><xref:System.Xml.XmlException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-221"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="29020-222">문서 규칙 검사가 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-222">Document conformance checking is applied.</span></span>|  
|<span data-ttu-id="29020-223"><xref:System.Xml.XmlWriter.WriteStartDocument%2A>가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="29020-223"><xref:System.Xml.XmlWriter.WriteStartDocument%2A> is called.</span></span>|<span data-ttu-id="29020-224">이 설정에 대 한 위반으로 간주 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="29020-224">Not considered a violation for this setting.</span></span>|<span data-ttu-id="29020-225"><xref:System.Xml.XmlException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-225"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="29020-226">문서 규칙 검사가 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-226">Document conformance checking is applied.</span></span>|  
|<span data-ttu-id="29020-227"><xref:System.Xml.XmlWriter.WriteStartDocument%2A>가 여러 번 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-227"><xref:System.Xml.XmlWriter.WriteStartDocument%2A> is called multiple times.</span></span>|<span data-ttu-id="29020-228"><xref:System.Xml.XmlException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-228"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="29020-229"><xref:System.Xml.XmlException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-229"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="29020-230"><xref:System.Xml.XmlException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-230"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="29020-231">텍스트 값 (요소 또는 특성 노드) 아래 하지 최상위 수준에 나타납니다.</span><span class="sxs-lookup"><span data-stu-id="29020-231">A text value appears at the top level (not below an element or attribute node).</span></span>|<span data-ttu-id="29020-232"><xref:System.Xml.XmlException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-232"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="29020-233">위반으로 간주 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="29020-233">Not considered a violation.</span></span>|<span data-ttu-id="29020-234">Fragment 규칙 검사가 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-234">Fragment conformance checking is applied.</span></span>|  
|<span data-ttu-id="29020-235">여러 요소 또는 요소가 없는 최상위 수준에 나타납니다.</span><span class="sxs-lookup"><span data-stu-id="29020-235">Multiple elements or no elements appear at the top level.</span></span>|<span data-ttu-id="29020-236"><xref:System.Xml.XmlException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-236"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="29020-237">위반으로 간주 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="29020-237">Not considered a violation.</span></span>|<span data-ttu-id="29020-238">Fragment 규칙 검사가 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-238">Fragment conformance checking is applied.</span></span>|  
|<span data-ttu-id="29020-239">최상위 항목은 공백입니다.</span><span class="sxs-lookup"><span data-stu-id="29020-239">Top-level item is white space.</span></span>|<span data-ttu-id="29020-240">위반으로 간주 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="29020-240">Not considered a violation.</span></span>|<span data-ttu-id="29020-241">위반으로 간주 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="29020-241">Not considered a violation.</span></span>|<span data-ttu-id="29020-242">위반으로 간주 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="29020-242">Not considered a violation.</span></span>|  
|<span data-ttu-id="29020-243"><xref:System.Xml.XmlWriter.WriteEndAttribute%2A> 특성 노드를 종료 하기 위해 호출 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="29020-243"><xref:System.Xml.XmlWriter.WriteEndAttribute%2A> isn't called to end an attribute node.</span></span>|<span data-ttu-id="29020-244">XML 작성기에 의해 수정 했습니다.</span><span class="sxs-lookup"><span data-stu-id="29020-244">Fixed by XML writer.</span></span>|<span data-ttu-id="29020-245">XML 작성기에 의해 수정 했습니다.</span><span class="sxs-lookup"><span data-stu-id="29020-245">Fixed by XML writer.</span></span>|<span data-ttu-id="29020-246">XML 작성기에 의해 수정 했습니다.</span><span class="sxs-lookup"><span data-stu-id="29020-246">Fixed by XML writer.</span></span>|  
|<span data-ttu-id="29020-247">XML 작성기 잘못 중첩 된 상태입니다 (예를 들어 한 <xref:System.Xml.XmlWriter.WriteStartElement%2A> 호출 뒤는 <xref:System.Xml.XmlWriter.WriteEndAttribute%2A>).</span><span class="sxs-lookup"><span data-stu-id="29020-247">The XML writer is in an improperly nested state (for example, a <xref:System.Xml.XmlWriter.WriteStartElement%2A> call is followed by a <xref:System.Xml.XmlWriter.WriteEndAttribute%2A>).</span></span>|<span data-ttu-id="29020-248"><xref:System.Xml.XmlException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-248"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="29020-249"><xref:System.Xml.XmlException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-249"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="29020-250"><xref:System.Xml.XmlException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-250"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="29020-251">최상위 항목에는 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="29020-251">Top-level item is an attribute.</span></span>|<span data-ttu-id="29020-252"><xref:System.Xml.XmlException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-252"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="29020-253"><xref:System.Xml.XmlException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-253"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="29020-254"><xref:System.Xml.XmlException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-254"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="29020-255">인접한 텍스트 노드가 여러 개 있을 경우</span><span class="sxs-lookup"><span data-stu-id="29020-255">Multiple, contiguous text nodes are found.</span></span>|<span data-ttu-id="29020-256">위반으로 간주 되지 않은 텍스트 노드를 연결 하려면 사용자의 책임입니다.</span><span class="sxs-lookup"><span data-stu-id="29020-256">Not considered a violation, but it's the responsibility of the user to concatenate the text nodes.</span></span>|<span data-ttu-id="29020-257">위반으로 간주 되지 않은 텍스트 노드를 연결 하려면 사용자의 책임입니다.</span><span class="sxs-lookup"><span data-stu-id="29020-257">Not considered a violation, but it's the responsibility of the user to concatenate the text nodes.</span></span>|<span data-ttu-id="29020-258">위반으로 간주 되지 않은 텍스트 노드를 연결 하려면 사용자의 책임입니다.</span><span class="sxs-lookup"><span data-stu-id="29020-258">Not considered a violation, but it's the responsibility of the user to concatenate the text nodes.</span></span>|  
|<span data-ttu-id="29020-259">한 요소에서 동일한 네임스페이스 접두사를 두 번 선언한 경우</span><span class="sxs-lookup"><span data-stu-id="29020-259">The same namespace prefix is declared twice in an element.</span></span>|<span data-ttu-id="29020-260">두 번째 네임 스페이스에 대 한 새 접두사를 생성 하는 XML 작성기입니다.</span><span class="sxs-lookup"><span data-stu-id="29020-260">The XML writer generates a new prefix for the second namespace.</span></span>|<span data-ttu-id="29020-261">두 번째 네임 스페이스에 대 한 새 접두사를 생성 하는 XML 작성기입니다.</span><span class="sxs-lookup"><span data-stu-id="29020-261">The XML writer generates a new prefix for the second namespace.</span></span>|<span data-ttu-id="29020-262">두 번째 네임 스페이스에 대 한 새 접두사를 생성 하는 XML 작성기입니다.</span><span class="sxs-lookup"><span data-stu-id="29020-262">The XML writer generates a new prefix for the second namespace.</span></span>|  
|<span data-ttu-id="29020-263"><xref:System.Xml.XmlWriter.WriteStartElement%2A> 접두사 및 해당 범위 내에서 선언 되지 네임 스페이스 지정 또는 접두사는 다른 네임 스페이스와 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-263"><xref:System.Xml.XmlWriter.WriteStartElement%2A> specifies a prefix and a namespace that isn't declared within that scope, or the prefix is associated with a different namespace.</span></span>|<span data-ttu-id="29020-264">XML 작성기는 필요한 네임 스페이스 노드를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="29020-264">The XML writer writes the necessary namespace node.</span></span>|<span data-ttu-id="29020-265">XML 작성기는 필요한 네임 스페이스 노드를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="29020-265">The XML writer writes the necessary namespace node.</span></span>|<span data-ttu-id="29020-266">XML 작성기는 필요한 네임 스페이스 노드를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="29020-266">The XML writer writes the necessary namespace node.</span></span>|  
|<span data-ttu-id="29020-267"><xref:System.Xml.XmlWriter.WriteStartAttribute%2A> 접두사와 해당 범위 내에서 선언 되지 하는 네임 스페이스를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-267"><xref:System.Xml.XmlWriter.WriteStartAttribute%2A> specifies a prefix and a namespace that isn't declared within that scope.</span></span>|<span data-ttu-id="29020-268">XML 작성기는 필요한 네임 스페이스 노드를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="29020-268">The XML writer writes the necessary namespace node.</span></span>|<span data-ttu-id="29020-269">XML 작성기는 필요한 네임 스페이스 노드를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="29020-269">The XML writer writes the necessary namespace node.</span></span>|<span data-ttu-id="29020-270">XML 작성기는 필요한 네임 스페이스 노드를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="29020-270">The XML writer writes the necessary namespace node.</span></span>|  
|<span data-ttu-id="29020-271"><xref:System.Xml.XmlWriter.WriteStartAttribute%2A> 접두사 및 네임 스페이스 하지만 접두사는 다른 범위에서 네임 스페이스와 연결 된 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-271"><xref:System.Xml.XmlWriter.WriteStartAttribute%2A> specifies a prefix and a namespace, but the prefix is associated with a different in-scope namespace.</span></span>|<span data-ttu-id="29020-272">XML 작성기는 지정 된 접두사를 무시 하 고 올바른 접두사를 조회 하거나 새 접두사를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-272">The XML writer ignores the specified prefix and either looks up the correct prefix or generates a new prefix.</span></span>|<span data-ttu-id="29020-273">XML 작성기는 지정 된 접두사를 무시 하 고 올바른 접두사를 조회 하거나 새 접두사를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-273">The XML writer ignores the specified prefix and either looks up the correct prefix or generates a new prefix.</span></span>|<span data-ttu-id="29020-274">XML 작성기는 지정 된 접두사를 무시 하 고 올바른 접두사를 조회 하거나 새 접두사를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-274">The XML writer ignores the specified prefix and either looks up the correct prefix or generates a new prefix.</span></span>|  
|<span data-ttu-id="29020-275"><xref:System.Xml.XmlWriter.WriteQualifiedName%2A> 범위 내에서 존재 하지 않는 네임 스페이스를 사용 하 여 요소 내용을 쓰는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-275"><xref:System.Xml.XmlWriter.WriteQualifiedName%2A> is used to write element content by using a namespace that doesn't exist within the scope.</span></span>|<span data-ttu-id="29020-276"><xref:System.Xml.XmlException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-276"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="29020-277"><xref:System.Xml.XmlException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-277"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="29020-278"><xref:System.Xml.XmlException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-278"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="29020-279"><xref:System.Xml.XmlWriter.WriteQualifiedName%2A> 범위 내에서 존재 하지 않는 네임 스페이스를 사용 하 여 특성 내용을 쓰는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-279"><xref:System.Xml.XmlWriter.WriteQualifiedName%2A> is used to write attribute content by using a namespace that doesn't exist within the scope.</span></span>|<span data-ttu-id="29020-280">XML 작성기에는 필요한 네임 스페이스 선언을 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-280">The XML writer writes the necessary namespace declaration.</span></span>|<span data-ttu-id="29020-281">XML 작성기에는 필요한 네임 스페이스 선언을 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-281">The XML writer writes the necessary namespace declaration.</span></span>|<span data-ttu-id="29020-282">XML 작성기에는 필요한 네임 스페이스 선언을 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-282">The XML writer writes the necessary namespace declaration.</span></span>|  
|<span data-ttu-id="29020-283">`xml:space` 특성에 유효한 값이 포함 되어 있지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="29020-283">The `xml:space` attribute doesn't contain a valid value.</span></span>|<span data-ttu-id="29020-284"><xref:System.Xml.XmlException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-284"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="29020-285"><xref:System.Xml.XmlException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-285"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="29020-286"><xref:System.Xml.XmlException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-286"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="29020-287">잘못된 이름이 발견된 경우</span><span class="sxs-lookup"><span data-stu-id="29020-287">An invalid name is encountered.</span></span>|<span data-ttu-id="29020-288"><xref:System.Xml.XmlException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-288"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="29020-289"><xref:System.Xml.XmlException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-289"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="29020-290"><xref:System.Xml.XmlException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-290"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="29020-291">`xml` URI 접두사 일치 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="29020-291">The `xml` prefix isn't matched to a URI.</span></span>|<span data-ttu-id="29020-292">XML 작성기는 이런이 종류의 위반에 대 한 검사 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="29020-292">The XML writer doesn't check for this type of violation.</span></span>|<span data-ttu-id="29020-293">XML 작성기는 이런이 종류의 위반에 대 한 검사 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="29020-293">The XML writer doesn't check for this type of violation.</span></span>|<span data-ttu-id="29020-294">XML 작성기는 이런이 종류의 위반에 대 한 검사 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="29020-294">The XML writer doesn't check for this type of violation.</span></span>|  
|<span data-ttu-id="29020-295">`xml` 접두사에 맞지는 http://www.w3.org/XML/1998/namespace URI입니다.</span><span class="sxs-lookup"><span data-stu-id="29020-295">The `xml` prefix isn't matched to the http://www.w3.org/XML/1998/namespace URI.</span></span>|<span data-ttu-id="29020-296"><xref:System.Xml.XmlException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-296"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="29020-297"><xref:System.Xml.XmlException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-297"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="29020-298"><xref:System.Xml.XmlException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-298"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="29020-299">`xmlns` 접두사 또는 로컬 이름 URI와 일치 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="29020-299">The `xmlns` prefix or local name isn't matched to a URI.</span></span>|<span data-ttu-id="29020-300">XML 작성기는 이런이 종류의 위반에 대 한 검사 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="29020-300">The XML writer doesn't check for this type of violation.</span></span>|<span data-ttu-id="29020-301">XML 작성기는 이런이 종류의 위반에 대 한 검사 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="29020-301">The XML writer doesn't check for this type of violation.</span></span>|<span data-ttu-id="29020-302">XML 작성기는 이런이 종류의 위반에 대 한 검사 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="29020-302">The XML writer doesn't check for this type of violation.</span></span>|  
|<span data-ttu-id="29020-303">`xmlns` 접두사 또는 로컬 이름에 맞지는 http://www.w3.org/2000/xmlns URI입니다.</span><span class="sxs-lookup"><span data-stu-id="29020-303">The `xmlns` prefix or local name isn't matched to the http://www.w3.org/2000/xmlns URI.</span></span>|<span data-ttu-id="29020-304"><xref:System.Xml.XmlException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-304"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="29020-305"><xref:System.Xml.XmlException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-305"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="29020-306"><xref:System.Xml.XmlException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-306"><xref:System.Xml.XmlException> is thrown.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="29020-307">다음 예제에서는 XML 조각을 메모리 스트림을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="29020-307">The following example writes an XML fragment to a memory stream.</span></span>  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoNotEscapeUriAttributes">
      <MemberSignature Language="C#" Value="public bool DoNotEscapeUriAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoNotEscapeUriAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.DoNotEscapeUriAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property DoNotEscapeUriAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DoNotEscapeUriAttributes { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29020-308">
            <see cref="T:System.Xml.XmlWriter" />에서 URI 특성을 이스케이프하는 않는지를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-308">Gets or sets a value that indicates whether the <see cref="T:System.Xml.XmlWriter" /> does not escape URI attributes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29020-309">
            <see langword="true" /> 경우는 <see cref="T:System.Xml.XmlWriter" /> URI 특성을 이스케이프 하지 않습니다, 그렇지 않으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-309">
              <see langword="true" /> if the <see cref="T:System.Xml.XmlWriter" /> does not escape URI attributes; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="29020-310">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-310">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29020-311">사용할 텍스트 인코딩의 형식을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-311">Gets or sets the type of text encoding to use.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29020-312">사용할 텍스트 인코딩입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-312">The text encoding to use.</span>
          </span>
          <span data-ttu-id="29020-313">기본값은 <see langword="Encoding.UTF8" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-313">The default is <see langword="Encoding.UTF8" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29020-314"><xref:System.Xml.XmlWriter> 한 번에 모든 것이 아니라 문자 버퍼의 문자를 인코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-314">The <xref:System.Xml.XmlWriter> encodes a buffer of characters all at once, rather than character by character.</span></span> <span data-ttu-id="29020-315">동안 예외가 throw 되는 <xref:System.Xml.XmlWriter.Flush%2A> 인코딩 오류가 발생 하는 경우 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-315">An exception is thrown when the <xref:System.Xml.XmlWriter.Flush%2A> method is called if any encoding errors are encountered.</span></span>  
  
 <span data-ttu-id="29020-316"><xref:System.Xml.XmlWriterSettings.Encoding%2A> 속성에만 적용 됩니다는 <xref:System.Xml.XmlWriter> 지정 된 생성 된 인스턴스 <xref:System.IO.Stream> 또는 지정 된 파일 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="29020-316">The <xref:System.Xml.XmlWriterSettings.Encoding%2A> property only applies to the <xref:System.Xml.XmlWriter> instances that are created either with the specified <xref:System.IO.Stream> or with the specified file name.</span></span> <span data-ttu-id="29020-317">경우는 <xref:System.Xml.XmlWriter> 인스턴스가 만들어질 지정 된 <xref:System.IO.TextWriter>, <xref:System.Xml.XmlWriterSettings.Encoding%2A> 속성은 내부의 인코딩을 재정의 <xref:System.IO.TextWriter>합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-317">If the <xref:System.Xml.XmlWriter> instance is created with the specified <xref:System.IO.TextWriter>, the <xref:System.Xml.XmlWriterSettings.Encoding%2A> property is overridden by the encoding of the underlying <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="29020-318">예를 들어,이 속성은 특정 작업에 대해 유니코드 (utf-16)로 설정 하는 경우 <xref:System.Xml.XmlWriter>, 하지만 기본 기록기는는 <xref:System.IO.StreamWriter> (에서 파생 되는 <xref:System.IO.TextWriter>) 출력은 u t F-8로 인코딩된 해당 인코딩을 u t f 8로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-318">For example, if this property is set to Unicode (UTF-16) for a particular <xref:System.Xml.XmlWriter>, but the underlying writer is a <xref:System.IO.StreamWriter> (which derives from <xref:System.IO.TextWriter>) with its encoding set to UTF8, the output will be UTF-8 encoded.</span></span>  
  
 <span data-ttu-id="29020-319">경우는 <xref:System.Xml.XmlWriter> 다른 출력 매개 변수를 사용 인스턴스를 만듭니다는 <xref:System.Xml.XmlWriterSettings.Encoding%2A> 속성은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-319">If the <xref:System.Xml.XmlWriter> instance is created with other output parameters, the <xref:System.Xml.XmlWriterSettings.Encoding%2A> property is ignored.</span></span>  
  
 <span data-ttu-id="29020-320">다음 예제에서는</span><span class="sxs-lookup"><span data-stu-id="29020-320">In the following example:</span></span>  
  
-   <span data-ttu-id="29020-321"><xref:System.Xml.XmlWriterSettings.Encoding%2A>의 기본값은 `Encoding.UTF8`입니다.</span><span class="sxs-lookup"><span data-stu-id="29020-321">The default value of <xref:System.Xml.XmlWriterSettings.Encoding%2A> is `Encoding.UTF8`.</span></span>  
  
-   <span data-ttu-id="29020-322"><xref:System.IO.StreamWriter> 로 설정 된 `Encoding.Unicode` 및 <xref:System.IO.StreamWriter>의 인코딩을 재정의 <xref:System.Xml.XmlWriterSettings.Encoding%2A> 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-322">The <xref:System.IO.StreamWriter> is set to `Encoding.Unicode` and the <xref:System.IO.StreamWriter>’s encoding overrides the <xref:System.Xml.XmlWriterSettings.Encoding%2A> setting.</span></span>  
  
-   <span data-ttu-id="29020-323">출력 됩니다 `Encoding.Unicode`합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-323">The output will be `Encoding.Unicode`.</span></span>  
  
```csharp  
using (StreamWriter output =  
    new StreamWriter(new FileStream("Xml01.xml", FileMode.Create), Encoding.Unicode))  
{  
    using (XmlWriter xmlWriter =  
        XmlWriter.Create(output, new XmlWriterSettings()))  
    {  
        xmlWriter.WriteStartDocument();  
        xmlWriter.WriteStartElement("Root");  
        xmlWriter.WriteEndElement();  
        xmlWriter.WriteEndDocument();  
    }  
}  
```  
  
> [!IMPORTANT]
>  <span data-ttu-id="29020-324">동의 하지 않는 한 <xref:System.Text.Encoding> 신뢰할 수 없는 소스에서 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="29020-324">Do not accept an <xref:System.Text.Encoding> object from an untrusted source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29020-325">다음 예제에서는 XML 조각을 메모리 스트림을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="29020-325">The following example writes an XML fragment to a memory stream.</span></span>  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public bool Indent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Indent" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Property Indent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Indent { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29020-326">요소의 들여쓰기 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-326">Gets or sets a value indicating whether to indent elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29020-327">새 줄에 개별 요소를 들여 쓰면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-327">
              <see langword="true" /> to write individual elements on new lines and indent; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="29020-328">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-328">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29020-329">이 속성에만 적용 됩니다 <xref:System.Xml.XmlWriter> 인스턴스 텍스트 콘텐츠를 출력 하는, 그렇지 않으면이 설정은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-329">This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.</span></span>  
  
 <span data-ttu-id="29020-330">요소는 요소에는 혼합 된 내용으로 들여쓰기 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-330">The elements are indented as long as the element does not contain mixed content.</span></span> <span data-ttu-id="29020-331">한 번의 <xref:System.Xml.XmlWriter.WriteString%2A> 또는 <xref:System.Xml.XmlWriter.WriteWhitespace%2A> 메서드는 혼합된 요소 콘텐츠를 작성 하는 <xref:System.Xml.XmlWriter> 들여쓰기를 중지 합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-331">Once the <xref:System.Xml.XmlWriter.WriteString%2A> or <xref:System.Xml.XmlWriter.WriteWhitespace%2A> method is called to write out a mixed element content, the <xref:System.Xml.XmlWriter> stops indenting.</span></span> <span data-ttu-id="29020-332">혼합된 콘텐츠 요소 닫히면 들여쓰기는 다시 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-332">The indenting resumes once the mixed content element is closed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29020-333">다음 예제에서는 <xref:System.Xml.XmlWriter> 들여쓰기에 탭 문자를 사용 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="29020-333">The following example creates an <xref:System.Xml.XmlWriter> object that uses the TAB character for indentation.</span></span>  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndentChars">
      <MemberSignature Language="C#" Value="public string IndentChars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IndentChars" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.IndentChars" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentChars As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IndentChars { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29020-334">들여쓰기에 사용할 문자열을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-334">Gets or sets the character string to use when indenting.</span>
          </span>
          <span data-ttu-id="29020-335">이 설정은 <see cref="P:System.Xml.XmlWriterSettings.Indent" /> 속성이 <see langword="true" />로 설정된 경우에 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-335">This setting is used when the <see cref="P:System.Xml.XmlWriterSettings.Indent" /> property is set to <see langword="true" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29020-336">들여쓰기에 사용할 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-336">The character string to use when indenting.</span>
          </span>
          <span data-ttu-id="29020-337">이 속성에 설정할 수 있는 문자열 값에는 제한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-337">This can be set to any string value.</span>
          </span>
          <span data-ttu-id="29020-338">그러나 XML을 올바르게 유지하려면 공백 문자, 탭, 캐리지 리턴 또는 줄 바꿈 같은 유효한 공백 문자만 지정해야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-338">However, to ensure valid XML, you should specify only valid white space characters, such as space characters, tabs, carriage returns, or line feeds.</span>
          </span>
          <span data-ttu-id="29020-339">기본값은 공백 두 개입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-339">The default is two spaces.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29020-340">이 속성에만 적용 됩니다 <xref:System.Xml.XmlWriter> 인스턴스 텍스트 콘텐츠를 출력 하는, 그렇지 않으면이 설정은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-340">This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.</span></span> <span data-ttu-id="29020-341"><xref:System.Xml.XmlWriter> 들여쓰기 문자로 인해 XML이 잘못 된 경우 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-341">The <xref:System.Xml.XmlWriter> throws an exception if the indent characters would result in invalid XML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29020-342">다음 예제에서는 <xref:System.Xml.XmlWriter> 들여쓰기에 탭 문자를 사용 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="29020-342">The following example creates an <xref:System.Xml.XmlWriter> object that uses the TAB character for indentation.</span></span>  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="29020-343">
            <see cref="P:System.Xml.XmlWriterSettings.IndentChars" />에 할당된 값이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-343">The value assigned to the <see cref="P:System.Xml.XmlWriterSettings.IndentChars" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NamespaceHandling">
      <MemberSignature Language="C#" Value="public System.Xml.NamespaceHandling NamespaceHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.NamespaceHandling NamespaceHandling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NamespaceHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property NamespaceHandling As NamespaceHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::NamespaceHandling NamespaceHandling { System::Xml::NamespaceHandling get(); void set(System::Xml::NamespaceHandling value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.NamespaceHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29020-344">XML 콘텐츠를 쓸 때 <see cref="T:System.Xml.XmlWriter" />에서 중복된 네임스페이스 선언을 제거할지 여부를 표시하는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-344">Gets or sets a value that indicates whether the <see cref="T:System.Xml.XmlWriter" /> should remove duplicate namespace declarations when writing XML content.</span>
          </span>
          <span data-ttu-id="29020-345">기본 동작은 작성기에서 작성기의 네임스페이스 확인자에 있는 모든 네임스페이스 선언을 출력하는 것입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-345">The default behavior is for the writer to output all namespace declarations that are present in the writer's namespace resolver.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29020-346">
            <see cref="T:System.Xml.NamespaceHandling" />에서 중복된 네임스페이스 선언을 제거할지 여부를 지정하는 데 사용되는 <see cref="T:System.Xml.XmlWriter" /> 열거형입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-346">The <see cref="T:System.Xml.NamespaceHandling" /> enumeration used to specify whether to remove duplicate namespace declarations in the <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewLineChars">
      <MemberSignature Language="C#" Value="public string NewLineChars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewLineChars" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NewLineChars" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLineChars As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NewLineChars { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29020-347">줄 바꿈에 사용할 문자열을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-347">Gets or sets the character string to use for line breaks.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29020-348">줄 바꿈에 사용할 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-348">The character string to use for line breaks.</span>
          </span>
          <span data-ttu-id="29020-349">이 속성에 설정할 수 있는 문자열 값에는 제한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-349">This can be set to any string value.</span>
          </span>
          <span data-ttu-id="29020-350">그러나 XML을 올바르게 유지하려면 공백 문자, 탭, 캐리지 리턴 또는 줄 바꿈 같은 유효한 공백 문자만 지정해야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-350">However, to ensure valid XML, you should specify only valid white space characters, such as space characters, tabs, carriage returns, or line feeds.</span>
          </span>
          <span data-ttu-id="29020-351">기본값은 <c>\r\n</c> (캐리지 리턴, 줄 바꿈).</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-351">The default is <c>\r\n</c> (carriage return, new line).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29020-352">이 속성에만 적용 됩니다 <xref:System.Xml.XmlWriter> 인스턴스 텍스트 콘텐츠를 출력 하는, 그렇지 않으면이 설정은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-352">This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.</span></span> <span data-ttu-id="29020-353"><xref:System.Xml.XmlWriter> 줄 바꿈 문자로 인해 XML이 잘못 된 경우 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-353">The <xref:System.Xml.XmlWriter> throws an exception if the line break characters would result in invalid XML.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="29020-354">
            <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" />에 할당된 값이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-354">The value assigned to the <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NewLineHandling">
      <MemberSignature Language="C#" Value="public System.Xml.NewLineHandling NewLineHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.NewLineHandling NewLineHandling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NewLineHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLineHandling As NewLineHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::NewLineHandling NewLineHandling { System::Xml::NewLineHandling get(); void set(System::Xml::NewLineHandling value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.NewLineHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29020-355">줄 바꿈을 출력에 정규화할지를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-355">Gets or sets a value indicating whether to normalize line breaks in the output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29020-356">
            <see cref="T:System.Xml.NewLineHandling" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-356">One of the <see cref="T:System.Xml.NewLineHandling" /> values.</span>
          </span>
          <span data-ttu-id="29020-357">기본값은 <see cref="F:System.Xml.NewLineHandling.Replace" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-357">The default is <see cref="F:System.Xml.NewLineHandling.Replace" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29020-358">이 설정은 텍스트 콘텐츠 또는 특성 값을 쓸 때 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-358">This setting applies when writing text content or attribute values.</span></span> <span data-ttu-id="29020-359">각각의 <xref:System.Xml.NewLineHandling> 값은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="29020-359">Each of the <xref:System.Xml.NewLineHandling> values is described below:</span></span>  
  
-   <span data-ttu-id="29020-360"><xref:System.Xml.NewLineHandling.Entitize> 설정을 <xref:System.Xml.XmlWriter> 는 유지 하지는 정규화 하 여 새 줄 문자를 바꿀 <xref:System.Xml.XmlReader> 문자 엔터티로 합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-360">The <xref:System.Xml.NewLineHandling.Entitize> setting tells the <xref:System.Xml.XmlWriter> to replace new line characters that would not be otherwise preserved by a normalizing <xref:System.Xml.XmlReader> with character entities.</span></span> <span data-ttu-id="29020-361">이를 정규화 하 여 출력을 읽어야 하는 라운드트립 시나리오에 유용한 <xref:System.Xml.XmlReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-361">This is useful in round-trip scenarios where the output is read by a normalizing <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="29020-362">추가적인 정규화 규칙이 특성 값에 대 한 이후 tripping 라운드 적용 `\t`, `\n` 및 `\r` 특성 값에 공백이 있는 대체는 <xref:System.Xml.XmlReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-362">Additional normalization rules apply for attribute values when round tripping since `\t`, `\n` and `\r` are replaced with a space in attribute values when normalized in an <xref:System.Xml.XmlReader>.</span></span>  
  
-   <span data-ttu-id="29020-363"><xref:System.Xml.NewLineHandling.Replace> 설정을 <xref:System.Xml.XmlWriter> 를 새 줄 문자를 바꿀 `\r\n`, Microsoft Windows 운영 체제에서 사용 하는 새 줄 형식을 합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-363">The <xref:System.Xml.NewLineHandling.Replace> setting tells the <xref:System.Xml.XmlWriter> to replace new line characters with `\r\n`, which is the new line format used by the Microsoft Windows operating system.</span></span> <span data-ttu-id="29020-364">이렇게 하면 파일이 메모장 또는 Microsoft Word 응용 프로그램에서 올바르게 표시 수를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-364">This helps to ensure that the file can be correctly displayed by the Notepad or Microsoft Word applications.</span></span> <span data-ttu-id="29020-365">이 설정은 특성에 새 줄을 문자를 유지 하기 위해 문자 엔터티로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="29020-365">This setting also replaces new lines in attributes with character entities to preserve the characters.</span></span> <span data-ttu-id="29020-366">기본값입니다.</span><span class="sxs-lookup"><span data-stu-id="29020-366">This is the default value.</span></span>  
  
-   <span data-ttu-id="29020-367"><xref:System.Xml.NewLineHandling.None> 설정을 <xref:System.Xml.XmlWriter> 를 변경 하지 않고 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-367">The <xref:System.Xml.NewLineHandling.None> setting tells the <xref:System.Xml.XmlWriter> to leave the input unchanged.</span></span> <span data-ttu-id="29020-368">이 설정은 새 줄 처리 하지 않으려는 경우 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-368">This setting is used when you not want any new-line processing.</span></span> <span data-ttu-id="29020-369">출력을 읽을 때 유용는 <xref:System.Xml.XmlReader> 정규화를 수행 하지 않습니다 (예를 들어 한 <xref:System.Xml.XmlTextReader> 기본 설정을 사용 하 여.)</span><span class="sxs-lookup"><span data-stu-id="29020-369">This is useful when the output is read by an <xref:System.Xml.XmlReader> that does not do any normalization (for example, an <xref:System.Xml.XmlTextReader> with default settings.)</span></span>  
  
 <span data-ttu-id="29020-370">다음 표에서 출력을 보여는 <xref:System.Xml.XmlWriter.WriteString%2A> 메서드는 입력 값에 따라 제공 되는 <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-370">The following tables show the output of the <xref:System.Xml.XmlWriter.WriteString%2A> method when supplied with the input value depending on the <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> property setting.</span></span> <span data-ttu-id="29020-371">표에서 텍스트 콘텐츠를 쓸 때 출력을 보여 주며 특성 값을 쓸 때.</span><span class="sxs-lookup"><span data-stu-id="29020-371">The tables show the output when writing text content and also when writing an attribute value.</span></span>  
  
 `Text Node Value:`  
  
||<span data-ttu-id="29020-372">\r\n</span><span class="sxs-lookup"><span data-stu-id="29020-372">\r\n</span></span>|<span data-ttu-id="29020-373">\n</span><span class="sxs-lookup"><span data-stu-id="29020-373">\n</span></span>|<span data-ttu-id="29020-374">\r</span><span class="sxs-lookup"><span data-stu-id="29020-374">\r</span></span>|<span data-ttu-id="29020-375">\t</span><span class="sxs-lookup"><span data-stu-id="29020-375">\t</span></span>|  
|-|------------|---------|---------|---------|  
|<span data-ttu-id="29020-376">아닌</span><span class="sxs-lookup"><span data-stu-id="29020-376">Entitize</span></span>|<span data-ttu-id="29020-377">& #D; \n</span><span class="sxs-lookup"><span data-stu-id="29020-377">&#D;\n</span></span>|<span data-ttu-id="29020-378">\n</span><span class="sxs-lookup"><span data-stu-id="29020-378">\n</span></span>|<span data-ttu-id="29020-379">&#D;</span><span class="sxs-lookup"><span data-stu-id="29020-379">&#D;</span></span>|<span data-ttu-id="29020-380">\t</span><span class="sxs-lookup"><span data-stu-id="29020-380">\t</span></span>|  
|<span data-ttu-id="29020-381">바꾸기</span><span class="sxs-lookup"><span data-stu-id="29020-381">Replace</span></span>|<span data-ttu-id="29020-382">\r\n</span><span class="sxs-lookup"><span data-stu-id="29020-382">\r\n</span></span>|<span data-ttu-id="29020-383">\r\n</span><span class="sxs-lookup"><span data-stu-id="29020-383">\r\n</span></span>|<span data-ttu-id="29020-384">\r\n</span><span class="sxs-lookup"><span data-stu-id="29020-384">\r\n</span></span>|<span data-ttu-id="29020-385">\t</span><span class="sxs-lookup"><span data-stu-id="29020-385">\t</span></span>|  
|<span data-ttu-id="29020-386">없음</span><span class="sxs-lookup"><span data-stu-id="29020-386">None</span></span>|<span data-ttu-id="29020-387">\r\n</span><span class="sxs-lookup"><span data-stu-id="29020-387">\r\n</span></span>|<span data-ttu-id="29020-388">\n</span><span class="sxs-lookup"><span data-stu-id="29020-388">\n</span></span>|<span data-ttu-id="29020-389">\r</span><span class="sxs-lookup"><span data-stu-id="29020-389">\r</span></span>|<span data-ttu-id="29020-390">\t</span><span class="sxs-lookup"><span data-stu-id="29020-390">\t</span></span>|  
  
 `Attribute Value:`  
  
||<span data-ttu-id="29020-391">\r\n</span><span class="sxs-lookup"><span data-stu-id="29020-391">\r\n</span></span>|<span data-ttu-id="29020-392">\n</span><span class="sxs-lookup"><span data-stu-id="29020-392">\n</span></span>|<span data-ttu-id="29020-393">\r</span><span class="sxs-lookup"><span data-stu-id="29020-393">\r</span></span>|<span data-ttu-id="29020-394">\t</span><span class="sxs-lookup"><span data-stu-id="29020-394">\t</span></span>|  
|-|------------|---------|---------|---------|  
|<span data-ttu-id="29020-395">아닌</span><span class="sxs-lookup"><span data-stu-id="29020-395">Entitize</span></span>|<span data-ttu-id="29020-396">&#D;&#A;</span><span class="sxs-lookup"><span data-stu-id="29020-396">&#D;&#A;</span></span>|<span data-ttu-id="29020-397">&#A;</span><span class="sxs-lookup"><span data-stu-id="29020-397">&#A;</span></span>|<span data-ttu-id="29020-398">&#D;</span><span class="sxs-lookup"><span data-stu-id="29020-398">&#D;</span></span>|<span data-ttu-id="29020-399">&\#9;</span><span class="sxs-lookup"><span data-stu-id="29020-399">&\#9;</span></span>|  
|<span data-ttu-id="29020-400">바꾸기</span><span class="sxs-lookup"><span data-stu-id="29020-400">Replace</span></span>|<span data-ttu-id="29020-401">&#D;&#A;</span><span class="sxs-lookup"><span data-stu-id="29020-401">&#D;&#A;</span></span>|<span data-ttu-id="29020-402">&#A;</span><span class="sxs-lookup"><span data-stu-id="29020-402">&#A;</span></span>|<span data-ttu-id="29020-403">&#D;</span><span class="sxs-lookup"><span data-stu-id="29020-403">&#D;</span></span>|<span data-ttu-id="29020-404">&\#9;</span><span class="sxs-lookup"><span data-stu-id="29020-404">&\#9;</span></span>|  
|<span data-ttu-id="29020-405">없음</span><span class="sxs-lookup"><span data-stu-id="29020-405">None</span></span>|<span data-ttu-id="29020-406">\r\n</span><span class="sxs-lookup"><span data-stu-id="29020-406">\r\n</span></span>|<span data-ttu-id="29020-407">\n</span><span class="sxs-lookup"><span data-stu-id="29020-407">\n</span></span>|<span data-ttu-id="29020-408">\r</span><span class="sxs-lookup"><span data-stu-id="29020-408">\r</span></span>|<span data-ttu-id="29020-409">\t</span><span class="sxs-lookup"><span data-stu-id="29020-409">\t</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="29020-410"><xref:System.Xml.XmlWriter> CDATA 섹션, 주석 또는 처리 명령 콘텐츠를 쓸 때 동작은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="29020-410">The <xref:System.Xml.XmlWriter> has the following behavior when writing content within a CDATA section, comment, or processing instruction.</span></span> <span data-ttu-id="29020-411">새 줄의 문자 엔터티를 바꾸지 않습니다 경우에는 <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> 속성이 <xref:System.Xml.NewLineHandling.Entitize>합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-411">New lines are never replaced with their character entities, even when the <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> property is set to <xref:System.Xml.NewLineHandling.Entitize>.</span></span> <span data-ttu-id="29020-412">즉, 문자 엔터티는 CDATA 섹션, 주석 또는 처리 명령에서 인식 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="29020-412">This is because character entities are not recognized in CDATA sections, comments or processing instructions.</span></span> <span data-ttu-id="29020-413">경우는 <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> 속성이 <xref:System.Xml.NewLineHandling.None> 또는 <xref:System.Xml.NewLineHandling.Replace>, 동작은 텍스트 노드 값을 작성할 때와 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-413">If the <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> property is set to <xref:System.Xml.NewLineHandling.None> or <xref:System.Xml.NewLineHandling.Replace>, the behavior is the same as when writing a text node value.</span></span>  
  
 <span data-ttu-id="29020-414">다음 표에서 설명 정규화 <xref:System.Xml.XmlReader> 공백 각 입력에 대해를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-414">The following table describes what a normalizing <xref:System.Xml.XmlReader> returns for each white space input.</span></span> <span data-ttu-id="29020-415">자세한 내용은 2.11 및 3.3.3 W3C의 섹션을 참조 하십시오. [XML 1.0 권장 사항](http://www.w3.org/TR/REC-xml/)합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-415">For more information, see sections 2.11 and 3.3.3 of the W3C [XML 1.0 Recommendation](http://www.w3.org/TR/REC-xml/).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="29020-416">정규화 판독기는 임의의 <xref:System.Xml.XmlReader> 하 여 만든 개체는 <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="29020-416">A normalizing reader is any <xref:System.Xml.XmlReader> object created by the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="29020-417">이러한 개체는 항상 줄 바꿈 정규화 및 특성의 전체 정규화를 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-417">These objects always perform line break normalization and full normalization of attributes.</span></span> <span data-ttu-id="29020-418"><xref:System.Xml.XmlTextReader> 도 개체 일 수 정규화 판독기 경우 <xref:System.Xml.XmlTextReader.Normalization%2A> 속성이로 설정 된 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-418">The <xref:System.Xml.XmlTextReader> object can also be a normalizing reader if it's <xref:System.Xml.XmlTextReader.Normalization%2A> property is set to `true`.</span></span>  
  
||<span data-ttu-id="29020-419">\r\n</span><span class="sxs-lookup"><span data-stu-id="29020-419">\r\n</span></span>|<span data-ttu-id="29020-420">\n</span><span class="sxs-lookup"><span data-stu-id="29020-420">\n</span></span>|<span data-ttu-id="29020-421">\r</span><span class="sxs-lookup"><span data-stu-id="29020-421">\r</span></span>|<span data-ttu-id="29020-422">\t</span><span class="sxs-lookup"><span data-stu-id="29020-422">\t</span></span>|  
|-|------------|---------|---------|---------|  
|<span data-ttu-id="29020-423">텍스트 노드 값</span><span class="sxs-lookup"><span data-stu-id="29020-423">Text Node Value</span></span>|<span data-ttu-id="29020-424">\n</span><span class="sxs-lookup"><span data-stu-id="29020-424">\n</span></span>|<span data-ttu-id="29020-425">\n</span><span class="sxs-lookup"><span data-stu-id="29020-425">\n</span></span>|<span data-ttu-id="29020-426">\n</span><span class="sxs-lookup"><span data-stu-id="29020-426">\n</span></span>|<span data-ttu-id="29020-427">\t</span><span class="sxs-lookup"><span data-stu-id="29020-427">\t</span></span>|  
|<span data-ttu-id="29020-428">특성 값</span><span class="sxs-lookup"><span data-stu-id="29020-428">Attribute Value</span></span>|<span data-ttu-id="29020-429">단일 공간</span><span class="sxs-lookup"><span data-stu-id="29020-429">single space</span></span>|<span data-ttu-id="29020-430">단일 공간</span><span class="sxs-lookup"><span data-stu-id="29020-430">single space</span></span>|<span data-ttu-id="29020-431">단일 공간</span><span class="sxs-lookup"><span data-stu-id="29020-431">single space</span></span>|<span data-ttu-id="29020-432">단일 공간</span><span class="sxs-lookup"><span data-stu-id="29020-432">single space</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewLineOnAttributes">
      <MemberSignature Language="C#" Value="public bool NewLineOnAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NewLineOnAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLineOnAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NewLineOnAttributes { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29020-433">특성을 새 줄에 쓸지를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-433">Gets or sets a value indicating whether to write attributes on a new line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29020-434">특성을 개별 줄에 쓰려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-434">
              <see langword="true" /> to write attributes on individual lines; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="29020-435">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-435">The default is <see langword="false" />.</span>
          </span>
          <block subset="none" type="note">
            <para>
              <span data-ttu-id="29020-436">
                <see cref="P:System.Xml.XmlWriterSettings.Indent" /> 속성 값이 <see langword="false" />인 경우에는 이 설정을 적용해도 효과가 없습니다.</span>
              <span class="sxs-lookup">
                <span data-stu-id="29020-436">This setting has no effect when the <see cref="P:System.Xml.XmlWriterSettings.Indent" /> property value is <see langword="false" />.</span>
              </span>
            </para>
          </block>
          <span data-ttu-id="29020-437">
            <see cref="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" />를 <see langword="true" />로 설정하면 각 특성 앞에 줄 바꿈과 한 수준 들여쓰기가 추가됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-437">When <see cref="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" /> is set to <see langword="true" />, each attribute is pre-pended with a new line and one extra level of indentation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29020-438">이 속성에만 적용 됩니다 <xref:System.Xml.XmlWriter> 인스턴스 텍스트 콘텐츠를 출력 하는, 그렇지 않으면이 설정은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-438">This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29020-439">다음 예제에서는 <xref:System.Xml.XmlWriter> XML 파일에 기록 하 고 새 줄에 각 특성을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="29020-439">The following example creates an <xref:System.Xml.XmlWriter> that writes to an XML file and writes each attribute on a new line.</span></span>  
  
 [!code-csharp[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/CS/writenewlineattrs.cs#1)]
 [!code-vb[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/VB/writenewlineattrs.vb#1)]  
  
 <span data-ttu-id="29020-440">예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-440">The sample produces the following output:</span></span>  
  
```  
<order  
  orderID="367A54"  
  date="2001-05-03">  
  <price>19.95</price>  
</order>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OmitXmlDeclaration">
      <MemberSignature Language="C#" Value="public bool OmitXmlDeclaration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OmitXmlDeclaration" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.OmitXmlDeclaration" />
      <MemberSignature Language="VB.NET" Value="Public Property OmitXmlDeclaration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OmitXmlDeclaration { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29020-441">XML 선언을 생략할지를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-441">Gets or sets a value indicating whether to omit an XML declaration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29020-442">XML 선언을 생략하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-442">
              <see langword="true" /> to omit the XML declaration; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="29020-443">기본값은 <see langword="false" />로, XML 선언이 작성됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-443">The default is <see langword="false" />, an XML declaration is written.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29020-444">이 속성에만 적용 됩니다 <xref:System.Xml.XmlWriter> 인스턴스 텍스트 콘텐츠를 출력 하는, 그렇지 않으면이 설정은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-444">This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.</span></span>  
  
 <span data-ttu-id="29020-445">경우 <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A> 로 설정 된 `false`, XML 선언이 자동으로 작성 됩니다</span><span class="sxs-lookup"><span data-stu-id="29020-445">If <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A> is set to `false`, The XML declaration is written automatically</span></span>  
  
 <span data-ttu-id="29020-446">XML 선언은 항상 쓰여집니다 <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> 로 설정 되어 <xref:System.Xml.ConformanceLevel.Document>경우에 <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A> 로 설정 되어 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-446">The XML declaration is always written if <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> is set to <xref:System.Xml.ConformanceLevel.Document>, even if <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="29020-447">경우에 XML 선언을 작성 되지 않습니다 <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> 로 설정 된 <xref:System.Xml.ConformanceLevel.Fragment>합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-447">The XML declaration is never written if <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> is set to <xref:System.Xml.ConformanceLevel.Fragment>.</span></span> <span data-ttu-id="29020-448">호출할 수 있습니다 <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> 을 명시적으로 XML 선언을 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-448">You can call <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> to explicitly write out an XML declaration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29020-449">다음 예제에서는 XML 조각을 메모리 스트림을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="29020-449">The following example writes an XML fragment to a memory stream.</span></span>  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputMethod">
      <MemberSignature Language="C#" Value="public System.Xml.XmlOutputMethod OutputMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlOutputMethod OutputMethod" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.OutputMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputMethod As XmlOutputMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlOutputMethod OutputMethod { System::Xml::XmlOutputMethod get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlOutputMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29020-450">
            <see cref="T:System.Xml.XmlWriter" /> 출력을 serialize하는 데 사용되는 메서드를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-450">Gets the method used to serialize the <see cref="T:System.Xml.XmlWriter" /> output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29020-451">
            <see cref="T:System.Xml.XmlOutputMethod" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-451">One of the <see cref="T:System.Xml.XmlOutputMethod" /> values.</span>
          </span>
          <span data-ttu-id="29020-452">기본값은 <see cref="F:System.Xml.XmlOutputMethod.Xml" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-452">The default is <see cref="F:System.Xml.XmlOutputMethod.Xml" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29020-453">이 속성의 출력을 serialize 하는 데 사용 되는 메서드를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-453">This property specifies the method used to serialize the output.</span></span> <span data-ttu-id="29020-454">규칙은 HTML, XML 1.0 규칙 및 등을 사용 하 여 출력을 serialize 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="29020-454">The output can be serialized using the HTML rules, the XML 1.0 rules, and so on.</span></span> <span data-ttu-id="29020-455">이 설정은 XSLT 프로세서에서 설정 되 고 Visual Studio에서 내부적으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29020-455">This setting is set by the XSLT processor and is used internally by Visual Studio.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriterSettings.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="29020-456">설정 클래스의 멤버를 해당 기본값으로 다시 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-456">Resets the members of the settings class to their default values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29020-457">다음 표에서 기본 인스턴스에 대 한 속성 값이 표시 <xref:System.Xml.XmlWriterSettings>합니다.</span><span class="sxs-lookup"><span data-stu-id="29020-457">The following table shows the default property values for an instance of <xref:System.Xml.XmlWriterSettings>.</span></span>  
  
|<span data-ttu-id="29020-458">속성</span><span class="sxs-lookup"><span data-stu-id="29020-458">Property</span></span>|<span data-ttu-id="29020-459">초기 값</span><span class="sxs-lookup"><span data-stu-id="29020-459">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Xml.XmlWriterSettings.Async%2A>|<span data-ttu-id="29020-460">`false`.</span><span class="sxs-lookup"><span data-stu-id="29020-460">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|<span data-ttu-id="29020-461">`true`.</span><span class="sxs-lookup"><span data-stu-id="29020-461">`true`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|<span data-ttu-id="29020-462">`false`.</span><span class="sxs-lookup"><span data-stu-id="29020-462">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<span data-ttu-id="29020-463"><xref:System.Xml.ConformanceLevel.Document>.</span><span class="sxs-lookup"><span data-stu-id="29020-463"><xref:System.Xml.ConformanceLevel.Document>.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<span data-ttu-id="29020-464">`Encoding.UTF8`.</span><span class="sxs-lookup"><span data-stu-id="29020-464">`Encoding.UTF8`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|<span data-ttu-id="29020-465">`false`.</span><span class="sxs-lookup"><span data-stu-id="29020-465">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="29020-466">공백 두 개입니다.</span><span class="sxs-lookup"><span data-stu-id="29020-466">Two spaces.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="29020-467">`\r\n`.</span><span class="sxs-lookup"><span data-stu-id="29020-467">`\r\n`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<span data-ttu-id="29020-468"><xref:System.Xml.NewLineHandling.Replace>.</span><span class="sxs-lookup"><span data-stu-id="29020-468"><xref:System.Xml.NewLineHandling.Replace>.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|<span data-ttu-id="29020-469">`false`.</span><span class="sxs-lookup"><span data-stu-id="29020-469">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|<span data-ttu-id="29020-470">`false`.</span><span class="sxs-lookup"><span data-stu-id="29020-470">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|<span data-ttu-id="29020-471">`true`.</span><span class="sxs-lookup"><span data-stu-id="29020-471">`true`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocumentOnClose">
      <MemberSignature Language="C#" Value="public bool WriteEndDocumentOnClose { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WriteEndDocumentOnClose" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose" />
      <MemberSignature Language="VB.NET" Value="Public Property WriteEndDocumentOnClose As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WriteEndDocumentOnClose { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29020-472">
            <see cref="T:System.Xml.XmlWriter" /> 메서드가 호출될 때 <see cref="M:System.Xml.XmlWriter.Close" />가 닫히지 않은 모든 요소 태그에 닫는 태그를 추가할지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-472">Gets or sets a value that indicates whether the <see cref="T:System.Xml.XmlWriter" /> will add closing tags to all unclosed element tags when the <see cref="M:System.Xml.XmlWriter.Close" /> method is called.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29020-473">닫히지 않은 모든 요소 태그가 닫히면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-473">
              <see langword="true" /> if all unclosed element tags will be closed out; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="29020-474">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29020-474">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29020-475">이 플래그를 설정 하면 `false`, 출력 XML 파일 형식이 잘못 될 수 있습니다 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="29020-475">If you set this flag to `false`, the output XML file may not be well-formed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>