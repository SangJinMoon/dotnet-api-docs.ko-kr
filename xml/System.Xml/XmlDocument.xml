<Type Name="XmlDocument" FullName="System.Xml.XmlDocument">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="04b0abd24bacbd8b2a4c938ad8b380cbba54839e" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34255338" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlDocument : System.Xml.XmlNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlDocument extends System.Xml.XmlNode" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlDocument" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlDocument&#xA;Inherits XmlNode" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlDocument : System::Xml::XmlNode" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlDocument</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="2ad25-101">XML 문서를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2ad25-101">Represents an XML document.</span>
      </span>
      <span data-ttu-id="2ad25-102">이 클래스를 사용하여 문서에서 XML 로드, 유효성 검사, 편집, 추가 및 위치 지정을 수행할 수 있습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2ad25-102">You can use this class to load, validate, edit, add, and position XML in a document.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="Remarks"></a> <span data-ttu-id="2ad25-103"><xref:System.Xml.XmlDocument> 클래스는 XML 문서의 메모리 내 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-103">The <xref:System.Xml.XmlDocument> class is an in-memory representation of an XML document.</span></span> <span data-ttu-id="2ad25-104">W3C 구현 [XML 문서 개체 모델 (DOM)](~/docs/standard/data/xml/xml-document-object-model-dom.md) Level 1 Core 및 DOM Level 2 Core 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-104">It implements the W3C [XML Document Object Model (DOM)](~/docs/standard/data/xml/xml-document-object-model-dom.md) Level 1 Core and the Core DOM Level 2.</span></span>  
  
 <span data-ttu-id="2ad25-105">*DOM* 에 *문서 개체 모델*합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-105">*DOM* stands for *document object model*.</span></span> <span data-ttu-id="2ad25-106">자세한 내용은 참조 항목에 대 한, [XML 문서 개체 모델 (DOM)](~/docs/standard/data/xml/xml-document-object-model-dom.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-106">To read more about it, see [XML Document Object Model (DOM)](~/docs/standard/data/xml/xml-document-object-model-dom.md).</span></span>  
  
 <span data-ttu-id="2ad25-107">사용 하 여 XML DOM에 로드할 수 있습니다는 <xref:System.Xml.XmlDocument> 클래스를 프로그래밍 방식으로, 수정, 읽고 XML 문서에서 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-107">You can load XML into the DOM by using the <xref:System.Xml.XmlDocument> class, and then programmatically read, modify, and remove XML in the document.</span></span>  
  
 <span data-ttu-id="2ad25-108">들어 올릴 열고는 <xref:System.Xml.XmlDocument> 클래스 및 구현 하는 방법을 참조 하십시오는 [참조 소스](https://referencesource.microsoft.com/#System.Xml/Xml/System/Xml/Dom/XmlDocument.cs#f82a4c1bd1f0ee12)합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-108">If you want to pry open the <xref:System.Xml.XmlDocument> class and see how it’s implemented, see the [Reference Source](https://referencesource.microsoft.com/#System.Xml/Xml/System/Xml/Dom/XmlDocument.cs#f82a4c1bd1f0ee12).</span></span>  
  
<a name="Common"></a>   
## <a name="tasks"></a><span data-ttu-id="2ad25-109">작업</span><span class="sxs-lookup"><span data-stu-id="2ad25-109">Tasks</span></span>  
  
-   [<span data-ttu-id="2ad25-110">XML 문서 개체 모델에 로드</span><span class="sxs-lookup"><span data-stu-id="2ad25-110">Load XML into the document object model</span></span>](#Load)  
  
-   [<span data-ttu-id="2ad25-111">스키마에 대해 유효성 검사</span><span class="sxs-lookup"><span data-stu-id="2ad25-111">Validate it against a schema</span></span>](#Validation)  
  
-   [<span data-ttu-id="2ad25-112">문서 트리를 탐색</span><span class="sxs-lookup"><span data-stu-id="2ad25-112">Navigate the document tree</span></span>](#Navigate)  
  
-   [<span data-ttu-id="2ad25-113">노드 찾기</span><span class="sxs-lookup"><span data-stu-id="2ad25-113">Find nodes</span></span>](#Find)  
  
-   [<span data-ttu-id="2ad25-114">노드를 편집 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-114">Edit nodes</span></span>](#Edit)  
  
-   [<span data-ttu-id="2ad25-115">노드 추가</span><span class="sxs-lookup"><span data-stu-id="2ad25-115">Add nodes</span></span>](#Add)  
  
-   [<span data-ttu-id="2ad25-116">노드 제거</span><span class="sxs-lookup"><span data-stu-id="2ad25-116">Remove nodes</span></span>](#Remove)  
  
-   [<span data-ttu-id="2ad25-117">위치 노드</span><span class="sxs-lookup"><span data-stu-id="2ad25-117">Position nodes</span></span>](#Position)  
  
<a name="Load"></a>   
## <a name="load-xml-into-the-document-object-model"></a><span data-ttu-id="2ad25-118">XML 문서 개체 모델에 로드</span><span class="sxs-lookup"><span data-stu-id="2ad25-118">Load XML into the document object model</span></span>  
 <span data-ttu-id="2ad25-119">다음과 같은 XML 문서를 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-119">Start with an XML document like this one.</span></span> <span data-ttu-id="2ad25-120">몇 개의 설명서 컬렉션에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="2ad25-120">It’s just a few books in a collection.</span></span> <span data-ttu-id="2ad25-121">하지만; XML 문서에서 볼 수 있는 기본 작업을 포함지 않습니다. 네임 스페이스, 데이터를 나타내는 요소 및 데이터를 설명 하는 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-121">But it does contain the basic things that you’d find in any XML document; a namespace, elements that represent data and attributes that describe the data.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8"?>  
<books xmlns="http://www.contoso.com/books">  
  <book genre="novel" ISBN="1-861001-57-8" publicationdate="1823-01-28">  
    <title>Pride And Prejudice</title>  
    <price>24.95</price>  
  </book>  
  <book genre="novel" ISBN="1-861002-30-1" publicationdate="1985-01-01">  
    <title>The Handmaid's Tale</title>  
    <price>29.95</price>  
  </book>  
  <book genre="novel" ISBN="1-861001-45-3" publicationdate="1811-01-01">  
    <title>Sense and Sensibility</title>  
    <price>19.95</price>  
  </book>  
</books>  
```  
  
 <span data-ttu-id="2ad25-122">다음으로 메모리에 작업할 수 있도록 DOM에이 데이터를 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-122">Next, load this data into the DOM so that you can work with it in memory.</span></span> <span data-ttu-id="2ad25-123">이 작업을 수행 하는 가장 일반적인 방법은 아니지만 로컬 컴퓨터 또는 네트워크 파일을 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-123">The most popular way to do this is refer to a file on your local computer or on a network.</span></span>  
  
 <span data-ttu-id="2ad25-124">이 예제에서는 파일에서 XML을 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-124">This example loads XML from a file.</span></span> <span data-ttu-id="2ad25-125">파일이 존재 하지 않는 경우 바로 일부 XML을 생성 하 고이 로드 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-125">If the file doesn’t exist, it just generates some XML and loads that.</span></span>  
  
 [!code-cpp[XMLProcessingApp#1](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#1)]
 [!code-csharp[XMLProcessingApp#1](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#1)]
 [!code-vb[XMLProcessingApp#1](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#1)]  
  
 <span data-ttu-id="2ad25-126">**전체 샘플:** [조작 메모리 내 XML XmlDocument 클래스 및 기타 사용 하 여 관련 형식](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span><span class="sxs-lookup"><span data-stu-id="2ad25-126">**Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span></span>  
  
 <span data-ttu-id="2ad25-127">**자세한 정보:** [DOM에 XML 문서 읽어오기](~/docs/standard/data/xml/reading-an-xml-document-into-the-dom.md)</span><span class="sxs-lookup"><span data-stu-id="2ad25-127">**Learn more:** [Reading an XML Document into the DOM](~/docs/standard/data/xml/reading-an-xml-document-into-the-dom.md)</span></span>  
  
<a name="Validation"></a>   
## <a name="validate-it-against-a-schema"></a><span data-ttu-id="2ad25-128">스키마에 대해 유효성 검사</span><span class="sxs-lookup"><span data-stu-id="2ad25-128">Validate it against a schema</span></span>  
 <span data-ttu-id="2ad25-129">이와 같은 XML 스키마로 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-129">Start with an XML schema like this one.</span></span> <span data-ttu-id="2ad25-130">필요한 특성을 및이 스키마는 xml에서 데이터 형식을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-130">This schema defines the data types in the XML and which attributes are required.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8"?>  
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"  
  attributeFormDefault="unqualified"   
  elementFormDefault="qualified"  
  targetNamespace="http://www.contoso.com/books">   
  <xs:element name="books">  
    <xs:complexType>  
      <xs:sequence>  
        <xs:element maxOccurs="unbounded" name="book">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="title" type="xs:string" />  
              <xs:element name="price" type="xs:decimal" />  
            </xs:sequence>  
            <xs:attribute name="genre" type="xs:string" use="required" />  
            <xs:attribute name="ISBN" type="xs:string" use="required" />  
            <xs:attribute name="publicationdate" type="xs:date" use="required" />  
          </xs:complexType>  
        </xs:element>  
      </xs:sequence>  
    </xs:complexType>  
  </xs:element>  
</xs:schema>  
```  
  
 <span data-ttu-id="2ad25-131">만들기는 <xref:System.Xml.XmlReader> 스키마를 사용 하 여 개체를 다음 DOM 개체 로드</span><span class="sxs-lookup"><span data-stu-id="2ad25-131">Create an <xref:System.Xml.XmlReader> object by using your schema, and then load that object into the DOM.</span></span> <span data-ttu-id="2ad25-132">코드는 스키마의 규칙을 위반 하는 방법으로 XML 파일을 수정 하려고 할 때 실행 하는 이벤트 처리기를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-132">Create an event handler that executes when code attempts to modify your XML file in ways that violate the rules of the schema.</span></span>  
  
 <span data-ttu-id="2ad25-133">이러한 코드 블록을이 모두 수행 하는 도우미 메서드를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-133">These blocks of code show helper methods that do all of this.</span></span>  
  
 [!code-cpp[XMLProcessingApp#2](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#2)]
 [!code-csharp[XMLProcessingApp#2](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#2)]
 [!code-vb[XMLProcessingApp#2](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#2)]  
  
 <span data-ttu-id="2ad25-134">**전체 샘플:** [조작 메모리 내 XML XmlDocument 클래스 및 기타 사용 하 여 관련 형식](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span><span class="sxs-lookup"><span data-stu-id="2ad25-134">**Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span></span>  
  
 <span data-ttu-id="2ad25-135">**자세한 정보:** [DOM에서 XML 문서 유효성 검사](~/docs/standard/data/xml/validating-an-xml-document-in-the-dom.md)</span><span class="sxs-lookup"><span data-stu-id="2ad25-135">**Learn more:** [Validating an XML Document in the DOM](~/docs/standard/data/xml/validating-an-xml-document-in-the-dom.md)</span></span>  
  
<a name="Navigate"></a>   
## <a name="navigate-the-document-tree"></a><span data-ttu-id="2ad25-136">문서 트리를 탐색</span><span class="sxs-lookup"><span data-stu-id="2ad25-136">Navigate the document tree</span></span>  
 <span data-ttu-id="2ad25-137">XML 문서를 이동할 수 속성을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-137">You can use properties to navigate around an XML document.</span></span> <span data-ttu-id="2ad25-138">하지만 그 중 하나를 사용 하기 전에 보겠습니다 신속 하 게 검토 몇 가지 용어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-138">But before you use any of them, let’s quickly review a few terms.</span></span> <span data-ttu-id="2ad25-139">문서 노드의 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-139">Your document is composed of nodes.</span></span> <span data-ttu-id="2ad25-140">각 노드에 단일 *부모* 바로 위에 노드.</span><span class="sxs-lookup"><span data-stu-id="2ad25-140">Each node has as single *parent* node directly above it.</span></span> <span data-ttu-id="2ad25-141">부모 노드가 없는 유일한 노드이거나 문서 루트는 최상위 노드입니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-141">The only node that does not have a parent node is the document root, as it is the top-level node.</span></span> <span data-ttu-id="2ad25-142">대부분의 노드에 점이 *자식* 노드인, 노드 바로 아래 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-142">Most nodes can have *child* nodes, which are nodes directly below them.</span></span> <span data-ttu-id="2ad25-143">동일한 수준에 있는 노드는 *형제*합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-143">Nodes that are at the same level are *siblings*.</span></span>  
  
 <span data-ttu-id="2ad25-144">다음 예에서는 루트 노드를 가져올, 루트 노드의 첫 번째 자식 노드를 이동, 자식 노드 중 하나가 액세스, 부모 노드에 돌아갈 및 다음 형제 노드를 탐색 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-144">The following examples, show you how to obtain the root node, jump to the first child node of the root node, access any of its child nodes, get back out to the parent node, and then navigate across sibling nodes.</span></span>  
  
 <span data-ttu-id="2ad25-145">**루트 노드로 시작**</span><span class="sxs-lookup"><span data-stu-id="2ad25-145">**Start with the root node**</span></span>  
  
 <span data-ttu-id="2ad25-146">이 예제에서는 루트 노드를 가져오고 해당 노드를 사용 하 여 콘솔에 문서의 내용을 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-146">This example gets the root node and then uses that node to output the contents of the document to the console.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.DocumentElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.DocumentElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.DocumentElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.DocumentElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.DocumentElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.DocumentElement Example/VB/source.vb#1)]  
  
 <span data-ttu-id="2ad25-147">**자식 노드 가져오기**</span><span class="sxs-lookup"><span data-stu-id="2ad25-147">**Get child nodes**</span></span>  
  
 <span data-ttu-id="2ad25-148">이 예제에서는 루트 노드의 첫 번째 자식 노드를 한 다음 있는 경우 해당 노드의 자식 노드를 반복 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-148">This example jumps to the first child node of the root node and then iterates through the child nodes of that node if any exist.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/VB/source.vb#1)]  
  
 <span data-ttu-id="2ad25-149">**부모 노드를**</span><span class="sxs-lookup"><span data-stu-id="2ad25-149">**Get back to the parent node**</span></span>  
  
 <span data-ttu-id="2ad25-150"><xref:System.Xml.XmlDocument.ParentNode%2A> 속성을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-150">Use the <xref:System.Xml.XmlDocument.ParentNode%2A> property.</span></span>  
  
 <span data-ttu-id="2ad25-151">**마지막 자식 노드를 참조 하십시오**</span><span class="sxs-lookup"><span data-stu-id="2ad25-151">**Refer to the last child node**</span></span>  
  
 <span data-ttu-id="2ad25-152">이 예제에서는 콘솔 (즉, 책 노드의 마지막 자식 노드)에 책의 가격을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-152">This example writes the price of a book to the console (which is the last child node of a book node).</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.LastChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.LastChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.LastChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/VB/source.vb#1)]  
  
 <span data-ttu-id="2ad25-153">**형제를 앞으로 탐색**</span><span class="sxs-lookup"><span data-stu-id="2ad25-153">**Navigate forward across siblings**</span></span>  
  
 <span data-ttu-id="2ad25-154">이 예에서는 책 책 앞으로 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-154">This example moves forward from book to book.</span></span> <span data-ttu-id="2ad25-155">Book 노드는 서로 형제입니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-155">Book nodes are siblings to one another.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.NextSibling Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.NextSibling Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.NextSibling Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/VB/source.vb#1)]  
  
 <span data-ttu-id="2ad25-156">**형제를 뒤로 탐색**</span><span class="sxs-lookup"><span data-stu-id="2ad25-156">**Navigate backwards across siblings**</span></span>  
  
 <span data-ttu-id="2ad25-157">이 예에서는 이전 버전과에서 책 대상 통합 문서를 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-157">This example moves backwards from book to book.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.PreviousSibling Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.PreviousSibling Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.PreviousSibling Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/VB/source.vb#1)]  
  
<a name="Find"></a>   
## <a name="find-nodes"></a><span data-ttu-id="2ad25-158">노드 찾기</span><span class="sxs-lookup"><span data-stu-id="2ad25-158">Find nodes</span></span>  
 <span data-ttu-id="2ad25-159">데이터의 하나 이상의 노드를 찾기 위해 위한 가장 일반적인 방법은 XPath 쿼리 문자열을 사용 하지만 메서드 하나 필요로 하지 않는 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-159">The most popular way to find one or more nodes of data is to use an XPath query string, but there are also methods that don’t require one.</span></span>  
  
 <span data-ttu-id="2ad25-160">**단일 노드 가져오기**</span><span class="sxs-lookup"><span data-stu-id="2ad25-160">**Get a single node**</span></span>  
  
 <span data-ttu-id="2ad25-161">이 예에서는 ISBN 번호를 사용 하 여 책을 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-161">This example locates a book by using the ISBN number.</span></span>  
  
 [!code-cpp[XMLProcessingApp#3](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#3)]
 [!code-csharp[XMLProcessingApp#3](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#3)]
 [!code-vb[XMLProcessingApp#3](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#3)]  
  
 <span data-ttu-id="2ad25-162">이 예에서 사용 되는 문자열은 Xpath 쿼리입니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-162">The string used in this example is an Xpath query.</span></span> <span data-ttu-id="2ad25-163">여기의 추가 예제를 찾을 수 있습니다: [XPath 예](https://msdn.microsoft.com/library/ms256086.aspx)합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-163">You can find more examples of them here:   [XPath examples](https://msdn.microsoft.com/library/ms256086.aspx).</span></span>  
  
 <span data-ttu-id="2ad25-164">사용할 수도 있습니다는 <xref:System.Xml.XmlDocument.GetElementById%2A> 노드를 검색 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-164">You can also use the <xref:System.Xml.XmlDocument.GetElementById%2A> to retrieve nodes.</span></span> <span data-ttu-id="2ad25-165">이 방법을 사용 하려면 정의 해야 XML 파일의 문서 형식 정의 선언에 대 한 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-165">To use this approach, you’ll have to define ID’s in the document type definition declarations of your XML file.</span></span>  
  
 <span data-ttu-id="2ad25-166">노드를 얻은 후 자식 노드 또는 특성의 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-166">After you get a node, you get the value of attributes or child nodes.</span></span> <span data-ttu-id="2ad25-167">이 예제에서는 사용 하는 책 노드를 수행 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-167">This example does that with a book node.</span></span>  
  
 [!code-cpp[XMLProcessingApp#4](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#4)]
 [!code-csharp[XMLProcessingApp#4](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#4)]
 [!code-vb[XMLProcessingApp#4](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#4)]  
  
 <span data-ttu-id="2ad25-168">**노드의 컬렉션을 가져옵니다.**</span><span class="sxs-lookup"><span data-stu-id="2ad25-168">**Get a collection of nodes**</span></span>  
  
 <span data-ttu-id="2ad25-169">저자의 성과 인 모든 책을 선택 하는이 예제 **Austen**, 한 다음 해당 책의 가격을 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-169">This example selects all books where the author's last name is **Austen**, and then changes the price of those books.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.SelectNodes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.SelectNodes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.SelectNodes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/VB/source.vb#1)]  
  
 <span data-ttu-id="2ad25-170">또한 노드의 이름을 사용 하 여 노드의 컬렉션을 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-170">You can also get a collection of nodes by using the name of the node.</span></span> <span data-ttu-id="2ad25-171">예를 들어이 예에서는 모든 책 제목의 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-171">For example, this example gets a collection of all book titles.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.GetElementsByTagName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.GetElementsByTagName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.GetElementsByTagName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.GetElementsByTagName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.GetElementsByTagName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.GetElementsByTagName Example/VB/source.vb#1)]  
  
 <span data-ttu-id="2ad25-172">**전체 샘플:** [조작 메모리 내 XML XmlDocument 클래스 및 기타 사용 하 여 관련 형식](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span><span class="sxs-lookup"><span data-stu-id="2ad25-172">**Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span></span>  
  
 <span data-ttu-id="2ad25-173">**자세한 정보:** [XPath 탐색을 사용 하 여 노드 선택](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)</span><span class="sxs-lookup"><span data-stu-id="2ad25-173">**Learn more:** [Select Nodes Using XPath Navigation](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)</span></span>  
  
<a name="Edit"></a>   
## <a name="edit-nodes"></a><span data-ttu-id="2ad25-174">노드를 편집 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-174">Edit nodes</span></span>  
 <span data-ttu-id="2ad25-175">이 예제는 book 노드 및 해당 특성을 편집합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-175">This example edits a book node and its attributes.</span></span>  
  
 [!code-cpp[XMLProcessingApp#7](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#7)]
 [!code-csharp[XMLProcessingApp#7](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#7)]
 [!code-vb[XMLProcessingApp#7](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#7)]  
  
 <span data-ttu-id="2ad25-176">**자세한 정보:** [노드 수정, 내용 및 XML 문서에는 값](~/docs/standard/data/xml/modifying-nodes-content-and-values-in-an-xml-document.md)</span><span class="sxs-lookup"><span data-stu-id="2ad25-176">**Learn more:** [Modifying Nodes, Content, and Values in an XML Document](~/docs/standard/data/xml/modifying-nodes-content-and-values-in-an-xml-document.md)</span></span>  
  
 <span data-ttu-id="2ad25-177">**전체 샘플:** [조작 메모리 내 XML XmlDocument 클래스 및 기타 사용 하 여 관련 형식](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span><span class="sxs-lookup"><span data-stu-id="2ad25-177">**Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span></span>  
  
<a name="Add"></a>   
## <a name="add-nodes"></a><span data-ttu-id="2ad25-178">노드 추가</span><span class="sxs-lookup"><span data-stu-id="2ad25-178">Add nodes</span></span>  
 <span data-ttu-id="2ad25-179">노드를 추가 하려면 사용 된 <xref:System.Xml.XmlDocument.CreateElement%2A> 메서드 또는 <xref:System.Xml.XmlDocument.CreateNode%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2ad25-179">To add a node, use the <xref:System.Xml.XmlDocument.CreateElement%2A> method or the <xref:System.Xml.XmlDocument.CreateNode%2A> method.</span></span>  
  
 <span data-ttu-id="2ad25-180">책 같은 데이터 노드를 추가 하려면 사용 된 <xref:System.Xml.XmlDocument.CreateElement%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2ad25-180">To add a data node such as a book, use the <xref:System.Xml.XmlDocument.CreateElement%2A> method.</span></span>  
  
 <span data-ttu-id="2ad25-181">주석, 공백 노드 또는 CDATA 노드를 사용 하 여 같은 노드 유형에 <xref:System.Xml.XmlDocument.CreateNode%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2ad25-181">For any other type of node such as a comment, whitespace node, or CDATA node, use the <xref:System.Xml.XmlDocument.CreateNode%2A> method.</span></span>  
  
 <span data-ttu-id="2ad25-182">이 예에서는 책 노드를 만듭니다 해당 노드의에 특성을 추가 하 고 문서에 해당 노드를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-182">This example creates a book node, adds attrubutes to that node, and then adds that node to the document.</span></span>  
  
 [!code-cpp[XMLProcessingApp#5](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#5)]
 [!code-csharp[XMLProcessingApp#5](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#5)]
 [!code-vb[XMLProcessingApp#5](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#5)]  
  
 <span data-ttu-id="2ad25-183">**전체 샘플:** [조작 메모리 내 XML XmlDocument 클래스 및 기타 사용 하 여 관련 형식](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span><span class="sxs-lookup"><span data-stu-id="2ad25-183">**Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span></span>  
  
 <span data-ttu-id="2ad25-184">**자세한 정보:** [XML 문서에 노드 삽입](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md)</span><span class="sxs-lookup"><span data-stu-id="2ad25-184">**Learn more:** [Inserting Nodes into an XML Document](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md)</span></span>  
  
<a name="Remove"></a>   
## <a name="remove-nodes"></a><span data-ttu-id="2ad25-185">노드 제거</span><span class="sxs-lookup"><span data-stu-id="2ad25-185">Remove nodes</span></span>  
 <span data-ttu-id="2ad25-186">사용 하 여 노드를 제거 하려면는 <xref:System.Xml.XmlNode.RemoveChild%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2ad25-186">To remove a node, use the <xref:System.Xml.XmlNode.RemoveChild%2A> method.</span></span>  
  
 <span data-ttu-id="2ad25-187">이 예제에서는 문서 및 책 노드 바로 앞에 나타나는 모든 공백 책을 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-187">This example removes a book from the document and any whitespace that appears just before the book node.</span></span>  
  
 [!code-cpp[XMLProcessingApp#6](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#6)]
 [!code-csharp[XMLProcessingApp#6](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#6)]
 [!code-vb[XMLProcessingApp#6](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#6)]  
  
 <span data-ttu-id="2ad25-188">**전체 샘플:** [조작 메모리 내 XML XmlDocument 클래스 및 기타 사용 하 여 관련 형식](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span><span class="sxs-lookup"><span data-stu-id="2ad25-188">**Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span></span>  
  
 <span data-ttu-id="2ad25-189">**자세한 정보:** [노드 제거, 내용 및 XML 문서에서 값](~/docs/standard/data/xml/removing-nodes-content-and-values-from-an-xml-document.md)</span><span class="sxs-lookup"><span data-stu-id="2ad25-189">**Learn more:** [Removing Nodes, Content, and Values from an XML Document](~/docs/standard/data/xml/removing-nodes-content-and-values-from-an-xml-document.md)</span></span>  
  
<a name="Position"></a>   
## <a name="position-nodes"></a><span data-ttu-id="2ad25-190">위치 노드</span><span class="sxs-lookup"><span data-stu-id="2ad25-190">Position nodes</span></span>  
 <span data-ttu-id="2ad25-191">노드를 사용 하 여 문서에 표시 하려는 선택할 수 있습니다는 <xref:System.Xml.XmlNode.InsertBefore%2A> 및 <xref:System.Xml.XmlNode.InsertAfter%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2ad25-191">You can choose where you want a node to appear in your document by using the <xref:System.Xml.XmlNode.InsertBefore%2A> and <xref:System.Xml.XmlNode.InsertAfter%2A> methods.</span></span>  
  
 <span data-ttu-id="2ad25-192">이 예제에서는 두 개의 도우미 메서드를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-192">This example shows two helper methods.</span></span> <span data-ttu-id="2ad25-193">그 중 하나는 목록에서 상위 노드를 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-193">One of them moves a node higher in a list.</span></span> <span data-ttu-id="2ad25-194">하위 노드를 이동 하 고 다른 하나.</span><span class="sxs-lookup"><span data-stu-id="2ad25-194">The other one moves a node lower.</span></span>  
  
 <span data-ttu-id="2ad25-195">사용자가 책의 목록에서 책을 위아래로 이동할 수 있는 응용 프로그램에서 이러한 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-195">These methods could be used in an application that enables users to move books up and down in a list of books.</span></span> <span data-ttu-id="2ad25-196">사용자를 선택 하 여 책 up를 누를 때 또는 아래로 단추를 코드의 앞 이나 다른 책 노드 뒤 해당 책 노드 위치를 이러한 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-196">When a user chooses a book and presses an up or down button, your code could call methods like these to position the corresponding book node before or after other book nodes.</span></span>  
  
 [!code-cpp[XMLProcessingApp#8](~/samples/snippets/cpp/VS_Snippets_Data/xmlprocessingapp/cpp/xmldomprocessing.cpp#8)]
 [!code-csharp[XMLProcessingApp#8](~/samples/snippets/csharp/VS_Snippets_Data/xmlprocessingapp/cs/xmlhelpermethods.cs#8)]
 [!code-vb[XMLProcessingApp#8](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlprocessingapp/vb/xmlhelpermethods.vb#8)]  
  
 <span data-ttu-id="2ad25-197">**전체 샘플:** [조작 메모리 내 XML XmlDocument 클래스 및 기타 사용 하 여 관련 형식](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span><span class="sxs-lookup"><span data-stu-id="2ad25-197">**Complete sample:** [Manipulate XML in-Memory by using the XmlDocument class and other related types](https://code.msdn.microsoft.com/windowsdesktop/Manipulate-XML-in-memory-4b612d6b/view/SourceCode)</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.XmlNodeChangedEventHandler" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2ad25-198">
            <see cref="T:System.Xml.XmlDocument" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-198">Initializes a new instance of the <see cref="T:System.Xml.XmlDocument" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDocument();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2ad25-199">
            <see cref="T:System.Xml.XmlDocument" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-199">Initializes a new instance of the <see cref="T:System.Xml.XmlDocument" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2ad25-200">다음은 부하 타임 유효성 검사의 예입니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-200">The following is an example of load-time validation.</span></span> <span data-ttu-id="2ad25-201">유효성 검사 문서 유형 정의 (DTD) <xref:System.Xml.XmlReader> 에 전달 되는 <xref:System.Xml.XmlDocument.Load%2A> 메서드 및 <xref:System.Xml.Schema.ValidationEventHandler> 유효성 검사 오류가 발생 하는 사용자에 게 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-201">A document type definition (DTD) validating <xref:System.Xml.XmlReader> is passed to the <xref:System.Xml.XmlDocument.Load%2A> method and a <xref:System.Xml.Schema.ValidationEventHandler> is provided to notify users of any validation errors.</span></span> <span data-ttu-id="2ad25-202">이 예에서 유효성 검사 오류가 찾았지만 문서는 계속 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-202">In this example a validation error is found, but the document is still loaded.</span></span> <span data-ttu-id="2ad25-203">유효성 검사를 정의할 수 또는 <xref:System.Xml.XmlReader> 예외를 throw 하 고 지정 하 여 유효성 검사 오류가 발견 되 면 로드 프로세스를 중지 하 고 <xref:System.Xml.Schema.ValidationEventHandler>합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-203">Alternatively, you can define a validating <xref:System.Xml.XmlReader> to throw an exception and stop the load process when a validation error is found by not specifying the <xref:System.Xml.Schema.ValidationEventHandler>.</span></span> <span data-ttu-id="2ad25-204">XML 데이터 유효성 검사에 대한 자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="2ad25-204">For more information about validating XML data, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 [!code-cpp[XmlDocument.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlDocument.cctor/CPP/docload.cpp#1)]
 [!code-csharp[XmlDocument.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDocument.cctor/CS/docload.cs#1)]
 [!code-vb[XmlDocument.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDocument.cctor/VB/docload.vb#1)]  
  
 <span data-ttu-id="2ad25-205">이 예제에서는 `bookDTD.xml` 파일을 입력으로 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-205">The example uses the `bookDTD.xml` file as input.</span></span>  
  
 [!code-xml[XmlDocument.cctor#2](~/samples/snippets/xml/VS_Snippets_Data/XmlDocument.cctor/XML/bookdtd.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlDocument.Load(System.String)" />
        <altmember cref="M:System.Xml.XmlDocument.LoadXml(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal XmlDocument (System.Xml.XmlImplementation imp);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlImplementation imp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.#ctor(System.Xml.XmlImplementation)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (imp As XmlImplementation)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; XmlDocument(System::Xml::XmlImplementation ^ imp);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="imp" Type="System.Xml.XmlImplementation" />
      </Parameters>
      <Docs>
        <param name="imp">
          <span data-ttu-id="2ad25-206">사용할 <see langword="XmlImplementation" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-206">The <see langword="XmlImplementation" /> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ad25-207">지정된 <see langword="XmlDocument" />를 사용하여 <see cref="T:System.Xml.XmlImplementation" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-207">Initializes a new instance of the <see langword="XmlDocument" /> class with the specified <see cref="T:System.Xml.XmlImplementation" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDocument (System.Xml.XmlNameTable nt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlNameTable nt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.#ctor(System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (nt As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDocument(System::Xml::XmlNameTable ^ nt);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="nt" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="nt">
          <span data-ttu-id="2ad25-208">사용할 <see langword="XmlNameTable" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-208">The <see langword="XmlNameTable" /> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ad25-209">지정된 <see langword="XmlDocument" />를 사용하여 <see cref="T:System.Xml.XmlNameTable" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-209">Initializes a new instance of the <see langword="XmlDocument" /> class with the specified <see cref="T:System.Xml.XmlNameTable" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public override string BaseURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.BaseURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BaseURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BaseURI { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ad25-210">현재 노드의 기본 URI를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-210">Gets the base URI of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ad25-211">노드를 로드한 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-211">The location from which the node was loaded.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-212">네트워크 XML 문서는 다양 한 W3C 표준 포함 구조를 사용 하 여 집계 데이터의 청크 한 이루어져 서로 다른 위치에서 제공 하는 노드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-212">A networked XML document is comprised of chunks of data aggregated using various W3C standard inclusion mechanisms and therefore contains nodes that come from different places.</span></span> <span data-ttu-id="2ad25-213">`BaseURI` 이러한 노드 출처를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-213">The `BaseURI` tells you where these nodes came from.</span></span>  
  
 <span data-ttu-id="2ad25-214">문서 노드의 `BaseURI` XML 문서의 위치를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-214">For Document nodes, `BaseURI` returns the location of the XML document.</span></span> <span data-ttu-id="2ad25-215">예를 들어 경우는 `XmlDocument` 다음 호출 문서를 사용 하 여 로드 되었습니다. 부하 ("http://server/mydata.xml"), `BaseURI` 노드는 문서에 대 한 http://server/mydata.xml합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-215">For example, if the `XmlDocument` was loaded using the following call doc.Load("http://server/mydata.xml"), the `BaseURI` for the document node is http://server/mydata.xml.</span></span> <span data-ttu-id="2ad25-216">그러나 경우는 <xref:System.Xml.XmlDocument.Load%2A> 메서드를 다른 URI로 서버에 의해 리디렉션되면 `BaseURI` 에 전달 된 원래 URI 반환는 `Load` 메서드.</span><span class="sxs-lookup"><span data-stu-id="2ad25-216">However, if the <xref:System.Xml.XmlDocument.Load%2A> method is redirected by server to a different URI, `BaseURI` returns the original URI passed to the `Load` method.</span></span>  
  
 <span data-ttu-id="2ad25-217">이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-217">This property is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="2ad25-218">에 대 한 자세한 내용은 `BaseURI` 및 다른 노드 유형으로 동작 하는 방법 참조 <xref:System.Xml.XmlNode.BaseURI%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-218">For additional information on `BaseURI` and how it behaves with other node types, see <xref:System.Xml.XmlNode.BaseURI%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlNode CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlNode ^ CloneNode(bool deep);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">
          <span data-ttu-id="2ad25-219">지정된 노드 아래의 하위 트리를 재귀적으로 복제하려면 <see langword="true" />이고, 노드 자체만 복제하려면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-219">
              <see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ad25-220">이 노드의 복제본을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-220">Creates a duplicate of this node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ad25-221">복제된 <see langword="XmlDocument" /> 노드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-221">The cloned <see langword="XmlDocument" /> node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-222">이 메서드는 노드에 대 한 복사 생성자로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-222">This method serves as a copy constructor for nodes.</span></span> <span data-ttu-id="2ad25-223">복제 된 노드는 부모 없습니다 (<xref:System.Xml.XmlNode.ParentNode%2A> 반환 `null`).</span><span class="sxs-lookup"><span data-stu-id="2ad25-223">The cloned node has no parent (<xref:System.Xml.XmlNode.ParentNode%2A> returns `null`).</span></span>  
  
 <span data-ttu-id="2ad25-224">경우 `deep` 은 `true`, 복제 된 노드에 모든 자식 노드가 포함, 그렇지 않으면만 `XmlDocument` 노드에 복제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-224">If `deep` is `true`, the cloned node includes all the child nodes, otherwise only the `XmlDocument` node is cloned.</span></span> <span data-ttu-id="2ad25-225">참조는 <xref:System.Xml.XmlNode.CloneNode%2A?displayProperty=nameWithType> 메서드를 다른 노드 형식에서이 메서드가 동작 하는 방법을 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="2ad25-225">See the <xref:System.Xml.XmlNode.CloneNode%2A?displayProperty=nameWithType> method to see how this method behaves on other node types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ad25-226">다음 예제에서는 전체 및 단순 복제본 간의 차이 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-226">The following example shows the difference between a deep and shallow clone.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CloneNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CloneNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CloneNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CloneNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CloneNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CloneNode Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2ad25-227">지정된 이름을 가진 <see cref="T:System.Xml.XmlAttribute" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-227">Creates an <see cref="T:System.Xml.XmlAttribute" /> with the specified name.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute CreateAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlAttribute CreateAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateAttribute (name As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlAttribute ^ CreateAttribute(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="2ad25-228">특성의 정규화된 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-228">The qualified name of the attribute.</span>
          </span>
          <span data-ttu-id="2ad25-229">이름에 콜론이 포함되어 있는 경우, <see cref="P:System.Xml.XmlNode.Prefix" /> 속성은 첫 번째 콜론 앞의 이름 부분을 반영하고 <see cref="P:System.Xml.XmlDocument.LocalName" /> 속성은 첫 번째 콜론 뒤의 이름 부분을 반영합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-229">If the name contains a colon, the <see cref="P:System.Xml.XmlNode.Prefix" /> property reflects the part of the name preceding the first colon and the <see cref="P:System.Xml.XmlDocument.LocalName" /> property reflects the part of the name following the first colon.</span>
          </span>
          <span data-ttu-id="2ad25-230">접두사가 xmlns같은 인식된 기본 제공되는 접두사가 아닌 경우 <see cref="P:System.Xml.XmlNode.NamespaceURI" />는 비어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-230">The <see cref="P:System.Xml.XmlNode.NamespaceURI" /> remains empty unless the prefix is a recognized built-in prefix such as xmlns.</span>
          </span>
          <span data-ttu-id="2ad25-231">이 경우 <see langword="NamespaceURI" />에 http://www.w3.org/2000/xmlns/의 값이 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-231">In this case <see langword="NamespaceURI" /> has a value of http://www.w3.org/2000/xmlns/.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ad25-232">지정된 <see cref="P:System.Xml.XmlDocument.Name" />을 가진 <see cref="T:System.Xml.XmlAttribute" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-232">Creates an <see cref="T:System.Xml.XmlAttribute" /> with the specified <see cref="P:System.Xml.XmlDocument.Name" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ad25-233">새 <see langword="XmlAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-233">The new <see langword="XmlAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-234">`XmlAttribute` 에 추가할 수는 <xref:System.Xml.XmlElement> 를 사용 하는 <xref:System.Xml.XmlElement.SetAttributeNode%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2ad25-234">The `XmlAttribute` can be added to an <xref:System.Xml.XmlElement> using the <xref:System.Xml.XmlElement.SetAttributeNode%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ad25-235">다음 특성 만들고 XML 문서에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-235">The following creates an attribute and adds it to an XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute CreateAttribute (string qualifiedName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlAttribute CreateAttribute(string qualifiedName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateAttribute (qualifiedName As String, namespaceURI As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlAttribute ^ CreateAttribute(System::String ^ qualifiedName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="qualifiedName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="qualifiedName">
          <span data-ttu-id="2ad25-236">특성의 정규화된 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-236">The qualified name of the attribute.</span>
          </span>
          <span data-ttu-id="2ad25-237">이름에 콜론이 포함되어 있는 경우, <see cref="P:System.Xml.XmlNode.Prefix" /> 속성은 콜론 앞의 이름 부분을 반영하고 <see cref="P:System.Xml.XmlDocument.LocalName" /> 속성은 콜론 뒤의 이름 부분을 반영합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-237">If the name contains a colon then the <see cref="P:System.Xml.XmlNode.Prefix" /> property will reflect the part of the name preceding the colon and the <see cref="P:System.Xml.XmlDocument.LocalName" /> property will reflect the part of the name after the colon.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="2ad25-238">특성의 네임스페이스 URI입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-238">The namespaceURI of the attribute.</span>
          </span>
          <span data-ttu-id="2ad25-239">정규화된 이름에 xmlns 접두사가 포함된 경우 이 매개 변수는 http://www.w3.org/2000/xmlns/이어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-239">If the qualified name includes a prefix of xmlns, then this parameter must be http://www.w3.org/2000/xmlns/.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ad25-240">지정된 정규화된 이름과 <see cref="P:System.Xml.XmlNode.NamespaceURI" />가 있는 <see cref="T:System.Xml.XmlAttribute" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-240">Creates an <see cref="T:System.Xml.XmlAttribute" /> with the specified qualified name and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ad25-241">새 <see langword="XmlAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-241">The new <see langword="XmlAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-242">`XmlAttribute` 에 추가할 수는 <xref:System.Xml.XmlElement> 를 사용 하는 <xref:System.Xml.XmlElement.SetAttributeNode%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2ad25-242">The `XmlAttribute` can be added to an <xref:System.Xml.XmlElement> using the <xref:System.Xml.XmlElement.SetAttributeNode%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAttribute">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttribute CreateAttribute (string prefix, string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlAttribute CreateAttribute(string prefix, string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAttribute (prefix As String, localName As String, namespaceURI As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlAttribute ^ CreateAttribute(System::String ^ prefix, System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="2ad25-243">특성의 접두사입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-243">The prefix of the attribute (if any).</span>
          </span>
          <span data-ttu-id="2ad25-244">String.Empty와 <see langword="null" />은 같습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-244">String.Empty and <see langword="null" /> are equivalent.</span>
          </span>
        </param>
        <param name="localName">
          <span data-ttu-id="2ad25-245">특성의 로컬 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-245">The local name of the attribute.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="2ad25-246">특성의 네임스페이스 URI입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-246">The namespace URI of the attribute (if any).</span>
          </span>
          <span data-ttu-id="2ad25-247">String.Empty와 <see langword="null" />은 같습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-247">String.Empty and <see langword="null" /> are equivalent.</span>
          </span>
          <span data-ttu-id="2ad25-248">
            <c>접두사</c>가 xmlns일 경우 이 매개 변수는 http://www.w3.org/2000/xmlns/이어야 합니다. 그렇지 않으면 예외가 throw됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-248">If <c>prefix</c> is xmlns, then this parameter must be http://www.w3.org/2000/xmlns/; otherwise an exception is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ad25-249">지정된 <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> 및 <see cref="P:System.Xml.XmlNode.NamespaceURI" />가 있는 <see cref="T:System.Xml.XmlAttribute" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-249">Creates an <see cref="T:System.Xml.XmlAttribute" /> with the specified <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" />, and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ad25-250">새 <see langword="XmlAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-250">The new <see langword="XmlAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-251">`XmlAttribute` 에 추가할 수는 <xref:System.Xml.XmlElement> 를 사용 하는 <xref:System.Xml.XmlElement.SetAttributeNode%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2ad25-251">The `XmlAttribute` can be added to an <xref:System.Xml.XmlElement> using the <xref:System.Xml.XmlElement.SetAttributeNode%2A> method.</span></span>  
  
 <span data-ttu-id="2ad25-252">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-252">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCDataSection">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlCDataSection CreateCDataSection (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlCDataSection CreateCDataSection(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateCDataSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateCDataSection (data As String) As XmlCDataSection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlCDataSection ^ CreateCDataSection(System::String ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlCDataSection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="2ad25-253">새 <see langword="XmlCDataSection" />의 콘텐츠입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-253">The content of the new <see langword="XmlCDataSection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ad25-254">지정된 데이터가 포함된 <see cref="T:System.Xml.XmlCDataSection" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-254">Creates an <see cref="T:System.Xml.XmlCDataSection" /> containing the specified data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ad25-255">새 <see langword="XmlCDataSection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-255">The new <see langword="XmlCDataSection" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-256">이 메서드는 문서의 컨텍스트에서 새 개체가 만들어지지만, 것 자동 추가 되지 않습니다 새 개체는 문서 트리에서를 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-256">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="2ad25-257">새 개체를 추가 하려면 명시적으로 노드 삽입 메서드 중 하나 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-257">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="2ad25-258">W3C Extensible Markup Language (XML) 1.0 권장 사항에 따라 (www.w3.org/TR/1998/REC-xml-19980210), CDataSection 노드 때 허용 되 EntityReference 노드 및 요소 노드 내의 EntityReference 노드 특성 노드의 자식이 아닙니다. .</span><span class="sxs-lookup"><span data-stu-id="2ad25-258">According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), CDataSection nodes are allowed within Element nodes and in EntityReference nodes when the EntityReference node is not a child of an Attribute node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ad25-259">다음 예제에서는 CDATA 노드를 만들고 문서에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-259">The following example creates a CDATA node and adds it to the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateCDataSection Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateCDataSection Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateCDataSection Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateCDataSection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateCDataSection Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateCDataSection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateComment">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlComment CreateComment (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlComment CreateComment(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateComment(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateComment (data As String) As XmlComment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlComment ^ CreateComment(System::String ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlComment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="2ad25-260">새 <see langword="XmlComment" />의 콘텐츠입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-260">The content of the new <see langword="XmlComment" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ad25-261">지정된 데이터가 포함된 <see cref="T:System.Xml.XmlComment" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-261">Creates an <see cref="T:System.Xml.XmlComment" /> containing the specified data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ad25-262">새 <see langword="XmlComment" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-262">The new <see langword="XmlComment" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-263">이 메서드는 문서의 컨텍스트에서 새 개체가 만들어지지만, 것 자동 추가 되지 않습니다 새 개체는 문서 트리에서를 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-263">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="2ad25-264">새 개체를 추가 하려면 명시적으로 노드 삽입 메서드 중 하나 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-264">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="2ad25-265">W3C Extensible Markup Language (XML) 1.0 권장 사항에 따라 (www.w3.org/TR/1998/REC-xml-19980210), 주석 노드는 경우에 허용 문서, 요소 및 EntityReference 노드 내에서 EntityReference 노드 특성의 자식이 아닙니다. 노드입니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-265">According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), Comment nodes are only allowed within Document, Element and EntityReference nodes, when the EntityReference node is not a child of an Attribute node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ad25-266">다음 예제에서는 주석을 만들고 XML 문서에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-266">The following example creates a comment and adds it to an XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateComment Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateComment Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateComment Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateComment Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateComment Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateComment Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefaultAttribute">
      <MemberSignature Language="C#" Value="protected internal virtual System.Xml.XmlAttribute CreateDefaultAttribute (string prefix, string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Xml.XmlAttribute CreateDefaultAttribute(string prefix, string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateDefaultAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateDefaultAttribute (prefix As String, localName As String, namespaceURI As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Xml::XmlAttribute ^ CreateDefaultAttribute(System::String ^ prefix, System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="2ad25-267">특성의 접두사입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-267">The prefix of the attribute (if any).</span>
          </span>
        </param>
        <param name="localName">
          <span data-ttu-id="2ad25-268">특성의 로컬 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-268">The local name of the attribute.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="2ad25-269">특성의 네임스페이스 URI입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-269">The namespace URI of the attribute (if any).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ad25-270">지정된 접두사, 로컬 이름 및 네임스페이스 URI가 있는 기본 특성을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-270">Creates a default attribute with the specified prefix, local name and namespace URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ad25-271">새 <see cref="T:System.Xml.XmlAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-271">The new <see cref="T:System.Xml.XmlAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-272">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-272">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDocumentFragment">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlDocumentFragment CreateDocumentFragment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlDocumentFragment CreateDocumentFragment() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateDocumentFragment" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDocumentFragment () As XmlDocumentFragment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlDocumentFragment ^ CreateDocumentFragment();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocumentFragment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2ad25-273">
            <see cref="T:System.Xml.XmlDocumentFragment" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-273">Creates an <see cref="T:System.Xml.XmlDocumentFragment" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ad25-274">새 <see langword="XmlDocumentFragment" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-274">The new <see langword="XmlDocumentFragment" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-275">DocumentFragment 노드를 문서에 삽입할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-275">DocumentFragment nodes cannot be inserted into a document.</span></span> <span data-ttu-id="2ad25-276">그러나 DocumentFragment 노드의 하위 문서에 삽입할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-276">However, you can insert children of the DocumentFragment node into a document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ad25-277">다음 예제에서는 XML 문서에 새 노드를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-277">The following example adds new nodes to an XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateDocumentFragment Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateDocumentFragment Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateDocumentFragment Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateDocumentFragment Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateDocumentFragment Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateDocumentFragment Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDocumentType">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlDocumentType CreateDocumentType (string name, string publicId, string systemId, string internalSubset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlDocumentType CreateDocumentType(string name, string publicId, string systemId, string internalSubset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateDocumentType(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDocumentType (name As String, publicId As String, systemId As String, internalSubset As String) As XmlDocumentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlDocumentType ^ CreateDocumentType(System::String ^ name, System::String ^ publicId, System::String ^ systemId, System::String ^ internalSubset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocumentType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="publicId" Type="System.String" />
        <Parameter Name="systemId" Type="System.String" />
        <Parameter Name="internalSubset" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="2ad25-278">문서 형식의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-278">Name of the document type.</span>
          </span>
        </param>
        <param name="publicId">
          <span data-ttu-id="2ad25-279">문서 형식의 공용 식별자이거나 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-279">The public identifier of the document type or <see langword="null" />.</span>
          </span>
          <span data-ttu-id="2ad25-280">공용 URI 또는 외부 DTD 하위 집합의 위치를 나타내는 시스템 식별자를 지정할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-280">You can specify a public URI and also a system identifier to identify the location of the external DTD subset.</span>
          </span>
        </param>
        <param name="systemId">
          <span data-ttu-id="2ad25-281">문서 형식의 시스템 식별자이거나 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-281">The system identifier of the document type or <see langword="null" />.</span>
          </span>
          <span data-ttu-id="2ad25-282">외부 DTD 하위 집합의 파일 위치를 지정하는 URL입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-282">Specifies the URL of the file location for the external DTD subset.</span>
          </span>
        </param>
        <param name="internalSubset">
          <span data-ttu-id="2ad25-283">문서 형식의 DTD 내부 하위 집합이거나 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-283">The DTD internal subset of the document type or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ad25-284">새 <see cref="T:System.Xml.XmlDocumentType" /> 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-284">Returns a new <see cref="T:System.Xml.XmlDocumentType" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ad25-285">새 <see langword="XmlDocumentType" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-285">The new <see langword="XmlDocumentType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-286">반환 된 노드는 구문 <xref:System.Xml.XmlDocumentType.Entities%2A> 및 <xref:System.Xml.XmlDocumentType.Notations%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-286">The returned node will have parsed <xref:System.Xml.XmlDocumentType.Entities%2A> and <xref:System.Xml.XmlDocumentType.Notations%2A> collections.</span></span>  
  
 <span data-ttu-id="2ad25-287">이 메서드는 문서의 컨텍스트에서 새 개체가 만들어지지만, 것 자동 추가 되지 않습니다 새 개체는 문서 트리에서를 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-287">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="2ad25-288">새 개체를 추가 하려면 명시적으로 노드 삽입 메서드 중 하나 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-288">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="2ad25-289">문서 노드 내에서 여러 개의 DocumentType 노드는 W3C Extensible Markup Language (XML) 1.0 권장 사항에 따라 (www.w3.org/TR/1998/REC-xml-19980210), 에서만 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-289">According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), DocumentType nodes are only allowed within Document nodes.</span></span> <span data-ttu-id="2ad25-290">각 <xref:System.Xml.XmlDocument> DocumentType 노드를 하나만 가질 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-290">Each <xref:System.Xml.XmlDocument> can have only one DocumentType node.</span></span> <span data-ttu-id="2ad25-291">루트 요소 앞에 DocumentType 노드를 삽입 해야 합니다는 `XmlDocument` (문서에 이미 루트 요소를 추가할 수 없습니다 DocumentType 노드).</span><span class="sxs-lookup"><span data-stu-id="2ad25-291">The DocumentType node must also be inserted before the root element of the `XmlDocument` (if the document already has a root element, you cannot add a DocumentType node).</span></span>  
  
 <span data-ttu-id="2ad25-292">전달된 된 매개 변수 결합 하는 유효한 경우 `XmlDocumentType`, 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-292">If the passed parameters do not combine to build a valid `XmlDocumentType`, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ad25-293">다음 예제에서는 DocumentType 노드를 만들고 XML 문서에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-293">The following example creates a DocumentType node and adds it to an XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateDocumentType Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateDocumentType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateDocumentType Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateDocumentType Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateDocumentType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateDocumentType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="2ad25-294">
            <para>이 메서드는 상속 요청. 재정의 하려면 완전 신뢰가 필요는 <see langword="CreateDocumentType" /> 메서드.  이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-294">
              <para>This method has an inheritance demand. Full trust is required to override the <see langword="CreateDocumentType" /> method.  This method is a Microsoft extension to the Document Object Model (DOM).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateElement">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2ad25-295">
            <see cref="T:System.Xml.XmlElement" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-295">Creates an <see cref="T:System.Xml.XmlElement" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateElement">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement CreateElement (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlElement CreateElement(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateElement (name As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlElement ^ CreateElement(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="2ad25-296">요소의 정규화된 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-296">The qualified name of the element.</span>
          </span>
          <span data-ttu-id="2ad25-297">이름에 콜론이 포함되어 있는 경우 <see cref="P:System.Xml.XmlNode.Prefix" /> 속성은 콜론 앞의 이름 부분을 반영하고 <see cref="P:System.Xml.XmlDocument.LocalName" /> 속성은 콜론 뒤의 이름 부분을 반영합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-297">If the name contains a colon then the <see cref="P:System.Xml.XmlNode.Prefix" /> property reflects the part of the name preceding the colon and the <see cref="P:System.Xml.XmlDocument.LocalName" /> property reflects the part of the name after the colon.</span>
          </span>
          <span data-ttu-id="2ad25-298">정규화된 이름에는 'xmlns'라는 접두사가 포함될 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-298">The qualified name cannot include a prefix of'xmlns'.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ad25-299">지정된 이름을 가진 요소를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-299">Creates an element with the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ad25-300">새 <see langword="XmlElement" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-300">The new <see langword="XmlElement" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-301">인스턴스가 구현 반환 되는 `XmlElement` 인터페이스, 하므로 반환 된 개체에서 직접 기본 특성이 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-301">Note that the instance returned implements the `XmlElement` interface, so default attributes would be created directly on the returned object.</span></span>  
  
 <span data-ttu-id="2ad25-302">이 메서드는 문서의 컨텍스트에서 새 개체가 만들어지지만, 것 자동 추가 되지 않습니다 새 개체는 문서 트리에서를 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-302">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="2ad25-303">새 개체를 추가 하려면 명시적으로 노드 삽입 메서드 중 하나 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-303">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="2ad25-304">W3C Extensible Markup Language (XML) 1.0 권장 사항에 따라 (www.w3.org/TR/1998/REC-xml-19980210), 요소 노드를 사용할 EntityReference 노드 및 문서와 요소 노드 내의 EntityReference 노드의 자식이 아닌 경우는 특성 노드</span><span class="sxs-lookup"><span data-stu-id="2ad25-304">According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), Element nodes are allowed within Document and Element nodes, and in EntityReference nodes when the EntityReference node is not a child of an Attribute node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ad25-305">다음 예제에서는 새 요소를 만들고 문서에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-305">The following example creates a new element and adds it to the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateElement">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement CreateElement (string qualifiedName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlElement CreateElement(string qualifiedName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateElement(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateElement (qualifiedName As String, namespaceURI As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlElement ^ CreateElement(System::String ^ qualifiedName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="qualifiedName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="qualifiedName">
          <span data-ttu-id="2ad25-306">요소의 정규화된 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-306">The qualified name of the element.</span>
          </span>
          <span data-ttu-id="2ad25-307">이름에 콜론이 포함되어 있는 경우, <see cref="P:System.Xml.XmlNode.Prefix" /> 속성은 콜론 앞의 이름 부분을 반영하고 <see cref="P:System.Xml.XmlDocument.LocalName" /> 속성은 콜론 뒤의 이름 부분을 반영합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-307">If the name contains a colon then the <see cref="P:System.Xml.XmlNode.Prefix" /> property will reflect the part of the name preceding the colon and the <see cref="P:System.Xml.XmlDocument.LocalName" /> property will reflect the part of the name after the colon.</span>
          </span>
          <span data-ttu-id="2ad25-308">정규화된 이름에는 'xmlns'라는 접두사가 포함될 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-308">The qualified name cannot include a prefix of'xmlns'.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="2ad25-309">요소의 네임스페이스 URI입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-309">The namespace URI of the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ad25-310">정규화된 이름과 <see cref="P:System.Xml.XmlNode.NamespaceURI" />를 가진 <see cref="T:System.Xml.XmlElement" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-310">Creates an <see cref="T:System.Xml.XmlElement" /> with the qualified name and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ad25-311">새 <see langword="XmlElement" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-311">The new <see langword="XmlElement" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-312">다음 C# 코드</span><span class="sxs-lookup"><span data-stu-id="2ad25-312">The following C# code</span></span>  
  
```csharp  
XmlElement elem;  
elem=doc.CreateElement("xy:item", "urn:abc");  
```  
  
 <span data-ttu-id="2ad25-313">다음 XML 텍스트에 해당 하는 요소에 대 한 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-313">results in an element that is equivalent to the following XML text.</span></span>  
  
```  
<xy:item  
       xmlns:xy="urn:abc"/>  
```  
  
 <span data-ttu-id="2ad25-314">이 메서드는 문서의 컨텍스트에서 새 개체가 만들어지지만, 것 자동 추가 되지 않습니다 새 개체는 문서 트리에서를 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-314">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="2ad25-315">새 개체를 추가 하려면 명시적으로 노드 삽입 메서드 중 하나 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-315">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="2ad25-316">W3C Extensible Markup Language (XML) 1.0 권장 사항에 따라 (www.w3.org/TR/1998/REC-xml-19980210), 요소 노드를 사용할 EntityReference 노드 및 문서와 요소 노드 내의 EntityReference 노드의 자식이 아닌 경우는 특성 노드</span><span class="sxs-lookup"><span data-stu-id="2ad25-316">According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), Element nodes are allowed within Document and Element nodes, and in EntityReference nodes when the EntityReference node is not a child of an Attribute node.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateElement">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement CreateElement (string prefix, string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlElement CreateElement(string prefix, string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateElement(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateElement (prefix As String, localName As String, namespaceURI As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlElement ^ CreateElement(System::String ^ prefix, System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="2ad25-317">새 요소의 접두사입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-317">The prefix of the new element (if any).</span>
          </span>
          <span data-ttu-id="2ad25-318">String.Empty와 <see langword="null" />은 같습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-318">String.Empty and <see langword="null" /> are equivalent.</span>
          </span>
        </param>
        <param name="localName">
          <span data-ttu-id="2ad25-319">새 요소의 로컬 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-319">The local name of the new element.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="2ad25-320">새 요소의 네임스페이스 URI입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-320">The namespace URI of the new element (if any).</span>
          </span>
          <span data-ttu-id="2ad25-321">String.Empty와 <see langword="null" />은 같습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-321">String.Empty and <see langword="null" /> are equivalent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ad25-322">지정된 <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> 및 <see cref="P:System.Xml.XmlNode.NamespaceURI" />가 있는 요소를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-322">Creates an element with the specified <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" />, and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ad25-323">새 <see cref="T:System.Xml.XmlElement" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-323">The new <see cref="T:System.Xml.XmlElement" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-324">다음 C# 코드</span><span class="sxs-lookup"><span data-stu-id="2ad25-324">The following C# code</span></span>  
  
```csharp  
XmlElement elem;  
elem=doc.CreateElement("xy", "item", "urn:abc");  
```  
  
 <span data-ttu-id="2ad25-325">다음 XML 텍스트와 같은 요소를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-325">creates an element equivalent to the following XML text:</span></span>  
  
```  
<xy:item xmlns:xy="urn:abc"/>  
```  
  
 <span data-ttu-id="2ad25-326">이 메서드는 문서의 컨텍스트에서 새 개체가 만들어지지만, 것 자동 추가 되지 않습니다 새 개체는 문서 트리에서를 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-326">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="2ad25-327">새 개체를 추가 하려면 명시적으로 노드 삽입 메서드 중 하나 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-327">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="2ad25-328">W3C Extensible Markup Language (XML) 1.0 권장 사항에 따라 (www.w3.org/TR/1998/REC-xml-19980210), 요소 노드 때 허용 됩니다 EntityReference 노드 및 문서와 요소 노드 내의 EntityReference 특성 노드를 벗어납니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-328">According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), Element nodes are allowed within Document and Element nodes, and in EntityReference nodes when the EntityReference is outside an Attribute node.</span></span>  
  
 <span data-ttu-id="2ad25-329">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-329">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ad25-330">다음 예제에서는 기존 XML 문서에 새 요소를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-330">The following example adds a new element to the existing XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateElement2 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateElement2 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateElement2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEntityReference">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlEntityReference CreateEntityReference (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlEntityReference CreateEntityReference(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateEntityReference(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateEntityReference (name As String) As XmlEntityReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlEntityReference ^ CreateEntityReference(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlEntityReference</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="2ad25-331">엔터티 참조의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-331">The name of the entity reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ad25-332">지정된 이름을 가진 <see cref="T:System.Xml.XmlEntityReference" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-332">Creates an <see cref="T:System.Xml.XmlEntityReference" /> with the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ad25-333">새 <see langword="XmlEntityReference" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-333">The new <see langword="XmlEntityReference" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-334">경우 참조 된 엔터티가 알려져의 자식 목록에서 `XmlEntityReference` 노드는 해당 하는 동일 이루어집니다 <xref:System.Xml.XmlEntity> 노드.</span><span class="sxs-lookup"><span data-stu-id="2ad25-334">If the referenced entity is known, the child list of the `XmlEntityReference` node is made the same as that of the corresponding <xref:System.Xml.XmlEntity> node.</span></span>  
  
 <span data-ttu-id="2ad25-335">엔터티 참조에 대 한 대체 텍스트에서 사용 되는 네임 스페이스 (예를 들어 엔터티 참조 노드를 삽입할 때 문서에) 엔터티 참조 노드의 부모 먼저 설정 된 시간에 바인딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-335">The namespaces used in the replacement text for the entity reference are bound at the time the parent of the entity reference node is first set (for example, when the entity reference node is inserted into the document).</span></span> <span data-ttu-id="2ad25-336">예를 들어 다음 엔터티일 경우:</span><span class="sxs-lookup"><span data-stu-id="2ad25-336">For example, given the following entity:</span></span>  
  
```  
<!ENTITY a "<b>test</b>">  
```  
  
 <span data-ttu-id="2ad25-337">호출 하는 경우 `CreateEntityReference("a")` 얻게 EntityReference 유형의 단일 노드에 자식이 없는 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-337">If you call `CreateEntityReference("a")` you get back a single node of type EntityReference with no children.</span></span> <span data-ttu-id="2ad25-338">다음 노드를 자식으로이 노드를 추가 하는 경우</span><span class="sxs-lookup"><span data-stu-id="2ad25-338">If you append this node as a child of the following node,</span></span>  
  
```  
<item xmlns="urn:1"/>  
```  
  
 <span data-ttu-id="2ad25-339">그런 다음 호출 시 <xref:System.Xml.XmlNode.AppendChild%2A>, 새로 만들어진된 entityreference 노드 부모 설정 하 고이 네임 스페이스 컨텍스트에서 자식을 확장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-339">then, at the time of calling <xref:System.Xml.XmlNode.AppendChild%2A>, the parent of the newly created entity reference node is set and the children are expanded in this namespace context.</span></span> <span data-ttu-id="2ad25-340">자식 요소 노드의 `b` NamespaceURI 같음 갖습니다 `urn:1`합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-340">The child element node `b` will have NamespaceURI equal to `urn:1`.</span></span> <span data-ttu-id="2ad25-341">엔터티 참조의 자식 노드가 엔터티 참조에 서로 다른 기본 네임 스페이스 컨텍스트가 있는 문서에 있는 위치로 이동 하는 경우에 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-341">The child nodes of the entity reference remain the same even if you move the entity reference to a place in the document that has a different default namespace context.</span></span> <span data-ttu-id="2ad25-342">이 문제가 발생 하지에 대 한 기존 엔터티 참조 노드를 복제 하는 엔터티 참조 또는 제거 하 고 삽입할 때 <xref:System.Xml.XmlDocument.CloneNode%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-342">This does not happen for existing entity reference nodes when you remove and insert them or for entity references that you clone with <xref:System.Xml.XmlDocument.CloneNode%2A>.</span></span> <span data-ttu-id="2ad25-343">새로 만든된 엔터티 참조에만 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-343">It only happens for newly created entity references.</span></span>  
  
 <span data-ttu-id="2ad25-344">해당 엔터티를 정의 하지 않은 DocumentType에 엔터티 참조 노드를 추가 하는 엔터티 참조는 정의 되어 있지 않으므로 유일한 자식 노드 빈 텍스트 노드가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-344">If the corresponding entity is not defined in the DocumentType when the entity reference node is added, because the entity reference is not defined, its only child node will be an empty text node.</span></span>  
  
 <span data-ttu-id="2ad25-345">기본 제공 엔터티 amp, lt, gt, a p o s, 및 q u o t도 허용 여부와 적절 한 확장 된 문자 값을 가진 자식 텍스트 노드를 갖게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-345">The built-in entities amp, lt, gt, apos, and quot are also allowed, and they will have a child text node with the appropriate expanded character value.</span></span>  
  
 <span data-ttu-id="2ad25-346">이 메서드는 문서의 컨텍스트에서 새 개체가 만들어지지만, 것 자동 추가 되지 않습니다 새 개체는 문서 트리에서를 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-346">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="2ad25-347">새 개체를 추가 하려면 명시적으로 노드 삽입 메서드 중 하나 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-347">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="2ad25-348">W3C Extensible Markup Language (XML) 1.0 권장 사항에 따라 (www.w3.org/TR/1998/REC-xml-19980210), EntityReference 노드는 요소, 특성 및 EntityReference 노드 내 에서만 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-348">According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), EntityReference nodes are only allowed within Element, Attribute and EntityReference nodes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ad25-349">다음 예제에서는 두 개의 엔터티 참조 노드를 만들고 XML 문서에 삽입 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-349">The following example creates two entity reference nodes and inserts them into an XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateEntityReference Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateEntityReference Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateEntityReference Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateEntityReference Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateEntityReference Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateEntityReference Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2ad25-350">이름이 잘못되었습니다(예: '#'으로 시작하는 이름은 올바르지 않음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-350">The name is invalid (for example, names starting with'#' are invalid.)</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateNavigator">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2ad25-351">이 문서를 탐색하기 위한 새로운 <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-351">Creates a new <see cref="T:System.Xml.XPath.XPathNavigator" /> object for navigating this document.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="public override System.Xml.XPath.XPathNavigator CreateNavigator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XPath.XPathNavigator CreateNavigator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateNavigator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateNavigator () As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XPath::XPathNavigator ^ CreateNavigator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2ad25-352">이 문서를 탐색하기 위한 새로운 <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-352">Creates a new <see cref="T:System.Xml.XPath.XPathNavigator" /> object for navigating this document.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ad25-353">
            <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-353">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-354">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-354">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ad25-355">참조 <xref:System.Xml.XmlNode.CreateNavigator%2A?displayProperty=nameWithType> 이 메서드를 사용 하는 예제에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-355">See <xref:System.Xml.XmlNode.CreateNavigator%2A?displayProperty=nameWithType> for an example using this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="protected internal virtual System.Xml.XPath.XPathNavigator CreateNavigator (System.Xml.XmlNode node);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Xml.XPath.XPathNavigator CreateNavigator(class System.Xml.XmlNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateNavigator(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateNavigator (node As XmlNode) As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Xml::XPath::XPathNavigator ^ CreateNavigator(System::Xml::XmlNode ^ node);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="2ad25-356">검색기를 맨 처음 배치할 <see cref="T:System.Xml.XmlNode" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-356">The <see cref="T:System.Xml.XmlNode" /> you want the navigator initially positioned on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ad25-357">지정된 <see cref="T:System.Xml.XmlNode" />에 있는 이 문서를 탐색하기 위한 <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-357">Creates an <see cref="T:System.Xml.XPath.XPathNavigator" /> object for navigating this document positioned on the <see cref="T:System.Xml.XmlNode" /> specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ad25-358">
            <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-358">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-359">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-359">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ad25-360">참조 <xref:System.Xml.XmlNode.CreateNavigator%2A?displayProperty=nameWithType> 이 메서드를 사용 하는 예제에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-360">See <xref:System.Xml.XmlNode.CreateNavigator%2A?displayProperty=nameWithType> for an example using this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateNode">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2ad25-361">
            <see cref="T:System.Xml.XmlNode" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-361">Creates an <see cref="T:System.Xml.XmlNode" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode CreateNode (string nodeTypeString, string name, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode CreateNode(string nodeTypeString, string name, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateNode(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateNode (nodeTypeString As String, name As String, namespaceURI As String) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ CreateNode(System::String ^ nodeTypeString, System::String ^ name, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeTypeString" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="nodeTypeString">
          <span data-ttu-id="2ad25-362">새 노드의 <see cref="T:System.Xml.XmlNodeType" /> 문자열 버전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-362">String version of the <see cref="T:System.Xml.XmlNodeType" /> of the new node.</span>
          </span>
          <span data-ttu-id="2ad25-363">이 매개 변수는 아래 테이블에 나열된 값 중 하나여야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-363">This parameter must be one of the values listed in the table below.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="2ad25-364">새 노드의 정규화된 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-364">The qualified name of the new node.</span>
          </span>
          <span data-ttu-id="2ad25-365">이름에 콜론이 포함된 경우에는 <see cref="P:System.Xml.XmlNode.Prefix" /> 및 <see cref="P:System.Xml.XmlDocument.LocalName" /> 구성 요소로 구문 분석됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-365">If the name contains a colon, it is parsed into <see cref="P:System.Xml.XmlNode.Prefix" /> and <see cref="P:System.Xml.XmlDocument.LocalName" /> components.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="2ad25-366">새 노드의 네임스페이스 URI입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-366">The namespace URI of the new node.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ad25-367">지정된 노드 형식, <see cref="P:System.Xml.XmlDocument.Name" /> 및 <see cref="P:System.Xml.XmlNode.NamespaceURI" />가 있는 <see cref="T:System.Xml.XmlNode" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-367">Creates an <see cref="T:System.Xml.XmlNode" /> with the specified node type, <see cref="P:System.Xml.XmlDocument.Name" />, and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ad25-368">새 <see langword="XmlNode" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-368">The new <see langword="XmlNode" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-369">`nodeTypeString` 매개 변수는 대/소문자 구분 하 고 다음 표에 있는 값 중 하나 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-369">The `nodeTypeString` parameter is case sensitive and must be one of the values in the following table.</span></span>  
  
|<span data-ttu-id="2ad25-370">nodeTypeString</span><span class="sxs-lookup"><span data-stu-id="2ad25-370">nodeTypeString</span></span>|<span data-ttu-id="2ad25-371">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="2ad25-371">XmlNodeType</span></span>|  
|--------------------|-----------------|  
|<span data-ttu-id="2ad25-372">특성</span><span class="sxs-lookup"><span data-stu-id="2ad25-372">attribute</span></span>|<span data-ttu-id="2ad25-373">특성</span><span class="sxs-lookup"><span data-stu-id="2ad25-373">Attribute</span></span>|  
|<span data-ttu-id="2ad25-374">cdatasection</span><span class="sxs-lookup"><span data-stu-id="2ad25-374">cdatasection</span></span>|<span data-ttu-id="2ad25-375">CDATA</span><span class="sxs-lookup"><span data-stu-id="2ad25-375">CDATA</span></span>|  
|<span data-ttu-id="2ad25-376">주석</span><span class="sxs-lookup"><span data-stu-id="2ad25-376">comment</span></span>|<span data-ttu-id="2ad25-377">주석</span><span class="sxs-lookup"><span data-stu-id="2ad25-377">Comment</span></span>|  
|<span data-ttu-id="2ad25-378">문서</span><span class="sxs-lookup"><span data-stu-id="2ad25-378">document</span></span>|<span data-ttu-id="2ad25-379">문서</span><span class="sxs-lookup"><span data-stu-id="2ad25-379">Document</span></span>|  
|<span data-ttu-id="2ad25-380">documentfragment</span><span class="sxs-lookup"><span data-stu-id="2ad25-380">documentfragment</span></span>|<span data-ttu-id="2ad25-381">DocumentFragment</span><span class="sxs-lookup"><span data-stu-id="2ad25-381">DocumentFragment</span></span>|  
|<span data-ttu-id="2ad25-382">documenttype</span><span class="sxs-lookup"><span data-stu-id="2ad25-382">documenttype</span></span>|<span data-ttu-id="2ad25-383">DocumentType</span><span class="sxs-lookup"><span data-stu-id="2ad25-383">DocumentType</span></span>|  
|<span data-ttu-id="2ad25-384">요소</span><span class="sxs-lookup"><span data-stu-id="2ad25-384">element</span></span>|<span data-ttu-id="2ad25-385">요소</span><span class="sxs-lookup"><span data-stu-id="2ad25-385">Element</span></span>|  
|<span data-ttu-id="2ad25-386">entityreference</span><span class="sxs-lookup"><span data-stu-id="2ad25-386">entityreference</span></span>|<span data-ttu-id="2ad25-387">EntityReference</span><span class="sxs-lookup"><span data-stu-id="2ad25-387">EntityReference</span></span>|  
|<span data-ttu-id="2ad25-388">processinginstruction</span><span class="sxs-lookup"><span data-stu-id="2ad25-388">processinginstruction</span></span>|<span data-ttu-id="2ad25-389">ProcessingInstruction</span><span class="sxs-lookup"><span data-stu-id="2ad25-389">ProcessingInstruction</span></span>|  
|<span data-ttu-id="2ad25-390">significantwhitespace</span><span class="sxs-lookup"><span data-stu-id="2ad25-390">significantwhitespace</span></span>|<span data-ttu-id="2ad25-391">SignificantWhitespace</span><span class="sxs-lookup"><span data-stu-id="2ad25-391">SignificantWhitespace</span></span>|  
|<span data-ttu-id="2ad25-392">텍스트</span><span class="sxs-lookup"><span data-stu-id="2ad25-392">text</span></span>|<span data-ttu-id="2ad25-393">텍스트</span><span class="sxs-lookup"><span data-stu-id="2ad25-393">Text</span></span>|  
|<span data-ttu-id="2ad25-394">whitespace</span><span class="sxs-lookup"><span data-stu-id="2ad25-394">whitespace</span></span>|<span data-ttu-id="2ad25-395">Whitespace</span><span class="sxs-lookup"><span data-stu-id="2ad25-395">Whitespace</span></span>|  
  
 <span data-ttu-id="2ad25-396">이 메서드는 문서의 컨텍스트에서 새 개체가 만들어지지만, 것 자동 추가 되지 않습니다 새 개체는 문서 트리에서를 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-396">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="2ad25-397">새 개체를 추가 하려면 명시적으로 노드 삽입 메서드 중 하나 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-397">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="2ad25-398">다음 표에서 어떤 NodeType 보여 줍니다. [행]는 W3C Extensible Markup Language (XML) 1.0 권장 사항 (www.w3.org/TR/1998/REC-xml-19980210)에 따라 다른 NodeType [column] 내에서 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-398">The following table shows you what NodeType[row] is allowed inside another NodeType[column] according to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210).</span></span>  
  
||<span data-ttu-id="2ad25-399">문서</span><span class="sxs-lookup"><span data-stu-id="2ad25-399">Document</span></span>|<span data-ttu-id="2ad25-400">DocumentType</span><span class="sxs-lookup"><span data-stu-id="2ad25-400">DocumentType</span></span>|<span data-ttu-id="2ad25-401">XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="2ad25-401">XmlDeclaration</span></span>|<span data-ttu-id="2ad25-402">요소</span><span class="sxs-lookup"><span data-stu-id="2ad25-402">Element</span></span>|<span data-ttu-id="2ad25-403">특성</span><span class="sxs-lookup"><span data-stu-id="2ad25-403">Attribute</span></span>|<span data-ttu-id="2ad25-404">텍스트</span><span class="sxs-lookup"><span data-stu-id="2ad25-404">Text</span></span>|<span data-ttu-id="2ad25-405">CDATA</span><span class="sxs-lookup"><span data-stu-id="2ad25-405">CDATA</span></span>|<span data-ttu-id="2ad25-406">마크업</span><span class="sxs-lookup"><span data-stu-id="2ad25-406">Markup</span></span>|<span data-ttu-id="2ad25-407">EntityReference</span><span class="sxs-lookup"><span data-stu-id="2ad25-407">EntityReference</span></span>|  
|------|--------------|------------------|--------------------|-------------|---------------|----------|-----------|------------|---------------------|  
|`Document`|<span data-ttu-id="2ad25-408">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-408">no</span></span>|<span data-ttu-id="2ad25-409">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-409">no</span></span>|<span data-ttu-id="2ad25-410">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-410">no</span></span>|<span data-ttu-id="2ad25-411">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-411">no</span></span>|<span data-ttu-id="2ad25-412">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-412">no</span></span>|<span data-ttu-id="2ad25-413">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-413">no</span></span>|<span data-ttu-id="2ad25-414">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-414">no</span></span>|<span data-ttu-id="2ad25-415">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-415">no</span></span>|<span data-ttu-id="2ad25-416">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-416">no</span></span>|  
|`DocumentType`|<span data-ttu-id="2ad25-417">예</span><span class="sxs-lookup"><span data-stu-id="2ad25-417">yes</span></span>|<span data-ttu-id="2ad25-418">no</span><span class="sxs-lookup"><span data-stu-id="2ad25-418">no</span></span>|<span data-ttu-id="2ad25-419">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-419">no</span></span>|<span data-ttu-id="2ad25-420">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-420">no</span></span>|<span data-ttu-id="2ad25-421">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-421">no</span></span>|<span data-ttu-id="2ad25-422">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-422">no</span></span>|<span data-ttu-id="2ad25-423">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-423">no</span></span>|<span data-ttu-id="2ad25-424">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-424">no</span></span>|<span data-ttu-id="2ad25-425">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-425">no</span></span>|  
|`XmlDeclaration`|<span data-ttu-id="2ad25-426">예 \*</span><span class="sxs-lookup"><span data-stu-id="2ad25-426">yes\*</span></span>|<span data-ttu-id="2ad25-427">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-427">no</span></span>|<span data-ttu-id="2ad25-428">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-428">no</span></span>|<span data-ttu-id="2ad25-429">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-429">no</span></span>|<span data-ttu-id="2ad25-430">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-430">no</span></span>|<span data-ttu-id="2ad25-431">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-431">no</span></span>|<span data-ttu-id="2ad25-432">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-432">no</span></span>|<span data-ttu-id="2ad25-433">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-433">no</span></span>|<span data-ttu-id="2ad25-434">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-434">no</span></span>|  
|`Element`|<span data-ttu-id="2ad25-435">예</span><span class="sxs-lookup"><span data-stu-id="2ad25-435">yes</span></span>|<span data-ttu-id="2ad25-436">no</span><span class="sxs-lookup"><span data-stu-id="2ad25-436">no</span></span>|<span data-ttu-id="2ad25-437">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-437">no</span></span>|<span data-ttu-id="2ad25-438">예</span><span class="sxs-lookup"><span data-stu-id="2ad25-438">yes</span></span>|<span data-ttu-id="2ad25-439">no</span><span class="sxs-lookup"><span data-stu-id="2ad25-439">no</span></span>|<span data-ttu-id="2ad25-440">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-440">no</span></span>|<span data-ttu-id="2ad25-441">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-441">no</span></span>|<span data-ttu-id="2ad25-442">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-442">no</span></span>|<span data-ttu-id="2ad25-443">예 \* \* \*</span><span class="sxs-lookup"><span data-stu-id="2ad25-443">yes\*\*\*</span></span>|  
|`Attribute`|<span data-ttu-id="2ad25-444">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-444">no</span></span>|<span data-ttu-id="2ad25-445">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-445">no</span></span>|<span data-ttu-id="2ad25-446">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-446">no</span></span>|<span data-ttu-id="2ad25-447">예 \* \* \*</span><span class="sxs-lookup"><span data-stu-id="2ad25-447">yes****</span></span>|<span data-ttu-id="2ad25-448">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-448">no</span></span>|<span data-ttu-id="2ad25-449">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-449">no</span></span>|<span data-ttu-id="2ad25-450">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-450">no</span></span>|<span data-ttu-id="2ad25-451">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-451">no</span></span>|<span data-ttu-id="2ad25-452">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-452">no</span></span>|  
|`Text`|<span data-ttu-id="2ad25-453">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-453">no</span></span>|<span data-ttu-id="2ad25-454">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-454">no</span></span>|<span data-ttu-id="2ad25-455">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-455">no</span></span>|<span data-ttu-id="2ad25-456">예</span><span class="sxs-lookup"><span data-stu-id="2ad25-456">yes</span></span>|<span data-ttu-id="2ad25-457">예</span><span class="sxs-lookup"><span data-stu-id="2ad25-457">yes</span></span>|<span data-ttu-id="2ad25-458">no</span><span class="sxs-lookup"><span data-stu-id="2ad25-458">no</span></span>|<span data-ttu-id="2ad25-459">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-459">no</span></span>|<span data-ttu-id="2ad25-460">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-460">no</span></span>|<span data-ttu-id="2ad25-461">예</span><span class="sxs-lookup"><span data-stu-id="2ad25-461">yes</span></span>|  
|`CDATA`|<span data-ttu-id="2ad25-462">no</span><span class="sxs-lookup"><span data-stu-id="2ad25-462">no</span></span>|<span data-ttu-id="2ad25-463">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-463">no</span></span>|<span data-ttu-id="2ad25-464">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-464">no</span></span>|<span data-ttu-id="2ad25-465">예</span><span class="sxs-lookup"><span data-stu-id="2ad25-465">yes</span></span>|<span data-ttu-id="2ad25-466">no</span><span class="sxs-lookup"><span data-stu-id="2ad25-466">no</span></span>|<span data-ttu-id="2ad25-467">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-467">no</span></span>|<span data-ttu-id="2ad25-468">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-468">no</span></span>|<span data-ttu-id="2ad25-469">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-469">no</span></span>|<span data-ttu-id="2ad25-470">예 \* \* \*</span><span class="sxs-lookup"><span data-stu-id="2ad25-470">yes\*\*\*</span></span>|  
|`Markup**`|<span data-ttu-id="2ad25-471">예</span><span class="sxs-lookup"><span data-stu-id="2ad25-471">yes</span></span>|<span data-ttu-id="2ad25-472">no</span><span class="sxs-lookup"><span data-stu-id="2ad25-472">no</span></span>|<span data-ttu-id="2ad25-473">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-473">no</span></span>|<span data-ttu-id="2ad25-474">예</span><span class="sxs-lookup"><span data-stu-id="2ad25-474">yes</span></span>|<span data-ttu-id="2ad25-475">no</span><span class="sxs-lookup"><span data-stu-id="2ad25-475">no</span></span>|<span data-ttu-id="2ad25-476">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-476">no</span></span>|<span data-ttu-id="2ad25-477">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-477">no</span></span>|<span data-ttu-id="2ad25-478">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-478">no</span></span>|<span data-ttu-id="2ad25-479">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-479">no</span></span>|  
|`EntityReference`|<span data-ttu-id="2ad25-480">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-480">no</span></span>|<span data-ttu-id="2ad25-481">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-481">no</span></span>|<span data-ttu-id="2ad25-482">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-482">no</span></span>|<span data-ttu-id="2ad25-483">예</span><span class="sxs-lookup"><span data-stu-id="2ad25-483">yes</span></span>|<span data-ttu-id="2ad25-484">예</span><span class="sxs-lookup"><span data-stu-id="2ad25-484">yes</span></span>|<span data-ttu-id="2ad25-485">no</span><span class="sxs-lookup"><span data-stu-id="2ad25-485">no</span></span>|<span data-ttu-id="2ad25-486">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-486">no</span></span>|<span data-ttu-id="2ad25-487">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-487">no</span></span>|<span data-ttu-id="2ad25-488">예</span><span class="sxs-lookup"><span data-stu-id="2ad25-488">yes</span></span>|  
  
 <span data-ttu-id="2ad25-489">\* XmlDeclaration 노드는 문서 노드의 첫 번째 자식 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-489">\* The XmlDeclaration node must be the first child of the Document node.</span></span>  
  
 <span data-ttu-id="2ad25-490">* * 태그 ProcessingInstruction 및 주석 노드를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-490">** Markup includes ProcessingInstruction and Comment nodes.</span></span>  
  
 <span data-ttu-id="2ad25-491">요소 및 CDATA 노드에 EntityReference 노드 특성 노드의 자식이 아닙니다. 때 EntityReference 노드의 에서만 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-491">\*\*\* Element and CDATA nodes are only allowed in EntityReference nodes when the EntityReference node is not a child of an Attribute node.</span></span>  
  
 <span data-ttu-id="2ad25-492">특성은 요소 노드의 자식이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-492">**** Attributes are not children of an Element node.</span></span> <span data-ttu-id="2ad25-493">특성은 요소 노드가 속해 있는 특성 컬렉션 안에 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-493">Attributes are contained inside an attribute collection that belongs to an Element node.</span></span>  
  
 <span data-ttu-id="2ad25-494">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-494">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ad25-495">다음 예제에서는 새 요소를 만들고 문서에 삽입 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-495">The following example creates a new element and inserts it into the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateNode1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateNode1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateNode1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2ad25-496">이름이 제공되지 않았으며 <see langword="XmlNodeType" />에 이름이 필요합니다. 또는 <paramref name="nodeTypeString" />이(가) 아래 나열된 문자열 중 하나가 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-496">The name was not provided and the <see langword="XmlNodeType" /> requires a name; or <paramref name="nodeTypeString" /> is not one of the strings listed below.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode CreateNode (System.Xml.XmlNodeType type, string name, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode CreateNode(valuetype System.Xml.XmlNodeType type, string name, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateNode (type As XmlNodeType, name As String, namespaceURI As String) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ CreateNode(System::Xml::XmlNodeType type, System::String ^ name, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.XmlNodeType" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="2ad25-497">새 노드의 <see langword="XmlNodeType" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-497">The <see langword="XmlNodeType" /> of the new node.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="2ad25-498">새 노드의 정규화된 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-498">The qualified name of the new node.</span>
          </span>
          <span data-ttu-id="2ad25-499">이름에 콜론이 포함되어 있으면 <see cref="P:System.Xml.XmlNode.Prefix" /> 및 <see cref="P:System.Xml.XmlDocument.LocalName" /> 구성 요소로 구문 분석됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-499">If the name contains a colon then it is parsed into <see cref="P:System.Xml.XmlNode.Prefix" /> and <see cref="P:System.Xml.XmlDocument.LocalName" /> components.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="2ad25-500">새 노드의 네임스페이스 URI입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-500">The namespace URI of the new node.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ad25-501">지정된 <see cref="T:System.Xml.XmlNodeType" />, <see cref="P:System.Xml.XmlDocument.Name" /> 및 <see cref="P:System.Xml.XmlNode.NamespaceURI" />가 있는 <see cref="T:System.Xml.XmlNode" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-501">Creates an <see cref="T:System.Xml.XmlNode" /> with the specified <see cref="T:System.Xml.XmlNodeType" />, <see cref="P:System.Xml.XmlDocument.Name" />, and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ad25-502">새 <see langword="XmlNode" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-502">The new <see langword="XmlNode" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-503">이 메서드는 문서의 컨텍스트에서 새 개체가 만들어지지만, 것 자동 추가 되지 않습니다 새 개체는 문서 트리에서를 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-503">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="2ad25-504">새 개체를 추가 하려면 명시적으로 노드 삽입 메서드 중 하나 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-504">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="2ad25-505">다음 표에서 어떤 NodeType 보여 줍니다. [행]는 W3C Extensible Markup Language (XML) 1.0 권장 사항 (www.w3.org/TR/1998/REC-xml-19980210)에 따라 다른 NodeType [column] 내에서 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-505">The following table shows you what NodeType[row] is allowed inside another NodeType[column] according to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210).</span></span>  
  
||<span data-ttu-id="2ad25-506">문서</span><span class="sxs-lookup"><span data-stu-id="2ad25-506">Document</span></span>|<span data-ttu-id="2ad25-507">DocumentType</span><span class="sxs-lookup"><span data-stu-id="2ad25-507">DocumentType</span></span>|<span data-ttu-id="2ad25-508">XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="2ad25-508">XmlDeclaration</span></span>|<span data-ttu-id="2ad25-509">요소</span><span class="sxs-lookup"><span data-stu-id="2ad25-509">Element</span></span>|<span data-ttu-id="2ad25-510">특성</span><span class="sxs-lookup"><span data-stu-id="2ad25-510">Attribute</span></span>|<span data-ttu-id="2ad25-511">텍스트</span><span class="sxs-lookup"><span data-stu-id="2ad25-511">Text</span></span>|<span data-ttu-id="2ad25-512">CDATA</span><span class="sxs-lookup"><span data-stu-id="2ad25-512">CDATA</span></span>|<span data-ttu-id="2ad25-513">마크업</span><span class="sxs-lookup"><span data-stu-id="2ad25-513">Markup</span></span>|<span data-ttu-id="2ad25-514">EntityReference</span><span class="sxs-lookup"><span data-stu-id="2ad25-514">EntityReference</span></span>|  
|------|--------------|------------------|--------------------|-------------|---------------|----------|-----------|------------|---------------------|  
|`Document`|<span data-ttu-id="2ad25-515">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-515">no</span></span>|<span data-ttu-id="2ad25-516">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-516">no</span></span>|<span data-ttu-id="2ad25-517">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-517">no</span></span>|<span data-ttu-id="2ad25-518">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-518">no</span></span>|<span data-ttu-id="2ad25-519">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-519">no</span></span>|<span data-ttu-id="2ad25-520">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-520">no</span></span>|<span data-ttu-id="2ad25-521">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-521">no</span></span>|<span data-ttu-id="2ad25-522">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-522">no</span></span>|<span data-ttu-id="2ad25-523">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-523">no</span></span>|  
|`DocumentType`|<span data-ttu-id="2ad25-524">예</span><span class="sxs-lookup"><span data-stu-id="2ad25-524">yes</span></span>|<span data-ttu-id="2ad25-525">no</span><span class="sxs-lookup"><span data-stu-id="2ad25-525">no</span></span>|<span data-ttu-id="2ad25-526">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-526">no</span></span>|<span data-ttu-id="2ad25-527">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-527">no</span></span>|<span data-ttu-id="2ad25-528">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-528">no</span></span>|<span data-ttu-id="2ad25-529">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-529">no</span></span>|<span data-ttu-id="2ad25-530">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-530">no</span></span>|<span data-ttu-id="2ad25-531">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-531">no</span></span>|<span data-ttu-id="2ad25-532">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-532">no</span></span>|  
|`XmlDeclaration`|<span data-ttu-id="2ad25-533">예 \*</span><span class="sxs-lookup"><span data-stu-id="2ad25-533">yes\*</span></span>|<span data-ttu-id="2ad25-534">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-534">no</span></span>|<span data-ttu-id="2ad25-535">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-535">no</span></span>|<span data-ttu-id="2ad25-536">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-536">no</span></span>|<span data-ttu-id="2ad25-537">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-537">no</span></span>|<span data-ttu-id="2ad25-538">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-538">no</span></span>|<span data-ttu-id="2ad25-539">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-539">no</span></span>|<span data-ttu-id="2ad25-540">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-540">no</span></span>|<span data-ttu-id="2ad25-541">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-541">no</span></span>|  
|`Element`|<span data-ttu-id="2ad25-542">예</span><span class="sxs-lookup"><span data-stu-id="2ad25-542">yes</span></span>|<span data-ttu-id="2ad25-543">no</span><span class="sxs-lookup"><span data-stu-id="2ad25-543">no</span></span>|<span data-ttu-id="2ad25-544">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-544">no</span></span>|<span data-ttu-id="2ad25-545">예</span><span class="sxs-lookup"><span data-stu-id="2ad25-545">yes</span></span>|<span data-ttu-id="2ad25-546">no</span><span class="sxs-lookup"><span data-stu-id="2ad25-546">no</span></span>|<span data-ttu-id="2ad25-547">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-547">no</span></span>|<span data-ttu-id="2ad25-548">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-548">no</span></span>|<span data-ttu-id="2ad25-549">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-549">no</span></span>|<span data-ttu-id="2ad25-550">예 \* \* \*</span><span class="sxs-lookup"><span data-stu-id="2ad25-550">yes\*\*\*</span></span>|  
|`Attribute`|<span data-ttu-id="2ad25-551">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-551">no</span></span>|<span data-ttu-id="2ad25-552">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-552">no</span></span>|<span data-ttu-id="2ad25-553">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-553">no</span></span>|<span data-ttu-id="2ad25-554">예 \* \* \*</span><span class="sxs-lookup"><span data-stu-id="2ad25-554">yes****</span></span>|<span data-ttu-id="2ad25-555">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-555">no</span></span>|<span data-ttu-id="2ad25-556">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-556">no</span></span>|<span data-ttu-id="2ad25-557">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-557">no</span></span>|<span data-ttu-id="2ad25-558">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-558">no</span></span>|<span data-ttu-id="2ad25-559">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-559">no</span></span>|  
|`Text`|<span data-ttu-id="2ad25-560">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-560">no</span></span>|<span data-ttu-id="2ad25-561">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-561">no</span></span>|<span data-ttu-id="2ad25-562">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-562">no</span></span>|<span data-ttu-id="2ad25-563">예</span><span class="sxs-lookup"><span data-stu-id="2ad25-563">yes</span></span>|<span data-ttu-id="2ad25-564">예</span><span class="sxs-lookup"><span data-stu-id="2ad25-564">yes</span></span>|<span data-ttu-id="2ad25-565">no</span><span class="sxs-lookup"><span data-stu-id="2ad25-565">no</span></span>|<span data-ttu-id="2ad25-566">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-566">no</span></span>|<span data-ttu-id="2ad25-567">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-567">no</span></span>|<span data-ttu-id="2ad25-568">예</span><span class="sxs-lookup"><span data-stu-id="2ad25-568">yes</span></span>|  
|`CDATA`|<span data-ttu-id="2ad25-569">no</span><span class="sxs-lookup"><span data-stu-id="2ad25-569">no</span></span>|<span data-ttu-id="2ad25-570">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-570">no</span></span>|<span data-ttu-id="2ad25-571">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-571">no</span></span>|<span data-ttu-id="2ad25-572">예</span><span class="sxs-lookup"><span data-stu-id="2ad25-572">yes</span></span>|<span data-ttu-id="2ad25-573">no</span><span class="sxs-lookup"><span data-stu-id="2ad25-573">no</span></span>|<span data-ttu-id="2ad25-574">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-574">no</span></span>|<span data-ttu-id="2ad25-575">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-575">no</span></span>|<span data-ttu-id="2ad25-576">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-576">no</span></span>|<span data-ttu-id="2ad25-577">예 \* \* \*</span><span class="sxs-lookup"><span data-stu-id="2ad25-577">yes\*\*\*</span></span>|  
|`Markup**`|<span data-ttu-id="2ad25-578">예</span><span class="sxs-lookup"><span data-stu-id="2ad25-578">yes</span></span>|<span data-ttu-id="2ad25-579">no</span><span class="sxs-lookup"><span data-stu-id="2ad25-579">no</span></span>|<span data-ttu-id="2ad25-580">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-580">no</span></span>|<span data-ttu-id="2ad25-581">예</span><span class="sxs-lookup"><span data-stu-id="2ad25-581">yes</span></span>|<span data-ttu-id="2ad25-582">no</span><span class="sxs-lookup"><span data-stu-id="2ad25-582">no</span></span>|<span data-ttu-id="2ad25-583">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-583">no</span></span>|<span data-ttu-id="2ad25-584">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-584">no</span></span>|<span data-ttu-id="2ad25-585">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-585">no</span></span>|<span data-ttu-id="2ad25-586">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-586">no</span></span>|  
|`EntityReference`|<span data-ttu-id="2ad25-587">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-587">no</span></span>|<span data-ttu-id="2ad25-588">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-588">no</span></span>|<span data-ttu-id="2ad25-589">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-589">no</span></span>|<span data-ttu-id="2ad25-590">예</span><span class="sxs-lookup"><span data-stu-id="2ad25-590">yes</span></span>|<span data-ttu-id="2ad25-591">예</span><span class="sxs-lookup"><span data-stu-id="2ad25-591">yes</span></span>|<span data-ttu-id="2ad25-592">no</span><span class="sxs-lookup"><span data-stu-id="2ad25-592">no</span></span>|<span data-ttu-id="2ad25-593">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-593">no</span></span>|<span data-ttu-id="2ad25-594">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-594">no</span></span>|<span data-ttu-id="2ad25-595">예</span><span class="sxs-lookup"><span data-stu-id="2ad25-595">yes</span></span>|  
  
 <span data-ttu-id="2ad25-596">\* XmlDeclaration 노드는 문서 노드의 첫 번째 자식 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-596">\* The XmlDeclaration node must be the first child of the Document node.</span></span>  
  
 <span data-ttu-id="2ad25-597">* * 태그 ProcessingInstruction 및 주석 노드를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-597">** Markup includes ProcessingInstruction and Comment nodes.</span></span>  
  
 <span data-ttu-id="2ad25-598">요소 및 CDATA 노드에 EntityReference 노드 특성 노드의 자식이 아닙니다. 때 EntityReference 노드의 에서만 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-598">\*\*\* Element and CDATA nodes are only allowed in EntityReference nodes when the EntityReference node is not a child of an Attribute node.</span></span>  
  
 <span data-ttu-id="2ad25-599">특성은 요소 노드의 자식이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-599">**** Attributes are not children of an Element node.</span></span> <span data-ttu-id="2ad25-600">특성은 요소 노드가 속해 있는 특성 컬렉션 안에 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-600">Attributes are contained inside an attribute collection that belongs to an Element node.</span></span>  
  
 <span data-ttu-id="2ad25-601">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-601">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ad25-602">다음 예제에서는 새 요소를 만들고 XML 문서에 삽입 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-602">The following example creates a new element and inserts it into an XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2ad25-603">이름이 제공되지 않았으며 <see langword="XmlNodeType" />에 이름이 필요합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-603">The name was not provided and the <see langword="XmlNodeType" /> requires a name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode CreateNode (System.Xml.XmlNodeType type, string prefix, string name, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode CreateNode(valuetype System.Xml.XmlNodeType type, string prefix, string name, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateNode (type As XmlNodeType, prefix As String, name As String, namespaceURI As String) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ CreateNode(System::Xml::XmlNodeType type, System::String ^ prefix, System::String ^ name, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.XmlNodeType" />
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="2ad25-604">새 노드의 <see langword="XmlNodeType" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-604">The <see langword="XmlNodeType" /> of the new node.</span>
          </span>
        </param>
        <param name="prefix">
          <span data-ttu-id="2ad25-605">새 노드의 접두사입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-605">The prefix of the new node.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="2ad25-606">새 노드의 지역 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-606">The local name of the new node.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="2ad25-607">새 노드의 네임스페이스 URI입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-607">The namespace URI of the new node.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ad25-608">지정된 <see cref="T:System.Xml.XmlNodeType" />, <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.Name" /> 및 <see cref="P:System.Xml.XmlNode.NamespaceURI" />가 있는 <see cref="T:System.Xml.XmlNode" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-608">Creates a <see cref="T:System.Xml.XmlNode" /> with the specified <see cref="T:System.Xml.XmlNodeType" />, <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.Name" />, and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ad25-609">새 <see langword="XmlNode" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-609">The new <see langword="XmlNode" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-610">이 메서드는 문서의 컨텍스트에서 새 개체가 만들어지지만, 것 자동 추가 되지 않습니다 새 개체는 문서 트리에서를 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-610">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="2ad25-611">새 개체를 추가 하려면 명시적으로 노드 삽입 메서드 중 하나 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-611">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="2ad25-612">다음 표에서 어떤 NodeType 보여 줍니다. [행]는 W3C Extensible Markup Language (XML) 1.0 권장 사항 (www.w3.org/TR/1998/REC-xml-19980210)에 따라 다른 NodeType [column] 내에서 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-612">The following table shows you what NodeType[row] is allowed inside another NodeType[column] according to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210).</span></span>  
  
||<span data-ttu-id="2ad25-613">문서</span><span class="sxs-lookup"><span data-stu-id="2ad25-613">Document</span></span>|<span data-ttu-id="2ad25-614">DocumentType</span><span class="sxs-lookup"><span data-stu-id="2ad25-614">DocumentType</span></span>|<span data-ttu-id="2ad25-615">XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="2ad25-615">XmlDeclaration</span></span>|<span data-ttu-id="2ad25-616">요소</span><span class="sxs-lookup"><span data-stu-id="2ad25-616">Element</span></span>|<span data-ttu-id="2ad25-617">특성</span><span class="sxs-lookup"><span data-stu-id="2ad25-617">Attribute</span></span>|<span data-ttu-id="2ad25-618">텍스트</span><span class="sxs-lookup"><span data-stu-id="2ad25-618">Text</span></span>|<span data-ttu-id="2ad25-619">CDATA</span><span class="sxs-lookup"><span data-stu-id="2ad25-619">CDATA</span></span>|<span data-ttu-id="2ad25-620">마크업</span><span class="sxs-lookup"><span data-stu-id="2ad25-620">Markup</span></span>|<span data-ttu-id="2ad25-621">EntityReference</span><span class="sxs-lookup"><span data-stu-id="2ad25-621">EntityReference</span></span>|  
|------|--------------|------------------|--------------------|-------------|---------------|----------|-----------|------------|---------------------|  
|`Document`|<span data-ttu-id="2ad25-622">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-622">no</span></span>|<span data-ttu-id="2ad25-623">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-623">no</span></span>|<span data-ttu-id="2ad25-624">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-624">no</span></span>|<span data-ttu-id="2ad25-625">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-625">no</span></span>|<span data-ttu-id="2ad25-626">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-626">no</span></span>|<span data-ttu-id="2ad25-627">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-627">no</span></span>|<span data-ttu-id="2ad25-628">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-628">no</span></span>|<span data-ttu-id="2ad25-629">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-629">no</span></span>|<span data-ttu-id="2ad25-630">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-630">no</span></span>|  
|`DocumentType`|<span data-ttu-id="2ad25-631">예</span><span class="sxs-lookup"><span data-stu-id="2ad25-631">yes</span></span>|<span data-ttu-id="2ad25-632">no</span><span class="sxs-lookup"><span data-stu-id="2ad25-632">no</span></span>|<span data-ttu-id="2ad25-633">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-633">no</span></span>|<span data-ttu-id="2ad25-634">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-634">no</span></span>|<span data-ttu-id="2ad25-635">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-635">no</span></span>|<span data-ttu-id="2ad25-636">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-636">no</span></span>|<span data-ttu-id="2ad25-637">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-637">no</span></span>|<span data-ttu-id="2ad25-638">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-638">no</span></span>|<span data-ttu-id="2ad25-639">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-639">no</span></span>|  
|`XmlDeclaration`|<span data-ttu-id="2ad25-640">예 \*</span><span class="sxs-lookup"><span data-stu-id="2ad25-640">yes\*</span></span>|<span data-ttu-id="2ad25-641">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-641">no</span></span>|<span data-ttu-id="2ad25-642">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-642">no</span></span>|<span data-ttu-id="2ad25-643">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-643">no</span></span>|<span data-ttu-id="2ad25-644">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-644">no</span></span>|<span data-ttu-id="2ad25-645">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-645">no</span></span>|<span data-ttu-id="2ad25-646">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-646">no</span></span>|<span data-ttu-id="2ad25-647">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-647">no</span></span>|<span data-ttu-id="2ad25-648">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-648">no</span></span>|  
|`Element`|<span data-ttu-id="2ad25-649">예</span><span class="sxs-lookup"><span data-stu-id="2ad25-649">yes</span></span>|<span data-ttu-id="2ad25-650">no</span><span class="sxs-lookup"><span data-stu-id="2ad25-650">no</span></span>|<span data-ttu-id="2ad25-651">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-651">no</span></span>|<span data-ttu-id="2ad25-652">예</span><span class="sxs-lookup"><span data-stu-id="2ad25-652">yes</span></span>|<span data-ttu-id="2ad25-653">no</span><span class="sxs-lookup"><span data-stu-id="2ad25-653">no</span></span>|<span data-ttu-id="2ad25-654">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-654">no</span></span>|<span data-ttu-id="2ad25-655">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-655">no</span></span>|<span data-ttu-id="2ad25-656">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-656">no</span></span>|<span data-ttu-id="2ad25-657">예 \* \* \*</span><span class="sxs-lookup"><span data-stu-id="2ad25-657">yes\*\*\*</span></span>|  
|`Attribute`|<span data-ttu-id="2ad25-658">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-658">no</span></span>|<span data-ttu-id="2ad25-659">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-659">no</span></span>|<span data-ttu-id="2ad25-660">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-660">no</span></span>|<span data-ttu-id="2ad25-661">예 \* \* \*</span><span class="sxs-lookup"><span data-stu-id="2ad25-661">yes****</span></span>|<span data-ttu-id="2ad25-662">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-662">no</span></span>|<span data-ttu-id="2ad25-663">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-663">no</span></span>|<span data-ttu-id="2ad25-664">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-664">no</span></span>|<span data-ttu-id="2ad25-665">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-665">no</span></span>|<span data-ttu-id="2ad25-666">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-666">no</span></span>|  
|`Text`|<span data-ttu-id="2ad25-667">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-667">no</span></span>|<span data-ttu-id="2ad25-668">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-668">no</span></span>|<span data-ttu-id="2ad25-669">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-669">no</span></span>|<span data-ttu-id="2ad25-670">예</span><span class="sxs-lookup"><span data-stu-id="2ad25-670">yes</span></span>|<span data-ttu-id="2ad25-671">예</span><span class="sxs-lookup"><span data-stu-id="2ad25-671">yes</span></span>|<span data-ttu-id="2ad25-672">no</span><span class="sxs-lookup"><span data-stu-id="2ad25-672">no</span></span>|<span data-ttu-id="2ad25-673">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-673">no</span></span>|<span data-ttu-id="2ad25-674">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-674">no</span></span>|<span data-ttu-id="2ad25-675">예</span><span class="sxs-lookup"><span data-stu-id="2ad25-675">yes</span></span>|  
|`CDATA`|<span data-ttu-id="2ad25-676">no</span><span class="sxs-lookup"><span data-stu-id="2ad25-676">no</span></span>|<span data-ttu-id="2ad25-677">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-677">no</span></span>|<span data-ttu-id="2ad25-678">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-678">no</span></span>|<span data-ttu-id="2ad25-679">예</span><span class="sxs-lookup"><span data-stu-id="2ad25-679">yes</span></span>|<span data-ttu-id="2ad25-680">no</span><span class="sxs-lookup"><span data-stu-id="2ad25-680">no</span></span>|<span data-ttu-id="2ad25-681">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-681">no</span></span>|<span data-ttu-id="2ad25-682">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-682">no</span></span>|<span data-ttu-id="2ad25-683">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-683">no</span></span>|<span data-ttu-id="2ad25-684">예 \* \* \*</span><span class="sxs-lookup"><span data-stu-id="2ad25-684">yes\*\*\*</span></span>|  
|`Markup**`|<span data-ttu-id="2ad25-685">예</span><span class="sxs-lookup"><span data-stu-id="2ad25-685">yes</span></span>|<span data-ttu-id="2ad25-686">no</span><span class="sxs-lookup"><span data-stu-id="2ad25-686">no</span></span>|<span data-ttu-id="2ad25-687">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-687">no</span></span>|<span data-ttu-id="2ad25-688">예</span><span class="sxs-lookup"><span data-stu-id="2ad25-688">yes</span></span>|<span data-ttu-id="2ad25-689">no</span><span class="sxs-lookup"><span data-stu-id="2ad25-689">no</span></span>|<span data-ttu-id="2ad25-690">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-690">no</span></span>|<span data-ttu-id="2ad25-691">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-691">no</span></span>|<span data-ttu-id="2ad25-692">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-692">no</span></span>|<span data-ttu-id="2ad25-693">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-693">no</span></span>|  
|`EntityReference`|<span data-ttu-id="2ad25-694">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-694">no</span></span>|<span data-ttu-id="2ad25-695">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-695">no</span></span>|<span data-ttu-id="2ad25-696">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-696">no</span></span>|<span data-ttu-id="2ad25-697">예</span><span class="sxs-lookup"><span data-stu-id="2ad25-697">yes</span></span>|<span data-ttu-id="2ad25-698">예</span><span class="sxs-lookup"><span data-stu-id="2ad25-698">yes</span></span>|<span data-ttu-id="2ad25-699">no</span><span class="sxs-lookup"><span data-stu-id="2ad25-699">no</span></span>|<span data-ttu-id="2ad25-700">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-700">no</span></span>|<span data-ttu-id="2ad25-701">아니요</span><span class="sxs-lookup"><span data-stu-id="2ad25-701">no</span></span>|<span data-ttu-id="2ad25-702">예</span><span class="sxs-lookup"><span data-stu-id="2ad25-702">yes</span></span>|  
  
 <span data-ttu-id="2ad25-703">\* XmlDeclaration 노드는 문서 노드의 첫 번째 자식 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-703">\* The XmlDeclaration node must be the first child of the Document node.</span></span>  
  
 <span data-ttu-id="2ad25-704">* * 태그 ProcessingInstruction 및 주석 노드를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-704">** Markup includes ProcessingInstruction and Comment nodes.</span></span>  
  
 <span data-ttu-id="2ad25-705">요소 및 CDATA 노드에 EntityReference 노드 특성 노드의 자식이 아닙니다. 때 EntityReference 노드의 에서만 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-705">\*\*\* Element and CDATA nodes are only allowed in EntityReference nodes when the EntityReference node is not a child of an Attribute node.</span></span>  
  
 <span data-ttu-id="2ad25-706">특성은 요소 노드의 자식이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-706">**** Attributes are not children of an Element node.</span></span> <span data-ttu-id="2ad25-707">특성은 요소 노드에 속하는 특성 컬렉션 안에 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-707">Attributes are contained inside an attribute collection that belongs to the Element node.</span></span>  
  
 <span data-ttu-id="2ad25-708">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-708">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ad25-709">다음 예제에서는 문서에 새 요소를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-709">The following example adds a new element to the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateNode2 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateNode2 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateNode2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateNode2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2ad25-710">이름이 제공되지 않았으며 <see langword="XmlNodeType" />에 이름이 필요합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-710">The name was not provided and the <see langword="XmlNodeType" /> requires a name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateProcessingInstruction">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlProcessingInstruction CreateProcessingInstruction (string target, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlProcessingInstruction CreateProcessingInstruction(string target, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateProcessingInstruction(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateProcessingInstruction (target As String, data As String) As XmlProcessingInstruction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlProcessingInstruction ^ CreateProcessingInstruction(System::String ^ target, System::String ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlProcessingInstruction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="2ad25-711">처리 명령의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-711">The name of the processing instruction.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="2ad25-712">처리 명령의 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-712">The data for the processing instruction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ad25-713">지정된 이름과 데이터가 있는 <see cref="T:System.Xml.XmlProcessingInstruction" />을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-713">Creates an <see cref="T:System.Xml.XmlProcessingInstruction" /> with the specified name and data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ad25-714">새 <see langword="XmlProcessingInstruction" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-714">The new <see langword="XmlProcessingInstruction" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-715">이 메서드는 문서의 컨텍스트에서 새 개체가 만들어지지만, 것 자동 추가 되지 않습니다 새 개체는 문서 트리에서를 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-715">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="2ad25-716">새 개체를 추가 하려면 명시적으로 노드 삽입 메서드 중 하나 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-716">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="2ad25-717">W3C Extensible Markup Language (XML) 1.0 권장 사항에 따라 (www.w3.org/TR/1998/REC-xml-19980210), ProcessingInstruction 노드는 경우에 허용 문서, 요소, 그리고 EntityReference 노드 내에서 EntityReference 노드 자식이 아닙니다. 특성 노드의 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-717">According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), ProcessingInstruction nodes are only allowed within Document, Element, and EntityReference nodes, when the EntityReference node is not a child of an Attribute node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ad25-718">다음 예제에서는 ProcessingInstruction 노드를 만들고 문서에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-718">The following example creates a ProcessingInstruction node and adds it to the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateProcessingInstruction Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateProcessingInstruction Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateProcessingInstruction Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateProcessingInstruction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateProcessingInstruction Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateProcessingInstruction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSignificantWhitespace">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlSignificantWhitespace CreateSignificantWhitespace (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlSignificantWhitespace CreateSignificantWhitespace(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateSignificantWhitespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSignificantWhitespace (text As String) As XmlSignificantWhitespace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlSignificantWhitespace ^ CreateSignificantWhitespace(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSignificantWhitespace</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="2ad25-719">문자열에는 &amp;#20; &amp;#10; &amp;#13; 및 &amp;#9; 문자만 포함되어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-719">The string must contain only the following characters &amp;#20; &amp;#10; &amp;#13; and &amp;#9;</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ad25-720">
            <see cref="T:System.Xml.XmlSignificantWhitespace" /> 노드를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-720">Creates an <see cref="T:System.Xml.XmlSignificantWhitespace" /> node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ad25-721">새 <see langword="XmlSignificantWhitespace" /> 노드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-721">A new <see langword="XmlSignificantWhitespace" /> node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-722">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-722">This method is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="2ad25-723">수동으로 문서에 서식을 지정할 때 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-723">It is used when you want to manually format your document.</span></span>  
  
 <span data-ttu-id="2ad25-724">이 메서드는 문서의 컨텍스트에서 새 개체가 만들어지지만, 것 자동 추가 되지 않습니다 새 개체는 문서 트리에서를 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-724">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="2ad25-725">새 개체를 추가 하려면 명시적으로 노드 삽입 메서드 중 하나 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-725">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ad25-726">다음 예제에서는 문서를 유효 공백 문자를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-726">The following example adds significant white space to the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateSignificantWhitespace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateSignificantWhitespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateSignificantWhitespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateSignificantWhitespace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateSignificantWhitespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateSignificantWhitespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTextNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlText CreateTextNode (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlText CreateTextNode(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateTextNode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateTextNode (text As String) As XmlText" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlText ^ CreateTextNode(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlText</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="2ad25-727">Text 노드의 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-727">The text for the Text node.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ad25-728">지정된 텍스트가 있는 <see cref="T:System.Xml.XmlText" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-728">Creates an <see cref="T:System.Xml.XmlText" /> with the specified text.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ad25-729">새 <see langword="XmlText" /> 노드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-729">The new <see langword="XmlText" /> node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-730">이 메서드는 문서의 컨텍스트에서 새 개체가 만들어지지만, 것 자동 추가 되지 않습니다 새 개체는 문서 트리에서를 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-730">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="2ad25-731">새 개체를 추가 하려면 명시적으로 노드 삽입 메서드 중 하나 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-731">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="2ad25-732">W3C Extensible Markup Language (XML) 1.0 권장 사항에 따라 (www.w3.org/TR/1998/REC-xml-19980210), 텍스트 노드는 요소, 특성 및 EntityReference 노드 내 에서만 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-732">According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), Text nodes are only allowed within Element, Attribute and EntityReference nodes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ad25-733">다음 예제에서는 새 요소를 만들고 문서에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-733">The following example creates a new element and adds it to the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWhitespace">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlWhitespace CreateWhitespace (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlWhitespace CreateWhitespace(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateWhitespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateWhitespace (text As String) As XmlWhitespace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlWhitespace ^ CreateWhitespace(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWhitespace</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="2ad25-734">문자열에는 &amp;#20; &amp;#10; &amp;#13; 및 &amp;#9; 문자만 포함되어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-734">The string must contain only the following characters &amp;#20; &amp;#10; &amp;#13; and &amp;#9;</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ad25-735">
            <see cref="T:System.Xml.XmlWhitespace" /> 노드를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-735">Creates an <see cref="T:System.Xml.XmlWhitespace" /> node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ad25-736">새 <see langword="XmlWhitespace" /> 노드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-736">A new <see langword="XmlWhitespace" /> node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-737">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-737">This method is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="2ad25-738">수동으로 문서에 서식을 지정할 때 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-738">It is used when you want to manually format your document.</span></span>  
  
 <span data-ttu-id="2ad25-739">이 메서드는 문서의 컨텍스트에서 새 개체가 만들어지지만, 것 자동 추가 되지 않습니다 새 개체는 문서 트리에서를 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-739">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="2ad25-740">새 개체를 추가 하려면 명시적으로 노드 삽입 메서드 중 하나 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-740">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ad25-741">다음 예제에서는 문서에 공백을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-741">The following example adds white space to the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateWhitespace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateWhitespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateWhitespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateWhitespace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateWhitespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateWhitespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateXmlDeclaration">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlDeclaration CreateXmlDeclaration (string version, string encoding, string standalone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlDeclaration CreateXmlDeclaration(string version, string encoding, string standalone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.CreateXmlDeclaration(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateXmlDeclaration (version As String, encoding As String, standalone As String) As XmlDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlDeclaration ^ CreateXmlDeclaration(System::String ^ version, System::String ^ encoding, System::String ^ standalone);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDeclaration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="encoding" Type="System.String" />
        <Parameter Name="standalone" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="version">
          <span data-ttu-id="2ad25-742">버전은 "1.0"이어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-742">The version must be "1.0".</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="2ad25-743">인코딩 특성 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-743">The value of the encoding attribute.</span>
          </span>
          <span data-ttu-id="2ad25-744">
            <see cref="T:System.Xml.XmlDocument" />를 파일이나 스트림으로 저장할 경우 사용하는 인코딩입니다. 그러므로 <see cref="T:System.Text.Encoding" /> 클래스에서 지원하는 문자열로 설정되어야 합니다. 그렇지 않으면 <see cref="M:System.Xml.XmlDocument.Save(System.String)" />이 실패합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-744">This is the encoding that is used when you save the <see cref="T:System.Xml.XmlDocument" /> to a file or a stream; therefore, it must be set to a string supported by the <see cref="T:System.Text.Encoding" /> class, otherwise <see cref="M:System.Xml.XmlDocument.Save(System.String)" /> fails.</span>
          </span>
          <span data-ttu-id="2ad25-745">
            <see langword="null" /> 또는 String.Empty일 경우 <see langword="Save" /> 메서드에서 인코딩 특성을 XML 선언에 기록하지 않으므로 기본 인코딩인 UTF-8을 사용하게 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-745">If this is <see langword="null" /> or String.Empty, the <see langword="Save" /> method does not write an encoding attribute on the XML declaration and therefore the default encoding, UTF-8, is used.</span>
          </span>
          <span data-ttu-id="2ad25-746">참고: <see langword="XmlDocument" />를 <see cref="T:System.IO.TextWriter" />나 <see cref="T:System.Xml.XmlTextWriter" />로 저장하면 이 인코딩 값이 삭제됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-746">Note: If the <see langword="XmlDocument" /> is saved to either a <see cref="T:System.IO.TextWriter" /> or an <see cref="T:System.Xml.XmlTextWriter" />, this encoding value is discarded.</span>
          </span>
          <span data-ttu-id="2ad25-747">대신 <see langword="TextWriter" /> 또는 <see langword="XmlTextWriter" />의 인코딩을 사용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-747">Instead, the encoding of the <see langword="TextWriter" /> or the <see langword="XmlTextWriter" /> is used.</span>
          </span>
          <span data-ttu-id="2ad25-748">그러면 기록된 XML을 올바른 인코딩을 사용하여 다시 읽을 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-748">This ensures that the XML written out can be read back using the correct encoding.</span>
          </span>
        </param>
        <param name="standalone">
          <span data-ttu-id="2ad25-749">값은 "Yes" 또는 "No"여야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-749">The value must be either "yes" or "no".</span>
          </span>
          <span data-ttu-id="2ad25-750">값이 <see langword="null" />이나 String.Empty일 경우에는 <see langword="Save" /> 메서드에서 독립형 특성을 XML 선언에 기록하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-750">If this is <see langword="null" /> or String.Empty, the <see langword="Save" /> method does not write a standalone attribute on the XML declaration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ad25-751">지정된 값이 있는 <see cref="T:System.Xml.XmlDeclaration" /> 노드를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-751">Creates an <see cref="T:System.Xml.XmlDeclaration" /> node with the specified values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ad25-752">새 <see langword="XmlDeclaration" /> 노드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-752">The new <see langword="XmlDeclaration" /> node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-753">특성에 특수 속성으로 노출 되는 `XmlDeclaration` 노드를 아니라 <xref:System.Xml.XmlAttribute> 노드.</span><span class="sxs-lookup"><span data-stu-id="2ad25-753">The attributes are exposed as special properties on the `XmlDeclaration` node, and not as <xref:System.Xml.XmlAttribute> nodes.</span></span>  
  
 <span data-ttu-id="2ad25-754">이 메서드는 문서의 컨텍스트에서 새 개체가 만들어지지만, 것 자동 추가 되지 않습니다 새 개체는 문서 트리에서를 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-754">Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</span></span> <span data-ttu-id="2ad25-755">새 개체를 추가 하려면 명시적으로 노드 삽입 메서드 중 하나 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-755">To add the new object, you must explicitly call one of the node insert methods.</span></span>  
  
 <span data-ttu-id="2ad25-756">W3C Extensible Markup Language (XML) 1.0 권장 사항 (www.w3.org/TR/1998/REC-xml-19980210)에 따라는 `XmlDeclaration` 노드는 문서의 첫 번째 노드 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-756">According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), the `XmlDeclaration` node must be the first node in the document.</span></span>  
  
 <span data-ttu-id="2ad25-757">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-757">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ad25-758">다음 예제에서는 XML 선언을 만들고은 문서에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-758">The following example creates an XML declaration and adds it to the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateXmlDeclaration Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateXmlDeclaration Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateXmlDeclaration Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateXmlDeclaration Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateXmlDeclaration Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateXmlDeclaration Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2ad25-759">
            <paramref name="version" /> 또는 <paramref name="standalone" />의 값이 위에서 지정한 값 이외의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-759">The values of <paramref name="version" /> or <paramref name="standalone" /> are something other than the ones specified above.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlDeclaration" />
      </Docs>
    </Member>
    <Member MemberName="DocumentElement">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement DocumentElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlElement DocumentElement" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.DocumentElement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentElement As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlElement ^ DocumentElement { System::Xml::XmlElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ad25-760">문서의 루트 <see cref="T:System.Xml.XmlElement" />를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-760">Gets the root <see cref="T:System.Xml.XmlElement" /> for the document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ad25-761">XML 문서 트리의 루트를 나타내는 <see langword="XmlElement" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-761">The <see langword="XmlElement" /> that represents the root of the XML document tree.</span>
          </span>
          <span data-ttu-id="2ad25-762">루트가 없으면 <see langword="null" />이 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-762">If no root exists, <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2ad25-763">다음 예제에서는 XML 문서의 루트 요소를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-763">The following example displays the root element of the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.DocumentElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.DocumentElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.DocumentElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.DocumentElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.DocumentElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.DocumentElement Example/VB/source.vb#1)]  
  
 <span data-ttu-id="2ad25-764">**출력:**</span><span class="sxs-lookup"><span data-stu-id="2ad25-764">**Output:**</span></span>  
  
```  
<book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book>   
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentType">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlDocumentType DocumentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDocumentType DocumentType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.DocumentType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DocumentType As XmlDocumentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlDocumentType ^ DocumentType { System::Xml::XmlDocumentType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocumentType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ad25-765">DOCTYPE 선언이 포함된 노드를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-765">Gets the node containing the DOCTYPE declaration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ad25-766">DocumentType(DOCTYPE 선언)이 포함된 <see cref="T:System.Xml.XmlNode" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-766">The <see cref="T:System.Xml.XmlNode" /> containing the DocumentType (DOCTYPE declaration).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-767">`XmlDocument` 와 하나의 자식만 있을 수 있습니다 <xref:System.Xml.XmlNodeType> DocumentType 같음.</span><span class="sxs-lookup"><span data-stu-id="2ad25-767">An `XmlDocument` can have one and only one child with <xref:System.Xml.XmlNodeType> equal to DocumentType.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ad25-768">이 속성은 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-768">This property is read-only.</span></span> <span data-ttu-id="2ad25-769">DocumentType 노드를 변경 하려면 기존 노드를 삭제를 사용 하 여 새 하나 만듭니다는 <xref:System.Xml.XmlDocument.CreateDocumentType%2A> 메서드를 만들고 문서에 새 노드를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-769">To change the DocumentType node, delete the existing node, create a new one using the <xref:System.Xml.XmlDocument.CreateDocumentType%2A> method, and add the new node to the document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ad25-770">다음 예제에서는 가져오고 문서에 대 한 DOCTYPE 선언을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-770">The following example gets and displays the DOCTYPE declaration for the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.DocumentType Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.DocumentType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.DocumentType Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.DocumentType Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.DocumentType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.DocumentType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlDocumentType" />
      </Docs>
    </Member>
    <Member MemberName="GetElementById">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement GetElementById (string elementId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlElement GetElementById(string elementId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.GetElementById(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetElementById (elementId As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlElement ^ GetElementById(System::String ^ elementId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementId">
          <span data-ttu-id="2ad25-771">일치시킬 특성 ID입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-771">The attribute ID to match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ad25-772">지정된 ID의 <see cref="T:System.Xml.XmlElement" />를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-772">Gets the <see cref="T:System.Xml.XmlElement" /> with the specified ID.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ad25-773">일치하는 ID가 있으면 <see langword="XmlElement" />, 일치하는 요소가 없을 경우에는 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-773">The <see langword="XmlElement" /> with the matching ID or <see langword="null" /> if no matching element is found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-774">문서에 일치 하는 ID 사용 하 여 여러 요소를이 메서드는 문서에서 일치 하는 첫 번째 요소를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-774">If the document has multiple elements with the matching ID, this method returns the first matching element in the document.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ad25-775">DOM 구현 유형 id 특성을 정의 하는 정보가 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-775">The DOM implementation must have information which defines which attributes are of type ID.</span></span> <span data-ttu-id="2ad25-776">XSD 스키마 또는 Dtd에 형식 ID 특성을 정의할 수 있지만이 버전의 제품 지원 Dtd에 정의 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-776">Although attributes of type ID can be defined in either XSD schemas or DTDs, this version of the product only supports those defined in DTDs.</span></span> <span data-ttu-id="2ad25-777">DTD에서 정의 하지 않으면 "ID" 아닌 이름 가진 특성 ID를 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-777">Attributes with the name "ID" are not of type ID unless so defined in the DTD.</span></span> <span data-ttu-id="2ad25-778">Id 형식 특성이 인지 알 수 없는 구현은 반환 해야 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-778">Implementations where it is unknown whether the attributes are of type ID are expected to return `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ad25-779">다음 예제에서는 `GetElementById` 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-779">The following example uses the `GetElementById` method.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.GetElementById Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.GetElementById Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.GetElementById Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.GetElementById Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.GetElementById Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.GetElementById Example/VB/source.vb#1)]  
  
 <span data-ttu-id="2ad25-780">이 예제에서는 파일을 사용 하 여 `ids.xml`입력으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-780">The example uses the file, `ids.xml`, as input.</span></span>  
  
```xml  
<!DOCTYPE root [  
  <!ELEMENT root ANY>   
  <!ELEMENT Person ANY>   
  <!ELEMENT Customer EMPTY>  
  <!ELEMENT Team EMPTY>  
  <!ATTLIST Person SSN ID #REQUIRED>  
  <!ATTLIST Customer id IDREF #REQUIRED >  
  <!ATTLIST Team members IDREFS #REQUIRED]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetElementsByTagName">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2ad25-781">지정된 이름과 일치하는 모든 하위 요소의 목록이 포함된 <see cref="T:System.Xml.XmlNodeList" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-781">Returns an <see cref="T:System.Xml.XmlNodeList" /> containing a list of all descendant elements that match the specified name.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetElementsByTagName">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNodeList GetElementsByTagName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNodeList GetElementsByTagName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.GetElementsByTagName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetElementsByTagName (name As String) As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNodeList ^ GetElementsByTagName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="2ad25-782">일치시킬 정규화된 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-782">The qualified name to match.</span>
          </span>
          <span data-ttu-id="2ad25-783">일치하는 노드의 <see langword="Name" /> 속성과 일치합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-783">It is matched against the <see langword="Name" /> property of the matching node.</span>
          </span>
          <span data-ttu-id="2ad25-784">특수 값 "\*"은 모든 태그와 일치합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-784">The special value "\*" matches all tags.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ad25-785">지정된 <see cref="P:System.Xml.XmlDocument.Name" />과 일치하는 모든 하위 요소의 목록이 포함된 <see cref="T:System.Xml.XmlNodeList" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-785">Returns an <see cref="T:System.Xml.XmlNodeList" /> containing a list of all descendant elements that match the specified <see cref="P:System.Xml.XmlDocument.Name" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ad25-786">일치하는 모든 노드 목록이 포함된 <see cref="T:System.Xml.XmlNodeList" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-786">An <see cref="T:System.Xml.XmlNodeList" /> containing a list of all matching nodes.</span>
          </span>
          <span data-ttu-id="2ad25-787">
            <paramref name="name" />과 일치하는 노드가 없으면 빈 컬렉션이 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-787">If no nodes match <paramref name="name" />, the returned collection will be empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-788">노드는 이러한에서 발생 하는 문서 순서에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-788">The nodes are placed in the order in which they would be encountered in the document.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ad25-789">사용 하는 것이 좋습니다.는 <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> 또는 <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType> 메서드 대신는 <xref:System.Xml.XmlDocument.GetElementsByTagName%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2ad25-789">It is recommended that you use the <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> or <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType> method instead of the <xref:System.Xml.XmlDocument.GetElementsByTagName%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ad25-790">다음 예제에서는 한 `XmlDocument` 개체와 사용 하 여는 `GetElementsByTagName` 메서드와 그 결과 <xref:System.Xml.XmlNodeList> 모든 책 제목을 표시 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-790">The following example creates a `XmlDocument` object and uses the `GetElementsByTagName` method and the resulting <xref:System.Xml.XmlNodeList> object to display all the book titles.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.GetElementsByTagName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.GetElementsByTagName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.GetElementsByTagName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.GetElementsByTagName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.GetElementsByTagName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.GetElementsByTagName Example/VB/source.vb#1)]  
  
 <span data-ttu-id="2ad25-791">이 예제에서는 `books.xml` 파일을 입력으로 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-791">The example uses the `books.xml` file as input.</span></span>  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetElementsByTagName">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNodeList GetElementsByTagName (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNodeList GetElementsByTagName(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.GetElementsByTagName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetElementsByTagName (localName As String, namespaceURI As String) As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNodeList ^ GetElementsByTagName(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="2ad25-792">일치시킬 LocalName입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-792">The LocalName to match.</span>
          </span>
          <span data-ttu-id="2ad25-793">특수 값 "\*"은 모든 태그와 일치합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-793">The special value "\*" matches all tags.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="2ad25-794">일치시킬 NamespaceURI입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-794">NamespaceURI to match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ad25-795">지정된 <see cref="P:System.Xml.XmlDocument.LocalName" /> 및 <see cref="P:System.Xml.XmlNode.NamespaceURI" />와 일치하는 모든 하위 요소의 목록이 포함된 <see cref="T:System.Xml.XmlNodeList" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-795">Returns an <see cref="T:System.Xml.XmlNodeList" /> containing a list of all descendant elements that match the specified <see cref="P:System.Xml.XmlDocument.LocalName" /> and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ad25-796">일치하는 모든 노드 목록이 포함된 <see cref="T:System.Xml.XmlNodeList" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-796">An <see cref="T:System.Xml.XmlNodeList" /> containing a list of all matching nodes.</span>
          </span>
          <span data-ttu-id="2ad25-797">지정된 <paramref name="localName" /> 및 <paramref name="namespaceURI" />와 일치하는 노드가 없으면 빈 컬렉션이 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-797">If no nodes match the specified <paramref name="localName" /> and <paramref name="namespaceURI" />, the returned collection will be empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-798">노드 순서는 이러한에서 발생 하는 문서 트리의에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-798">The nodes are placed in the order in which they would be encountered in the document tree.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ad25-799">사용 하는 것이 좋습니다.는 <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> 또는 <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType> 메서드 대신는 <xref:System.Xml.XmlDocument.GetElementsByTagName%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2ad25-799">It is recommended that you use the <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> or <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType> method instead of the <xref:System.Xml.XmlDocument.GetElementsByTagName%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Implementation">
      <MemberSignature Language="C#" Value="public System.Xml.XmlImplementation Implementation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlImplementation Implementation" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.Implementation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Implementation As XmlImplementation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlImplementation ^ Implementation { System::Xml::XmlImplementation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlImplementation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ad25-800">현재 문서에 대한 <see cref="T:System.Xml.XmlImplementation" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-800">Gets the <see cref="T:System.Xml.XmlImplementation" /> object for the current document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ad25-801">현재 문서에 대한 <see langword="XmlImplementation" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-801">The <see langword="XmlImplementation" /> object for the current document.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-802">`XmlDocument` 동일한에서 만들어진 개체 `XmlImplementation` 공유할지 <xref:System.Xml.XmlNameTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-802">`XmlDocument` objects created from the same `XmlImplementation` share the same <xref:System.Xml.XmlNameTable>.</span></span> <span data-ttu-id="2ad25-803">이 특성 및 요소 이름이 문자열이 아닌 개체를 비교 하는 사용자 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-803">This allows users to compare attribute and element names as objects rather than strings.</span></span>  
  
 <span data-ttu-id="2ad25-804">하지만 `XmlDocument` 같은 구현을 공유 하는 개체, 다른 한 문서에서 노드를 이동 하려면 사용 해야 합니다는 <xref:System.Xml.XmlDocument.ImportNode%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2ad25-804">Although the `XmlDocument` objects share the same implementation, to move nodes from one document to another you must use the <xref:System.Xml.XmlDocument.ImportNode%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ad25-805">다음 예제에서는 새 `XmlDocument` 다른 문서 구현을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-805">The following example creates a new `XmlDocument` using another document's implementation.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.Implementation Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.Implementation Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.Implementation Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.Implementation Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.Implementation Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.Implementation Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode ImportNode (System.Xml.XmlNode node, bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode ImportNode(class System.Xml.XmlNode node, bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportNode (node As XmlNode, deep As Boolean) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ ImportNode(System::Xml::XmlNode ^ node, bool deep);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlNode" />
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="2ad25-806">가져올 노드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-806">The node being imported.</span>
          </span>
        </param>
        <param name="deep">
          <span data-ttu-id="2ad25-807">전체 복제를 수행하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-807">
              <see langword="true" /> to perform a deep clone; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ad25-808">다른 문서에서 현재 문서로 노드를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-808">Imports a node from another document to the current document.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ad25-809">가져온 <see cref="T:System.Xml.XmlNode" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-809">The imported <see cref="T:System.Xml.XmlNode" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-810">반환 된 노드는 부모가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-810">The returned node has no parent.</span></span> <span data-ttu-id="2ad25-811">원본 노드는 변경 되거나 원래 문서;에서 제거 `ImportNode` 소스 노드의 복사본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-811">The source node is not altered or removed from the original document; `ImportNode` creates a copy of the source node.</span></span>  
  
 <span data-ttu-id="2ad25-812">노드를 가져오면 만듭니다는 `XmlNode` 가져오기 문서가 소유 하는 개체 <xref:System.Xml.XmlNode.Name%2A> 및 <xref:System.Xml.XmlNode.NodeType%2A> 원본 노드와 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-812">Importing a node creates an `XmlNode` object owned by the importing document, with <xref:System.Xml.XmlNode.Name%2A> and <xref:System.Xml.XmlNode.NodeType%2A> identical to the source node.</span></span> <span data-ttu-id="2ad25-813">새 개체에는 네임 스페이스에 관련 된 특성 (<xref:System.Xml.XmlNode.Prefix%2A>, <xref:System.Xml.XmlNode.LocalName%2A>, 및 <xref:System.Xml.XmlNode.NamespaceURI%2A>).</span><span class="sxs-lookup"><span data-stu-id="2ad25-813">The new object also has the attributes related to namespaces (<xref:System.Xml.XmlNode.Prefix%2A>, <xref:System.Xml.XmlNode.LocalName%2A>, and <xref:System.Xml.XmlNode.NamespaceURI%2A>).</span></span>  
  
 <span data-ttu-id="2ad25-814">가져온된 노드 및 값의 노드 유형에 따라는 `deep` 매개 변수를 추가 정보를 적절 하 게 복사 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-814">Depending on the node type of the imported node and the value of the `deep` parameter, additional information is copied as appropriate.</span></span> <span data-ttu-id="2ad25-815">이 메서드를 다른 XML 이나 HTML 소스의 조각을 한 문서에서 복사한 경우 예상 되는 동작 미러 하려고 (즉, XML 경우, 두 문서가 있을 수 다른 Dtd 인식).</span><span class="sxs-lookup"><span data-stu-id="2ad25-815">This method attempts to mirror the behavior expected if a fragment of XML or HTML source was copied from one document to another (recognizing that, in the XML case, the two documents could have different DTDs).</span></span>  
  
 <span data-ttu-id="2ad25-816">다음 표에서 각각에 대 한 특정 동작에 설명 <xref:System.Xml.XmlNodeType>합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-816">The following table describes the specific behavior for each <xref:System.Xml.XmlNodeType>.</span></span>  
  
|<span data-ttu-id="2ad25-817">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="2ad25-817">XmlNodeType</span></span>|<span data-ttu-id="2ad25-818">ImportNode(true)</span><span class="sxs-lookup"><span data-stu-id="2ad25-818">ImportNode(true)</span></span>|<span data-ttu-id="2ad25-819">ImportNode(false)</span><span class="sxs-lookup"><span data-stu-id="2ad25-819">ImportNode(false)</span></span>|  
|-----------------|------------------------|-------------------------|  
|<span data-ttu-id="2ad25-820">특성</span><span class="sxs-lookup"><span data-stu-id="2ad25-820">Attribute</span></span>|<span data-ttu-id="2ad25-821"><xref:System.Xml.XmlAttribute.Specified%2A> 속성이 `true` 생성 된 <xref:System.Xml.XmlAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-821">The <xref:System.Xml.XmlAttribute.Specified%2A> property is set to `true` on the generated <xref:System.Xml.XmlAttribute>.</span></span> <span data-ttu-id="2ad25-822">소스 요소의 하위 `XmlAttribute` 는 재귀적으로 가져오고 결과 노드를 다시 조합 하 여 해당 하위 트리를 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-822">The descendants of the source `XmlAttribute` are recursively imported and the resulting nodes reassembled to form the corresponding subtree.</span></span>|<span data-ttu-id="2ad25-823">`deep` 매개 변수가 적용 되지 않는 `XmlAttribute` 노드,은 자녀를 가져오면 항상 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-823">The `deep` parameter does not apply to `XmlAttribute` nodes; they always carry their children with them when imported.</span></span>|  
|<span data-ttu-id="2ad25-824">CData</span><span class="sxs-lookup"><span data-stu-id="2ad25-824">CData</span></span>|<span data-ttu-id="2ad25-825">해당 데이터를 포함하여 노드를 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-825">Copies the node, including its data.</span></span>|<span data-ttu-id="2ad25-826">해당 데이터를 포함하여 노드를 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-826">Copies the node, including its data.</span></span>|  
|<span data-ttu-id="2ad25-827">주석</span><span class="sxs-lookup"><span data-stu-id="2ad25-827">Comment</span></span>|<span data-ttu-id="2ad25-828">해당 데이터를 포함하여 노드를 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-828">Copies the node, including its data.</span></span>|<span data-ttu-id="2ad25-829">해당 데이터를 포함하여 노드를 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-829">Copies the node, including its data.</span></span>|  
|<span data-ttu-id="2ad25-830">DocumentFragment</span><span class="sxs-lookup"><span data-stu-id="2ad25-830">DocumentFragment</span></span>|<span data-ttu-id="2ad25-831">소스 노드의 하위 항목을 재귀적으로 가져오고 결과 노드를 다시 조합하여 해당하는 하위 트리를 구성합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-831">The descendants of the source node are recursively imported and the resulting nodes reassembled to form the corresponding subtree.</span></span>|<span data-ttu-id="2ad25-832">빈 <xref:System.Xml.XmlDocumentFragment> 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-832">An empty <xref:System.Xml.XmlDocumentFragment> is generated.</span></span>|  
|<span data-ttu-id="2ad25-833">DocumentType</span><span class="sxs-lookup"><span data-stu-id="2ad25-833">DocumentType</span></span>|<span data-ttu-id="2ad25-834">해당 데이터를 포함하여 노드를 복사합니다.\*</span><span class="sxs-lookup"><span data-stu-id="2ad25-834">Copies the node, including its data.\*</span></span>|<span data-ttu-id="2ad25-835">해당 데이터를 포함하여 노드를 복사합니다.\*</span><span class="sxs-lookup"><span data-stu-id="2ad25-835">Copies the node, including its data.\*</span></span>|  
|<span data-ttu-id="2ad25-836">요소</span><span class="sxs-lookup"><span data-stu-id="2ad25-836">Element</span></span>|<span data-ttu-id="2ad25-837">Source 요소와 지정 된 특성 노드 해당 하위 항목 재귀적으로 가져오고 결과 노드를 다시 해당 하위 트리를 구성 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-837">The descendants of the source element and its specified attribute nodes are recursively imported and the resulting nodes reassembled to form the corresponding subtree.</span></span><br /><br /> <span data-ttu-id="2ad25-838">참고: 기본 특성이 복사 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-838">Note: Default attributes are not copied.</span></span> <span data-ttu-id="2ad25-839">가져오고 있는 문서에 이 요소 이름에 대한 기본 특성이 정의되어 있는 경우 이 특성이 할당됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-839">If the document being imported into defines default attributes for this element name, those are assigned.</span></span>|<span data-ttu-id="2ad25-840">지정한 노드는 소스 요소의 가져오는 특성 및 생성 된 `XmlAttribute` 노드을 생성 된 <xref:System.Xml.XmlElement>합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-840">Specified attribute nodes of the source element are imported, and the generated `XmlAttribute` nodes are attached to the generated <xref:System.Xml.XmlElement>.</span></span><br /><br /> <span data-ttu-id="2ad25-841">참고: 기본 특성이 복사 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-841">Note: Default attributes are not copied.</span></span> <span data-ttu-id="2ad25-842">가져오고 있는 문서에 이 요소 이름에 대한 기본 특성이 정의되어 있는 경우 이 특성이 할당됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-842">If the document being imported into defines default attributes for this element name, those are assigned.</span></span>|  
|<span data-ttu-id="2ad25-843">EntityReference</span><span class="sxs-lookup"><span data-stu-id="2ad25-843">EntityReference</span></span>|<span data-ttu-id="2ad25-844">이 메서드는만 복사 소스와 대상 문서가 다르게 정의 된 엔터티를 가질 수, 있으므로 <xref:System.Xml.XmlEntityReference> 노드.</span><span class="sxs-lookup"><span data-stu-id="2ad25-844">Because the source and destination documents could have the entities defined differently, this method only copies the <xref:System.Xml.XmlEntityReference> node.</span></span> <span data-ttu-id="2ad25-845">대체 텍스트는 포함되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-845">The replacement text is not included.</span></span> <span data-ttu-id="2ad25-846">대상 문서에 엔터티가 정의되어 있는 경우 해당 값이 할당됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-846">If the destination document has the entity defined, its value is assigned.</span></span>|<span data-ttu-id="2ad25-847">이 메서드는만 복사 소스와 대상 문서가 다르게 정의 된 엔터티를 가질 수, 있으므로 <xref:System.Xml.XmlEntityReference> 노드.</span><span class="sxs-lookup"><span data-stu-id="2ad25-847">Because the source and destination documents could have the entities defined differently, this method only copies the <xref:System.Xml.XmlEntityReference> node.</span></span> <span data-ttu-id="2ad25-848">대체 텍스트는 포함되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-848">The replacement text is not included.</span></span> <span data-ttu-id="2ad25-849">대상 문서에 엔터티가 정의되어 있는 경우 해당 값이 할당됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-849">If the destination document has the entity defined, its value is assigned.</span></span>|  
|<span data-ttu-id="2ad25-850">ProcessingInstruction</span><span class="sxs-lookup"><span data-stu-id="2ad25-850">ProcessingInstruction</span></span>|<span data-ttu-id="2ad25-851">가져온 노드에서 대상과 데이터 값을 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-851">Copies the target and data value from the imported node.</span></span>|<span data-ttu-id="2ad25-852">가져온 노드에서 대상과 데이터 값을 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-852">Copies the target and data value from the imported node.</span></span>|  
|<span data-ttu-id="2ad25-853">텍스트</span><span class="sxs-lookup"><span data-stu-id="2ad25-853">Text</span></span>|<span data-ttu-id="2ad25-854">해당 데이터를 포함하여 노드를 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-854">Copies the node, including its data.</span></span>|<span data-ttu-id="2ad25-855">해당 데이터를 포함하여 노드를 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-855">Copies the node, including its data.</span></span>|  
|<span data-ttu-id="2ad25-856">SignificantWhitespace</span><span class="sxs-lookup"><span data-stu-id="2ad25-856">SignificantWhitespace</span></span>|<span data-ttu-id="2ad25-857">해당 데이터를 포함하여 노드를 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-857">Copies the node, including its data.</span></span>|<span data-ttu-id="2ad25-858">해당 데이터를 포함하여 노드를 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-858">Copies the node, including its data.</span></span>|  
|<span data-ttu-id="2ad25-859">Whitespace</span><span class="sxs-lookup"><span data-stu-id="2ad25-859">Whitespace</span></span>|<span data-ttu-id="2ad25-860">해당 데이터를 포함하여 노드를 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-860">Copies the node, including its data.</span></span>|<span data-ttu-id="2ad25-861">해당 데이터를 포함하여 노드를 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-861">Copies the node, including its data.</span></span>|  
|<span data-ttu-id="2ad25-862">XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="2ad25-862">XmlDeclaration</span></span>|<span data-ttu-id="2ad25-863">가져온 노드에서 대상과 데이터 값을 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-863">Copies the target and data value from the imported node.</span></span>|<span data-ttu-id="2ad25-864">가져온 노드에서 대상과 데이터 값을 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-864">Copies the target and data value from the imported node.</span></span>|  
|<span data-ttu-id="2ad25-865">기타 모든 노드 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-865">All other node types.</span></span>|<span data-ttu-id="2ad25-866">이 노드 형식은 가져올 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-866">These node types cannot be imported.</span></span>|<span data-ttu-id="2ad25-867">이 노드 형식은 가져올 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-867">These node types cannot be imported.</span></span>|  
  
 <span data-ttu-id="2ad25-868">\* 여러 개의 DocumentType 노드를 가져올 수 있지만 문서는 오직 하나의 DocumentType만 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-868">\*Although DocumentType nodes can be imported, a document can only have one DocumentType.</span></span> <span data-ttu-id="2ad25-869">문서에 있는 경우 현재 DocumenType 노드를 새 필터를 추가 하기 전에 제거 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-869">If the document currently has a DocumenType node, it must be removed before adding a new one.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ad25-870">다음 예제에서는 원본 XML 문서에 두 번째 XML 문서에서 책 노드를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-870">The following example imports a book node from a second XML document into the original XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.ImportNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.ImportNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.ImportNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.ImportNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.ImportNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.ImportNode Example/VB/source.vb#1)]  
  
 <span data-ttu-id="2ad25-871">이 예제에서는 파일을 사용 하 여 `books.xml`입력으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-871">The example uses the file, `books.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2ad25-872">가져올 수 없는 노드 형식에 대해 이 메서드 호출</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-872">Calling this method on a node type which cannot be imported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InnerText">
      <MemberSignature Language="C#" Value="public override string InnerText { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.InnerText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InnerText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerText {  void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ad25-873">모든 경우에 <see cref="T:System.InvalidOperationException" />을 throw합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-873">Throws an <see cref="T:System.InvalidOperationException" /> in all cases.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ad25-874">노드와 모든 자식 노드의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-874">The values of the node and all its child nodes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-875">이 속성이 구현되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-875">This property is not implemented.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2ad25-876">모든 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-876">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InnerXml">
      <MemberSignature Language="C#" Value="public override string InnerXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerXml" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.InnerXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InnerXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerXml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ad25-877">현재 노드의 자식을 나타내는 태그를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-877">Gets or sets the markup representing the children of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ad25-878">현재 노드의 자식을 나타내는 태그입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-878">The markup of the children of the current node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-879">이 속성을 설정 노드의 자식이 지정된 된 문자열의 구문 분석 된 내용으로 바뀝니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-879">Setting this property replaces the children of the node with the parsed contents of the given string.</span></span> <span data-ttu-id="2ad25-880">현재 네임스페이스 컨텍스트에서 구문 분석이 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-880">The parsing is done in the current namespace context.</span></span>  
  
 <span data-ttu-id="2ad25-881">`InnerXml` 중복 네임 스페이스 선언을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-881">`InnerXml` removes redundant namespace declarations.</span></span> <span data-ttu-id="2ad25-882">결과적으로 복사 및 붙여넣기를 여러 번 실행해도 중복 네임스페이스 선언으로 인해 문서 크기가 증가하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-882">As a result, numerous cut and paste operations do not increase the size of your document with redundant namespace declarations.</span></span> <span data-ttu-id="2ad25-883">다음 XSL 문서를 고려 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-883">Consider the following XSL document:</span></span>  
  
```xml  
<xsl:stylesheet version="1.0"   
      xmlns:xsl="http://www.w3.org/1999/XSL/Transform">  
     <xsl:template match="stock">  
         ...  
     </xsl:template>  
    </xsl:stylesheet>  
```  
  
 <span data-ttu-id="2ad25-884">`InnerXml` 스타일 시트 노드의 속성 다음 문자열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-884">The `InnerXml` property on the stylesheet node returns the following string:</span></span>  
  
```xml  
<xsl:template match="stock"   
      xmlns:xsl="http://www.w3.org/1999/XSL/Transform">  
     ...  
    </xsl:template>  
```  
  
 <span data-ttu-id="2ad25-885">노드 id를 유지 하기 위해 사용 되는 추가 나타났다가 네임 스페이스 선언을 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-885">Notice the additional xmlns:xsl namespace declaration which is used to preserve the node identity.</span></span> <span data-ttu-id="2ad25-886">이 내부 XML 문자열을 다시 삽입 하면 받아볼 수 다시 원래 문서 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-886">If you re-insert this inner XML string, you will get back your original document.</span></span> <span data-ttu-id="2ad25-887">즉, `InnerXml` 부모 xsl: stylesheet 요소는 이미 나타났다가 네임 스페이스 delcaration 및 제거 하는 나타났다가 네임 스페이스 선언은 중복을 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-887">In other words, `InnerXml` recognizes that the xmlns:xsl namespace declaration is redundant, given that the parent xsl:stylesheet element already has the xmlns:xsl namespace delcaration, and therefore removes it.</span></span>  
  
 <span data-ttu-id="2ad25-888">이동 하는 경우 `InnerXml` 네임 스페이스가 없는 기본 문서에는 기본 네임 스페이스와 문서에서 동작이 약간 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-888">If you move `InnerXml` from a document with no default namespace to a document with a default namespace, the behavior is a little different.</span></span> <span data-ttu-id="2ad25-889">다음 XML 문자열을 고려 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-889">Consider the following XML string:</span></span>  
  
```xml  
<test>  
      <item>123</item>  
    </test>  
```  
  
 <span data-ttu-id="2ad25-890">`InnerXml` 네임 스페이스 선언이 없는 일반 XML 문자열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-890">`InnerXml` returns a plain XML string with no namespace declarations:</span></span>  
  
```xml  
<item>123</item>  
```  
  
 <span data-ttu-id="2ad25-891">문서에 다음이 문자열을 삽입 하는 다음과 같은 기본 네임 스페이스를 갖습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-891">If you then insert this string into a document that does have a default namespace, such as the following:</span></span>  
  
```xml  
<test2 xmlns="urn:1">  
    </test>  
```  
  
 <span data-ttu-id="2ad25-892">`InnerXml` 구문 분석 하 여 컨텍스트와 새 노드에서에 문자열 urn: 1 네임 스페이스를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-892">`InnerXml` parses the string in context, and the new nodes pick up the urn:1 namespace.</span></span> <span data-ttu-id="2ad25-893">결과 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-893">The result looks like this:</span></span>  
  
```xml  
<test2 xmlns="urn:1">  
      <item>123</item>  
    </test>  
```  
  
 <span data-ttu-id="2ad25-894">이제 요청 하면는 `InnerXml` 다음 돌아갑니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-894">Now when you ask for the `InnerXml` you get back the following:</span></span>  
  
```xml  
<item xmlns="urn:1">123</item>  
```  
  
 <span data-ttu-id="2ad25-895">문서 xmlns를 수동으로 추가 해야 하는 다음 네임 스페이스를에서 온 이루어지도록 하 삽입 된 항목을 명시적으로 하려는 경우 = "" 선언 하 고 결과 문자열을 삽입 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-895">If you explicitly want the inserted item to preserve the fact that it came from a document that had no namespace then you need to manually add an xmlns= "" declaration and insert the resulting string:</span></span>  
  
```xml  
<item xmlns="">123</item>  
```  
  
 <span data-ttu-id="2ad25-896">모든 작업의 결과 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-896">The net effect of all this is as follows:</span></span>  
  
1.  <span data-ttu-id="2ad25-897">잘라내기 및 붙여넣기 `InnerXml` 사용 하지 않는 문서에서 네임 스페이스는 간단 하 고 문자열에 "xmlns" 중복성을 만들지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-897">Cutting and pasting `InnerXml` among documents that do not use namespaces is clean and simple and does not create "xmlns" redundancy in your strings.</span></span>  
  
2.  <span data-ttu-id="2ad25-898">`InnerXml` 잘라내기 및 붙여넣기 (즉, XSL 스타일 시트) 둘 이상의 네임 스페이스를 포함 하는 문서 간 사용할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-898">`InnerXml` can also be used to cut and paste between documents which have more than one namespace (that is XSL stylesheets).</span></span>  
  
3.  <span data-ttu-id="2ad25-899">자동으로 나타났다가 선언 문자열에 표시 하 고 노드 계층 구조에서 사라집니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-899">xmlns:xsl declarations automatically appear in your strings and disappear in your node hierarchies.</span></span>  
  
4.  <span data-ttu-id="2ad25-900">이동할 경우에서 `InnerXml` 기본 네임 스페이스에 기본 네임 스페이스가 있는 문서에 들어 있는 문서에서 새 노드에서 새 기본 네임 스페이스를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-900">In the case where you are moving `InnerXml` from a document that has no default namespace to a document that does have a default namespace, the new nodes will pick up the new default namespace.</span></span>  
  
 <span data-ttu-id="2ad25-901">경우 `InnerXml` 설정 된 현재 문서에 정의 되어 있지 않은 엔터티 참조를 포함 하는 텍스트, 결과 트리 빈 EntityReference 노드가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-901">If `InnerXml` is set with text containing entity references that are not currently defined in the document, the resulting tree will contain empty EntityReference nodes.</span></span>  
  
 <span data-ttu-id="2ad25-902">이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-902">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="2ad25-903">이 속성을 설정할 때 지정된 XML이 올바른 형식이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-903">The XML specified when setting this property is not well-formed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public override bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ad25-904">현재 노드가 읽기 전용인지를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-904">Gets a value indicating whether the current node is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ad25-905">현재 노드가 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-905">
              <see langword="true" /> if the current node is read-only; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2ad25-906">
            <see langword="XmlDocument" /> 노드에서는 항상 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-906">
              <see langword="XmlDocument" /> nodes always return <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-907">읽기 전용 노드는 해당 속성, 특성 또는 자식 항목을 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-907">A read-only node is one whose properties, attributes, or children cannot be changed.</span></span> <span data-ttu-id="2ad25-908">트리에서 읽기 전용 노드를 해제 하 고 다른 위치에 삽입 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-908">You can remove a read-only node from the tree and insert it somewhere else.</span></span>  
  
 <span data-ttu-id="2ad25-909">이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-909">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ad25-910">다음 예제에서는 `IsReadOnly` 속성을 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-910">The following example shows how to use the `IsReadOnly` property.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.IsReadOnly Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.IsReadOnly Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.IsReadOnly Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.IsReadOnly Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.IsReadOnly Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.IsReadOnly Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2ad25-911">지정된 XML 데이터를 <see cref="T:System.IO.Stream" />, URL, <see cref="T:System.IO.TextReader" /> 또는 <see cref="T:System.Xml.XmlReader" />에서 로드합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-911">Loads the specified XML data from a <see cref="T:System.IO.Stream" />, a URL, a <see cref="T:System.IO.TextReader" />, or an <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public virtual void Load (System.IO.Stream inStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(class System.IO.Stream inStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Load(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Load (inStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Load(System::IO::Stream ^ inStream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="inStream">
          <span data-ttu-id="2ad25-912">로드할 XML 문서가 포함된 스트림입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-912">The stream containing the XML document to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ad25-913">지정된 스트림에서 XML 문서를 로드합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-913">Loads the XML document from the specified stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2ad25-914">`Load` 메서드는 항상 유효 공백 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-914">The `Load` method always preserves significant white space.</span></span> <span data-ttu-id="2ad25-915"><xref:System.Xml.XmlDocument.PreserveWhitespace%2A> 속성 공백이 있는 요소 내용에 있는 공백을 보존 되는지 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-915">The <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> property determines whether or not insignificant white space, that is white space in element content, is preserved.</span></span> <span data-ttu-id="2ad25-916">기본값은 `false`; 요소 내용에 있는 공백을 유지 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-916">The default is `false`; white space in element content is not preserved.</span></span>  
  
 <span data-ttu-id="2ad25-917">유효성 검사를 수행 하려는 경우 유효성 검사 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스는 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2ad25-917">If you want validation to occur, you can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="2ad25-918">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="2ad25-918">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="2ad25-919">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-919">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="2ad25-920">이 메서드는 자동으로 입력 XML (예를 들어 u t F-8, ANSI 및 등)의 문자열 형식을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-920">This method automatically detects the string format of the input XML (for example, UTF-8, ANSI, and so on).</span></span> <span data-ttu-id="2ad25-921">사용 하 여 응용 프로그램을 알고 있는 인코딩이 스트림을 읽는 데 사용 됩니다 하는 경우 고려는 <xref:System.Xml.XmlTextReader> 는 스트림을 읽는 데 개체를 사용 하 여는 <xref:System.Xml.XmlTextReader.Encoding%2A?displayProperty=nameWithType> 인코딩을 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-921">If your application needs to know which encoding is used to read the stream, consider using an <xref:System.Xml.XmlTextReader> object to read the stream, and then use the <xref:System.Xml.XmlTextReader.Encoding%2A?displayProperty=nameWithType> property to determine the encoding.</span></span> <span data-ttu-id="2ad25-922">사용 해야 하는 경우는 <xref:System.Xml.XmlDocument> 개체, XML을 사용할 수 있습니다는 <xref:System.Xml.XmlTextReader> 하나를 만들 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-922">If you need to use a <xref:System.Xml.XmlDocument> object to work with XML, you can use the <xref:System.Xml.XmlTextReader> object to create one.</span></span> <span data-ttu-id="2ad25-923">자세한 내용은 참조 [XPathDocument 및 XmlDocument를 사용 하 여 XML 데이터를 읽는](~/docs/standard/data/xml/reading-xml-data-using-xpathdocument-and-xmldocument.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-923">For more information, see [Reading XML Data using XPathDocument and XmlDocument](~/docs/standard/data/xml/reading-xml-data-using-xpathdocument-and-xmldocument.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="2ad25-924">XML에 로드 또는 구문 분석 오류가 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-924">There is a load or parse error in the XML.</span>
          </span>
          <span data-ttu-id="2ad25-925">이 경우 <see cref="T:System.IO.FileNotFoundException" />이 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-925">In this case, a <see cref="T:System.IO.FileNotFoundException" /> is raised.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Schema.ValidationEventArgs" />
        <altmember cref="T:System.Xml.Schema.XmlSeverityType" />
        <altmember cref="P:System.Xml.XmlValidatingReader.Schemas" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public virtual void Load (System.IO.TextReader txtReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(class System.IO.TextReader txtReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Load(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Load (txtReader As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Load(System::IO::TextReader ^ txtReader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="txtReader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="txtReader">
          <span data-ttu-id="2ad25-926">XML 데이터를 문서에 제공하기 위해 사용하는 <see langword="TextReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-926">The <see langword="TextReader" /> used to feed the XML data into the document.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ad25-927">지정된 <see cref="T:System.IO.TextReader" />에서 XML 문서를 로드합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-927">Loads the XML document from the specified <see cref="T:System.IO.TextReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2ad25-928">`Load` 메서드는 항상 유효 공백 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-928">The `Load` method always preserves significant white space.</span></span> <span data-ttu-id="2ad25-929"><xref:System.Xml.XmlDocument.PreserveWhitespace%2A> 속성 공백이 있는 요소 내용에 있는 공백을 보존 되는지 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-929">The <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> property determines whether or not insignificant white space, that is white space in element content, is preserved.</span></span> <span data-ttu-id="2ad25-930">기본값은 `false`; 요소 내용에 있는 공백을 유지 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-930">The default is `false`; white space in element content is not preserved.</span></span>  
  
 <span data-ttu-id="2ad25-931">유효성 검사를 수행 하려는 경우 유효성 검사 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스는 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2ad25-931">If you want validation to occur, you can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="2ad25-932">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="2ad25-932">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="2ad25-933">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-933">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ad25-934">다음 예제에서는 <xref:System.IO.StringReader> 에 XML 데이터 문자열을 로드 하는 클래스는 `XmlDocument` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-934">The following example uses the <xref:System.IO.StringReader> class to load a string of XML data into the `XmlDocument` object.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.CreateElement2 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.CreateElement2 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.CreateElement2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.CreateElement2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="2ad25-935">XML에 로드 또는 구문 분석 오류가 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-935">There is a load or parse error in the XML.</span>
          </span>
          <span data-ttu-id="2ad25-936">이 경우 문서는 빈 상태로 유지됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-936">In this case, the document remains empty.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.StreamReader" />
        <altmember cref="T:System.Xml.Schema.ValidationEventArgs" />
        <altmember cref="T:System.Xml.Schema.XmlSeverityType" />
        <altmember cref="P:System.Xml.XmlValidatingReader.Schemas" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public virtual void Load (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Load (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Load(System::String ^ filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">
          <span data-ttu-id="2ad25-937">로드할 XML 문서가 포함된 파일의 URL입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-937">URL for the file containing the XML document to load.</span>
          </span>
          <span data-ttu-id="2ad25-938">URL은 로컬 파일 또는 HTTP URL(웹 주소)일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-938">The URL can be either a local file or an HTTP URL (a Web address).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ad25-939">지정된 URL에서 XML 문서를 로드합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-939">Loads the XML document from the specified URL.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2ad25-940">`Load` 메서드는 항상 유효 공백 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-940">The `Load` method always preserves significant white space.</span></span> <span data-ttu-id="2ad25-941"><xref:System.Xml.XmlDocument.PreserveWhitespace%2A> 속성 공백이 있는 요소 내용에 있는 공백을 보존 되는지 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-941">The <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> property determines whether or not insignificant white space, that is white space in element content, is preserved.</span></span> <span data-ttu-id="2ad25-942">기본값은 `false`; 요소 내용에 있는 공백을 유지 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-942">The default is `false`; white space in element content is not preserved.</span></span>  
  
 <span data-ttu-id="2ad25-943">유효성 검사를 수행 하려는 경우 유효성 검사 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스는 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2ad25-943">If you want validation to occur, you can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="2ad25-944">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="2ad25-944">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="2ad25-945">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-945">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="2ad25-946">XML에 로드 또는 구문 분석 오류가 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-946">There is a load or parse error in the XML.</span>
          </span>
          <span data-ttu-id="2ad25-947">이 경우 <see cref="T:System.IO.FileNotFoundException" />이 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-947">In this case, a <see cref="T:System.IO.FileNotFoundException" /> is raised.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2ad25-948">
            <paramref name="filename" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-948">
              <paramref name="filename" /> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ad25-949">
            <paramref name="filename" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-949">
              <paramref name="filename" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="2ad25-950">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-950">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
          <span data-ttu-id="2ad25-951">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-951">For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="2ad25-952">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-952">The specified path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="2ad25-953">파일을 여는 동안 I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-953">An I/O error occurred while opening the file.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="2ad25-954">
            <paramref name="filename" />에 읽기 전용인 파일이 지정되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-954">
              <paramref name="filename" /> specified a file that is read-only.</span>
          </span>
          <span data-ttu-id="2ad25-955">-또는-  현재 플랫폼이 해당 작업을 지원하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-955">-or-  This operation is not supported on the current platform.</span>
          </span>
          <span data-ttu-id="2ad25-956">-또는-  <paramref name="filename" />이 디렉터리를 지정했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-956">-or-  <paramref name="filename" /> specified a directory.</span>
          </span>
          <span data-ttu-id="2ad25-957">-또는-  호출자에게 필요한 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-957">-or-  The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="2ad25-958">
            <paramref name="filename" />에 지정된 파일을 찾을 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-958">The file specified in <paramref name="filename" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2ad25-959">
            <paramref name="filename" />의 형식이 잘못되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-959">
              <paramref name="filename" /> is in an invalid format.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="2ad25-960">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-960">The caller does not have the required permission.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Schema.ValidationEventArgs" />
        <altmember cref="T:System.Xml.Schema.XmlSeverityType" />
        <altmember cref="P:System.Xml.XmlValidatingReader.Schemas" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public virtual void Load (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Load (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Load(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="2ad25-961">XML 데이터를 문서에 제공하기 위해 사용하는 <see langword="XmlReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-961">The <see langword="XmlReader" /> used to feed the XML data into the document.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ad25-962">지정된 <see cref="T:System.Xml.XmlReader" />에서 XML 문서를 로드합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-962">Loads the XML document from the specified <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2ad25-963">`Load` 메서드는 항상 유효 공백 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-963">The `Load` method always preserves significant white space.</span></span> <span data-ttu-id="2ad25-964"><xref:System.Xml.XmlDocument.PreserveWhitespace%2A> 속성 공백이 있는 요소 내용에 있는 공백을 보존 되는지 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-964">The <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> property determines whether or not insignificant white space, that is white space in element content, is preserved.</span></span> <span data-ttu-id="2ad25-965">기본값은 `false`; 요소 내용에 있는 공백을 유지 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-965">The default is `false`; white space in element content is not preserved.</span></span>  
  
 <span data-ttu-id="2ad25-966">판독기가 초기 상태인 경우 (<xref:System.Xml.XmlReader.ReadState%2A> = readstate.initial로 다시 설정), `Load` 판독기의 전체 내용을 사용 하 고 그 결과에서 DOM을 빌드합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-966">If the reader is in the initial state (<xref:System.Xml.XmlReader.ReadState%2A> =ReadState.Initial), `Load` consumes the entire contents of the reader and builds the DOM from what it finds.</span></span>  
  
 <span data-ttu-id="2ad25-967">판독기가 위치 일부 노드의 깊이 "n"에 이미,이 메서드는 해당 노드와 "n" 수준을 닫는 끝 태그 까지의 모든 후속 형제를 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-967">If the reader is already positioned on some node at depth "n", this method loads that node and all subsequent siblings up to the end tag that closes depth "n".</span></span> <span data-ttu-id="2ad25-968">다음과 같은 결과가이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-968">This has the following results.</span></span>  
  
 <span data-ttu-id="2ad25-969">현재 노드와 해당 형제 요소는 다음과 같습니다 하는 경우:</span><span class="sxs-lookup"><span data-stu-id="2ad25-969">If the current node and its siblings look like the following:</span></span>  
  
```xml  
<!--comment--><element1>one</element1><element2>two</element2>  
```  
  
 <span data-ttu-id="2ad25-970">`Load` 문서 루트 수준 요소가 두 개 있을 수 있으므로 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-970">`Load` throws an exception because a document cannot have two root level elements.</span></span> <span data-ttu-id="2ad25-971">현재 노드와 해당 형제 요소는 다음과 같습니다 하는 경우:</span><span class="sxs-lookup"><span data-stu-id="2ad25-971">If the current node and its siblings look like the following:</span></span>  
  
```xml  
<!--comment--><?process instruction?><!--comment--></endtag>  
```  
  
 <span data-ttu-id="2ad25-972">`Load` 성공 하면 하지만 루트 수준 요소가 없기 때문에 불완전 한 DOM 트리가 해 집니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-972">`Load` succeeds, but you have an incomplete DOM tree because there is no root level element.</span></span> <span data-ttu-id="2ad25-973">루트 수준 요소, 그렇지 않으면 추가 해야 문서를 저장 하기 전에 <xref:System.Xml.XmlDocument.Save%2A> 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-973">Before you save the document, you must add a root level element, otherwise <xref:System.Xml.XmlDocument.Save%2A> will throw an exception.</span></span>  
  
 <span data-ttu-id="2ad25-974">예를 들어 공백이 나 특성 노드는 문서의 루트 수준에 대해 유효 하지 않은 리프 노드에 판독기가 판독기가 계속 배치 될 때까지 읽기 루트에 사용할 수 있는 노드에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-974">If the reader is positioned on a leaf node that is invalid for the root level of a document, for example a white space or attribute node, the reader continues to read until it is positioned on a node that can be used for the root.</span></span> <span data-ttu-id="2ad25-975">이때 문서가 로드되기 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-975">The document begins loading at this point.</span></span>  
  
 <span data-ttu-id="2ad25-976">유효성 검사를 수행 하려는 경우 유효성 검사 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스는 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2ad25-976">If you want validation to occur, you can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="2ad25-977">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="2ad25-977">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="2ad25-978">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-978">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ad25-979">다음 예제에서는 로드의 마지막 책 노드는 `books.xml` XML 문서에는 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-979">The following example loads the last book node of the `books.xml` file into the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.Load2 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.Load2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.Load2 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.Load2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.Load2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.Load2 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="2ad25-980">이 예제에서는 파일을 사용 하 여 `books.xml`입력으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-980">The example uses the file, `books.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="2ad25-981">XML에 로드 또는 구문 분석 오류가 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-981">There is a load or parse error in the XML.</span>
          </span>
          <span data-ttu-id="2ad25-982">이 경우 문서는 빈 상태로 유지됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-982">In this case, the document remains empty.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Schema.ValidationEventArgs" />
        <altmember cref="T:System.Xml.Schema.XmlSeverityType" />
        <altmember cref="P:System.Xml.XmlValidatingReader.Schemas" />
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public virtual void LoadXml (string xml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadXml(string xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.LoadXml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadXml (xml As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadXml(System::String ^ xml);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xml">
          <span data-ttu-id="2ad25-983">로드할 XML 문서가 포함된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-983">String containing the XML document to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ad25-984">지정된 문자열에서 XML 문서를 로드합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-984">Loads the XML document from the specified string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-985">기본적으로는 `LoadXml` 메서드 공백이 나 유효 공백을 유지 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-985">By default the `LoadXml` method does not preserve white space or significant white space.</span></span>  
  
 <span data-ttu-id="2ad25-986">이 메서드는 Dtd를 구문 분석 하지만 DTD 또는 스키마 유효성 검사를 수행 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-986">This method parses DTDs, but does not do DTD or Schema validation.</span></span> <span data-ttu-id="2ad25-987">유효성 검사를 수행 하려는 경우 유효성 검사 만들 수 있습니다 <xref:System.Xml.XmlReader> 를 사용 하 여 인스턴스는 <xref:System.Xml.XmlReaderSettings> 클래스 및 <xref:System.Xml.XmlReader.Create%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2ad25-987">If you want validation to occur, you can create a validating <xref:System.Xml.XmlReader> instance by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="2ad25-988">자세한 내용은 <xref:System.Xml.XmlReader> 참조 페이지의 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="2ad25-988">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="2ad25-989">로드 하려는 경우는 <xref:System.IO.Stream>, <xref:System.String>, <xref:System.IO.TextReader>, 또는 <xref:System.Xml.XmlReader>,이 메서드 대신 Load 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-989">If you want to load from a <xref:System.IO.Stream>, <xref:System.String>, <xref:System.IO.TextReader>, or <xref:System.Xml.XmlReader>, use the Load method instead of this method.</span></span>  
  
 <span data-ttu-id="2ad25-990">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-990">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ad25-991">다음 예제에는 XML을 로드 한 `XmlDocument` 개체를 파일에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-991">The following example loads XML into an `XmlDocument` object and saves it out to a file.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.LoadXml Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.LoadXml Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.LoadXml Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.LoadXml Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.LoadXml Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.LoadXml Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="2ad25-992">XML에 로드 또는 구문 분석 오류가 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-992">There is a load or parse error in the XML.</span>
          </span>
          <span data-ttu-id="2ad25-993">이 경우 문서는 빈 상태로 유지됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-993">In this case, the document remains empty.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlDocument.PreserveWhitespace" />
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ad25-994">노드의 로컬 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-994">Gets the local name of the node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ad25-995">
            <see langword="XmlDocument" /> 노드의 경우 로컬 이름이 #document가 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-995">For <see langword="XmlDocument" /> nodes, the local name is #document.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-996">반환 된 로컬 이름에 따라 달라 집니다는 <xref:System.Xml.XmlDocument.NodeType%2A> 노드의 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-996">The local name returned depends on the <xref:System.Xml.XmlDocument.NodeType%2A> of the node.</span></span> <span data-ttu-id="2ad25-997">각 노드 형식에 대해 반환 되는 로컬 이름을 설명 하는 테이블을 보려면 참조는 <xref:System.Xml.XmlNode.LocalName%2A> 속성에는 <xref:System.Xml.XmlNode> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-997">To see a table describing the local name returned for each of the node types, see the <xref:System.Xml.XmlNode.LocalName%2A> property in the <xref:System.Xml.XmlNode> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ad25-998">노드의 정규화된 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-998">Gets the qualified name of the node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ad25-999">
            <see langword="XmlDocument" /> 노드의 경우 이름이 #document가 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-999">For <see langword="XmlDocument" /> nodes, the name is #document.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-1000">반환 되는 이름에 따라 달라 집니다는 <xref:System.Xml.XmlDocument.NodeType%2A> 노드의 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1000">The name returned depends on the <xref:System.Xml.XmlDocument.NodeType%2A> of the node.</span></span> <span data-ttu-id="2ad25-1001">각 노드 형식에 대해 반환 되는 이름을 설명 하는 테이블을 보려면 참조는 <xref:System.Xml.XmlNode.Name%2A> 속성에는 <xref:System.Xml.XmlNode> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1001">To see a table describing the name returned for each of the node types, see the <xref:System.Xml.XmlNode.Name%2A> property in the <xref:System.Xml.XmlNode> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNameTable NameTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ad25-1002">이 구현과 관련된 <see cref="T:System.Xml.XmlNameTable" />을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1002">Gets the <see cref="T:System.Xml.XmlNameTable" /> associated with this implementation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ad25-1003">문서 내에서 원자화된 버전의 문자열을 가져올 수 있게 해주는 <see langword="XmlNameTable" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1003">An <see langword="XmlNameTable" /> enabling you to get the atomized version of a string within the document.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-1004">각 `XmlDocument` 개체에는 <xref:System.Xml.NameTable> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1004">Each `XmlDocument` object has a <xref:System.Xml.NameTable> object.</span></span> <span data-ttu-id="2ad25-1005">요소 및 특성 이름에 저장 됩니다는 `NameTable` 원자화 된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1005">Element and attribute names are stored in the `NameTable` as atomized strings.</span></span> <span data-ttu-id="2ad25-1006">즉, 이름을 문서에서 참조 되는 경우에 여러 번 저장 된 한 번만에 `NameTable`합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1006">This means that even if a name is referenced in the document multiple times it is stored only once in the `NameTable`.</span></span> <span data-ttu-id="2ad25-1007">예를 들어, 문서 "고객" 이름 가진 여러 요소에 있을 경우 `NameTable` 해당 이름에 대 한 요청을 받을 때마다 동일한 개체를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1007">For example, if the document had multiple elements with the name "Customer", `NameTable` returns the same object whenever it receives a request for that name.</span></span> <span data-ttu-id="2ad25-1008">결과적으로, 사용자가 보다 더 비용이 많이 드는 문자열 비교는이 문자열에서 개체 비교를 사용 하 여 코드를 작성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1008">As a result, users can write code using object comparisons on these strings rather than the more expensive string comparisons.</span></span>  
  
 <span data-ttu-id="2ad25-1009">원자화된 문자열에 대한 자세한 내용은 <xref:System.Xml.XmlNameTable>을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1009">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
 <span data-ttu-id="2ad25-1010">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1010">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNameTable" />
      </Docs>
    </Member>
    <Member MemberName="NodeChanged">
      <MemberSignature Language="C#" Value="public event System.Xml.XmlNodeChangedEventHandler NodeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.XmlNodeChangedEventHandler NodeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlDocument.NodeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NodeChanged As XmlNodeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::XmlNodeChangedEventHandler ^ NodeChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ad25-1011">이 문서에 속하는 노드의 <see cref="P:System.Xml.XmlNode.Value" />가 변경된 경우에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1011">Occurs when the <see cref="P:System.Xml.XmlNode.Value" /> of a node belonging to this document has been changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-1012">이 이벤트는 값을 가진 노드에만 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1012">This event only applies to nodes that have a value.</span></span>  
  
 <span data-ttu-id="2ad25-1013">이 이벤트에는 문서에 삽입 된 여부이 문서에서 만든 모든 노드가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1013">All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NodeChanging">
      <MemberSignature Language="C#" Value="public event System.Xml.XmlNodeChangedEventHandler NodeChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.XmlNodeChangedEventHandler NodeChanging" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlDocument.NodeChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NodeChanging As XmlNodeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::XmlNodeChangedEventHandler ^ NodeChanging;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ad25-1014">이 문서에 속하는 노드의 <see cref="P:System.Xml.XmlNode.Value" />를 변경할 경우에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1014">Occurs when the <see cref="P:System.Xml.XmlNode.Value" /> of a node belonging to this document is about to be changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-1015">이 이벤트에 추가 확인을 수행 하 고 필요한 경우 작업을 중지 하려면 예외를 throw 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1015">This event allows the user to do extra checking and, if necessary, throw an exception to stop the operation.</span></span> <span data-ttu-id="2ad25-1016">예외가 발생 하는 경우는 `XmlDocument` 원래 상태로 돌아갑니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1016">If an exception is thrown the `XmlDocument` returns to its original state.</span></span> <span data-ttu-id="2ad25-1017">이 이벤트는 값을 가진 노드에만 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1017">This event only applies to nodes that have a value.</span></span>  
  
 <span data-ttu-id="2ad25-1018">이 이벤트에는 문서에 삽입 된 여부이 문서에서 만든 모든 노드가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1018">All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NodeInserted">
      <MemberSignature Language="C#" Value="public event System.Xml.XmlNodeChangedEventHandler NodeInserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.XmlNodeChangedEventHandler NodeInserted" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlDocument.NodeInserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NodeInserted As XmlNodeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::XmlNodeChangedEventHandler ^ NodeInserted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ad25-1019">이 문서에 속하는 노드를 다른 노드에 삽입한 경우에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1019">Occurs when a node belonging to this document has been inserted into another node.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-1020">이 이벤트에는 문서에 삽입 된 여부이 문서에서 만든 모든 노드가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1020">All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NodeInserting">
      <MemberSignature Language="C#" Value="public event System.Xml.XmlNodeChangedEventHandler NodeInserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.XmlNodeChangedEventHandler NodeInserting" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlDocument.NodeInserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NodeInserting As XmlNodeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::XmlNodeChangedEventHandler ^ NodeInserting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ad25-1021">이 문서에 속하는 노드를 다른 노드에 삽입할 경우에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1021">Occurs when a node belonging to this document is about to be inserted into another node.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-1022">이 이벤트에 추가 확인을 수행 하 고 필요한 경우 작업을 중지 하려면 예외를 throw 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1022">This event allows the user to do extra checking and, if necessary, throw an exception to stop the operation.</span></span> <span data-ttu-id="2ad25-1023">예외가 발생 하는 경우는 `XmlDocument` 원래 상태로 돌아갑니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1023">If an exception is thrown the `XmlDocument` returns to its original state.</span></span>  
  
 <span data-ttu-id="2ad25-1024">이 이벤트에는 문서에 삽입 된 여부이 문서에서 만든 모든 노드가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1024">All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NodeRemoved">
      <MemberSignature Language="C#" Value="public event System.Xml.XmlNodeChangedEventHandler NodeRemoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.XmlNodeChangedEventHandler NodeRemoved" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlDocument.NodeRemoved" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NodeRemoved As XmlNodeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::XmlNodeChangedEventHandler ^ NodeRemoved;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ad25-1025">이 문서에 속하는 노드를 부모에서 제거한 경우에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1025">Occurs when a node belonging to this document has been removed from its parent.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-1026">이 이벤트에는 문서에 삽입 된 여부이 문서에서 만든 모든 노드가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1026">All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NodeRemoving">
      <MemberSignature Language="C#" Value="public event System.Xml.XmlNodeChangedEventHandler NodeRemoving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.XmlNodeChangedEventHandler NodeRemoving" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlDocument.NodeRemoving" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NodeRemoving As XmlNodeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::XmlNodeChangedEventHandler ^ NodeRemoving;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ad25-1027">이 문서에 속하는 노드를 문서에서 제거할 경우에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1027">Occurs when a node belonging to this document is about to be removed from the document.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-1028">이 이벤트에 추가 확인을 수행 하 고 필요한 경우 작업을 중지 하려면 예외를 throw 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1028">This event allows the user to do extra checking and, if necessary, throw an exception to stop the operation.</span></span> <span data-ttu-id="2ad25-1029">예외가 발생 하는 경우는 `XmlDocument` 원래 상태로 돌아갑니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1029">If an exception is thrown the `XmlDocument` returns to its original state.</span></span>  
  
 <span data-ttu-id="2ad25-1030">이 이벤트에는 문서에 삽입 된 여부이 문서에서 만든 모든 노드가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1030">All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ad25-1031">현재 노드의 형식을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1031">Gets the type of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ad25-1032">노드 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1032">The node type.</span>
          </span>
          <span data-ttu-id="2ad25-1033">
            <see langword="XmlDocument" /> 노드의 경우 이 값은 XmlNodeType.Document가 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1033">For <see langword="XmlDocument" /> nodes, this value is XmlNodeType.Document.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="OwnerDocument">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlDocument OwnerDocument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDocument OwnerDocument" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.OwnerDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property OwnerDocument As XmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlDocument ^ OwnerDocument { System::Xml::XmlDocument ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ad25-1034">현재 노드가 속하는 <see cref="T:System.Xml.XmlDocument" />를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1034">Gets the <see cref="T:System.Xml.XmlDocument" /> to which the current node belongs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ad25-1035">
            <see langword="XmlDocument" /> 노드(<see cref="P:System.Xml.XmlDocument.NodeType" />이 XmlNodeType.Document)의 경우 이 속성에서는 항상 <see langword="null" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1035">For <see langword="XmlDocument" /> nodes (<see cref="P:System.Xml.XmlDocument.NodeType" /> equals XmlNodeType.Document), this property always returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentNode">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode ParentNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode ParentNode" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.ParentNode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ParentNode As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ ParentNode { System::Xml::XmlNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ad25-1036">부모가 있을 수 있는 노드의 경우 이 노드의 부모 노드를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1036">Gets the parent node of this node (for nodes that can have parents).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ad25-1037">항상 <see langword="null" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1037">Always returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreserveWhitespace">
      <MemberSignature Language="C#" Value="public bool PreserveWhitespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveWhitespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.PreserveWhitespace" />
      <MemberSignature Language="VB.NET" Value="Public Property PreserveWhitespace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveWhitespace { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ad25-1038">요소 콘텐츠에서 공백을 유지할지를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1038">Gets or sets a value indicating whether to preserve white space in element content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ad25-1039">공백을 유지하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1039">
              <see langword="true" /> to preserve white space; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2ad25-1040">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1040">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-1041">이 속성 로드 하는 동안 공백이 처리 되는 방법을 결정 하 고 프로세스를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1041">This property determines how white space is handled during the load and save process.</span></span>  
  
 <span data-ttu-id="2ad25-1042">경우 `PreserveWhitespace` 은 `true` 하기 전에 <xref:System.Xml.XmlDocument.Load%2A> 또는 <xref:System.Xml.XmlDocument.LoadXml%2A> 은 호출, 공백 노드는 유지 된 경우이 속성은 그렇지 않으면 `false`, 중요 한 공백이 유지 됩니다, 공백 없는 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1042">If `PreserveWhitespace` is `true` before <xref:System.Xml.XmlDocument.Load%2A> or <xref:System.Xml.XmlDocument.LoadXml%2A> is called, white space nodes are preserved; otherwise, if this property is `false`, significant white space is preserved, white space is not.</span></span>  
  
 <span data-ttu-id="2ad25-1043">경우 `PreserveWhitespace` 은 `true` 하기 전에 <xref:System.Xml.XmlDocument.Save%2A> 은 호출, 문서에 있는 공백을 출력에 유지 된, 되지 않았으면이 속성이 `false`, `XmlDocument` 자동 들여쓰기 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1043">If `PreserveWhitespace` is `true` before <xref:System.Xml.XmlDocument.Save%2A> is called, white space in the document is preserved in the output; otherwise, if this property is `false`, `XmlDocument` auto-indents the output.</span></span>  
  
 <span data-ttu-id="2ad25-1044">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1044">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ad25-1045">다음 예제에서는 파일에서 공백을 제거 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1045">The following example shows how to strip white space from a file.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.PreserveWhitespace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.PreserveWhitespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.PreserveWhitespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.PreserveWhitespace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.PreserveWhitespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.PreserveWhitespace Example/VB/source.vb#1)]  
  
 <span data-ttu-id="2ad25-1046">이 예제에서는 파일을 사용 하 여 `book.xml` 입력으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1046">The example uses the file `book.xml` as input.</span></span>  
  
 [!code-xml[Classic WebData XmlDocument.PreserveWhitespace Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlDocument.PreserveWhitespace Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode ReadNode (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode ReadNode(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.ReadNode(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadNode (reader As XmlReader) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ ReadNode(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="2ad25-1047">XML 소스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1047">The XML source</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ad25-1048">
            <see cref="T:System.Xml.XmlNode" />의 내용을 기준으로 <see cref="T:System.Xml.XmlReader" /> 개체를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1048">Creates an <see cref="T:System.Xml.XmlNode" /> object based on the information in the <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
          <span data-ttu-id="2ad25-1049">판독기는 노드나 특성에 위치해야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1049">The reader must be positioned on a node or attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ad25-1050">새 <see langword="XmlNode" />이거나 더 이상 노드가 없으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1050">The new <see langword="XmlNode" /> or <see langword="null" /> if no more nodes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-1051">하나를 읽고 `XmlNode` 지정된 된 판독기에서 다음 노드에 판독기를 배치 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1051">Reads one `XmlNode` from the given reader and positions the reader on the next node.</span></span> <span data-ttu-id="2ad25-1052">이 메서드가 만드는 유형의 `XmlNode` 일치는 <xref:System.Xml.XmlNode.NodeType%2A> 에 있는 현재 판독기가 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1052">This method creates the type of `XmlNode` matching the <xref:System.Xml.XmlNode.NodeType%2A> on which the reader is currently positioned.</span></span> <span data-ttu-id="2ad25-1053">(판독기가 초기 상태인 경우 `ReadNode` 판독기는 첫 번째 노드를 이동 하 고 해당 노드에서 작동 하는 다음.)</span><span class="sxs-lookup"><span data-stu-id="2ad25-1053">(If the reader is in the initial state, `ReadNode` advances the reader to the first node and then operates on that node.)</span></span>  
  
 <span data-ttu-id="2ad25-1054">판독기가 요소를 시작 하는 경우 `ReadNode` 모든 특성 및 모든 자식 노드를 최대 읽고 현재 노드의 끝 태그를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1054">If the reader is positioned on the start of an element, `ReadNode` reads all the attributes and any child nodes, up to and including the end tag of the current node.</span></span> <span data-ttu-id="2ad25-1055">`XmlNode` 반환 된 하위 트리에 있는 읽은 모든 내용을 나타내는 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1055">The `XmlNode` returned contains the sub-tree representing everything read.</span></span> <span data-ttu-id="2ad25-1056">판독기 종료 태그 바로 뒤에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1056">The reader is positioned immediately after the end tag.</span></span>  
  
 <span data-ttu-id="2ad25-1057">`ReadNode` 특성을 읽을 수도 있지만 경우 판독기 다음 특성으로 진행 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1057">`ReadNode` can also read attributes, but in this case it does not advance the reader to the next attribute.</span></span> <span data-ttu-id="2ad25-1058">이 옵션을 사용 하면 다음 C# 코드를 작성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1058">This allows you to write the following C# code:</span></span>  
  
```csharp  
XmlDocument doc = new XmlDocument();  
while (reader.MoveToNextAttribute())  
{  
  XmlNode a = doc.ReadNode(reader);  
  // Do some more processing.  
}  
```  
  
 <span data-ttu-id="2ad25-1059">`ReadNode` 사용 특성 값 하지만 호출한 후 즉 `ReadNode` 특성에 <xref:System.Xml.XmlReader.ReadAttributeValue%2A?displayProperty=nameWithType> 반환 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1059">`ReadNode` does consume the attribute value though, which means after calling `ReadNode` on an attribute, <xref:System.Xml.XmlReader.ReadAttributeValue%2A?displayProperty=nameWithType> returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ad25-1060">다음 예제에서는 `ReadNode` 새 노드를 만드는 한 다음 문서에 새 노드를 삽입 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1060">The following example uses `ReadNode` to create a new node and then inserts the new node into the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.ReadNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.ReadNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.ReadNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.ReadNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.ReadNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.ReadNode Example/VB/source.vb#1)]  
  
 <span data-ttu-id="2ad25-1061">이 예제에서는 파일을 사용 하 여 `cd.xml`입력으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1061">The example uses the file, `cd.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlDocument.ReadNode Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlDocument.ReadNode Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="2ad25-1062">판독기가 유효한 DOM 노드(예: EndElement 또는 EndEntity)로 변환되지 않는 노드 형식 위치에 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1062">The reader is positioned on a node type that does not translate to a valid DOM node (for example, EndElement or EndEntity).</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="2ad25-1063">
            <para>이 메서드는 상속 요청. 재정의 하려면 완전 신뢰가 필요는 <see langword="ReadNode" /> 메서드.  이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1063">
              <para>This method has an inheritance demand. Full trust is required to override the <see langword="ReadNode" /> method.  This method is a Microsoft extension to the Document Object Model (DOM).</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2ad25-1064">XML 문서를 지정된 위치에 저장합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1064">Saves the XML document to the specified location.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public virtual void Save (System.IO.Stream outStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class System.IO.Stream outStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Save(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Save (outStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Save(System::IO::Stream ^ outStream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="outStream">
          <span data-ttu-id="2ad25-1065">저장할 스트림입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1065">The stream to which you want to save.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ad25-1066">XML 문서를 지정된 스트림에 저장합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1066">Saves the XML document to the specified stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-1067">경우에 공백이 유지 됩니다 <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> 로 설정 된 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1067">White space is preserved only if <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="2ad25-1068">현재 XmlDeclaration `XmlDocument` 개체는 저장된 된 문서에서 인코딩 특성을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1068">The XmlDeclaration of the current `XmlDocument` object determines the encoding attribute in the saved document.</span></span> <span data-ttu-id="2ad25-1069">인코딩 특성의 값을 가져오는 <xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1069">The value of the encoding attribute is taken from the <xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="2ad25-1070">경우는 `XmlDocument` 않습니다 XmlDeclaration, 없거나는 XmlDeclaration에 인코딩 특성이 없는 경우 저장된 된 문서는 하나도 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1070">If the `XmlDocument` does not have an XmlDeclaration, or if the XmlDeclaration does not have an encoding attribute, the saved document will not have one either.</span></span>  
  
 <span data-ttu-id="2ad25-1071">문서를 저장 하는 경우 (로컬 이름 + 네임 스페이스 URI) 노드 id를 올바르게 유지 하 xmlns 특성 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1071">When the document is saved, xmlns attributes are generated to persist the node identity (local name + namespace URI) correctly.</span></span> <span data-ttu-id="2ad25-1072">예를 들어 다음 C# 코드</span><span class="sxs-lookup"><span data-stu-id="2ad25-1072">For example, the following C# code</span></span>  
  
```csharp  
XmlDocument doc = new XmlDocument();  
doc.AppendChild(doc.CreateElement("item","urn:1"));  
doc.Save(Console.Out);  
```  
  
 <span data-ttu-id="2ad25-1073">이 xml 특성을 생성 `<item xmls="urn:1"/>`합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1073">generates this xmls attribute `<item xmls="urn:1"/>`.</span></span>  
  
 <span data-ttu-id="2ad25-1074">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1074">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="2ad25-1075">만 <xref:System.Xml.XmlDocument.Save%2A> 메서드는 올바른 형식의 XML 문서를 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1075">Note that only the <xref:System.Xml.XmlDocument.Save%2A> method enforces a well-formed XML document.</span></span> <span data-ttu-id="2ad25-1076">다른 모든 `Save` 오버 로드는 올바른 형식의 조각이 보장 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1076">All other `Save` overloads only guarantee a well-formed fragment.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="2ad25-1077">이 작업을 수행하면 올바른 형식의 XML 문서가 생성되지 않습니다(예: 문서 요소 또는 중복 XML 선언 없음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1077">The operation would not result in a well formed XML document (for example, no document element or duplicate XML declarations).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public virtual void Save (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Save(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Save (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Save(System::IO::TextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="2ad25-1078">저장할 대상 <see langword="TextWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1078">The <see langword="TextWriter" /> to which you want to save.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ad25-1079">XML 문서를 지정된 <see cref="T:System.IO.TextWriter" />에 저장합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1079">Saves the XML document to the specified <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-1080">인코딩는 `TextWriter` 기록 되는 인코딩을 결정 (의 인코딩을으로 대체 되는 인코딩을 인코딩에 `TextWriter`).</span><span class="sxs-lookup"><span data-stu-id="2ad25-1080">The encoding on the `TextWriter` determines the encoding that is written out (The encoding of the XmlDeclaration node is replaced by the encoding of the `TextWriter`).</span></span> <span data-ttu-id="2ad25-1081">있었던에 지정 된 인코딩이 `TextWriter`, `XmlDocument` 인코딩 특성 없이 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1081">If there was no encoding specified on the `TextWriter`, the `XmlDocument` is saved without an encoding attribute.</span></span>  
  
 <span data-ttu-id="2ad25-1082">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1082">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="2ad25-1083">만 <xref:System.Xml.XmlDocument.Save%2A> 메서드는 올바른 형식의 XML 문서를 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1083">Note that only the <xref:System.Xml.XmlDocument.Save%2A> method enforces a well-formed XML document.</span></span> <span data-ttu-id="2ad25-1084">다른 모든 `Save` 오버 로드는 올바른 형식의 조각이 보장 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1084">All other `Save` overloads only guarantee a well-formed fragment.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="2ad25-1085">이 작업을 수행하면 올바른 형식의 XML 문서가 생성되지 않습니다(예: 문서 요소 또는 중복 XML 선언 없음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1085">The operation would not result in a well formed XML document (for example, no document element or duplicate XML declarations).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public virtual void Save (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Save (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Save(System::String ^ filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">
          <span data-ttu-id="2ad25-1086">문서를 저장할 파일의 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1086">The location of the file where you want to save the document.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ad25-1087">XML 문서를 지정된 파일에 저장합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1087">Saves the XML document to the specified file.</span>
          </span>
          <span data-ttu-id="2ad25-1088">지정한 파일이 존재하면 이 메서드를 덮어씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1088">If the specified file exists, this method overwrites it.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-1089">경우에만 출력 파일에 공백이 유지 됩니다 <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> 로 설정 된 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1089">White space is preserved in the output file only if <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="2ad25-1090">현재 XmlDeclaration `XmlDocument` 개체는 저장된 된 문서에서 인코딩 특성을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1090">The XmlDeclaration of the current `XmlDocument` object determines the encoding attribute in the saved document.</span></span> <span data-ttu-id="2ad25-1091">인코딩 특성의 값을 가져오는 <xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1091">The value of the encoding attribute is taken from the <xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="2ad25-1092">경우는 `XmlDocument` 않습니다 XmlDeclaration, 없거나는 XmlDeclaration에 인코딩 특성이 없는 경우 저장된 된 문서는 하나도 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1092">If the `XmlDocument` does not have an XmlDeclaration, or if the XmlDeclaration does not have an encoding attribute, the saved document will not have one either.</span></span>  
  
 <span data-ttu-id="2ad25-1093">문서를 저장 하는 경우 (로컬 이름 + 네임 스페이스 URI) 노드 id를 올바르게 유지 하 xmlns 특성 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1093">When the document is saved, xmlns attributes are generated to persist the node identity (local name + namespace URI) correctly.</span></span> <span data-ttu-id="2ad25-1094">예를 들어 다음 C# 코드</span><span class="sxs-lookup"><span data-stu-id="2ad25-1094">For example, the following C# code</span></span>  
  
```csharp  
XmlDocument doc = new XmlDocument();  
doc.AppendChild(doc.CreateElement("item","urn:1"));  
doc.Save(Console.Out);  
```  
  
 <span data-ttu-id="2ad25-1095">이 xml 특성을 생성 `<item xmls="urn:1"/>`합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1095">generates this xmls attribute `<item xmls="urn:1"/>`.</span></span>  
  
 <span data-ttu-id="2ad25-1096">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1096">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="2ad25-1097">만 <xref:System.Xml.XmlDocument.Save%2A> 메서드는 올바른 형식의 XML 문서를 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1097">Note that only the <xref:System.Xml.XmlDocument.Save%2A> method enforces a well-formed XML document.</span></span> <span data-ttu-id="2ad25-1098">다른 모든 `Save` 오버 로드는 올바른 형식의 조각이 보장 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1098">All other `Save` overloads only guarantee a well-formed fragment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ad25-1099">다음 예제에서는 XmlDocument 개체에 XML을 로드 하려면 수정 하 고 data.xml 라는 파일에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1099">The following example loads XML into an XmlDocument object, modifies it, and then saves it to a file named data.xml.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.Save Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.Save Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.Save Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.Save Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.Save Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.Save Example/VB/source.vb#1)]  
  
 <span data-ttu-id="2ad25-1100">Data.xml 파일에 다음 XML 포함 됩니다: `<item><name>wrench</name><price>10.95</price></item>`합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1100">The data.xml file will contain the following XML: `<item><name>wrench</name><price>10.95</price></item>`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="2ad25-1101">이 작업을 수행하면 올바른 형식의 XML 문서가 생성되지 않습니다(예: 문서 요소 또는 중복 XML 선언 없음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1101">The operation would not result in a well formed XML document (for example, no document element or duplicate XML declarations).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public virtual void Save (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Save(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Save (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Save(System::Xml::XmlWriter ^ w);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="2ad25-1102">저장할 대상 <see langword="XmlWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1102">The <see langword="XmlWriter" /> to which you want to save.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ad25-1103">XML 문서를 지정된 <see cref="T:System.Xml.XmlWriter" />에 저장합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1103">Saves the XML document to the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-1104">경우에 공백이 유지 됩니다 <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> 로 설정 된 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1104">White space is preserved only if <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="2ad25-1105">인코딩는 `XmlWriter` 기록 되는 인코딩을 결정 (의 인코딩을으로 대체 되는 인코딩을 인코딩에 `XmlWriter`).</span><span class="sxs-lookup"><span data-stu-id="2ad25-1105">The encoding on the `XmlWriter` determines the encoding that is written out (The encoding of the XmlDeclaration node is replaced by the encoding of the `XmlWriter`).</span></span> <span data-ttu-id="2ad25-1106">있었던에 지정 된 인코딩이 `XmlWriter`, `XmlDocument` 인코딩 특성 없이 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1106">If there was no encoding specified on the `XmlWriter`, the `XmlDocument` is saved without an encoding attribute.</span></span>  
  
 <span data-ttu-id="2ad25-1107">문서를 저장 하는 경우 (예: LocalName + NamespaceURI) 노드 id를 올바르게 유지 하 xmlns 특성 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1107">When the document is saved, xmlns attributes are generated to persist the node identity (LocalName + NamespaceURI) correctly.</span></span> <span data-ttu-id="2ad25-1108">예를 들어 다음 C# 코드</span><span class="sxs-lookup"><span data-stu-id="2ad25-1108">For example, the following C# code</span></span>  
  
```csharp  
XmlDocument doc = new XmlDocument();  
doc.AppendChild(doc.CreateElement("item","urn:1"));  
doc.Save(Console.Out);  
```  
  
 <span data-ttu-id="2ad25-1109">이 xml 특성을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1109">generates this xmls attribute:</span></span>  
  
```xml  
<item  
    xmls="urn:1"/>  
```  
  
 <span data-ttu-id="2ad25-1110">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1110">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="2ad25-1111">만 <xref:System.Xml.XmlDocument.Save%2A> 메서드는 올바른 형식의 XML 문서를 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1111">Note that only the <xref:System.Xml.XmlDocument.Save%2A> method enforces a well-formed XML document.</span></span> <span data-ttu-id="2ad25-1112">다른 모든 `Save` 오버 로드는 올바른 형식의 조각이 보장 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1112">All other `Save` overloads only guarantee a well-formed fragment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ad25-1113">다음 예제에는 XML을 로드 한 `XmlDocument` 개체를 파일에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1113">The following example loads XML into an `XmlDocument` object and saves it out to a file.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.LoadXml Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.LoadXml Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.LoadXml Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.LoadXml Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.LoadXml Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.LoadXml Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="2ad25-1114">이 작업을 수행하면 올바른 형식의 XML 문서가 생성되지 않습니다(예: 문서 요소 또는 중복 XML 선언 없음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1114">The operation would not result in a well formed XML document (for example, no document element or duplicate XML declarations).</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlTextWriter.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="SchemaInfo">
      <MemberSignature Language="C#" Value="public override System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.IXmlSchemaInfo SchemaInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.SchemaInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SchemaInfo As IXmlSchemaInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::IXmlSchemaInfo ^ SchemaInfo { System::Xml::Schema::IXmlSchemaInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.IXmlSchemaInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ad25-1115">노드의 PSVI(스키마 유효성 검사 이후 정보 집합)를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1115">Returns the Post-Schema-Validation-Infoset (PSVI) of the node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ad25-1116">노드의 PSVI를 나타내는 <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1116">The <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> object representing the PSVI of the node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-1117">이 속성의 PSVI 콘텐츠 노드를 확인 후 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1117">The PSVI contents of this property are set after the node has been validated.</span></span>  
  
 <span data-ttu-id="2ad25-1118">이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1118">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet Schemas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaSet Schemas" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.Schemas" />
      <MemberSignature Language="VB.NET" Value="Public Property Schemas As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaSet ^ Schemas { System::Xml::Schema::XmlSchemaSet ^ get(); void set(System::Xml::Schema::XmlSchemaSet ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ad25-1119">이 <see cref="T:System.Xml.XmlDocument" />에 연결된 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 개체를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1119">Gets or sets the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object associated with this <see cref="T:System.Xml.XmlDocument" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ad25-1120">이 <see cref="T:System.Xml.XmlDocument" />에 연결된 XSD(XML 스키마 정의) 언어를 포함하는 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 개체이거나, 빈 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1120">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object containing the XML Schema Definition Language (XSD) schemas associated with this <see cref="T:System.Xml.XmlDocument" />; otherwise, an empty <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-1121">에 포함 된 스키마는 <xref:System.Xml.Schema.XmlSchemaSet> 연관 된 개체는 <xref:System.Xml.XmlDocument> 개체 유효성 검사에 사용 됩니다 때는 <xref:System.Xml.XmlDocument.Validate%2A> 의 메서드는 <xref:System.Xml.XmlDocument> 실행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1121">The schemas contained in an <xref:System.Xml.Schema.XmlSchemaSet> object associated with an <xref:System.Xml.XmlDocument> object are used for validation when the <xref:System.Xml.XmlDocument.Validate%2A> method of an <xref:System.Xml.XmlDocument> is executed.</span></span>  
  
 <span data-ttu-id="2ad25-1122">때는 <xref:System.Xml.XmlDocument> 개체를 사용한 XML 데이터를 사용 하 여 초기화 되는 <xref:System.Xml.XmlReader> 개체는 <xref:System.Xml.Schema.XmlSchemaSet> 개체에서 로드 되는 <xref:System.Xml.XmlReaderSettings.Schemas%2A> 의 속성은 <xref:System.Xml.XmlReader> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1122">When an <xref:System.Xml.XmlDocument> object is initialized with XML data from an <xref:System.Xml.XmlReader> object, the <xref:System.Xml.Schema.XmlSchemaSet> object is loaded from the <xref:System.Xml.XmlReaderSettings.Schemas%2A> property of the <xref:System.Xml.XmlReader> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Xml.XmlDocument.Validate" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Validate">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2ad25-1123">
            <see cref="P:System.Xml.XmlDocument.Schemas" /> 속성에 포함된 XSD(XML 스키마 정의) 언어 스키마를 기준으로 <see cref="T:System.Xml.XmlDocument" />의 유효성을 검사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1123">Validates the <see cref="T:System.Xml.XmlDocument" /> against the XML Schema Definition Language (XSD) schemas contained in the <see cref="P:System.Xml.XmlDocument.Schemas" /> property.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public void Validate (System.Xml.Schema.ValidationEventHandler validationEventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Validate(class System.Xml.Schema.ValidationEventHandler validationEventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Validate(System::Xml::Schema::ValidationEventHandler ^ validationEventHandler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationEventHandler" Type="System.Xml.Schema.ValidationEventHandler" />
      </Parameters>
      <Docs>
        <param name="validationEventHandler">
          <span data-ttu-id="2ad25-1124">스키마 유효성 검사 경고 및 오류에 대한 정보를 받는 <see cref="T:System.Xml.Schema.ValidationEventHandler" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1124">The <see cref="T:System.Xml.Schema.ValidationEventHandler" /> object that receives information about schema validation warnings and errors.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ad25-1125">
            <see cref="P:System.Xml.XmlDocument.Schemas" /> 속성에 포함된 XSD(XML 스키마 정의) 언어 스키마를 기준으로 <see cref="T:System.Xml.XmlDocument" />의 유효성을 검사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1125">Validates the <see cref="T:System.Xml.XmlDocument" /> against the XML Schema Definition Language (XSD) schemas contained in the <see cref="P:System.Xml.XmlDocument.Schemas" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-1126"><xref:System.Xml.XmlDocument.Validate%2A> 메서드의 XML 데이터의 유효성 검사는 <xref:System.Xml.XmlDocument> 에 포함 된 스키마에 대해는 <xref:System.Xml.XmlDocument.Schemas%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1126">The <xref:System.Xml.XmlDocument.Validate%2A> method validates the XML data in the <xref:System.Xml.XmlDocument> against the schemas contained in the <xref:System.Xml.XmlDocument.Schemas%2A> property.</span></span> <span data-ttu-id="2ad25-1127"><xref:System.Xml.XmlDocument.Validate%2A> 메서드 infoset 확대를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1127">The <xref:System.Xml.XmlDocument.Validate%2A> method performs infoset augmentation.</span></span> <span data-ttu-id="2ad25-1128">특히, 유효성 검사를 수행한 후 스키마 기본값이 적용 되, 텍스트 값이 필요에 따라 원자 값으로 변환 및 형식 정보는 유효성이 검사 된 정보 항목과 연결 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1128">Specifically, after successful validation, schema defaults are applied, text values are converted to atomic values as necessary, and type information is associated with validated information items.</span></span> <span data-ttu-id="2ad25-1129">결과 이전에 형식화 되지 않은 XML 하위 트리는는 <xref:System.Xml.XmlDocument> 형식화 된 하위 트리 아래 템플릿으로 바뀝니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1129">The result is a previously un-typed XML sub-tree in the <xref:System.Xml.XmlDocument> replaced with a typed sub-tree.</span></span>  
  
 <span data-ttu-id="2ad25-1130">다음은 사용할 때 고려해 야 할 중요 참고 사항에서 <xref:System.Xml.XmlDocument.Validate%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1130">The following are important notes to consider when using the <xref:System.Xml.XmlDocument.Validate%2A> method.</span></span>  
  
-   <span data-ttu-id="2ad25-1131">스키마 위치 힌트와 같은 `xsi:schemaLocation` 또는 `xsi:noNamespaceSchemaLocation` 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1131">Schema location hints like `xsi:schemaLocation` or `xsi:noNamespaceSchemaLocation` are ignored.</span></span>  
  
-   <span data-ttu-id="2ad25-1132">인라인 스키마는 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1132">Inline schemas are ignored.</span></span>  
  
-   <span data-ttu-id="2ad25-1133">유효성 검사 동안 스키마 유효성 검사 오류가 발생 하는 경우는 <xref:System.Xml.XmlDocument> 올바른 형식 정보가 있는 일부 노드 및 일부 유효성 부분적으로 검사 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1133">If schema validation errors occur during validation the <xref:System.Xml.XmlDocument> becomes partially validated with some nodes with correct type information and some without.</span></span>  
  
-   <span data-ttu-id="2ad25-1134">유효성 검사 프로세스를 고유성 및 참조 제약 조건을 검사 포함 (`xs:ID`, `xs:IDREF`, `xs:key`, `xs:keyref`, 및 `xs:unique`).</span><span class="sxs-lookup"><span data-stu-id="2ad25-1134">The validation process includes checking for uniqueness and reference constraints (`xs:ID`, `xs:IDREF`, `xs:key`, `xs:keyref`, and `xs:unique`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ad25-1135">다음 예제에서는 <xref:System.Xml.XmlDocument.Validate%2A> 메서드를 사용하는 방법을 보여줍니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1135">The following example illustrates use of the <xref:System.Xml.XmlDocument.Validate%2A> method.</span></span> <span data-ttu-id="2ad25-1136">이 예에서는 만듭니다는 <xref:System.Xml.XmlDocument> 사용 하 여 연결 된 XSD 스키마를 포함 하는 <xref:System.Xml.XmlReaderSettings> 및 <xref:System.Xml.XmlReader> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1136">The example creates an <xref:System.Xml.XmlDocument> that contains an associated XSD schema using the <xref:System.Xml.XmlReaderSettings> and <xref:System.Xml.XmlReader> objects.</span></span> <span data-ttu-id="2ad25-1137">이 예제에서는 다음 사용 하 여는 <xref:System.Xml.XPath.XPathNavigator> 스키마 유효성 검사 오류를 생성 하는 XML 문서에 있는 요소의 형식화 된 값을 올바르게 수정 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1137">The example then uses the <xref:System.Xml.XPath.XPathNavigator> class to incorrectly modify the typed value of an element in the XML document generating a schema validation error.</span></span>  
  
 [!code-cpp[XPathValidation#1](~/samples/snippets/cpp/VS_Snippets_Data/XPathValidation/CPP/XPathValidation.cpp#1)]
 [!code-csharp[XPathValidation#1](~/samples/snippets/csharp/VS_Snippets_Data/XPathValidation/CS/XPathValidation.cs#1)]
 [!code-vb[XPathValidation#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathValidation/VB/XPathValidation.vb#1)]  
  
 <span data-ttu-id="2ad25-1138">이 예제에서는 `contosoBooks.xml` 및 `contosoBooks.xsd` 파일을 입력으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1138">The example takes the `contosoBooks.xml` and `contosoBooks.xsd` files as input.</span></span>  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">
          <span data-ttu-id="2ad25-1139">스키마 유효성 검사 이벤트가 발생했지만 <see cref="T:System.Xml.Schema.ValidationEventHandler" /> 개체가 지정되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1139">A schema validation event occurred and no <see cref="T:System.Xml.Schema.ValidationEventHandler" /> object was specified.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public void Validate (System.Xml.Schema.ValidationEventHandler validationEventHandler, System.Xml.XmlNode nodeToValidate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Validate(class System.Xml.Schema.ValidationEventHandler validationEventHandler, class System.Xml.XmlNode nodeToValidate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Validate(System::Xml::Schema::ValidationEventHandler ^ validationEventHandler, System::Xml::XmlNode ^ nodeToValidate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationEventHandler" Type="System.Xml.Schema.ValidationEventHandler" />
        <Parameter Name="nodeToValidate" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="validationEventHandler">
          <span data-ttu-id="2ad25-1140">스키마 유효성 검사 경고 및 오류에 대한 정보를 받는 <see cref="T:System.Xml.Schema.ValidationEventHandler" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1140">The <see cref="T:System.Xml.Schema.ValidationEventHandler" /> object that receives information about schema validation warnings and errors.</span>
          </span>
        </param>
        <param name="nodeToValidate">
          <span data-ttu-id="2ad25-1141">
            <see cref="T:System.Xml.XmlDocument" />에서 만든 <see cref="T:System.Xml.XmlNode" /> 개체이며 유효성을 검사할 대상입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1141">The <see cref="T:System.Xml.XmlNode" /> object created from an <see cref="T:System.Xml.XmlDocument" /> to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ad25-1142">
            <see cref="P:System.Xml.XmlDocument.Schemas" /> 속성에 포함된 XSD(XML 스키마 정의) 언어 스키마를 기준으로, 지정된 <see cref="T:System.Xml.XmlNode" /> 개체의 유효성을 검사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1142">Validates the <see cref="T:System.Xml.XmlNode" /> object specified against the XML Schema Definition Language (XSD) schemas in the <see cref="P:System.Xml.XmlDocument.Schemas" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-1143"><xref:System.Xml.XmlDocument.Validate%2A> 메서드의 XML 데이터의 유효성 검사는 <xref:System.Xml.XmlNode> 에 포함 된 스키마에 대 한 개체는 <xref:System.Xml.XmlDocument.Schemas%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1143">The <xref:System.Xml.XmlDocument.Validate%2A> method validates the XML data in the <xref:System.Xml.XmlNode> object against the schemas contained in the <xref:System.Xml.XmlDocument.Schemas%2A> property.</span></span> <span data-ttu-id="2ad25-1144"><xref:System.Xml.XmlDocument.Validate%2A> 메서드 infoset 확대를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1144">The <xref:System.Xml.XmlDocument.Validate%2A> method performs infoset augmentation.</span></span> <span data-ttu-id="2ad25-1145">특히, 유효성 검사를 수행한 후 스키마 기본값이 적용 되, 텍스트 값이 필요에 따라 원자 값으로 변환 및 형식 정보는 유효성이 검사 된 정보 항목과 연결 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1145">Specifically, after successful validation, schema defaults are applied, text values are converted to atomic values as necessary, and type information is associated with validated information items.</span></span> <span data-ttu-id="2ad25-1146">결과 이전에 형식화 되지 않은 XML 하위 트리는는 <xref:System.Xml.XmlDocument> 형식화 된 하위 트리 아래 템플릿으로 바뀝니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1146">The result is a previously un-typed XML sub-tree in the <xref:System.Xml.XmlDocument> replaced with a typed sub-tree.</span></span>  
  
 <span data-ttu-id="2ad25-1147">다음은 사용할 때 고려해 야 할 중요 참고 사항에서 <xref:System.Xml.XmlDocument.Validate%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1147">The following are important notes to consider when using the <xref:System.Xml.XmlDocument.Validate%2A> method.</span></span>  
  
-   <span data-ttu-id="2ad25-1148">스키마 위치 힌트와 같은 `xsi:schemaLocation` 또는 `xsi:noNamespaceSchemaLocation` 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1148">Schema location hints like `xsi:schemaLocation` or `xsi:noNamespaceSchemaLocation` are ignored.</span></span>  
  
-   <span data-ttu-id="2ad25-1149">인라인 스키마는 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1149">Inline schemas are ignored.</span></span>  
  
-   <span data-ttu-id="2ad25-1150">유효성 검사 동안 스키마 유효성 검사 오류가 발생 하는 경우는 <xref:System.Xml.XmlDocument> 올바른 형식 정보가 있는 일부 노드 및 일부 유효성 부분적으로 검사 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1150">If schema validation errors occur during validation the <xref:System.Xml.XmlDocument> becomes partially validated with some nodes with correct type information and some without.</span></span>  
  
 <span data-ttu-id="2ad25-1151">유효성 검사 프로세스 유효성을 검사할 노드입니다 루트 노드인 경우 고유성 및 참조 제약 조건을 검사 포함 됩니다 (`xs:ID`, `xs:IDREF`, `xs:key`, `xs:keyref`, 및 `xs:unique`), 그렇지 않으면 고유성 및 참조 제약 조건 생략 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1151">If the node to validate is the root node, the validation process includes checking for uniqueness and reference constraints (`xs:ID`, `xs:IDREF`, `xs:key`, `xs:keyref`, and `xs:unique`); otherwise, uniqueness and reference constraints are omitted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ad25-1152">에 대 한 예제는 <xref:System.Xml.XmlDocument.Validate%2A> 메서드를 참조는 <xref:System.Xml.XmlDocument.Validate%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1152">For an example of the <xref:System.Xml.XmlDocument.Validate%2A> method, see the <xref:System.Xml.XmlDocument.Validate%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2ad25-1153">
            <see cref="T:System.Xml.XmlNode" /> 개체 매개 변수를 <see cref="T:System.Xml.XmlDocument" />에서 만들지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1153">The <see cref="T:System.Xml.XmlNode" /> object parameter was not created from an <see cref="T:System.Xml.XmlDocument" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2ad25-1154">
            <see cref="T:System.Xml.XmlNode" /> 개체 매개 변수가 element, attribute, document fragment 또는 루트 노드가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1154">The <see cref="T:System.Xml.XmlNode" /> object parameter is not an element, attribute, document fragment, or the root node.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">
          <span data-ttu-id="2ad25-1155">스키마 유효성 검사 이벤트가 발생했지만 <see cref="T:System.Xml.Schema.ValidationEventHandler" /> 개체가 지정되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1155">A schema validation event occurred and no <see cref="T:System.Xml.Schema.ValidationEventHandler" /> object was specified.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteContentTo">
      <MemberSignature Language="C#" Value="public override void WriteContentTo (System.Xml.XmlWriter xw);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteContentTo(class System.Xml.XmlWriter xw) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.WriteContentTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteContentTo (xw As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteContentTo(System::Xml::XmlWriter ^ xw);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xw" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="xw">
          <span data-ttu-id="2ad25-1156">저장할 대상 <see langword="XmlWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1156">The <see langword="XmlWriter" /> to which you want to save.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ad25-1157">
            <see langword="XmlDocument" /> 노드의 모든 자식을 지정된 <see cref="T:System.Xml.XmlWriter" />에 저장합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1157">Saves all the children of the <see langword="XmlDocument" /> node to the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-1158">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1158">This method is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="2ad25-1159">기능적으로 <xref:System.Xml.XmlDocument.InnerXml%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1159">It is functionally equivalent to the <xref:System.Xml.XmlDocument.InnerXml%2A> property.</span></span>  
  
 <span data-ttu-id="2ad25-1160"><xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=nameWithType> 속성 기록 되는 인코딩을 결정 합니다. 경우는 `Encoding` 속성에 값이 없는 `XmlDocument` 인코딩 특성이 없는 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1160">The <xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=nameWithType> property determines the encoding that is written out. If the `Encoding` property does not have a value, the `XmlDocument` is written out without an encoding attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ad25-1161">다음 예제에서는 화면에 나타나는 문서를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1161">The following example displays the document onscreen.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.WriteContentTo Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.WriteContentTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.WriteContentTo Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.WriteContentTo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.WriteContentTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.WriteContentTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public override void WriteTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDocument.WriteTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteTo(System::Xml::XmlWriter ^ w);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="2ad25-1162">저장할 대상 <see langword="XmlWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1162">The <see langword="XmlWriter" /> to which you want to save.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ad25-1163">
            <see langword="XmlDocument" /> 노드를 지정된 <see cref="T:System.Xml.XmlWriter" />에 저장합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1163">Saves the <see langword="XmlDocument" /> node to the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-1164">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1164">This method is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="2ad25-1165">기능적으로 <xref:System.Xml.XmlNode.OuterXml%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1165">It is functionally equivalent to the <xref:System.Xml.XmlNode.OuterXml%2A> property.</span></span>  
  
 <span data-ttu-id="2ad25-1166"><xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=nameWithType> 속성 기록 되는 인코딩을 결정 합니다. 경우는 `Encoding` 속성에 값이 없는 `XmlDocument` 인코딩 특성이 없는 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1166">The <xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=nameWithType> property determines the encoding that is written out. If the `Encoding` property does not have a value, the `XmlDocument` is written out without an encoding attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ad25-1167">다음 예제에서는 화면에 나타나는 문서를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1167">The following example displays the document onscreen.</span></span>  
  
 [!code-cpp[Classic WebData XmlDocument.WriteTo Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDocument.WriteTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDocument.WriteTo Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDocument.WriteTo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDocument.WriteTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDocument.WriteTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDocument.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ad25-1168">외부 리소스 확인을 위해 사용할 <see cref="T:System.Xml.XmlResolver" />를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1168">Sets the <see cref="T:System.Xml.XmlResolver" /> to use for resolving external resources.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ad25-1169">사용할 <see langword="XmlResolver" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1169">The <see langword="XmlResolver" /> to use.</span>
          </span>
          <span data-ttu-id="2ad25-1170">.NET Framework 버전 1.1에서는 완전히 신뢰할 수 있는 호출자만 <see langword="XmlResolver" />를 지정할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1170">In version 1.1 of the.NET Framework, the caller must be fully trusted in order to specify an <see langword="XmlResolver" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad25-1171">`XmlResolver` Dtd를 로드 또는 엔터티 참조 확장에 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1171">The `XmlResolver` can be used to load DTDs or expand entity references.</span></span> <span data-ttu-id="2ad25-1172">사용 하는 <xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=nameWithType> 속성에 자격 증명을 설정할 수 있습니다는 `XmlResolver` 보안 네트워크 리소스에 저장 된 리소스에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1172">Using the <xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=nameWithType> property, you can set credentials on the `XmlResolver` to access resources stored on a secure network resource.</span></span>  
  
-   <span data-ttu-id="2ad25-1173">문서를 사용 하 여 로드 한 경우는 <xref:System.Xml.XmlReader> (즉, 한 스트림을 사용 하 여 로드 된 경우 파일, 및 등)는 `XmlResolver` 에 `XmlDocument` 항상 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1173">If the document was not loaded using an <xref:System.Xml.XmlReader> (that is, if it was loaded using a stream, file, and so on) the `XmlResolver` on the `XmlDocument` is always used.</span></span>  
  
-   <span data-ttu-id="2ad25-1174">문서를 로드 하는 경우는 <xref:System.Xml.XmlTextReader>에 확인자는 `XmlTextReader` DocumentType 노드의 DTD 참조를 확인 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1174">If the document was loaded with an <xref:System.Xml.XmlTextReader>, the resolver on the `XmlTextReader` is used to resolve any DTD references in the DocumentType node.</span></span> <span data-ttu-id="2ad25-1175">해결 프로그램에는 `XmlDocument` 엔터티 참조를 확장 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1175">The resolver on the `XmlDocument` is used to expand any entity references.</span></span>  
  
-   <span data-ttu-id="2ad25-1176">문서를 로드 하는 경우는 <xref:System.Xml.XmlValidatingReader>에 확인자는 `XmlDocument` 은 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1176">If the document was loaded with an <xref:System.Xml.XmlValidatingReader>, the resolver on the `XmlDocument` is never used.</span></span>  
  
-   <span data-ttu-id="2ad25-1177">문서를 확장 하는 클래스와 함께 로드 하는 경우 `XmlReader` 및 `XmlReader` 엔터티를 확인할 수 없습니다 (<xref:System.Xml.XmlReader.CanResolveEntity%2A> 반환 `false`), `XmlResolver` 에 `XmlDocument` DocumentType 노드의 참조를 확인 하는 데 사용 됩니다 및 모든 엔터티 참조를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1177">If the document was loaded with a class that extends `XmlReader` and the `XmlReader` cannot resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A> returns `false`), the `XmlResolver` on the `XmlDocument` is used to resolve any references in the DocumentType node and to expand any entity references.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ad25-1178">경우는 `XmlDocument` 를 사용 하 여 로드 되는 <xref:System.Xml.XmlReader> 어떤 모델이 `XmlResolver` 가 설정의 `XmlResolver` 에 `XmlReader` 으로 캐시 되지 않습니다는 `XmlDocument` 후 <xref:System.Xml.XmlDocument.Load%2A> 완료 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1178">If the `XmlDocument` is loaded using an <xref:System.Xml.XmlReader> which had an `XmlResolver` set to it, the `XmlResolver` on the `XmlReader` is not cached by the `XmlDocument` after <xref:System.Xml.XmlDocument.Load%2A> completes.</span></span>  
  
 <span data-ttu-id="2ad25-1179">.NET Framework 버전 1.1에서는이 속성을 설정 하지 않으면 응용 프로그램의 신뢰 수준을 기본 동작을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1179">In version 1.1 of the.NET Framework, if this property is not set, the trust level of the application determines the default behavior.</span></span>  
  
 <span data-ttu-id="2ad25-1180">`Fully trusted code:` 기본값을 사용 하는 문서의 <xref:System.Xml.XmlUrlResolver> 자격 증명이 없는 사용자입니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1180">`Fully trusted code:` The document uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="2ad25-1181">사용 하 여 네트워크 리소스에 액세스 하는 데 인증이 필요는 `XmlResolver` 속성을 통해 지정 된 `XmlResolver` 에 필요한 자격 증명입니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1181">If authentication is required to access a network resource, use the `XmlResolver` property to specify an `XmlResolver` with the necessary credentials.</span></span>  
  
 <span data-ttu-id="2ad25-1182">`Semi-trusted code:` `XmlResolver` 속성이 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1182">`Semi-trusted code:` The `XmlResolver` property is set to `null`.</span></span> <span data-ttu-id="2ad25-1183">외부 리소스 확인 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1183">External resources are not resolved.</span></span>  
  
 <span data-ttu-id="2ad25-1184">보안에 대 한 자세한 내용은 및 `XmlResolver` 속성 참조 [외부 리소스 확인](~/docs/standard/data/xml/resolving-external-resources.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1184">For more information on security and the `XmlResolver` property, see [Resolving External Resources](~/docs/standard/data/xml/resolving-external-resources.md).</span></span>  
  
 <span data-ttu-id="2ad25-1185">이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1185">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ad25-1186">다음 예제에서는 DTD 파일에 대 한 참조를 포함 하는 XML 문서를 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1186">The following example loads an XML document which includes a reference to a DTD file.</span></span> <span data-ttu-id="2ad25-1187">`XmlResolver` 속성은 네트워크 리소스에 액세스 하는 데 필요한 자격 증명을 설정 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1187">The `XmlResolver` property is used to set the credentials necessary to access the network resource.</span></span>  
  
 [!code-cpp[XmlDocument.XmlResolver#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlDocument.XmlResolver/CPP/docresolver.cpp#1)]
 [!code-csharp[XmlDocument.XmlResolver#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDocument.XmlResolver/CS/docresolver.cs#1)]
 [!code-vb[XmlDocument.XmlResolver#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDocument.XmlResolver/VB/docresolver.vb#1)]  
  
 <span data-ttu-id="2ad25-1188">이 예제에서는 입력으로 다음과 같은 데이터 파일을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="2ad25-1188">The example uses the following data files as input.</span></span>  
  
 `book5.xml`  
  
 [!code-xml[XmlDocument.XmlResolver#2](~/samples/snippets/xml/VS_Snippets_Data/XmlDocument.XmlResolver/XML/book5.xml#2)]  
  
 `books.dtd`  
  
 [!code-xml[XmlDocument.XmlResolver#3](~/samples/snippets/xml/VS_Snippets_Data/XmlDocument.XmlResolver/XML/books.dtd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="2ad25-1189">이 속성이 <see langword="null" />로 설정되어 있고 외부 DTD 또는 엔터티를 발견한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ad25-1189">This property is set to <see langword="null" /> and an external DTD or entity is encountered.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlUrlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
  </Members>
</Type>