<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlUrlResolver.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5de12df15e0a9a0e13f41ecb34cb1de054d727393.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">de12df15e0a9a0e13f41ecb34cb1de054d727393</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlUrlResolver">
          <source>Resolves external XML resources named by a Uniform Resource Identifier (URI).</source>
          <target state="translated">URI(Uniform Resource Identifier)로 명명된 외부 XML 리소스를 확인합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> is used to resolve external XML resources such as entities, document type definitions (DTDs) or schemas.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 엔터티를 문서 유형 정의 (Dtd) 또는 스키마와 같은 외부 XML 리소스를 확인 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>It is also used to process include and import elements found in Extensible StyleSheet Language (XSL) style sheets or XML Schema definition language (XSD) schemas.</source>
          <target state="translated">사용 하는 것도 프로세스 포함 및 스타일 시트 XSL (Extensible Language) 스타일 시트 또는 XML 스키마 정의 언어 (XSD) 스키마에 요소를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> is the default resolver for all classes in the <ph id="ph2">&lt;xref:System.Xml&gt;</ph> namespace.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 모든 클래스에 대 한 기본 해결 프로그램은는 <ph id="ph2">&lt;xref:System.Xml&gt;</ph> 네임 스페이스입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>It supports the <ph id="ph1">`file://`</ph> and <ph id="ph2">`http://`</ph> protocols and requests from the <ph id="ph3">&lt;xref:System.Net.WebRequest&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">`file://`</ph> 및 <ph id="ph2">`http://`</ph> 프로토콜을 지원하고 <ph id="ph3">&lt;xref:System.Net.WebRequest&gt;</ph> 클래스에서 요청합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> objects can contain sensitive information such as user credentials.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 개체에는 사용자 자격 증명과 같은 중요한 정보가 포함될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>You should be careful when you cache <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> objects and should not pass <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> objects to an untrusted component.</source>
          <target state="translated">캐시할 경우 주의 해야 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 개체를 전달 하지 않아야 <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 신뢰할 수 없는 구성 요소에는 개체입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>Resolving DTDs</source>
          <target state="translated">Dtd를 확인</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>If an XML reader (<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>) is reading an XML file that contains an external DTD, it calls the <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A?displayProperty=nameWithType&gt;</ph> method to get a stream representation of the DTD.</source>
          <target state="translated">XML 판독기는 경우 (<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>) 외부 DTD를 포함 하는 XML 파일을 읽고, 호출의 <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A?displayProperty=nameWithType&gt;</ph> DTD의 스트림을 표시 하는 메서드.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>If the URI of the DTD is a relative URI, the XML reader calls the <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver.ResolveUri%2A?displayProperty=nameWithType&gt;</ph> method and returns an absolute URI for the given <ph id="ph2">`relativeUri`</ph> and <ph id="ph3">`baseURi`</ph> parameters.</source>
          <target state="translated">XML 판독기를 호출 하는 DTD의 URI는 상대 URI 이면는 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver.ResolveUri%2A?displayProperty=nameWithType&gt;</ph> 메서드에 대 한 절대 URI를 반환 하 고는 주어진 <ph id="ph2">`relativeUri`</ph> 및 <ph id="ph3">`baseURi`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> doesn't know how to resolve the URI, it returns <ph id="ph2">`null`</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 는 URI를 확인 하는 방법을 모를 반환 <ph id="ph2">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType&gt;</ph> method uses the information in the <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver.Credentials%2A&gt;</ph> property as appropriate to gain access to the resource.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver.Credentials%2A&gt;</ph> 속성의 정보를 적절히 사용하여 리소스에 액세스합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>There is no <ph id="ph1">`get`</ph> accessor to this property for security reasons.</source>
          <target state="translated">보안상 이유로 이 속성에는 <ph id="ph1">`get`</ph> 접근자가 없습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>When overwriting <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>, <bpt id="p1">**</bpt>GetEntity<ept id="p1">**</ept> is the method that utilizes the credential information in the <bpt id="p2">**</bpt>Credentials<ept id="p2">**</ept> property.</source>
          <target state="translated">덮어쓸 때 <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>, <bpt id="p1">**</bpt>GetEntity<ept id="p1">**</ept> 에서 자격 증명 정보를 활용 하는 방법은 <bpt id="p2">**</bpt>자격 증명<ept id="p2">**</ept> 속성입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>Resolving all other XML resources is very similar to resolving DTDs.</source>
          <target state="translated">다른 모든 XML 리소스를 확인하는 것은 DTD를 확인하는 것과 매우 유사합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> negotiates the connection with the external resource and returns a <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> representation of the content.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> 외부 리소스와의 연결을 협상 하 고 반환 된 <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> 콘텐츠의 표현 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>The object that is making the call to <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> interprets the stream.</source>
          <target state="translated">에 대 한 호출을 수행 하는 개체 <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> 크거나 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>Extending the XmlUrlResolver class</source>
          <target state="translated">XmlUrlResolver 클래스를 확장합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>The default behavior of the <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> class is to resolve an XML data resource from its source, not from cache.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 클래스의 기본 동작은 캐시가 아닌 해당 소스에서 XML 데이터 리소스를 확인하는 것입니다</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>In some cases, resolving a data resource from cache can improve the performance of an application by saving a trip to the data resource's server.</source>
          <target state="translated">경우에 따라 캐시에서 데이터 리소스를 확인하면 데이터 리소스의 서버로 이동하는 시간이 절약되므로 응용 프로그램 성능이 향상될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>The performance gains here must be weighed against the need for up-to-date content.</source>
          <target state="translated">성능 향상을 최신 내용의 필요성과 비교하여 검토해야 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>The following example extends <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> and builds a new class, <ph id="ph2">`XmlCachingResolver`</ph>, to retrieve resources from the cache.</source>
          <target state="translated">다음 예에서는 확장 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 새 클래스를 작성 하 고 <ph id="ph2">`XmlCachingResolver`</ph>캐시에서 리소스를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>This is done by overriding the <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=nameWithType&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">이 작업은 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=nameWithType&gt;</ph> 속성 및 <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType&gt;</ph> 메서드를 재정의하여 수행됩니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>The caching behavior of the <ph id="ph1">`XmlCachingResolver`</ph> class is implemented in the <ph id="ph2">`GetEntity`</ph> method.</source>
          <target state="translated"><ph id="ph1">`XmlCachingResolver`</ph> 클래스의 캐시 동작은 <ph id="ph2">`GetEntity`</ph> 메서드에서 구현됩니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>This is done by creating new <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Cache.HttpRequestCachePolicy&gt;</ph> objects.</source>
          <target state="translated">이 작업은 새 <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.Cache.HttpRequestCachePolicy&gt;</ph> 개체를 만들어서 수행됩니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>The <ph id="ph1">&lt;xref:System.Net.Cache.HttpRequestCachePolicy&gt;</ph> object is created using the <ph id="ph2">&lt;xref:System.Net.Cache.HttpRequestCacheLevel.Default&gt;</ph> member of the <ph id="ph3">&lt;xref:System.Net.Cache.HttpRequestCacheLevel&gt;</ph> enumeration.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Cache.HttpRequestCachePolicy&gt;</ph> 개체는 <ph id="ph2">&lt;xref:System.Net.Cache.HttpRequestCacheLevel.Default&gt;</ph> 열거형의 <ph id="ph3">&lt;xref:System.Net.Cache.HttpRequestCacheLevel&gt;</ph> 멤버를 사용하여 만들어집니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest.CachePolicy%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> object is set with the <ph id="ph3">&lt;xref:System.Net.Cache.HttpRequestCachePolicy&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest.CachePolicy%2A&gt;</ph> 개체의 <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> 속성은 <ph id="ph3">&lt;xref:System.Net.Cache.HttpRequestCachePolicy&gt;</ph> 개체로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>An instance of the <ph id="ph1">`XmlCachingResolver`</ph> class is created with the <ph id="ph2">`Boolean`</ph> <ph id="ph3">`enableHttpCaching`</ph>.</source>
          <target state="translated"><ph id="ph1">`XmlCachingResolver`</ph> 클래스의 인스턴스는 <ph id="ph2">`Boolean`</ph> <ph id="ph3">`enableHttpCaching`</ph>을 사용하여 만들어집니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>When this value is set to <ph id="ph1">`true`</ph>, the instance resolves a resource from the default cache if possible.</source>
          <target state="translated">이 값으로 설정 되 면 <ph id="ph1">`true`</ph>, 가능한 경우 기본 캐시에서 리소스 인스턴스를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>When <ph id="ph1">`enableHttpCaching`</ph> is set to <ph id="ph2">`false`</ph>, the instance uses the default behavior and resolves resources from their source.</source>
          <target state="translated">때 <ph id="ph1">`enableHttpCaching`</ph> 로 설정 된 <ph id="ph2">`false`</ph>, 인스턴스는 기본 동작을 사용 하 고 해당 원본에서 리소스를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>This example leverages the extensibility of the XML classes in the .NET Framework.</source>
          <target state="translated">이 예제에서는.NET Framework의 XML 클래스의 확장성을 이용 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>Other classes can be extended and customized to suit the needs of a particular application.</source>
          <target state="translated">특정 응용 프로그램의 필요성을 만족시키기 위해 다른 클래스를 확장하고 사용자 지정할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlUrlResolver">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> that uses an <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with default credentials.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하는 <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 기본 자격 증명을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlUrlResolver" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlUrlResolver" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlUrlResolver.CachePolicy">
          <source>Gets or sets the cache policy for the underlying <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> object.</source>
          <target state="translated">내부 <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> 개체에 대한 캐시 정책을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlUrlResolver.CachePolicy">
          <source>The cache policy for the underlying web request.</source>
          <target state="translated">내부 웹 요청에 대한 캐시 정책입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlUrlResolver.Credentials">
          <source>Sets credentials used to authenticate web requests.</source>
          <target state="translated">웹 요청을 인증하는 데 사용된 자격 증명을 설정합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlUrlResolver.Credentials">
          <source>The credentials to be used to authenticate web requests.</source>
          <target state="translated">웹 요청을 인증하는 데 사용하는 자격 증명입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlUrlResolver.Credentials">
          <source>If this property is not set, the value defaults to <ph id="ph1">&lt;see langword="null" /&gt;</ph>; that is, the <ph id="ph2">&lt;see langword="XmlUrlResolver" /&gt;</ph> has no user credentials.</source>
          <target state="translated">이 속성이 설정되지 않으면 기본적으로 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>로 설정됩니다. 즉, <ph id="ph2">&lt;see langword="XmlUrlResolver" /&gt;</ph>에 사용자 자격 증명이 없습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlUrlResolver.Credentials">
          <source>If the virtual directory does not require authentication, this property does not need to be set.</source>
          <target state="translated">가상 디렉터리에 인증이 필요 하지 않는 경우이 속성이 필요는 없습니다 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlUrlResolver.Credentials">
          <source>Otherwise, the credentials of the user must be supplied.</source>
          <target state="translated">그렇지 않으면 사용자의 자격 증명이 제공 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlUrlResolver.Credentials">
          <source>You can associate different credentials with different URIs and add them to a cache.</source>
          <target state="translated">다양 한 Uri에 다른 자격 증명을 연결 하 고 캐시에 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlUrlResolver.Credentials">
          <source>You can then use the credentials to check authentication for different URIs, regardless of the original source of the XML.</source>
          <target state="translated">다음 XML의 원본 소스와 다른 Uri에 대 한 인증을 확인 하려면 자격 증명을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlUrlResolver.Credentials">
          <source>The following C# code shows how to set the <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver.Credentials%2A&gt;</ph> property to a credential cache.</source>
          <target state="translated">다음 C# 코드를 설정 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver.Credentials%2A&gt;</ph> 속성을 자격 증명 캐시 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlUrlResolver.Credentials">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> object with credentials.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 자격 증명을 가진 개체입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlUrlResolver.Credentials">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> uses the credentials on the <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> object to access a network resource.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 에서 자격 증명을 사용 하는 <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 네트워크 리소스에 액세스 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>The URI returned from <ph id="ph1">&lt;see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" /&gt;</ph>에서 반환된 URI입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>Currently not used.</source>
          <target state="translated">현재 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>The type of object to return.</source>
          <target state="translated">반환할 개체의 형식입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>The current implementation only returns <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> objects.</source>
          <target state="translated">현재 구현에서는 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 개체만 반환합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>Maps a URI to an object that contains the actual resource.</source>
          <target state="translated">실제 리소스가 포함된 개체로 URI를 매핑합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>A stream object or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if a type other than stream is specified.</source>
          <target state="translated">스트림 개체이거나 스트림 외의 다른 형식이 지정되면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>This method is used when the caller wants to map a given URI to an object that contains the resource that the URI represents.</source>
          <target state="translated">이 메서드는 호출자가 URI가 나타내는 리소스를 포함 하는 개체에 지정된 된 URI를 매핑할 때 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>Your application can mitigate memory denial of service threats to the <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver.GetEntity%2A&gt;</ph> method by implementing IStream <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComTypes.IStream&gt;</ph> to limit the number of bytes read.</source>
          <target state="translated">응용 프로그램 메모리에 대 한 서비스 거부를 줄일 수는 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver.GetEntity%2A&gt;</ph> IStream을 구현 하 여 메서드 <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComTypes.IStream&gt;</ph> 읽은 바이트 수를 제한 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver.GetEntity%2A&gt;</ph> method.</source>
          <target state="translated">이렇게 하면 악의적인 코드 여기서 바이트는 무한 스트림을 전달 하려고 하는 상황에 대비해는 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver.GetEntity%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>The following example demonstrates the <ph id="ph1">`GetEntity`</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlResolver.ResolveUri%2A&gt;</ph> methods.</source>
          <target state="translated">다음 예제는 <ph id="ph1">`GetEntity`</ph> 및 <ph id="ph2">&lt;xref:System.Xml.XmlResolver.ResolveUri%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source><ph id="ph1">&lt;paramref name="ofObjectToReturn" /&gt;</ph> is neither <ph id="ph2">&lt;see langword="null" /&gt;</ph> nor a <ph id="ph3">&lt;see langword="Stream" /&gt;</ph> type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ofObjectToReturn" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph> 또는 <ph id="ph3">&lt;see langword="Stream" /&gt;</ph> 형식이 아닌 경우</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>The specified URI is not an absolute URI.</source>
          <target state="translated">지정된 URI가 절대 URI가 아닌 경우</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source><ph id="ph1">&lt;paramref name="absoluteUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="absoluteUri" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>There is a runtime error (for example, an interrupted server connection).</source>
          <target state="translated">런타임 오류(예: 중단된 서버 연결)가 발생한 경우</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>The URI returned from <ph id="ph1">&lt;see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" /&gt;</ph>에서 반환된 URI입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>Currently not used.</source>
          <target state="translated">현재 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>The type of object to return.</source>
          <target state="translated">반환할 개체의 형식입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>The current implementation only returns <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> objects.</source>
          <target state="translated">현재 구현에서는 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 개체만 반환합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>Asynchronously maps a URI to an object that contains the actual resource.</source>
          <target state="translated">실제 리소스가 포함된 개체로 URI를 비동기적으로 매핑합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>A stream object or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if a type other than stream is specified.</source>
          <target state="translated">스트림 개체이거나 스트림 외의 다른 형식이 지정되면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlUrlResolver.Proxy">
          <source>Gets or sets the network proxy for the underlying <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> object.</source>
          <target state="translated">내부 <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> 개체에 대한 네트워크 프록시를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlUrlResolver.Proxy">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IWebProxy" /&gt;</ph> to use to access the Internet resource.</source>
          <target state="translated">인터넷 리소스에 액세스하기 위해 사용할 <ph id="ph1">&lt;see cref="T:System.Net.IWebProxy" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)">
          <source>The base URI used to resolve the relative URI.</source>
          <target state="translated">상대 URI를 확인하는 데 사용된 기본 URI입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)">
          <source>The URI to resolve.</source>
          <target state="translated">확인할 URI입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)">
          <source>The URI can be absolute or relative.</source>
          <target state="translated">절대 URI나 상대 URI일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)">
          <source>If absolute, this value effectively replaces the <bpt id="p1">&lt;c&gt;</bpt>baseUri<ept id="p1">&lt;/c&gt;</ept> value.</source>
          <target state="translated">절대 URI인 경우 이 값은 <bpt id="p1">&lt;c&gt;</bpt>baseUri<ept id="p1">&lt;/c&gt;</ept> 값을 효율적으로 대체합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)">
          <source>If relative, it combines with the <bpt id="p1">&lt;c&gt;</bpt>baseUri<ept id="p1">&lt;/c&gt;</ept> to make an absolute URI.</source>
          <target state="translated">상대 URI인 경우 <bpt id="p1">&lt;c&gt;</bpt>baseUri<ept id="p1">&lt;/c&gt;</ept>와 결합하여 절대 URI를 만듭니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)">
          <source>Resolves the absolute URI from the base and relative URIs.</source>
          <target state="translated">기본 및 상대 URI에서 절대 URI를 확인합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)">
          <source>The absolute URI, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the relative URI cannot be resolved.</source>
          <target state="translated">절대 URI이거나, 상대 URI를 확인할 수 없으면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)">
          <source>The absolute URI can be used as the base URI for any subsequent requests for entities that are relative to this URI.</source>
          <target state="translated">이 URI를 기준으로 하는 엔터티에 대 한 후속 요청에 대 한 기본 URI로 절대 URI는 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)">
          <source><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or <ph id="ph3">&lt;paramref name="relativeUri" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseUri" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이거나 <ph id="ph3">&lt;paramref name="relativeUri" /&gt;</ph>가 <ph id="ph4">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)">
          <source>This method has an inheritance demand.</source>
          <target state="translated">이 메서드는 상속 요청.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)">
          <source>Full trust is required to override the <ph id="ph1">&lt;see cref="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)" /&gt;</ph> method.</source>
          <target state="translated">재정의 하려면 완전 신뢰가 필요는 <ph id="ph1">&lt;see cref="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)" /&gt;</ph> 메서드.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>