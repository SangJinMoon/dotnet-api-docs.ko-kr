<Type Name="XmlNode" FullName="System.Xml.XmlNode">
  <TypeSignature Language="C#" Value="public abstract class XmlNode : ICloneable, System.Collections.IEnumerable, System.Xml.XPath.IXPathNavigable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlNode extends System.Object implements class System.Collections.IEnumerable, class System.ICloneable, class System.Xml.XPath.IXPathNavigable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlNode" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlNode&#xA;Implements ICloneable, IEnumerable, IXPathNavigable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlNode abstract : ICloneable, System::Collections::IEnumerable, System::Xml::XPath::IXPathNavigable" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlDocument</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Xml.XPath.IXPathNavigable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{debuggerDisplayProxy}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="cf4e3-101">XML 문서의 단일 노드를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-101">Represents a single node in the XML document.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-102">이 클래스는 W3C 문서 개체 모델 (DOM) Level 1 Core 및 DOM Level 2 Core를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-102">This class implements the W3C Document Object Model (DOM) Level 1 Core and the Core DOM Level 2.</span></span> <span data-ttu-id="cf4e3-103">DOM은 XML 문서의 메모리 내(캐시) 트리 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-103">The DOM is an in-memory (cache) tree representation of an XML document.</span></span> <span data-ttu-id="cf4e3-104">`XmlNode` DOM의.NET 구현에서 기본 클래스</span><span class="sxs-lookup"><span data-stu-id="cf4e3-104">`XmlNode` is the base class in the .NET implementation of the DOM.</span></span> <span data-ttu-id="cf4e3-105">XPath 선택을 지원 하 고 편집 기능을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-105">It supports XPath selections and provides editing capabilities.</span></span> <span data-ttu-id="cf4e3-106"><xref:System.Xml.XmlDocument> 클래스 확장 `XmlNode` 및 XML 문서를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-106">The <xref:System.Xml.XmlDocument> class extends `XmlNode` and represents an XML document.</span></span> <span data-ttu-id="cf4e3-107">사용할 수 있습니다 `XmlDocument` 로드 하 고 XML 데이터를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-107">You can use `XmlDocument` to load and save XML data.</span></span> <span data-ttu-id="cf4e3-108">노드 생성 메서드가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-108">It also includes methods for node creation.</span></span> <span data-ttu-id="cf4e3-109">참조 [XML 문서 개체 모델 (DOM)](~/docs/standard/data/xml/xml-document-object-model-dom.md) 자세한 정보에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-109">See [XML Document Object Model (DOM)](~/docs/standard/data/xml/xml-document-object-model-dom.md) for more information.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="cf4e3-110">사용 하기 때문에 발생 한 예외는 <xref:System.Xml.XmlNode> 클래스 같은 <xref:System.Xml.XmlException> 클래스에는 신뢰할 수 없는 경우에는 노출 되지 않아야 하는 중요 한 정보가 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-110">Exceptions raised as a result of using the <xref:System.Xml.XmlNode> class, such as the <xref:System.Xml.XmlException> class may contain sensitive information that should not be exposed in untrusted scenarios.</span></span> <span data-ttu-id="cf4e3-111">예외를 신뢰할 수 없는 시나리오에 중요 한 정보가 노출 되지 않는 올바르게 처리 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-111">Exceptions should be properly handled so that this sensitive information is not exposed in untrusted scenarios.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Xml.XmlNode.SelectNodes(System.String)" />
  </Docs>
  <Members>
    <Member MemberName="AppendChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode AppendChild (System.Xml.XmlNode newChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode AppendChild(class System.Xml.XmlNode newChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AppendChild (newChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ AppendChild(System::Xml::XmlNode ^ newChild);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild"><span data-ttu-id="cf4e3-112">추가할 노드입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-112">The node to add.</span></span> <span data-ttu-id="cf4e3-113">지정된 위치로 이동하는, 추가할 노드의 모든 콘텐츠입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-113">All the contents of the node to be added are moved into the specified location.</span></span></param>
        <summary><span data-ttu-id="cf4e3-114">지정된 노드를 이 노드의 자식 노드 목록 끝에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-114">Adds the specified node to the end of the list of child nodes, of this node.</span></span></summary>
        <returns><span data-ttu-id="cf4e3-115">추가한 노드입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-115">The node added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-116">경우는 `newChild` 는 트리에 이미은 원래 위치에서 제거 하 고 대상 위치에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-116">If the `newChild` is already in the tree, it is removed from its original position and added to its target position.</span></span> <span data-ttu-id="cf4e3-117">노드를 삽입 하는 방법에 대 한 자세한 내용은 참조 [XML 문서에 노드 삽입](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-117">For more information about inserting nodes, see [Inserting Nodes into an XML Document](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md).</span></span>  
  
 <span data-ttu-id="cf4e3-118">삽입 하는 노드가 다른 문서에서 만들어진 경우 사용할 수 있습니다 <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> 현재 문서에 노드를 가져오려는 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-118">If the node being inserted was created from another document, you can use <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> to import the node to the current document.</span></span> <span data-ttu-id="cf4e3-119">가져온 다음 현재 문서에 삽입할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-119">The imported node can then be inserted into the current document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf4e3-120">다음 예제에서는 XML 문서에 새 노드를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-120">The following example adds a new node to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.AppendChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.AppendChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.AppendChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.AppendChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.AppendChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.AppendChild Example/VB/source.vb#1)]  
  
 <span data-ttu-id="cf4e3-121">**출력:**</span><span class="sxs-lookup"><span data-stu-id="cf4e3-121">**Output:**</span></span>  
  
```  
Display the modified XML...  
<?xml version="1.0" encoding="IBM437"?>  
<book genre="novel" ISBN="1-861001-57-5">  
  <title>Pride And Prejudice</title>  
  <price>19.95</price>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cf4e3-122">이 노드가 <paramref name="newChild" /> 노드 형식의 자식 노드를 허용하지 않는 형식을 가지는 경우</span><span class="sxs-lookup"><span data-stu-id="cf4e3-122">This node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.</span></span>  
  
 <span data-ttu-id="cf4e3-123"><paramref name="newChild" />가 이 노드의 상위 노드일 경우</span><span class="sxs-lookup"><span data-stu-id="cf4e3-123">The <paramref name="newChild" /> is an ancestor of this node.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cf4e3-124">이 노드를 만든 문서가 아닌 다른 문서에서 <paramref name="newChild" />를 만든 경우</span><span class="sxs-lookup"><span data-stu-id="cf4e3-124">The <paramref name="newChild" /> was created from a different document than the one that created this node.</span></span>  
  
 <span data-ttu-id="cf4e3-125">이 노드가 읽기 전용인 경우</span><span class="sxs-lookup"><span data-stu-id="cf4e3-125">This node is read-only.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="cf4e3-126">재정의 하는 경우 <see langword="AppendChild" /> 파생된 클래스에서 올바르게 발생할 이벤트를 위해 호출 해야는 <see langword="AppendChild" /> 기본 클래스의 메서드.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-126">When overriding <see langword="AppendChild" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="AppendChild" /> method of the base class.</span></span></para>
        </block>
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlAttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Attributes As XmlAttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlAttributeCollection ^ Attributes { System::Xml::XmlAttributeCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf4e3-127">이 노드의 특성이 포함된 <see cref="T:System.Xml.XmlAttributeCollection" />을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-127">Gets an <see cref="T:System.Xml.XmlAttributeCollection" /> containing the attributes of this node.</span></span></summary>
        <value><span data-ttu-id="cf4e3-128">노드의 특성을 포함하는 <see langword="XmlAttributeCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-128">An <see langword="XmlAttributeCollection" /> containing the attributes of the node.</span></span>  
  
 <span data-ttu-id="cf4e3-129">노드가 XmlNodeType.Element 형식일 경우 노드의 특성이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-129">If the node is of type XmlNodeType.Element, the attributes of the node are returned.</span></span> <span data-ttu-id="cf4e3-130">그렇지 않은 경우 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-130">Otherwise, this property returns <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cf4e3-131">다음 예제에서는 XML 문서에 새 특성을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-131">The following example adds a new attribute to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public virtual string BaseURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.BaseURI" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BaseURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BaseURI { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf4e3-132">현재 노드의 기본 URI를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-132">Gets the base URI of the current node.</span></span></summary>
        <value><span data-ttu-id="cf4e3-133">노드가 로드된 위치이거나 노드에 기본 URI가 없으면 String.Empty입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-133">The location from which the node was loaded or String.Empty if the node has no base URI.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-134">네트워크 XML 문서는 다양 한 W3C 표준 포함 구조를 사용 하 여 집계 데이터의 청크 한 이루어져 서로 다른 위치에서 제공 하는 노드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-134">A networked XML document is comprised of chunks of data aggregated using various W3C standard inclusion mechanisms and therefore contains nodes that come from different places.</span></span> <span data-ttu-id="cf4e3-135">`BaseURI` 이러한 노드 출처를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-135">The `BaseURI` tells you where these nodes came from.</span></span>  
  
 <span data-ttu-id="cf4e3-136">이 속성의 값은 노드 유형에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-136">The value of this property varies depending on the node type.</span></span> <span data-ttu-id="cf4e3-137">문서 노드 위치를 반환 하는 예를 들어는 <xref:System.Xml.XmlDocument> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-137">For example, Document nodes return the location of the <xref:System.Xml.XmlDocument> object.</span></span> <span data-ttu-id="cf4e3-138">외부 EntityReference 노드의 자식 노드인 노드 엔터티 자체의 위치를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-138">Nodes which are child nodes of external EntityReference nodes return the location of the entity itself.</span></span> <span data-ttu-id="cf4e3-139">예, 다음 XML 문서를 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-139">For example, consider the following XML document:</span></span>  
  
```  
<!DOCTYPE item [  
<!ENTITY xyz SYSTEM "a/b.xml">  
]>  
<item num='123'>&xyz;</item>  
```  
  
 <span data-ttu-id="cf4e3-140">여기서 외부 엔터티 `a/b.xml` XML 텍스트가 포함: `<test>123</test>`합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-140">where the external entity `a/b.xml` contains the XML text: `<test>123</test>`.</span></span>  
  
 <span data-ttu-id="cf4e3-141">문서를 로드 하는 경우 http://server/mydata.xml, `BaseURI` 는 다음을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-141">If the document is loaded from http://server/mydata.xml, `BaseURI` returns the following:</span></span>  
  
|<span data-ttu-id="cf4e3-142">노드 형식</span><span class="sxs-lookup"><span data-stu-id="cf4e3-142">NodeType</span></span>|<span data-ttu-id="cf4e3-143">이름</span><span class="sxs-lookup"><span data-stu-id="cf4e3-143">Name</span></span>|<span data-ttu-id="cf4e3-144">BaseURI</span><span class="sxs-lookup"><span data-stu-id="cf4e3-144">BaseURI</span></span>|  
|--------------|----------|-------------|  
|<span data-ttu-id="cf4e3-145">특성</span><span class="sxs-lookup"><span data-stu-id="cf4e3-145">Attribute</span></span>|<span data-ttu-id="cf4e3-146">num</span><span class="sxs-lookup"><span data-stu-id="cf4e3-146">num</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="cf4e3-147">문서</span><span class="sxs-lookup"><span data-stu-id="cf4e3-147">Document</span></span>|<span data-ttu-id="cf4e3-148">#document</span><span class="sxs-lookup"><span data-stu-id="cf4e3-148">#document</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="cf4e3-149">DocumentType</span><span class="sxs-lookup"><span data-stu-id="cf4e3-149">DocumentType</span></span>|<span data-ttu-id="cf4e3-150">항목</span><span class="sxs-lookup"><span data-stu-id="cf4e3-150">item</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="cf4e3-151">엔터티</span><span class="sxs-lookup"><span data-stu-id="cf4e3-151">Entity</span></span>|<span data-ttu-id="cf4e3-152">xyz</span><span class="sxs-lookup"><span data-stu-id="cf4e3-152">xyz</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="cf4e3-153">요소</span><span class="sxs-lookup"><span data-stu-id="cf4e3-153">Element</span></span>|<span data-ttu-id="cf4e3-154">항목</span><span class="sxs-lookup"><span data-stu-id="cf4e3-154">item</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="cf4e3-155">EntityReference</span><span class="sxs-lookup"><span data-stu-id="cf4e3-155">EntityReference</span></span>|<span data-ttu-id="cf4e3-156">xyz</span><span class="sxs-lookup"><span data-stu-id="cf4e3-156">xyz</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="cf4e3-157">요소</span><span class="sxs-lookup"><span data-stu-id="cf4e3-157">Element</span></span>|<span data-ttu-id="cf4e3-158">테스트</span><span class="sxs-lookup"><span data-stu-id="cf4e3-158">test</span></span>|http://server/a/b.xml|  
|<span data-ttu-id="cf4e3-159">텍스트</span><span class="sxs-lookup"><span data-stu-id="cf4e3-159">Text</span></span>|<span data-ttu-id="cf4e3-160">#text</span><span class="sxs-lookup"><span data-stu-id="cf4e3-160">#text</span></span>|http://server/a/b.xml|  
  
 <span data-ttu-id="cf4e3-161">`BaseURI` 엔터티를 찾습니다 경계를 참조 하는 엔터티는 확장 하는 경우이 정보는 유지 되지 않습니다 및이 속성의 위치를 반환 하므로 `XmlDocument` 모든 경우에에서는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-161">`BaseURI` looks for entity reference boundaries, so if entities are expanded this information is not preserved and this property returns the location of the `XmlDocument` object in all cases.</span></span>  
  
 <span data-ttu-id="cf4e3-162">두 번째 예로, 다음 XML 문서를 가정합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-162">As a second example, given the following XML document:</span></span>  
  
```  
<!DOCTYPE Mydata SYSTEM "http://localhost/doctype.dtd">  
<baa>&xyz;</baa>  
```  
  
 <span data-ttu-id="cf4e3-163">여기서 DTD 파일에 다음을 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-163">where the DTD file contains the following:</span></span>  
  
```  
<!ENTITY xyz <E1>My Data</E1>  
<!ELEMENT baa #PCDATA>  
<!ATTLIST baa attr1 "woof">  
```  
  
 <span data-ttu-id="cf4e3-164">XML 문서를 로드할 경우 http://localhost/mydata.xml, `BaseURI` 노드 각각에 대해 다음을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-164">If the XML document is loaded from http://localhost/mydata.xml, `BaseURI` returns the following for each of the nodes:</span></span>  
  
|<span data-ttu-id="cf4e3-165">노드 형식</span><span class="sxs-lookup"><span data-stu-id="cf4e3-165">NodeType</span></span>|<span data-ttu-id="cf4e3-166">이름</span><span class="sxs-lookup"><span data-stu-id="cf4e3-166">Name</span></span>|<span data-ttu-id="cf4e3-167">BaseURI</span><span class="sxs-lookup"><span data-stu-id="cf4e3-167">BaseURI</span></span>|  
|--------------|----------|-------------|  
|<span data-ttu-id="cf4e3-168">문서</span><span class="sxs-lookup"><span data-stu-id="cf4e3-168">Document</span></span>|<span data-ttu-id="cf4e3-169">#document</span><span class="sxs-lookup"><span data-stu-id="cf4e3-169">#document</span></span>|http://localhost/mydata.xml|  
|<span data-ttu-id="cf4e3-170">DocumentType</span><span class="sxs-lookup"><span data-stu-id="cf4e3-170">DocumentType</span></span>|<span data-ttu-id="cf4e3-171">Mydata</span><span class="sxs-lookup"><span data-stu-id="cf4e3-171">Mydata</span></span>|http://localhost/mydata.xml<br /><br /> <span data-ttu-id="cf4e3-172"><xref:System.Xml.XmlDocumentType.SystemId%2A?displayProperty=nameWithType> 또는 <xref:System.Xml.XmlDocumentType.PublicId%2A?displayProperty=nameWithType> DTD 파일에서 로드 된 위치를 식별 하는 속성을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-172">The <xref:System.Xml.XmlDocumentType.SystemId%2A?displayProperty=nameWithType> or <xref:System.Xml.XmlDocumentType.PublicId%2A?displayProperty=nameWithType> properties can be used to identify where the DTD file was loaded from.</span></span>|  
|<span data-ttu-id="cf4e3-173">요소</span><span class="sxs-lookup"><span data-stu-id="cf4e3-173">Element</span></span>|<span data-ttu-id="cf4e3-174">baa</span><span class="sxs-lookup"><span data-stu-id="cf4e3-174">baa</span></span>|http://localhost/mydata.xml|  
|<span data-ttu-id="cf4e3-175">엔터티</span><span class="sxs-lookup"><span data-stu-id="cf4e3-175">Entity</span></span>|<span data-ttu-id="cf4e3-176">xyz</span><span class="sxs-lookup"><span data-stu-id="cf4e3-176">xyz</span></span>|http://localhost/doctype.dtd|  
|<span data-ttu-id="cf4e3-177">EntityReference</span><span class="sxs-lookup"><span data-stu-id="cf4e3-177">EntityReference</span></span>|<span data-ttu-id="cf4e3-178">xyz</span><span class="sxs-lookup"><span data-stu-id="cf4e3-178">xyz</span></span>|http://localhost/mydata.xml|  
|<span data-ttu-id="cf4e3-179">특성</span><span class="sxs-lookup"><span data-stu-id="cf4e3-179">Attribute</span></span>|<span data-ttu-id="cf4e3-180">woof</span><span class="sxs-lookup"><span data-stu-id="cf4e3-180">woof</span></span>|http://localhost/mydata.xml|  
  
> [!NOTE]
>  <span data-ttu-id="cf4e3-181">기본 특성의 기본 URI가 소속 된 요소의 기본 URI와 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-181">The base URI of a default attribute is the same as the base URI of the element to which they belong.</span></span>  
  
 <span data-ttu-id="cf4e3-182">이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-182">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildNodes">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNodeList ChildNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNodeList ChildNodes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.ChildNodes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ChildNodes As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeList ^ ChildNodes { System::Xml::XmlNodeList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf4e3-183">노드의 모든 자식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-183">Gets all the child nodes of the node.</span></span></summary>
        <value><span data-ttu-id="cf4e3-184">노드의 모든 자식을 포함하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-184">An object that contains all the child nodes of the node.</span></span>  
  
 <span data-ttu-id="cf4e3-185">자식 노드가 없으면 이 속성은 빈 <see cref="T:System.Xml.XmlNodeList" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-185">If there are no child nodes, this property returns an empty <see cref="T:System.Xml.XmlNodeList" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-186">자식 노드에 대 한 정보를 참조 하십시오.는 [W3C DOM (코어) 수준 1 사양은](http://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span><span class="sxs-lookup"><span data-stu-id="cf4e3-186">For information about child nodes, see the [W3C DOM (Core) Level 1 specification](http://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf4e3-187">다음 예제에서는 루트 요소의 모든 자식 노드를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-187">The following example displays all the child nodes of the root element.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cf4e3-188">이 노드의 복제본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-188">Creates a duplicate of this node.</span></span></summary>
        <returns><span data-ttu-id="cf4e3-189">복제된 노드입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-189">The cloned node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-190">복제는 <xref:System.Xml.XmlElement> 모든 특성 및 기본값으로 설정 된 특성을 나타내는 XML 프로세서에 의해 생성 된 항목을 포함 하 여 해당 값을 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-190">Cloning an <xref:System.Xml.XmlElement> copies all attributes and their values, including those generated by the XML processor to represent defaulted attributes.</span></span> <span data-ttu-id="cf4e3-191">이 메서드를 재귀적으로 노드 및 그 아래의 하위 트리를 복제합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-191">This method recursively clones the node and the subtree underneath it.</span></span>  
  
 <span data-ttu-id="cf4e3-192">`Clone` 호출 하는 것과 같습니다 `CloneNode(true)`합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-192">`Clone` is equivalent to calling `CloneNode(true)`.</span></span>  
  
 <span data-ttu-id="cf4e3-193">다음 표에서 각각에 대 한 특정 동작에 설명 <xref:System.Xml.XmlNodeType>합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-193">The following table describes the specific behavior for each <xref:System.Xml.XmlNodeType>.</span></span>  
  
|<span data-ttu-id="cf4e3-194">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="cf4e3-194">XmlNodeType</span></span>|<span data-ttu-id="cf4e3-195">복제</span><span class="sxs-lookup"><span data-stu-id="cf4e3-195">Clone</span></span>|  
|-----------------|-----------|  
|<span data-ttu-id="cf4e3-196">특성</span><span class="sxs-lookup"><span data-stu-id="cf4e3-196">Attribute</span></span>|<span data-ttu-id="cf4e3-197">자식 노드를 포함 하는 특성 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-197">Clones the attribute node, including child nodes.</span></span>|  
|<span data-ttu-id="cf4e3-198">CData</span><span class="sxs-lookup"><span data-stu-id="cf4e3-198">CData</span></span>|<span data-ttu-id="cf4e3-199">데이터 콘텐츠를 포함 하 여 CData 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-199">Clones the CData node, including its data content.</span></span>|  
|<span data-ttu-id="cf4e3-200">주석</span><span class="sxs-lookup"><span data-stu-id="cf4e3-200">Comment</span></span>|<span data-ttu-id="cf4e3-201">텍스트 내용을 포함 하 여 주석 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-201">Clones the comment node, including its text content.</span></span>|  
|<span data-ttu-id="cf4e3-202">문서</span><span class="sxs-lookup"><span data-stu-id="cf4e3-202">Document</span></span>|<span data-ttu-id="cf4e3-203">모든 자식 노드를 포함 하 여 문서 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-203">Clones the document node, including any child nodes.</span></span>|  
|<span data-ttu-id="cf4e3-204">DocumentFragment</span><span class="sxs-lookup"><span data-stu-id="cf4e3-204">DocumentFragment</span></span>|<span data-ttu-id="cf4e3-205">모든 자식 노드를 포함 하 여 문서 조각 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-205">Clones the document fragment node, including any child nodes.</span></span>|  
|<span data-ttu-id="cf4e3-206">DocumentType</span><span class="sxs-lookup"><span data-stu-id="cf4e3-206">DocumentType</span></span>|<span data-ttu-id="cf4e3-207">문서 형식 노드를 복제합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-207">Clones the document type node.</span></span>|  
|<span data-ttu-id="cf4e3-208">요소</span><span class="sxs-lookup"><span data-stu-id="cf4e3-208">Element</span></span>|<span data-ttu-id="cf4e3-209">요소 노드, 해당 특성 및 자식 노드를 복제합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-209">Clones the element node, its attributes, and any child nodes.</span></span>|  
|<span data-ttu-id="cf4e3-210">엔터티</span><span class="sxs-lookup"><span data-stu-id="cf4e3-210">Entity</span></span>|<span data-ttu-id="cf4e3-211">entity 노드는 복제할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-211">Entity nodes cannot be cloned.</span></span>|  
|<span data-ttu-id="cf4e3-212">EntityReference</span><span class="sxs-lookup"><span data-stu-id="cf4e3-212">EntityReference</span></span>|<span data-ttu-id="cf4e3-213">엔터티 참조 노드를 복제합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-213">Clones the entity reference node.</span></span> <span data-ttu-id="cf4e3-214">대체 텍스트는 포함되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-214">The replacement text is not included.</span></span>|  
|<span data-ttu-id="cf4e3-215">Notation</span><span class="sxs-lookup"><span data-stu-id="cf4e3-215">Notation</span></span>|<span data-ttu-id="cf4e3-216">notation 노드는 복제할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-216">Notation nodes cannot be cloned.</span></span>|  
|<span data-ttu-id="cf4e3-217">ProcessingInstruction</span><span class="sxs-lookup"><span data-stu-id="cf4e3-217">ProcessingInstruction</span></span>|<span data-ttu-id="cf4e3-218">해당 대상 및 데이터를 포함 하 여 처리 명령 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-218">Clones the processing instruction node, including its target and data.</span></span>|  
|<span data-ttu-id="cf4e3-219">SignificantWhitespace</span><span class="sxs-lookup"><span data-stu-id="cf4e3-219">SignificantWhitespace</span></span>|<span data-ttu-id="cf4e3-220">데이터 값을 포함 하 여 유효 공백 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-220">Clones the significant white space node, including its data value.</span></span>|  
|<span data-ttu-id="cf4e3-221">텍스트</span><span class="sxs-lookup"><span data-stu-id="cf4e3-221">Text</span></span>|<span data-ttu-id="cf4e3-222">해당 데이터 값을 포함 하 고 텍스트 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-222">Clones the text node, including its data value.</span></span>|  
|<span data-ttu-id="cf4e3-223">Whitespace</span><span class="sxs-lookup"><span data-stu-id="cf4e3-223">Whitespace</span></span>|<span data-ttu-id="cf4e3-224">해당 데이터 값을 포함 하 고 공백 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-224">Clones the white space node, including its data value.</span></span>|  
|<span data-ttu-id="cf4e3-225">XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="cf4e3-225">XmlDeclaration</span></span>|<span data-ttu-id="cf4e3-226">데이터 값을 포함 하 여 XmlDeclaration 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-226">Clones the XmlDeclaration node, including its data value.</span></span>|  
|<span data-ttu-id="cf4e3-227">기타 모든 노드 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-227">All other node types.</span></span>|<span data-ttu-id="cf4e3-228">이 노드 형식은 복제할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-228">These node types cannot be cloned.</span></span>|  
  
 <span data-ttu-id="cf4e3-229">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-229">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf4e3-230">다음 예제에서는 XML 문서의 루트 노드를 복제합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-230">The following example clones the root node of the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.Clone Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.Clone Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.Clone Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.Clone Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.Clone Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.Clone Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlNode.CloneNode(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlNode CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CloneNode (deep As Boolean) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Xml::XmlNode ^ CloneNode(bool deep);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">
          <span data-ttu-id="cf4e3-231">지정된 노드 아래의 하위 트리를 재귀적으로 복제하려면 <see langword="true" />이고, 노드 자체만 복제하려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-231"><see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself.</span></span></param>
        <summary><span data-ttu-id="cf4e3-232">파생 클래스에서 재정의한 경우 노드를 복제합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-232">Creates a duplicate of the node, when overridden in a derived class.</span></span></summary>
        <returns><span data-ttu-id="cf4e3-233">복제된 노드입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-233">The cloned node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-234">이 메서드는 노드에 대 한 복사 생성자로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-234">This method serves as a copy constructor for nodes.</span></span> <span data-ttu-id="cf4e3-235">중복 된 노드는 부모 없습니다 (<xref:System.Xml.XmlNode.ParentNode%2A> 반환 `null`).</span><span class="sxs-lookup"><span data-stu-id="cf4e3-235">The duplicate node has no parent (<xref:System.Xml.XmlNode.ParentNode%2A> returns `null`).</span></span>  
  
 <span data-ttu-id="cf4e3-236">다음 표에서 각각에 대 한 특정 동작에 설명 <xref:System.Xml.XmlNodeType>합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-236">The following table describes the specific behavior for each <xref:System.Xml.XmlNodeType>.</span></span>  
  
|<span data-ttu-id="cf4e3-237">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="cf4e3-237">XmlNodeType</span></span>|<span data-ttu-id="cf4e3-238">CloneNode(true)</span><span class="sxs-lookup"><span data-stu-id="cf4e3-238">CloneNode(true)</span></span>|<span data-ttu-id="cf4e3-239">CloneNode(false)</span><span class="sxs-lookup"><span data-stu-id="cf4e3-239">CloneNode(false)</span></span>|  
|-----------------|-----------------------|------------------------|  
|<span data-ttu-id="cf4e3-240">특성</span><span class="sxs-lookup"><span data-stu-id="cf4e3-240">Attribute</span></span>|<span data-ttu-id="cf4e3-241">자식 노드를 포함 하는 특성 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-241">Clones the attribute node, including child nodes.</span></span>|<span data-ttu-id="cf4e3-242">자식 노드를 포함 하는 특성 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-242">Clones the attribute node, including child nodes.</span></span>|  
|<span data-ttu-id="cf4e3-243">CData</span><span class="sxs-lookup"><span data-stu-id="cf4e3-243">CData</span></span>|<span data-ttu-id="cf4e3-244">데이터 콘텐츠를 포함 하 여 CData 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-244">Clones the CData node, including its data content.</span></span>|<span data-ttu-id="cf4e3-245">데이터 콘텐츠를 포함 하 여 CData 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-245">Clones the CData node, including its data content.</span></span>|  
|<span data-ttu-id="cf4e3-246">주석</span><span class="sxs-lookup"><span data-stu-id="cf4e3-246">Comment</span></span>|<span data-ttu-id="cf4e3-247">텍스트 내용을 포함 하 여 주석 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-247">Clones the comment node, including its text content.</span></span>|<span data-ttu-id="cf4e3-248">텍스트 내용을 포함 하 여 주석 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-248">Clones the comment node, including its text content.</span></span>|  
|<span data-ttu-id="cf4e3-249">문서</span><span class="sxs-lookup"><span data-stu-id="cf4e3-249">Document</span></span>|<span data-ttu-id="cf4e3-250">모든 자식 노드를 포함 하 여 문서 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-250">Clones the document node, including any child nodes.</span></span>|<span data-ttu-id="cf4e3-251">문서 노드를 복제합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-251">Clones the document node.</span></span>|  
|<span data-ttu-id="cf4e3-252">DocumentFragment</span><span class="sxs-lookup"><span data-stu-id="cf4e3-252">DocumentFragment</span></span>|<span data-ttu-id="cf4e3-253">모든 자식 노드를 포함 하 여 문서 조각 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-253">Clones the document fragment node, including any child nodes.</span></span>|<span data-ttu-id="cf4e3-254">문서 조각 노드를 복제합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-254">Clones the document fragment node.</span></span>|  
|<span data-ttu-id="cf4e3-255">DocumentType</span><span class="sxs-lookup"><span data-stu-id="cf4e3-255">DocumentType</span></span>|<span data-ttu-id="cf4e3-256">문서 형식 노드를 복제합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-256">Clones the document type node.</span></span>|<span data-ttu-id="cf4e3-257">문서 형식 노드를 복제합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-257">Clones the document type node.</span></span>|  
|<span data-ttu-id="cf4e3-258">요소</span><span class="sxs-lookup"><span data-stu-id="cf4e3-258">Element</span></span>|<span data-ttu-id="cf4e3-259">요소 노드, 해당 특성 및 자식 노드를 복제합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-259">Clones the element node, its attributes, and any child nodes.</span></span>|<span data-ttu-id="cf4e3-260">요소 노드 및 모든 기본 특성을 포함 하 여 해당 특성을 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-260">Clones the element node and its attributes, including any default attributes.</span></span>|  
|<span data-ttu-id="cf4e3-261">엔터티</span><span class="sxs-lookup"><span data-stu-id="cf4e3-261">Entity</span></span>|<span data-ttu-id="cf4e3-262">entity 노드는 복제할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-262">Entity nodes cannot be cloned.</span></span>|<span data-ttu-id="cf4e3-263">entity 노드는 복제할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-263">Entity nodes cannot be cloned.</span></span>|  
|<span data-ttu-id="cf4e3-264">EntityReference</span><span class="sxs-lookup"><span data-stu-id="cf4e3-264">EntityReference</span></span>|<span data-ttu-id="cf4e3-265">엔터티 참조 노드를 복제합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-265">Clones the entity reference node.</span></span> <span data-ttu-id="cf4e3-266">대체 텍스트는 포함되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-266">The replacement text is not included.</span></span>|<span data-ttu-id="cf4e3-267">엔터티 참조 노드를 복제합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-267">Clones the entity reference node.</span></span> <span data-ttu-id="cf4e3-268">대체 텍스트는 포함되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-268">The replacement text is not included.</span></span>|  
|<span data-ttu-id="cf4e3-269">Notation</span><span class="sxs-lookup"><span data-stu-id="cf4e3-269">Notation</span></span>|<span data-ttu-id="cf4e3-270">notation 노드는 복제할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-270">Notation nodes cannot be cloned.</span></span>|<span data-ttu-id="cf4e3-271">notation 노드는 복제할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-271">Notation nodes cannot be cloned.</span></span>|  
|<span data-ttu-id="cf4e3-272">ProcessingInstruction</span><span class="sxs-lookup"><span data-stu-id="cf4e3-272">ProcessingInstruction</span></span>|<span data-ttu-id="cf4e3-273">해당 대상 및 데이터를 포함 하 여 처리 명령 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-273">Clones the processing instruction node, including its target and data.</span></span>|<span data-ttu-id="cf4e3-274">해당 대상 및 데이터를 포함 하 여 처리 명령 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-274">Clones the processing instruction node, including its target and data.</span></span>|  
|<span data-ttu-id="cf4e3-275">SignificantWhitespace</span><span class="sxs-lookup"><span data-stu-id="cf4e3-275">SignificantWhitespace</span></span>|<span data-ttu-id="cf4e3-276">데이터 값을 포함 하 여 유효 공백 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-276">Clones the significant white space node, including its data value.</span></span>|<span data-ttu-id="cf4e3-277">데이터 값을 포함 하 여 유효 공백 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-277">Clones the significant white space node, including its data value.</span></span>|  
|<span data-ttu-id="cf4e3-278">텍스트</span><span class="sxs-lookup"><span data-stu-id="cf4e3-278">Text</span></span>|<span data-ttu-id="cf4e3-279">해당 데이터 값을 포함 하 고 텍스트 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-279">Clones the text node, including its data value.</span></span>|<span data-ttu-id="cf4e3-280">해당 데이터 값을 포함 하 고 텍스트 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-280">Clones the text node, including its data value.</span></span>|  
|<span data-ttu-id="cf4e3-281">Whitespace</span><span class="sxs-lookup"><span data-stu-id="cf4e3-281">Whitespace</span></span>|<span data-ttu-id="cf4e3-282">해당 데이터 값을 포함 하 고 공백 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-282">Clones the white space node, including its data value.</span></span>|<span data-ttu-id="cf4e3-283">해당 데이터 값을 포함 하 고 공백 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-283">Clones the white space node, including its data value.</span></span>|  
|<span data-ttu-id="cf4e3-284">XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="cf4e3-284">XmlDeclaration</span></span>|<span data-ttu-id="cf4e3-285">데이터 값을 포함 하 여 XmlDeclaration 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-285">Clones the XmlDeclaration node, including its data value.</span></span>|<span data-ttu-id="cf4e3-286">데이터 값을 포함 하 여 XmlDeclaration 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-286">Clones the XmlDeclaration node, including its data value.</span></span>|  
|<span data-ttu-id="cf4e3-287">기타 모든 노드 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-287">All other node types.</span></span>|<span data-ttu-id="cf4e3-288">이 노드 형식은 복제할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-288">These node types cannot be cloned.</span></span>|<span data-ttu-id="cf4e3-289">이 노드 형식은 복제할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-289">These node types cannot be cloned.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="cf4e3-290">다음 예제에서는 전체 및 단순 복제본 간의 차이 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-290">The following example shows the difference between a deep and shallow clone.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.CloneNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.CloneNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.CloneNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.CloneNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.CloneNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.CloneNode Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cf4e3-291">복제할 수 없는 노드 형식에 이 메서드를 호출하는 경우</span><span class="sxs-lookup"><span data-stu-id="cf4e3-291">Calling this method on a node type that cannot be cloned.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNavigator CreateNavigator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNavigator CreateNavigator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.CreateNavigator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateNavigator () As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XPath::XPathNavigator ^ CreateNavigator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.XPath.IXPathNavigable.CreateNavigator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cf4e3-292">이 개체를 탐색하기 위해 <see cref="T:System.Xml.XPath.XPathNavigator" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-292">Creates an <see cref="T:System.Xml.XPath.XPathNavigator" /> for navigating this object.</span></span></summary>
        <returns><span data-ttu-id="cf4e3-293">노드를 탐색 하는 데 사용되는 <see langword="XPathNavigator" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-293">An <see langword="XPathNavigator" /> object used to navigate the node.</span></span> <span data-ttu-id="cf4e3-294"><see langword="XPathNavigator" />는 메서드를 호출한 노드에 위치하며</span><span class="sxs-lookup"><span data-stu-id="cf4e3-294">The <see langword="XPathNavigator" /> is positioned on the node from which the method was called.</span></span> <span data-ttu-id="cf4e3-295">문서의 루트에는 위치하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-295">It is not positioned on the root of the document.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-296">`XPathNavigator` 읽기 전용, 임의 데이터 액세스를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-296">The `XPathNavigator` provides read-only, random access to data.</span></span> <span data-ttu-id="cf4e3-297">한 입력된 메커니즘으로 사용 될 때 성능 이점을 제공 XSLT 변형에 최적화 되어는 <xref:System.Xml.Xsl.XslTransform.Transform%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-297">Because it is optimized for XSLT transformations, it provides performance benefits when used as an input mechanism to the <xref:System.Xml.Xsl.XslTransform.Transform%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="cf4e3-298">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-298">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf4e3-299">다음 예제에서는 로드 하 고 XSLT 변형을 수행 하기 전에 XML 문서를 편집 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-299">The following example loads and edits an XML document before performing an XSLT transform.</span></span>  
  
 [!code-cpp[XslTransform.Transform2#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform2/CPP/trans_snip.cpp#1)]
 [!code-csharp[XslTransform.Transform2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform2/CS/trans_snip.cs#1)]
 [!code-vb[XslTransform.Transform2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform2/VB/trans_snip.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Xsl.XslTransform" />
      </Docs>
    </Member>
    <Member MemberName="FirstChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode FirstChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode FirstChild" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.FirstChild" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FirstChild As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ FirstChild { System::Xml::XmlNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf4e3-300">노드의 첫 번째 자식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-300">Gets the first child of the node.</span></span></summary>
        <value><span data-ttu-id="cf4e3-301">노드의 첫 번째 자식입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-301">The first child of the node.</span></span> <span data-ttu-id="cf4e3-302">이러한 노드가 없으면, <see langword="null" />이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-302">If there is no such node, <see langword="null" /> is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-303">자식 노드에 대 한 정보를 참조 하십시오.는 [W3C DOM (코어) 수준 1 사양은](http://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span><span class="sxs-lookup"><span data-stu-id="cf4e3-303">For information about child nodes, see the [W3C DOM (Core) Level 1 specification](http://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf4e3-304">다음 예제에서는 title 요소를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-304">The following example displays the title element.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.FirstChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.FirstChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.FirstChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.FirstChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.FirstChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.FirstChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cf4e3-305">현재 노드에서 자식 노드를 반복하는 열거자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-305">Get an enumerator that iterates through the child nodes in the current node.</span></span></summary>
        <returns><span data-ttu-id="cf4e3-306">현재 노드에서 하위 노드를 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.IEnumerator" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-306">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the child nodes in the current node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-307">"각각에 대해" 스타일에 대 한 지원을 제공 반복의 노드는 `XmlNode`합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-307">Provides support for the "for each" style iteration over the nodes in the `XmlNode`.</span></span>  
  
 <span data-ttu-id="cf4e3-308">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-308">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf4e3-309">다음 예제에서는 XML 문서에 있는 모든 책을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-309">The following example displays all the books in the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.GetEnumerator Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.GetEnumerator Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.GetEnumerator Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.GetEnumerator Example/VB/source.vb#1)]  
  
 <span data-ttu-id="cf4e3-310">이 예제에서는 파일을 사용 하 여 `books.xml`입력으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-310">The example uses the file, `books.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlNode.GetEnumerator Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNode.GetEnumerator Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNamespaceOfPrefix">
      <MemberSignature Language="C#" Value="public virtual string GetNamespaceOfPrefix (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetNamespaceOfPrefix(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNamespaceOfPrefix (prefix As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetNamespaceOfPrefix(System::String ^ prefix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="cf4e3-311">찾으려는 네임스페이스 URI가 있는 접두사입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-311">The prefix whose namespace URI you want to find.</span></span></param>
        <summary><span data-ttu-id="cf4e3-312">현재 노드의 범위에 있는 지정된 접두사에 대해 가장 가까운 **xmlns** 선언을 조회하여 선언의 네임스페이스 URI를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-312">Looks up the closest **xmlns** declaration for the given prefix that is in scope for the current node and returns the namespace URI in the declaration.</span></span></summary>
        <returns><span data-ttu-id="cf4e3-313">지정된 접두사의 네임스페이스 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-313">The namespace URI of the specified prefix.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-314">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-314">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf4e3-315">다음 예제에서는 XML 문서에 새 특성을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-315">The following example adds a new attribute to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrefixOfNamespace">
      <MemberSignature Language="C#" Value="public virtual string GetPrefixOfNamespace (string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPrefixOfNamespace(string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.GetPrefixOfNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrefixOfNamespace (namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPrefixOfNamespace(System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="namespaceURI"><span data-ttu-id="cf4e3-316">찾으려는 접두사를 가진 네임스페이스 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-316">The namespace URI whose prefix you want to find.</span></span></param>
        <summary><span data-ttu-id="cf4e3-317">현재 노드의 범위에 있는 지정된 네임스페이스 URI에 대해 가장 가까운 **xmlns** 선언을 조회하여 해당 선언에 정의된 접두사를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-317">Looks up the closest **xmlns** declaration for the given namespace URI that is in scope for the current node and returns the prefix defined in that declaration.</span></span></summary>
        <returns><span data-ttu-id="cf4e3-318">지정된 네임스페이스 URI의 접두사입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-318">The prefix for the specified namespace URI.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-319">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-319">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf4e3-320">다음 예제에서는 XML 문서에 새 요소를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-320">The following example adds a new element to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.GetPrefixOfNamespace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.GetPrefixOfNamespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.GetPrefixOfNamespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.GetPrefixOfNamespace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.GetPrefixOfNamespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.GetPrefixOfNamespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasChildNodes">
      <MemberSignature Language="C#" Value="public virtual bool HasChildNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChildNodes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.HasChildNodes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasChildNodes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasChildNodes { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf4e3-321">이 노드에 자식 노드가 있는지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-321">Gets a value indicating whether this node has any child nodes.</span></span></summary>
        <value>
          <span data-ttu-id="cf4e3-322">현재 노드에 자식 노드가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-322"><see langword="true" /> if the node has child nodes; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-323">자식 노드에 대 한 정보를 참조 하십시오.는 [W3C DOM (코어) 수준 1 사양은](http://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span><span class="sxs-lookup"><span data-stu-id="cf4e3-323">For information about child nodes, see the [W3C DOM (Core) Level 1 specification](http://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf4e3-324">다음 예제에서는 루트 요소의 모든 자식 노드를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-324">The following example displays all the child nodes of the root element.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerText">
      <MemberSignature Language="C#" Value="public virtual string InnerText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.InnerText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InnerText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf4e3-325">노드와 모든 자식 노드의 연결된 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-325">Gets or sets the concatenated values of the node and all its child nodes.</span></span></summary>
        <value><span data-ttu-id="cf4e3-326">노드와 모든 자식 노드의 연결된 값입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-326">The concatenated values of the node and all its child nodes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-327">이 속성을 설정 자식 노드를 모두 지정된 된 문자열의 구문 분석 된 내용으로 바뀝니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-327">Setting this property replaces all the child nodes with the parsed contents of the given string.</span></span>  
  
 <span data-ttu-id="cf4e3-328">리프 노드에 대 한 `InnerText` 반환과 같은 콘텐츠가 <xref:System.Xml.XmlNode.Value%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-328">For leaf nodes, `InnerText` returns the same content as the <xref:System.Xml.XmlNode.Value%2A> property.</span></span>  
  
 <span data-ttu-id="cf4e3-329">이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-329">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf4e3-330">다음 예제에서는 비교는 `InnerText` 및 <xref:System.Xml.XmlNode.InnerXml%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-330">The following example compares the `InnerText` and <xref:System.Xml.XmlNode.InnerXml%2A> properties.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/VB/source.vb#1)]  
  
 <span data-ttu-id="cf4e3-331">**출력:**</span><span class="sxs-lookup"><span data-stu-id="cf4e3-331">**Output:**</span></span>  
  
```  
Display the InnerText of the element...  
some textmore text  
Display the InnerXml of the element...  
some text<child />more text  
<elem>Text containing &lt;markup/&gt; will have char(&lt;) and char(&gt;) escape  
d.</elem>  
<elem>Text containing <markup />.</elem>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerXml">
      <MemberSignature Language="C#" Value="public virtual string InnerXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerXml" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.InnerXml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InnerXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerXml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf4e3-332">이 노드의 자식 노드를 나타내는 태그를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-332">Gets or sets the markup representing only the child nodes of this node.</span></span></summary>
        <value><span data-ttu-id="cf4e3-333">이 노드의 자식 노드를 나타내는 태그입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-333">The markup of the child nodes of this node.</span></span>  
  
 <span data-ttu-id="cf4e3-334"><block subset="none" type="note"><para><see langword="InnerXml" /> 기본 특성을 반환 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-334"><block subset="none" type="note"><para><see langword="InnerXml" /> does not return default attributes.</span></span>  
  
</para></block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-335">자식 노드를 가질 수 없는 노드에서이 속성을 설정 하는, 예를 들어 텍스트 노드 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-335">Attempting to set this property from a node that cannot have child nodes, for example a Text node, throws an exception.</span></span> <span data-ttu-id="cf4e3-336">그렇지 않은 경우 설정 `InnerXml` 노드의 자식 노드를 지정된 된 문자열의 구문 분석 된 내용으로 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-336">Otherwise, setting `InnerXml` replaces the child nodes, of the node, with the parsed contents of the given string.</span></span> <span data-ttu-id="cf4e3-337">현재 네임스페이스 컨텍스트에서 구문 분석이 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-337">The parsing is done in the current namespace context.</span></span>  
  
 <span data-ttu-id="cf4e3-338">이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-338">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cf4e3-339">`InnerXml` DOM을 수정 하는 효과적인 방법은 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-339">`InnerXml` is not an efficient way to modify the DOM.</span></span> <span data-ttu-id="cf4e3-340">복잡 한 노드를 변경 하는 경우에 성능 문제가 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-340">There may be performance issues when replacing complex nodes.</span></span> <span data-ttu-id="cf4e3-341">이 노드를 생성 하 고와 같은 메서드를 사용 하는 것이 효율적 `InsertBefore`, `InsertAfter`, `AppendChild`, 및 `RemoveChild` Xml 문서를 수정 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-341">It is more efficient to construct nodes and use methods such as `InsertBefore`, `InsertAfter`, `AppendChild`, and `RemoveChild` to modify the Xml document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf4e3-342">다음 예제에서는 비교는 <xref:System.Xml.XmlNode.InnerText%2A> 및 `InnerXml` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-342">The following example compares the <xref:System.Xml.XmlNode.InnerText%2A> and `InnerXml` properties.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cf4e3-343">자식 노드를 가질 수 없는 노드에 대해 이 속성을 설정하는 경우</span><span class="sxs-lookup"><span data-stu-id="cf4e3-343">Setting this property on a node that cannot have child nodes.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="cf4e3-344">이 속성을 설정할 때 지정된 XML이 올바른 형식이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-344">The XML specified when setting this property is not well-formed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InsertAfter">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode InsertAfter (System.Xml.XmlNode newChild, System.Xml.XmlNode refChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode InsertAfter(class System.Xml.XmlNode newChild, class System.Xml.XmlNode refChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InsertAfter (newChild As XmlNode, refChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ InsertAfter(System::Xml::XmlNode ^ newChild, System::Xml::XmlNode ^ refChild);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
        <Parameter Name="refChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild"><span data-ttu-id="cf4e3-345">삽입할 <see langword="XmlNode" />입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-345">The <see langword="XmlNode" /> to insert.</span></span></param>
        <param name="refChild"><span data-ttu-id="cf4e3-346">참조 노드인 <see langword="XmlNode" />입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-346">The <see langword="XmlNode" /> that is the reference node.</span></span> <span data-ttu-id="cf4e3-347"><c>newNode</c>는 <c>refNode</c> 뒤에 배치됩니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-347">The <c>newNode</c> is placed after the <c>refNode</c>.</span></span></param>
        <summary><span data-ttu-id="cf4e3-348">지정된 노드를 지정된 참조 노드 바로 다음에 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-348">Inserts the specified node immediately after the specified reference node.</span></span></summary>
        <returns><span data-ttu-id="cf4e3-349">삽입할 노드입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-349">The node being inserted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-350">경우 `refChild` 은 `null`, 삽입 `newChild` 자식 노드 목록 맨 앞에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-350">If `refChild` is `null`, insert `newChild` at the beginning of the list of child nodes.</span></span> <span data-ttu-id="cf4e3-351">모든 내용을 `newChild` 뒤 삽입 됩니다 동일한 순서로 `refChild`합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-351">All the contents of the `newChild` are inserted, in the same order, after `refChild`.</span></span> <span data-ttu-id="cf4e3-352">경우는 `newChild` 는 트리에 이미은 원래 위치에서 제거 하 고 대상 위치에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-352">If the `newChild` is already in the tree, it is removed from its original position and added to its target position.</span></span> <span data-ttu-id="cf4e3-353">노드를 삽입 하는 방법에 대 한 자세한 내용은 참조 [XML 문서에 노드 삽입](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-353">For more information about inserting nodes, see [Inserting Nodes into an XML Document](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md).</span></span>  
  
 <span data-ttu-id="cf4e3-354">삽입 하는 노드가 다른 문서에서 만들어진 경우 사용할 수 있습니다 <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> 현재 문서에 노드를 가져오려는 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-354">If the node being inserted was created from another document, you can use <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> to import the node to the current document.</span></span> <span data-ttu-id="cf4e3-355">가져온 다음 현재 문서에 삽입할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-355">The imported node can then be inserted into the current document.</span></span>  
  
 <span data-ttu-id="cf4e3-356">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-356">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf4e3-357">다음 예제에서는 XML 문서에 새 노드를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-357">The following example adds a new node to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.InsertAfter Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.InsertAfter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.InsertAfter Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.InsertAfter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.InsertAfter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.InsertAfter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cf4e3-358">이 노드가 <paramref name="newChild" /> 노드 형식의 자식 노드를 허용하지 않는 형식을 가지는 경우</span><span class="sxs-lookup"><span data-stu-id="cf4e3-358">This node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.</span></span>  
  
 <span data-ttu-id="cf4e3-359"><paramref name="newChild" />가 이 노드의 상위 노드일 경우</span><span class="sxs-lookup"><span data-stu-id="cf4e3-359">The <paramref name="newChild" /> is an ancestor of this node.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cf4e3-360">이 노드를 만든 문서가 아닌 다른 문서에서 <paramref name="newChild" />를 만든 경우</span><span class="sxs-lookup"><span data-stu-id="cf4e3-360">The <paramref name="newChild" /> was created from a different document than the one that created this node.</span></span>  
  
 <span data-ttu-id="cf4e3-361"><paramref name="refChild" />가 이 노드의 자식이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="cf4e3-361">The <paramref name="refChild" /> is not a child of this node.</span></span>  
  
 <span data-ttu-id="cf4e3-362">이 노드가 읽기 전용인 경우</span><span class="sxs-lookup"><span data-stu-id="cf4e3-362">This node is read-only.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="cf4e3-363">재정의 하는 경우 <see langword="InsertAfter" /> 파생된 클래스에서 올바르게 발생할 이벤트를 위해 호출 해야는 <see langword="InsertAfter" /> 기본 클래스의 메서드.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-363">When overriding <see langword="InsertAfter" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="InsertAfter" /> method of the base class.</span></span></para>
        </block>
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="InsertBefore">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode InsertBefore (System.Xml.XmlNode newChild, System.Xml.XmlNode refChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode InsertBefore(class System.Xml.XmlNode newChild, class System.Xml.XmlNode refChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InsertBefore (newChild As XmlNode, refChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ InsertBefore(System::Xml::XmlNode ^ newChild, System::Xml::XmlNode ^ refChild);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
        <Parameter Name="refChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild"><span data-ttu-id="cf4e3-364">삽입할 <see langword="XmlNode" />입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-364">The <see langword="XmlNode" /> to insert.</span></span></param>
        <param name="refChild"><span data-ttu-id="cf4e3-365">참조 노드인 <see langword="XmlNode" />입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-365">The <see langword="XmlNode" /> that is the reference node.</span></span> <span data-ttu-id="cf4e3-366"><c>newChild</c>가 이 노드 앞에 배치됩니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-366">The <c>newChild</c> is placed before this node.</span></span></param>
        <summary><span data-ttu-id="cf4e3-367">지정된 노드를 지정된 참조 노드 바로 앞에 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-367">Inserts the specified node immediately before the specified reference node.</span></span></summary>
        <returns><span data-ttu-id="cf4e3-368">삽입할 노드입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-368">The node being inserted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-369">경우 `refChild` 은 `null`, 삽입 `newChild` 자식 노드 목록 끝에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-369">If `refChild` is `null`, insert `newChild` at the end of the list of child nodes.</span></span> <span data-ttu-id="cf4e3-370">모든 내용을 `newChild` 과 삽입 되는 동일한 순서로 전에 `refChild`합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-370">All the contents of the `newChild` are inserted, in the same order, before `refChild`.</span></span> <span data-ttu-id="cf4e3-371">경우는 `newChild` 는 트리에 이미은 원래 위치에서 제거 하 고 대상 위치에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-371">If the `newChild` is already in the tree, it is removed from its original position and added to its target position.</span></span> <span data-ttu-id="cf4e3-372">노드를 삽입 하는 방법에 대 한 자세한 내용은 참조 [XML 문서에 노드 삽입](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-372">For more information about inserting nodes, see [Inserting Nodes into an XML Document](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md).</span></span>  
  
 <span data-ttu-id="cf4e3-373">삽입 하는 노드가 다른 문서에서 만들어진 경우 사용할 수 있습니다 <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> 현재 문서에 노드를 가져오려는 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-373">If the node being inserted was created from another document, you can use <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> to import the node to the current document.</span></span> <span data-ttu-id="cf4e3-374">가져온 다음 현재 문서에 삽입할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-374">The imported node can then be inserted into the current document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf4e3-375">다음 예제에서는 XML 문서에 새 노드를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-375">The following example adds a new node to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.InsertBefore Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.InsertBefore Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.InsertBefore Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.InsertBefore Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.InsertBefore Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.InsertBefore Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cf4e3-376">현재 노드가 <paramref name="newChild" /> 노드 형식의 자식 노드를 허용하지 않는 형식인 경우</span><span class="sxs-lookup"><span data-stu-id="cf4e3-376">The current node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.</span></span>  
  
 <span data-ttu-id="cf4e3-377"><paramref name="newChild" />가 이 노드의 상위 노드일 경우</span><span class="sxs-lookup"><span data-stu-id="cf4e3-377">The <paramref name="newChild" /> is an ancestor of this node.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cf4e3-378">이 노드를 만든 문서가 아닌 다른 문서에서 <paramref name="newChild" />를 만든 경우</span><span class="sxs-lookup"><span data-stu-id="cf4e3-378">The <paramref name="newChild" /> was created from a different document than the one that created this node.</span></span>  
  
 <span data-ttu-id="cf4e3-379"><paramref name="refChild" />가 이 노드의 자식이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="cf4e3-379">The <paramref name="refChild" /> is not a child of this node.</span></span>  
  
 <span data-ttu-id="cf4e3-380">이 노드가 읽기 전용인 경우</span><span class="sxs-lookup"><span data-stu-id="cf4e3-380">This node is read-only.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="cf4e3-381">재정의 하는 경우 <see langword="InsertBefore" /> 파생된 클래스에서 올바르게 발생할 이벤트를 위해 호출 해야는 <see langword="InsertBefore" /> 기본 클래스의 메서드.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-381">When overriding <see langword="InsertBefore" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="InsertBefore" /> method of the base class.</span></span></para>
        </block>
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf4e3-382">노드가 읽기 전용인지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-382">Gets a value indicating whether the node is read-only.</span></span></summary>
        <value>
          <span data-ttu-id="cf4e3-383">노드가 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-383"><see langword="true" /> if the node is read-only; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-384">읽기 전용 노드는 해당 속성, 특성 또는 자식 노드를 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-384">A read-only node is one whose properties, attributes, or child nodes cannot be changed.</span></span> <span data-ttu-id="cf4e3-385">트리에서 읽기 전용 노드를 해제 하 고 다른 위치에 삽입 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-385">You can remove a read-only node from the tree and insert it somewhere else.</span></span> <span data-ttu-id="cf4e3-386">예를 들어 엔터티 노드는 항상 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-386">For example, Entity nodes are always read-only.</span></span>  
  
 <span data-ttu-id="cf4e3-387">이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-387">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cf4e3-388">지정된 자식 요소를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-388">Gets the specified child element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlElement Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(name As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlElement ^ default[System::String ^] { System::Xml::XmlElement ^ get(System::String ^ name); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="cf4e3-389">검색할 요소의 정규화된 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-389">The qualified name of the element to retrieve.</span></span></param>
        <summary><span data-ttu-id="cf4e3-390">지정된 <see cref="P:System.Xml.XmlNode.Name" />을 가진 첫 번째 자식 요소를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-390">Gets the first child element with the specified <see cref="P:System.Xml.XmlNode.Name" />.</span></span></summary>
        <value><span data-ttu-id="cf4e3-391">지정된 이름과 일치하는 첫 번째 <see cref="T:System.Xml.XmlElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-391">The first <see cref="T:System.Xml.XmlElement" /> that matches the specified name.</span></span> <span data-ttu-id="cf4e3-392">일치되는 항목이 없으면 null 참조(Visual Basic의 경우 <see langword="Nothing" />)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-392">It returns a null reference (<see langword="Nothing" /> in Visual Basic) if there is no match.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-393">이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-393">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf4e3-394">다음 예제에서는 title 요소를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-394">The following example displays the title element.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.this Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.this Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.this Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement this[string localname, string ns] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlElement Item(string, string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Item(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(localname As String, ns As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlElement ^ default[System::String ^, System::String ^] { System::Xml::XmlElement ^ get(System::String ^ localname, System::String ^ ns); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localname" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localname"><span data-ttu-id="cf4e3-395">요소의 로컬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-395">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="cf4e3-396">요소의 네임스페이스 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-396">The namespace URI of the element.</span></span></param>
        <summary><span data-ttu-id="cf4e3-397">지정된 <see cref="P:System.Xml.XmlNode.LocalName" />과 <see cref="P:System.Xml.XmlNode.NamespaceURI" />를 갖고 있는 첫 번째 자식 요소를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-397">Gets the first child element with the specified <see cref="P:System.Xml.XmlNode.LocalName" /> and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span></span></summary>
        <value><span data-ttu-id="cf4e3-398">일치하는 <paramref name="localname" />과 <paramref name="ns" />를 갖고 있는 첫 번째 <see cref="T:System.Xml.XmlElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-398">The first <see cref="T:System.Xml.XmlElement" /> with the matching <paramref name="localname" /> and <paramref name="ns" />.</span></span> <span data-ttu-id="cf4e3-399">이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-399">.</span></span> <span data-ttu-id="cf4e3-400">일치되는 항목이 없으면 null 참조(Visual Basic의 경우 <see langword="Nothing" />)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-400">It returns a null reference (<see langword="Nothing" /> in Visual Basic) if there is no match.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-401">이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-401">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode LastChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode LastChild" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.LastChild" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LastChild As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ LastChild { System::Xml::XmlNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf4e3-402">노드의 마지막 자식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-402">Gets the last child of the node.</span></span></summary>
        <value><span data-ttu-id="cf4e3-403">노드의 마지막 자식입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-403">The last child of the node.</span></span> <span data-ttu-id="cf4e3-404">이러한 노드가 없으면, <see langword="null" />이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-404">If there is no such node, <see langword="null" /> is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cf4e3-405">다음 예제에서는 가격 요소를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-405">The following example displays the price element.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.LastChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.LastChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.LastChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public abstract string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf4e3-406">파생 클래스에서 재정의되면 노드의 로컬 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-406">Gets the local name of the node, when overridden in a derived class.</span></span></summary>
        <value><span data-ttu-id="cf4e3-407">접두사를 제거한 노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-407">The name of the node with the prefix removed.</span></span> <span data-ttu-id="cf4e3-408">예를 들어 <see langword="LocalName" /> 은 book 요소에 대 한 &lt;예&gt;합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-408">For example, <see langword="LocalName" /> is book for the element &lt;bk:book&gt;.</span></span>  
  
 <span data-ttu-id="cf4e3-409">반환되는 이름은 다음과 같이 노드의 <see cref="P:System.Xml.XmlNode.NodeType" />에 따라 달라집니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-409">The name returned is dependent on the <see cref="P:System.Xml.XmlNode.NodeType" /> of the node:</span></span>  
  
 <span data-ttu-id="cf4e3-410"><list type="table"><listheader><term> 형식</span><span class="sxs-lookup"><span data-stu-id="cf4e3-410"><list type="table"><listheader><term> Type</span></span>  
  
 <span data-ttu-id="cf4e3-411"></term><description> 이름</span><span class="sxs-lookup"><span data-stu-id="cf4e3-411"></term><description> Name</span></span>  
  
 <span data-ttu-id="cf4e3-412"></description></listheader><item><term> 특성</span><span class="sxs-lookup"><span data-stu-id="cf4e3-412"></description></listheader><item><term> Attribute</span></span>  
  
 <span data-ttu-id="cf4e3-413"></term><description> 특성의 로컬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-413"></term><description> The local name of the attribute.</span></span>  
  
 <span data-ttu-id="cf4e3-414"></description></item><item><term> CDATA</span><span class="sxs-lookup"><span data-stu-id="cf4e3-414"></description></item><item><term> CDATA</span></span>  
  
 <span data-ttu-id="cf4e3-415"></term><description> #cdata-section</span><span class="sxs-lookup"><span data-stu-id="cf4e3-415"></term><description> #cdata-section</span></span>  
  
 <span data-ttu-id="cf4e3-416"></description></item><item><term> 주석</span><span class="sxs-lookup"><span data-stu-id="cf4e3-416"></description></item><item><term> Comment</span></span>  
  
 <span data-ttu-id="cf4e3-417"></term><description> #comment</span><span class="sxs-lookup"><span data-stu-id="cf4e3-417"></term><description> #comment</span></span>  
  
 <span data-ttu-id="cf4e3-418"></description></item><item><term> 문서</span><span class="sxs-lookup"><span data-stu-id="cf4e3-418"></description></item><item><term> Document</span></span>  
  
 <span data-ttu-id="cf4e3-419"></term><description> #document</span><span class="sxs-lookup"><span data-stu-id="cf4e3-419"></term><description> #document</span></span>  
  
 <span data-ttu-id="cf4e3-420"></description></item><item><term> DocumentFragment</span><span class="sxs-lookup"><span data-stu-id="cf4e3-420"></description></item><item><term> DocumentFragment</span></span>  
  
 <span data-ttu-id="cf4e3-421"></term><description> #document-fragment</span><span class="sxs-lookup"><span data-stu-id="cf4e3-421"></term><description> #document-fragment</span></span>  
  
 <span data-ttu-id="cf4e3-422"></description></item><item><term> DocumentType</span><span class="sxs-lookup"><span data-stu-id="cf4e3-422"></description></item><item><term> DocumentType</span></span>  
  
 <span data-ttu-id="cf4e3-423"></term><description> 문서 종류 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-423"></term><description> The document type name.</span></span>  
  
 <span data-ttu-id="cf4e3-424"></description></item><item><term> 요소</span><span class="sxs-lookup"><span data-stu-id="cf4e3-424"></description></item><item><term> Element</span></span>  
  
 <span data-ttu-id="cf4e3-425"></term><description> 요소의 로컬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-425"></term><description> The local name of the element.</span></span>  
  
 <span data-ttu-id="cf4e3-426"></description></item><item><term> 엔터티</span><span class="sxs-lookup"><span data-stu-id="cf4e3-426"></description></item><item><term> Entity</span></span>  
  
 <span data-ttu-id="cf4e3-427"></term><description> 엔터티의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-427"></term><description> The name of the entity.</span></span>  
  
 <span data-ttu-id="cf4e3-428"></description></item><item><term> EntityReference</span><span class="sxs-lookup"><span data-stu-id="cf4e3-428"></description></item><item><term> EntityReference</span></span>  
  
 <span data-ttu-id="cf4e3-429"></term><description> 참조 엔터티의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-429"></term><description> The name of the entity referenced.</span></span>  
  
 <span data-ttu-id="cf4e3-430"></description></item><item><term> 표기법</span><span class="sxs-lookup"><span data-stu-id="cf4e3-430"></description></item><item><term> Notation</span></span>  
  
 <span data-ttu-id="cf4e3-431"></term><description> Notation 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-431"></term><description> The notation name.</span></span>  
  
 <span data-ttu-id="cf4e3-432"></description></item><item><term> ProcessingInstruction</span><span class="sxs-lookup"><span data-stu-id="cf4e3-432"></description></item><item><term> ProcessingInstruction</span></span>  
  
 <span data-ttu-id="cf4e3-433"></term><description> 처리 명령의 대상입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-433"></term><description> The target of the processing instruction.</span></span>  
  
 <span data-ttu-id="cf4e3-434"></description></item><item><term> 텍스트</span><span class="sxs-lookup"><span data-stu-id="cf4e3-434"></description></item><item><term> Text</span></span>  
  
 <span data-ttu-id="cf4e3-435"></term><description> #text</span><span class="sxs-lookup"><span data-stu-id="cf4e3-435"></term><description> #text</span></span>  
  
 <span data-ttu-id="cf4e3-436"></description></item><item><term> 공백</span><span class="sxs-lookup"><span data-stu-id="cf4e3-436"></description></item><item><term> Whitespace</span></span>  
  
 <span data-ttu-id="cf4e3-437"></term><description> #whitespace</span><span class="sxs-lookup"><span data-stu-id="cf4e3-437"></term><description> #whitespace</span></span>  
  
 <span data-ttu-id="cf4e3-438"></description></item><item><term> SignificantWhitespace</span><span class="sxs-lookup"><span data-stu-id="cf4e3-438"></description></item><item><term> SignificantWhitespace</span></span>  
  
 <span data-ttu-id="cf4e3-439"></term><description> #significant-whitespace</span><span class="sxs-lookup"><span data-stu-id="cf4e3-439"></term><description> #significant-whitespace</span></span>  
  
 <span data-ttu-id="cf4e3-440"></description></item><item><term> XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="cf4e3-440"></description></item><item><term> XmlDeclaration</span></span>  
  
 <span data-ttu-id="cf4e3-441"></term><description> #xml-declaration</span><span class="sxs-lookup"><span data-stu-id="cf4e3-441"></term><description> #xml-declaration</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-442">노드는 접두사가 없는 경우 LocalName 같습니다 <xref:System.Xml.XmlNode.Name%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-442">If the node does not have a prefix, LocalName is the same as <xref:System.Xml.XmlNode.Name%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlNode.Prefix" />
        <altmember cref="P:System.Xml.XmlNode.Name" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf4e3-443">파생 클래스에서 재정의되면 노드의 정규화된 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-443">Gets the qualified name of the node, when overridden in a derived class.</span></span></summary>
        <value><span data-ttu-id="cf4e3-444">노드의 정규화된 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-444">The qualified name of the node.</span></span> <span data-ttu-id="cf4e3-445">반환되는 이름은 다음과 같이 노드의 <see cref="P:System.Xml.XmlNode.NodeType" />에 따라 달라집니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-445">The name returned is dependent on the <see cref="P:System.Xml.XmlNode.NodeType" /> of the node:</span></span>  
  
 <span data-ttu-id="cf4e3-446"><list type="table"><listheader><term> 형식</span><span class="sxs-lookup"><span data-stu-id="cf4e3-446"><list type="table"><listheader><term> Type</span></span>  
  
 <span data-ttu-id="cf4e3-447"></term><description> 이름</span><span class="sxs-lookup"><span data-stu-id="cf4e3-447"></term><description> Name</span></span>  
  
 <span data-ttu-id="cf4e3-448"></description></listheader><item><term> 특성</span><span class="sxs-lookup"><span data-stu-id="cf4e3-448"></description></listheader><item><term> Attribute</span></span>  
  
 <span data-ttu-id="cf4e3-449"></term><description> 특성의 정규화 된 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-449"></term><description> The qualified name of the attribute.</span></span>  
  
 <span data-ttu-id="cf4e3-450"></description></item><item><term> CDATA</span><span class="sxs-lookup"><span data-stu-id="cf4e3-450"></description></item><item><term> CDATA</span></span>  
  
 <span data-ttu-id="cf4e3-451"></term><description> #cdata-section</span><span class="sxs-lookup"><span data-stu-id="cf4e3-451"></term><description> #cdata-section</span></span>  
  
 <span data-ttu-id="cf4e3-452"></description></item><item><term> 주석</span><span class="sxs-lookup"><span data-stu-id="cf4e3-452"></description></item><item><term> Comment</span></span>  
  
 <span data-ttu-id="cf4e3-453"></term><description> #comment</span><span class="sxs-lookup"><span data-stu-id="cf4e3-453"></term><description> #comment</span></span>  
  
 <span data-ttu-id="cf4e3-454"></description></item><item><term> 문서</span><span class="sxs-lookup"><span data-stu-id="cf4e3-454"></description></item><item><term> Document</span></span>  
  
 <span data-ttu-id="cf4e3-455"></term><description> #document</span><span class="sxs-lookup"><span data-stu-id="cf4e3-455"></term><description> #document</span></span>  
  
 <span data-ttu-id="cf4e3-456"></description></item><item><term> DocumentFragment</span><span class="sxs-lookup"><span data-stu-id="cf4e3-456"></description></item><item><term> DocumentFragment</span></span>  
  
 <span data-ttu-id="cf4e3-457"></term><description> #document-fragment</span><span class="sxs-lookup"><span data-stu-id="cf4e3-457"></term><description> #document-fragment</span></span>  
  
 <span data-ttu-id="cf4e3-458"></description></item><item><term> DocumentType</span><span class="sxs-lookup"><span data-stu-id="cf4e3-458"></description></item><item><term> DocumentType</span></span>  
  
 <span data-ttu-id="cf4e3-459"></term><description> 문서 종류 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-459"></term><description> The document type name.</span></span>  
  
 <span data-ttu-id="cf4e3-460"></description></item><item><term> 요소</span><span class="sxs-lookup"><span data-stu-id="cf4e3-460"></description></item><item><term> Element</span></span>  
  
 <span data-ttu-id="cf4e3-461"></term><description> 요소의 정규화 된 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-461"></term><description> The qualified name of the element.</span></span>  
  
 <span data-ttu-id="cf4e3-462"></description></item><item><term> 엔터티</span><span class="sxs-lookup"><span data-stu-id="cf4e3-462"></description></item><item><term> Entity</span></span>  
  
 <span data-ttu-id="cf4e3-463"></term><description> 엔터티의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-463"></term><description> The name of the entity.</span></span>  
  
 <span data-ttu-id="cf4e3-464"></description></item><item><term> EntityReference</span><span class="sxs-lookup"><span data-stu-id="cf4e3-464"></description></item><item><term> EntityReference</span></span>  
  
 <span data-ttu-id="cf4e3-465"></term><description> 참조 엔터티의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-465"></term><description> The name of the entity referenced.</span></span>  
  
 <span data-ttu-id="cf4e3-466"></description></item><item><term> 표기법</span><span class="sxs-lookup"><span data-stu-id="cf4e3-466"></description></item><item><term> Notation</span></span>  
  
 <span data-ttu-id="cf4e3-467"></term><description> Notation 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-467"></term><description> The notation name.</span></span>  
  
 <span data-ttu-id="cf4e3-468"></description></item><item><term> ProcessingInstruction</span><span class="sxs-lookup"><span data-stu-id="cf4e3-468"></description></item><item><term> ProcessingInstruction</span></span>  
  
 <span data-ttu-id="cf4e3-469"></term><description> 처리 명령의 대상입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-469"></term><description> The target of the processing instruction.</span></span>  
  
 <span data-ttu-id="cf4e3-470"></description></item><item><term> 텍스트</span><span class="sxs-lookup"><span data-stu-id="cf4e3-470"></description></item><item><term> Text</span></span>  
  
 <span data-ttu-id="cf4e3-471"></term><description> #text</span><span class="sxs-lookup"><span data-stu-id="cf4e3-471"></term><description> #text</span></span>  
  
 <span data-ttu-id="cf4e3-472"></description></item><item><term> 공백</span><span class="sxs-lookup"><span data-stu-id="cf4e3-472"></description></item><item><term> Whitespace</span></span>  
  
 <span data-ttu-id="cf4e3-473"></term><description> #whitespace</span><span class="sxs-lookup"><span data-stu-id="cf4e3-473"></term><description> #whitespace</span></span>  
  
 <span data-ttu-id="cf4e3-474"></description></item><item><term> SignificantWhitespace</span><span class="sxs-lookup"><span data-stu-id="cf4e3-474"></description></item><item><term> SignificantWhitespace</span></span>  
  
 <span data-ttu-id="cf4e3-475"></term><description> #significant-whitespace</span><span class="sxs-lookup"><span data-stu-id="cf4e3-475"></term><description> #significant-whitespace</span></span>  
  
 <span data-ttu-id="cf4e3-476"></description></item><item><term> XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="cf4e3-476"></description></item><item><term> XmlDeclaration</span></span>  
  
 <span data-ttu-id="cf4e3-477"></term><description> #xml-declaration</span><span class="sxs-lookup"><span data-stu-id="cf4e3-477"></term><description> #xml-declaration</span></span>  
  
 </description></item></list></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceURI">
      <MemberSignature Language="C#" Value="public virtual string NamespaceURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.NamespaceURI" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NamespaceURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NamespaceURI { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf4e3-478">이 노드의 네임스페이스 URI를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-478">Gets the namespace URI of this node.</span></span></summary>
        <value><span data-ttu-id="cf4e3-479">이 노드의 네임스페이스 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-479">The namespace URI of this node.</span></span> <span data-ttu-id="cf4e3-480">네임스페이스 URI가 없으면, 이 속성은 String.Empty를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-480">If there is no namespace URI, this property returns String.Empty.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-481">네임 스페이스를 만들 때 지정 된 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-481">This is the namespace URI specified at creation time.</span></span> <span data-ttu-id="cf4e3-482">예를 들어 `NamespaceURI` urn: 요소에 대 한 샘플은 \<예 xmlns:bk = "urn: 예제" ></span><span class="sxs-lookup"><span data-stu-id="cf4e3-482">For example, `NamespaceURI` is urn:samples for the element \<bk:book xmlns:bk= "urn:samples"></span></span>  
  
 <span data-ttu-id="cf4e3-483">특성에 연결 된 요소에서 해당 네임 스페이스를 상속 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-483">An attribute does not inherit its namespace from the element it is attached to.</span></span> <span data-ttu-id="cf4e3-484">특성 네임 스페이스를 명시적으로 지정 하지 않으면 경우 단순히 네임 스페이스를 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-484">If an attribute is not explicitly given a namespace, it simply has no namespace.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextSibling">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode NextSibling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode NextSibling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.NextSibling" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NextSibling As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ NextSibling { System::Xml::XmlNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf4e3-485">이 노드 바로 다음에 오는 노드를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-485">Gets the node immediately following this node.</span></span></summary>
        <value><span data-ttu-id="cf4e3-486">다음 <see langword="XmlNode" />입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-486">The next <see langword="XmlNode" />.</span></span> <span data-ttu-id="cf4e3-487">다음 노드가 없으면 <see langword="null" />이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-487">If there is no next node, <see langword="null" /> is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cf4e3-488">다음 예제에서는 XML 문서에 있는 모든 책을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-488">The following example displays all the books in the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.NextSibling Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.NextSibling Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.NextSibling Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf4e3-489">파생 클래스에서 재정의되면 현재 노드의 형식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-489">Gets the type of the current node, when overridden in a derived class.</span></span></summary>
        <value><span data-ttu-id="cf4e3-490"><see cref="T:System.Xml.XmlNodeType" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-490">One of the <see cref="T:System.Xml.XmlNodeType" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-491">이 속성을 반환 하지 않습니다는 `XmlNodeType` EndElement, EndEntity 또는 None입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-491">This property never returns the `XmlNodeType` EndElement, EndEntity or None.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public virtual void Normalize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Normalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.Normalize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Normalize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Normalize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cf4e3-492">이 XmlNode 아래 전체 수준의 하위 트리에 있는 모든 XmlText 노드를 태그(즉, 태그, 주석, 처리 명령, CDATA 섹션 및 엔터티 참조)만이 XmlText 노드를 구분하는, 인접한 XmlText 노드가 없는 "정상적인" 폼에 넣습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-492">Puts all XmlText nodes in the full depth of the sub-tree underneath this XmlNode into a "normal" form where only markup (that is, tags, comments, processing instructions, CDATA sections, and entity references) separates XmlText nodes, that is, there are no adjacent XmlText nodes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-493">이 메서드를 사용 하 여 문서의 DOM 보기 동일 않은지 저장 및 다시 로드 하는 경우에 따라 할 수는 특정 문서 트리 구조에 종속 된 작업 (예: 재로드)를 사용 하려는 경우 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-493">This method can be used to ensure that the DOM view of a document is the same as if it were saved and re-loaded, and is useful when operations (such as XPointer lookups) that depend on a particular document tree structure are to be used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OuterXml">
      <MemberSignature Language="C#" Value="public virtual string OuterXml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OuterXml" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.OuterXml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OuterXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ OuterXml { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf4e3-494">이 노드와 모든 자식 노드를 포함하는 태그를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-494">Gets the markup containing this node and all its child nodes.</span></span></summary>
        <value><span data-ttu-id="cf4e3-495">이 노드와 모든 자식 노드를 포함하는 태그입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-495">The markup containing this node and all its child nodes.</span></span>  
  
 <span data-ttu-id="cf4e3-496"><block subset="none" type="note"><para><see langword="OuterXml" /> 기본 특성을 반환 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-496"><block subset="none" type="note"><para><see langword="OuterXml" /> does not return default attributes.</span></span>  
  
</para></block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-497">이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-497">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf4e3-498">다음 예제는 <xref:System.Xml.XmlNode.InnerXml%2A> 및 `OuterXml` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-498">The following example compares output from the <xref:System.Xml.XmlNode.InnerXml%2A> and `OuterXml` properties.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.OuterXml Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.OuterXml Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.OuterXml Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.OuterXml Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.OuterXml Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.OuterXml Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerDocument">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlDocument OwnerDocument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDocument OwnerDocument" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.OwnerDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OwnerDocument As XmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlDocument ^ OwnerDocument { System::Xml::XmlDocument ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf4e3-499">이 노드가 속한 <see cref="T:System.Xml.XmlDocument" />를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-499">Gets the <see cref="T:System.Xml.XmlDocument" /> to which this node belongs.</span></span></summary>
        <value><span data-ttu-id="cf4e3-500">이 노드가 속한 <see cref="T:System.Xml.XmlDocument" />입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-500">The <see cref="T:System.Xml.XmlDocument" /> to which this node belongs.</span></span>  
  
 <span data-ttu-id="cf4e3-501">노드가 <see cref="T:System.Xml.XmlDocument" />(NodeType이 XmlNodeType.Document와 같음)일 경우 이 속성에서는 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-501">If the node is an <see cref="T:System.Xml.XmlDocument" /> (NodeType equals XmlNodeType.Document), this property returns <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-502">현재 노드에 노드를 추가할 때 사용 하 여는 <xref:System.Xml.XmlDocument> 에서 반환 되는 <xref:System.Xml.XmlNode.OwnerDocument%2A> 속성 노드를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-502">When adding nodes to the current node, use the <xref:System.Xml.XmlDocument> returned by the <xref:System.Xml.XmlNode.OwnerDocument%2A> property to create the node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf4e3-503">참조 <xref:System.Xml.XmlElement.OwnerDocument%2A> (XmlElement 클래스)에서이 속성을 사용 하는 예제에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-503">See <xref:System.Xml.XmlElement.OwnerDocument%2A> (in the XmlElement class) for an example using this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode ParentNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode ParentNode" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.ParentNode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ParentNode As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ ParentNode { System::Xml::XmlNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf4e3-504">부모를 가질 수 있는 노드의 경우 이 노드의 부모를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-504">Gets the parent of this node (for nodes that can have parents).</span></span></summary>
        <value><span data-ttu-id="cf4e3-505">현재 노드의 부모인 <see langword="XmlNode" />입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-505">The <see langword="XmlNode" /> that is the parent of the current node.</span></span> <span data-ttu-id="cf4e3-506">노드를 만들고 트리에 추가하지 않은 경우나 트리에서 노드를 제거한 경우 부모는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-506">If a node has just been created and not yet added to the tree, or if it has been removed from the tree, the parent is <see langword="null" />.</span></span> <span data-ttu-id="cf4e3-507">다른 모든 노드의 경우에는 노드의 <see cref="P:System.Xml.XmlNode.NodeType" />에 따라 반환되는 값이 달라집니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-507">For all other nodes, the value returned depends on the <see cref="P:System.Xml.XmlNode.NodeType" /> of the node.</span></span> <span data-ttu-id="cf4e3-508">다음 표에서는 <see langword="ParentNode" /> 속성에 대해 가능한 반환 값을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-508">The following table describes the possible return values for the <see langword="ParentNode" /> property.</span></span>  
  
 <span data-ttu-id="cf4e3-509"><list type="table"><listheader><term> NodeType</span><span class="sxs-lookup"><span data-stu-id="cf4e3-509"><list type="table"><listheader><term> NodeType</span></span>  
  
 <span data-ttu-id="cf4e3-510"></term><description> ParentNode의 반환 값</span><span class="sxs-lookup"><span data-stu-id="cf4e3-510"></term><description> Return Value of ParentNode</span></span>  
  
 <span data-ttu-id="cf4e3-511"></description></listheader><item><term> 특성, 문서, DocumentFragment, 엔터티, 표기법</span><span class="sxs-lookup"><span data-stu-id="cf4e3-511"></description></listheader><item><term> Attribute, Document, DocumentFragment, Entity, Notation</span></span>  
  
 <span data-ttu-id="cf4e3-512"></term><description> 반환 <see langword="null" />;는 이러한 노드에 부모가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-512"></term><description> Returns <see langword="null" />; these nodes do not have parents.</span></span>  
  
 <span data-ttu-id="cf4e3-513"></description></item><item><term> CDATA</span><span class="sxs-lookup"><span data-stu-id="cf4e3-513"></description></item><item><term> CDATA</span></span>  
  
 <span data-ttu-id="cf4e3-514"></term><description> CDATA 섹션을 포함 하는 요소 또는 엔터티 참조를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-514"></term><description> Returns the element or entity reference containing the CDATA section.</span></span>  
  
 <span data-ttu-id="cf4e3-515"></description></item><item><term> 주석</span><span class="sxs-lookup"><span data-stu-id="cf4e3-515"></description></item><item><term> Comment</span></span>  
  
 <span data-ttu-id="cf4e3-516"></term><description> 주석이 포함 된 문서, 문서 종류 또는 요소, 엔터티 참조를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-516"></term><description> Returns the element, entity reference, document type, or document containing the comment.</span></span>  
  
 <span data-ttu-id="cf4e3-517"></description></item><item><term> DocumentType</span><span class="sxs-lookup"><span data-stu-id="cf4e3-517"></description></item><item><term> DocumentType</span></span>  
  
 <span data-ttu-id="cf4e3-518"></term><description> 문서 노드를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-518"></term><description> Returns the document node.</span></span>  
  
 <span data-ttu-id="cf4e3-519"></description></item><item><term> 요소</span><span class="sxs-lookup"><span data-stu-id="cf4e3-519"></description></item><item><term> Element</span></span>  
  
 <span data-ttu-id="cf4e3-520"></term><description> 요소의 부모 노드를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-520"></term><description> Returns the parent node of the element.</span></span> <span data-ttu-id="cf4e3-521">요소가 트리의 루트 노드일 경우 부모는 문서 노드입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-521">If the element is the root node in the tree, the parent is the document node.</span></span>  
  
 <span data-ttu-id="cf4e3-522"></description></item><item><term> EntityReference</span><span class="sxs-lookup"><span data-stu-id="cf4e3-522"></description></item><item><term> EntityReference</span></span>  
  
 <span data-ttu-id="cf4e3-523"></term><description> 엔터티 참조를 포함 하는 요소, 특성 또는 엔터티 참조를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-523"></term><description> Returns the element, attribute, or entity reference containing the entity reference.</span></span>  
  
 <span data-ttu-id="cf4e3-524"></description></item><item><term> ProcessingInstruction</span><span class="sxs-lookup"><span data-stu-id="cf4e3-524"></description></item><item><term> ProcessingInstruction</span></span>  
  
 <span data-ttu-id="cf4e3-525"></term><description> 문서, 요소, 문서 종류 또는 처리 명령을 포함 하는 엔터티 참조를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-525"></term><description> Returns the document, element, document type, or entity reference containing the processing instruction.</span></span>  
  
 <span data-ttu-id="cf4e3-526"></description></item><item><term> 텍스트</span><span class="sxs-lookup"><span data-stu-id="cf4e3-526"></description></item><item><term> Text</span></span>  
  
 <span data-ttu-id="cf4e3-527"></term><description> 부모 텍스트 노드를 포함 하는 요소, 특성 또는 엔터티 참조를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-527"></term><description> Returns the parent element, attribute, or entity reference containing the text node.</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-528">부모 및 자식 노드에 대 한 정보를 참조 하십시오.는 [W3C DOM (코어) 수준 1 사양은](http://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span><span class="sxs-lookup"><span data-stu-id="cf4e3-528">For information about parent and child nodes, see the [W3C DOM (Core) Level 1 specification](http://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public virtual string Prefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Prefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf4e3-529">이 노드의 네임스페이스 접두사를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-529">Gets or sets the namespace prefix of this node.</span></span></summary>
        <value><span data-ttu-id="cf4e3-530">이 노드의 네임스페이스 접두사입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-530">The namespace prefix of this node.</span></span> <span data-ttu-id="cf4e3-531">예를 들어 <see langword="Prefix" /> 요소에 대 한 리프 멤버가 포함 되어는 &lt;예&gt;합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-531">For example, <see langword="Prefix" /> is bk for the element &lt;bk:book&gt;.</span></span> <span data-ttu-id="cf4e3-532">접두사가 없으면, 이 속성은 String.Empty를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-532">If there is no prefix, this property returns String.Empty.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-533">허용 되는 경우이 속성을 설정, 변경 된 <xref:System.Xml.XmlNode.Name%2A> 요소 및 특성 노드의 정규화 된 이름을 보유 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-533">Setting this property, when permitted, changes the <xref:System.Xml.XmlNode.Name%2A> property, which holds the qualified name, on Element and Attribute nodes.</span></span> <span data-ttu-id="cf4e3-534">(예: 텍스트, 주석, EntityReference, CDATA, ProcessingInstruction, 문서 및 DocumentFragment) 접두사를 가질 수 없는 노드 형식에서이 속성을 설정 하는 것은 효과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-534">Setting this property on node types that cannot have a prefix (such as Text, Comment, EntityReference, CDATA, ProcessingInstruction, Document, and DocumentFragment) has no effect.</span></span> <span data-ttu-id="cf4e3-535">기본값이으로 알려진 특성의 접두사를 변경, 기본 값으로 새 특성을 만들지 않으며 표시 원래 접두사, 로컬 이름과 네임 스페이스 URI이 변경 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-535">Changing the prefix of an attribute that is known to have a default value, does not make a new attribute with the default value and the original prefix appear, since the namespace URI and local name do not change.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cf4e3-536">이 노드가 읽기 전용인 경우</span><span class="sxs-lookup"><span data-stu-id="cf4e3-536">This node is read-only.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="cf4e3-537">지정된 접두사에 잘못된 문자가 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="cf4e3-537">The specified prefix contains an invalid character.</span></span>  
  
 <span data-ttu-id="cf4e3-538">지정된 접두사의 형식이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="cf4e3-538">The specified prefix is malformed.</span></span>  
  
 <span data-ttu-id="cf4e3-539">지정된 접두사가 “xml”이고 이 노드의 namespaceURI가 “http://www.w3.org/XML/1998/namespace”와 다른 경우</span><span class="sxs-lookup"><span data-stu-id="cf4e3-539">The specified prefix is "xml" and the namespaceURI of this node is different from "http://www.w3.org/XML/1998/namespace".</span></span>  
  
 <span data-ttu-id="cf4e3-540">이 노드가 특성이고, 지정된 접두사가 “xmlns”이며, 이 노드의 namespaceURI가 “http://www.w3.org/2000/xmlns/”와 다른 경우</span><span class="sxs-lookup"><span data-stu-id="cf4e3-540">This node is an attribute and the specified prefix is "xmlns" and the namespaceURI of this node is different from "http://www.w3.org/2000/xmlns/ ".</span></span>  
  
 <span data-ttu-id="cf4e3-541">이 노드가 특성이고 이 노드의 qualifiedName이 "xmlns"인 경우</span><span class="sxs-lookup"><span data-stu-id="cf4e3-541">This node is an attribute and the qualifiedName of this node is "xmlns".</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="cf4e3-542">재정의 하는 경우 <see langword="Prefix" /> 파생된 클래스에서이 속성을 설정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-542">When overriding <see langword="Prefix" /> in a derived class, this property cannot be set.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PrependChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode PrependChild (System.Xml.XmlNode newChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode PrependChild(class System.Xml.XmlNode newChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PrependChild (newChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ PrependChild(System::Xml::XmlNode ^ newChild);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild"><span data-ttu-id="cf4e3-543">추가할 노드입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-543">The node to add.</span></span> <span data-ttu-id="cf4e3-544">지정된 위치로 이동하는, 추가할 노드의 모든 콘텐츠입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-544">All the contents of the node to be added are moved into the specified location.</span></span></param>
        <summary><span data-ttu-id="cf4e3-545">지정된 노드를 이 노드의 자식 노드 목록 앞에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-545">Adds the specified node to the beginning of the list of child nodes for this node.</span></span></summary>
        <returns><span data-ttu-id="cf4e3-546">추가한 노드입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-546">The node added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-547">경우는 `newChild` 는 트리에 이미은 원래 위치에서 제거 하 고 대상 위치에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-547">If the `newChild` is already in the tree, it is removed from its original position and added to its target position.</span></span> <span data-ttu-id="cf4e3-548">노드를 삽입 하는 방법에 대 한 자세한 내용은 참조 [XML 문서에 노드 삽입](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-548">For more information about inserting nodes, see [Inserting Nodes into an XML Document](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md).</span></span>  
  
 <span data-ttu-id="cf4e3-549">삽입 하는 노드가 다른 문서에서 만들어진 경우 사용할 수 있습니다 <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> 현재 문서에 노드를 가져오려는 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-549">If the node being inserted was created from another document, you can use <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> to import the node to the current document.</span></span> <span data-ttu-id="cf4e3-550">가져온 다음 현재 문서에 삽입할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-550">The imported node can then be inserted into the current document.</span></span>  
  
 <span data-ttu-id="cf4e3-551">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-551">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf4e3-552">다음 예제에서는 XML 문서에 새 노드를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-552">The following example adds a new node to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.PrependChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.PrependChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.PrependChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.PrependChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.PrependChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.PrependChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cf4e3-553">이 노드가 <paramref name="newChild" /> 노드 형식의 자식 노드를 허용하지 않는 형식을 가지는 경우</span><span class="sxs-lookup"><span data-stu-id="cf4e3-553">This node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.</span></span>  
  
 <span data-ttu-id="cf4e3-554"><paramref name="newChild" />가 이 노드의 상위 노드일 경우</span><span class="sxs-lookup"><span data-stu-id="cf4e3-554">The <paramref name="newChild" /> is an ancestor of this node.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cf4e3-555">이 노드를 만든 문서가 아닌 다른 문서에서 <paramref name="newChild" />를 만든 경우</span><span class="sxs-lookup"><span data-stu-id="cf4e3-555">The <paramref name="newChild" /> was created from a different document than the one that created this node.</span></span>  
  
 <span data-ttu-id="cf4e3-556">이 노드가 읽기 전용인 경우</span><span class="sxs-lookup"><span data-stu-id="cf4e3-556">This node is read-only.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="cf4e3-557">재정의 하는 경우 <see langword="PrependChild" /> 파생된 클래스에서 올바르게 발생할 이벤트를 위해 호출 해야는 <see langword="PrependChild" /> 기본 클래스의 메서드.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-557">When overriding <see langword="PrependChild" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="PrependChild" /> method of the base class.</span></span></para>
        </block>
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PreviousSibling">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode PreviousSibling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode PreviousSibling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.PreviousSibling" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreviousSibling As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ PreviousSibling { System::Xml::XmlNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf4e3-558">이 노드 바로 앞에 있는 노드를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-558">Gets the node immediately preceding this node.</span></span></summary>
        <value><span data-ttu-id="cf4e3-559">앞에 있는 <see langword="XmlNode" />입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-559">The preceding <see langword="XmlNode" />.</span></span> <span data-ttu-id="cf4e3-560">앞에 노드가 없으면 <see langword="null" />이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-560">If there is no preceding node, <see langword="null" /> is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cf4e3-561">다음 예제에서는 XML 문서에 있는 모든 책을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-561">The following example displays all the books in the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.PreviousSibling Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.PreviousSibling Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.PreviousSibling Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousText">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode PreviousText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode PreviousText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.PreviousText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreviousText As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ PreviousText { System::Xml::XmlNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf4e3-562">이 노드 바로 앞에 있는 텍스트 노드를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-562">Gets the text node that immediately precedes this node.</span></span></summary>
        <value><span data-ttu-id="cf4e3-563"><see cref="T:System.Xml.XmlNode" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-563">Returns <see cref="T:System.Xml.XmlNode" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-564">이 속성은 보다 빠른 성능을 <xref:System.Xml.XmlNode.PreviousSibling%2A> 속성 하지만 사용할 수 있습니다 것을 유형의 노드를 가져올 때만 <xref:System.Xml.XmlNodeType.Text>합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-564">This property has faster performance than the <xref:System.Xml.XmlNode.PreviousSibling%2A> property but you can use it only to get a node of type <xref:System.Xml.XmlNodeType.Text>.</span></span> <span data-ttu-id="cf4e3-565">다른 유형의 노드에이 노드 앞에 있는 사용은 <xref:System.Xml.XmlNode.PreviousSibling%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-565">To get any other type of node that that precedes this node, use the <xref:System.Xml.XmlNode.PreviousSibling%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public virtual void RemoveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.RemoveAll" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cf4e3-566">현재 노드의 모든 자식 노드 및/또는 특성을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-566">Removes all the child nodes and/or attributes of the current node.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-567">제거 된 특성 기본값을 포함 하는 특성 즉시 표시는 기본 값을 가질 경우 및 해당 하는 경우 해당 네임 스페이스 URI, 로컬 이름 및 접두사입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-567">If a removed attribute is known to have a default value, an attribute immediately appears containing the default value and, if applicable, the corresponding namespace URI, local name, and prefix.</span></span>  
  
 <span data-ttu-id="cf4e3-568">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-568">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf4e3-569">다음 예제에서는 루트 노드에서 모든 자식 및 특성 노드를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-569">The following example removes all child and attribute nodes from the root node.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.RemoveAll Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.RemoveAll Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.RemoveAll Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.RemoveAll Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.RemoveAll Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.RemoveAll Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="cf4e3-570">재정의 하는 경우 <see langword="RemoveAll" /> 파생된 클래스에서 올바르게 발생할 이벤트를 위해 호출 해야는 <see langword="RemoveAll" /> 기본 클래스의 메서드.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-570">When overriding <see langword="RemoveAll" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="RemoveAll" /> method of the base class.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RemoveChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode RemoveChild (System.Xml.XmlNode oldChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode RemoveChild(class System.Xml.XmlNode oldChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveChild (oldChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ RemoveChild(System::Xml::XmlNode ^ oldChild);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="oldChild"><span data-ttu-id="cf4e3-571">제거할 노드입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-571">The node being removed.</span></span></param>
        <summary><span data-ttu-id="cf4e3-572">지정된 자식 노드를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-572">Removes specified child node.</span></span></summary>
        <returns><span data-ttu-id="cf4e3-573">제거한 노드입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-573">The node removed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cf4e3-574">다음 예제에서는 XML 문서에서 노드를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-574">The following example removes a node from the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.RemoveChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.RemoveChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.RemoveChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.RemoveChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.RemoveChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.RemoveChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cf4e3-575"><paramref name="oldChild" />가 이 노드의 자식이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="cf4e3-575">The <paramref name="oldChild" /> is not a child of this node.</span></span> <span data-ttu-id="cf4e3-576">이 노드가 읽기 전용인 경우</span><span class="sxs-lookup"><span data-stu-id="cf4e3-576">Or this node is read-only.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="cf4e3-577">재정의 하는 경우 <see langword="RemoveChild" /> 파생된 클래스에서 올바르게 발생할 이벤트를 위해 호출 해야는 <see langword="RemoveChild" /> 기본 클래스의 메서드.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-577">When overriding <see langword="RemoveChild" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="RemoveChild" /> method of the base class.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ReplaceChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode ReplaceChild (System.Xml.XmlNode newChild, System.Xml.XmlNode oldChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode ReplaceChild(class System.Xml.XmlNode newChild, class System.Xml.XmlNode oldChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReplaceChild (newChild As XmlNode, oldChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ ReplaceChild(System::Xml::XmlNode ^ newChild, System::Xml::XmlNode ^ oldChild);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
        <Parameter Name="oldChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild"><span data-ttu-id="cf4e3-578">자식 목록에 삽입할 새 노드입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-578">The new node to put in the child list.</span></span></param>
        <param name="oldChild"><span data-ttu-id="cf4e3-579">목록에서 대체할 노드입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-579">The node being replaced in the list.</span></span></param>
        <summary><span data-ttu-id="cf4e3-580"><paramref name="oldChild" /> 자식 노드를 <paramref name="newChild" /> 노드로 대체합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-580">Replaces the child node <paramref name="oldChild" /> with <paramref name="newChild" /> node.</span></span></summary>
        <returns><span data-ttu-id="cf4e3-581">대체한 노드입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-581">The node replaced.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-582">경우는 `newChild` 은 이미 트리에서 먼저 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-582">If the `newChild` is already in the tree, it is first removed.</span></span>  
  
 <span data-ttu-id="cf4e3-583">경우는 `newChild` 만들어진 다른 문서에서 사용할 수 있습니다 <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> 현재 문서에 노드를 가져오려는 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-583">If the `newChild` was created from another document, you can use <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> to import the node to the current document.</span></span> <span data-ttu-id="cf4e3-584">가져온에 전달 될 수는 `ReplaceChild` 메서드.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-584">The imported node can then be passed to the `ReplaceChild` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf4e3-585">다음 예제에서는 XML 문서의 제목 요소를 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-585">The following example replaces the title element in the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.ReplaceChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.ReplaceChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.ReplaceChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.ReplaceChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.ReplaceChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.ReplaceChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cf4e3-586">이 노드가 <paramref name="newChild" /> 노드 형식의 자식 노드를 허용하지 않는 형식을 가지는 경우</span><span class="sxs-lookup"><span data-stu-id="cf4e3-586">This node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.</span></span>  
  
 <span data-ttu-id="cf4e3-587"><paramref name="newChild" />가 이 노드의 상위 노드일 경우</span><span class="sxs-lookup"><span data-stu-id="cf4e3-587">The <paramref name="newChild" /> is an ancestor of this node.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cf4e3-588">이 노드를 만든 문서가 아닌 다른 문서에서 <paramref name="newChild" />를 만든 경우</span><span class="sxs-lookup"><span data-stu-id="cf4e3-588">The <paramref name="newChild" /> was created from a different document than the one that created this node.</span></span>  
  
 <span data-ttu-id="cf4e3-589">이 노드가 읽기 전용인 경우</span><span class="sxs-lookup"><span data-stu-id="cf4e3-589">This node is read-only.</span></span>  
  
 <span data-ttu-id="cf4e3-590"><paramref name="oldChild" />가 이 노드의 자식이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="cf4e3-590">The <paramref name="oldChild" /> is not a child of this node.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="cf4e3-591">재정의 하는 경우 <see langword="ReplaceChild" /> 파생된 클래스에서 올바르게 발생할 이벤트를 위해 호출 해야는 <see langword="ReplaceChild" /> 기본 클래스의 메서드.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-591">When overriding <see langword="ReplaceChild" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="ReplaceChild" /> method of the base class.</span></span></para>
        </block>
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SchemaInfo">
      <MemberSignature Language="C#" Value="public virtual System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.IXmlSchemaInfo SchemaInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.SchemaInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SchemaInfo As IXmlSchemaInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::IXmlSchemaInfo ^ SchemaInfo { System::Xml::Schema::IXmlSchemaInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.IXmlSchemaInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf4e3-592">스키마 유효성 검사의 결과로 이 노드에 할당된 스키마 유효성 검사 이후 정보 집합을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-592">Gets the post schema validation infoset that has been assigned to this node as a result of schema validation.</span></span></summary>
        <value><span data-ttu-id="cf4e3-593">이 노드의 스키마 유효성 검사 이후 정보 집합이 포함된 <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-593">An <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> object containing the post schema validation infoset of this node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-594"><xref:System.Xml.XmlNode.SchemaInfo%2A> 속성은이 노드는 유효성이 검사 된 경우 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-594">The <xref:System.Xml.XmlNode.SchemaInfo%2A> property is set when this node is validatied.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectNodes">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cf4e3-595">XPath 식과 일치하는 노드의 목록을 선택합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-595">Selects a list of nodes matching the XPath expression.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-596">XPath 식에 네임스페이스를 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-596">XPath expressions can include namespaces.</span></span> <span data-ttu-id="cf4e3-597">네임스페이스는 `XmlNamespaceManager`를 사용하여 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-597">Namespace resolution is supported using the `XmlNamespaceManager`.</span></span> <span data-ttu-id="cf4e3-598">XPath 식에 접두사가 포함 된 접두사와 네임 스페이스 URI 쌍을 추가 해야 합니다는 `XmlNamespaceManager`합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-598">If the XPath expression includes a prefix, the prefix and namespace URI pair must be added to the `XmlNamespaceManager`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cf4e3-599">XPath 식에 접두사가 없으면 네임 스페이스 URI는 빈 네임 스페이스 임을 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-599">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="cf4e3-600">접두사와 네임 스페이스 URI도 추가 해야 XML에 기본 네임 스페이스를 포함 하는 경우에 `XmlNamespaceManager`, 그러지 않으면 선택한 노드 가져올 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-600">If your XML includes a default namespace, you must still add a prefix and namespace URI to the `XmlNamespaceManager`; otherwise, you will not get any nodes selected.</span></span>  
  
 <span data-ttu-id="cf4e3-601">자세한 내용은 참조 [XPath 탐색을 사용 하 여 노드 선택](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-601">For more information, see [Select Nodes Using XPath Navigation](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md).</span></span> <span data-ttu-id="cf4e3-602">코드 예제를 보려면 오버 로드를 이전 섹션에서 오버 로드 목록에서 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-602">For code examples, choose an overload from the overload list in the previous section.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectNodes">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNodeList SelectNodes (string xpath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlNodeList SelectNodes(string xpath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.SelectNodes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectNodes (xpath As String) As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlNodeList ^ SelectNodes(System::String ^ xpath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xpath"><span data-ttu-id="cf4e3-603">XPath 식입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-603">The XPath expression.</span></span></param>
        <summary><span data-ttu-id="cf4e3-604">XPath 식과 일치하는 노드의 목록을 선택합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-604">Selects a list of nodes matching the XPath expression.</span></span></summary>
        <returns><span data-ttu-id="cf4e3-605">Xpath 쿼리와 일치하는 노드의 컬렉션이 포함된 <see cref="T:System.Xml.XmlNodeList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-605">An <see cref="T:System.Xml.XmlNodeList" /> containing a collection of nodes matching the XPath query.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-606">XPath 식은 네임 스페이스 확인이 필요한 경우 사용 해야는 `SelectNodes` 오버 로드를 <xref:System.Xml.XmlNamespaceManager> 인수로 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-606">If the XPath expression requires namespace resolution, you must use the `SelectNodes` overload which takes an <xref:System.Xml.XmlNamespaceManager> as its argument.</span></span> <span data-ttu-id="cf4e3-607">`XmlNamespaceManager` 네임 스페이스를 확인 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-607">The `XmlNamespaceManager` is used to resolve namespaces.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cf4e3-608">XPath 식에 접두사가 없으면 네임 스페이스 URI는 빈 네임 스페이스 임을 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-608">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="cf4e3-609">XML에 기본 네임 스페이스를 포함 하는 경우 반드시 사용 해야는 `XmlNamespaceManager` 접두사와 네임 스페이스 URI 추가 하 고; 그렇지 않으면 가져올 수 없습니다 선택한 노드.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-609">If your XML includes a default namespace, you must still use the `XmlNamespaceManager` and add a prefix and namespace URI to it; otherwise, you will not get any nodes selected.</span></span> <span data-ttu-id="cf4e3-610">자세한 내용은 참조 [XPath 탐색을 사용 하 여 노드 선택](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-610">For more information, see [Select Nodes Using XPath Navigation](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cf4e3-611">XPath 식을 작성할 때 일반적인 문제는 식에는 작은따옴표 (') 또는 큰따옴표 (")를 포함 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-611">A common issue when formulating XPath expressions is how to include a single quote (') or double quote (") in the expression.</span></span> <span data-ttu-id="cf4e3-612">작은따옴표를 포함 하는 값을 검색할 수 있는 문자열 큰따옴표로 묶어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-612">If you have to search for a value that includes a single quote, you must enclose the string in double quotes.</span></span> <span data-ttu-id="cf4e3-613">큰따옴표를 포함 하는 값에 대 한 검색 해야 문자열 작은따옴표로 묶어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-613">If you need to search for a value that includes a double quote, you must enclose the string in single quotes.</span></span>  
  
 <span data-ttu-id="cf4e3-614">예를 들어 다음 XML을 있다고 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-614">For example, suppose you have the following XML:</span></span>  
  
```  
<bookstore>  
  <book>  
    <title>&apos;Emma&apos;</title>  
  </book>  
</bookstore>  
```  
  
 <span data-ttu-id="cf4e3-615">다음 Visual Basic 코드는 작은따옴표를 포함 하는 요소를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-615">The following Visual Basic code selects an element that contains single quotes:</span></span>  
  
```  
nodeList = root.SelectNodes("//book[contains(title,""'Emma'"")]")  
```  
  
 <span data-ttu-id="cf4e3-616">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-616">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="cf4e3-617"><xref:System.Xml.XmlNodeList> 기본 문서는 변경 되지 않은 상태로 유지 하면서이 메서드에서 반환 된 개체는 잘못 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-617">The <xref:System.Xml.XmlNodeList> object returned by this method will be valid while the underlying document remains unchanged.</span></span> <span data-ttu-id="cf4e3-618">기본 문서 변경 되 면 예기치 않은 결과 반환 될 수 있습니다 (예외 throw).</span><span class="sxs-lookup"><span data-stu-id="cf4e3-618">If the underlying document changes, unexpected results may be returned (no exception will be thrown).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf4e3-619">다음 예제에서는 모든도 서 여기서는 저자의 성을 Austen, 상태이 고 해당 책의 가격을 수정한 다음를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-619">The following example selects all books where the author's last name is Austen, and then changes the price of those books.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.SelectNodes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.SelectNodes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.SelectNodes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/VB/source.vb#1)]  
  
 <span data-ttu-id="cf4e3-620">이 예제에서는 다음과 같은 XML을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-620">This example uses the following XML:</span></span>  
  
 [!code-xml[Classic WebData XmlNode.SelectNodes Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XPath.XPathException"><span data-ttu-id="cf4e3-621">XPath 식에 접두사가 포함되어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="cf4e3-621">The XPath expression contains a prefix.</span></span> <span data-ttu-id="cf4e3-622">[XPath 예제](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-622">See [XPath Examples](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041).</span></span></exception>
        <altmember cref="M:System.Xml.XmlNode.SelectSingleNode(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectNodes">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNodeList SelectNodes (string xpath, System.Xml.XmlNamespaceManager nsmgr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlNodeList SelectNodes(string xpath, class System.Xml.XmlNamespaceManager nsmgr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectNodes (xpath As String, nsmgr As XmlNamespaceManager) As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlNodeList ^ SelectNodes(System::String ^ xpath, System::Xml::XmlNamespaceManager ^ nsmgr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
        <Parameter Name="nsmgr" Type="System.Xml.XmlNamespaceManager" />
      </Parameters>
      <Docs>
        <param name="xpath"><span data-ttu-id="cf4e3-623">XPath 식입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-623">The XPath expression.</span></span> <span data-ttu-id="cf4e3-624">[XPath 예제](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-624">See [XPath Examples](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041).</span></span></param>
        <param name="nsmgr"><span data-ttu-id="cf4e3-625">XPath 식의 접두사에 대한 네임스페이스를 확인하기 위해 사용할 <see cref="T:System.Xml.XmlNamespaceManager" />입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-625">An <see cref="T:System.Xml.XmlNamespaceManager" /> to use for resolving namespaces for prefixes in the XPath expression.</span></span></param>
        <summary><span data-ttu-id="cf4e3-626">XPath 식과 일치하는 노드의 목록을 선택합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-626">Selects a list of nodes matching the XPath expression.</span></span> <span data-ttu-id="cf4e3-627">XPath 식에 있는 접두사는 제공된 <see cref="T:System.Xml.XmlNamespaceManager" />를 사용해 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-627">Any prefixes found in the XPath expression are resolved using the supplied <see cref="T:System.Xml.XmlNamespaceManager" />.</span></span></summary>
        <returns><span data-ttu-id="cf4e3-628">Xpath 쿼리와 일치하는 노드의 컬렉션이 포함된 <see cref="T:System.Xml.XmlNodeList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-628">An <see cref="T:System.Xml.XmlNodeList" /> containing a collection of nodes matching the XPath query.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-629">XPath 식에 네임스페이스를 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-629">XPath expressions can include namespaces.</span></span> <span data-ttu-id="cf4e3-630">네임스페이스는 `XmlNamespaceManager`를 사용하여 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-630">Namespace resolution is supported using the `XmlNamespaceManager`.</span></span> <span data-ttu-id="cf4e3-631">XPath 식에 접두사가 포함 된 접두사와 네임 스페이스 URI 쌍을 추가 해야 합니다는 `XmlNamespaceManager`합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-631">If the XPath expression includes a prefix, the prefix and namespace URI pair must be added to the `XmlNamespaceManager`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cf4e3-632">XPath 식에 접두사가 없으면 네임 스페이스 URI는 빈 네임 스페이스 임을 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-632">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="cf4e3-633">접두사와 네임 스페이스 URI도 추가 해야 XML에 기본 네임 스페이스를 포함 하는 경우에 `XmlNamespaceManager`, 그러지 않으면 선택한 노드 가져올 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-633">If your XML includes a default namespace, you must still add a prefix and namespace URI to the `XmlNamespaceManager`; otherwise, you will not get any nodes selected.</span></span> <span data-ttu-id="cf4e3-634">자세한 내용은 참조 [XPath 탐색을 사용 하 여 노드 선택](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-634">For more information, see [Select Nodes Using XPath Navigation](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md).</span></span>  
  
 <span data-ttu-id="cf4e3-635">예를 들어, 다음 XML을 갖고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-635">For example, if you had the following XML:</span></span>  
  
```  
<bookstore xmlns="http://www.lucernepublishing.com">  
 <book>  
   <title>Pride And Prejudice</title>  
 </book>  
</bookstore>  
```  
  
 <span data-ttu-id="cf4e3-636">다음 C# 코드는 모든 book 노드를 선택합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-636">The following C# code selects all book nodes:</span></span>  
  
```  
XmlNamespaceManager nsmgr = new XmlNamespaceManager(doc.NameTable);  
nsmgr.AddNamespace("ab", "http://www.lucernepublishing.com");  
XmlNodeList nodelist = doc.SelectNodes("//ab:book", nsmgr);  
```  
  
> [!NOTE]
>  <span data-ttu-id="cf4e3-637">XPath 식을 작성할 때 일반적인 문제는 식에는 작은따옴표 (') 또는 큰따옴표 (")를 포함 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-637">A common issue when formulating XPath expressions is how to include a single quote (') or double quote (") in the expression.</span></span> <span data-ttu-id="cf4e3-638">작은따옴표를 포함 하는 값을 검색할 수 있는 문자열 큰따옴표로 묶어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-638">If you have to search for a value that includes a single quote, you must enclose the string in double quotes.</span></span> <span data-ttu-id="cf4e3-639">큰따옴표를 포함 하는 값에 대 한 검색 해야 문자열 작은따옴표로 묶어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-639">If you need to search for a value that includes a double quote, you must enclose the string in single quotes.</span></span>  
  
 <span data-ttu-id="cf4e3-640">예를 들어 다음 XML을 있다고 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-640">For example, suppose you have the following XML:</span></span>  
  
```  
<bookstore xmlns="http://www.lucernepublishing.com">  
  <book>  
    <title>&apos;Emma&apos;</title>  
  </book>  
</bookstore>  
```  
  
 <span data-ttu-id="cf4e3-641">다음 Visual Basic 코드는 작은따옴표를 포함 하는 요소를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-641">The following Visual Basic code selects an element that contains single quotes:</span></span>  
  
```  
Dim nsmgr As XmlNamespaceManager = New XmlNamespaceManager(doc.NameTable)  
nsmgr.AddNamespace("ab", "http://www.lucernepublishing.com")  
nodeList = root.SelectNodes("//ab:book[contains(ab:title,""'Emma'"")]", nsmgr)  
```  
  
 <span data-ttu-id="cf4e3-642">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-642">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="cf4e3-643"><xref:System.Xml.XmlNodeList> 기본 문서는 변경 되지 않은 상태로 유지 하면서이 메서드에서 반환 된 개체는 잘못 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-643">The <xref:System.Xml.XmlNodeList> object returned by this method will be valid while the underlying document remains unchanged.</span></span> <span data-ttu-id="cf4e3-644">기본 문서 변경 되 면 예기치 않은 결과 반환 될 수 있습니다 (예외 throw).</span><span class="sxs-lookup"><span data-stu-id="cf4e3-644">If the underlying document changes, unexpected results may be returned (no exception will be thrown).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf4e3-645">다음 예제에서는 각 ISBN 특성의 값을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-645">The following example displays the values of each of the ISBN attributes.</span></span> <span data-ttu-id="cf4e3-646">사용 하 여이 예제는 <xref:System.Xml.XmlElement> 개체에서 상속 되는 <xref:System.Xml.XmlNode> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-646">This example uses an <xref:System.Xml.XmlElement> object, which inherits from the <xref:System.Xml.XmlNode> class.</span></span>  
  
 [!code-cpp[XmlNode.SelectNodes1#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlNode.SelectNodes1/CPP/selectnodes1.cpp#1)]
 [!code-csharp[XmlNode.SelectNodes1#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlNode.SelectNodes1/CS/selectnodes1.cs#1)]
 [!code-vb[XmlNode.SelectNodes1#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlNode.SelectNodes1/VB/selectnodes1.vb#1)]  
  
 <span data-ttu-id="cf4e3-647">이 예제에서는 파일을 사용 하 여 `booksort.xml`입력으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-647">The example uses the file, `booksort.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlNode.SelectNodes Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XPath.XPathException"><span data-ttu-id="cf4e3-648">XPath 식에 <see langword="XmlNamespaceManager" />에서 정의되지 않은 접두사가 포함되어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="cf4e3-648">The XPath expression contains a prefix which is not defined in the <see langword="XmlNamespaceManager" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectSingleNode">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cf4e3-649">XPath 식과 일치하는 첫 번째 <see langword="XmlNode" />를 선택해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-649">Selects the first <see langword="XmlNode" /> that matches the XPath expression.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-650">XPath 식에 네임스페이스를 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-650">XPath expressions can include namespaces.</span></span> <span data-ttu-id="cf4e3-651">네임스페이스는 `XmlNamespaceManager`를 사용하여 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-651">Namespace resolution is supported using the `XmlNamespaceManager`.</span></span> <span data-ttu-id="cf4e3-652">XPath 식에 접두사가 포함 된 접두사와 네임 스페이스 URI 쌍을 추가 해야 합니다는 `XmlNamespaceManager`합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-652">If the XPath expression includes a prefix, the prefix and namespace URI pair must be added to the `XmlNamespaceManager`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cf4e3-653">XPath 식에 접두사가 없으면 네임 스페이스 URI는 빈 네임 스페이스 임을 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-653">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="cf4e3-654">접두사와 네임 스페이스 URI도 추가 해야 XML에 기본 네임 스페이스를 포함 하는 경우에 `XmlNamespaceManager`, 그러지 않으면 선택한 노드 가져올 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-654">If your XML includes a default namespace, you must still add a prefix and namespace URI to the `XmlNamespaceManager`; otherwise, you will not get any nodes selected.</span></span> <span data-ttu-id="cf4e3-655">자세한 내용은 참조 [XPath 탐색을 사용 하 여 노드 선택](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-655">For more information, see [Select Nodes Using XPath Navigation](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf4e3-656">다음 예제에서는 일치 하는 만든이 이름이 있는 첫 번째 책을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-656">The following example returns the first book with the matching author name.</span></span> <span data-ttu-id="cf4e3-657">`XmlNamespaceManager`는 XPath 식에서 기본 네임스페이스를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-657">The `XmlNamespaceManager` resolves the default namespace in the XPath expression.</span></span>  
  
 [!code-cpp[XmlNode.SelectSingleNode2#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlNode.SelectSingleNode2/CPP/XmlNode.SelectSingleNode2.cpp#1)]
 [!code-csharp[XmlNode.SelectSingleNode2#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlNode.SelectSingleNode2/CS/selectsingnode2.cs#1)]
 [!code-vb[XmlNode.SelectSingleNode2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlNode.SelectSingleNode2/VB/selectsingnode2.vb#1)]  
  
 <span data-ttu-id="cf4e3-658">이 예제에서는 파일을 사용 하 여 `newbooks.xml`입력으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-658">The example uses the file, `newbooks.xml`, as input.</span></span>  
  
 [!code-xml[XmlNode.SelectSingleNode2#2](~/samples/snippets/xml/VS_Snippets_Data/XmlNode.SelectSingleNode2/XML/newbooks.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectSingleNode">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNode SelectSingleNode (string xpath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlNode SelectSingleNode(string xpath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.SelectSingleNode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectSingleNode (xpath As String) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlNode ^ SelectSingleNode(System::String ^ xpath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xpath"><span data-ttu-id="cf4e3-659">XPath 식입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-659">The XPath expression.</span></span> <span data-ttu-id="cf4e3-660">[XPath 예제](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-660">See [XPath Examples](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041).</span></span></param>
        <summary><span data-ttu-id="cf4e3-661">XPath 식과 일치하는 첫 번째 <see langword="XmlNode" />를 선택해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-661">Selects the first <see langword="XmlNode" /> that matches the XPath expression.</span></span></summary>
        <returns><span data-ttu-id="cf4e3-662">XPath 쿼리와 일치하는 첫 번째 <see langword="XmlNode" />이거나, 일치하는 노드가 없는 경우에는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-662">The first <see langword="XmlNode" /> that matches the XPath query or <see langword="null" /> if no matching node is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-663">XPath 식은 네임 스페이스 확인이 필요한 경우 사용 해야는 `SelectSingleNode` 오버 로드를 <xref:System.Xml.XmlNamespaceManager> 인수로 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-663">If the XPath expression requires namespace resolution, you must use the `SelectSingleNode` overload which takes an <xref:System.Xml.XmlNamespaceManager> as its argument.</span></span> <span data-ttu-id="cf4e3-664">`XmlNamespaceManager` 네임 스페이스를 확인 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-664">The `XmlNamespaceManager` is used to resolve namespaces.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cf4e3-665">XPath 식에 접두사가 없으면 네임 스페이스 URI는 빈 네임 스페이스 임을 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-665">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="cf4e3-666">XML에 기본 네임 스페이스를 포함 하는 경우 반드시 사용 해야는 `XmlNamespaceManager` 접두사와 네임 스페이스 URI 추가 하 고; 그렇지 않으면 가져올 수 없습니다 선택 된 노드.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-666">If your XML includes a default namespace, you must still use the `XmlNamespaceManager` and add a prefix and namespace URI to it; otherwise, you will not get a selected node.</span></span> <span data-ttu-id="cf4e3-667">자세한 내용은 참조 [XPath 탐색을 사용 하 여 노드 선택](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-667">For more information, see [Select Nodes Using XPath Navigation](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cf4e3-668">XPath 식을 작성할 때 일반적인 문제는 식에는 작은따옴표 (') 또는 큰따옴표 (")를 포함 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-668">A common issue when formulating XPath expressions is how to include a single quote (') or double quote (") in the expression.</span></span> <span data-ttu-id="cf4e3-669">작은따옴표를 포함 하는 값을 검색할 수 있는 문자열 큰따옴표로 묶어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-669">If you have to search for a value that includes a single quote, you must enclose the string in double quotes.</span></span> <span data-ttu-id="cf4e3-670">큰따옴표를 포함 하는 값에 대 한 검색 해야 문자열 작은따옴표로 묶어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-670">If you need to search for a value that includes a double quote, you must enclose the string in single quotes.</span></span>  
  
 <span data-ttu-id="cf4e3-671">예를 들어 다음 XML을 있다고 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-671">For example, suppose you have the following XML:</span></span>  
  
```  
<bookstore>  
  <book>  
    <title>&apos;Emma&apos;</title>  
  </book>  
</bookstore>  
```  
  
 <span data-ttu-id="cf4e3-672">다음 Visual Basic 코드는 작은따옴표를 포함 하는 요소를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-672">The following Visual Basic code selects an element that contains single quotes:</span></span>  
  
```  
book = root.SelectSingleNode("descendant::book[title=""'Emma'""]")  
```  
  
 <span data-ttu-id="cf4e3-673">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-673">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf4e3-674">다음 예에서는 첫 번째 Jane Austen 책의 가격을 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-674">The following example changes the price of the first Jane Austen book.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.SelectSingleNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.SelectSingleNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.SelectSingleNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.SelectSingleNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.SelectSingleNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.SelectSingleNode Example/VB/source.vb#1)]  
  
 <span data-ttu-id="cf4e3-675">이 예제에서는 파일을 사용 하 여 `booksort.xml`입력으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-675">The example uses the file, `booksort.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlNode.SelectSingleNode Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNode.SelectSingleNode Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XPath.XPathException"><span data-ttu-id="cf4e3-676">XPath 식에 접두사가 포함되어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="cf4e3-676">The XPath expression contains a prefix.</span></span></exception>
        <altmember cref="M:System.Xml.XmlNode.SelectNodes(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectSingleNode">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNode SelectSingleNode (string xpath, System.Xml.XmlNamespaceManager nsmgr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlNode SelectSingleNode(string xpath, class System.Xml.XmlNamespaceManager nsmgr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectSingleNode (xpath As String, nsmgr As XmlNamespaceManager) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlNode ^ SelectSingleNode(System::String ^ xpath, System::Xml::XmlNamespaceManager ^ nsmgr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
        <Parameter Name="nsmgr" Type="System.Xml.XmlNamespaceManager" />
      </Parameters>
      <Docs>
        <param name="xpath"><span data-ttu-id="cf4e3-677">XPath 식입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-677">The XPath expression.</span></span> <span data-ttu-id="cf4e3-678">[XPath 예제](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-678">See [XPath Examples](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041).</span></span></param>
        <param name="nsmgr"><span data-ttu-id="cf4e3-679">XPath 식의 접두사에 대한 네임스페이스를 확인하기 위해 사용할 <see cref="T:System.Xml.XmlNamespaceManager" />입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-679">An <see cref="T:System.Xml.XmlNamespaceManager" /> to use for resolving namespaces for prefixes in the XPath expression.</span></span></param>
        <summary><span data-ttu-id="cf4e3-680">XPath 식과 일치하는 첫 번째 <see langword="XmlNode" />를 선택해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-680">Selects the first <see langword="XmlNode" /> that matches the XPath expression.</span></span> <span data-ttu-id="cf4e3-681">XPath 식에 있는 접두사는 제공된 <see cref="T:System.Xml.XmlNamespaceManager" />를 사용해 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-681">Any prefixes found in the XPath expression are resolved using the supplied <see cref="T:System.Xml.XmlNamespaceManager" />.</span></span></summary>
        <returns><span data-ttu-id="cf4e3-682">XPath 쿼리와 일치하는 첫 번째 <see langword="XmlNode" />이거나, 일치하는 노드가 없는 경우에는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-682">The first <see langword="XmlNode" /> that matches the XPath query or <see langword="null" /> if no matching node is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-683">XPath 식에 네임스페이스를 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-683">XPath expressions can include namespaces.</span></span> <span data-ttu-id="cf4e3-684">네임스페이스는 `XmlNamespaceManager`를 사용하여 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-684">Namespace resolution is supported using the `XmlNamespaceManager`.</span></span> <span data-ttu-id="cf4e3-685">XPath 식에 접두사가 포함 된 접두사와 네임 스페이스 URI 쌍을 추가 해야 합니다는 `XmlNamespaceManager`합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-685">If the XPath expression includes a prefix, the prefix and namespace URI pair must be added to the `XmlNamespaceManager`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cf4e3-686">XPath 식에 접두사가 없으면 네임 스페이스 URI는 빈 네임 스페이스 임을 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-686">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="cf4e3-687">접두사와 네임 스페이스 URI도 추가 해야 XML에 기본 네임 스페이스를 포함 하는 경우에 `XmlNamespaceManager`, 그러지 않으면 선택한 노드 가져올 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-687">If your XML includes a default namespace, you must still add a prefix and namespace URI to the `XmlNamespaceManager`; otherwise, you will not get a node selected.</span></span> <span data-ttu-id="cf4e3-688">자세한 내용은 참조 [XPath 탐색을 사용 하 여 노드 선택](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-688">For more information, see [Select Nodes Using XPath Navigation](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md).</span></span>  
  
 <span data-ttu-id="cf4e3-689">예를 들어, 다음 XML을 갖고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-689">For example, if you had the following XML:</span></span>  
  
```  
<bookstore xmlns="http://www.lucernepublishing.com">  
 <book>  
   <title>Pride And Prejudice</title>  
 </book>  
</bookstore>  
```  
  
 <span data-ttu-id="cf4e3-690">다음 C# 코드는 첫 번째 book 노드를 선택합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-690">The following C# code selects the first book node:</span></span>  
  
```  
XmlNamespaceManager nsmgr = new XmlNamespaceManager(doc.NameTable);  
nsmgr.AddNamespace("ab", "http://www.lucernepublishing.com");  
XmlNode book = doc.SelectSingleNode("//ab:book", nsmgr);  
```  
  
> [!NOTE]
>  <span data-ttu-id="cf4e3-691">XPath 식을 작성할 때 일반적인 문제는 식에는 작은따옴표 (') 또는 큰따옴표 (")를 포함 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-691">A common issue when formulating XPath expressions is how to include a single quote (') or double quote (") in the expression.</span></span> <span data-ttu-id="cf4e3-692">작은따옴표를 포함 하는 값을 검색할 수 있는 문자열 큰따옴표로 묶어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-692">If you have to search for a value that includes a single quote, you must enclose the string in double quotes.</span></span> <span data-ttu-id="cf4e3-693">큰따옴표를 포함 하는 값에 대 한 검색 해야 문자열 작은따옴표로 묶어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-693">If you need to search for a value that includes a double quote, you must enclose the string in single quotes.</span></span>  
  
 <span data-ttu-id="cf4e3-694">예를 들어 다음 XML을 있다고 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-694">For example, suppose you have the following XML:</span></span>  
  
```  
<bookstore xmlns="http://www.lucernepublishing.com">  
  <book>  
    <title>&apos;Emma&apos;</title>  
  </book>  
</bookstore>  
```  
  
 <span data-ttu-id="cf4e3-695">다음 Visual Basic 코드는 작은따옴표를 포함 하는 요소를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-695">The following Visual Basic code selects an element that contains single quotes:</span></span>  
  
```  
Dim nsmgr As XmlNamespaceManager = New XmlNamespaceManager(doc.NameTable)  
nsmgr.AddNamespace("ab", "http://www.lucernepublishing.com")  
book = root.SelectSingleNode("descendant::ab:book[ab:title=""'Emma'""]", nsmgr)  
```  
  
 <span data-ttu-id="cf4e3-696">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-696">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf4e3-697">다음 예제에서는 ISBN 값이 일치 하는 책을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-697">The following example selects the book with the matching ISBN value.</span></span>  
  
 [!code-cpp[XmlNode.SelectSingleNode1#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlNode.SelectSingleNode1/CPP/selectsingnode.cpp#1)]
 [!code-csharp[XmlNode.SelectSingleNode1#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlNode.SelectSingleNode1/CS/selectsingnode.cs#1)]
 [!code-vb[XmlNode.SelectSingleNode1#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlNode.SelectSingleNode1/VB/selectsingnode.vb#1)]  
  
 <span data-ttu-id="cf4e3-698">이 예제에서는 파일을 사용 하 여 `booksort.xml`입력으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-698">The example uses the file, `booksort.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlNode.SelectNodes Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XPath.XPathException"><span data-ttu-id="cf4e3-699">XPath 식에 <see langword="XmlNamespaceManager" />에서 정의되지 않은 접두사가 포함되어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="cf4e3-699">The XPath expression contains a prefix which is not defined in the <see langword="XmlNamespaceManager" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Supports">
      <MemberSignature Language="C#" Value="public virtual bool Supports (string feature, string version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Supports(string feature, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.Supports(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Supports (feature As String, version As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Supports(System::String ^ feature, System::String ^ version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="feature" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="feature"><span data-ttu-id="cf4e3-700">테스트할 기능의 패키지 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-700">The package name of the feature to test.</span></span> <span data-ttu-id="cf4e3-701">대/소문자를 구분하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-701">This name is not case-sensitive.</span></span></param>
        <param name="version"><span data-ttu-id="cf4e3-702">테스트할 패키지 이름의 버전 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-702">The version number of the package name to test.</span></span> <span data-ttu-id="cf4e3-703">버전을 지정하지 않을 경우(null), 모든 버전의 기능을 지원하면 메서드에서 true를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-703">If the version is not specified (null), supporting any version of the feature causes the method to return true.</span></span></param>
        <summary><span data-ttu-id="cf4e3-704">DOM 구현에서 특정 기능을 구현하는지 테스트합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-704">Tests if the DOM implementation implements a specific feature.</span></span></summary>
        <returns>
          <span data-ttu-id="cf4e3-705">지정된 버전에 기능이 구현되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-705"><see langword="true" /> if the feature is implemented in the specified version; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="cf4e3-706">다음 표에서는 <see langword="true" />를 반환하는 조합을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-706">The following table describes the combinations that return <see langword="true" />.</span></span>  
  
 <span data-ttu-id="cf4e3-707"><list type="table"><listheader><term> 기능</span><span class="sxs-lookup"><span data-stu-id="cf4e3-707"><list type="table"><listheader><term> Feature</span></span>  
  
 <span data-ttu-id="cf4e3-708"></term><description> 버전</span><span class="sxs-lookup"><span data-stu-id="cf4e3-708"></term><description> Version</span></span>  
  
 <span data-ttu-id="cf4e3-709"></description></listheader><item><term> XML</span><span class="sxs-lookup"><span data-stu-id="cf4e3-709"></description></listheader><item><term> XML</span></span>  
  
 <span data-ttu-id="cf4e3-710"></term><description> 1.0</span><span class="sxs-lookup"><span data-stu-id="cf4e3-710"></term><description> 1.0</span></span>  
  
 <span data-ttu-id="cf4e3-711"></description></item><item><term> XML</span><span class="sxs-lookup"><span data-stu-id="cf4e3-711"></description></item><item><term> XML</span></span>  
  
 <span data-ttu-id="cf4e3-712"></term><description> 2.0</span><span class="sxs-lookup"><span data-stu-id="cf4e3-712"></term><description> 2.0</span></span>  
  
 </description></item></list></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cf4e3-713">이 멤버에 대한 설명은 <see cref="M:System.Xml.XmlNode.GetEnumerator" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-713">For a description of this member, see <see cref="M:System.Xml.XmlNode.GetEnumerator" />.</span></span></summary>
        <returns><span data-ttu-id="cf4e3-714">컬렉션에 대한 열거자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-714">Returns an enumerator for the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-715">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="cf4e3-715">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cf4e3-716"><xref:System.Xml.XmlNode> 인스턴스가 <xref:System.Collections.IEnumerable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-716">It can be used only when the <xref:System.Xml.XmlNode> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cf4e3-717">이 멤버에 대한 설명은 <see cref="M:System.Xml.XmlNode.Clone" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-717">For a description of this member, see <see cref="M:System.Xml.XmlNode.Clone" />.</span></span></summary>
        <returns><span data-ttu-id="cf4e3-718">메서드를 호출한 노드의 복사본입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-718">A copy of the node from which it is called.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-719">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="cf4e3-719">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cf4e3-720"><xref:System.Xml.XmlNode> 인스턴스가 <xref:System.ICloneable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-720">It can be used only when the <xref:System.Xml.XmlNode> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public virtual string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf4e3-721">노드의 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-721">Gets or sets the value of the node.</span></span></summary>
        <value><span data-ttu-id="cf4e3-722">노드의 <see cref="P:System.Xml.XmlNode.NodeType" />에 따라 반환되는 값이 달라집니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-722">The value returned depends on the <see cref="P:System.Xml.XmlNode.NodeType" /> of the node:</span></span>  
  
 <span data-ttu-id="cf4e3-723"><list type="table"><listheader><term> 형식</span><span class="sxs-lookup"><span data-stu-id="cf4e3-723"><list type="table"><listheader><term> Type</span></span>  
  
 <span data-ttu-id="cf4e3-724"></term><description> 값</span><span class="sxs-lookup"><span data-stu-id="cf4e3-724"></term><description> Value</span></span>  
  
 <span data-ttu-id="cf4e3-725"></description></listheader><item><term> 특성</span><span class="sxs-lookup"><span data-stu-id="cf4e3-725"></description></listheader><item><term> Attribute</span></span>  
  
 <span data-ttu-id="cf4e3-726"></term><description> 특성의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-726"></term><description> The value of the attribute.</span></span>  
  
 <span data-ttu-id="cf4e3-727"></description></item><item><term> CDATASection</span><span class="sxs-lookup"><span data-stu-id="cf4e3-727"></description></item><item><term> CDATASection</span></span>  
  
 <span data-ttu-id="cf4e3-728"></term><description> CDATA 섹션의 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-728"></term><description> The content of the CDATA Section.</span></span>  
  
 <span data-ttu-id="cf4e3-729"></description></item><item><term> 주석</span><span class="sxs-lookup"><span data-stu-id="cf4e3-729"></description></item><item><term> Comment</span></span>  
  
 <span data-ttu-id="cf4e3-730"></term><description> 주석의 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-730"></term><description> The content of the comment.</span></span>  
  
 <span data-ttu-id="cf4e3-731"></description></item><item><term> 문서</span><span class="sxs-lookup"><span data-stu-id="cf4e3-731"></description></item><item><term> Document</span></span>  
  
 <span data-ttu-id="cf4e3-732"></term><description><see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-732"></term><description><see langword="null" />.</span></span>  
  
 <span data-ttu-id="cf4e3-733"></description></item><item><term> DocumentFragment</span><span class="sxs-lookup"><span data-stu-id="cf4e3-733"></description></item><item><term> DocumentFragment</span></span>  
  
 <span data-ttu-id="cf4e3-734"></term><description><see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-734"></term><description><see langword="null" />.</span></span>  
  
 <span data-ttu-id="cf4e3-735"></description></item><item><term> DocumentType</span><span class="sxs-lookup"><span data-stu-id="cf4e3-735"></description></item><item><term> DocumentType</span></span>  
  
 <span data-ttu-id="cf4e3-736"></term><description><see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-736"></term><description><see langword="null" />.</span></span>  
  
 <span data-ttu-id="cf4e3-737"></description></item><item><term> 요소</span><span class="sxs-lookup"><span data-stu-id="cf4e3-737"></description></item><item><term> Element</span></span>  
  
 <span data-ttu-id="cf4e3-738"></term><description><see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-738"></term><description><see langword="null" />.</span></span> <span data-ttu-id="cf4e3-739"><see cref="P:System.Xml.XmlElement.InnerText" /> 또는 <see cref="P:System.Xml.XmlElement.InnerXml" /> 속성을 사용하여 Element 노드의 값에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-739">You can use the <see cref="P:System.Xml.XmlElement.InnerText" /> or <see cref="P:System.Xml.XmlElement.InnerXml" /> properties to access the value of the element node.</span></span>  
  
 <span data-ttu-id="cf4e3-740"></description></item><item><term> 엔터티</span><span class="sxs-lookup"><span data-stu-id="cf4e3-740"></description></item><item><term> Entity</span></span>  
  
 <span data-ttu-id="cf4e3-741"></term><description><see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-741"></term><description><see langword="null" />.</span></span>  
  
 <span data-ttu-id="cf4e3-742"></description></item><item><term> EntityReference</span><span class="sxs-lookup"><span data-stu-id="cf4e3-742"></description></item><item><term> EntityReference</span></span>  
  
 <span data-ttu-id="cf4e3-743"></term><description><see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-743"></term><description><see langword="null" />.</span></span>  
  
 <span data-ttu-id="cf4e3-744"></description></item><item><term> 표기법</span><span class="sxs-lookup"><span data-stu-id="cf4e3-744"></description></item><item><term> Notation</span></span>  
  
 <span data-ttu-id="cf4e3-745"></term><description><see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-745"></term><description><see langword="null" />.</span></span>  
  
 <span data-ttu-id="cf4e3-746"></description></item><item><term> ProcessingInstruction</span><span class="sxs-lookup"><span data-stu-id="cf4e3-746"></description></item><item><term> ProcessingInstruction</span></span>  
  
 <span data-ttu-id="cf4e3-747"></term><description> 대상을 제외한 전체 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-747"></term><description> The entire content excluding the target.</span></span>  
  
 <span data-ttu-id="cf4e3-748"></description></item><item><term> 텍스트</span><span class="sxs-lookup"><span data-stu-id="cf4e3-748"></description></item><item><term> Text</span></span>  
  
 <span data-ttu-id="cf4e3-749"></term><description> 텍스트 노드의 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-749"></term><description> The content of the text node.</span></span>  
  
 <span data-ttu-id="cf4e3-750"></description></item><item><term> SignificantWhitespace</span><span class="sxs-lookup"><span data-stu-id="cf4e3-750"></description></item><item><term> SignificantWhitespace</span></span>  
  
 <span data-ttu-id="cf4e3-751"></term><description> 공백 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-751"></term><description> The white space characters.</span></span> <span data-ttu-id="cf4e3-752">공백은 하나 이상의 스페이스 문자, 캐리지 리턴, 줄 바꿈 또는 탭 등으로 구성될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-752">White space can consist of one or more space characters, carriage returns, line feeds, or tabs.</span></span>  
  
 <span data-ttu-id="cf4e3-753"></description></item><item><term> 공백</span><span class="sxs-lookup"><span data-stu-id="cf4e3-753"></description></item><item><term> Whitespace</span></span>  
  
 <span data-ttu-id="cf4e3-754"></term><description> 공백 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-754"></term><description> The white space characters.</span></span> <span data-ttu-id="cf4e3-755">공백은 하나 이상의 스페이스 문자, 캐리지 리턴, 줄 바꿈 또는 탭 등으로 구성될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-755">White space can consist of one or more space characters, carriage returns, line feeds, or tabs.</span></span>  
  
 <span data-ttu-id="cf4e3-756"></description></item><item><term> XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="cf4e3-756"></description></item><item><term> XmlDeclaration</span></span>  
  
 <span data-ttu-id="cf4e3-757"></term><description> 선언 (즉, 사이 있는 모든 &lt;? xml 및?&gt;).</span><span class="sxs-lookup"><span data-stu-id="cf4e3-757"></term><description> The content of the declaration (that is, everything between &lt;?xml and ?&gt;).</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cf4e3-758">다음 예제에서는 XML 문서 및 설정에 새 특성을 추가 <xref:System.Xml.XmlNode.Value%2A> 새 특성의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-758">The following example adds a new attribute to the XML document and sets the <xref:System.Xml.XmlNode.Value%2A> property of the new attribute.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cf4e3-759">읽기 전용인 노드의 값을 설정하는 경우</span><span class="sxs-lookup"><span data-stu-id="cf4e3-759">Setting the value of a node that is read-only.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cf4e3-760">값이 없어야 하는 노드의 값을 설정하는 경우(예: Element 노드)</span><span class="sxs-lookup"><span data-stu-id="cf4e3-760">Setting the value of a node that is not supposed to have a value (for example, an Element node).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteContentTo">
      <MemberSignature Language="C#" Value="public abstract void WriteContentTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteContentTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteContentTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteContentTo(System::Xml::XmlWriter ^ w);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w"><span data-ttu-id="cf4e3-761">저장할 대상 <see langword="XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-761">The <see langword="XmlWriter" /> to which you want to save.</span></span></param>
        <summary><span data-ttu-id="cf4e3-762">파생 클래스에서 재정의된 경우 노드의 모든 자식 노드를 지정된 <see cref="T:System.Xml.XmlWriter" />에 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-762">Saves all the child nodes of the node to the specified <see cref="T:System.Xml.XmlWriter" />, when overridden in a derived class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-763">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-763">This method is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="cf4e3-764">기능적으로 <xref:System.Xml.XmlNode.InnerXml%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-764">It is functionally equivalent to the <xref:System.Xml.XmlNode.InnerXml%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf4e3-765">다음 예제에서는 콘솔에 루트 노드 콘텐츠를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-765">The following example displays the contents of the root node to the console.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.WriteContentTo Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.WriteContentTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.WriteContentTo Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.WriteContentTo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.WriteContentTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.WriteContentTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)" />
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public abstract void WriteTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteTo(System::Xml::XmlWriter ^ w);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w"><span data-ttu-id="cf4e3-766">저장할 대상 <see langword="XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-766">The <see langword="XmlWriter" /> to which you want to save.</span></span></param>
        <summary><span data-ttu-id="cf4e3-767">파생 클래스에서 재정의된 경우 현재 노드를 지정된 <see cref="T:System.Xml.XmlWriter" />에 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-767">Saves the current node to the specified <see cref="T:System.Xml.XmlWriter" />, when overridden in a derived class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf4e3-768">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-768">This method is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="cf4e3-769">기능적으로 <xref:System.Xml.XmlNode.OuterXml%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-769">It is functionally equivalent to the <xref:System.Xml.XmlNode.OuterXml%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf4e3-770">다음 예제에서는 콘솔에 루트 노드를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="cf4e3-770">The following example displays the root node to the console.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.WriteTo Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.WriteTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.WriteTo Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.WriteTo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.WriteTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.WriteTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>