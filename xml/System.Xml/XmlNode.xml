<Type Name="XmlNode" FullName="System.Xml.XmlNode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a8b583c1030f60c393dd43a1e00bbb32f10fe440" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39943812" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class XmlNode : ICloneable, System.Collections.IEnumerable, System.Xml.XPath.IXPathNavigable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlNode extends System.Object implements class System.Collections.IEnumerable, class System.ICloneable, class System.Xml.XPath.IXPathNavigable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlNode" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlNode&#xA;Implements ICloneable, IEnumerable, IXPathNavigable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlNode abstract : ICloneable, System::Collections::IEnumerable, System::Xml::XPath::IXPathNavigable" />
  <TypeSignature Language="F#" Value="type XmlNode = class&#xA;    interface ICloneable&#xA;    interface IEnumerable&#xA;    interface IXPathNavigable" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlDocument</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Xml.XPath.IXPathNavigable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Diagnostics.DebuggerDisplay("{debuggerDisplayProxy}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="9bef1-101">XML 문서의 단일 노드를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9bef1-101">Represents a single node in the XML document.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-102">이 클래스는 W3C 문서 개체 모델 (DOM) Level 1 Core 및 DOM Level 2 Core를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-102">This class implements the W3C Document Object Model (DOM) Level 1 Core and the Core DOM Level 2.</span></span> <span data-ttu-id="9bef1-103">DOM은 XML 문서의 메모리 내(캐시) 트리 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-103">The DOM is an in-memory (cache) tree representation of an XML document.</span></span> <span data-ttu-id="9bef1-104">`XmlNode` DOM의.NET 구현에서 기본 클래스</span><span class="sxs-lookup"><span data-stu-id="9bef1-104">`XmlNode` is the base class in the .NET implementation of the DOM.</span></span> <span data-ttu-id="9bef1-105">XPath 선택을 지원 하 고 편집 기능을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-105">It supports XPath selections and provides editing capabilities.</span></span> <span data-ttu-id="9bef1-106">합니다 <xref:System.Xml.XmlDocument> 클래스를 확장 `XmlNode` 및 XML 문서를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-106">The <xref:System.Xml.XmlDocument> class extends `XmlNode` and represents an XML document.</span></span> <span data-ttu-id="9bef1-107">사용할 수 있습니다 `XmlDocument` 로드 하 고 XML 데이터를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-107">You can use `XmlDocument` to load and save XML data.</span></span> <span data-ttu-id="9bef1-108">또한 노드 생성에 대 한 메서드를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-108">It also includes methods for node creation.</span></span> <span data-ttu-id="9bef1-109">참조 [XML 문서 개체 모델 (DOM)](~/docs/standard/data/xml/xml-document-object-model-dom.md) 자세한 내용은 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-109">See [XML Document Object Model (DOM)](~/docs/standard/data/xml/xml-document-object-model-dom.md) for more information.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9bef1-110">사용 하 여 결과로 발생 하는 예외를 <xref:System.Xml.XmlNode> 클래스와 같이 <xref:System.Xml.XmlException> 클래스에는 신뢰할 수 없는 시나리오에서 노출 되지 않아야 하는 중요 한 정보가 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-110">Exceptions raised as a result of using the <xref:System.Xml.XmlNode> class, such as the <xref:System.Xml.XmlException> class may contain sensitive information that should not be exposed in untrusted scenarios.</span></span> <span data-ttu-id="9bef1-111">신뢰할 수 없는 시나리오에서 중요 한 정보가 노출 되지 않습니다 있도록 예외가 제대로 처리 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-111">Exceptions should be properly handled so that this sensitive information is not exposed in untrusted scenarios.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Xml.XmlNode.SelectNodes(System.String)" />
  </Docs>
  <Members>
    <Member MemberName="AppendChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode AppendChild (System.Xml.XmlNode newChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode AppendChild(class System.Xml.XmlNode newChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AppendChild (newChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ AppendChild(System::Xml::XmlNode ^ newChild);" />
      <MemberSignature Language="F#" Value="abstract member AppendChild : System.Xml.XmlNode -&gt; System.Xml.XmlNode&#xA;override this.AppendChild : System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlNode.AppendChild newChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild">
          <span data-ttu-id="9bef1-112">추가할 노드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-112">The node to add.</span>
          </span>
          <span data-ttu-id="9bef1-113">지정된 위치로 이동하는, 추가할 노드의 모든 콘텐츠입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-113">All the contents of the node to be added are moved into the specified location.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bef1-114">지정된 노드를 이 노드의 자식 노드 목록 끝에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-114">Adds the specified node to the end of the list of child nodes, of this node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bef1-115">추가한 노드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-115">The node added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-116">경우는 `newChild` 는 이미 트리에서 원래 위치에서 제거 하 고 대상 위치에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-116">If the `newChild` is already in the tree, it is removed from its original position and added to its target position.</span></span> <span data-ttu-id="9bef1-117">노드를 삽입 하는 방법에 대 한 자세한 내용은 참조 하세요. [XML 문서에 노드 삽입](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-117">For more information about inserting nodes, see [Inserting Nodes into an XML Document](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md).</span></span>  
  
 <span data-ttu-id="9bef1-118">삽입 하는 노드가 다른 문서에서 생성 된 경우 사용할 수 있습니다 <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> 현재 문서에 노드를 가져오려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-118">If the node being inserted was created from another document, you can use <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> to import the node to the current document.</span></span> <span data-ttu-id="9bef1-119">현재 문서에 삽입한 다음 가져온된 노드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-119">The imported node can then be inserted into the current document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9bef1-120">다음 예제에서는 XML 문서에 새 노드를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-120">The following example adds a new node to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.AppendChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.AppendChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.AppendChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.AppendChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.AppendChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.AppendChild Example/VB/source.vb#1)]  
  
 <span data-ttu-id="9bef1-121">**출력:**</span><span class="sxs-lookup"><span data-stu-id="9bef1-121">**Output:**</span></span>  
  
```  
Display the modified XML...  
<?xml version="1.0" encoding="IBM437"?>  
<book genre="novel" ISBN="1-861001-57-5">  
  <title>Pride And Prejudice</title>  
  <price>19.95</price>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9bef1-122">이 노드가 <paramref name="newChild" /> 노드 형식의 자식 노드를 허용하지 않는 형식을 가지는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-122">This node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.</span>
          </span>
          <span data-ttu-id="9bef1-123">
            <paramref name="newChild" />가 이 노드의 상위 노드일 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-123">The <paramref name="newChild" /> is an ancestor of this node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9bef1-124">이 노드를 만든 문서가 아닌 다른 문서에서 <paramref name="newChild" />를 만든 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-124">The <paramref name="newChild" /> was created from a different document than the one that created this node.</span>
          </span>
          <span data-ttu-id="9bef1-125">이 노드가 읽기 전용인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-125">This node is read-only.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="9bef1-126">
            <para>재정의 하는 경우 <see langword="AppendChild" /> 파생된 클래스에서 올바르게 발생할 이벤트를 위해 호출 해야 합니다는 <see langword="AppendChild" /> 메서드의 기본 클래스입니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-126">
              <para>When overriding <see langword="AppendChild" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="AppendChild" /> method of the base class.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlAttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Attributes As XmlAttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlAttributeCollection ^ Attributes { System::Xml::XmlAttributeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Xml.XmlAttributeCollection" Usage="System.Xml.XmlNode.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9bef1-127">이 노드의 특성이 포함된 <see cref="T:System.Xml.XmlAttributeCollection" />을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-127">Gets an <see cref="T:System.Xml.XmlAttributeCollection" /> containing the attributes of this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9bef1-128">노드의 특성을 포함하는 <see langword="XmlAttributeCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-128">An <see langword="XmlAttributeCollection" /> containing the attributes of the node.</span>
          </span>
          <span data-ttu-id="9bef1-129">노드가 XmlNodeType.Element 형식일 경우 노드의 특성이 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-129">If the node is of type XmlNodeType.Element, the attributes of the node are returned.</span>
          </span>
          <span data-ttu-id="9bef1-130">그렇지 않은 경우 <see langword="null" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-130">Otherwise, this property returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9bef1-131">다음 예제에서는 XML 문서에 새 특성을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-131">The following example adds a new attribute to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public virtual string BaseURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.BaseURI" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BaseURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BaseURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseURI : string" Usage="System.Xml.XmlNode.BaseURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9bef1-132">현재 노드의 기본 URI를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-132">Gets the base URI of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9bef1-133">노드가 로드된 위치이거나 노드에 기본 URI가 없으면 String.Empty입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-133">The location from which the node was loaded or String.Empty if the node has no base URI.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-134">네트워크에 연결 된 XML 문서를 다양 한 W3C 표준 포함 메커니즘을 사용 하 여 집계 데이터의 청크 이루어집니다 및 서로 다른 위치에서 제공 되는 노드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-134">A networked XML document is comprised of chunks of data aggregated using various W3C standard inclusion mechanisms and therefore contains nodes that come from different places.</span></span> <span data-ttu-id="9bef1-135">`BaseURI` 이러한 노드가 출처를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-135">The `BaseURI` tells you where these nodes came from.</span></span>  
  
 <span data-ttu-id="9bef1-136">이 속성의 값은 노드 유형에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-136">The value of this property varies depending on the node type.</span></span> <span data-ttu-id="9bef1-137">문서 노드 위치를 반환 하는 예를 들어를 <xref:System.Xml.XmlDocument> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-137">For example, Document nodes return the location of the <xref:System.Xml.XmlDocument> object.</span></span> <span data-ttu-id="9bef1-138">외부 EntityReference 노드의 자식 노드인 노드 엔터티 자체의 위치를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-138">Nodes which are child nodes of external EntityReference nodes return the location of the entity itself.</span></span> <span data-ttu-id="9bef1-139">예를 들어, 다음 XML 문서를 고려 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-139">For example, consider the following XML document:</span></span>  
  
```xml  
<!DOCTYPE item [  
<!ENTITY xyz SYSTEM "a/b.xml">  
]>  
<item num='123'>&xyz;</item>  
```  
  
 <span data-ttu-id="9bef1-140">여기서 외부 엔터티 `a/b.xml` XML 텍스트가: `<test>123</test>`합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-140">where the external entity `a/b.xml` contains the XML text: `<test>123</test>`.</span></span>  
  
 <span data-ttu-id="9bef1-141">문서에서 로드 되 면 http://server/mydata.xml, `BaseURI` 다음을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-141">If the document is loaded from http://server/mydata.xml, `BaseURI` returns the following:</span></span>  
  
|<span data-ttu-id="9bef1-142">노드 형식</span><span class="sxs-lookup"><span data-stu-id="9bef1-142">NodeType</span></span>|<span data-ttu-id="9bef1-143">이름</span><span class="sxs-lookup"><span data-stu-id="9bef1-143">Name</span></span>|<span data-ttu-id="9bef1-144">BaseURI</span><span class="sxs-lookup"><span data-stu-id="9bef1-144">BaseURI</span></span>|  
|--------------|----------|-------------|  
|<span data-ttu-id="9bef1-145">특성</span><span class="sxs-lookup"><span data-stu-id="9bef1-145">Attribute</span></span>|<span data-ttu-id="9bef1-146">num</span><span class="sxs-lookup"><span data-stu-id="9bef1-146">num</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="9bef1-147">문서</span><span class="sxs-lookup"><span data-stu-id="9bef1-147">Document</span></span>|<span data-ttu-id="9bef1-148">#document</span><span class="sxs-lookup"><span data-stu-id="9bef1-148">#document</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="9bef1-149">DocumentType</span><span class="sxs-lookup"><span data-stu-id="9bef1-149">DocumentType</span></span>|<span data-ttu-id="9bef1-150">항목</span><span class="sxs-lookup"><span data-stu-id="9bef1-150">item</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="9bef1-151">엔터티</span><span class="sxs-lookup"><span data-stu-id="9bef1-151">Entity</span></span>|<span data-ttu-id="9bef1-152">xyz</span><span class="sxs-lookup"><span data-stu-id="9bef1-152">xyz</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="9bef1-153">요소</span><span class="sxs-lookup"><span data-stu-id="9bef1-153">Element</span></span>|<span data-ttu-id="9bef1-154">항목</span><span class="sxs-lookup"><span data-stu-id="9bef1-154">item</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="9bef1-155">EntityReference</span><span class="sxs-lookup"><span data-stu-id="9bef1-155">EntityReference</span></span>|<span data-ttu-id="9bef1-156">xyz</span><span class="sxs-lookup"><span data-stu-id="9bef1-156">xyz</span></span>|http://server/mydata.xml|  
|<span data-ttu-id="9bef1-157">요소</span><span class="sxs-lookup"><span data-stu-id="9bef1-157">Element</span></span>|<span data-ttu-id="9bef1-158">테스트</span><span class="sxs-lookup"><span data-stu-id="9bef1-158">test</span></span>|http://server/a/b.xml|  
|<span data-ttu-id="9bef1-159">텍스트</span><span class="sxs-lookup"><span data-stu-id="9bef1-159">Text</span></span>|<span data-ttu-id="9bef1-160">#text</span><span class="sxs-lookup"><span data-stu-id="9bef1-160">#text</span></span>|http://server/a/b.xml|  
  
 <span data-ttu-id="9bef1-161">`BaseURI` 엔터티는 엔터티는 확장 하는 경우이 정보는 유지 되지 않습니다 하 고이 속성의 위치를 반환 합니다. 경계 참조는 `XmlDocument` 모든 경우에는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-161">`BaseURI` looks for entity reference boundaries, so if entities are expanded this information is not preserved and this property returns the location of the `XmlDocument` object in all cases.</span></span>  
  
 <span data-ttu-id="9bef1-162">두 번째 예로, 다음 XML 문서를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-162">As a second example, given the following XML document:</span></span>  
  
```xml  
<!DOCTYPE Mydata SYSTEM "http://localhost/doctype.dtd">  
<baa>&xyz;</baa>  
```  
  
 <span data-ttu-id="9bef1-163">여기서 DTD 파일에 다음을 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-163">where the DTD file contains the following:</span></span>  
  
```  
<!ENTITY xyz <E1>My Data</E1>  
<!ELEMENT baa #PCDATA>  
<!ATTLIST baa attr1 "woof">  
```  
  
 <span data-ttu-id="9bef1-164">XML 문서에서 로드 되 면 http://localhost/mydata.xml, `BaseURI` 노드 각각에 대해 다음을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-164">If the XML document is loaded from http://localhost/mydata.xml, `BaseURI` returns the following for each of the nodes:</span></span>  
  
|<span data-ttu-id="9bef1-165">노드 형식</span><span class="sxs-lookup"><span data-stu-id="9bef1-165">NodeType</span></span>|<span data-ttu-id="9bef1-166">이름</span><span class="sxs-lookup"><span data-stu-id="9bef1-166">Name</span></span>|<span data-ttu-id="9bef1-167">BaseURI</span><span class="sxs-lookup"><span data-stu-id="9bef1-167">BaseURI</span></span>|  
|--------------|----------|-------------|  
|<span data-ttu-id="9bef1-168">문서</span><span class="sxs-lookup"><span data-stu-id="9bef1-168">Document</span></span>|<span data-ttu-id="9bef1-169">#document</span><span class="sxs-lookup"><span data-stu-id="9bef1-169">#document</span></span>|http://localhost/mydata.xml|  
|<span data-ttu-id="9bef1-170">DocumentType</span><span class="sxs-lookup"><span data-stu-id="9bef1-170">DocumentType</span></span>|<span data-ttu-id="9bef1-171">Mydata</span><span class="sxs-lookup"><span data-stu-id="9bef1-171">Mydata</span></span>|http://localhost/mydata.xml<br /><br /> <span data-ttu-id="9bef1-172">합니다 <xref:System.Xml.XmlDocumentType.SystemId%2A?displayProperty=nameWithType> 또는 <xref:System.Xml.XmlDocumentType.PublicId%2A?displayProperty=nameWithType> 속성에서 DTD 파일을 로드 하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-172">The <xref:System.Xml.XmlDocumentType.SystemId%2A?displayProperty=nameWithType> or <xref:System.Xml.XmlDocumentType.PublicId%2A?displayProperty=nameWithType> properties can be used to identify where the DTD file was loaded from.</span></span>|  
|<span data-ttu-id="9bef1-173">요소</span><span class="sxs-lookup"><span data-stu-id="9bef1-173">Element</span></span>|<span data-ttu-id="9bef1-174">baa</span><span class="sxs-lookup"><span data-stu-id="9bef1-174">baa</span></span>|http://localhost/mydata.xml|  
|<span data-ttu-id="9bef1-175">엔터티</span><span class="sxs-lookup"><span data-stu-id="9bef1-175">Entity</span></span>|<span data-ttu-id="9bef1-176">xyz</span><span class="sxs-lookup"><span data-stu-id="9bef1-176">xyz</span></span>|http://localhost/doctype.dtd|  
|<span data-ttu-id="9bef1-177">EntityReference</span><span class="sxs-lookup"><span data-stu-id="9bef1-177">EntityReference</span></span>|<span data-ttu-id="9bef1-178">xyz</span><span class="sxs-lookup"><span data-stu-id="9bef1-178">xyz</span></span>|http://localhost/mydata.xml|  
|<span data-ttu-id="9bef1-179">특성</span><span class="sxs-lookup"><span data-stu-id="9bef1-179">Attribute</span></span>|<span data-ttu-id="9bef1-180">woof</span><span class="sxs-lookup"><span data-stu-id="9bef1-180">woof</span></span>|http://localhost/mydata.xml|  
  
> [!NOTE]
>  <span data-ttu-id="9bef1-181">기본 특성의 기본 URI가 속해 있는 요소의 기본 URI와 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-181">The base URI of a default attribute is the same as the base URI of the element to which they belong.</span></span>  
  
 <span data-ttu-id="9bef1-182">이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-182">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildNodes">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNodeList ChildNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNodeList ChildNodes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.ChildNodes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ChildNodes As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeList ^ ChildNodes { System::Xml::XmlNodeList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildNodes : System.Xml.XmlNodeList" Usage="System.Xml.XmlNode.ChildNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9bef1-183">노드의 모든 자식을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-183">Gets all the child nodes of the node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9bef1-184">노드의 모든 자식을 포함하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-184">An object that contains all the child nodes of the node.</span>
          </span>
          <span data-ttu-id="9bef1-185">자식 노드가 없으면 이 속성은 빈 <see cref="T:System.Xml.XmlNodeList" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-185">If there are no child nodes, this property returns an empty <see cref="T:System.Xml.XmlNodeList" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-186">자식 노드에 대 한 정보를 참조 하세요.를 [W3C DOM (코어) 수준 1 사양은](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span><span class="sxs-lookup"><span data-stu-id="9bef1-186">For information about child nodes, see the [W3C DOM (Core) Level 1 specification](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9bef1-187">다음 예제에서는 루트 요소의 모든 자식 노드를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-187">The following example displays all the child nodes of the root element.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Xml.XmlNode&#xA;override this.Clone : unit -&gt; System.Xml.XmlNode" Usage="xmlNode.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9bef1-188">이 노드의 복제본을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-188">Creates a duplicate of this node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bef1-189">복제된 노드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-189">The cloned node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-190">복제는 <xref:System.Xml.XmlElement> 모든 특성 및 기본값으로 설정 된 특성을 나타내는 XML 프로세서에서 생성 된 항목을 포함 하 여 해당 값을 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-190">Cloning an <xref:System.Xml.XmlElement> copies all attributes and their values, including those generated by the XML processor to represent defaulted attributes.</span></span> <span data-ttu-id="9bef1-191">이 메서드를 재귀적으로 노드와 그 아래의 하위 트리를 복제합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-191">This method recursively clones the node and the subtree underneath it.</span></span>  
  
 <span data-ttu-id="9bef1-192">`Clone` 호출 하는 것과 같습니다 `CloneNode(true)`합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-192">`Clone` is equivalent to calling `CloneNode(true)`.</span></span>  
  
 <span data-ttu-id="9bef1-193">다음 표에서 각 특정 동작을 설명 <xref:System.Xml.XmlNodeType>합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-193">The following table describes the specific behavior for each <xref:System.Xml.XmlNodeType>.</span></span>  
  
|<span data-ttu-id="9bef1-194">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="9bef1-194">XmlNodeType</span></span>|<span data-ttu-id="9bef1-195">복제</span><span class="sxs-lookup"><span data-stu-id="9bef1-195">Clone</span></span>|  
|-----------------|-----------|  
|<span data-ttu-id="9bef1-196">특성</span><span class="sxs-lookup"><span data-stu-id="9bef1-196">Attribute</span></span>|<span data-ttu-id="9bef1-197">자식 노드를 포함 하는 특성 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-197">Clones the attribute node, including child nodes.</span></span>|  
|<span data-ttu-id="9bef1-198">CData</span><span class="sxs-lookup"><span data-stu-id="9bef1-198">CData</span></span>|<span data-ttu-id="9bef1-199">데이터 콘텐츠를 포함 하는 CData 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-199">Clones the CData node, including its data content.</span></span>|  
|<span data-ttu-id="9bef1-200">주석</span><span class="sxs-lookup"><span data-stu-id="9bef1-200">Comment</span></span>|<span data-ttu-id="9bef1-201">텍스트 내용을 포함 하 여 주석 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-201">Clones the comment node, including its text content.</span></span>|  
|<span data-ttu-id="9bef1-202">문서</span><span class="sxs-lookup"><span data-stu-id="9bef1-202">Document</span></span>|<span data-ttu-id="9bef1-203">모든 자식 노드를 포함 하는 문서 노드에 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-203">Clones the document node, including any child nodes.</span></span>|  
|<span data-ttu-id="9bef1-204">DocumentFragment</span><span class="sxs-lookup"><span data-stu-id="9bef1-204">DocumentFragment</span></span>|<span data-ttu-id="9bef1-205">모든 자식 노드를 포함 하는 문서 조각 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-205">Clones the document fragment node, including any child nodes.</span></span>|  
|<span data-ttu-id="9bef1-206">DocumentType</span><span class="sxs-lookup"><span data-stu-id="9bef1-206">DocumentType</span></span>|<span data-ttu-id="9bef1-207">문서 형식 노드를 복제합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-207">Clones the document type node.</span></span>|  
|<span data-ttu-id="9bef1-208">요소</span><span class="sxs-lookup"><span data-stu-id="9bef1-208">Element</span></span>|<span data-ttu-id="9bef1-209">요소 노드, 해당 특성 및 자식 노드를 복제합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-209">Clones the element node, its attributes, and any child nodes.</span></span>|  
|<span data-ttu-id="9bef1-210">엔터티</span><span class="sxs-lookup"><span data-stu-id="9bef1-210">Entity</span></span>|<span data-ttu-id="9bef1-211">entity 노드는 복제할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-211">Entity nodes cannot be cloned.</span></span>|  
|<span data-ttu-id="9bef1-212">EntityReference</span><span class="sxs-lookup"><span data-stu-id="9bef1-212">EntityReference</span></span>|<span data-ttu-id="9bef1-213">엔터티 참조 노드를 복제합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-213">Clones the entity reference node.</span></span> <span data-ttu-id="9bef1-214">대체 텍스트는 포함되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-214">The replacement text is not included.</span></span>|  
|<span data-ttu-id="9bef1-215">Notation</span><span class="sxs-lookup"><span data-stu-id="9bef1-215">Notation</span></span>|<span data-ttu-id="9bef1-216">notation 노드는 복제할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-216">Notation nodes cannot be cloned.</span></span>|  
|<span data-ttu-id="9bef1-217">ProcessingInstruction</span><span class="sxs-lookup"><span data-stu-id="9bef1-217">ProcessingInstruction</span></span>|<span data-ttu-id="9bef1-218">해당 대상 및 데이터를 포함 하는 처리 명령 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-218">Clones the processing instruction node, including its target and data.</span></span>|  
|<span data-ttu-id="9bef1-219">SignificantWhitespace</span><span class="sxs-lookup"><span data-stu-id="9bef1-219">SignificantWhitespace</span></span>|<span data-ttu-id="9bef1-220">해당 데이터 값을 포함 하 여 공백 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-220">Clones the significant white space node, including its data value.</span></span>|  
|<span data-ttu-id="9bef1-221">텍스트</span><span class="sxs-lookup"><span data-stu-id="9bef1-221">Text</span></span>|<span data-ttu-id="9bef1-222">해당 데이터 값을 포함 하 고 텍스트 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-222">Clones the text node, including its data value.</span></span>|  
|<span data-ttu-id="9bef1-223">Whitespace</span><span class="sxs-lookup"><span data-stu-id="9bef1-223">Whitespace</span></span>|<span data-ttu-id="9bef1-224">해당 데이터 값을 포함 하 여 공백 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-224">Clones the white space node, including its data value.</span></span>|  
|<span data-ttu-id="9bef1-225">XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="9bef1-225">XmlDeclaration</span></span>|<span data-ttu-id="9bef1-226">해당 데이터 값을 포함 하는 XmlDeclaration 노드에 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-226">Clones the XmlDeclaration node, including its data value.</span></span>|  
|<span data-ttu-id="9bef1-227">다른 모든 노드 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-227">All other node types.</span></span>|<span data-ttu-id="9bef1-228">이러한 노드 형식은 복제할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-228">These node types cannot be cloned.</span></span>|  
  
 <span data-ttu-id="9bef1-229">이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-229">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9bef1-230">다음 예제에서는 XML 문서의 루트 노드를 복제합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-230">The following example clones the root node of the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.Clone Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.Clone Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.Clone Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.Clone Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.Clone Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.Clone Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlNode.CloneNode(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlNode CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CloneNode (deep As Boolean) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Xml::XmlNode ^ CloneNode(bool deep);" />
      <MemberSignature Language="F#" Value="abstract member CloneNode : bool -&gt; System.Xml.XmlNode" Usage="xmlNode.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">
          <span data-ttu-id="9bef1-231">지정된 노드 아래의 하위 트리를 재귀적으로 복제하려면 <see langword="true" />이고, 노드 자체만 복제하려면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-231">
              <see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bef1-232">파생 클래스에서 재정의한 경우 노드를 복제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-232">Creates a duplicate of the node, when overridden in a derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bef1-233">복제된 노드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-233">The cloned node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-234">이 메서드는 노드에 대 한 복사 생성자로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-234">This method serves as a copy constructor for nodes.</span></span> <span data-ttu-id="9bef1-235">중복 노드는 부모가 (<xref:System.Xml.XmlNode.ParentNode%2A> 반환 `null`).</span><span class="sxs-lookup"><span data-stu-id="9bef1-235">The duplicate node has no parent (<xref:System.Xml.XmlNode.ParentNode%2A> returns `null`).</span></span>  
  
 <span data-ttu-id="9bef1-236">다음 표에서 각 특정 동작을 설명 <xref:System.Xml.XmlNodeType>합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-236">The following table describes the specific behavior for each <xref:System.Xml.XmlNodeType>.</span></span>  
  
|<span data-ttu-id="9bef1-237">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="9bef1-237">XmlNodeType</span></span>|<span data-ttu-id="9bef1-238">CloneNode(true)</span><span class="sxs-lookup"><span data-stu-id="9bef1-238">CloneNode(true)</span></span>|<span data-ttu-id="9bef1-239">CloneNode(false)</span><span class="sxs-lookup"><span data-stu-id="9bef1-239">CloneNode(false)</span></span>|  
|-----------------|-----------------------|------------------------|  
|<span data-ttu-id="9bef1-240">특성</span><span class="sxs-lookup"><span data-stu-id="9bef1-240">Attribute</span></span>|<span data-ttu-id="9bef1-241">자식 노드를 포함 하는 특성 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-241">Clones the attribute node, including child nodes.</span></span>|<span data-ttu-id="9bef1-242">자식 노드를 포함 하는 특성 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-242">Clones the attribute node, including child nodes.</span></span>|  
|<span data-ttu-id="9bef1-243">CData</span><span class="sxs-lookup"><span data-stu-id="9bef1-243">CData</span></span>|<span data-ttu-id="9bef1-244">데이터 콘텐츠를 포함 하는 CData 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-244">Clones the CData node, including its data content.</span></span>|<span data-ttu-id="9bef1-245">데이터 콘텐츠를 포함 하는 CData 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-245">Clones the CData node, including its data content.</span></span>|  
|<span data-ttu-id="9bef1-246">주석</span><span class="sxs-lookup"><span data-stu-id="9bef1-246">Comment</span></span>|<span data-ttu-id="9bef1-247">텍스트 내용을 포함 하 여 주석 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-247">Clones the comment node, including its text content.</span></span>|<span data-ttu-id="9bef1-248">텍스트 내용을 포함 하 여 주석 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-248">Clones the comment node, including its text content.</span></span>|  
|<span data-ttu-id="9bef1-249">문서</span><span class="sxs-lookup"><span data-stu-id="9bef1-249">Document</span></span>|<span data-ttu-id="9bef1-250">모든 자식 노드를 포함 하는 문서 노드에 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-250">Clones the document node, including any child nodes.</span></span>|<span data-ttu-id="9bef1-251">문서 노드를 복제합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-251">Clones the document node.</span></span>|  
|<span data-ttu-id="9bef1-252">DocumentFragment</span><span class="sxs-lookup"><span data-stu-id="9bef1-252">DocumentFragment</span></span>|<span data-ttu-id="9bef1-253">모든 자식 노드를 포함 하는 문서 조각 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-253">Clones the document fragment node, including any child nodes.</span></span>|<span data-ttu-id="9bef1-254">문서 조각 노드를 복제합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-254">Clones the document fragment node.</span></span>|  
|<span data-ttu-id="9bef1-255">DocumentType</span><span class="sxs-lookup"><span data-stu-id="9bef1-255">DocumentType</span></span>|<span data-ttu-id="9bef1-256">문서 형식 노드를 복제합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-256">Clones the document type node.</span></span>|<span data-ttu-id="9bef1-257">문서 형식 노드를 복제합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-257">Clones the document type node.</span></span>|  
|<span data-ttu-id="9bef1-258">요소</span><span class="sxs-lookup"><span data-stu-id="9bef1-258">Element</span></span>|<span data-ttu-id="9bef1-259">요소 노드, 해당 특성 및 자식 노드를 복제합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-259">Clones the element node, its attributes, and any child nodes.</span></span>|<span data-ttu-id="9bef1-260">요소 노드 및 모든 기본 특성을 포함 하 여 해당 특성을 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-260">Clones the element node and its attributes, including any default attributes.</span></span>|  
|<span data-ttu-id="9bef1-261">엔터티</span><span class="sxs-lookup"><span data-stu-id="9bef1-261">Entity</span></span>|<span data-ttu-id="9bef1-262">entity 노드는 복제할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-262">Entity nodes cannot be cloned.</span></span>|<span data-ttu-id="9bef1-263">entity 노드는 복제할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-263">Entity nodes cannot be cloned.</span></span>|  
|<span data-ttu-id="9bef1-264">EntityReference</span><span class="sxs-lookup"><span data-stu-id="9bef1-264">EntityReference</span></span>|<span data-ttu-id="9bef1-265">엔터티 참조 노드를 복제합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-265">Clones the entity reference node.</span></span> <span data-ttu-id="9bef1-266">대체 텍스트는 포함되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-266">The replacement text is not included.</span></span>|<span data-ttu-id="9bef1-267">엔터티 참조 노드를 복제합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-267">Clones the entity reference node.</span></span> <span data-ttu-id="9bef1-268">대체 텍스트는 포함되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-268">The replacement text is not included.</span></span>|  
|<span data-ttu-id="9bef1-269">Notation</span><span class="sxs-lookup"><span data-stu-id="9bef1-269">Notation</span></span>|<span data-ttu-id="9bef1-270">notation 노드는 복제할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-270">Notation nodes cannot be cloned.</span></span>|<span data-ttu-id="9bef1-271">notation 노드는 복제할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-271">Notation nodes cannot be cloned.</span></span>|  
|<span data-ttu-id="9bef1-272">ProcessingInstruction</span><span class="sxs-lookup"><span data-stu-id="9bef1-272">ProcessingInstruction</span></span>|<span data-ttu-id="9bef1-273">해당 대상 및 데이터를 포함 하는 처리 명령 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-273">Clones the processing instruction node, including its target and data.</span></span>|<span data-ttu-id="9bef1-274">해당 대상 및 데이터를 포함 하는 처리 명령 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-274">Clones the processing instruction node, including its target and data.</span></span>|  
|<span data-ttu-id="9bef1-275">SignificantWhitespace</span><span class="sxs-lookup"><span data-stu-id="9bef1-275">SignificantWhitespace</span></span>|<span data-ttu-id="9bef1-276">해당 데이터 값을 포함 하 여 공백 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-276">Clones the significant white space node, including its data value.</span></span>|<span data-ttu-id="9bef1-277">해당 데이터 값을 포함 하 여 공백 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-277">Clones the significant white space node, including its data value.</span></span>|  
|<span data-ttu-id="9bef1-278">텍스트</span><span class="sxs-lookup"><span data-stu-id="9bef1-278">Text</span></span>|<span data-ttu-id="9bef1-279">해당 데이터 값을 포함 하 고 텍스트 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-279">Clones the text node, including its data value.</span></span>|<span data-ttu-id="9bef1-280">해당 데이터 값을 포함 하 고 텍스트 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-280">Clones the text node, including its data value.</span></span>|  
|<span data-ttu-id="9bef1-281">Whitespace</span><span class="sxs-lookup"><span data-stu-id="9bef1-281">Whitespace</span></span>|<span data-ttu-id="9bef1-282">해당 데이터 값을 포함 하 여 공백 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-282">Clones the white space node, including its data value.</span></span>|<span data-ttu-id="9bef1-283">해당 데이터 값을 포함 하 여 공백 노드를 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-283">Clones the white space node, including its data value.</span></span>|  
|<span data-ttu-id="9bef1-284">XmlDeclaration</span><span class="sxs-lookup"><span data-stu-id="9bef1-284">XmlDeclaration</span></span>|<span data-ttu-id="9bef1-285">해당 데이터 값을 포함 하는 XmlDeclaration 노드에 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-285">Clones the XmlDeclaration node, including its data value.</span></span>|<span data-ttu-id="9bef1-286">해당 데이터 값을 포함 하는 XmlDeclaration 노드에 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-286">Clones the XmlDeclaration node, including its data value.</span></span>|  
|<span data-ttu-id="9bef1-287">다른 모든 노드 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-287">All other node types.</span></span>|<span data-ttu-id="9bef1-288">이러한 노드 형식은 복제할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-288">These node types cannot be cloned.</span></span>|<span data-ttu-id="9bef1-289">이러한 노드 형식은 복제할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-289">These node types cannot be cloned.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="9bef1-290">다음 예제에서는 전체 및 단순 복제본 간의 차이 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-290">The following example shows the difference between a deep and shallow clone.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.CloneNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.CloneNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.CloneNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.CloneNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.CloneNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.CloneNode Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9bef1-291">복제할 수 없는 노드 형식에 이 메서드를 호출하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-291">Calling this method on a node type that cannot be cloned.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNavigator CreateNavigator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNavigator CreateNavigator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.CreateNavigator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateNavigator () As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XPath::XPathNavigator ^ CreateNavigator();" />
      <MemberSignature Language="F#" Value="abstract member CreateNavigator : unit -&gt; System.Xml.XPath.XPathNavigator&#xA;override this.CreateNavigator : unit -&gt; System.Xml.XPath.XPathNavigator" Usage="xmlNode.CreateNavigator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.XPath.IXPathNavigable.CreateNavigator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9bef1-292">이 개체를 탐색하기 위해 <see cref="T:System.Xml.XPath.XPathNavigator" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-292">Creates an <see cref="T:System.Xml.XPath.XPathNavigator" /> for navigating this object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bef1-293">노드를 탐색 하는 데 사용되는 <see langword="XPathNavigator" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-293">An <see langword="XPathNavigator" /> object used to navigate the node.</span>
          </span>
          <span data-ttu-id="9bef1-294">
            <see langword="XPathNavigator" />는 메서드를 호출한 노드에 위치하며</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-294">The <see langword="XPathNavigator" /> is positioned on the node from which the method was called.</span>
          </span>
          <span data-ttu-id="9bef1-295">문서의 루트에는 위치하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-295">It is not positioned on the root of the document.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-296">`XPathNavigator` 읽기 전용, 임의 데이터 액세스를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-296">The `XPathNavigator` provides read-only, random access to data.</span></span> <span data-ttu-id="9bef1-297">XSLT 변형에 최적화 되어 있어 하려면 입력된 메커니즘으로 사용 하는 경우 성능상의 이점을 제공 합니다 <xref:System.Xml.Xsl.XslTransform.Transform%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9bef1-297">Because it is optimized for XSLT transformations, it provides performance benefits when used as an input mechanism to the <xref:System.Xml.Xsl.XslTransform.Transform%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="9bef1-298">이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-298">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9bef1-299">다음 예제에서는 로드 하 고 XSLT 변형을 수행 하기 전에 XML 문서를 편집 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-299">The following example loads and edits an XML document before performing an XSLT transform.</span></span>  
  
 [!code-cpp[XslTransform.Transform2#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform2/CPP/trans_snip.cpp#1)]
 [!code-csharp[XslTransform.Transform2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform2/CS/trans_snip.cs#1)]
 [!code-vb[XslTransform.Transform2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform2/VB/trans_snip.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Xsl.XslTransform" />
      </Docs>
    </Member>
    <Member MemberName="FirstChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode FirstChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode FirstChild" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.FirstChild" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FirstChild As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ FirstChild { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FirstChild : System.Xml.XmlNode" Usage="System.Xml.XmlNode.FirstChild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9bef1-300">노드의 첫 번째 자식을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-300">Gets the first child of the node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9bef1-301">노드의 첫 번째 자식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-301">The first child of the node.</span>
          </span>
          <span data-ttu-id="9bef1-302">이러한 노드가 없으면, <see langword="null" />이 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-302">If there is no such node, <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-303">자식 노드에 대 한 정보를 참조 하세요.를 [W3C DOM (코어) 수준 1 사양은](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span><span class="sxs-lookup"><span data-stu-id="9bef1-303">For information about child nodes, see the [W3C DOM (Core) Level 1 specification](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9bef1-304">다음 예제에서는 title 요소를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-304">The following example displays the title element.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.FirstChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.FirstChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.FirstChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.FirstChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.FirstChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.FirstChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="xmlNode.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9bef1-305">현재 노드에서 자식 노드를 반복하는 열거자를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-305">Get an enumerator that iterates through the child nodes in the current node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bef1-306">현재 노드에서 하위 노드를 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.IEnumerator" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-306">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the child nodes in the current node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-307">"For each" 스타일에 대 한 지원을 제공에서 노드에 대 한 반복을 `XmlNode`입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-307">Provides support for the "for each" style iteration over the nodes in the `XmlNode`.</span></span>  
  
 <span data-ttu-id="9bef1-308">이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-308">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9bef1-309">다음 예제에서는 XML 문서에 있는 모든 책을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-309">The following example displays all the books in the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.GetEnumerator Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.GetEnumerator Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.GetEnumerator Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.GetEnumerator Example/VB/source.vb#1)]  
  
 <span data-ttu-id="9bef1-310">이 예제에서는 파일을 사용 하 여 `books.xml`입력으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-310">The example uses the file, `books.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlNode.GetEnumerator Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNode.GetEnumerator Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNamespaceOfPrefix">
      <MemberSignature Language="C#" Value="public virtual string GetNamespaceOfPrefix (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetNamespaceOfPrefix(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNamespaceOfPrefix (prefix As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetNamespaceOfPrefix(System::String ^ prefix);" />
      <MemberSignature Language="F#" Value="abstract member GetNamespaceOfPrefix : string -&gt; string&#xA;override this.GetNamespaceOfPrefix : string -&gt; string" Usage="xmlNode.GetNamespaceOfPrefix prefix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="9bef1-311">찾으려는 네임스페이스 URI가 있는 접두사입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-311">The prefix whose namespace URI you want to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bef1-312">현재 노드의 범위에 있는 지정된 접두사에 대해 가장 가까운 **xmlns** 선언을 조회하여 선언의 네임스페이스 URI를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-312">Looks up the closest **xmlns** declaration for the given prefix that is in scope for the current node and returns the namespace URI in the declaration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bef1-313">지정된 접두사의 네임스페이스 URI입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-313">The namespace URI of the specified prefix.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-314">이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-314">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9bef1-315">다음 예제에서는 XML 문서에 새 특성을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-315">The following example adds a new attribute to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrefixOfNamespace">
      <MemberSignature Language="C#" Value="public virtual string GetPrefixOfNamespace (string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPrefixOfNamespace(string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.GetPrefixOfNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrefixOfNamespace (namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPrefixOfNamespace(System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member GetPrefixOfNamespace : string -&gt; string&#xA;override this.GetPrefixOfNamespace : string -&gt; string" Usage="xmlNode.GetPrefixOfNamespace namespaceURI" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="namespaceURI">
          <span data-ttu-id="9bef1-316">찾으려는 접두사를 가진 네임스페이스 URI입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-316">The namespace URI whose prefix you want to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bef1-317">현재 노드의 범위에 있는 지정된 네임스페이스 URI에 대해 가장 가까운 **xmlns** 선언을 조회하여 해당 선언에 정의된 접두사를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-317">Looks up the closest **xmlns** declaration for the given namespace URI that is in scope for the current node and returns the prefix defined in that declaration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bef1-318">지정된 네임스페이스 URI의 접두사입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-318">The prefix for the specified namespace URI.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-319">이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-319">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9bef1-320">다음 예제에서는 XML 문서에 새 요소를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-320">The following example adds a new element to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.GetPrefixOfNamespace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.GetPrefixOfNamespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.GetPrefixOfNamespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.GetPrefixOfNamespace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.GetPrefixOfNamespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.GetPrefixOfNamespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasChildNodes">
      <MemberSignature Language="C#" Value="public virtual bool HasChildNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChildNodes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.HasChildNodes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasChildNodes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasChildNodes { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChildNodes : bool" Usage="System.Xml.XmlNode.HasChildNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9bef1-321">이 노드에 자식 노드가 있는지를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-321">Gets a value indicating whether this node has any child nodes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9bef1-322">현재 노드에 자식 노드가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-322">
              <see langword="true" /> if the node has child nodes; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-323">자식 노드에 대 한 정보를 참조 하세요.를 [W3C DOM (코어) 수준 1 사양은](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span><span class="sxs-lookup"><span data-stu-id="9bef1-323">For information about child nodes, see the [W3C DOM (Core) Level 1 specification](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9bef1-324">다음 예제에서는 루트 요소의 모든 자식 노드를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-324">The following example displays all the child nodes of the root element.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerText">
      <MemberSignature Language="C#" Value="public virtual string InnerText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.InnerText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InnerText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerText : string with get, set" Usage="System.Xml.XmlNode.InnerText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9bef1-325">노드와 모든 자식 노드의 연결된 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-325">Gets or sets the concatenated values of the node and all its child nodes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9bef1-326">노드와 모든 자식 노드의 연결된 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-326">The concatenated values of the node and all its child nodes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-327">이 속성을 설정 자식 노드를 모두 지정된 된 문자열의 구문 분석 된 내용으로 바뀝니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-327">Setting this property replaces all the child nodes with the parsed contents of the given string.</span></span>  
  
 <span data-ttu-id="9bef1-328">리프 노드에 대 한 `InnerText` 와 동일한 콘텐츠를 반환 합니다 <xref:System.Xml.XmlNode.Value%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-328">For leaf nodes, `InnerText` returns the same content as the <xref:System.Xml.XmlNode.Value%2A> property.</span></span>  
  
 <span data-ttu-id="9bef1-329">이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-329">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9bef1-330">다음 예제에서는 비교 합니다 `InnerText` 고 <xref:System.Xml.XmlNode.InnerXml%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-330">The following example compares the `InnerText` and <xref:System.Xml.XmlNode.InnerXml%2A> properties.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/VB/source.vb#1)]  
  
 <span data-ttu-id="9bef1-331">**출력:**</span><span class="sxs-lookup"><span data-stu-id="9bef1-331">**Output:**</span></span>  
  
```  
Display the InnerText of the element...  
some textmore text  
Display the InnerXml of the element...  
some text<child />more text  
<elem>Text containing &lt;markup/&gt; will have char(&lt;) and char(&gt;) escape  
d.</elem>  
<elem>Text containing <markup />.</elem>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerXml">
      <MemberSignature Language="C#" Value="public virtual string InnerXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerXml" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.InnerXml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InnerXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerXml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerXml : string with get, set" Usage="System.Xml.XmlNode.InnerXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9bef1-332">이 노드의 자식 노드를 나타내는 태그를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-332">Gets or sets the markup representing only the child nodes of this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9bef1-333">이 노드의 자식 노드를 나타내는 태그입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-333">The markup of the child nodes of this node.</span>
          </span>
          <span data-ttu-id="9bef1-334">
            <block subset="none" type="note">
              <para>
                <see langword="InnerXml" /> 기본 특성을 반환 하지 않습니다.  </para>
            </block>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-334">
              <block subset="none" type="note">
                <para>
                  <see langword="InnerXml" /> does not return default attributes.  </para>
              </block>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-335">자식 노드를 가질 수 없는 노드에서이 속성을 설정 하는 동안, 예를 들어 텍스트 노드 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-335">Attempting to set this property from a node that cannot have child nodes, for example a Text node, throws an exception.</span></span> <span data-ttu-id="9bef1-336">그렇지 않은 경우 설정 `InnerXml` 노드의 자식 노드를 지정된 된 문자열의 구문 분석 된 내용으로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-336">Otherwise, setting `InnerXml` replaces the child nodes, of the node, with the parsed contents of the given string.</span></span> <span data-ttu-id="9bef1-337">현재 네임스페이스 컨텍스트에서 구문 분석이 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-337">The parsing is done in the current namespace context.</span></span>  
  
 <span data-ttu-id="9bef1-338">이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-338">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9bef1-339">`InnerXml` DOM을 수정 하는 효율적인 방법이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-339">`InnerXml` is not an efficient way to modify the DOM.</span></span> <span data-ttu-id="9bef1-340">복잡 한 노드를 대체 하는 경우에 성능 문제가 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-340">There may be performance issues when replacing complex nodes.</span></span> <span data-ttu-id="9bef1-341">것이 노드를 생성 및와 같은 메서드를 사용 하는 것이 효율적 `InsertBefore`, `InsertAfter`를 `AppendChild`, 및 `RemoveChild` Xml 문서를 수정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-341">It is more efficient to construct nodes and use methods such as `InsertBefore`, `InsertAfter`, `AppendChild`, and `RemoveChild` to modify the Xml document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9bef1-342">다음 예제에서는 비교 합니다 <xref:System.Xml.XmlNode.InnerText%2A> 고 `InnerXml` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-342">The following example compares the <xref:System.Xml.XmlNode.InnerText%2A> and `InnerXml` properties.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9bef1-343">자식 노드를 가질 수 없는 노드에 대해 이 속성을 설정하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-343">Setting this property on a node that cannot have child nodes.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="9bef1-344">이 속성을 설정할 때 지정된 XML이 올바른 형식이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-344">The XML specified when setting this property is not well-formed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InsertAfter">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode InsertAfter (System.Xml.XmlNode newChild, System.Xml.XmlNode refChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode InsertAfter(class System.Xml.XmlNode newChild, class System.Xml.XmlNode refChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InsertAfter (newChild As XmlNode, refChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ InsertAfter(System::Xml::XmlNode ^ newChild, System::Xml::XmlNode ^ refChild);" />
      <MemberSignature Language="F#" Value="abstract member InsertAfter : System.Xml.XmlNode * System.Xml.XmlNode -&gt; System.Xml.XmlNode&#xA;override this.InsertAfter : System.Xml.XmlNode * System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlNode.InsertAfter (newChild, refChild)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
        <Parameter Name="refChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild">
          <span data-ttu-id="9bef1-345">삽입할 <see langword="XmlNode" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-345">The <see langword="XmlNode" /> to insert.</span>
          </span>
        </param>
        <param name="refChild">
          <span data-ttu-id="9bef1-346">참조 노드인 <see langword="XmlNode" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-346">The <see langword="XmlNode" /> that is the reference node.</span>
          </span>
          <span data-ttu-id="9bef1-347">
            <c>newNode</c>는 <c>refNode</c> 뒤에 배치됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-347">The <c>newNode</c> is placed after the <c>refNode</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bef1-348">지정된 노드를 지정된 참조 노드 바로 다음에 삽입합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-348">Inserts the specified node immediately after the specified reference node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bef1-349">삽입할 노드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-349">The node being inserted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-350">하는 경우 `refChild` 됩니다 `null`, 삽입 `newChild` 자식 노드 목록 맨 앞에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-350">If `refChild` is `null`, insert `newChild` at the beginning of the list of child nodes.</span></span> <span data-ttu-id="9bef1-351">모든 내용을 합니다 `newChild` 삽입 되 면 동일한 순서로 후 `refChild`합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-351">All the contents of the `newChild` are inserted, in the same order, after `refChild`.</span></span> <span data-ttu-id="9bef1-352">경우는 `newChild` 는 이미 트리에서 원래 위치에서 제거 하 고 대상 위치에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-352">If the `newChild` is already in the tree, it is removed from its original position and added to its target position.</span></span> <span data-ttu-id="9bef1-353">노드를 삽입 하는 방법에 대 한 자세한 내용은 참조 하세요. [XML 문서에 노드 삽입](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-353">For more information about inserting nodes, see [Inserting Nodes into an XML Document](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md).</span></span>  
  
 <span data-ttu-id="9bef1-354">삽입 하는 노드가 다른 문서에서 생성 된 경우 사용할 수 있습니다 <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> 현재 문서에 노드를 가져오려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-354">If the node being inserted was created from another document, you can use <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> to import the node to the current document.</span></span> <span data-ttu-id="9bef1-355">현재 문서에 삽입한 다음 가져온된 노드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-355">The imported node can then be inserted into the current document.</span></span>  
  
 <span data-ttu-id="9bef1-356">이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-356">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9bef1-357">다음 예제에서는 XML 문서에 새 노드를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-357">The following example adds a new node to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.InsertAfter Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.InsertAfter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.InsertAfter Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.InsertAfter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.InsertAfter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.InsertAfter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9bef1-358">이 노드가 <paramref name="newChild" /> 노드 형식의 자식 노드를 허용하지 않는 형식을 가지는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-358">This node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.</span>
          </span>
          <span data-ttu-id="9bef1-359">
            <paramref name="newChild" />가 이 노드의 상위 노드일 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-359">The <paramref name="newChild" /> is an ancestor of this node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9bef1-360">이 노드를 만든 문서가 아닌 다른 문서에서 <paramref name="newChild" />를 만든 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-360">The <paramref name="newChild" /> was created from a different document than the one that created this node.</span>
          </span>
          <span data-ttu-id="9bef1-361">
            <paramref name="refChild" />가 이 노드의 자식이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-361">The <paramref name="refChild" /> is not a child of this node.</span>
          </span>
          <span data-ttu-id="9bef1-362">이 노드가 읽기 전용인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-362">This node is read-only.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="9bef1-363">
            <para>재정의 하는 경우 <see langword="InsertAfter" /> 파생된 클래스에서 올바르게 발생할 이벤트를 위해 호출 해야 합니다는 <see langword="InsertAfter" /> 메서드의 기본 클래스입니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-363">
              <para>When overriding <see langword="InsertAfter" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="InsertAfter" /> method of the base class.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="InsertBefore">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode InsertBefore (System.Xml.XmlNode newChild, System.Xml.XmlNode refChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode InsertBefore(class System.Xml.XmlNode newChild, class System.Xml.XmlNode refChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InsertBefore (newChild As XmlNode, refChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ InsertBefore(System::Xml::XmlNode ^ newChild, System::Xml::XmlNode ^ refChild);" />
      <MemberSignature Language="F#" Value="abstract member InsertBefore : System.Xml.XmlNode * System.Xml.XmlNode -&gt; System.Xml.XmlNode&#xA;override this.InsertBefore : System.Xml.XmlNode * System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlNode.InsertBefore (newChild, refChild)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
        <Parameter Name="refChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild">
          <span data-ttu-id="9bef1-364">삽입할 <see langword="XmlNode" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-364">The <see langword="XmlNode" /> to insert.</span>
          </span>
        </param>
        <param name="refChild">
          <span data-ttu-id="9bef1-365">참조 노드인 <see langword="XmlNode" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-365">The <see langword="XmlNode" /> that is the reference node.</span>
          </span>
          <span data-ttu-id="9bef1-366">
            <c>newChild</c>가 이 노드 앞에 배치됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-366">The <c>newChild</c> is placed before this node.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bef1-367">지정된 노드를 지정된 참조 노드 바로 앞에 삽입합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-367">Inserts the specified node immediately before the specified reference node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bef1-368">삽입할 노드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-368">The node being inserted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-369">하는 경우 `refChild` 됩니다 `null`, 삽입 `newChild` 자식 노드 목록 끝에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-369">If `refChild` is `null`, insert `newChild` at the end of the list of child nodes.</span></span> <span data-ttu-id="9bef1-370">모든 내용을 합니다 `newChild` 삽입 되 면 동일한 순서로 전에 `refChild`입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-370">All the contents of the `newChild` are inserted, in the same order, before `refChild`.</span></span> <span data-ttu-id="9bef1-371">경우는 `newChild` 는 이미 트리에서 원래 위치에서 제거 하 고 대상 위치에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-371">If the `newChild` is already in the tree, it is removed from its original position and added to its target position.</span></span> <span data-ttu-id="9bef1-372">노드를 삽입 하는 방법에 대 한 자세한 내용은 참조 하세요. [XML 문서에 노드 삽입](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-372">For more information about inserting nodes, see [Inserting Nodes into an XML Document](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md).</span></span>  
  
 <span data-ttu-id="9bef1-373">삽입 하는 노드가 다른 문서에서 생성 된 경우 사용할 수 있습니다 <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> 현재 문서에 노드를 가져오려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-373">If the node being inserted was created from another document, you can use <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> to import the node to the current document.</span></span> <span data-ttu-id="9bef1-374">현재 문서에 삽입한 다음 가져온된 노드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-374">The imported node can then be inserted into the current document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9bef1-375">다음 예제에서는 XML 문서에 새 노드를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-375">The following example adds a new node to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.InsertBefore Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.InsertBefore Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.InsertBefore Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.InsertBefore Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.InsertBefore Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.InsertBefore Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9bef1-376">현재 노드가 <paramref name="newChild" /> 노드 형식의 자식 노드를 허용하지 않는 형식인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-376">The current node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.</span>
          </span>
          <span data-ttu-id="9bef1-377">
            <paramref name="newChild" />가 이 노드의 상위 노드일 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-377">The <paramref name="newChild" /> is an ancestor of this node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9bef1-378">이 노드를 만든 문서가 아닌 다른 문서에서 <paramref name="newChild" />를 만든 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-378">The <paramref name="newChild" /> was created from a different document than the one that created this node.</span>
          </span>
          <span data-ttu-id="9bef1-379">
            <paramref name="refChild" />가 이 노드의 자식이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-379">The <paramref name="refChild" /> is not a child of this node.</span>
          </span>
          <span data-ttu-id="9bef1-380">이 노드가 읽기 전용인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-380">This node is read-only.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="9bef1-381">
            <para>재정의 하는 경우 <see langword="InsertBefore" /> 파생된 클래스에서 올바르게 발생할 이벤트를 위해 호출 해야 합니다는 <see langword="InsertBefore" /> 메서드의 기본 클래스입니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-381">
              <para>When overriding <see langword="InsertBefore" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="InsertBefore" /> method of the base class.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Xml.XmlNode.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9bef1-382">노드가 읽기 전용인지를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-382">Gets a value indicating whether the node is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9bef1-383">노드가 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-383">
              <see langword="true" /> if the node is read-only; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-384">읽기 전용 노드는 해당 속성, 특성 또는 자식 노드를 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-384">A read-only node is one whose properties, attributes, or child nodes cannot be changed.</span></span> <span data-ttu-id="9bef1-385">읽기 전용 노드 트리에서 제거 하 고 다른 위치에 삽입할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-385">You can remove a read-only node from the tree and insert it somewhere else.</span></span> <span data-ttu-id="9bef1-386">예를 들어, 엔터티 노드는 항상 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-386">For example, Entity nodes are always read-only.</span></span>  
  
 <span data-ttu-id="9bef1-387">이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-387">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9bef1-388">지정된 자식 요소를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-388">Gets the specified child element.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlElement Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(name As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlElement ^ default[System::String ^] { System::Xml::XmlElement ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Xml.XmlElement" Usage="System.Xml.XmlNode.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="9bef1-389">검색할 요소의 정규화된 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-389">The qualified name of the element to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bef1-390">지정된 <see cref="P:System.Xml.XmlNode.Name" />을 가진 첫 번째 자식 요소를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-390">Gets the first child element with the specified <see cref="P:System.Xml.XmlNode.Name" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9bef1-391">지정된 이름과 일치하는 첫 번째 <see cref="T:System.Xml.XmlElement" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-391">The first <see cref="T:System.Xml.XmlElement" /> that matches the specified name.</span>
          </span>
          <span data-ttu-id="9bef1-392">일치되는 항목이 없으면 null 참조(Visual Basic의 경우 <see langword="Nothing" />)를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-392">It returns a null reference (<see langword="Nothing" /> in Visual Basic) if there is no match.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-393">이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-393">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9bef1-394">다음 예제에서는 title 요소를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-394">The following example displays the title element.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.this Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.this Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.this Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement this[string localname, string ns] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlElement Item(string, string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Item(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(localname As String, ns As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlElement ^ default[System::String ^, System::String ^] { System::Xml::XmlElement ^ get(System::String ^ localname, System::String ^ ns); };" />
      <MemberSignature Language="F#" Value="member this.Item(string * string) : System.Xml.XmlElement" Usage="System.Xml.XmlNode.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localname" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localname">
          <span data-ttu-id="9bef1-395">요소의 로컬 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-395">The local name of the element.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="9bef1-396">요소의 네임스페이스 URI입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-396">The namespace URI of the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bef1-397">지정된 <see cref="P:System.Xml.XmlNode.LocalName" />과 <see cref="P:System.Xml.XmlNode.NamespaceURI" />를 갖고 있는 첫 번째 자식 요소를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-397">Gets the first child element with the specified <see cref="P:System.Xml.XmlNode.LocalName" /> and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9bef1-398">일치하는 <paramref name="localname" />과 <paramref name="ns" />를 갖고 있는 첫 번째 <see cref="T:System.Xml.XmlElement" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-398">The first <see cref="T:System.Xml.XmlElement" /> with the matching <paramref name="localname" /> and <paramref name="ns" />.</span>
          </span>
          <span data-ttu-id="9bef1-399">.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-399">.</span>
          </span>
          <span data-ttu-id="9bef1-400">일치되는 항목이 없으면 null 참조(Visual Basic의 경우 <see langword="Nothing" />)를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-400">It returns a null reference (<see langword="Nothing" /> in Visual Basic) if there is no match.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-401">이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-401">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode LastChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode LastChild" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.LastChild" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LastChild As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ LastChild { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LastChild : System.Xml.XmlNode" Usage="System.Xml.XmlNode.LastChild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9bef1-402">노드의 마지막 자식을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-402">Gets the last child of the node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9bef1-403">노드의 마지막 자식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-403">The last child of the node.</span>
          </span>
          <span data-ttu-id="9bef1-404">이러한 노드가 없으면, <see langword="null" />이 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-404">If there is no such node, <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9bef1-405">다음 예제에서는 가격 요소를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-405">The following example displays the price element.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.LastChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.LastChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.LastChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public abstract string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="System.Xml.XmlNode.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9bef1-406">파생 클래스에서 재정의되면 노드의 로컬 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-406">Gets the local name of the node, when overridden in a derived class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9bef1-407">접두사를 제거한 노드의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-407">The name of the node with the prefix removed.</span>
          </span>
          <span data-ttu-id="9bef1-408">예를 들어 <see langword="LocalName" /> 은 요소 book &lt;예&gt;합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-408">For example, <see langword="LocalName" /> is book for the element &lt;bk:book&gt;.</span>
          </span>
          <span data-ttu-id="9bef1-409">반환되는 이름은 다음과 같이 노드의 <see cref="P:System.Xml.XmlNode.NodeType" />에 따라 달라집니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-409">The name returned is dependent on the <see cref="P:System.Xml.XmlNode.NodeType" /> of the node:</span>
          </span>
          <span data-ttu-id="9bef1-410">
            <list type="table">
              <listheader>
                <term> 형식 </term>
                <description> 이름 </description>
              </listheader>
              <item>
                <term> 특성 </term>
                <description> 특성의 로컬 이름입니다.  </description>
              </item>
              <item>
                <term> CDATA </term>
                <description> #cdata 섹션 </description>
              </item>
              <item>
                <term> 주석 </term>
                <description> #comment </description>
              </item>
              <item>
                <term> 문서 </term>
                <description> #document </description>
              </item>
              <item>
                <term> DocumentFragment </term>
                <description> #document 조각 </description>
              </item>
              <item>
                <term> DocumentType </term>
                <description> 문서 형식 이름입니다.  </description>
              </item>
              <item>
                <term> 요소 </term>
                <description> 요소의 로컬 이름입니다.  </description>
              </item>
              <item>
                <term> 엔터티 </term>
                <description> 엔터티의 이름입니다.  </description>
              </item>
              <item>
                <term> EntityReference </term>
                <description> 참조 엔터티의 이름입니다.  </description>
              </item>
              <item>
                <term> 표기법 </term>
                <description> 표기법 이름입니다.  </description>
              </item>
              <item>
                <term> ProcessingInstruction </term>
                <description> 처리 명령의 대상입니다.  </description>
              </item>
              <item>
                <term> 텍스트 </term>
                <description> #text </description>
              </item>
              <item>
                <term> 공백 </term>
                <description> #whitespace </description>
              </item>
              <item>
                <term> SignificantWhitespace </term>
                <description> 공백이 #significant </description>
              </item>
              <item>
                <term> XmlDeclaration </term>
                <description> #xml 선언  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-410">
              <list type="table">
                <listheader>
                  <term> Type  </term>
                  <description> Name  </description>
                </listheader>
                <item>
                  <term> Attribute  </term>
                  <description> The local name of the attribute.  </description>
                </item>
                <item>
                  <term> CDATA  </term>
                  <description> #cdata-section  </description>
                </item>
                <item>
                  <term> Comment  </term>
                  <description> #comment  </description>
                </item>
                <item>
                  <term> Document  </term>
                  <description> #document  </description>
                </item>
                <item>
                  <term> DocumentFragment  </term>
                  <description> #document-fragment  </description>
                </item>
                <item>
                  <term> DocumentType  </term>
                  <description> The document type name.  </description>
                </item>
                <item>
                  <term> Element  </term>
                  <description> The local name of the element.  </description>
                </item>
                <item>
                  <term> Entity  </term>
                  <description> The name of the entity.  </description>
                </item>
                <item>
                  <term> EntityReference  </term>
                  <description> The name of the entity referenced.  </description>
                </item>
                <item>
                  <term> Notation  </term>
                  <description> The notation name.  </description>
                </item>
                <item>
                  <term> ProcessingInstruction  </term>
                  <description> The target of the processing instruction.  </description>
                </item>
                <item>
                  <term> Text  </term>
                  <description> #text  </description>
                </item>
                <item>
                  <term> Whitespace  </term>
                  <description> #whitespace  </description>
                </item>
                <item>
                  <term> SignificantWhitespace  </term>
                  <description> #significant-whitespace  </description>
                </item>
                <item>
                  <term> XmlDeclaration  </term>
                  <description> #xml-declaration  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-411">LocalName이 같은 노드에 접두사에 없는 경우 <xref:System.Xml.XmlNode.Name%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-411">If the node does not have a prefix, LocalName is the same as <xref:System.Xml.XmlNode.Name%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlNode.Prefix" />
        <altmember cref="P:System.Xml.XmlNode.Name" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xml.XmlNode.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9bef1-412">파생 클래스에서 재정의되면 노드의 정규화된 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-412">Gets the qualified name of the node, when overridden in a derived class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9bef1-413">노드의 정규화된 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-413">The qualified name of the node.</span>
          </span>
          <span data-ttu-id="9bef1-414">반환되는 이름은 다음과 같이 노드의 <see cref="P:System.Xml.XmlNode.NodeType" />에 따라 달라집니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-414">The name returned is dependent on the <see cref="P:System.Xml.XmlNode.NodeType" /> of the node:</span>
          </span>
          <span data-ttu-id="9bef1-415">
            <list type="table">
              <listheader>
                <term> 형식 </term>
                <description> 이름 </description>
              </listheader>
              <item>
                <term> 특성 </term>
                <description> 특성의 정규화 된 이름입니다.  </description>
              </item>
              <item>
                <term> CDATA </term>
                <description> #cdata 섹션 </description>
              </item>
              <item>
                <term> 주석 </term>
                <description> #comment </description>
              </item>
              <item>
                <term> 문서 </term>
                <description> #document </description>
              </item>
              <item>
                <term> DocumentFragment </term>
                <description> #document 조각 </description>
              </item>
              <item>
                <term> DocumentType </term>
                <description> 문서 형식 이름입니다.  </description>
              </item>
              <item>
                <term> 요소 </term>
                <description> 요소의 정규화 된 이름입니다.  </description>
              </item>
              <item>
                <term> 엔터티 </term>
                <description> 엔터티의 이름입니다.  </description>
              </item>
              <item>
                <term> EntityReference </term>
                <description> 참조 엔터티의 이름입니다.  </description>
              </item>
              <item>
                <term> 표기법 </term>
                <description> 표기법 이름입니다.  </description>
              </item>
              <item>
                <term> ProcessingInstruction </term>
                <description> 처리 명령의 대상입니다.  </description>
              </item>
              <item>
                <term> 텍스트 </term>
                <description> #text </description>
              </item>
              <item>
                <term> 공백 </term>
                <description> #whitespace </description>
              </item>
              <item>
                <term> SignificantWhitespace </term>
                <description> 공백이 #significant </description>
              </item>
              <item>
                <term> XmlDeclaration </term>
                <description> #xml 선언  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-415">
              <list type="table">
                <listheader>
                  <term> Type  </term>
                  <description> Name  </description>
                </listheader>
                <item>
                  <term> Attribute  </term>
                  <description> The qualified name of the attribute.  </description>
                </item>
                <item>
                  <term> CDATA  </term>
                  <description> #cdata-section  </description>
                </item>
                <item>
                  <term> Comment  </term>
                  <description> #comment  </description>
                </item>
                <item>
                  <term> Document  </term>
                  <description> #document  </description>
                </item>
                <item>
                  <term> DocumentFragment  </term>
                  <description> #document-fragment  </description>
                </item>
                <item>
                  <term> DocumentType  </term>
                  <description> The document type name.  </description>
                </item>
                <item>
                  <term> Element  </term>
                  <description> The qualified name of the element.  </description>
                </item>
                <item>
                  <term> Entity  </term>
                  <description> The name of the entity.  </description>
                </item>
                <item>
                  <term> EntityReference  </term>
                  <description> The name of the entity referenced.  </description>
                </item>
                <item>
                  <term> Notation  </term>
                  <description> The notation name.  </description>
                </item>
                <item>
                  <term> ProcessingInstruction  </term>
                  <description> The target of the processing instruction.  </description>
                </item>
                <item>
                  <term> Text  </term>
                  <description> #text  </description>
                </item>
                <item>
                  <term> Whitespace  </term>
                  <description> #whitespace  </description>
                </item>
                <item>
                  <term> SignificantWhitespace  </term>
                  <description> #significant-whitespace  </description>
                </item>
                <item>
                  <term> XmlDeclaration  </term>
                  <description> #xml-declaration  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceURI">
      <MemberSignature Language="C#" Value="public virtual string NamespaceURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.NamespaceURI" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NamespaceURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NamespaceURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceURI : string" Usage="System.Xml.XmlNode.NamespaceURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9bef1-416">이 노드의 네임스페이스 URI를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-416">Gets the namespace URI of this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9bef1-417">이 노드의 네임스페이스 URI입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-417">The namespace URI of this node.</span>
          </span>
          <span data-ttu-id="9bef1-418">네임스페이스 URI가 없으면, 이 속성은 String.Empty를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-418">If there is no namespace URI, this property returns String.Empty.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-419">URI를 만들 때 지정한 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-419">This is the namespace URI specified at creation time.</span></span> <span data-ttu-id="9bef1-420">예를 들어 `NamespaceURI` 요소에 대 한 urn: 샘플은 \<예 xmlns:bk = "urn: 예제" ></span><span class="sxs-lookup"><span data-stu-id="9bef1-420">For example, `NamespaceURI` is urn:samples for the element \<bk:book xmlns:bk= "urn:samples"></span></span>  
  
 <span data-ttu-id="9bef1-421">특성에 연결 된 요소에서 해당 네임 스페이스를 상속 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-421">An attribute does not inherit its namespace from the element it is attached to.</span></span> <span data-ttu-id="9bef1-422">특성 네임 스페이스를 명시적으로 지정 하지 않으면 하는 경우이 네임 스페이스가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-422">If an attribute is not explicitly given a namespace, it simply has no namespace.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextSibling">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode NextSibling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode NextSibling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.NextSibling" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NextSibling As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ NextSibling { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextSibling : System.Xml.XmlNode" Usage="System.Xml.XmlNode.NextSibling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9bef1-423">이 노드 바로 다음에 오는 노드를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-423">Gets the node immediately following this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9bef1-424">다음 <see langword="XmlNode" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-424">The next <see langword="XmlNode" />.</span>
          </span>
          <span data-ttu-id="9bef1-425">다음 노드가 없으면 <see langword="null" />이 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-425">If there is no next node, <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9bef1-426">다음 예제에서는 XML 문서에 있는 모든 책을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-426">The following example displays all the books in the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.NextSibling Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.NextSibling Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.NextSibling Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.XmlNode.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9bef1-427">파생 클래스에서 재정의되면 현재 노드의 형식을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-427">Gets the type of the current node, when overridden in a derived class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9bef1-428">
            <see cref="T:System.Xml.XmlNodeType" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-428">One of the <see cref="T:System.Xml.XmlNodeType" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-429">이 속성을 반환 하지 않습니다는 `XmlNodeType` EndElement, EndEntity 또는 None입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-429">This property never returns the `XmlNodeType` EndElement, EndEntity or None.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public virtual void Normalize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Normalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.Normalize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Normalize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Normalize();" />
      <MemberSignature Language="F#" Value="abstract member Normalize : unit -&gt; unit&#xA;override this.Normalize : unit -&gt; unit" Usage="xmlNode.Normalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9bef1-430">이 XmlNode 아래 전체 수준의 하위 트리에 있는 모든 XmlText 노드를 태그(즉, 태그, 주석, 처리 명령, CDATA 섹션 및 엔터티 참조)만이 XmlText 노드를 구분하는, 인접한 XmlText 노드가 없는 "정상적인" 폼에 넣습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-430">Puts all XmlText nodes in the full depth of the sub-tree underneath this XmlNode into a "normal" form where only markup (that is, tags, comments, processing instructions, CDATA sections, and entity references) separates XmlText nodes, that is, there are no adjacent XmlText nodes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-431">문서를 DOM 보기는 동일 저장 및 다시 로드 하는 경우에 따라 되도록이 메서드를 사용할 수 있습니다 및 특정 문서 트리 구조에 종속 된 작업 (예: XPointer 조회)에 사용 하려는 경우에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-431">This method can be used to ensure that the DOM view of a document is the same as if it were saved and re-loaded, and is useful when operations (such as XPointer lookups) that depend on a particular document tree structure are to be used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OuterXml">
      <MemberSignature Language="C#" Value="public virtual string OuterXml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OuterXml" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.OuterXml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OuterXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ OuterXml { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OuterXml : string" Usage="System.Xml.XmlNode.OuterXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9bef1-432">이 노드와 모든 자식 노드를 포함하는 태그를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-432">Gets the markup containing this node and all its child nodes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9bef1-433">이 노드와 모든 자식 노드를 포함하는 태그입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-433">The markup containing this node and all its child nodes.</span>
          </span>
          <span data-ttu-id="9bef1-434">
            <block subset="none" type="note">
              <para>
                <see langword="OuterXml" /> 기본 특성을 반환 하지 않습니다.  </para>
            </block>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-434">
              <block subset="none" type="note">
                <para>
                  <see langword="OuterXml" /> does not return default attributes.  </para>
              </block>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-435">이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-435">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9bef1-436">다음 예제에서 출력을 비교 합니다 <xref:System.Xml.XmlNode.InnerXml%2A> 및 `OuterXml` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-436">The following example compares output from the <xref:System.Xml.XmlNode.InnerXml%2A> and `OuterXml` properties.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.OuterXml Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.OuterXml Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.OuterXml Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.OuterXml Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.OuterXml Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.OuterXml Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerDocument">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlDocument OwnerDocument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDocument OwnerDocument" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.OwnerDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OwnerDocument As XmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlDocument ^ OwnerDocument { System::Xml::XmlDocument ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwnerDocument : System.Xml.XmlDocument" Usage="System.Xml.XmlNode.OwnerDocument" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9bef1-437">이 노드가 속한 <see cref="T:System.Xml.XmlDocument" />를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-437">Gets the <see cref="T:System.Xml.XmlDocument" /> to which this node belongs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9bef1-438">이 노드가 속한 <see cref="T:System.Xml.XmlDocument" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-438">The <see cref="T:System.Xml.XmlDocument" /> to which this node belongs.</span>
          </span>
          <span data-ttu-id="9bef1-439">노드가 <see cref="T:System.Xml.XmlDocument" />(NodeType이 XmlNodeType.Document와 같음)일 경우 이 속성에서는 <see langword="null" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-439">If the node is an <see cref="T:System.Xml.XmlDocument" /> (NodeType equals XmlNodeType.Document), this property returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-440">현재 노드가 노드를 추가 하는 경우 사용 합니다 <xref:System.Xml.XmlDocument> 반환한는 <xref:System.Xml.XmlNode.OwnerDocument%2A> 속성 노드를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-440">When adding nodes to the current node, use the <xref:System.Xml.XmlDocument> returned by the <xref:System.Xml.XmlNode.OwnerDocument%2A> property to create the node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9bef1-441">참조 <xref:System.Xml.XmlElement.OwnerDocument%2A> (XmlElement 클래스)에서이 속성을 사용 하는 예제입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-441">See <xref:System.Xml.XmlElement.OwnerDocument%2A> (in the XmlElement class) for an example using this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode ParentNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode ParentNode" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.ParentNode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ParentNode As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ ParentNode { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentNode : System.Xml.XmlNode" Usage="System.Xml.XmlNode.ParentNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9bef1-442">부모를 가질 수 있는 노드의 경우 이 노드의 부모를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-442">Gets the parent of this node (for nodes that can have parents).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9bef1-443">현재 노드의 부모인 <see langword="XmlNode" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-443">The <see langword="XmlNode" /> that is the parent of the current node.</span>
          </span>
          <span data-ttu-id="9bef1-444">노드를 만들고 트리에 추가하지 않은 경우나 트리에서 노드를 제거한 경우 부모는 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-444">If a node has just been created and not yet added to the tree, or if it has been removed from the tree, the parent is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="9bef1-445">다른 모든 노드의 경우에는 노드의 <see cref="P:System.Xml.XmlNode.NodeType" />에 따라 반환되는 값이 달라집니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-445">For all other nodes, the value returned depends on the <see cref="P:System.Xml.XmlNode.NodeType" /> of the node.</span>
          </span>
          <span data-ttu-id="9bef1-446">다음 표에서는 <see langword="ParentNode" /> 속성에 대해 가능한 반환 값을 설명합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-446">The following table describes the possible return values for the <see langword="ParentNode" /> property.</span>
          </span>
          <span data-ttu-id="9bef1-447">
            <list type="table">
              <listheader>
                <term> NodeType </term>
                <description> ParentNode의 값을 반환 </description>
              </listheader>
              <item>
                <term> 특성, 문서, DocumentFragment, 엔터티, 표기법 </term>
                <description> 반환 <see langword="null" />; 이러한 노드는 부모가 없습니다.  </description>
              </item>
              <item>
                <term> CDATA </term>
                <description> CDATA 섹션이 포함 된 요소나 엔터티 참조를 반환 합니다.  </description>
              </item>
              <item>
                <term> 주석 </term>
                <description> 주석이 포함 된 문서, 문서 형식 또는 요소, 엔터티 참조를 반환 합니다.  </description>
              </item>
              <item>
                <term> DocumentType </term>
                <description> 문서 노드를 반환 합니다.  </description>
              </item>
              <item>
                <term> 요소 </term>
                <description> 요소의 부모 노드를 반환 합니다. 요소가 트리의 루트 노드일 경우 부모는 문서 노드입니다.  </description>
              </item>
              <item>
                <term> EntityReference </term>
                <description> 엔터티 참조가 포함 된 요소, 특성 또는 엔터티 참조를 반환 합니다.  </description>
              </item>
              <item>
                <term> ProcessingInstruction </term>
                <description> 문서, 요소, 문서 형식 또는 처리 명령이 포함 된 엔터티 참조를 반환 합니다.  </description>
              </item>
              <item>
                <term> 텍스트 </term>
                <description> 부모 텍스트 노드를 포함 하는 요소, 특성 또는 엔터티 참조를 반환 합니다.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-447">
              <list type="table">
                <listheader>
                  <term> NodeType  </term>
                  <description> Return Value of ParentNode  </description>
                </listheader>
                <item>
                  <term> Attribute, Document, DocumentFragment, Entity, Notation  </term>
                  <description> Returns <see langword="null" />; these nodes do not have parents.  </description>
                </item>
                <item>
                  <term> CDATA  </term>
                  <description> Returns the element or entity reference containing the CDATA section.  </description>
                </item>
                <item>
                  <term> Comment  </term>
                  <description> Returns the element, entity reference, document type, or document containing the comment.  </description>
                </item>
                <item>
                  <term> DocumentType  </term>
                  <description> Returns the document node.  </description>
                </item>
                <item>
                  <term> Element  </term>
                  <description> Returns the parent node of the element. If the element is the root node in the tree, the parent is the document node.  </description>
                </item>
                <item>
                  <term> EntityReference  </term>
                  <description> Returns the element, attribute, or entity reference containing the entity reference.  </description>
                </item>
                <item>
                  <term> ProcessingInstruction  </term>
                  <description> Returns the document, element, document type, or entity reference containing the processing instruction.  </description>
                </item>
                <item>
                  <term> Text  </term>
                  <description> Returns the parent element, attribute, or entity reference containing the text node.  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-448">부모 및 자식 노드에 대 한 정보를 참조 하세요.를 [W3C DOM (코어) 수준 1 사양은](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span><span class="sxs-lookup"><span data-stu-id="9bef1-448">For information about parent and child nodes, see the [W3C DOM (Core) Level 1 specification](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public virtual string Prefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Prefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string with get, set" Usage="System.Xml.XmlNode.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9bef1-449">이 노드의 네임스페이스 접두사를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-449">Gets or sets the namespace prefix of this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9bef1-450">이 노드의 네임스페이스 접두사입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-450">The namespace prefix of this node.</span>
          </span>
          <span data-ttu-id="9bef1-451">예를 들어 <see langword="Prefix" /> 요소에는 bk &lt;예&gt;합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-451">For example, <see langword="Prefix" /> is bk for the element &lt;bk:book&gt;.</span>
          </span>
          <span data-ttu-id="9bef1-452">접두사가 없으면, 이 속성은 String.Empty를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-452">If there is no prefix, this property returns String.Empty.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-453">허용 되는 경우이 속성을 설정, 변경의 <xref:System.Xml.XmlNode.Name%2A> 요소 및 특성 노드의 정규화 된 이름을 포함 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-453">Setting this property, when permitted, changes the <xref:System.Xml.XmlNode.Name%2A> property, which holds the qualified name, on Element and Attribute nodes.</span></span> <span data-ttu-id="9bef1-454">(예: 텍스트, 주석, EntityReference, CDATA, ProcessingInstruction, 문서 및 DocumentFragment) 접두사를 가질 수 없는 노드 형식에서이 속성을 설정 해도 효과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-454">Setting this property on node types that cannot have a prefix (such as Text, Comment, EntityReference, CDATA, ProcessingInstruction, Document, and DocumentFragment) has no effect.</span></span> <span data-ttu-id="9bef1-455">이 기본값을 사용 하는 것으로 알려져 있는 특성의 접두사를 변경, 기본값을 사용 하 여 새 특성을 만들지 않으며 원래 접두사가 표시 되므로 로컬 이름과 네임 스페이스 URI가 바뀌지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-455">Changing the prefix of an attribute that is known to have a default value, does not make a new attribute with the default value and the original prefix appear, since the namespace URI and local name do not change.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9bef1-456">이 노드가 읽기 전용인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-456">This node is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="9bef1-457">지정된 접두사에 잘못된 문자가 포함된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-457">The specified prefix contains an invalid character.</span>
          </span>
          <span data-ttu-id="9bef1-458">지정된 접두사의 형식이 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-458">The specified prefix is malformed.</span>
          </span>
          <span data-ttu-id="9bef1-459">지정된 접두사가 “xml”이고 이 노드의 namespaceURI가 “http://www.w3.org/XML/1998/namespace”와 다른 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-459">The specified prefix is "xml" and the namespaceURI of this node is different from "http://www.w3.org/XML/1998/namespace".</span>
          </span>
          <span data-ttu-id="9bef1-460">이 노드가 특성이고, 지정된 접두사가 “xmlns”이며, 이 노드의 namespaceURI가 “http://www.w3.org/2000/xmlns/”와 다른 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-460">This node is an attribute and the specified prefix is "xmlns" and the namespaceURI of this node is different from "http://www.w3.org/2000/xmlns/ ".</span>
          </span>
          <span data-ttu-id="9bef1-461">이 노드가 특성이고 이 노드의 qualifiedName이 "xmlns"인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-461">This node is an attribute and the qualifiedName of this node is "xmlns".</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="9bef1-462">
            <para>재정의 하는 경우 <see langword="Prefix" /> 파생된 클래스에서이 속성을 설정할 수 없습니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-462">
              <para>When overriding <see langword="Prefix" /> in a derived class, this property cannot be set.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PrependChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode PrependChild (System.Xml.XmlNode newChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode PrependChild(class System.Xml.XmlNode newChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PrependChild (newChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ PrependChild(System::Xml::XmlNode ^ newChild);" />
      <MemberSignature Language="F#" Value="abstract member PrependChild : System.Xml.XmlNode -&gt; System.Xml.XmlNode&#xA;override this.PrependChild : System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlNode.PrependChild newChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild">
          <span data-ttu-id="9bef1-463">추가할 노드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-463">The node to add.</span>
          </span>
          <span data-ttu-id="9bef1-464">지정된 위치로 이동하는, 추가할 노드의 모든 콘텐츠입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-464">All the contents of the node to be added are moved into the specified location.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bef1-465">지정된 노드를 이 노드의 자식 노드 목록 앞에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-465">Adds the specified node to the beginning of the list of child nodes for this node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bef1-466">추가한 노드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-466">The node added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-467">경우는 `newChild` 는 이미 트리에서 원래 위치에서 제거 하 고 대상 위치에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-467">If the `newChild` is already in the tree, it is removed from its original position and added to its target position.</span></span> <span data-ttu-id="9bef1-468">노드를 삽입 하는 방법에 대 한 자세한 내용은 참조 하세요. [XML 문서에 노드 삽입](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-468">For more information about inserting nodes, see [Inserting Nodes into an XML Document](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md).</span></span>  
  
 <span data-ttu-id="9bef1-469">삽입 하는 노드가 다른 문서에서 생성 된 경우 사용할 수 있습니다 <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> 현재 문서에 노드를 가져오려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-469">If the node being inserted was created from another document, you can use <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> to import the node to the current document.</span></span> <span data-ttu-id="9bef1-470">현재 문서에 삽입한 다음 가져온된 노드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-470">The imported node can then be inserted into the current document.</span></span>  
  
 <span data-ttu-id="9bef1-471">이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-471">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9bef1-472">다음 예제에서는 XML 문서에 새 노드를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-472">The following example adds a new node to the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.PrependChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.PrependChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.PrependChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.PrependChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.PrependChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.PrependChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9bef1-473">이 노드가 <paramref name="newChild" /> 노드 형식의 자식 노드를 허용하지 않는 형식을 가지는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-473">This node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.</span>
          </span>
          <span data-ttu-id="9bef1-474">
            <paramref name="newChild" />가 이 노드의 상위 노드일 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-474">The <paramref name="newChild" /> is an ancestor of this node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9bef1-475">이 노드를 만든 문서가 아닌 다른 문서에서 <paramref name="newChild" />를 만든 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-475">The <paramref name="newChild" /> was created from a different document than the one that created this node.</span>
          </span>
          <span data-ttu-id="9bef1-476">이 노드가 읽기 전용인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-476">This node is read-only.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="9bef1-477">
            <para>재정의 하는 경우 <see langword="PrependChild" /> 파생된 클래스에서 올바르게 발생할 이벤트를 위해 호출 해야 합니다는 <see langword="PrependChild" /> 메서드의 기본 클래스입니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-477">
              <para>When overriding <see langword="PrependChild" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="PrependChild" /> method of the base class.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PreviousSibling">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode PreviousSibling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode PreviousSibling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.PreviousSibling" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreviousSibling As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ PreviousSibling { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreviousSibling : System.Xml.XmlNode" Usage="System.Xml.XmlNode.PreviousSibling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9bef1-478">이 노드 바로 앞에 있는 노드를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-478">Gets the node immediately preceding this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9bef1-479">앞에 있는 <see langword="XmlNode" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-479">The preceding <see langword="XmlNode" />.</span>
          </span>
          <span data-ttu-id="9bef1-480">앞에 노드가 없으면 <see langword="null" />이 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-480">If there is no preceding node, <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9bef1-481">다음 예제에서는 XML 문서에 있는 모든 책을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-481">The following example displays all the books in the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.PreviousSibling Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.PreviousSibling Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.PreviousSibling Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousText">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode PreviousText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode PreviousText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.PreviousText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreviousText As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ PreviousText { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreviousText : System.Xml.XmlNode" Usage="System.Xml.XmlNode.PreviousText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9bef1-482">이 노드 바로 앞에 있는 텍스트 노드를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-482">Gets the text node that immediately precedes this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9bef1-483">
            <see cref="T:System.Xml.XmlNode" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-483">Returns <see cref="T:System.Xml.XmlNode" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-484">이 속성은 보다 빠른 성능을 합니다 <xref:System.Xml.XmlNode.PreviousSibling%2A> 속성이 있지만 사용할 수만 형식의 노드를 가져오려는 <xref:System.Xml.XmlNodeType.Text>합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-484">This property has faster performance than the <xref:System.Xml.XmlNode.PreviousSibling%2A> property but you can use it only to get a node of type <xref:System.Xml.XmlNodeType.Text>.</span></span> <span data-ttu-id="9bef1-485">다른 유형의 노드에이 노드 앞에 오는 사용 합니다 <xref:System.Xml.XmlNode.PreviousSibling%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-485">To get any other type of node that that precedes this node, use the <xref:System.Xml.XmlNode.PreviousSibling%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public virtual void RemoveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.RemoveAll" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAll();" />
      <MemberSignature Language="F#" Value="abstract member RemoveAll : unit -&gt; unit&#xA;override this.RemoveAll : unit -&gt; unit" Usage="xmlNode.RemoveAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9bef1-486">현재 노드의 모든 자식 노드 및/또는 특성을 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-486">Removes all the child nodes and/or attributes of the current node.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-487">특성을 제거 해야 기본 값, 기본값을 포함 하는 특성이 즉시 나타납니다 아는 경우 및 해당 하는 경우 해당 네임 스페이스 URI, 로컬 이름 및 접두사입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-487">If a removed attribute is known to have a default value, an attribute immediately appears containing the default value and, if applicable, the corresponding namespace URI, local name, and prefix.</span></span>  
  
 <span data-ttu-id="9bef1-488">이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-488">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9bef1-489">다음 예제에서는 루트 노드의 모든 자식 및 특성 노드를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-489">The following example removes all child and attribute nodes from the root node.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.RemoveAll Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.RemoveAll Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.RemoveAll Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.RemoveAll Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.RemoveAll Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.RemoveAll Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="9bef1-490">
            <para>재정의 하는 경우 <see langword="RemoveAll" /> 파생된 클래스에서 올바르게 발생할 이벤트를 위해 호출 해야 합니다는 <see langword="RemoveAll" /> 메서드의 기본 클래스입니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-490">
              <para>When overriding <see langword="RemoveAll" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="RemoveAll" /> method of the base class.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RemoveChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode RemoveChild (System.Xml.XmlNode oldChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode RemoveChild(class System.Xml.XmlNode oldChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveChild (oldChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ RemoveChild(System::Xml::XmlNode ^ oldChild);" />
      <MemberSignature Language="F#" Value="abstract member RemoveChild : System.Xml.XmlNode -&gt; System.Xml.XmlNode&#xA;override this.RemoveChild : System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlNode.RemoveChild oldChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="oldChild">
          <span data-ttu-id="9bef1-491">제거할 노드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-491">The node being removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bef1-492">지정된 자식 노드를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-492">Removes specified child node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bef1-493">제거한 노드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-493">The node removed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9bef1-494">다음 예제에서는 XML 문서에서 노드를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-494">The following example removes a node from the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.RemoveChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.RemoveChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.RemoveChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.RemoveChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.RemoveChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.RemoveChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9bef1-495">
            <paramref name="oldChild" />가 이 노드의 자식이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-495">The <paramref name="oldChild" /> is not a child of this node.</span>
          </span>
          <span data-ttu-id="9bef1-496">이 노드가 읽기 전용인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-496">Or this node is read-only.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="9bef1-497">
            <para>재정의 하는 경우 <see langword="RemoveChild" /> 파생된 클래스에서 올바르게 발생할 이벤트를 위해 호출 해야 합니다는 <see langword="RemoveChild" /> 메서드의 기본 클래스입니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-497">
              <para>When overriding <see langword="RemoveChild" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="RemoveChild" /> method of the base class.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ReplaceChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode ReplaceChild (System.Xml.XmlNode newChild, System.Xml.XmlNode oldChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode ReplaceChild(class System.Xml.XmlNode newChild, class System.Xml.XmlNode oldChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReplaceChild (newChild As XmlNode, oldChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ ReplaceChild(System::Xml::XmlNode ^ newChild, System::Xml::XmlNode ^ oldChild);" />
      <MemberSignature Language="F#" Value="abstract member ReplaceChild : System.Xml.XmlNode * System.Xml.XmlNode -&gt; System.Xml.XmlNode&#xA;override this.ReplaceChild : System.Xml.XmlNode * System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlNode.ReplaceChild (newChild, oldChild)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
        <Parameter Name="oldChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild">
          <span data-ttu-id="9bef1-498">자식 목록에 삽입할 새 노드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-498">The new node to put in the child list.</span>
          </span>
        </param>
        <param name="oldChild">
          <span data-ttu-id="9bef1-499">목록에서 대체할 노드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-499">The node being replaced in the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bef1-500">
            <paramref name="oldChild" /> 자식 노드를 <paramref name="newChild" /> 노드로 대체합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-500">Replaces the child node <paramref name="oldChild" /> with <paramref name="newChild" /> node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bef1-501">대체한 노드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-501">The node replaced.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-502">경우는 `newChild` 는 이미 트리에서 먼저 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-502">If the `newChild` is already in the tree, it is first removed.</span></span>  
  
 <span data-ttu-id="9bef1-503">경우는 `newChild` 생성 된 다른 문서에서 사용할 수 있습니다 <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> 현재 문서에 노드를 가져오려는 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-503">If the `newChild` was created from another document, you can use <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> to import the node to the current document.</span></span> <span data-ttu-id="9bef1-504">가져온 후에 전달할 수는 `ReplaceChild` 메서드.</span><span class="sxs-lookup"><span data-stu-id="9bef1-504">The imported node can then be passed to the `ReplaceChild` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9bef1-505">다음 예제에서는 XML 문서의 제목 요소를 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-505">The following example replaces the title element in the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.ReplaceChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.ReplaceChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.ReplaceChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.ReplaceChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.ReplaceChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.ReplaceChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9bef1-506">이 노드가 <paramref name="newChild" /> 노드 형식의 자식 노드를 허용하지 않는 형식을 가지는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-506">This node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.</span>
          </span>
          <span data-ttu-id="9bef1-507">
            <paramref name="newChild" />가 이 노드의 상위 노드일 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-507">The <paramref name="newChild" /> is an ancestor of this node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9bef1-508">이 노드를 만든 문서가 아닌 다른 문서에서 <paramref name="newChild" />를 만든 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-508">The <paramref name="newChild" /> was created from a different document than the one that created this node.</span>
          </span>
          <span data-ttu-id="9bef1-509">이 노드가 읽기 전용인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-509">This node is read-only.</span>
          </span>
          <span data-ttu-id="9bef1-510">
            <paramref name="oldChild" />가 이 노드의 자식이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-510">The <paramref name="oldChild" /> is not a child of this node.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="9bef1-511">
            <para>재정의 하는 경우 <see langword="ReplaceChild" /> 파생된 클래스에서 올바르게 발생할 이벤트를 위해 호출 해야 합니다는 <see langword="ReplaceChild" /> 메서드의 기본 클래스입니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-511">
              <para>When overriding <see langword="ReplaceChild" /> in a derived class, in order for events to be raised correctly, you must call the <see langword="ReplaceChild" /> method of the base class.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SchemaInfo">
      <MemberSignature Language="C#" Value="public virtual System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.IXmlSchemaInfo SchemaInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.SchemaInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SchemaInfo As IXmlSchemaInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::IXmlSchemaInfo ^ SchemaInfo { System::Xml::Schema::IXmlSchemaInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaInfo : System.Xml.Schema.IXmlSchemaInfo" Usage="System.Xml.XmlNode.SchemaInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.IXmlSchemaInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9bef1-512">스키마 유효성 검사의 결과로 이 노드에 할당된 스키마 유효성 검사 이후 정보 집합을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-512">Gets the post schema validation infoset that has been assigned to this node as a result of schema validation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9bef1-513">이 노드의 스키마 유효성 검사 이후 정보 집합이 포함된 <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-513">An <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> object containing the post schema validation infoset of this node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-514"><xref:System.Xml.XmlNode.SchemaInfo%2A> 속성은이 노드는 유효성이 검사 된 경우 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-514">The <xref:System.Xml.XmlNode.SchemaInfo%2A> property is set when this node is validatied.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectNodes">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9bef1-515">XPath 식과 일치하는 노드의 목록을 선택합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-515">Selects a list of nodes matching the XPath expression.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-516">XPath 식에 네임스페이스를 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-516">XPath expressions can include namespaces.</span></span> <span data-ttu-id="9bef1-517">네임스페이스는 `XmlNamespaceManager`를 사용하여 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-517">Namespace resolution is supported using the `XmlNamespaceManager`.</span></span> <span data-ttu-id="9bef1-518">XPath 식에 접두사가 포함 하는 경우 접두사와 네임 스페이스 URI 쌍을 추가 해야 합니다는 `XmlNamespaceManager`합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-518">If the XPath expression includes a prefix, the prefix and namespace URI pair must be added to the `XmlNamespaceManager`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9bef1-519">XPath 식에 접두사가 포함 되어 있지 않으면, 네임 스페이스 URI는 빈 네임 스페이스 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-519">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="9bef1-520">접두사 및 네임 스페이스 URI 계속 추가 해야 XML 기본 네임 스페이스에 포함 된 경우에 `XmlNamespaceManager`고, 그렇지 않으면 노드를 선택할 가져올 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-520">If your XML includes a default namespace, you must still add a prefix and namespace URI to the `XmlNamespaceManager`; otherwise, you will not get any nodes selected.</span></span>  
  
 <span data-ttu-id="9bef1-521">자세한 내용은 [XPath 탐색을 사용 하 여 노드 선택](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-521">For more information, see [Select Nodes Using XPath Navigation](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md).</span></span> <span data-ttu-id="9bef1-522">코드 예를 들어 이전 섹션에서 오버 로드 목록에서 오버 로드를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-522">For code examples, choose an overload from the overload list in the previous section.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectNodes">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNodeList SelectNodes (string xpath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlNodeList SelectNodes(string xpath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.SelectNodes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectNodes (xpath As String) As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlNodeList ^ SelectNodes(System::String ^ xpath);" />
      <MemberSignature Language="F#" Value="member this.SelectNodes : string -&gt; System.Xml.XmlNodeList" Usage="xmlNode.SelectNodes xpath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xpath">
          <span data-ttu-id="9bef1-523">XPath 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-523">The XPath expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bef1-524">XPath 식과 일치하는 노드의 목록을 선택합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-524">Selects a list of nodes matching the XPath expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bef1-525">Xpath 쿼리와 일치하는 노드의 컬렉션이 포함된 <see cref="T:System.Xml.XmlNodeList" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-525">An <see cref="T:System.Xml.XmlNodeList" /> containing a collection of nodes matching the XPath query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-526">XPath 식에서 네임 스페이스 확인에 필요한 경우 사용 해야 합니다 `SelectNodes` 오버 로드를 <xref:System.Xml.XmlNamespaceManager> 인수로 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-526">If the XPath expression requires namespace resolution, you must use the `SelectNodes` overload which takes an <xref:System.Xml.XmlNamespaceManager> as its argument.</span></span> <span data-ttu-id="9bef1-527">`XmlNamespaceManager` 네임 스페이스를 확인 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-527">The `XmlNamespaceManager` is used to resolve namespaces.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9bef1-528">XPath 식에 접두사가 포함 되어 있지 않으면, 네임 스페이스 URI는 빈 네임 스페이스 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-528">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="9bef1-529">XML 기본 네임 스페이스를 포함 하는 경우 반드시 사용 해야는 `XmlNamespaceManager` 접두사와 네임 스페이스 URI 추가 하 고 그렇지 않으면 가져오지 것입니다 모든 노드를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-529">If your XML includes a default namespace, you must still use the `XmlNamespaceManager` and add a prefix and namespace URI to it; otherwise, you will not get any nodes selected.</span></span> <span data-ttu-id="9bef1-530">자세한 내용은 [XPath 탐색을 사용 하 여 노드 선택](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-530">For more information, see [Select Nodes Using XPath Navigation](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9bef1-531">XPath 식을 작성할 때 일반적인 문제는 식에서 작은따옴표 (') 또는 큰따옴표 (")를 포함 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-531">A common issue when formulating XPath expressions is how to include a single quote (') or double quote (") in the expression.</span></span> <span data-ttu-id="9bef1-532">작은따옴표를 포함 하는 값을 검색 하는 경우 문자열을 큰따옴표로 묶어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-532">If you have to search for a value that includes a single quote, you must enclose the string in double quotes.</span></span> <span data-ttu-id="9bef1-533">큰따옴표를 포함 하는 값을 검색 해야 문자열 작은따옴표로 묶어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-533">If you need to search for a value that includes a double quote, you must enclose the string in single quotes.</span></span>  
  
 <span data-ttu-id="9bef1-534">예를 들어, 다음 xml을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-534">For example, suppose you have the following XML:</span></span>  
  
```xml  
<bookstore>  
  <book>  
    <title>&apos;Emma&apos;</title>  
  </book>  
</bookstore>  
```  
  
 <span data-ttu-id="9bef1-535">다음 Visual Basic 코드는 작은따옴표를 포함 하는 요소를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-535">The following Visual Basic code selects an element that contains single quotes:</span></span>  
  
```csharp  
nodeList = root.SelectNodes("//book[contains(title,""'Emma'"")]")  
```  
  
 <span data-ttu-id="9bef1-536">이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-536">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="9bef1-537"><xref:System.Xml.XmlNodeList> 기본 문서 그대로 유지 하는 동안이 메서드에서 반환 된 개체는 잘못 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-537">The <xref:System.Xml.XmlNodeList> object returned by this method will be valid while the underlying document remains unchanged.</span></span> <span data-ttu-id="9bef1-538">예기치 않은 결과가 반환 될 수 있습니다 기본 문서 변경 되 면 (예외가 throw 됩니다).</span><span class="sxs-lookup"><span data-stu-id="9bef1-538">If the underlying document changes, unexpected results may be returned (no exception will be thrown).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9bef1-539">다음 예제에서는 위치는 저자의 성을 Austen, 이며 그런 다음 이러한 책의 가격을 변경 하는 모든 책을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-539">The following example selects all books where the author's last name is Austen, and then changes the price of those books.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.SelectNodes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.SelectNodes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.SelectNodes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/VB/source.vb#1)]  
  
 <span data-ttu-id="9bef1-540">이 예제에서는 다음 XML을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-540">This example uses the following XML:</span></span>  
  
 [!code-xml[Classic WebData XmlNode.SelectNodes Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XPath.XPathException">
          <span data-ttu-id="9bef1-541">XPath 식에 접두사가 포함되어 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-541">The XPath expression contains a prefix.</span>
          </span>
          <span data-ttu-id="9bef1-542">[XPath 예제](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041)를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-542">See [XPath Examples](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041).</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlNode.SelectSingleNode(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectNodes">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNodeList SelectNodes (string xpath, System.Xml.XmlNamespaceManager nsmgr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlNodeList SelectNodes(string xpath, class System.Xml.XmlNamespaceManager nsmgr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectNodes (xpath As String, nsmgr As XmlNamespaceManager) As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlNodeList ^ SelectNodes(System::String ^ xpath, System::Xml::XmlNamespaceManager ^ nsmgr);" />
      <MemberSignature Language="F#" Value="member this.SelectNodes : string * System.Xml.XmlNamespaceManager -&gt; System.Xml.XmlNodeList" Usage="xmlNode.SelectNodes (xpath, nsmgr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
        <Parameter Name="nsmgr" Type="System.Xml.XmlNamespaceManager" />
      </Parameters>
      <Docs>
        <param name="xpath">
          <span data-ttu-id="9bef1-543">XPath 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-543">The XPath expression.</span>
          </span>
          <span data-ttu-id="9bef1-544">[XPath 예제](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041)를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-544">See [XPath Examples](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041).</span>
          </span>
        </param>
        <param name="nsmgr">
          <span data-ttu-id="9bef1-545">XPath 식의 접두사에 대한 네임스페이스를 확인하기 위해 사용할 <see cref="T:System.Xml.XmlNamespaceManager" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-545">An <see cref="T:System.Xml.XmlNamespaceManager" /> to use for resolving namespaces for prefixes in the XPath expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bef1-546">XPath 식과 일치하는 노드의 목록을 선택합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-546">Selects a list of nodes matching the XPath expression.</span>
          </span>
          <span data-ttu-id="9bef1-547">XPath 식에 있는 접두사는 제공된 <see cref="T:System.Xml.XmlNamespaceManager" />를 사용해 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-547">Any prefixes found in the XPath expression are resolved using the supplied <see cref="T:System.Xml.XmlNamespaceManager" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bef1-548">Xpath 쿼리와 일치하는 노드의 컬렉션이 포함된 <see cref="T:System.Xml.XmlNodeList" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-548">An <see cref="T:System.Xml.XmlNodeList" /> containing a collection of nodes matching the XPath query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-549">XPath 식에 네임스페이스를 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-549">XPath expressions can include namespaces.</span></span> <span data-ttu-id="9bef1-550">네임스페이스는 `XmlNamespaceManager`를 사용하여 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-550">Namespace resolution is supported using the `XmlNamespaceManager`.</span></span> <span data-ttu-id="9bef1-551">XPath 식에 접두사가 포함 하는 경우 접두사와 네임 스페이스 URI 쌍을 추가 해야 합니다는 `XmlNamespaceManager`합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-551">If the XPath expression includes a prefix, the prefix and namespace URI pair must be added to the `XmlNamespaceManager`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9bef1-552">XPath 식에 접두사가 포함 되어 있지 않으면, 네임 스페이스 URI는 빈 네임 스페이스 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-552">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="9bef1-553">접두사 및 네임 스페이스 URI 계속 추가 해야 XML 기본 네임 스페이스에 포함 된 경우에 `XmlNamespaceManager`고, 그렇지 않으면 노드를 선택할 가져올 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-553">If your XML includes a default namespace, you must still add a prefix and namespace URI to the `XmlNamespaceManager`; otherwise, you will not get any nodes selected.</span></span> <span data-ttu-id="9bef1-554">자세한 내용은 [XPath 탐색을 사용 하 여 노드 선택](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-554">For more information, see [Select Nodes Using XPath Navigation](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md).</span></span>  
  
 <span data-ttu-id="9bef1-555">예를 들어, 다음 XML을 설치한 경우:</span><span class="sxs-lookup"><span data-stu-id="9bef1-555">For example, if you had the following XML:</span></span>  
  
```xml  
<bookstore xmlns="http://www.lucernepublishing.com">  
 <book>  
   <title>Pride And Prejudice</title>  
 </book>  
</bookstore>  
```  
  
 <span data-ttu-id="9bef1-556">다음 C# 코드는 모든 책 노드를 선택합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-556">The following C# code selects all book nodes:</span></span>  
  
```csharp  
XmlNamespaceManager nsmgr = new XmlNamespaceManager(doc.NameTable);  
nsmgr.AddNamespace("ab", "http://www.lucernepublishing.com");  
XmlNodeList nodelist = doc.SelectNodes("//ab:book", nsmgr);  
```  
  
> [!NOTE]
>  <span data-ttu-id="9bef1-557">XPath 식을 작성할 때 일반적인 문제는 식에서 작은따옴표 (') 또는 큰따옴표 (")를 포함 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-557">A common issue when formulating XPath expressions is how to include a single quote (') or double quote (") in the expression.</span></span> <span data-ttu-id="9bef1-558">작은따옴표를 포함 하는 값을 검색 하는 경우 문자열을 큰따옴표로 묶어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-558">If you have to search for a value that includes a single quote, you must enclose the string in double quotes.</span></span> <span data-ttu-id="9bef1-559">큰따옴표를 포함 하는 값을 검색 해야 문자열 작은따옴표로 묶어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-559">If you need to search for a value that includes a double quote, you must enclose the string in single quotes.</span></span>  
  
 <span data-ttu-id="9bef1-560">예를 들어, 다음 xml을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-560">For example, suppose you have the following XML:</span></span>  
  
```xml  
<bookstore xmlns="http://www.lucernepublishing.com">  
  <book>  
    <title>&apos;Emma&apos;</title>  
  </book>  
</bookstore>  
```  
  
 <span data-ttu-id="9bef1-561">다음 Visual Basic 코드는 작은따옴표를 포함 하는 요소를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-561">The following Visual Basic code selects an element that contains single quotes:</span></span>  
  
```vb  
Dim nsmgr As XmlNamespaceManager = New XmlNamespaceManager(doc.NameTable)  
nsmgr.AddNamespace("ab", "http://www.lucernepublishing.com")  
nodeList = root.SelectNodes("//ab:book[contains(ab:title,""'Emma'"")]", nsmgr)  
```  
  
 <span data-ttu-id="9bef1-562">이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-562">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="9bef1-563"><xref:System.Xml.XmlNodeList> 기본 문서 그대로 유지 하는 동안이 메서드에서 반환 된 개체는 잘못 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-563">The <xref:System.Xml.XmlNodeList> object returned by this method will be valid while the underlying document remains unchanged.</span></span> <span data-ttu-id="9bef1-564">예기치 않은 결과가 반환 될 수 있습니다 기본 문서 변경 되 면 (예외가 throw 됩니다).</span><span class="sxs-lookup"><span data-stu-id="9bef1-564">If the underlying document changes, unexpected results may be returned (no exception will be thrown).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9bef1-565">다음 예제에서는 각 ISBN 특성 값이 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-565">The following example displays the values of each of the ISBN attributes.</span></span> <span data-ttu-id="9bef1-566">사용 하 여이 예제는 <xref:System.Xml.XmlElement> 에서 상속 되는 개체는 <xref:System.Xml.XmlNode> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-566">This example uses an <xref:System.Xml.XmlElement> object, which inherits from the <xref:System.Xml.XmlNode> class.</span></span>  
  
 [!code-cpp[XmlNode.SelectNodes1#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlNode.SelectNodes1/CPP/selectnodes1.cpp#1)]
 [!code-csharp[XmlNode.SelectNodes1#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlNode.SelectNodes1/CS/selectnodes1.cs#1)]
 [!code-vb[XmlNode.SelectNodes1#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlNode.SelectNodes1/VB/selectnodes1.vb#1)]  
  
 <span data-ttu-id="9bef1-567">이 예제에서는 파일을 사용 하 여 `booksort.xml`입력으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-567">The example uses the file, `booksort.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlNode.SelectNodes Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XPath.XPathException">
          <span data-ttu-id="9bef1-568">XPath 식에 <see langword="XmlNamespaceManager" />에서 정의되지 않은 접두사가 포함되어 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-568">The XPath expression contains a prefix which is not defined in the <see langword="XmlNamespaceManager" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectSingleNode">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9bef1-569">XPath 식과 일치하는 첫 번째 <see langword="XmlNode" />를 선택해야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-569">Selects the first <see langword="XmlNode" /> that matches the XPath expression.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-570">XPath 식에 네임스페이스를 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-570">XPath expressions can include namespaces.</span></span> <span data-ttu-id="9bef1-571">네임스페이스는 `XmlNamespaceManager`를 사용하여 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-571">Namespace resolution is supported using the `XmlNamespaceManager`.</span></span> <span data-ttu-id="9bef1-572">XPath 식에 접두사가 포함 하는 경우 접두사와 네임 스페이스 URI 쌍을 추가 해야 합니다는 `XmlNamespaceManager`합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-572">If the XPath expression includes a prefix, the prefix and namespace URI pair must be added to the `XmlNamespaceManager`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9bef1-573">XPath 식에 접두사가 포함 되어 있지 않으면, 네임 스페이스 URI는 빈 네임 스페이스 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-573">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="9bef1-574">접두사 및 네임 스페이스 URI 계속 추가 해야 XML 기본 네임 스페이스에 포함 된 경우에 `XmlNamespaceManager`고, 그렇지 않으면 노드를 선택할 가져올 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-574">If your XML includes a default namespace, you must still add a prefix and namespace URI to the `XmlNamespaceManager`; otherwise, you will not get any nodes selected.</span></span> <span data-ttu-id="9bef1-575">자세한 내용은 [XPath 탐색을 사용 하 여 노드 선택](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-575">For more information, see [Select Nodes Using XPath Navigation](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9bef1-576">다음 예제에서는 일치 하는 작성자 이름 가진 첫 번째 책을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-576">The following example returns the first book with the matching author name.</span></span> <span data-ttu-id="9bef1-577">`XmlNamespaceManager`는 XPath 식에서 기본 네임스페이스를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-577">The `XmlNamespaceManager` resolves the default namespace in the XPath expression.</span></span>  
  
 [!code-cpp[XmlNode.SelectSingleNode2#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlNode.SelectSingleNode2/CPP/XmlNode.SelectSingleNode2.cpp#1)]
 [!code-csharp[XmlNode.SelectSingleNode2#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlNode.SelectSingleNode2/CS/selectsingnode2.cs#1)]
 [!code-vb[XmlNode.SelectSingleNode2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlNode.SelectSingleNode2/VB/selectsingnode2.vb#1)]  
  
 <span data-ttu-id="9bef1-578">이 예제에서는 파일을 사용 하 여 `newbooks.xml`입력으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-578">The example uses the file, `newbooks.xml`, as input.</span></span>  
  
 [!code-xml[XmlNode.SelectSingleNode2#2](~/samples/snippets/xml/VS_Snippets_Data/XmlNode.SelectSingleNode2/XML/newbooks.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectSingleNode">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNode SelectSingleNode (string xpath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlNode SelectSingleNode(string xpath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.SelectSingleNode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectSingleNode (xpath As String) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlNode ^ SelectSingleNode(System::String ^ xpath);" />
      <MemberSignature Language="F#" Value="member this.SelectSingleNode : string -&gt; System.Xml.XmlNode" Usage="xmlNode.SelectSingleNode xpath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xpath">
          <span data-ttu-id="9bef1-579">XPath 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-579">The XPath expression.</span>
          </span>
          <span data-ttu-id="9bef1-580">[XPath 예제](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041)를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-580">See [XPath Examples](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bef1-581">XPath 식과 일치하는 첫 번째 <see langword="XmlNode" />를 선택해야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-581">Selects the first <see langword="XmlNode" /> that matches the XPath expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bef1-582">XPath 쿼리와 일치하는 첫 번째 <see langword="XmlNode" />이거나, 일치하는 노드가 없는 경우에는 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-582">The first <see langword="XmlNode" /> that matches the XPath query or <see langword="null" /> if no matching node is found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-583">XPath 식에서 네임 스페이스 확인에 필요한 경우 사용 해야 합니다 `SelectSingleNode` 오버 로드를 <xref:System.Xml.XmlNamespaceManager> 인수로 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-583">If the XPath expression requires namespace resolution, you must use the `SelectSingleNode` overload which takes an <xref:System.Xml.XmlNamespaceManager> as its argument.</span></span> <span data-ttu-id="9bef1-584">`XmlNamespaceManager` 네임 스페이스를 확인 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-584">The `XmlNamespaceManager` is used to resolve namespaces.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9bef1-585">XPath 식에 접두사가 포함 되어 있지 않으면, 네임 스페이스 URI는 빈 네임 스페이스 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-585">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="9bef1-586">XML에 기본 네임 스페이스를 포함 하는 경우 반드시 사용 해야는 `XmlNamespaceManager` 접두사와 네임 스페이스 URI 추가 하 고 그렇지 않으면 가져오지 것입니다 선택한 노드.</span><span class="sxs-lookup"><span data-stu-id="9bef1-586">If your XML includes a default namespace, you must still use the `XmlNamespaceManager` and add a prefix and namespace URI to it; otherwise, you will not get a selected node.</span></span> <span data-ttu-id="9bef1-587">자세한 내용은 [XPath 탐색을 사용 하 여 노드 선택](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-587">For more information, see [Select Nodes Using XPath Navigation](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9bef1-588">XPath 식을 작성할 때 일반적인 문제는 식에서 작은따옴표 (') 또는 큰따옴표 (")를 포함 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-588">A common issue when formulating XPath expressions is how to include a single quote (') or double quote (") in the expression.</span></span> <span data-ttu-id="9bef1-589">작은따옴표를 포함 하는 값을 검색 하는 경우 문자열을 큰따옴표로 묶어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-589">If you have to search for a value that includes a single quote, you must enclose the string in double quotes.</span></span> <span data-ttu-id="9bef1-590">큰따옴표를 포함 하는 값을 검색 해야 문자열 작은따옴표로 묶어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-590">If you need to search for a value that includes a double quote, you must enclose the string in single quotes.</span></span>  
  
 <span data-ttu-id="9bef1-591">예를 들어, 다음 xml을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-591">For example, suppose you have the following XML:</span></span>  
  
```xml  
<bookstore>  
  <book>  
    <title>&apos;Emma&apos;</title>  
  </book>  
</bookstore>  
```  
  
 <span data-ttu-id="9bef1-592">다음 Visual Basic 코드는 작은따옴표를 포함 하는 요소를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-592">The following Visual Basic code selects an element that contains single quotes:</span></span>  
  
```  
book = root.SelectSingleNode("descendant::book[title=""'Emma'""]")  
```  
  
 <span data-ttu-id="9bef1-593">이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-593">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9bef1-594">다음 예제에서는 첫 번째 Jane Austen 책의 가격을 변경합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-594">The following example changes the price of the first Jane Austen book.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.SelectSingleNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.SelectSingleNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.SelectSingleNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.SelectSingleNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.SelectSingleNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.SelectSingleNode Example/VB/source.vb#1)]  
  
 <span data-ttu-id="9bef1-595">이 예제에서는 파일을 사용 하 여 `booksort.xml`입력으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-595">The example uses the file, `booksort.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlNode.SelectSingleNode Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNode.SelectSingleNode Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XPath.XPathException">
          <span data-ttu-id="9bef1-596">XPath 식에 접두사가 포함되어 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-596">The XPath expression contains a prefix.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlNode.SelectNodes(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectSingleNode">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNode SelectSingleNode (string xpath, System.Xml.XmlNamespaceManager nsmgr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlNode SelectSingleNode(string xpath, class System.Xml.XmlNamespaceManager nsmgr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectSingleNode (xpath As String, nsmgr As XmlNamespaceManager) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlNode ^ SelectSingleNode(System::String ^ xpath, System::Xml::XmlNamespaceManager ^ nsmgr);" />
      <MemberSignature Language="F#" Value="member this.SelectSingleNode : string * System.Xml.XmlNamespaceManager -&gt; System.Xml.XmlNode" Usage="xmlNode.SelectSingleNode (xpath, nsmgr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
        <Parameter Name="nsmgr" Type="System.Xml.XmlNamespaceManager" />
      </Parameters>
      <Docs>
        <param name="xpath">
          <span data-ttu-id="9bef1-597">XPath 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-597">The XPath expression.</span>
          </span>
          <span data-ttu-id="9bef1-598">[XPath 예제](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041)를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-598">See [XPath Examples](http://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041).</span>
          </span>
        </param>
        <param name="nsmgr">
          <span data-ttu-id="9bef1-599">XPath 식의 접두사에 대한 네임스페이스를 확인하기 위해 사용할 <see cref="T:System.Xml.XmlNamespaceManager" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-599">An <see cref="T:System.Xml.XmlNamespaceManager" /> to use for resolving namespaces for prefixes in the XPath expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bef1-600">XPath 식과 일치하는 첫 번째 <see langword="XmlNode" />를 선택해야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-600">Selects the first <see langword="XmlNode" /> that matches the XPath expression.</span>
          </span>
          <span data-ttu-id="9bef1-601">XPath 식에 있는 접두사는 제공된 <see cref="T:System.Xml.XmlNamespaceManager" />를 사용해 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-601">Any prefixes found in the XPath expression are resolved using the supplied <see cref="T:System.Xml.XmlNamespaceManager" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bef1-602">XPath 쿼리와 일치하는 첫 번째 <see langword="XmlNode" />이거나, 일치하는 노드가 없는 경우에는 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-602">The first <see langword="XmlNode" /> that matches the XPath query or <see langword="null" /> if no matching node is found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-603">XPath 식에 네임스페이스를 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-603">XPath expressions can include namespaces.</span></span> <span data-ttu-id="9bef1-604">네임스페이스는 `XmlNamespaceManager`를 사용하여 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-604">Namespace resolution is supported using the `XmlNamespaceManager`.</span></span> <span data-ttu-id="9bef1-605">XPath 식에 접두사가 포함 하는 경우 접두사와 네임 스페이스 URI 쌍을 추가 해야 합니다는 `XmlNamespaceManager`합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-605">If the XPath expression includes a prefix, the prefix and namespace URI pair must be added to the `XmlNamespaceManager`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9bef1-606">XPath 식에 접두사가 포함 되어 있지 않으면, 네임 스페이스 URI는 빈 네임 스페이스 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-606">If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</span></span> <span data-ttu-id="9bef1-607">접두사 및 네임 스페이스 URI 계속 추가 해야 XML 기본 네임 스페이스에 포함 된 경우에 `XmlNamespaceManager`그렇지 않은 경우 선택한 노드 가져올 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-607">If your XML includes a default namespace, you must still add a prefix and namespace URI to the `XmlNamespaceManager`; otherwise, you will not get a node selected.</span></span> <span data-ttu-id="9bef1-608">자세한 내용은 [XPath 탐색을 사용 하 여 노드 선택](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-608">For more information, see [Select Nodes Using XPath Navigation](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md).</span></span>  
  
 <span data-ttu-id="9bef1-609">예를 들어, 다음 XML을 설치한 경우:</span><span class="sxs-lookup"><span data-stu-id="9bef1-609">For example, if you had the following XML:</span></span>  
  
```xml  
<bookstore xmlns="http://www.lucernepublishing.com">  
 <book>  
   <title>Pride And Prejudice</title>  
 </book>  
</bookstore>  
```  
  
 <span data-ttu-id="9bef1-610">다음 C# 코드는 첫 번째 book 노드를 선택합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-610">The following C# code selects the first book node:</span></span>  
  
```csharp  
XmlNamespaceManager nsmgr = new XmlNamespaceManager(doc.NameTable);  
nsmgr.AddNamespace("ab", "http://www.lucernepublishing.com");  
XmlNode book = doc.SelectSingleNode("//ab:book", nsmgr);  
```  
  
> [!NOTE]
>  <span data-ttu-id="9bef1-611">XPath 식을 작성할 때 일반적인 문제는 식에서 작은따옴표 (') 또는 큰따옴표 (")를 포함 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-611">A common issue when formulating XPath expressions is how to include a single quote (') or double quote (") in the expression.</span></span> <span data-ttu-id="9bef1-612">작은따옴표를 포함 하는 값을 검색 하는 경우 문자열을 큰따옴표로 묶어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-612">If you have to search for a value that includes a single quote, you must enclose the string in double quotes.</span></span> <span data-ttu-id="9bef1-613">큰따옴표를 포함 하는 값을 검색 해야 문자열 작은따옴표로 묶어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-613">If you need to search for a value that includes a double quote, you must enclose the string in single quotes.</span></span>  
  
 <span data-ttu-id="9bef1-614">예를 들어, 다음 xml을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-614">For example, suppose you have the following XML:</span></span>  
  
```xml  
<bookstore xmlns="http://www.lucernepublishing.com">  
  <book>  
    <title>&apos;Emma&apos;</title>  
  </book>  
</bookstore>  
```  
  
 <span data-ttu-id="9bef1-615">다음 Visual Basic 코드는 작은따옴표를 포함 하는 요소를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-615">The following Visual Basic code selects an element that contains single quotes:</span></span>  
  
```vb  
Dim nsmgr As XmlNamespaceManager = New XmlNamespaceManager(doc.NameTable)  
nsmgr.AddNamespace("ab", "http://www.lucernepublishing.com")  
book = root.SelectSingleNode("descendant::ab:book[ab:title=""'Emma'""]", nsmgr)  
```  
  
 <span data-ttu-id="9bef1-616">이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-616">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9bef1-617">다음 예제에서는 ISBN 값이 일치 하는 책을 선택합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-617">The following example selects the book with the matching ISBN value.</span></span>  
  
 [!code-cpp[XmlNode.SelectSingleNode1#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlNode.SelectSingleNode1/CPP/selectsingnode.cpp#1)]
 [!code-csharp[XmlNode.SelectSingleNode1#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlNode.SelectSingleNode1/CS/selectsingnode.cs#1)]
 [!code-vb[XmlNode.SelectSingleNode1#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlNode.SelectSingleNode1/VB/selectsingnode.vb#1)]  
  
 <span data-ttu-id="9bef1-618">이 예제에서는 파일을 사용 하 여 `booksort.xml`입력으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-618">The example uses the file, `booksort.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlNode.SelectNodes Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XPath.XPathException">
          <span data-ttu-id="9bef1-619">XPath 식에 <see langword="XmlNamespaceManager" />에서 정의되지 않은 접두사가 포함되어 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-619">The XPath expression contains a prefix which is not defined in the <see langword="XmlNamespaceManager" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Supports">
      <MemberSignature Language="C#" Value="public virtual bool Supports (string feature, string version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Supports(string feature, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.Supports(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Supports (feature As String, version As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Supports(System::String ^ feature, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member Supports : string * string -&gt; bool&#xA;override this.Supports : string * string -&gt; bool" Usage="xmlNode.Supports (feature, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="feature" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="feature">
          <span data-ttu-id="9bef1-620">테스트할 기능의 패키지 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-620">The package name of the feature to test.</span>
          </span>
          <span data-ttu-id="9bef1-621">대/소문자를 구분하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-621">This name is not case-sensitive.</span>
          </span>
        </param>
        <param name="version">
          <span data-ttu-id="9bef1-622">테스트할 패키지 이름의 버전 번호입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-622">The version number of the package name to test.</span>
          </span>
          <span data-ttu-id="9bef1-623">버전을 지정하지 않을 경우(null), 모든 버전의 기능을 지원하면 메서드에서 true를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-623">If the version is not specified (null), supporting any version of the feature causes the method to return true.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bef1-624">DOM 구현에서 특정 기능을 구현하는지 테스트합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-624">Tests if the DOM implementation implements a specific feature.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bef1-625">지정된 버전에 기능이 구현되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-625">
              <see langword="true" /> if the feature is implemented in the specified version; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="9bef1-626">다음 표에서는 <see langword="true" />를 반환하는 조합을 설명합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-626">The following table describes the combinations that return <see langword="true" />.</span>
          </span>
          <span data-ttu-id="9bef1-627">
            <list type="table">
              <listheader>
                <term> 기능  </term>
                <description> 버전  </description>
              </listheader>
              <item>
                <term> XML  </term>
                <description> 1.0  </description>
              </item>
              <item>
                <term> XML  </term>
                <description> 2.0  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-627">
              <list type="table">
                <listheader>
                  <term> Feature  </term>
                  <description> Version  </description>
                </listheader>
                <item>
                  <term> XML  </term>
                  <description> 1.0  </description>
                </item>
                <item>
                  <term> XML  </term>
                  <description> 2.0  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9bef1-628">이 멤버에 대한 설명은 <see cref="M:System.Xml.XmlNode.GetEnumerator" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-628">For a description of this member, see <see cref="M:System.Xml.XmlNode.GetEnumerator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bef1-629">컬렉션에 대한 열거자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-629">Returns an enumerator for the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-630">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="9bef1-630">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9bef1-631"><xref:System.Xml.XmlNode> 인스턴스가 <xref:System.Collections.IEnumerable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-631">It can be used only when the <xref:System.Xml.XmlNode> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9bef1-632">이 멤버에 대한 설명은 <see cref="M:System.Xml.XmlNode.Clone" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-632">For a description of this member, see <see cref="M:System.Xml.XmlNode.Clone" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bef1-633">메서드를 호출한 노드의 복사본입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-633">A copy of the node from which it is called.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-634">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="9bef1-634">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9bef1-635"><xref:System.Xml.XmlNode> 인스턴스가 <xref:System.ICloneable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-635">It can be used only when the <xref:System.Xml.XmlNode> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public virtual string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Xml.XmlNode.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9bef1-636">노드의 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-636">Gets or sets the value of the node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9bef1-637">노드의 <see cref="P:System.Xml.XmlNode.NodeType" />에 따라 반환되는 값이 달라집니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-637">The value returned depends on the <see cref="P:System.Xml.XmlNode.NodeType" /> of the node:</span>
          </span>
          <span data-ttu-id="9bef1-638">
            <list type="table">
              <listheader>
                <term> 형식 </term>
                <description> 값 </description>
              </listheader>
              <item>
                <term> 특성 </term>
                <description> 특성의 값입니다.  </description>
              </item>
              <item>
                <term> CDATASection </term>
                <description> CDATA 섹션의 콘텐츠입니다.  </description>
              </item>
              <item>
                <term> 주석 </term>
                <description> 주석의 콘텐츠입니다.  </description>
              </item>
              <item>
                <term> 문서 </term>
                <description>
                  <see langword="null" />합니다.  </description>
              </item>
              <item>
                <term> DocumentFragment </term>
                <description>
                  <see langword="null" />합니다.  </description>
              </item>
              <item>
                <term> DocumentType </term>
                <description>
                  <see langword="null" />합니다.  </description>
              </item>
              <item>
                <term> 요소 </term>
                <description>
                  <see langword="null" />합니다. 사용할 수는 <see cref="P:System.Xml.XmlElement.InnerText" /> 또는 <see cref="P:System.Xml.XmlElement.InnerXml" /> 요소 노드의 값에 액세스 하는 속성입니다.  </description>
              </item>
              <item>
                <term> 엔터티 </term>
                <description>
                  <see langword="null" />합니다.  </description>
              </item>
              <item>
                <term> EntityReference </term>
                <description>
                  <see langword="null" />합니다.  </description>
              </item>
              <item>
                <term> 표기법 </term>
                <description>
                  <see langword="null" />합니다.  </description>
              </item>
              <item>
                <term> ProcessingInstruction </term>
                <description> 대상을 제외한 전체 콘텐츠입니다.  </description>
              </item>
              <item>
                <term> 텍스트 </term>
                <description> 텍스트 노드의 콘텐츠입니다.  </description>
              </item>
              <item>
                <term> SignificantWhitespace </term>
                <description> 공백 문자입니다. 공백은 하나 이상의 스페이스 문자, 캐리지 리턴, 줄 바꿈 또는 탭 등으로 구성될 수 있습니다.  </description>
              </item>
              <item>
                <term> 공백이 </term>
                <description> 공백 문자입니다. 공백은 하나 이상의 스페이스 문자, 캐리지 리턴, 줄 바꿈 또는 탭 등으로 구성될 수 있습니다.  </description>
              </item>
              <item>
                <term> XmlDeclaration </term>
                <description> 선언의 콘텐츠 (사이의 모든 내용, 즉 &lt;? xml 및?&gt;).  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-638">
              <list type="table">
                <listheader>
                  <term> Type  </term>
                  <description> Value  </description>
                </listheader>
                <item>
                  <term> Attribute  </term>
                  <description> The value of the attribute.  </description>
                </item>
                <item>
                  <term> CDATASection  </term>
                  <description> The content of the CDATA Section.  </description>
                </item>
                <item>
                  <term> Comment  </term>
                  <description> The content of the comment.  </description>
                </item>
                <item>
                  <term> Document  </term>
                  <description>
                    <see langword="null" />.  </description>
                </item>
                <item>
                  <term> DocumentFragment  </term>
                  <description>
                    <see langword="null" />.  </description>
                </item>
                <item>
                  <term> DocumentType  </term>
                  <description>
                    <see langword="null" />.  </description>
                </item>
                <item>
                  <term> Element  </term>
                  <description>
                    <see langword="null" />. You can use the <see cref="P:System.Xml.XmlElement.InnerText" /> or <see cref="P:System.Xml.XmlElement.InnerXml" /> properties to access the value of the element node.  </description>
                </item>
                <item>
                  <term> Entity  </term>
                  <description>
                    <see langword="null" />.  </description>
                </item>
                <item>
                  <term> EntityReference  </term>
                  <description>
                    <see langword="null" />.  </description>
                </item>
                <item>
                  <term> Notation  </term>
                  <description>
                    <see langword="null" />.  </description>
                </item>
                <item>
                  <term> ProcessingInstruction  </term>
                  <description> The entire content excluding the target.  </description>
                </item>
                <item>
                  <term> Text  </term>
                  <description> The content of the text node.  </description>
                </item>
                <item>
                  <term> SignificantWhitespace  </term>
                  <description> The white space characters. White space can consist of one or more space characters, carriage returns, line feeds, or tabs.  </description>
                </item>
                <item>
                  <term> Whitespace  </term>
                  <description> The white space characters. White space can consist of one or more space characters, carriage returns, line feeds, or tabs.  </description>
                </item>
                <item>
                  <term> XmlDeclaration  </term>
                  <description> The content of the declaration (that is, everything between &lt;?xml and ?&gt;).  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9bef1-639">다음 예제에서는 XML 문서 및 집합에 새 특성을 추가 합니다 <xref:System.Xml.XmlNode.Value%2A> 새 특성의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-639">The following example adds a new attribute to the XML document and sets the <xref:System.Xml.XmlNode.Value%2A> property of the new attribute.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9bef1-640">읽기 전용인 노드의 값을 설정하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-640">Setting the value of a node that is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9bef1-641">값이 없어야 하는 노드의 값을 설정하는 경우(예: Element 노드)</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-641">Setting the value of a node that is not supposed to have a value (for example, an Element node).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteContentTo">
      <MemberSignature Language="C#" Value="public abstract void WriteContentTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteContentTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteContentTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteContentTo(System::Xml::XmlWriter ^ w);" />
      <MemberSignature Language="F#" Value="abstract member WriteContentTo : System.Xml.XmlWriter -&gt; unit" Usage="xmlNode.WriteContentTo w" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="9bef1-642">저장할 대상 <see langword="XmlWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-642">The <see langword="XmlWriter" /> to which you want to save.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bef1-643">파생 클래스에서 재정의된 경우 노드의 모든 자식 노드를 지정된 <see cref="T:System.Xml.XmlWriter" />에 저장합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-643">Saves all the child nodes of the node to the specified <see cref="T:System.Xml.XmlWriter" />, when overridden in a derived class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-644">이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-644">This method is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="9bef1-645">기능적으로 <xref:System.Xml.XmlNode.InnerXml%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-645">It is functionally equivalent to the <xref:System.Xml.XmlNode.InnerXml%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9bef1-646">다음 예제에서는 루트 노드의 내용을 콘솔에 게 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-646">The following example displays the contents of the root node to the console.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.WriteContentTo Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.WriteContentTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.WriteContentTo Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.WriteContentTo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.WriteContentTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.WriteContentTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)" />
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public abstract void WriteTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteTo(System::Xml::XmlWriter ^ w);" />
      <MemberSignature Language="F#" Value="abstract member WriteTo : System.Xml.XmlWriter -&gt; unit" Usage="xmlNode.WriteTo w" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="9bef1-647">저장할 대상 <see langword="XmlWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-647">The <see langword="XmlWriter" /> to which you want to save.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bef1-648">파생 클래스에서 재정의된 경우 현재 노드를 지정된 <see cref="T:System.Xml.XmlWriter" />에 저장합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bef1-648">Saves the current node to the specified <see cref="T:System.Xml.XmlWriter" />, when overridden in a derived class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bef1-649">이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-649">This method is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="9bef1-650">기능적으로 <xref:System.Xml.XmlNode.OuterXml%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-650">It is functionally equivalent to the <xref:System.Xml.XmlNode.OuterXml%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9bef1-651">다음 예제에서는 콘솔에 루트 노드를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="9bef1-651">The following example displays the root node to the console.</span></span>  
  
 [!code-cpp[Classic WebData XmlNode.WriteTo Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.WriteTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.WriteTo Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.WriteTo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.WriteTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.WriteTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>