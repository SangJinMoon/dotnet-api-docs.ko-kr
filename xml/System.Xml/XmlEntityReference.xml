<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlEntityReference.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54fb5a058223b2b17800e19137b2b09c4ac742b5d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4fb5a058223b2b17800e19137b2b09c4ac742b5d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlEntityReference">
          <source>Represents an entity reference node.</source>
          <target state="translated">엔터티 참조 노드를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlEntityReference.#ctor(System.String,System.Xml.XmlDocument)">
          <source>The name of the entity reference; see the <ph id="ph1">&lt;see cref="P:System.Xml.XmlEntityReference.Name" /&gt;</ph> property.</source>
          <target state="translated">엔터티 참조의 이름입니다. <ph id="ph1">&lt;see cref="P:System.Xml.XmlEntityReference.Name" /&gt;</ph> 속성을 참조하십시오.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlEntityReference.#ctor(System.String,System.Xml.XmlDocument)">
          <source>The parent XML document.</source>
          <target state="translated">부모 XML 문서입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlEntityReference.#ctor(System.String,System.Xml.XmlDocument)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlEntityReference" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlEntityReference" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlEntityReference.#ctor(System.String,System.Xml.XmlDocument)">
          <source>Do not instantiate an <ph id="ph1">&lt;xref:System.Xml.XmlEntityReference&gt;</ph> directly; instead, use methods such as <ph id="ph2">&lt;xref:System.Xml.XmlDocument.CreateEntityReference%2A&gt;</ph>.</source>
          <target state="translated">인스턴스화할 수 없습니다는 <ph id="ph1">&lt;xref:System.Xml.XmlEntityReference&gt;</ph> 직접; 대신와 같은 메서드 사용 <ph id="ph2">&lt;xref:System.Xml.XmlDocument.CreateEntityReference%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlEntityReference.BaseURI">
          <source>Gets the base Uniform Resource Identifier (URI) of the current node.</source>
          <target state="translated">현재 노드의 기본 URI(Uniform Resource Identifier)를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.BaseURI">
          <source>The location from which the node was loaded.</source>
          <target state="translated">노드를 로드한 위치입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.BaseURI">
          <source>A networked XML document is comprised of chunks of data aggregated using various World Wide Web Consortium (W3C) standard inclusion mechanisms and therefore contains nodes that come from different places.</source>
          <target state="translated">네트워크 XML 문서는 다양 한 World Wide Web Consortium (W3C) 표준 포함 메커니즘을 사용 하 여 집계 데이터의 청크 한 이루어져 서로 다른 위치에서 제공 하는 노드를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.BaseURI">
          <source>The <ph id="ph1">`BaseURI`</ph> tells you where these nodes came from.</source>
          <target state="translated"><ph id="ph1">`BaseURI`</ph> 이러한 노드 출처를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.BaseURI">
          <source>If there is no base URI for the nodes being returned (maybe they were parsed from an in-memory string), <ph id="ph1">&lt;xref:System.String.Empty&gt;</ph> is returned.</source>
          <target state="translated">URI가 없는 기본 (또는 메모리에서 문자열에서 구문 분석 된) 반환 되는 노드에 대 한 경우 <ph id="ph1">&lt;xref:System.String.Empty&gt;</ph> 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.BaseURI">
          <source><ph id="ph1">`BaseURI`</ph> walks the node tree looking for entity reference boundaries, so if entities are expanded, this information is not preserved and this property returns the location of the XmlDocument in all cases.</source>
          <target state="translated"><ph id="ph1">`BaseURI`</ph> 이 속성 및 탐색 노드 트리에서 엔터티 참조 경계 찾기 하므로 엔터티는 확장이 정보는 유지 되지 않고 모든 경우에에서 XmlDocument의 위치를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.BaseURI">
          <source>For additional information on <ph id="ph1">`BaseURI`</ph> and how it behaves with other node types, see <ph id="ph2">&lt;xref:System.Xml.XmlNode.BaseURI%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">에 대 한 자세한 내용은 <ph id="ph1">`BaseURI`</ph> 및 다른 노드 유형으로 동작 하는 방법 참조 <ph id="ph2">&lt;xref:System.Xml.XmlNode.BaseURI%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.BaseURI">
          <source>This property is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.BaseURI">
          <source>The following example displays information on entity reference node, including its base URI.</source>
          <target state="translated">다음 예제에서는 엔터티 참조 노드를 해당 기본 URI를 포함 하 여 정보가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.BaseURI">
          <source>The sample uses the file, <ph id="ph1">`uri.xml`</ph>, as input.</source>
          <target state="translated">샘플 파일을 사용 하 여 <ph id="ph1">`uri.xml`</ph>입력으로 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.BaseURI">
          <source>The <ph id="ph1">`style.xml`</ph> file contains the XML string <ph id="ph2">`&lt;style&gt;hardcover&lt;/style&gt;`</ph>.</source>
          <target state="translated"><ph id="ph1">`style.xml`</ph> XML 문자열을 포함 하는 파일 <ph id="ph2">`&lt;style&gt;hardcover&lt;/style&gt;`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlEntityReference.CloneNode(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to recursively clone the subtree under the specified node; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to clone only the node itself.</source>
          <target state="translated">지정된 노드 아래의 하위 트리를 재귀적으로 복제하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 노드 자체만 복제하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlEntityReference.CloneNode(System.Boolean)">
          <source>For <ph id="ph1">&lt;see langword="XmlEntityReference" /&gt;</ph> nodes, this method always returns an entity reference node with no children.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlEntityReference" /&gt;</ph> 노드의 경우, 이 메서드는 항상 자식이 없는 entityreference 노드를 반환합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlEntityReference.CloneNode(System.Boolean)">
          <source>The replacement text is set when the node is inserted into a parent.</source>
          <target state="translated">노드를 부모에 삽입할 경우 대체 텍스트가 설정됩니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlEntityReference.CloneNode(System.Boolean)">
          <source>Creates a duplicate of this node.</source>
          <target state="translated">이 노드의 복제본을 만듭니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlEntityReference.CloneNode(System.Boolean)">
          <source>The cloned node.</source>
          <target state="translated">복제된 노드입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlEntityReference.CloneNode(System.Boolean)">
          <source>This method serves as a copy constructor for nodes.</source>
          <target state="translated">이 메서드는 노드에 대 한 복사 생성자로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlEntityReference.CloneNode(System.Boolean)">
          <source>The cloned node has no parent (<ph id="ph1">&lt;xref:System.Xml.XmlNode.ParentNode%2A&gt;</ph> returns <ph id="ph2">`null`</ph>).</source>
          <target state="translated">복제 된 노드는 부모 없습니다 (<ph id="ph1">&lt;xref:System.Xml.XmlNode.ParentNode%2A&gt;</ph> 반환 <ph id="ph2">`null`</ph>).</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlEntityReference.IsReadOnly">
          <source>Gets a value indicating whether the node is read-only.</source>
          <target state="translated">노드가 읽기 전용인지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the node is read-only; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">노드가 읽기 전용이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.IsReadOnly">
          <source>Because <ph id="ph1">&lt;see langword="XmlEntityReference" /&gt;</ph> nodes are read-only, this property always returns <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlEntityReference" /&gt;</ph> 노드가 읽기 전용이므로 이 속성은 항상 <ph id="ph2">&lt;see langword="true" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.IsReadOnly">
          <source>A read-only node is one whose properties, attributes, or children cannot be changed.</source>
          <target state="translated">읽기 전용 노드는 해당 속성, 특성 또는 자식 항목을 변경할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.IsReadOnly">
          <source>However, you can remove a read-only node from the tree and insert it somewhere else.</source>
          <target state="translated">그러나 트리에서 읽기 전용 노드를 제거할 수 있으며 다른 위치에 삽입.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.IsReadOnly">
          <source>This property is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.IsReadOnly">
          <source>The following example shows how to use the <ph id="ph1">`IsReadOnly`</ph> property.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`IsReadOnly`</ph> 속성을 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlEntityReference.LocalName">
          <source>Gets the local name of the node.</source>
          <target state="translated">노드의 로컬 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.LocalName">
          <source>For <ph id="ph1">&lt;see langword="XmlEntityReference" /&gt;</ph> nodes, this property returns the name of the entity referenced.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlEntityReference" /&gt;</ph> 노드의 경우, 이 속성은 참조하는 엔터티의 이름을 반환합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlEntityReference.Name">
          <source>Gets the name of the node.</source>
          <target state="translated">노드의 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.Name">
          <source>The name of the entity referenced.</source>
          <target state="translated">참조된 엔터티의 이름입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.Name">
          <source>The following example displays information on the entity reference node.</source>
          <target state="translated">다음 예제에서는 엔터티 참조 노드 정보가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlEntityReference.NodeType">
          <source>Gets the type of the node.</source>
          <target state="translated">노드의 형식을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.NodeType">
          <source>The node type.</source>
          <target state="translated">노드 형식입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.NodeType">
          <source>For <ph id="ph1">&lt;see langword="XmlEntityReference" /&gt;</ph> nodes, the value is XmlNodeType.EntityReference.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlEntityReference" /&gt;</ph> 노드의 경우, 값은 XmlNodeType.EntityReference입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlEntityReference.Value">
          <source>Gets or sets the value of the node.</source>
          <target state="translated">노드의 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.Value">
          <source>The value of the node.</source>
          <target state="translated">노드의 값입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.Value">
          <source>For <ph id="ph1">&lt;see langword="XmlEntityReference" /&gt;</ph> nodes, this property returns <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlEntityReference" /&gt;</ph> 노드의 경우 이 속성은 <ph id="ph2">&lt;see langword="null" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlEntityReference.Value">
          <source>Node is read-only.</source>
          <target state="translated">노드가 읽기 전용인 경우</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlEntityReference.Value">
          <source>Setting the property.</source>
          <target state="translated">속성을 설정하는 경우</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlEntityReference.WriteContentTo(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;see langword="XmlWriter" /&gt;</ph> to which you want to save.</source>
          <target state="translated">저장할 대상 <ph id="ph1">&lt;see langword="XmlWriter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlEntityReference.WriteContentTo(System.Xml.XmlWriter)">
          <source>Saves all the children of the node to the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>에 노드의 모든 자식을 저장합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlEntityReference.WriteContentTo(System.Xml.XmlWriter)">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlEntityReference.WriteTo(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;see langword="XmlWriter" /&gt;</ph> to which you want to save.</source>
          <target state="translated">저장할 대상 <ph id="ph1">&lt;see langword="XmlWriter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlEntityReference.WriteTo(System.Xml.XmlWriter)">
          <source>Saves the node to the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>에 노드를 저장합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlEntityReference.WriteTo(System.Xml.XmlWriter)">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>