<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlNodeReader.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b857fe3" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2eccf4de-4b1c-4706-8cb3-f46682ccfb7223688d2e903242fd4361a8bd942c3fabfc09b875.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">23688d2e903242fd4361a8bd942c3fabfc09b875</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b15b8cf0f6dbc1504057c88969d9ef4b790891fe</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/11/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlNodeReader">
          <source>Represents a reader that provides fast, non-cached forward only access to XML data in an <ph id="ph1">&lt;see cref="T:System.Xml.XmlNode" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlNode" /&gt;</ph>의 XML 데이터에 대한 빠르고 캐시되지 않은 전방 액세스만 제공하는 판독기를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlNodeReader">
          <source>Instead of using the <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph>, we recommend that you create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">사용 하는 대신는 <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph>를 만드는 것이 좋습니다 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 및 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlNodeReader">
          <source>This enables you to take advantage of conformance checking and compliance to the XML 1.0 recommendation.</source>
          <target state="translated">이렇게 하면 규칙 검사 및 XML 1.0 권장 사항에 대 한 규정 준수를 활용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlNodeReader">
          <source>The <ph id="ph1">`XmlNodeReader`</ph> has the ability to read an XML DOM subtree.</source>
          <target state="translated"><ph id="ph1">`XmlNodeReader`</ph> 는 XML DOM 하위 트리를 읽을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlNodeReader">
          <source>This class does not support document type definition (DTD) or schema validation.</source>
          <target state="translated">이 클래스는 문서 형식 정의 (DTD) 또는 스키마 유효성 검사를 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlNodeReader">
          <source>However, you can create an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object that wraps around the <ph id="ph2">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> object to validate the data stored in the <ph id="ph3">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> object, as shown in Examples section.</source>
          <target state="translated">만들 수 있습니다는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 주위에 배치 하는 개체는 <ph id="ph2">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> 개체에 저장 된 데이터 유효성 검사는 <ph id="ph3">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> "예" 섹션에 나와 있는 것 처럼 개체입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlNodeReader">
          <source>In the following example, an XML file is loaded into an XML document and modified.</source>
          <target state="translated">다음 예제에서는 XML 파일을 XML 문서에 로드한 후 수정합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlNodeReader">
          <source>The XML document is passed to an <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph>, which is then passed to the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">XML 문서가 <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph>에 전달되고 나서 이 개체가 <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> 메서드에 전달됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlNodeReader">
          <source>When the validating reader parses the file, it can validate any changes made to the XML file.</source>
          <target state="translated">유효성 검사 판독기에서 파일을 구문 분석할 때 XML 파일의 변경 내용에 대해 유효성을 검사할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlNodeReader">
          <source>Input</source>
          <target state="translated">입력</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlNodeReader">
          <source>The following files are used as input.</source>
          <target state="translated">다음 파일이 입력으로 사용됩니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlNodeReader">
          <source>bookSchema.xml</source>
          <target state="translated">bookSchema.xml</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlNodeReader">
          <source>books.xsd</source>
          <target state="translated">books.xsd</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlNodeReader">
          <source>Output</source>
          <target state="translated">출력</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlNodeReader">
          <source>Validation Error: The 'publisher' attribute is not declared.</source>
          <target state="translated">유효성 검사 오류: 'publisher' 특성이 선언되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.#ctor(System.Xml.XmlNode)">
          <source>The <ph id="ph1">&lt;see langword="XmlNode" /&gt;</ph> you want to read.</source>
          <target state="translated">읽으려는 <ph id="ph1">&lt;see langword="XmlNode" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.#ctor(System.Xml.XmlNode)">
          <source>Creates an instance of the <ph id="ph1">&lt;see langword="XmlNodeReader" /&gt;</ph> class using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlNode" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph2">&lt;see cref="T:System.Xml.XmlNode" /&gt;</ph>를 사용하여 <ph id="ph1">&lt;see langword="XmlNodeReader" /&gt;</ph> 클래스의 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.#ctor(System.Xml.XmlNode)">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.#ctor(System.Xml.XmlNode)">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">그러면 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 새로운 기능을 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.#ctor(System.Xml.XmlNode)">
          <source>For more information, see the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.#ctor(System.Xml.XmlNode)">
          <source>For more information and examples of the code used to create an <ph id="ph1">`XmlNodeReader`</ph>, see <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> and overloads of the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">자세한 내용 및 예제를 만드는 데 사용 하는 코드의 한 <ph id="ph1">`XmlNodeReader`</ph>, 참조 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 의 오버 로드는 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlNodeReader.AttributeCount">
          <source>Gets the number of attributes on the current node.</source>
          <target state="translated">현재 노드의 특성 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.AttributeCount">
          <source>The number of attributes on the current node.</source>
          <target state="translated">현재 노드에 포함된 특성의 수입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.AttributeCount">
          <source>This number includes default attributes.</source>
          <target state="translated">이 수에는 기본 특성이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.AttributeCount">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.AttributeCount">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">그러면 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 새로운 기능을 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.AttributeCount">
          <source>For more information, see the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.AttributeCount">
          <source>This property is relevant to <ph id="ph1">`Element`</ph>, <ph id="ph2">`DocumentType`</ph> and <ph id="ph3">`XmlDeclaration`</ph> nodes only.</source>
          <target state="translated">이 속성은 관련이 <ph id="ph1">`Element`</ph>, <ph id="ph2">`DocumentType`</ph> 및 <ph id="ph3">`XmlDeclaration`</ph> 노드만 해당 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.AttributeCount">
          <source>(Other node types do not have attributes.)</source>
          <target state="translated">(다른 노드 형식 특성이 없습니다.)</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.AttributeCount">
          <source>The following example reads all the attributes on the root node.</source>
          <target state="translated">다음 예제에서는 루트 노드에 대 한 모든 특성을 읽습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlNodeReader.BaseURI">
          <source>Gets the base URI of the current node.</source>
          <target state="translated">현재 노드의 기본 URI를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.BaseURI">
          <source>The base URI of the current node.</source>
          <target state="translated">현재 노드의 기본 URI입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.BaseURI">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.BaseURI">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">그러면 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 새로운 기능을 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.BaseURI">
          <source>For more information, see the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.BaseURI">
          <source>A networked XML document is comprised of chunks of data aggregated using various W3C standard inclusion mechanisms and therefore contains nodes that come from different places.</source>
          <target state="translated">네트워크 XML 문서는 다양 한 W3C 표준 포함 구조를 사용 하 여 집계 데이터의 청크 한 이루어져 서로 다른 위치에서 제공 하는 노드를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.BaseURI">
          <source>DTD entities are an example of this, but this is not limited to DTDs.</source>
          <target state="translated">DTD 엔터티가이의 예는 Dtd에 국한 되지 않음.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.BaseURI">
          <source>The base URI tells you where these nodes came from.</source>
          <target state="translated">기본 URI 출처를 보여 줍니다 여기서 이러한 노드.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.BaseURI">
          <source>If there is no base URI for the nodes being returned (for example, they were parsed from an in-memory string), String.Empty is returned.</source>
          <target state="translated">반환 되는 노드에 대 한 기본 URI에 없는 경우 (예를 들어 구문 분석 된 메모리에 문자열에서), String.Empty가 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.BaseURI">
          <source>The following example parses a file and displays the base URI of each of the nodes.</source>
          <target state="translated">다음 예제에서는 파일의 구문 분석 하 고 각 노드의 기본 URI를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.BaseURI">
          <source>The example uses the file, <ph id="ph1">`uri.xml`</ph>, as input.</source>
          <target state="translated">이 예제에서는 파일을 사용 하 여 <ph id="ph1">`uri.xml`</ph>입력으로 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.BaseURI">
          <source>The <ph id="ph1">`style.xml`</ph> file contains the XML text <ph id="ph2">`&lt;style&gt;hardcover&lt;/style&gt;`</ph>.</source>
          <target state="translated"><ph id="ph1">`style.xml`</ph> XML 텍스트 파일에 포함 되어 <ph id="ph2">`&lt;style&gt;hardcover&lt;/style&gt;`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlNodeReader.CanReadBinaryContent">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeReader" /&gt;</ph> implements the binary content read methods.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeReader" /&gt;</ph>가 이진 콘텐츠 읽기 메서드를 구현하는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.CanReadBinaryContent">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the binary content read methods are implemented; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이진 콘텐츠 읽기 메서드를 구현하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.CanReadBinaryContent">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeReader" /&gt;</ph> class always returns <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeReader" /&gt;</ph> 클래스는 항상 <ph id="ph2">&lt;see langword="true" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.CanReadBinaryContent">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.CanReadBinaryContent">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">그러면 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 새로운 기능을 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.CanReadBinaryContent">
          <source>For more information, see the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.CanReadBinaryContent">
          <source>The binary content read methods include the <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader.ReadContentAsBase64%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlNodeReader.ReadContentAsBinHex%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlNodeReader.ReadElementContentAsBase64%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Xml.XmlNodeReader.ReadElementContentAsBinHex%2A&gt;</ph> methods.</source>
          <target state="translated">이진 콘텐츠 읽기는 <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader.ReadContentAsBase64%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlNodeReader.ReadContentAsBinHex%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlNodeReader.ReadElementContentAsBase64%2A&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Xml.XmlNodeReader.ReadElementContentAsBinHex%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlNodeReader.CanResolveEntity">
          <source>Gets a value indicating whether this reader can parse and resolve entities.</source>
          <target state="translated">이 판독기가 엔터티를 구문 분석하고 확인할 수 있는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.CanResolveEntity">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the reader can parse and resolve entities; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">판독기가 엔터티를 구문 분석하고 확인할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.CanResolveEntity">
          <source><ph id="ph1">&lt;see langword="XmlNodeReader" /&gt;</ph> always returns <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlNodeReader" /&gt;</ph>는 항상 <ph id="ph2">&lt;see langword="true" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.CanResolveEntity">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.CanResolveEntity">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">그러면 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 새로운 기능을 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.CanResolveEntity">
          <source>For more information, see the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.Close">
          <source>Changes the <ph id="ph1">&lt;see cref="P:System.Xml.XmlNodeReader.ReadState" /&gt;</ph> to <ph id="ph2">&lt;see langword="Closed" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Xml.XmlNodeReader.ReadState" /&gt;</ph>를 <ph id="ph2">&lt;see langword="Closed" /&gt;</ph>로 변경합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.Close">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.Close">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">그러면 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 새로운 기능을 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.Close">
          <source>For more information, see the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.Close">
          <source>This method also releases any resources held while reading.</source>
          <target state="translated">이 메서드는 또한 읽는 동안 보유 한 모든 리소스를 해제 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.Close">
          <source>If <ph id="ph1">`Close`</ph> has already been called, no action is performed.</source>
          <target state="translated">경우 <ph id="ph1">`Close`</ph> 가 이미 호출 아무 작업도 수행 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.Close">
          <source>The following example parses a file and closes the reader.</source>
          <target state="translated">다음 예제에서는 파일의 구문 분석 하 고 판독기를 닫습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.Close">
          <source>The example uses the file, <ph id="ph1">`items.xml`</ph>, as input.</source>
          <target state="translated">이 예제에서는 파일을 사용 하 여 <ph id="ph1">`items.xml`</ph>입력으로 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlNodeReader.Depth">
          <source>Gets the depth of the current node in the XML document.</source>
          <target state="translated">XML 문서에서 현재 노드의 수준을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Depth">
          <source>The depth of the current node in the XML document.</source>
          <target state="translated">XML 문서의 현재 노드 수준입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Depth">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Depth">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">그러면 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 새로운 기능을 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Depth">
          <source>For more information, see the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlNodeReader.EOF">
          <source>Gets a value indicating whether the reader is positioned at the end of the stream.</source>
          <target state="translated">판독기가 스트림의 맨 끝에 있는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.EOF">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the reader is positioned at the end of the stream; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">판독기가 스트림의 맨 끝에 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.EOF">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.EOF">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">그러면 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 새로운 기능을 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.EOF">
          <source>For more information, see the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlNodeReader">
          <source>Gets the value of an attribute.</source>
          <target state="translated">특성의 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.GetAttribute(System.Int32)">
          <source>The index of the attribute.</source>
          <target state="translated">특성의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.GetAttribute(System.Int32)">
          <source>The index is zero-based.</source>
          <target state="translated">인덱스는 0부터 시작합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.GetAttribute(System.Int32)">
          <source>(The first attribute has index 0.)</source>
          <target state="translated">첫 번째 특성의 인덱스는 0입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.GetAttribute(System.Int32)">
          <source>Gets the value of the attribute with the specified index.</source>
          <target state="translated">지정된 인덱스가 있는 특성의 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.GetAttribute(System.Int32)">
          <source>The value of the specified attribute.</source>
          <target state="translated">지정된 특성의 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.GetAttribute(System.Int32)">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.GetAttribute(System.Int32)">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">그러면 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 새로운 기능을 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.GetAttribute(System.Int32)">
          <source>For more information, see the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.GetAttribute(System.Int32)">
          <source>This method does not move the reader.</source>
          <target state="translated">이 메서드는 판독기를 이동하지 않습니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.GetAttribute(System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="i" /&gt;</ph> parameter is less than 0 or greater than or equal to <ph id="ph2">&lt;see cref="P:System.Xml.XmlNodeReader.AttributeCount" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="i" /&gt;</ph> 매개 변수가 0보다 작거나 <ph id="ph2">&lt;see cref="P:System.Xml.XmlNodeReader.AttributeCount" /&gt;</ph>보다 크거나 같은 경우</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.GetAttribute(System.String)">
          <source>The qualified name of the attribute.</source>
          <target state="translated">특성의 정규화된 이름입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.GetAttribute(System.String)">
          <source>Gets the value of the attribute with the specified name.</source>
          <target state="translated">지정된 이름이 있는 특성의 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.GetAttribute(System.String)">
          <source>The value of the specified attribute.</source>
          <target state="translated">지정된 특성의 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.GetAttribute(System.String)">
          <source>If the attribute is not found, <ph id="ph1">&lt;see langword="null" /&gt;</ph> is returned.</source>
          <target state="translated">특성이 없으면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이 반환됩니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.GetAttribute(System.String)">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.GetAttribute(System.String)">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">그러면 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 새로운 기능을 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.GetAttribute(System.String)">
          <source>For more information, see the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.GetAttribute(System.String)">
          <source>This method does not move the reader.</source>
          <target state="translated">이 메서드는 판독기를 이동하지 않습니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.GetAttribute(System.String)">
          <source>If the reader is positioned on a <ph id="ph1">`DocumentType`</ph> node, this method can be used to get the PUBLIC and SYSTEM literals, for example, <ph id="ph2">`reader.GetAttribute("PUBLIC")`</ph></source>
          <target state="translated">판독기가 배치 되 면는 <ph id="ph1">`DocumentType`</ph> 노드를이 메서드는 PUBLIC 및 시스템 리터럴, 예를 들어, 가져오는 데 사용할 수 있습니다 <ph id="ph2">`reader.GetAttribute("PUBLIC")`</ph></target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.GetAttribute(System.String)">
          <source>The following example gets the value of the ISBN attribute.</source>
          <target state="translated">다음 예제에서는 ISBN 특성의 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.GetAttribute(System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">특성의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.GetAttribute(System.String,System.String)">
          <source>The namespace URI of the attribute.</source>
          <target state="translated">특성의 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.GetAttribute(System.String,System.String)">
          <source>Gets the value of the attribute with the specified local name and namespace URI.</source>
          <target state="translated">지정된 로컬 이름과 네임스페이스 URI가 있는 특성의 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.GetAttribute(System.String,System.String)">
          <source>The value of the specified attribute.</source>
          <target state="translated">지정된 특성의 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.GetAttribute(System.String,System.String)">
          <source>If the attribute is not found, <ph id="ph1">&lt;see langword="null" /&gt;</ph> is returned.</source>
          <target state="translated">특성이 없으면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이 반환됩니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.GetAttribute(System.String,System.String)">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.GetAttribute(System.String,System.String)">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">그러면 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 새로운 기능을 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.GetAttribute(System.String,System.String)">
          <source>For more information, see the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.GetAttribute(System.String,System.String)">
          <source>The following XML contains an attribute in a specific namespace:</source>
          <target state="translated">다음 XML 특성을 특정 네임 스페이스에 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.GetAttribute(System.String,System.String)">
          <source>You can lookup the <ph id="ph1">`dt:type`</ph> attribute using one argument (prefix and local name) or two arguments (local name and namespace URI):</source>
          <target state="translated">조회할 수 있습니다는 <ph id="ph1">`dt:type`</ph> (접두사와 로컬 이름)에 하나의 인수 또는 (로컬 이름 및 네임 스페이스 URI)는 두 개의 인수를 사용 하 여 특성:</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.GetAttribute(System.String,System.String)">
          <source>To lookup the <ph id="ph1">`xmlns:dt`</ph> attribute, use one of the following arguments:</source>
          <target state="translated">조회는 <ph id="ph1">`xmlns:dt`</ph> 특성을 다음 인수 중 하나를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.GetAttribute(System.String,System.String)">
          <source>You can also get this information using the <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader.Prefix%2A&gt;</ph> property.</source>
          <target state="translated">사용 하 여이 정보를 가져올 수도 있습니다는 <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader.Prefix%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlNodeReader.HasAttributes">
          <source>Gets a value indicating whether the current node has any attributes.</source>
          <target state="translated">현재 노드에 특성이 있는지를 나타내는 값을 얻습니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.HasAttributes">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current node has attributes; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 노드에 특성이 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.HasAttributes">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.HasAttributes">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">그러면 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 새로운 기능을 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.HasAttributes">
          <source>For more information, see the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.HasAttributes">
          <source>The following example reads all the attributes on the root node.</source>
          <target state="translated">다음 예제에서는 루트 노드에 대 한 모든 특성을 읽습니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlNodeReader.HasValue">
          <source>Gets a value indicating whether the current node can have a <ph id="ph1">&lt;see cref="P:System.Xml.XmlNodeReader.Value" /&gt;</ph>.</source>
          <target state="translated">현재 노드에 <ph id="ph1">&lt;see cref="P:System.Xml.XmlNodeReader.Value" /&gt;</ph>가 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.HasValue">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the node on which the reader is currently positioned can have a <ph id="ph2">&lt;see langword="Value" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 판독기가 위치한 노드에 <ph id="ph2">&lt;see langword="Value" /&gt;</ph>가 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.HasValue">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.HasValue">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">그러면 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 새로운 기능을 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.HasValue">
          <source>For more information, see the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.HasValue">
          <source>The following table lists node types that have a value to return.</source>
          <target state="translated">다음 표에서는 반환할 값이 있는 노드 형식을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.HasValue">
          <source>Node Type</source>
          <target state="translated">노드 형식</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.HasValue">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.HasValue">
          <source>The value of the attribute.</source>
          <target state="translated">특성 값</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.HasValue">
          <source>The content of the CDATA section.</source>
          <target state="translated">CDATA 섹션 내용입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.HasValue">
          <source>The content of the comment.</source>
          <target state="translated">주석의 내용입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.HasValue">
          <source>The internal subset.</source>
          <target state="translated">내부 하위 집합입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.HasValue">
          <source>The entire content, excluding the target.</source>
          <target state="translated">대상을 제외한 전체 내용입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.HasValue">
          <source>The white space between markup in a mixed content model.</source>
          <target state="translated">혼합된 콘텐츠 모델의 태그 간 공백입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.HasValue">
          <source>The content of the text node.</source>
          <target state="translated">텍스트 노드의 내용입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.HasValue">
          <source>The white space between markup.</source>
          <target state="translated">태그 사이의 공백입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.HasValue">
          <source>The content of the declaration.</source>
          <target state="translated">선언 내용입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.HasValue">
          <source>The following example displays the value for every node which can have a value.</source>
          <target state="translated">다음 예제에서는 값을 가질 수 있는 모든 노드의 값을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlNodeReader.IsDefault">
          <source>Gets a value indicating whether the current node is an attribute that was generated from the default value defined in the document type definition (DTD) or schema.</source>
          <target state="translated">현재 노드가 DTD(문서 종류 정의) 또는 스키마에서 정의한 기본값에서 생성된 특성인지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.IsDefault">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current node is an attribute whose value was generated from the default value defined in the DTD or schema; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the attribute value was explicitly set.</source>
          <target state="translated">현재 노드가 DTD나 스키마에서 정의한 기본값에서 생성된 값을 가진 특성이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 특성 값이 명시적으로 설정되었으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.IsDefault">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.IsDefault">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">그러면 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 새로운 기능을 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.IsDefault">
          <source>For more information, see the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.IsDefault">
          <source>This property applies to attribute nodes only.</source>
          <target state="translated">특성 노드만이 속성이 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.IsDefault">
          <source>If the reader is not positioned on an attribute node, this property returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">이 속성을 반환 하는 경우 하지 판독기가 특성 노드에, <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlNodeReader.IsEmptyElement">
          <source>Gets a value indicating whether the current node is an empty element (for example, <bpt id="p1">&lt;c&gt;</bpt><ph id="ph1">&amp;lt;</ph>MyElement/<ph id="ph2">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>).</source>
          <target state="translated">현재 노드가 빈 요소(예: <bpt id="p1">&lt;c&gt;</bpt><ph id="ph1">&amp;lt;</ph>MyElement/<ph id="ph2">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>)인지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.IsEmptyElement">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current node is an element (<ph id="ph2">&lt;see cref="P:System.Xml.XmlNodeReader.NodeType" /&gt;</ph> equals <ph id="ph3">&lt;see langword="XmlNodeType.Element" /&gt;</ph>) and it ends with <bpt id="p1">&lt;c&gt;</bpt><ph id="ph4">/</ph><ph id="ph5">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>; otherwise, <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 현재 노드가 요소 이면 (<ph id="ph2">&lt;see cref="P:System.Xml.XmlNodeReader.NodeType" /&gt;</ph> equals <ph id="ph3">&lt;see langword="XmlNodeType.Element" /&gt;</ph>)으로 끝나는 <bpt id="p1">&lt;c&gt;</bpt> <ph id="ph4">/</ph> <ph id="ph5">&amp;gt;</ph> <ept id="p1">&lt;/c&gt;</ept>, 그렇지 않으면 <ph id="ph6">&lt;see langword="false" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.IsEmptyElement">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.IsEmptyElement">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">그러면 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 새로운 기능을 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.IsEmptyElement">
          <source>For more information, see the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.IsEmptyElement">
          <source>This property enables you to determine the difference between the following:</source>
          <target state="translated">이 속성을 사용하여 다음 간의 차이를 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.IsEmptyElement">
          <source><ph id="ph1">`&lt;item num="123"/&gt;`</ph> (<ph id="ph2">`IsEmptyElement`</ph> is <ph id="ph3">`true`</ph>).</source>
          <target state="translated"><ph id="ph1">`&lt;item num="123"/&gt;`</ph> (<ph id="ph2">`IsEmptyElement`</ph> 은 <ph id="ph3">`true`</ph>).</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.IsEmptyElement">
          <source><ph id="ph1">`&lt;item num="123"&gt;`</ph> (<ph id="ph2">`IsEmptyElement`</ph> is <ph id="ph3">`false`</ph>, although element content is empty).</source>
          <target state="translated"><ph id="ph1">`&lt;item num="123"&gt;`</ph> (<ph id="ph2">`IsEmptyElement`</ph> 은 <ph id="ph3">`false`</ph>요소 내용이 비어 있지만).</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.IsEmptyElement">
          <source>A corresponding <ph id="ph1">`EndElement`</ph> node is not generated for empty elements.</source>
          <target state="translated">해당 <ph id="ph1">`EndElement`</ph> 빈 요소에 대 한 노드는 생성 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.IsEmptyElement">
          <source>The following example displays the text content of each element.</source>
          <target state="translated">다음 예제에서는 각 요소의 텍스트 콘텐츠를 표시합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlNodeReader.LocalName">
          <source>Gets the local name of the current node.</source>
          <target state="translated">현재 노드의 로컬 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.LocalName">
          <source>The name of the current node with the prefix removed.</source>
          <target state="translated">접두사를 제거한 현재 노드의 이름입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.LocalName">
          <source>For example, <ph id="ph1">&lt;see langword="LocalName" /&gt;</ph> is <ph id="ph2">&lt;see langword="book" /&gt;</ph> for the element <bpt id="p1">&lt;c&gt;</bpt><ph id="ph3">&amp;lt;</ph>bk:book<ph id="ph4">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">예를 들어 <ph id="ph1">&lt;see langword="LocalName" /&gt;</ph> 은 <ph id="ph2">&lt;see langword="book" /&gt;</ph> 요소에 대해 <bpt id="p1">&lt;c&gt;</bpt> <ph id="ph3">&amp;lt;</ph>예<ph id="ph4">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.LocalName">
          <source>For node types that do not have a name (like <ph id="ph1">&lt;see langword="Text" /&gt;</ph>, <ph id="ph2">&lt;see langword="Comment" /&gt;</ph>, and so on), this property returns String.Empty.</source>
          <target state="translated">이름이 없는 노드 형식(예: <ph id="ph1">&lt;see langword="Text" /&gt;</ph>, <ph id="ph2">&lt;see langword="Comment" /&gt;</ph> 등)의 경우, 이 속성은 String.Empty를 반환합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.LocalName">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.LocalName">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">그러면 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 새로운 기능을 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.LocalName">
          <source>For more information, see the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.LocalName">
          <source>The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</source>
          <target state="translated">다음 예제에서는 각 노드의 로컬 이름을 표시 하 고, 있는 경우, 접두사 및 네임 스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.LookupNamespace(System.String)">
          <source>The prefix whose namespace URI you want to resolve.</source>
          <target state="translated">확인할 네임스페이스 URI의 접두사입니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.LookupNamespace(System.String)">
          <source>To match the default namespace, pass an empty string.</source>
          <target state="translated">기본 네임스페이스와 일치시키려면 빈 문자열을 전달합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.LookupNamespace(System.String)">
          <source>This string does not have to be atomized.</source>
          <target state="translated">이 문자열은 원자화할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.LookupNamespace(System.String)">
          <source>Resolves a namespace prefix in the current element's scope.</source>
          <target state="translated">현재 요소의 범위에서 네임스페이스 접두사를 확인합니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.LookupNamespace(System.String)">
          <source>The namespace URI to which the prefix maps or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no matching prefix is found.</source>
          <target state="translated">접두사가 매핑되는 네임스페이스 URI이거나 일치하는 접두사가 없는 경우 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.LookupNamespace(System.String)">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.LookupNamespace(System.String)">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">그러면 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 새로운 기능을 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.LookupNamespace(System.String)">
          <source>For more information, see the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.LookupNamespace(System.String)">
          <source>In the following XML string, if the reader is positioned on the <ph id="ph1">`href`</ph> attribute, the prefix <ph id="ph2">`a`</ph> is resolved by calling <ph id="ph3">`reader.LookupNamespace("a")`</ph>.</source>
          <target state="translated">판독기가 배치 되 면 다음 XML 문자열에는 <ph id="ph1">`href`</ph> 특성을 접두사 <ph id="ph2">`a`</ph> 호출 하 여 확인 <ph id="ph3">`reader.LookupNamespace("a")`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.LookupNamespace(System.String)">
          <source>The returned string is <ph id="ph1">`urn:456`</ph>.</source>
          <target state="translated">반환 된 문자열은 <ph id="ph1">`urn:456`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlNodeReader">
          <source>Moves to the specified attribute.</source>
          <target state="translated">지정된 특성으로 이동합니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.MoveToAttribute(System.Int32)">
          <source>The index of the attribute.</source>
          <target state="translated">특성의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.MoveToAttribute(System.Int32)">
          <source>Moves to the attribute with the specified index.</source>
          <target state="translated">지정된 인덱스가 있는 특성으로 이동합니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.MoveToAttribute(System.Int32)">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.MoveToAttribute(System.Int32)">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">그러면 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 새로운 기능을 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.MoveToAttribute(System.Int32)">
          <source>For more information, see the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.MoveToAttribute(System.Int32)">
          <source>The following example reads all the attributes on the root node.</source>
          <target state="translated">다음 예제에서는 루트 노드에 대 한 모든 특성을 읽습니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.MoveToAttribute(System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="i" /&gt;</ph> parameter is less than 0 or greater than or equal to <ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.AttributeCount" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="i" /&gt;</ph> 매개 변수가 0보다 작거나 <ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.AttributeCount" /&gt;</ph>보다 크거나 같은 경우</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String)">
          <source>The qualified name of the attribute.</source>
          <target state="translated">특성의 정규화된 이름입니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String)">
          <source>Moves to the attribute with the specified name.</source>
          <target state="translated">지정된 이름이 있는 특성으로 이동합니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the attribute is found; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">특성이 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, the reader's position does not change.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph>이면, 판독기의 위치는 변경되지 않습니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String)">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String)">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">그러면 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 새로운 기능을 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String)">
          <source>For more information, see the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String)">
          <source>After calling this method, the <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader.Name%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlNodeReader.NamespaceURI%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Xml.XmlNodeReader.Prefix%2A&gt;</ph> properties reflect the properties of that attribute.</source>
          <target state="translated">이 메서드를 호출한 후의 <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader.Name%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlNodeReader.NamespaceURI%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Xml.XmlNodeReader.Prefix%2A&gt;</ph> 속성 해당 특성의 속성을 반영 합니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">특성의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String,System.String)">
          <source>The namespace URI of the attribute.</source>
          <target state="translated">특성의 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String,System.String)">
          <source>Moves to the attribute with the specified local name and namespace URI.</source>
          <target state="translated">지정된 로컬 이름과 네임스페이스 URI가 있는 특성으로 이동합니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the attribute is found; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">특성이 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String,System.String)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, the reader's position does not change.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph>이면, 판독기의 위치는 변경되지 않습니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String,System.String)">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String,System.String)">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">그러면 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 새로운 기능을 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String,System.String)">
          <source>For more information, see the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String,System.String)">
          <source>After calling this method, the <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader.Name%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlNodeReader.NamespaceURI%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Xml.XmlNodeReader.Prefix%2A&gt;</ph> properties reflect the properties of that attribute.</source>
          <target state="translated">이 메서드를 호출한 후의 <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader.Name%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlNodeReader.NamespaceURI%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Xml.XmlNodeReader.Prefix%2A&gt;</ph> 속성 해당 특성의 속성을 반영 합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.MoveToElement">
          <source>Moves to the element that contains the current attribute node.</source>
          <target state="translated">현재 특성 노드가 포함된 요소로 이동합니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.MoveToElement">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the reader is positioned on an attribute (the reader moves to the element that owns the attribute); <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the reader is not positioned on an attribute (the position of the reader does not change).</source>
          <target state="translated">판독기가 특성에 있으면(특성이 있는 요소로 판독기가 이동하면) <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 판독기가 특성에 없으면(판독기의 위치가 바뀌지 않으면) <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.MoveToElement">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.MoveToElement">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">그러면 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 새로운 기능을 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.MoveToElement">
          <source>For more information, see the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.MoveToElement">
          <source>Use this method to return to an element after navigating through its attributes.</source>
          <target state="translated">이 메서드를 사용 하 여 특성을 탐색 한 후 요소 돌아갑니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.MoveToElement">
          <source>This method moves the reader to one of the following node types: <ph id="ph1">`Element`</ph>, <ph id="ph2">`DocumentType`</ph>, or <ph id="ph3">`XmlDeclaration`</ph>.</source>
          <target state="translated">이 메서드는 다음과 같은 노드 유형 중 하나에 판독기를 이동: <ph id="ph1">`Element`</ph>, <ph id="ph2">`DocumentType`</ph>, 또는 <ph id="ph3">`XmlDeclaration`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.MoveToElement">
          <source>The following example reads all the attributes on the root node.</source>
          <target state="translated">다음 예제에서는 루트 노드에 대 한 모든 특성을 읽습니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.MoveToFirstAttribute">
          <source>Moves to the first attribute.</source>
          <target state="translated">첫 번째 특성으로 이동합니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.MoveToFirstAttribute">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if an attribute exists (the reader moves to the first attribute); otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph> (the position of the reader does not change).</source>
          <target state="translated">특성이 있으면(판독기가 첫 번째 특성으로 이동하면) <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면(판독기의 위치가 바뀌지 않으면) <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.MoveToFirstAttribute">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.MoveToFirstAttribute">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>For more information, see the Remarks section in the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">에 도입 된 새로운 기능을 모두 활용할 수 있습니다는 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.MoveToFirstAttribute">
          <source>The following example gets the value of the first attribute of the root node.</source>
          <target state="translated">다음 예제에서는 루트 노드의 첫 번째 특성의 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.MoveToNextAttribute">
          <source>Moves to the next attribute.</source>
          <target state="translated">다음 특성으로 이동합니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.MoveToNextAttribute">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if there is a next attribute; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if there are no more attributes.</source>
          <target state="translated">다음 특성이 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 더 이상 특성이 없으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.MoveToNextAttribute">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.MoveToNextAttribute">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">그러면 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 새로운 기능을 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.MoveToNextAttribute">
          <source>For more information, see the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.MoveToNextAttribute">
          <source>If the current node is not an attribute node, this method is equivalent to <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader.MoveToFirstAttribute%2A&gt;</ph>.</source>
          <target state="translated">현재 노드의 특성 노드의 경우이 메서드는 <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader.MoveToFirstAttribute%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.MoveToNextAttribute">
          <source>If <ph id="ph1">`MoveToNextAttribute`</ph> returns <ph id="ph2">`true`</ph>, the reader moves to the next attribute; otherwise, the position of the reader does not change.</source>
          <target state="translated">경우 <ph id="ph1">`MoveToNextAttribute`</ph> 반환 <ph id="ph2">`true`</ph>, 판독기가 다음 특성으로 이동, 그렇지 않으면 판독기의 위치가 변경 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.MoveToNextAttribute">
          <source>The following example reads a book.</source>
          <target state="translated">다음 예제에서는 책을 읽습니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlNodeReader.Name">
          <source>Gets the qualified name of the current node.</source>
          <target state="translated">현재 노드의 정규화된 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Name">
          <source>The qualified name of the current node.</source>
          <target state="translated">현재 노드의 정규화된 이름입니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Name">
          <source>For example, <ph id="ph1">&lt;see langword="Name" /&gt;</ph> is <ph id="ph2">&lt;see langword="bk:book" /&gt;</ph> for the element <bpt id="p1">&lt;c&gt;</bpt><ph id="ph3">&amp;lt;</ph>bk:book<ph id="ph4">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">예를 들어 <ph id="ph1">&lt;see langword="Name" /&gt;</ph> 은 <ph id="ph2">&lt;see langword="bk:book" /&gt;</ph> 요소에 대해 <bpt id="p1">&lt;c&gt;</bpt> <ph id="ph3">&amp;lt;</ph>예<ph id="ph4">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Name">
          <source>The name returned is dependent on the <ph id="ph1">&lt;see cref="P:System.Xml.XmlNodeReader.NodeType" /&gt;</ph> of the node.</source>
          <target state="translated">반환되는 이름은 다음과 같이 노드의 <ph id="ph1">&lt;see cref="P:System.Xml.XmlNodeReader.NodeType" /&gt;</ph>에 따라 달라집니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Name">
          <source>The following node types return the listed values.</source>
          <target state="translated">다음 노드 형식은 나열된 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Name">
          <source>All other node types return an empty string.</source>
          <target state="translated">기타 모든 노드 형식은 빈 문자열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Name">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Node Type</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 노드 형식</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Name">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Name</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이름</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Name">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Attribute" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The name of the attribute.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Attribute" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 특성의 이름입니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Name">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="DocumentType" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The document type name.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="DocumentType" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 문서 종류 이름입니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Name">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Element" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The tag name.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Element" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 태그 이름입니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Name">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="EntityReference" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The name of the entity referenced.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="EntityReference" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 참조 엔터티의 이름입니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Name">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="ProcessingInstruction" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The target of the processing instruction.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="ProcessingInstruction" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 처리 명령의 대상입니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Name">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="XmlDeclaration" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The literal string <ph id="ph6">&lt;see langword="xml" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="XmlDeclaration" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 리터럴 문자열 <ph id="ph6">&lt;see langword="xml" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Name">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Name">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">그러면 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 새로운 기능을 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Name">
          <source>For more information, see the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Name">
          <source>The following example reads an XML and displays each of the nodes.</source>
          <target state="translated">다음 예제에서는 XML을 읽고 각 노드를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Name">
          <source>The example uses the file, <ph id="ph1">`items.xml`</ph>, as input.</source>
          <target state="translated">이 예제에서는 파일을 사용 하 여 <ph id="ph1">`items.xml`</ph>입력으로 합니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlNodeReader.NamespaceURI">
          <source>Gets the namespace URI (as defined in the W3C Namespace specification) of the node on which the reader is positioned.</source>
          <target state="translated">W3C 네임스페이스 사양에서 정의된 것처럼 판독기가 있는 노드의 네임스페이스 URI를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.NamespaceURI">
          <source>The namespace URI of the current node; otherwise an empty string.</source>
          <target state="translated">현재 노드의 네임스페이스 URI이거나 빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.NamespaceURI">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.NamespaceURI">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">그러면 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 새로운 기능을 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.NamespaceURI">
          <source>For more information, see the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.NamespaceURI">
          <source>This property is relevant to <ph id="ph1">`Element`</ph> and <ph id="ph2">`Attribute`</ph> nodes only.</source>
          <target state="translated">이 속성은 관련이 <ph id="ph1">`Element`</ph> 및 <ph id="ph2">`Attribute`</ph> 노드만 해당 합니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.NamespaceURI">
          <source>The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</source>
          <target state="translated">다음 예제에서는 각 노드의 로컬 이름을 표시 하 고, 있는 경우, 접두사 및 네임 스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlNodeReader.NameTable">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> associated with this implementation.</source>
          <target state="translated">이 구현과 관련된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph>을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.NameTable">
          <source>The <ph id="ph1">&lt;see langword="XmlNameTable" /&gt;</ph> enabling you to get the atomized version of a string within the node.</source>
          <target state="translated">노드 내에 있는 문자열의 원자화된 버전을 가져올 수 있도록 하는 <ph id="ph1">&lt;see langword="XmlNameTable" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.NameTable">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.NameTable">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">그러면 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 새로운 기능을 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.NameTable">
          <source>For more information, see the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.NameTable">
          <source>All node and attribute names returned from this class are atomized using the <ph id="ph1">`NameTable`</ph>.</source>
          <target state="translated">이 클래스에서 반환 된 모든 노드 및 특성 이름을 사용 하 여 원자화는 <ph id="ph1">`NameTable`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.NameTable">
          <source>When the same name is returned multiple times (for example, <ph id="ph1">`Customer`</ph>), then the same <ph id="ph2">`String`</ph> object is returned for that name.</source>
          <target state="translated">이름이 같은 여러 번에 반환 될 때 (예를 들어 <ph id="ph1">`Customer`</ph>), 다음 동일한 <ph id="ph2">`String`</ph> 해당 이름에 대 한 개체를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.NameTable">
          <source>This makes it possible for you to write efficient code that does object comparisons on these strings instead of expensive string comparisons.</source>
          <target state="translated">이렇게 하면 개체 비용이 많이 드는 문자열 비교 대신이 문자열에 대해 비교를 수행 하는 효율적인 코드를 작성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlNodeReader.NodeType">
          <source>Gets the type of the current node.</source>
          <target state="translated">현재 노드의 형식을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.NodeType">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeType" /&gt;</ph> values representing the type of the current node.</source>
          <target state="translated">현재 노드의 형식을 나타내는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeType" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.NodeType">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.NodeType">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">그러면 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 새로운 기능을 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.NodeType">
          <source>For more information, see the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.NodeType">
          <source>The following example reads an XML and displays each of the nodes.</source>
          <target state="translated">다음 예제에서는 XML을 읽고 각 노드를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.NodeType">
          <source>The example uses the file, <ph id="ph1">`items.xml`</ph>, as input.</source>
          <target state="translated">이 예제에서는 파일을 사용 하 여 <ph id="ph1">`items.xml`</ph>입력으로 합니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlNodeReader.Prefix">
          <source>Gets the namespace prefix associated with the current node.</source>
          <target state="translated">현재 노드와 관련된 네임스페이스 접두사를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Prefix">
          <source>The namespace prefix associated with the current node.</source>
          <target state="translated">현재 노드와 관련된 네임스페이스 접두사입니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Prefix">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Prefix">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">그러면 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 새로운 기능을 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Prefix">
          <source>For more information, see the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Prefix">
          <source>The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</source>
          <target state="translated">다음 예제에서는 각 노드의 로컬 이름을 표시 하 고, 있는 경우, 접두사 및 네임 스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.Read">
          <source>Reads the next node from the stream.</source>
          <target state="translated">스트림에서 다음 노드를 읽습니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.Read">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the next node was read successfully; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if there are no more nodes to read.</source>
          <target state="translated">다음 노드를 읽었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 더 이상 읽을 노드가 없으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.Read">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.Read">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">그러면 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 새로운 기능을 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.Read">
          <source>For more information, see the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.Read">
          <source>When a reader is first created and initialized, there is no information available.</source>
          <target state="translated">판독기가 먼저 초기화를 만들고 이면 정보가 없습니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.Read">
          <source>You must call <ph id="ph1">`Read`</ph> to read the first node.</source>
          <target state="translated">호출 해야 <ph id="ph1">`Read`</ph> 첫 번째 노드를 읽을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.Read">
          <source>The following example reads an XML and displays each node.</source>
          <target state="translated">다음 예제에서는 XML을 읽고 각 노드를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.Read">
          <source>The example uses the file, <ph id="ph1">`items.xml`</ph>, as input.</source>
          <target state="translated">이 예제에서는 파일을 사용 하 여 <ph id="ph1">`items.xml`</ph>입력으로 합니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadAttributeValue">
          <source>Parses the attribute value into one or more <ph id="ph1">&lt;see langword="Text" /&gt;</ph>, <ph id="ph2">&lt;see langword="EntityReference" /&gt;</ph>, or <ph id="ph3">&lt;see langword="EndEntity" /&gt;</ph> nodes.</source>
          <target state="translated">특성 값을 하나 이상의 <ph id="ph1">&lt;see langword="Text" /&gt;</ph>, <ph id="ph2">&lt;see langword="EntityReference" /&gt;</ph> 또는 <ph id="ph3">&lt;see langword="EndEntity" /&gt;</ph> 노드로 구문 분석합니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadAttributeValue">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if there are nodes to return.</source>
          <target state="translated">반환할 노드가 있는 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadAttributeValue">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.</source>
          <target state="translated">처음 호출할 때 판독기가 특성 노드에 있거나 모든 특성 값을 읽은 경우 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadAttributeValue">
          <source>An empty attribute, such as, <bpt id="p1">&lt;c&gt;</bpt>misc=""<ept id="p1">&lt;/c&gt;</ept>, returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> with a single node with a value of String.Empty.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>misc=""<ept id="p1">&lt;/c&gt;</ept>와 같은 빈 특성은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>를 반환하며 이것은 단일 노드가 String.Empty의 값을 갖는 것을 의미합니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadAttributeValue">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadAttributeValue">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">그러면 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 새로운 기능을 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadAttributeValue">
          <source>For more information, see the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadAttributeValue">
          <source>Use this method after calling <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader.MoveToAttribute%2A&gt;</ph> to read through the text or entity reference nodes that make up the attribute value.</source>
          <target state="translated">이 메서드를 사용 하 여 호출한 후 <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader.MoveToAttribute%2A&gt;</ph> 특성 값을 구성 하는 텍스트 또는 엔터티 참조 노드를 읽을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadAttributeValue">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader.Depth%2A&gt;</ph> of the attribute value nodes is one plus the depth of the attribute node; it increments and decrements by one when you step into and out of general entity references.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlNodeReader.Depth%2A&gt;</ph> 특성 값 노드 1을 더한 특성 노드의 깊이 이며 수를 늘리면 내부 / 외부로 일반 엔터티 참조를 단계별로 실행할 때 1 씩 감소 시킵니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadAttributeValue">
          <source>The following example reads an attribute with text and entity reference nodes.</source>
          <target state="translated">다음 예제에서는 텍스트 및 엔터티 참조 노드를 사용 하 여 특성을 읽습니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer into which to copy the resulting text.</source>
          <target state="translated">결과 텍스트를 복사해 넣을 버퍼입니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This value cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 없습니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the buffer where to start copying the result.</source>
          <target state="translated">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to copy into the buffer.</source>
          <target state="translated">버퍼에 복사할 최대 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The actual number of bytes copied is returned from this method.</source>
          <target state="translated">복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>Reads the content and returns the Base64 decoded binary bytes.</source>
          <target state="translated">콘텐츠를 읽고 Base64 디코딩된 이진 바이트를 반환합니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes written to the buffer.</source>
          <target state="translated">버퍼에 쓴 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">그러면 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 새로운 기능을 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>For more information, see the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This method streams the content, decodes the Base64 content, and returns the decoded binary bytes (for example, an inline Base64 encoded GIF image) into the buffer.</source>
          <target state="translated">이 메서드는 콘텐츠를 Base64 콘텐츠를 디코딩합니다 고 (예를 들어, 인라인 Base64 인코딩된 GIF 이미지) 버퍼에 있습니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This method can be called successively to read large streams of embedded text.</source>
          <target state="translated">이 메서드는 포함 된 텍스트의 큰 스트림을 읽도록 연속적으로 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>For more information, see RFC 1521, "MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies".</source>
          <target state="translated">자세한 내용은 RFC 1521을 참조 하십시오. "MIME (Multipurpose Internet Mail Extensions) 파트 1:를 지정 하 고 인터넷 메시지 본문의 형식을 설명 하는 메커니즘"입니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>You can obtain RFCs from the <bpt id="p1">[</bpt>Request for Comments Web site<ept id="p1">](https://www.rfc-editor.org)</ept>.</source>
          <target state="translated">Rfc를 얻을 수는 <bpt id="p1">[</bpt>의견 웹 사이트에 대 한 요청<ept id="p1">](https://www.rfc-editor.org)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>You should not access any of the reader properties between calls to the <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader.ReadContentAsBase64%2A&gt;</ph> method until the method returns the value 0.</source>
          <target state="translated">에 대 한 호출 간의 판독기 속성을 액세스 하지 않아야는 <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader.ReadContentAsBase64%2A&gt;</ph> 메서드 값 0을 반환 될 때까지 메서드.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This method has the following behavior:</source>
          <target state="translated">이 메서드에 다음과 같은 동작이 있습니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlNodeReader.ReadContentAsBase64%2A&gt;</ph> returns the value 0 when it has reached the end of the byte stream it was operating on.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlNodeReader.ReadContentAsBase64%2A&gt;</ph> 작업 중인 바이트 스트림의 끝에 도달한 경우 값 0을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The reader is positioned on the first non-content node.</source>
          <target state="translated">첫 번째 비 콘텐츠 노드에 판독기가 있습니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>If you ask for fewer, or the exact number, of bytes than are left in the stream the reader remains in its current position.</source>
          <target state="translated">요청 하거나 정확한 개수의 바이트 남아 있는 것 보다는 스트림 판독기의 현재 위치에 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlNodeReader.ReadContentAsBase64%2A&gt;</ph> is not supported on the following XML node types: Element, XmlDeclaration, None, Document, DocumentType, Notation, Entity, DocumentFragment.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlNodeReader.ReadContentAsBase64%2A&gt;</ph> 다음 XML 노드 형식에서 지원 되지 않습니다: 요소, XmlDeclaration, None, 문서, DocumentType, 표기법, 엔터티, DocumentFragment 합니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> is not supported on the current node.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /&gt;</ph>가 현재 노드에서 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The index into the buffer or index + count is larger than the allocated buffer size.</source>
          <target state="translated">버퍼 내의 인덱스 또는 인덱스와 개수를 합한 값이 할당된 버퍼 크기보다 큰 경우</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer into which to copy the resulting text.</source>
          <target state="translated">결과 텍스트를 복사해 넣을 버퍼입니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This value cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 없습니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the buffer where to start copying the result.</source>
          <target state="translated">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to copy into the buffer.</source>
          <target state="translated">버퍼에 복사할 최대 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The actual number of bytes copied is returned from this method.</source>
          <target state="translated">복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>Reads the content and returns the BinHex decoded binary bytes.</source>
          <target state="translated">내용을 읽고 BinHex 디코딩된 이진 바이트를 반환합니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes written to the buffer.</source>
          <target state="translated">버퍼에 쓴 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">그러면 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 새로운 기능을 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>For more information, see the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This method streams the content, decodes the BinHex content, and returns the decoded binary bytes (for example, an inline BinHex encoded GIF image) into the buffer.</source>
          <target state="translated">이 메서드는 콘텐츠를 스트리밍하 고 BinHex 콘텐츠를 고 (예를 들어, 인라인 BinHex 인코딩된 GIF 이미지) 버퍼에 있습니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This method can be called successively to read large streams of embedded text.</source>
          <target state="translated">이 메서드는 포함 된 텍스트의 큰 스트림을 읽도록 연속적으로 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>You should not access any of the reader properties between calls to the <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader.ReadContentAsBinHex%2A&gt;</ph> method until the method returns the value 0.</source>
          <target state="translated">에 대 한 호출 간의 판독기 속성을 액세스 하지 않아야는 <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader.ReadContentAsBinHex%2A&gt;</ph> 메서드 값 0을 반환 될 때까지 메서드.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This method has the following behavior:</source>
          <target state="translated">이 메서드에 다음과 같은 동작이 있습니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlNodeReader.ReadContentAsBinHex%2A&gt;</ph> returns the value 0 when it has reached the end of the byte stream it was operating on.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlNodeReader.ReadContentAsBinHex%2A&gt;</ph> 작업 중인 바이트 스트림의 끝에 도달한 경우 값 0을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The reader is positioned on the first non-content node.</source>
          <target state="translated">첫 번째 비 콘텐츠 노드에 판독기가 있습니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>If you ask for fewer, or the exact number, of bytes than are left in the stream the reader remains in its current position.</source>
          <target state="translated">요청 하거나 정확한 개수의 바이트 남아 있는 것 보다는 스트림 판독기의 현재 위치에 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlNodeReader.ReadContentAsBinHex%2A&gt;</ph> is not supported on the following XML node types: Element, XmlDeclaration, None, Document, DocumentType, Notation, Entity, DocumentFragment.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlNodeReader.ReadContentAsBinHex%2A&gt;</ph> 다음 XML 노드 형식에서 지원 되지 않습니다: 요소, XmlDeclaration, None, 문서, DocumentType, 표기법, 엔터티, DocumentFragment 합니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> is not supported on the current node.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /&gt;</ph>가 현재 노드에서 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The index into the buffer or index + count is larger than the allocated buffer size.</source>
          <target state="translated">버퍼 내의 인덱스 또는 인덱스와 개수를 합한 값이 할당된 버퍼 크기보다 큰 경우</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer into which to copy the resulting text.</source>
          <target state="translated">결과 텍스트를 복사해 넣을 버퍼입니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This value cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 없습니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the buffer where to start copying the result.</source>
          <target state="translated">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to copy into the buffer.</source>
          <target state="translated">버퍼에 복사할 최대 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The actual number of bytes copied is returned from this method.</source>
          <target state="translated">복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>Reads the element and decodes the Base64 content.</source>
          <target state="translated">요소를 읽고 Base64 콘텐츠를 디코딩합니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes written to the buffer.</source>
          <target state="translated">버퍼에 쓴 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">그러면 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 새로운 기능을 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>For more information, see the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This method reads the content, decodes it using Base64 encoding, and returns the decoded binary bytes (for example, an inline Base64 encoded GIF image) into the buffer.</source>
          <target state="translated">이 메서드는 내용을 읽고 Base64 인코딩을 사용 하 여 디코딩하고 디코딩된 이진 바이트를 반환 합니다 (예를 들어, 인라인 Base64 인코딩된 GIF 이미지) 버퍼에 있습니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>For more information, see RFC 1521, "MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies".</source>
          <target state="translated">자세한 내용은 RFC 1521을 참조 하십시오. "MIME (Multipurpose Internet Mail Extensions) 파트 1:를 지정 하 고 인터넷 메시지 본문의 형식을 설명 하는 메커니즘"입니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>You can obtain RFCs from the <bpt id="p1">[</bpt>Request for Comments Web site<ept id="p1">](https://www.rfc-editor.org)</ept>.</source>
          <target state="translated">Rfc를 얻을 수는 <bpt id="p1">[</bpt>의견 웹 사이트에 대 한 요청<ept id="p1">](https://www.rfc-editor.org)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This method can only read simple-content elements.</source>
          <target state="translated">이 메서드는 단순 콘텐츠 요소 읽을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The element can contain text, white space, significant white space, CDATA sections, comments and processing instructions.</source>
          <target state="translated">요소는 텍스트, 공백, 유효 공백, CDATA 섹션, 주석 및 처리 명령을 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>It can also contain entity references, which are automatically expanded.</source>
          <target state="translated">자동으로 확장 되는 엔터티 참조를 포함할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The element cannot have child elements.</source>
          <target state="translated">요소는 자식 요소를 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This method is very similar to the <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader.ReadContentAsBase64%2A&gt;</ph> method except that it can only be called on element node types.</source>
          <target state="translated">이 메서드는 매우 비슷합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader.ReadContentAsBase64%2A&gt;</ph> 한다는 점 제외 하면 메서드는 요소 노드 형식에만 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>If the count value is higher than the number of bytes in the document, or if it is equal to the number of bytes in the document, the <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> reads all the remaining bytes in the document and returns the number of bytes read.</source>
          <target state="translated">Count 값이 문서에서 바이트의 수보다 또는 문서에서 바이트 수와 같은 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> 문서에 나머지 모든 바이트를 읽고 읽은 바이트 수를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The next <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader.ReadElementContentAsBase64%2A&gt;</ph> method call returns a zero and moves the reader to the node following the <ph id="ph2">&lt;xref:System.Xml.XmlNodeType.EndElement&gt;</ph> node.</source>
          <target state="translated">다음 <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader.ReadElementContentAsBase64%2A&gt;</ph> 0을 반환 하 고 노드 다음에는 판독기를 이동 하는 메서드 호출의 <ph id="ph2">&lt;xref:System.Xml.XmlNodeType.EndElement&gt;</ph> 노드.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>If you call <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader.Read%2A&gt;</ph> before all of the element content is consumed, the reader may behave as if the first content was consumed and then the <ph id="ph2">&lt;xref:System.Xml.XmlNodeReader.Read%2A&gt;</ph> method was called.</source>
          <target state="translated">호출 하는 경우 <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader.Read%2A&gt;</ph> 요소 콘텐츠를 모두 사용 하기 전에 요소에서 사용 하는 경우 다음는 <ph id="ph2">&lt;xref:System.Xml.XmlNodeReader.Read%2A&gt;</ph> 메서드를 호출 했습니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This means that the reader reads all the text until the end element is encountered.</source>
          <target state="translated">즉, 판독기 끝 요소가 발견 될 때까지 모든 텍스트를 읽습니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>It then reads the end tag node, read the next node, and then position itself on the next subsequent node.</source>
          <target state="translated">그런 다음 끝 태그 노드를 읽어 다음 노드를 읽고 노드로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>See <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A?displayProperty=nameWithType&gt;</ph> to see an example using this method.</source>
          <target state="translated">참조 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A?displayProperty=nameWithType&gt;</ph> 이 메서드를 사용 하는 예제를 볼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The current node is not an element node.</source>
          <target state="translated">현재 노드가 요소 노드가 아닌 경우</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The index into the buffer or index + count is larger than the allocated buffer size.</source>
          <target state="translated">버퍼 내의 인덱스 또는 인덱스와 개수를 합한 값이 할당된 버퍼 크기보다 큰 경우</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The element contains mixed content.</source>
          <target state="translated">요소가 혼합된 내용을 포함합니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The content cannot be converted to the requested type.</source>
          <target state="translated">요소를 요청한 형식으로 변환할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer into which to copy the resulting text.</source>
          <target state="translated">결과 텍스트를 복사해 넣을 버퍼입니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This value cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 없습니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the buffer where to start copying the result.</source>
          <target state="translated">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to copy into the buffer.</source>
          <target state="translated">버퍼에 복사할 최대 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The actual number of bytes copied is returned from this method.</source>
          <target state="translated">복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>Reads the element and decodes the BinHex content.</source>
          <target state="translated">요소를 읽고 BinHex 콘텐츠를 디코딩합니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes written to the buffer.</source>
          <target state="translated">버퍼에 쓴 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">그러면 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 새로운 기능을 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>For more information, see the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This method reads the element content, decodes it using BinHex encoding, and returns the decoded binary bytes (for example, an inline BinHex encoded GIF image) into the buffer.</source>
          <target state="translated">이 메서드는 요소 내용을 읽고 BinHex 인코딩을 사용 하 여 디코딩하고 디코딩된 이진 바이트를 반환 합니다 (예를 들어, 인라인 BinHex 인코딩된 GIF 이미지) 버퍼에 있습니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This method can only read simple-content elements.</source>
          <target state="translated">이 메서드는 단순 콘텐츠 요소 읽을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The element can contain text, white space, significant white space, CDATA sections, comments and processing instructions.</source>
          <target state="translated">요소는 텍스트, 공백, 유효 공백, CDATA 섹션, 주석 및 처리 명령을 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>It can also contain entity references, which are automatically expanded.</source>
          <target state="translated">자동으로 확장 되는 엔터티 참조를 포함할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The element cannot have child elements.</source>
          <target state="translated">요소는 자식 요소를 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This method is very similar to the <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader.ReadContentAsBinHex%2A&gt;</ph> method except that it can only be called on element node types.</source>
          <target state="translated">이 메서드는 매우 비슷합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader.ReadContentAsBinHex%2A&gt;</ph> 한다는 점 제외 하면 메서드는 요소 노드 형식에만 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>If the count value is higher than the number of bytes in the document, or if it is equal to the number of bytes in the document, the <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> reads all the remaining bytes in the document and returns the number of bytes read.</source>
          <target state="translated">Count 값이 문서에서 바이트의 수보다 또는 문서에서 바이트 수와 같은 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> 문서에 나머지 모든 바이트를 읽고 읽은 바이트 수를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The next <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> method call returns a zero and moves the reader to the node following the <ph id="ph2">&lt;xref:System.Xml.XmlNodeType.EndElement&gt;</ph> node.</source>
          <target state="translated">다음 <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> 0을 반환 하 고 노드 다음에는 판독기를 이동 하는 메서드 호출의 <ph id="ph2">&lt;xref:System.Xml.XmlNodeType.EndElement&gt;</ph> 노드.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>If you call <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader.Read%2A&gt;</ph> before all of the element content is consumed, the reader may behave as if the first content was consumed and then the <ph id="ph2">&lt;xref:System.Xml.XmlNodeReader.Read%2A&gt;</ph> method was called.</source>
          <target state="translated">호출 하는 경우 <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader.Read%2A&gt;</ph> 요소 콘텐츠를 모두 사용 하기 전에 요소에서 사용 하는 경우 다음는 <ph id="ph2">&lt;xref:System.Xml.XmlNodeReader.Read%2A&gt;</ph> 메서드를 호출 했습니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This means that the reader reads all the text until the end element is encountered.</source>
          <target state="translated">즉, 판독기 끝 요소가 발견 될 때까지 모든 텍스트를 읽습니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>It then reads the end tag node, read the next node, and then position itself on the next subsequent node.</source>
          <target state="translated">그런 다음 끝 태그 노드를 읽어 다음 노드를 읽고 노드로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>See <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A?displayProperty=nameWithType&gt;</ph> to see an example using this method.</source>
          <target state="translated">참조 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A?displayProperty=nameWithType&gt;</ph> 이 메서드를 사용 하는 예제를 볼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The current node is not an element node.</source>
          <target state="translated">현재 노드가 요소 노드가 아닌 경우</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The index into the buffer or index + count is larger than the allocated buffer size.</source>
          <target state="translated">버퍼 내의 인덱스 또는 인덱스와 개수를 합한 값이 할당된 버퍼 크기보다 큰 경우</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The element contains mixed content.</source>
          <target state="translated">요소가 혼합된 내용을 포함합니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The content cannot be converted to the requested type.</source>
          <target state="translated">요소를 요청한 형식으로 변환할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlNodeReader.ReadState">
          <source>Gets the state of the reader.</source>
          <target state="translated">판독기의 상태를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.ReadState">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Xml.ReadState" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.ReadState" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.ReadState">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.ReadState">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">그러면 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 새로운 기능을 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.ReadState">
          <source>For more information, see the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadString">
          <source>Reads the contents of an element or text node as a string.</source>
          <target state="translated">요소 또는 텍스트 노드의 내용을 문자열로 읽습니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadString">
          <source>The contents of the element or text-like node (This can include CDATA, Text nodes, and so on).</source>
          <target state="translated">요소나 텍스트와 유사한 노드(CDATA, 텍스트 노드 등)의 내용입니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadString">
          <source>This can be an empty string if the reader is positioned on something other than an element or text node, or if there is no more text content to return in the current context.</source>
          <target state="translated">판독기가 요소 또는 텍스트 노드 이외의 위치에 있거나 현재 컨텍스트에 반환할 텍스트 콘텐츠가 없는 경우 이것은 빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ReadString">
          <source><ph id="ph1">&lt;see langword="Note:" /&gt;</ph> The text node can be either an element or an attribute text node.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Note:" /&gt;</ph> 텍스트 노드는 요소 또는 특성 텍스트 노드입니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadString">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadString">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">그러면 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 새로운 기능을 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadString">
          <source>For more information, see the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadString">
          <source>If positioned on an element, <ph id="ph1">`ReadString`</ph> concatenates all text, significant white space, white space, and CData section node types together and returns the concatenated data as the element content.</source>
          <target state="translated">요소에 배치 되 면 <ph id="ph1">`ReadString`</ph> 모든 텍스트, 유효 공백 문자, 공백 및 CData 섹션 노드 형식을 함께 연결 하 고 요소 내용, 연결 된 데이터를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadString">
          <source>It stops when any markup is encountered.</source>
          <target state="translated">태그에서 발견 되 면 중지 합니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadString">
          <source>This could occur in a mixed content model, or when an element end tag is read.</source>
          <target state="translated">이러한 동작은 혼합 내용 모델에서 발생하거나 요소 끝 태그를 읽을 때 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadString">
          <source>If positioned on a text-like node, <ph id="ph1">`ReadString`</ph> performs the same concatenation from the text node to the element end tag.</source>
          <target state="translated">텍스트 형식의 노드에 있을 경우 <ph id="ph1">`ReadString`</ph> 요소 끝 태그를 텍스트 노드를 동일한 연결을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadString">
          <source>If the reader is positioned on an attribute text node, <ph id="ph1">`ReadString`</ph> has the same functionality as if the reader were position on the element start tag.</source>
          <target state="translated">판독기가 특성 텍스트 노드에 있을 경우 <ph id="ph1">`ReadString`</ph>에는 판독기가 요소 시작 태그에 있을 때와 같은 기능이 있습니다.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadString">
          <source>It returns all the concatenated element text nodes.</source>
          <target state="translated">연결된 모든 요소 텍스트 노드를 반환합니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ReadString">
          <source>The following example displays the text content of each of the elements.</source>
          <target state="translated">다음 예제에서는 각 요소의 텍스트 콘텐츠를 표시합니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ResolveEntity">
          <source>Resolves the entity reference for <ph id="ph1">&lt;see langword="EntityReference" /&gt;</ph> nodes.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="EntityReference" /&gt;</ph> 노드에 대해 엔터티 참조를 확인합니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ResolveEntity">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ResolveEntity">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">그러면 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 새로운 기능을 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ResolveEntity">
          <source>For more information, see the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ResolveEntity">
          <source>If the reader is positioned on an <ph id="ph1">`EntityReference`</ph> node (<ph id="ph2">`XmlNodeType.EntityReference`</ph>), if <ph id="ph3">&lt;xref:System.Xml.XmlNodeReader.Read%2A&gt;</ph> is called after calling this method, the entity replacement text is parsed.</source>
          <target state="translated">판독기가 배치 되 면는 <ph id="ph1">`EntityReference`</ph> 노드 (<ph id="ph2">`XmlNodeType.EntityReference`</ph>) 하는 경우, <ph id="ph3">&lt;xref:System.Xml.XmlNodeReader.Read%2A&gt;</ph> 이 방법에서는 엔터티 대체 텍스트를 구문 분석 하는 호출 후에 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ResolveEntity">
          <source>When the entity replacement text is finished, an <ph id="ph1">`EndEntity`</ph> node is returned to close the entity reference scope.</source>
          <target state="translated">엔터티 대체 텍스트 완료 되 면는 <ph id="ph1">`EndEntity`</ph> 노드가 엔터티 참조 범위를 닫습니다 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ResolveEntity">
          <source>After calling this method, if the entity is part of an attribute value, you must call <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader.ReadAttributeValue%2A&gt;</ph> to step into the entity.</source>
          <target state="translated">이 메서드를 호출한 후 엔터티의 특성 값의 일부인 경우 호출 해야 <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader.ReadAttributeValue%2A&gt;</ph> 를 엔터티로 단계로 합니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.ResolveEntity">
          <source>The following example uses <ph id="ph1">`ResolveEntity`</ph> to expand a general entity.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`ResolveEntity`</ph> 일반 엔터티를 확장 합니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.ResolveEntity">
          <source>The reader is not positioned on an <ph id="ph1">&lt;see langword="EntityReference" /&gt;</ph> node.</source>
          <target state="translated">판독기가 <ph id="ph1">&lt;see langword="EntityReference" /&gt;</ph> 노드에 배치되지 않은 경우</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlNodeReader.SchemaInfo">
          <source>Gets the schema information that has been assigned to the current node.</source>
          <target state="translated">현재 노드에 할당된 스키마 정보를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.SchemaInfo">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.IXmlSchemaInfo" /&gt;</ph> object containing the schema information for the current node.</source>
          <target state="translated">현재 노드에 대한 스키마 정보를 포함하는 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.IXmlSchemaInfo" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.SchemaInfo">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.SchemaInfo">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">그러면 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 새로운 기능을 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.SchemaInfo">
          <source>For more information, see the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.SchemaInfo">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.IXmlSchemaInfo&gt;</ph> interface represents the Post Schema Validation Infoset (PSVI) of the underlying XML node.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.IXmlSchemaInfo&gt;</ph> 인터페이스는 스키마 유효성 검사 이후 정보 집합 (PSVI) 기본 XML 노드를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.SchemaInfo">
          <source>The PSVI contents of this property are set after the node has been validated.</source>
          <target state="translated">이 속성의 PSVI 콘텐츠 노드를 확인 후 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.Skip">
          <source>Skips the children of the current node.</source>
          <target state="translated">현재 노드의 자식을 건너뜁니다.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.Skip">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.Skip">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">그러면 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 새로운 기능을 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.Skip">
          <source>For more information, see the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.Skip">
          <source>For example, suppose you have the following XML input:</source>
          <target state="translated">예를 들어 다음 XML 입력 있다고 가정 합니다.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.Skip">
          <source>If the reader is positioned on the "<ph id="ph1">\&lt;</ph>a&gt;" node or any of its attributes, calling <ph id="ph2">`Skip`</ph> positions the reader to the "<ph id="ph3">\&lt;</ph>b&gt;" node.</source>
          <target state="translated">판독기가 위치에 "<ph id="ph1">\&lt;</ph>는 &gt;" 노드 또는 특성, 호출 <ph id="ph2">`Skip`</ph> 판독기가 "<ph id="ph3">\&lt;</ph>b &gt;" 노드.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.Skip">
          <source>If the reader is positioned on a leaf node already (such as element "x" or the text node "abc"), calling <ph id="ph1">`Skip`</ph> is the same as calling <ph id="ph2">&lt;xref:System.Xml.XmlNodeReader.Read%2A&gt;</ph>.</source>
          <target state="translated">판독기가 리프 노드에 이미 (예: "x" 요소 또는 텍스트 노드 "abc") 하는 경우 호출 <ph id="ph1">`Skip`</ph> 호출할 때와 동일 하 게 <ph id="ph2">&lt;xref:System.Xml.XmlNodeReader.Read%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.Skip">
          <source>This method checks for well-formed XML.</source>
          <target state="translated">이 메서드는 올바른 형식의 XML에 대 한 확인합니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.Skip">
          <source>The following example reads the price element node in the XML document.</source>
          <target state="translated">다음 예제에서는 XML 문서의 가격 요소 노드를 읽습니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
          <source><ph id="ph1">&lt;see cref="T:System.Xml.XmlNamespaceScope" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlNamespaceScope" /&gt;</ph> 개체</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
          <source><ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object that contains the namespaces that are in scope.</source>
          <target state="translated">범위에 있는 네임스페이스가 포함된 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
          <source><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the namespace prefix.</source>
          <target state="translated">네임스페이스 접두사가 포함된 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
          <source><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the namespace name.</source>
          <target state="translated">네임스페이스 이름이 포함된 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
          <source><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> object that identifies the namespace.</source>
          <target state="translated">네임스페이스를 식별하는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>개체입니다.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
          <source><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> object that contains the namespace prefix.</source>
          <target state="translated">네임스페이스 접두사가 포함된 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlNodeReader.Value">
          <source>Gets the text value of the current node.</source>
          <target state="translated">현재 노드의 텍스트 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Value">
          <source>The value returned depends on the <ph id="ph1">&lt;see cref="P:System.Xml.XmlNodeReader.NodeType" /&gt;</ph> of the node.</source>
          <target state="translated">노드의 <ph id="ph1">&lt;see cref="P:System.Xml.XmlNodeReader.NodeType" /&gt;</ph>에 따라 반환되는 값이 달라집니다.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Value">
          <source>The following table lists node types that have a value to return.</source>
          <target state="translated">다음 표에서는 반환할 값이 있는 노드 형식을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Value">
          <source>All other node types return String.Empty.</source>
          <target state="translated">다른 모든 노드 형식은 String.Empty를 반환합니다.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Value">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Node Type</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 노드 형식</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Value">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 값</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Attribute" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The value of the attribute.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Attribute" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 특성의 값입니다.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="CDATA" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The content of the CDATA section.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="CDATA" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> CDATA 섹션의 내용입니다.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Comment" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The content of the comment.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Comment" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 주석의 내용입니다.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="DocumentType" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The internal subset.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="DocumentType" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 내부 하위 집합입니다.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="ProcessingInstruction" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The entire content, excluding the target.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="ProcessingInstruction" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 대상을 제외한 전체 내용입니다.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="SignificantWhitespace" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The white space between markup in a mixed content model.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="SignificantWhitespace" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 혼합된 내용 모델에서 태그 사이의 공백입니다.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Text" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The content of the text node.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Text" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 텍스트 노드의 내용입니다.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Whitespace" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The white space between markup.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Whitespace" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 태그 사이의 공백입니다.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="XmlDeclaration" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The content of the declaration.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="XmlDeclaration" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 선언 내용입니다.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Value">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Value">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">그러면 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 새로운 기능을 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Value">
          <source>For more information, see the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Value">
          <source>The following example reads an XML and displays each node.</source>
          <target state="translated">다음 예제에서는 XML을 읽고 각 노드를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.Value">
          <source>The example uses the file, <ph id="ph1">`items.xml`</ph>, as input.</source>
          <target state="translated">이 예제에서는 파일을 사용 하 여 <ph id="ph1">`items.xml`</ph>입력으로 합니다.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlNodeReader.XmlLang">
          <source>Gets the current <ph id="ph1">&lt;see langword="xml:lang" /&gt;</ph> scope.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see langword="xml:lang" /&gt;</ph> 범위를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.XmlLang">
          <source>The current <ph id="ph1">&lt;see langword="xml:lang" /&gt;</ph> scope.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see langword="xml:lang" /&gt;</ph> 범위입니다.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.XmlLang">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.XmlLang">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">그러면 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 새로운 기능을 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.XmlLang">
          <source>For more information, see the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.XmlLang">
          <source>This property represents the xml:lang scope within which the current node resides.</source>
          <target state="translated">이 속성은 현재 노드가 속해 있는 xml: lang 범위를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.XmlLang">
          <source>For example, here is an XML fragment with <ph id="ph1">`xml:lang`</ph> set to US English in the root element:</source>
          <target state="translated">예를 들어 여기는 XML 조각으로 <ph id="ph1">`xml:lang`</ph> 루트 요소에 영어 (미국)로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.XmlLang">
          <source>When the reader is positioned on the <ph id="ph1">`name`</ph> element, you can use this property to find that it is in the scope of a US English <ph id="ph2">`xml:lang`</ph> attribute.</source>
          <target state="translated">에 판독기가 배치 하는 경우는 <ph id="ph1">`name`</ph> 요소를이 속성을 사용 하 여 미국 영어의 범위에 필요할 수 있습니다 <ph id="ph2">`xml:lang`</ph> 특성입니다.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.XmlLang">
          <source>The string returned is also in <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader.NameTable%2A&gt;</ph>.</source>
          <target state="translated">반환 되는 문자열에도 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader.NameTable%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlNodeReader.XmlSpace">
          <source>Gets the current <ph id="ph1">&lt;see langword="xml:space" /&gt;</ph> scope.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see langword="xml:space" /&gt;</ph> 범위를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.XmlSpace">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlSpace" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlSpace" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.XmlSpace">
          <source>If no <ph id="ph1">&lt;see langword="xml:space" /&gt;</ph> scope exists, this property defaults to <ph id="ph2">&lt;see langword="XmlSpace.None" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="xml:space" /&gt;</ph> 범위가 존재하지 않으면 이 속성은 기본적으로 <ph id="ph2">&lt;see langword="XmlSpace.None" /&gt;</ph>으로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.XmlSpace">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>, the recommended practice is to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instances using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class and the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph>에서는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스와 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드를 사용하여 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 인스턴스를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.XmlSpace">
          <source>This allows you to take full advantage of all the new features introduced in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">그러면 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 새로운 기능을 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeReader.XmlSpace">
          <source>For more information, see the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 주의 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>