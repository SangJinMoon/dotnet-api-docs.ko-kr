<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlReader.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5e05b5b2-d481-4262-b7b7-7de7ac2afe07f131342c31849882b2057cbe4dede427764d9b6c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f131342c31849882b2057cbe4dede427764d9b6c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df6cf590aa3087f6c7c202712eee781c6a3c8f96</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/07/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>Represents a reader that provides fast, noncached, forward-only access to XML data.</source>
          <target state="translated">빠르고, 캐시되지 않으며 앞으로만 이동 가능한 XML 데이터 액세스를 제공하는 판독기를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> provides forward-only, read-only access to XML data in a document or stream.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 문서 또는 스트림에 XML 데이터에 대 한 정방향 전용, 읽기 전용 액세스를 제공합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>This class conforms to the W3C <bpt id="p1">[</bpt>Extensible Markup Language (XML) 1.0 (fourth edition)<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/)</ept> and the <bpt id="p2">[</bpt>Namespaces in XML 1.0 (third edition)<ept id="p2">](https://www.w3.org/TR/REC-xml-names/)</ept> recommendations.</source>
          <target state="translated">이 클래스는 W3C에 맞는 <bpt id="p1">[</bpt>태그 XML (Extensible Language) 1.0 (fourth edition)<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/)</ept> 및 <bpt id="p2">[</bpt>XML 1.0에 대 한 네임 스페이스 (세 번째 버전)<ept id="p2">](https://www.w3.org/TR/REC-xml-names/)</ept> 권장 사항입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> methods let you move through XML data and read the contents of a node.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 메서드를 사용 하 여 XML 데이터를 탐색 하 고 노드의 내용을 읽을 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The properties of the class reflect the value of the current node, which is where the reader is positioned.The <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadState%2A&gt;</ph> property value indicates the current state of the XML reader.</source>
          <target state="translated">클래스의 속성이 판독기의 위치는 현재 노드의 값을 반영 합니다. <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadState%2A&gt;</ph> 속성 값은 XML 판독기의 현재 상태를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>For example, the property is set to <ph id="ph1">&lt;xref:System.Xml.ReadState.Initial?displayProperty=nameWithType&gt;</ph> by the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType&gt;</ph> method and <ph id="ph3">&lt;xref:System.Xml.ReadState.Closed?displayProperty=nameWithType&gt;</ph> by the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Close%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">예를 들어는 속성 <ph id="ph1">&lt;xref:System.Xml.ReadState.Initial?displayProperty=nameWithType&gt;</ph> 하 여는 <ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType&gt;</ph> 메서드 및 <ph id="ph3">&lt;xref:System.Xml.ReadState.Closed?displayProperty=nameWithType&gt;</ph> 여는 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Close%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> also provides data conformance checks and validation against a DTD or schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 또한 데이터 규칙 검사 및 DTD 또는 스키마에 대 한 유효성 검사를 제공합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> uses a pull model to retrieve data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 끌어오기 모델을 사용 하 여 데이터를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>This model:</source>
          <target state="translated">이 모델입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Simplifies state management by a natural, top-down procedural refinement.</source>
          <target state="translated">자연, 위에서 아래로 프로시저 방식을 상태 관리를 간소화합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Supports multiple input streams and layering.</source>
          <target state="translated">여러 입력된 스트림 및 계층화를 지원합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Enables the client to give the parser a buffer into which the string is directly written, and thus avoids the necessity of an extra string copy.</source>
          <target state="translated">파서에 문자열 직접 기록 및 따라서 추가 문자열 복사 하는 필요성을 방지 된 버퍼를 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Supports selective processing.</source>
          <target state="translated">선택적 처리를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The client can skip items and process those that are of interest to the application.</source>
          <target state="translated">클라이언트 항목을 건너뛰고 응용 프로그램에 중요 하는 것을 처리 하십시오.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>You can also set properties in advance to manage how the XML stream is processed (for example, normalization).</source>
          <target state="translated">XML 스트림 (예: 정규화) 처리 되는 방법을 관리 하기 위한 미리를 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>In this section:</source>
          <target state="translated">섹션 내용</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">[</bpt>Creating an XML reader<ept id="p1">](#xmlreader_create)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>XML 판독기를 만드는<ept id="p1">](#xmlreader_create)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">[</bpt>Validating XML data<ept id="p1">](#xmlreader_validate)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>XML 데이터 유효성 검사<ept id="p1">](#xmlreader_validate)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">[</bpt>Data conformance<ept id="p1">](#xmlreader_data)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>데이터 규칙<ept id="p1">](#xmlreader_data)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">[</bpt>Navigating through nodes<ept id="p1">](#xmlreader_nodes)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>노드를 통해 탐색<ept id="p1">](#xmlreader_nodes)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">[</bpt>Reading XML elements<ept id="p1">](#xmlreader_elements)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>읽을 XML 요소<ept id="p1">](#xmlreader_elements)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">[</bpt>Reading XML attributes<ept id="p1">](#xmlreader_attributes)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>읽을 XML 특성<ept id="p1">](#xmlreader_attributes)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">[</bpt>Reading XML content<ept id="p1">](#xmlreader_content)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>읽을 XML 콘텐츠<ept id="p1">](#xmlreader_content)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">[</bpt>Converting to CLR types<ept id="p1">](#xmlreader_clr)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>CLR 형식으로 변환<ept id="p1">](#xmlreader_clr)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">[</bpt>Asynchronous programming<ept id="p1">](#xmlreader_async)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>비동기 프로그래밍<ept id="p1">](#xmlreader_async)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">[</bpt>Security considerations<ept id="p1">](#xmlreader_security)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>보안 고려 사항<ept id="p1">](#xmlreader_security)</ept></target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Creating an XML reader</source>
          <target state="translated">XML 판독기를 만드는</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method to create an <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instance.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 만드는 메서드를 프로그램 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Although the .NET Framework provides concrete implementations of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> class, such as the <ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlNodeReader&gt;</ph>, and the <ph id="ph4">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> classes, we recommend that you use the specialized classes only in these scenarios:</source>
          <target state="translated">.NET Framework의 구체적 구현을 제공 하지만 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스 같은 <ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlNodeReader&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스인 것이 좋습니다 특수화 클래스를 사용 하 여 이러한 시나리오에만:</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>When you want to read an XML DOM subtree from an <ph id="ph1">&lt;xref:System.Xml.XmlNode&gt;</ph> object, use the <ph id="ph2">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> class.</source>
          <target state="translated">XML DOM 하위 트리에서 보려는 <ph id="ph1">&lt;xref:System.Xml.XmlNode&gt;</ph> 개체를 가져오려면는 <ph id="ph2">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>(However, this class doesn't support DTD or schema validation.)</source>
          <target state="translated">그러나 (이 클래스 지원 하지 않습니다 DTD 또는 스키마 유효성 검사 합니다.)</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>If you must expand entities on request, you don't want your text content normalized, or you don't want default attributes returned, use the <ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph> class.</source>
          <target state="translated">요청에 엔터티를 확장 해야, 하지 않는 텍스트 콘텐츠 정규화 하거나 기본 반환 되는 특성을 사용 하지 않으려면는 <ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>To specify the set of features you want to enable on the XML reader, pass an <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType&gt;</ph> object to the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">전달 된 XML 판독기에서 사용 하도록 설정 하려는 기능 집합을 지정 하려면는 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType&gt;</ph> 개체는 <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>You can use a single <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType&gt;</ph> object to create multiple readers with the same functionality, or modify the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType&gt;</ph> object to create a new reader with a different set of features.</source>
          <target state="translated">단일을 사용할 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType&gt;</ph> 같은 기능을 갖춘 여러 판독기를 만들을 가지 거 나 수정는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType&gt;</ph> 개체와 다른 기능 집합이 새 판독기를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>You can also easily add features to an existing reader.</source>
          <target state="translated">또한 기존 판독기에 기능을 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>If you don't use a <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType&gt;</ph> object, default settings are used.</source>
          <target state="translated">사용 하지 않는 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType&gt;</ph> 개체를 기본 설정이 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>See the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> reference page for details.</source>
          <target state="translated">참조는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 대 한 자세한 내용은 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> throws an <ph id="ph2">&lt;xref:System.Xml.XmlException&gt;</ph> on XML parse errors.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> throw 한 <ph id="ph2">&lt;xref:System.Xml.XmlException&gt;</ph> xml 구문 분석 오류입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>After an exception is thrown, the state of the reader is not predictable.</source>
          <target state="translated">예외가 throw 되 면 판독기의 상태가 예측 가능한있지 않습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>For example, the reported node type may be different from the actual node type of the current node.</source>
          <target state="translated">예를 들어 보고 된 노드 형식은 현재 노드의 실제 노드 형식과 다를 수 있습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadState%2A&gt;</ph> property to check whether the reader is in error state.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadState%2A&gt;</ph> 판독기가 오류 상태에 있는지 여부를 확인할 속성입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Validating XML data</source>
          <target state="translated">XML 데이터 유효성 검사</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>To define the structure of an XML document and its element relationships, data types, and content constraints, you use a document type definition (DTD) or XML Schema definition language (XSD) schema.</source>
          <target state="translated">XML 문서 요소 관계, 데이터 형식 및 내용 제약 조건의 구조를 정의 하려면 문서 유형 정의 (DTD) 또는 XML 스키마 정의 언어 (XSD) 스키마를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>An XML document is considered to be well formed if it meets all the syntactical requirements defined by the <bpt id="p1">[</bpt>W3C XML 1.0 Recommendation<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/)</ept>.</source>
          <target state="translated">XML 문서에 정의 된 한 모든 구문 요구 사항을 충족 하는 경우 올바르게 구성 되어야으로 간주 됩니다는 <bpt id="p1">[</bpt>W3C XML 1.0 권장 사항<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>It's considered valid if it's well formed and also conforms to the constraints defined by its DTD or schema.</source>
          <target state="translated">잘 작성 하 고 DTD 나 스키마에 정의 된 제약 조건에도 부합 하는 경우 유효한 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>(See the <bpt id="p1">[</bpt>W3C XML Schema Part 1: Structures<ept id="p1">](https://www.w3.org/TR/xmlschema-1/)</ept> and the <bpt id="p2">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p2">](https://www.w3.org/TR/xmlschema-2/)</ept>recommendations.) Therefore, although all valid XML documents are well formed, not all well-formed XML documents are valid.</source>
          <target state="translated">(참조는 <bpt id="p1">[</bpt>W3C XML 스키마 1 부: 구조<ept id="p1">](https://www.w3.org/TR/xmlschema-1/)</ept> 및 <bpt id="p2">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p2">](https://www.w3.org/TR/xmlschema-2/)</ept>권장 사항입니다.) 그러므로 유효한 모든 XML 문서가 제대로 구성되었더라도 제대로 구성된 XML 문서가 모두 유효한 것은 아닙니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>You can validate the data against a DTD, an inline XSD Schema, or an XSD Schema stored in an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> object (a cache); these scenarios are described on the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> reference page.</source>
          <target state="translated">에 저장 된 XSD 스키마 또는 DTD, 인라인 XSD 스키마에 대해 데이터 유효성을 검사할 수는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> (캐시); 개체에서 이러한 시나리오를 설명는 <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> doesn't support XML-Data Reduced (XDR) schema validation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> Xml-data Reduced (XDR) 스키마 유효성 검사를 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>You use the following settings on the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class to specify what type of validation, if any, the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instance supports.</source>
          <target state="translated">다음 설정을 사용 하면는 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 있는 경우, 유효성 검사의 유형을 지정 하는 클래스는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 인스턴스를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Use this <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> member</source>
          <target state="translated">이 사용 하 여 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 멤버</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>To specify</source>
          <target state="translated">지정할 함수</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.DtdProcessing%2A&gt;</ph> property</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.DtdProcessing%2A&gt;</ph> 속성</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Whether to allow DTD processing.</source>
          <target state="translated">DTD 처리를 허용할지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The default is to disallow DTD processing.</source>
          <target state="translated">기본값은 DTD 처리를 허용하지 않는 것입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ValidationType%2A&gt;</ph> property</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ValidationType%2A&gt;</ph> 속성</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Whether the reader should validate data, and what type of validation to perform (DTD or schema).</source>
          <target state="translated">판독기 데이터 유효성 검사 여부와 어떤 유형의 (DTD 또는 스키마)를 수행할 유효성 검사 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The default is no data validation.</source>
          <target state="translated">기본값은 데이터 유효성 검사를 수행하지 않는 것입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ValidationEventHandler&gt;</ph> event</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ValidationEventHandler&gt;</ph> 이벤트</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>An event handler for receiving information about validation events.</source>
          <target state="translated">유효성 검사 이벤트에 대 한 정보를 수신 하기 위한 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>If an event handler is not provided, an <ph id="ph1">&lt;xref:System.Xml.XmlException&gt;</ph> is thrown on the first validation error.</source>
          <target state="translated">이벤트 처리기를 지정하지 않으면 첫 번째 유효성 검사 오류에서 <ph id="ph1">&lt;xref:System.Xml.XmlException&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ValidationFlags%2A&gt;</ph> property</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ValidationFlags%2A&gt;</ph> 속성</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Additional validation options through the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;</ph> enumeration members:</source>
          <target state="translated">통해 추가 유효성 검사 옵션은 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;</ph> 열거형 멤버:</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">-   </ph><ph id="ph2">`AllowXmlAttributes`</ph>-- Allow XML attributes (<ph id="ph3">`xml:*`</ph>) in instance documents even when they're not defined in the schema.</source>
          <target state="translated"><ph id="ph1">-   </ph><ph id="ph2">`AllowXmlAttributes`</ph>--XML 특성을 허용 하는 중 (<ph id="ph3">`xml:*`</ph>) 스키마에 정의 되어 있지 하는 경우에 인스턴스 문서에 있습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The attributes are validated based on their data type.</source>
          <target state="translated">데이터 형식을 기준으로 특성의 유효성이 검사됩니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>See the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;</ph> reference page for  the setting to use in specific scenarios.</source>
          <target state="translated">참조는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;</ph> 참조 페이지에 대 한 특정 시나리오에서 사용 하도록 설정 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>(Disabled by default.)</source>
          <target state="translated">(기본적으로 비활성화 합니다.)</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">-   </ph><ph id="ph2">`ProcessIdentityConstraints`</ph> --Process identity constraints (<ph id="ph3">`xs:ID`</ph>, <ph id="ph4">`xs:IDREF`</ph>, <ph id="ph5">`xs:key`</ph>, <ph id="ph6">`xs:keyref`</ph>, <ph id="ph7">`xs:unique`</ph>) encountered during validation.</source>
          <target state="translated"><ph id="ph1">-   </ph><ph id="ph2">`ProcessIdentityConstraints`</ph> -Identity 제약 조건 처리 (<ph id="ph3">`xs:ID`</ph>, <ph id="ph4">`xs:IDREF`</ph>, <ph id="ph5">`xs:key`</ph>, <ph id="ph6">`xs:keyref`</ph>, <ph id="ph7">`xs:unique`</ph>) 유효성 검사 중 발생 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>(Enabled by default.)</source>
          <target state="translated">(기본적으로 사용 합니다.)</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">-   </ph><ph id="ph2">`ProcessSchemaLocation`</ph> --Process schemas specified by the <ph id="ph3">`xsi:schemaLocation`</ph> or <ph id="ph4">`xsi:noNamespaceSchemaLocation`</ph> attribute.</source>
          <target state="translated"><ph id="ph1">-   </ph><ph id="ph2">`ProcessSchemaLocation`</ph> -을 처리 하 여 지정 된 스키마는 <ph id="ph3">`xsi:schemaLocation`</ph> 또는 <ph id="ph4">`xsi:noNamespaceSchemaLocation`</ph> 특성입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>(Enabled by default.)</source>
          <target state="translated">(기본적으로 사용 합니다.)</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">-   </ph><ph id="ph2">`ProcessInlineSchema`</ph>-- Process inline XML Schemas during validation.</source>
          <target state="translated"><ph id="ph1">-   </ph><ph id="ph2">`ProcessInlineSchema`</ph>-유효성 검사 중 인라인 XML 스키마를 처리 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>(Disabled by default.)</source>
          <target state="translated">(기본적으로 비활성화 합니다.)</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">-   </ph><ph id="ph2">`ReportValidationWarnings`</ph>--Report events if a validation warning occurs.</source>
          <target state="translated"><ph id="ph1">-   </ph><ph id="ph2">`ReportValidationWarnings`</ph>-유효성 검사 경고가 발생 하면 이벤트를 보고 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>A warning is typically issued when there is no DTD or XML Schema to validate a particular element or attribute against.</source>
          <target state="translated">일반적으로 특정 요소나 특성을 유효성 검사하기 위한 DTD 또는 XML 스키마가 없을 경우 경고가 발생합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ValidationEventHandler&gt;</ph> is used for notification.</source>
          <target state="translated">알림에는 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ValidationEventHandler&gt;</ph>가 사용됩니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>(Disabled by default.)</source>
          <target state="translated">(기본적으로 비활성화 합니다.)</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> to use for validation.</source>
          <target state="translated">유효성 검사에 사용할 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> property</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> 속성</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> for resolving and accessing external resources.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> 확인 하 고 외부 리소스에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>This can include external entities such as DTD and schemas, and any <ph id="ph1">`xs:include`</ph> or <ph id="ph2">`xs:import`</ph> elements contained in the XML Schema.</source>
          <target state="translated">DTD 및 스키마와 같은 외부 엔터티가 포함 될 수 있습니다이 <ph id="ph1">`xs:include`</ph> 또는 <ph id="ph2">`xs:import`</ph> XML 스키마에 포함 된 요소입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>If you don't specify an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>, the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> uses a default <ph id="ph3">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no user credentials.</source>
          <target state="translated">지정 하지 않으면는 <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 기본값을 사용 하 여 <ph id="ph3">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 자격 증명이 없는 사용자입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Data conformance</source>
          <target state="translated">데이터 규칙</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>XML readers that are created by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method meet the following compliance requirements by default:</source>
          <target state="translated">에 의해 만들어진 XML 판독기는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 기본적으로 다음 규정 준수 요구 사항을 충족 하는 메서드:</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>New lines and attribute value are normalized according to the W3C <bpt id="p1">[</bpt>XML 1.0 Recommendation<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/)</ept>.</source>
          <target state="translated">새 줄 및 특성 값은 W3C에 따라 정규화 됩니다 <bpt id="p1">[</bpt>XML 1.0 권장 사항<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>All entities are automatically expanded.</source>
          <target state="translated">모든 엔터티에 자동으로 확장 됩니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Default attributes declared in the document type definition are always added even when the reader doesn't validate.</source>
          <target state="translated">문서 유형 정의에 선언 된 기본 특성 판독기의 유효성을 검사 하지 않는 경우에 항상 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Declaration of XML prefix mapped to the correct XML namespace URI is allowed.</source>
          <target state="translated">올바른 XML 네임 스페이스 URI에 매핑되는 XML 접두사 선언은 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The notation names in a single <ph id="ph1">`NotationType`</ph> attribute declaration and <ph id="ph2">`NmTokens`</ph> in a single <ph id="ph3">`Enumeration`</ph> attribute declaration are distinct.</source>
          <target state="translated">단일에서 표기 이름은 <ph id="ph1">`NotationType`</ph> 특성 선언 및 <ph id="ph2">`NmTokens`</ph> 단일에서 <ph id="ph3">`Enumeration`</ph> 특성 선언이 서로 다릅니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Use these <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> properties to specify the type of conformance checks you want to enable:</source>
          <target state="translated">이 사용 하 여 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 있습니다을 확인 하는 규칙의 형식을 지정 하는 속성을 사용 하도록 설정 하려면:</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Use this <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> property</source>
          <target state="translated">이 사용 하 여 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 속성</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>To</source>
          <target state="translated">대상</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Default</source>
          <target state="translated">기본</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.CheckCharacters%2A&gt;</ph> property</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.CheckCharacters%2A&gt;</ph> 속성</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Enable or disable checks for the following:</source>
          <target state="translated">사용 하도록 설정 하거나 다음에 대 한 검사를 사용 하지 않도록 설정 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>-   Characters are within the range of legal XML characters, as defined by the <bpt id="p1">[</bpt>2.2 Characters<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/#charsets)</ept> section of the W3C XML 1.0 Recommendation.</source>
          <target state="translated">-문자가 올바른 XML 문자 범위 내에 정의 된 대로 문자에는 <bpt id="p1">[</bpt>2.2 문자<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/#charsets)</ept> W3C XML 1.0 권장 사항의 섹션입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>-   All XML names are valid, as defined by the <bpt id="p1">[</bpt>2.3 Common Syntactic Constructs<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/#NT-Name)</ept> section of the W3C XML 1.0 Recommendation.</source>
          <target state="translated">-모든 XML 이름이 올바른지에 정의 된 대로 <bpt id="p1">[</bpt>2.3 Common Syntactic Constructs<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/#NT-Name)</ept> W3C XML 1.0 권장 사항의 섹션입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>When this property is set to <ph id="ph1">`true`</ph> (default), an <ph id="ph2">&lt;xref:System.Xml.XmlException&gt;</ph> exception is thrown if the XML file contains illegal characters or invalid XML names (for example, an element name starts with a number).</source>
          <target state="translated">이 속성이로 설정 된 경우 <ph id="ph1">`true`</ph> (기본값) 이면는 <ph id="ph2">&lt;xref:System.Xml.XmlException&gt;</ph> XML 파일은 잘못 된 문자 또는 잘못 된 XML 이름을 포함 하는 경우 예외가 throw 됩니다 (예를 들어 요소 이름은 숫자로 시작)입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Character and name checking is enabled.</source>
          <target state="translated">문자 및 이름 확인이 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Setting <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.CheckCharacters%2A&gt;</ph> to <ph id="ph2">`false`</ph> turns off character checking for character entity references.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.CheckCharacters%2A&gt;</ph>를 <ph id="ph2">`false`</ph>로 설정하면 문자 엔터티 참조에 대해 문자 검사가 수행되지 않습니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>If the reader is processing text data, it always checks that XML names are valid, regardless of this setting.</source>
          <target state="translated">판독기가 텍스트 데이터를 처리 하는 경우에 항상 XML 이름이이 설정에 관계 없이 유효한 지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept>  The XML 1.0 recommendation requires document-level conformance when a DTD is present.</source>
          <target state="translated"><bpt id="p1">**</bpt>참고:<ept id="p1">**</ept> DTD가 있을 때 XML 1.0 권장 사항에서는 문서 수준 규칙을 요구 합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Therefore, if the reader is configured to support <ph id="ph1">&lt;xref:System.Xml.ConformanceLevel.Fragment?displayProperty=nameWithType&gt;</ph>, but the XML data contains a document type definition (DTD), an <ph id="ph2">&lt;xref:System.Xml.XmlException&gt;</ph> is thrown.</source>
          <target state="translated">따라서 판독기를 지원 하도록 구성 된 경우 <ph id="ph1">&lt;xref:System.Xml.ConformanceLevel.Fragment?displayProperty=nameWithType&gt;</ph>, 문서 형식 정의 (DTD)를 포함 하는 XML 데이터는 <ph id="ph2">&lt;xref:System.Xml.XmlException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A&gt;</ph> property</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A&gt;</ph> 속성</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Choose the level of conformance to enforce:</source>
          <target state="translated">적용할 규칙 수준을 선택 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">-   </ph><ph id="ph2">&lt;xref:System.Xml.ConformanceLevel.Document&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">-   </ph><ph id="ph2">&lt;xref:System.Xml.ConformanceLevel.Document&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Conforms to the rules for a <bpt id="p1">[</bpt>well-formed XML 1.0 document<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/#sec-well-formed)</ept>.</source>
          <target state="translated">에 대 한 규칙을 준수 하는 <bpt id="p1">[</bpt>올바른 형식의 XML 1.0 문서<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/#sec-well-formed)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">-   </ph><ph id="ph2">&lt;xref:System.Xml.ConformanceLevel.Fragment&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">-   </ph><ph id="ph2">&lt;xref:System.Xml.ConformanceLevel.Fragment&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Conforms to the rules for a well-formed document fragment that can be consumed as an <bpt id="p1">[</bpt>external parsed entity<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/#wf-entities)</ept>.</source>
          <target state="translated">로 사용할 수 있는 올바른 형식의 문서 조각에 대 한 규칙을 준수 하는 <bpt id="p1">[</bpt>외부 엔터티를 구문 분석<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/#wf-entities)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">-   </ph><ph id="ph2">&lt;xref:System.Xml.ConformanceLevel.Auto&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">-   </ph><ph id="ph2">&lt;xref:System.Xml.ConformanceLevel.Auto&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Conforms to the level decided by the reader.</source>
          <target state="translated">판독기에서 결정 하는 수준을 그대로 유지 합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>If the data isn't in conformance, an <ph id="ph1">&lt;xref:System.Xml.XmlException&gt;</ph> exception is thrown.</source>
          <target state="translated">에 데이터가 아닌 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlException&gt;</ph> 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Navigating through nodes</source>
          <target state="translated">노드를 통해 탐색</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The current node is the XML node on which the XML reader is currently positioned.</source>
          <target state="translated">현재 노드는 XML 판독기가 현재 배치 XML 노드입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>All <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> methods perform operations in relation to this node, and all <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> properties reflect the value of the current node.</source>
          <target state="translated">모든 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 이 노드 및 모든 관련 하 여 작업을 수행 하는 메서드 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 속성은 현재 노드의 값을 반영 합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The following methods make it easy to navigate through nodes and parse data.</source>
          <target state="translated">다음 방법을 쉽게 탐색 노드 하 고 데이터를 구문 분석 합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Use this <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> method</source>
          <target state="translated">이 사용 하 여 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 메서드</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>To</source>
          <target state="translated">대상</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Read the first node, and advance through the stream one node at a time.</source>
          <target state="translated">첫 번째 노드를 읽고 스트림 한 노드에서 한 번에 진행 합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Such calls are typically performed inside a <ph id="ph1">`while`</ph> loop.</source>
          <target state="translated">내에서 이러한 호출은 일반적으로 수행 됩니다는 <ph id="ph1">`while`</ph> 루프입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.XmlReader.NodeType%2A&gt;</ph> property to get the type (for example, attribute, comment, element, and so on) of the current node.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.NodeType%2A&gt;</ph> 현재 노드의 유형 (예를 들어, 특성, 주석, 요소, 그리고 등)를 가져올 속성입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Skip the children of the current node and move to the next node.</source>
          <target state="translated">현재 노드의 자식을 건너뛰고를 다음 노드로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToContent%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlReader.MoveToContentAsync%2A&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToContent%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Xml.XmlReader.MoveToContentAsync%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Skip non-content nodes and move to the next content node or to the end of the file.</source>
          <target state="translated">비 콘텐츠 노드에 건너뛰고 파일의 끝 또는 다음 콘텐츠 노드로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Non-content nodes include <ph id="ph1">&lt;xref:System.Xml.XmlNodeType.ProcessingInstruction&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlNodeType.DocumentType&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlNodeType.Comment&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.XmlNodeType.Whitespace&gt;</ph>, and <ph id="ph5">&lt;xref:System.Xml.XmlNodeType.SignificantWhitespace&gt;</ph>.</source>
          <target state="translated">비 콘텐츠 노드에 포함 <ph id="ph1">&lt;xref:System.Xml.XmlNodeType.ProcessingInstruction&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlNodeType.DocumentType&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlNodeType.Comment&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.XmlNodeType.Whitespace&gt;</ph>, 및 <ph id="ph5">&lt;xref:System.Xml.XmlNodeType.SignificantWhitespace&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Content nodes include non-white space text, <ph id="ph1">&lt;xref:System.Xml.XmlNodeType.CDATA&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlNodeType.EntityReference&gt;</ph> , and <ph id="ph3">&lt;xref:System.Xml.XmlNodeType.EndEntity&gt;</ph>.</source>
          <target state="translated">공백이 아닌 텍스트를 포함 하는 노드 콘텐츠 <ph id="ph1">&lt;xref:System.Xml.XmlNodeType.CDATA&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlNodeType.EntityReference&gt;</ph> , 및 <ph id="ph3">&lt;xref:System.Xml.XmlNodeType.EndEntity&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Read an element and all its children, and return a new <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance set to <ph id="ph2">&lt;xref:System.Xml.ReadState.Initial?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">요소 및 모든 자식을 읽고 반환 새 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 인스턴스로 설정 <ph id="ph2">&lt;xref:System.Xml.ReadState.Initial?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>This method is useful for creating boundaries around XML elements; for example, if you want to pass data to another component for processing and you want to limit how much of your data the component can access.</source>
          <target state="translated">이 메서드는 XML 요소 주위의 경계를 만드는 데 유용 예를 들어 데이터 처리를 위해 다른 구성 요소에 전달 하 고 데이터의 양을 제한 하려면 구성 요소 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>See the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType&gt;</ph> reference page for an example of navigating through a text stream one node at a time and displaying the type of each node.</source>
          <target state="translated">참조는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType&gt;</ph> 참조 페이지의 한 번에 텍스트 스트림 한 노드를 탐색 하 고 각 노드의 유형을 나타내는 예입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The following sections describe how you can read specific types of data, such as elements, attributes, and typed data.</source>
          <target state="translated">다음 섹션에는 형식화 된 데이터 및 특정 유형의 요소, 특성 등의 데이터를 읽는 방법을 설명 합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Reading XML elements</source>
          <target state="translated">읽을 XML 요소</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The following table lists the methods and properties that the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> class provides for processing elements.</source>
          <target state="translated">다음 표에서 메서드 및 속성을 나열 하는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 요소를 처리 하기 위한 클래스를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>After the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> is positioned on an element, the node properties, such as <ph id="ph2">&lt;xref:System.Xml.XmlReader.Name%2A&gt;</ph>, reflect the element values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>가 요소에 있는 경우 <ph id="ph2">&lt;xref:System.Xml.XmlReader.Name%2A&gt;</ph>과 같은 노드 속성은 이 요소의 값을 반영합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>In addition to the members described below, any of the general methods and properties of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> class can also be used to process elements.</source>
          <target state="translated">아래 설명된 멤버 외에도 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스의 일반 메서드 및 속성을 사용하여 요소를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>For example, you can use the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadInnerXml%2A&gt;</ph> method to read the contents of an element.</source>
          <target state="translated">예를 들어, <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadInnerXml%2A&gt;</ph> 메서드를 사용하여 요소 내용을 읽을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>See section 3.1 of the <bpt id="p1">[</bpt>W3C XML 1.0 Recommendation<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/#sec-starttags)</ept> for definitions of start tags, end tags, and empty element tags.</source>
          <target state="translated">3.1의 섹션을 참조는 <bpt id="p1">[</bpt>W3C XML 1.0 권장 사항<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/#sec-starttags)</ept> 시작 태그의 정의 대 한 태그 및 빈 요소 태그를 종료 합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Use this <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> member</source>
          <target state="translated">이 사용 하 여 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 멤버</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>To</source>
          <target state="translated">대상</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.IsStartElement%2A&gt;</ph> method</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.IsStartElement%2A&gt;</ph> 메서드</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Check if the current node is a start tag or an empty element tag.</source>
          <target state="translated">현재 노드가 시작 태그 이거나 빈 요소 태그 인지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadStartElement%2A&gt;</ph> method</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadStartElement%2A&gt;</ph> 메서드</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Check that the current node is an element and advance the reader to the next node (calls <ph id="ph1">&lt;xref:System.Xml.XmlReader.IsStartElement%2A&gt;</ph> followed by <ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph>).</source>
          <target state="translated">현재 노드가 요소 인지 확인 하 고 판독기를 다음 노드로 진행 (호출 <ph id="ph1">&lt;xref:System.Xml.XmlReader.IsStartElement%2A&gt;</ph> 이어서 <ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadEndElement%2A&gt;</ph> method</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadEndElement%2A&gt;</ph> 메서드</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Check that the current node is an end tag and advance the reader to the next node.</source>
          <target state="translated">현재 노드가 끝 태그 인지 확인 하 고 판독기를 다음 노드로 진행 합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementString%2A&gt;</ph> method</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementString%2A&gt;</ph> 메서드</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Read a text-only element.</source>
          <target state="translated">텍스트 전용 요소를 읽습니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadToDescendant%2A&gt;</ph> method</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadToDescendant%2A&gt;</ph> 메서드</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Advance the XML reader to the next descendant (child) element that has the specified name.</source>
          <target state="translated">다음 하위 항목 (자식) 요소에 지정된 된 이름을 가진 XML 판독기를 진행 합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadToNextSibling%2A&gt;</ph> method</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadToNextSibling%2A&gt;</ph> 메서드</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Advance the XML reader to the next sibling element that has the specified name.</source>
          <target state="translated">XML 판독기를 지정된 된 이름을 가진 다음 형제 요소를 진행 합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.IsEmptyElement%2A&gt;</ph> property</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.IsEmptyElement%2A&gt;</ph> 속성</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Check if the current element has an end element tag.</source>
          <target state="translated">현재 요소에 끝 요소 태그가 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>For example:</source>
          <target state="translated">예:</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">-   </ph><ph id="ph2">`&lt;item num="123"/&gt;`</ph> (<ph id="ph3">&lt;xref:System.Xml.XmlReader.IsEmptyElement%2A&gt;</ph> is <ph id="ph4">`true`</ph>.)</source>
          <target state="translated"><ph id="ph1">-   </ph><ph id="ph2">`&lt;item num="123"/&gt;`</ph> (<ph id="ph3">&lt;xref:System.Xml.XmlReader.IsEmptyElement%2A&gt;</ph> 은 <ph id="ph4">`true`</ph>.)</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">-   </ph><ph id="ph2">`&lt;item num="123"&gt; &lt;/item&gt;`</ph> (<ph id="ph3">&lt;xref:System.Xml.XmlReader.IsEmptyElement%2A&gt;</ph> is <ph id="ph4">`false`</ph>, although the element's content is empty.)</source>
          <target state="translated"><ph id="ph1">-   </ph><ph id="ph2">`&lt;item num="123"&gt; &lt;/item&gt;`</ph> (<ph id="ph3">&lt;xref:System.Xml.XmlReader.IsEmptyElement%2A&gt;</ph> 은 <ph id="ph4">`false`</ph>요소의 콘텐츠가 비어 있습니다. 하지만,.)</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>For an example of reading the text content of elements, see the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadString%2A&gt;</ph> method.</source>
          <target state="translated">요소의 텍스트 콘텐츠를 읽을의 예제를 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadString%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The following example processes elements by using a <ph id="ph1">`while`</ph> loop.</source>
          <target state="translated">다음 예제에서는 요소를 사용 하 여 처리 한 <ph id="ph1">`while`</ph> 루프입니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Reading XML attributes</source>
          <target state="translated">읽을 XML 특성</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>XML attributes are most commonly found on elements, but they're also allowed on XML declaration and document type nodes.</source>
          <target state="translated">XML 특성은 가장 일반적으로 요소를 찾았지만 문서 유형 노드 및 XML 선언에도 허용 하는.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>When positioned on an element node, the <ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToAttribute%2A&gt;</ph> method lets you go through the attribute list of the element.</source>
          <target state="translated">요소 노드에 위치 하는 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToAttribute%2A&gt;</ph> 메서드를 사용 하면 요소의 특성 목록을 검토 합니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Note that after <ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToAttribute%2A&gt;</ph> has been called, node properties such as <ph id="ph2">&lt;xref:System.Xml.XmlReader.Name%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlReader.NamespaceURI%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Xml.XmlReader.Prefix%2A&gt;</ph> reflect the properties of that attribute, not the properties of the element the attribute belongs to.</source>
          <target state="translated">다음 사항에 유의 <ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToAttribute%2A&gt;</ph> 가 호출 된 노드 속성 같은 <ph id="ph2">&lt;xref:System.Xml.XmlReader.Name%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlReader.NamespaceURI%2A&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Prefix%2A&gt;</ph> 요소는 특성의 속성이 아니라 속한, 해당 특성의 속성을 반영 합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> class provides these methods and properties to read and process attributes on elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스는 이러한 메서드와 속성을 읽고 특성을 요소에 처리를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Use this <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> member</source>
          <target state="translated">이 사용 하 여 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 멤버</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>To</source>
          <target state="translated">대상</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.HasAttributes%2A&gt;</ph> property</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.HasAttributes%2A&gt;</ph> 속성</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Check whether the current node has any attributes.</source>
          <target state="translated">현재 노드에 특성이 있는지 여부를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.AttributeCount%2A&gt;</ph> property</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.AttributeCount%2A&gt;</ph> 속성</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Get the number of attributes on the current element.</source>
          <target state="translated">현재 요소에 특성의 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToFirstAttribute%2A&gt;</ph> method</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToFirstAttribute%2A&gt;</ph> 메서드</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Move to the first attribute in an element.</source>
          <target state="translated">요소에서 첫 번째 특성으로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToNextAttribute%2A&gt;</ph> method</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToNextAttribute%2A&gt;</ph> 메서드</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Move to the next attribute in an element.</source>
          <target state="translated">요소에 다음 특성으로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToAttribute%2A&gt;</ph> method</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToAttribute%2A&gt;</ph> 메서드</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Move to a specified attribute.</source>
          <target state="translated">지정된 된 특성으로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.GetAttribute%2A&gt;</ph> method or <ph id="ph2">&lt;xref:System.Xml.XmlReader.Item%2A&gt;</ph> property</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.GetAttribute%2A&gt;</ph> 메서드 또는 <ph id="ph2">&lt;xref:System.Xml.XmlReader.Item%2A&gt;</ph> 속성</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Get the value of a specified attribute.</source>
          <target state="translated">지정된 된 특성의 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.IsDefault%2A&gt;</ph> property</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.IsDefault%2A&gt;</ph> 속성</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Check whether the current node is an attribute that was generated from the default value defined in the DTD or schema.</source>
          <target state="translated">현재 노드가 DTD 또는 스키마에 정의 된 기본값으로 값에서 생성 된 특성 인지를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToElement%2A&gt;</ph> method</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToElement%2A&gt;</ph> 메서드</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Move to the element that owns the current attribute.</source>
          <target state="translated">현재 특성을 소유 하는 요소를 이동 합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Use this method to return to an element after navigating through its attributes.</source>
          <target state="translated">이 메서드를 사용 하 여 특성을 탐색 한 후 요소 돌아갑니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadAttributeValue%2A&gt;</ph> method</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadAttributeValue%2A&gt;</ph> 메서드</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Parse the attribute value into one or more <ph id="ph1">`Text`</ph>, <ph id="ph2">`EntityReference`</ph>, or <ph id="ph3">`EndEntity`</ph> nodes.</source>
          <target state="translated">하나 이상의 특성 값을 구문 분석할 <ph id="ph1">`Text`</ph>, <ph id="ph2">`EntityReference`</ph>, 또는 <ph id="ph3">`EndEntity`</ph> 노드.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Any of the general <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> methods and properties can also be used to process attributes.</source>
          <target state="translated">또한 일반 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 메서드 및 속성을 사용하여 특성을 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>For example, after the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> is positioned on an attribute, the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Name%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Xml.XmlReader.Value%2A&gt;</ph> properties reflect the values of the attribute.</source>
          <target state="translated">예를 들어, 특성에 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>를 배치한 후 <ph id="ph2">&lt;xref:System.Xml.XmlReader.Name%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Value%2A&gt;</ph> 속성은 이 특성 값을 반영합니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>You can also use any of the content <ph id="ph1">`Read`</ph> methods to get the value of the attribute.</source>
          <target state="translated">내용 <ph id="ph1">`Read`</ph> 메서드를 사용하여 특성 값을 얻을 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Xml.XmlReader.AttributeCount%2A&gt;</ph> property to navigate through all the attributes on an element.</source>
          <target state="translated">사용 하 여이 예제는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.AttributeCount%2A&gt;</ph> 요소의 모든 특성을 통해 탐색 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToNextAttribute%2A&gt;</ph> method in a <ph id="ph2">`while`</ph> loop to navigate through the attributes.</source>
          <target state="translated">사용 하 여이 예제는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToNextAttribute%2A&gt;</ph> 에서 메서드는 <ph id="ph2">`while`</ph> 루프 특성을 탐색할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">**</bpt>Reading attributes on XML declaration nodes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>XML 선언 노드 특성 읽기<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>When the XML reader is positioned on an XML declaration node, the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Value%2A&gt;</ph> property returns the version, standalone, and encoding information as a single string.</source>
          <target state="translated">XML 선언 노드에 XML 판독기가 배치 하는 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.Value%2A&gt;</ph> 속성 버전, 독립 실행형으로 그리고 단일 문자열로 인코딩 정보를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> objects created by the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method, the <ph id="ph3">&lt;xref:System.Xml.XmlTextReader&gt;</ph> class, and the <ph id="ph4">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class expose the version, standalone, and encoding items as attributes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 만든 개체는 <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드를는 <ph id="ph3">&lt;xref:System.Xml.XmlTextReader&gt;</ph> 클래스 및 <ph id="ph4">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 버전, 독립 실행형으로 그리고 특성으로 인코딩 항목 클래스를 노출 합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">**</bpt>Reading attributes on document type nodes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>문서 유형 노드 특성 읽기<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>When the XML reader is positioned on a document type node, the <ph id="ph1">&lt;xref:System.Xml.XmlReader.GetAttribute%2A&gt;</ph> method and <ph id="ph2">&lt;xref:System.Xml.XmlReader.Item%2A&gt;</ph> property can be used to return the values for the SYSTEM and PUBLIC literals.</source>
          <target state="translated">문서 유형 노드에 XML 판독기를 두면는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.GetAttribute%2A&gt;</ph> 메서드 및 <ph id="ph2">&lt;xref:System.Xml.XmlReader.Item%2A&gt;</ph> 시스템 및 PUBLIC이 리터럴에 대 한 값을 반환 하려면 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>For example, calling <ph id="ph1">`reader.GetAttribute("PUBLIC")`</ph> returns the PUBLIC value.</source>
          <target state="translated">예를 들어, <ph id="ph1">`reader.GetAttribute("PUBLIC")`</ph>를 호출하면 PUBLIC 값이 반환됩니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">**</bpt>Reading attributes on processing instruction nodes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Processinginstruction 노드의에 특성을 읽는 중<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> is positioned on a processing instruction node, the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Value%2A&gt;</ph> property returns the entire text content.</source>
          <target state="translated">처리 명령 노드에 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>를 배치하면 <ph id="ph2">&lt;xref:System.Xml.XmlReader.Value%2A&gt;</ph> 속성은 전체 텍스트 내용을 반환합니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Items in the processing instruction node aren't treated as attributes.</source>
          <target state="translated">처리 명령 노드의 항목은 특성으로 간주 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>They can't be read with the <ph id="ph1">&lt;xref:System.Xml.XmlReader.GetAttribute%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.XmlReader.MoveToAttribute%2A&gt;</ph> method.</source>
          <target state="translated">으로 읽을 수 없습니다는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.GetAttribute%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Xml.XmlReader.MoveToAttribute%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Reading XML content</source>
          <target state="translated">읽을 XML 콘텐츠</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The XMLReader class includes the following members that read content from an XML file and return the content as string values.</source>
          <target state="translated">XMLReader 클래스는 XML 파일에서 콘텐츠를 읽기 / 콘텐츠는 문자열 값으로 반환 하는 다음과 같은 멤버를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>(To return CLR types, see the <bpt id="p1">[</bpt>next section<ept id="p1">](#xmlreader_clr)</ept>.)</source>
          <target state="translated">(CLR 형식으로 되돌리려면 참조는 <bpt id="p1">[</bpt>절로<ept id="p1">](#xmlreader_clr)</ept>.)</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Use this <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> member</source>
          <target state="translated">이 사용 하 여 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 멤버</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>To</source>
          <target state="translated">대상</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.Value%2A&gt;</ph> property</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.Value%2A&gt;</ph> 속성</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Get the text content of the current node.</source>
          <target state="translated">현재 노드의 텍스트 콘텐츠를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The value returned depends on the node type; see the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Value%2A&gt;</ph> reference page for details.</source>
          <target state="translated">반환 되는 값 노드 유형에 따라 다릅니다. 참조는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.Value%2A&gt;</ph> 대 한 자세한 내용은 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadString%2A&gt;</ph> method</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadString%2A&gt;</ph> 메서드</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Get the content of an element or text node as a string.</source>
          <target state="translated">요소 또는 텍스트 노드의 내용을 문자열로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>This method stops on processing instructions and comments.</source>
          <target state="translated">이 메서드는 명령 및 주석을 처리를 중지 합니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>For details on how this method handles specific node types, see the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadString%2A&gt;</ph> reference page.</source>
          <target state="translated">이 메서드가 특정 노드 종류를 처리 하는 방법을 대 한 세부 정보를 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadString%2A&gt;</ph> 참조 페이지입니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadInnerXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadInnerXmlAsync%2A&gt;</ph> methods</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadInnerXml%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadInnerXmlAsync%2A&gt;</ph> 메서드</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Get all the content of the current node, including the markup, but excluding start and end tags.</source>
          <target state="translated">현재 노드 시작 및 끝 태그를 제외한 태그를 포함 한 모든 콘텐츠를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>For example, for:</source>
          <target state="translated">예:</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadInnerXml%2A&gt;</ph> returns:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadInnerXml%2A&gt;</ph> 반환합니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadOuterXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadOuterXmlAsync%2A&gt;</ph> methods</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadOuterXml%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadOuterXmlAsync%2A&gt;</ph> 메서드</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Get all the content of the current node and its children, including markup and start/end tags.</source>
          <target state="translated">현재 노드 및 태그와 시작/끝 태그를 포함 하 여 자식을의 모든 콘텐츠를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>For example, for:</source>
          <target state="translated">예:</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadOuterXml%2A&gt;</ph> returns:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadOuterXml%2A&gt;</ph> 반환합니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Converting to CLR types</source>
          <target state="translated">CLR 형식으로 변환</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>You can use the members of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> class (listed in the following table) to read XML data and return values as common language runtime (CLR) types instead of strings.</source>
          <target state="translated">멤버를 사용할 수는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스 (다음 표에 나열 된) XML 데이터를 읽고 문자열 대신 런타임 (CLR) 형식으로 공용 언어 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>These members enable you to get values in the representation that is most appropriate for your coding task without having to manually parse or convert string values.</source>
          <target state="translated">이러한 멤버를 사용 하 여 수동으로 구문 분석 하거나 문자열 값을 변환할 필요 없이 코딩 작업에 가장 적합 한 표현에서 값을 가져올 수 있습니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The <bpt id="p1">**</bpt>ReadElementContentAs<ept id="p1">**</ept> methods can only be called on element node types.</source>
          <target state="translated"><bpt id="p1">**</bpt>ReadElementContentAs<ept id="p1">**</ept> 메서드는 요소 노드 형식에만 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>These methods cannot be used on elements that contain child elements or mixed content.</source>
          <target state="translated">자식 요소 또는 혼합 내용이 포함된 요소에서는 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>When called, the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object reads the start tag, reads the element content, and then moves past the end element tag.</source>
          <target state="translated">호출할 경우 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 개체는 시작 태그를 읽고 요소 내용을 읽은 다음 끝 요소 태그를 지나서 이동합니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Processing instructions and comments are ignored and entities are expanded.</source>
          <target state="translated">처리 명령과 주석은 무시되며 엔터티는 확장됩니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The <bpt id="p1">**</bpt>ReadContentAs<ept id="p1">**</ept> methods read the text content at the current reader position, and if the XML data doesn't have any schema or data type information associated with it, convert the text content to the requested return type.</source>
          <target state="translated"><bpt id="p1">**</bpt>ReadContentAs<ept id="p1">**</ept> 메서드 현재 판독기 위치의 텍스트 콘텐츠를 읽고 모든 스키마 또는 데이터 형식 정보를 연결 된 XML 데이터에 없는 경우 요청 된 반환 형식에서 텍스트 콘텐츠를 변환 합니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Text, white space, significant white space and CDATA sections are concatenated.</source>
          <target state="translated">텍스트, 공백, 유효 공백 및 CDATA 섹션이 연결됩니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Comments and processing instructions are skipped, and entity references are automatically resolved.</source>
          <target state="translated">주석 및 처리 명령, 건너뛰고 엔터티 참조는 자동으로 확인 합니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> class uses the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](https://www.w3.org/TR/xmlschema-2/)</ept>recommendation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스에서 정의 된 규칙을 사용 하 여는 <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](https://www.w3.org/TR/xmlschema-2/)</ept>권장 합니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Use this <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> method</source>
          <target state="translated">이 사용 하 여 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 메서드</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>To return this CLR type</source>
          <target state="translated">이 CLR 유형을 반환 하려면</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBoolean%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadElementContentAsBoolean%2A&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBoolean%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadElementContentAsBoolean%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsDateTime%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadElementContentAsDateTime%2A&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsDateTime%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadElementContentAsDateTime%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsDouble%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadElementContentAsDouble%2A&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsDouble%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadElementContentAsDouble%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsLong%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadElementContentAsLong%2A&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsLong%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadElementContentAsLong%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsInt%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadElementContentAsInt%2A&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsInt%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadElementContentAsInt%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsString%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadElementContentAsString%2A&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsString%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadElementContentAsString%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAs%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadElementContentAs%2A&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAs%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadElementContentAs%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The type you specify with the <ph id="ph1">`returnType`</ph> parameter</source>
          <target state="translated">으로 지정한 유형의 <ph id="ph1">`returnType`</ph> 매개 변수</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsObject%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadElementContentAsObject%2A&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsObject%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadElementContentAsObject%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The most appropriate type, as specified by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ValueType%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">가장 적합 한 형식에 지정 된 대로 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ValueType%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>See <bpt id="p1">[</bpt>Type Support in the System.Xml Classes<ept id="p1">](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)</ept> for mapping information.</source>
          <target state="translated">참조 <bpt id="p1">[</bpt>System.Xml 클래스의 형식 지원<ept id="p1">](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)</ept> 매핑 정보에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>If an element can't easily be converted to a CLR type because of its format, you can use a schema mapping to ensure a successful conversion.</source>
          <target state="translated">쉽게 요소 형식으로 인해 CLR 형식으로 변환할 수 없는, 경우에 성공적으로 변환 되도록 스키마 매핑을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The following example uses an .xsd file to convert the <ph id="ph1">`hire-date`</ph> element to the <ph id="ph2">`xs:date`</ph> type, and then uses the <ph id="ph3">&lt;xref:System.Xml.XmlReader.ReadElementContentAsDateTime%2A&gt;</ph> method to return the element as a <ph id="ph4">&lt;xref:System.DateTime&gt;</ph> object.</source>
          <target state="translated">다음 예제에서는.xsd 파일을 사용 하 여 변환 하는 <ph id="ph1">`hire-date`</ph> 요소를는 <ph id="ph2">`xs:date`</ph> 형식 및 사용 하 여는 <ph id="ph3">&lt;xref:System.Xml.XmlReader.ReadElementContentAsDateTime%2A&gt;</ph> 으로 요소를 반환 하는 메서드는 <ph id="ph4">&lt;xref:System.DateTime&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">**</bpt>Input (hireDate.xml):<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>입력 (hireDate.xml):<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">**</bpt>Schema (hireDate.xsd):<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>스키마 (hireDate.xsd):<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">**</bpt>Code:<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>코드:<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">**</bpt>Output:<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>출력:<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Asynchronous programming</source>
          <target state="translated">비동기 프로그래밍</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Most of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> methods have asynchronous counterparts that have "Async" at the end of their method names.</source>
          <target state="translated">대부분의 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 메서드는 "Async" 메서드 이름의 끝에 있는 비동기 메서드인 합니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>For example, the asynchronous equivalent of <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsObject%2A&gt;</ph> is <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadContentAsObjectAsync%2A&gt;</ph>.</source>
          <target state="translated">예를 들어 비동기 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsObject%2A&gt;</ph> 은 <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadContentAsObjectAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The following methods can be used with asynchronous method calls:</source>
          <target state="translated">다음 메서드는 비동기 메서드 호출으로 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The following sections describe asynchronous usage for methods that don't have asynchronous counterparts.</source>
          <target state="translated">다음 섹션에서는 비동기 메서드인을 갖지 않는 메서드에 대 한 비동기 사용을 설명 합니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">**</bpt>ReadStartElement method<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>ReadStartElement 메서드<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">**</bpt>ReadEndElement method<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>ReadEndElement 메서드<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">**</bpt>ReadToNextSibling method<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>ReadToNextSibling 메서드<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">**</bpt>ReadToFollowing method<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>ReadToFollowing 메서드<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">**</bpt>ReadToDescendant method<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>ReadToDescendant 메서드<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Security considerations</source>
          <target state="translated">보안 고려 사항</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Consider the following when working with the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> class:</source>
          <target state="translated">작업할 때는 다음 사항을 고려는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스:</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Exceptions thrown from the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> can disclose path information that you might not want bubbled up to your app.</source>
          <target state="translated">throw 된 예외는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 앱에 버블링 원하지 경로 정보가 공개 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Your app must catch exceptions and process them appropriately.</source>
          <target state="translated">응용 프로그램 예외를 catch 하 고 적절 하 게 처리 해야 합니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Do not enable DTD processing if you're concerned about denial of service issues or if you're dealing with untrusted sources.</source>
          <target state="translated">서비스 거부 문제가 염려 되는 경우 또는 신뢰할 수 없는 소스를 처리 하는 경우 DTD 처리를 사용 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>DTD processing is disabled by default for <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> objects created by the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">DTD 처리에 대해 기본적으로 비활성화 되어 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 가 만든 개체는 <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>If you have DTD processing enabled, you can use the <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> to restrict the resources that the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> can access.</source>
          <target state="translated">DTD 처리를 활성화하는 경우 <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph>를 사용하여 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>가 액세스할 수 있는 리소스를 제한할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>You can also design your app so that the XML processing is memory and time constrained.</source>
          <target state="translated">또한 XML 처리에 필요한 메모리 및 시간을 제한할 수 있도록 앱을 디자인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>For example, you can configure time-out limits in your ASP.NET app.</source>
          <target state="translated">예를 들어 ASP.NET 응용 프로그램에서 시간 제한을 구성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>XML data can include references to external resources such as a schema file.</source>
          <target state="translated">XML 데이터에는 스키마 파일과 같은 외부 리소스에 대한 참조가 포함될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>By default, external resources are resolved by using an <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> object with no user credentials.</source>
          <target state="translated">기본적으로 사용 하 여 외부 리소스는 확인 된 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 사용자 자격 증명이 없는 개체입니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>You can secure this further by doing one of the following:</source>
          <target state="translated">이러한 경우 다음 중 하나를 수행하여 보안을 강화할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Restrict the resources that the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> can access by setting the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property to an <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 속성을 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> 개체로 설정하여 <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph>에서 액세스 가능한 리소스를 제한합니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Do not allow the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> to open any external resources by setting the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property to <ph id="ph3">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 속성을 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph>로 설정하여 <ph id="ph3">`null`</ph>가 모든 외부 리소스를 열 수 없도록 하십시오.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> validation flags of an <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object aren't set by default.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> 의 유효성 검사 플래그는 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 기본적으로 개체를 설정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>This helps to protect the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> against schema-based attacks when it is processing XML data from an untrusted source.</source>
          <target state="translated">그러므로 신뢰할 수 없는 소스의 XML 데이터를 처리할 때 스키마 기반 공격으로부터 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>를 보호할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>When these flags are set, the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object is used to resolve schema locations encountered in the instance document in the <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">이 플래그를 설정하면 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> 개체의 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>를 사용하여 <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph>에서 인스턴스 문서에 나타난 스키마 위치를 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> property is set to <ph id="ph2">`null`</ph>, schema locations aren't resolved even if the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> and <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> validation flags are set.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> 속성이로 설정 되어 <ph id="ph2">`null`</ph>, 스키마 위치 아닌 확인 된 경우에는 <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> 유효성 검사 플래그를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Schemas added during validation add new types and can change the validation outcome of the document being validated.</source>
          <target state="translated">문서의 유효성을 검사하는 동안 스키마를 추가하면 새 형식이 추가되고 해당 문서에 대한 유효성 검사 결과가 달라질 수 있습니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>As a result, external schemas should only be resolved from trusted sources.</source>
          <target state="translated">결과적으로 외부 스키마는 신뢰할 수 있는 소스에서만 확인해야 합니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>We recommend disabling the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints&gt;</ph> flag when validating untrusted, large XML documents in high availability scenarios against a schema that has identity constraints over a large part of the document.</source>
          <target state="translated">사용 하지 않도록 설정 하는 것이 좋습니다는 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints&gt;</ph> 문서 중 많은 부분을 통해 identity 제약 조건을 가진 스키마에 대해 고가용성 시나리오에서 트러스트 되지 않은, 큰 XML 문서 유효성을 검사할 때 플래그를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>This flag is enabled by default.</source>
          <target state="translated">이 플래그는 기본적으로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>XML data can contain a large number of attributes, namespace declarations, nested elements and so on that require a substantial amount of time to process.</source>
          <target state="translated">XML 데이터에는 처리하는 데 시간이 많이 걸리는 수많은 특성, 네임스페이스 선언, 중첩된 요소 등이 포함될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>To limit the size of the input that is sent to the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>, you can:</source>
          <target state="translated">에 전송 된 입력의 크기를 제한 하는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>를 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Limit the size of the document by setting the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A&gt;</ph> property.</source>
          <target state="translated">문서 크기를 설정 하 여 제한 된 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Limit the number of characters that result from expanding entities by setting the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A&gt;</ph> property.</source>
          <target state="translated">설정 하 여 확장 엔터티의 결과인 문자 수를 제한 하는 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Create a custom <ph id="ph1">`IStream`</ph> implementation for the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">사용자 지정 만들기 <ph id="ph1">`IStream`</ph> 에 대 한 구현에서 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph> method can be used to handle large streams of data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph> 메서드는 데이터의 큰 스트림을 처리할 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>This method reads a small number of characters at a time instead of allocating a single string for the whole value.</source>
          <target state="translated">이 메서드는 전체 값에 대한 단일 문자열을 할당하는 대신 한 번에 적은 수의 문자를 읽습니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>When reading an XML document with a large number of unique local names, namespaces, or prefixes, a problem can occur.</source>
          <target state="translated">고유 로컬 이름, 네임 스페이스 또는 접두사의 다 수 포함 된 XML 문서를 읽을 때 문제가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>If you are using a class that derives from <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>, and you call the <ph id="ph2">&lt;xref:System.Xml.XmlReader.LocalName%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlReader.Prefix%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.Xml.XmlReader.NamespaceURI%2A&gt;</ph> property for each item, the returned string is added to a <ph id="ph5">&lt;xref:System.Xml.NameTable&gt;</ph>.</source>
          <target state="translated">파생 되는 클래스를 사용 하는 경우 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>를 호출 하는 <ph id="ph2">&lt;xref:System.Xml.XmlReader.LocalName%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlReader.Prefix%2A&gt;</ph>, 또는 <ph id="ph4">&lt;xref:System.Xml.XmlReader.NamespaceURI%2A&gt;</ph> 각 항목에 대 한 속성을 반환 된 문자열에 추가 됩니다 한 <ph id="ph5">&lt;xref:System.Xml.NameTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The collection held by the <ph id="ph1">&lt;xref:System.Xml.NameTable&gt;</ph> never decreases in size, creating a virtual memory leak of the string handles.</source>
          <target state="translated">되는 컬렉션의 <ph id="ph1">&lt;xref:System.Xml.NameTable&gt;</ph> 줄 지 않아 문자열 핸들의 가상 메모리 누수 크기입니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>One mitigation for this is to derive from the <ph id="ph1">&lt;xref:System.Xml.NameTable&gt;</ph> class and enforce a maximum size quota.</source>
          <target state="translated">이 대 한 한 완화에서 파생 하는 것은 <ph id="ph1">&lt;xref:System.Xml.NameTable&gt;</ph> 클래스 및 최대 크기 할당량을 적용 합니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>(There is no way to prevent the use of a <ph id="ph1">&lt;xref:System.Xml.NameTable&gt;</ph>, or to switch the <ph id="ph2">&lt;xref:System.Xml.NameTable&gt;</ph> when it is full).</source>
          <target state="translated">(사용 하지 못하도록 방식은 없습니다는 <ph id="ph1">&lt;xref:System.Xml.NameTable&gt;</ph>를 전환 하거나 하는 <ph id="ph2">&lt;xref:System.Xml.NameTable&gt;</ph> 가득 찼을 때).</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Another mitigation is to avoid using the properties mentioned and instead use the <ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToAttribute%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Xml.XmlReader.IsStartElement%2A&gt;</ph> method where possible; those methods don't return strings and thus avoid the problem of overfilling the <ph id="ph3">&lt;xref:System.Xml.NameTable&gt;</ph> collection.</source>
          <target state="translated">되는 다른 완화 위에서 설명한 속성을 사용 하지 않도록 하 고 대신 사용 하는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToAttribute%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.Xml.XmlReader.IsStartElement%2A&gt;</ph> 메서드 이러한 메서드가 문자열을 반환 하지 않는 채워지지 않습니다 되지 않도록 하 가능한 경우는 <ph id="ph3">&lt;xref:System.Xml.NameTable&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> objects can contain sensitive information such as user credentials.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 개체에는 사용자 자격 증명과 같은 중요한 정보가 포함될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>An untrusted component could use the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object and its user credentials to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> objects to read data.</source>
          <target state="translated">신뢰할 수 없는 구성 요소는 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 개체 및 해당 사용자 자격 증명을 사용하여 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 개체를 만들어 데이터를 읽을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Be careful when caching <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> objects, or when passing the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object from one component to another.</source>
          <target state="translated">캐시할 때 주의 해야 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 개체를 전달할 때는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 한 구성 요소의 다른 개체입니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Do not accept supporting components, such as <ph id="ph1">&lt;xref:System.Xml.NameTable&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph>, and <ph id="ph3">&lt;xref:System.Xml.XmlResolver&gt;</ph> objects, from an untrusted source.</source>
          <target state="translated">신뢰할 수 없는 소스로부터 <ph id="ph1">&lt;xref:System.Xml.NameTable&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Xml.XmlResolver&gt;</ph> 개체 등의 지원 구성 요소를 받지 마십시오.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The following example code shows how to use the asynchronous API to parse XML.</source>
          <target state="translated">다음 코드 예제에서는 비동기 API를 사용 하 여 XML을 구문 분석 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.#ctor">
          <source>This constructor is called by derived class constructors to initialize state in this type.</source>
          <target state="translated">이 생성자는이 형식으로 상태를 초기화 하는 파생된 클래스 생성자에서 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.AttributeCount">
          <source>When overridden in a derived class, gets the number of attributes on the current node.</source>
          <target state="translated">파생 클래스에서 재정의되면 현재 노드에 포함된 특성 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.AttributeCount">
          <source>The number of attributes on the current node.</source>
          <target state="translated">현재 노드에 포함된 특성의 수입니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.AttributeCount">
          <source>This property is relevant to <ph id="ph1">`Element`</ph>, <ph id="ph2">`DocumentType`</ph> and <ph id="ph3">`XmlDeclaration`</ph> nodes only.</source>
          <target state="translated">이 속성은 관련이 <ph id="ph1">`Element`</ph>, <ph id="ph2">`DocumentType`</ph> 및 <ph id="ph3">`XmlDeclaration`</ph> 노드만 해당 합니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.AttributeCount">
          <source>(Other node types do not have attributes.)</source>
          <target state="translated">(다른 노드 형식 특성이 없습니다.)</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.AttributeCount">
          <source>The following example displays all attributes on the current node.</source>
          <target state="translated">다음 예에서는 현재 노드의 모든 특성을 표시합니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.AttributeCount">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.AttributeCount">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.BaseURI">
          <source>When overridden in a derived class, gets the base URI of the current node.</source>
          <target state="translated">파생 클래스에서 재정의되면 현재 노드의 기본 URI를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.BaseURI">
          <source>The base URI of the current node.</source>
          <target state="translated">현재 노드의 기본 URI입니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.BaseURI">
          <source>A networked XML document is comprised of chunks of data aggregated using various W3C standard inclusion mechanisms and therefore contains nodes that come from different places.</source>
          <target state="translated">네트워크 XML 문서는 다양 한 W3C 표준 포함 구조를 사용 하 여 집계 데이터의 청크 한 이루어져 서로 다른 위치에서 제공 하는 노드를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.BaseURI">
          <source>DTD entities are an example of this, but this is not limited to DTDs.</source>
          <target state="translated">DTD 엔터티가이의 예는 Dtd에 국한 되지 않음.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.BaseURI">
          <source>The base URI tells you where these nodes came from.</source>
          <target state="translated">기본 URI 출처를 보여 줍니다 여기서 이러한 노드.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.BaseURI">
          <source>If there is no base URI for the nodes being returned (for example, they were parsed from an in-memory string), <ph id="ph1">`String.Empty`</ph> is returned.</source>
          <target state="translated">반환 되는 노드에 대 한 기본 URI에 없는 경우 (예를 들어 구문 분석 된 메모리에 문자열에서), <ph id="ph1">`String.Empty`</ph> 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.BaseURI">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.BaseURI">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.CanReadBinaryContent">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> implements the binary content read methods.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>가 이진 콘텐츠 읽기 메서드를 구현하는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.CanReadBinaryContent">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the binary content read methods are implemented; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이진 콘텐츠 읽기 메서드를 구현하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.CanReadBinaryContent">
          <source>The binary content read methods include the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBase64%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadContentAsBinHex%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A&gt;</ph> methods.</source>
          <target state="translated">이진 콘텐츠 읽기는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBase64%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadContentAsBinHex%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.CanReadBinaryContent">
          <source>If this property returns <ph id="ph1">`false`</ph> a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is returned when any of the binary read methods is called.</source>
          <target state="translated">이 속성을 반환 하는 경우 <ph id="ph1">`false`</ph> 는 <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> 이진 읽을 때 반환 되는 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.CanReadBinaryContent">
          <source>All Microsoft .NET Framework implementations of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> class return <ph id="ph2">`true`</ph> for this property.</source>
          <target state="translated">모든 Microsoft.NET Framework의 구현에서 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 반환 클래스 <ph id="ph2">`true`</ph> 이 속성에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.CanReadBinaryContent">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.CanReadBinaryContent">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.CanReadValueChunk">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> implements the <ph id="ph2">&lt;see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>가 <ph id="ph2">&lt;see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /&gt;</ph> 메서드를 구현하는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.CanReadValueChunk">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> implements the <ph id="ph3">&lt;see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /&gt;</ph> method; otherwise <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>가 <ph id="ph3">&lt;see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /&gt;</ph> 메서드를 구현하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.CanReadValueChunk">
          <source>Text parsing <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> objects that were created from the static <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method always return <ph id="ph3">`true`</ph>.</source>
          <target state="translated">텍스트 구문 분석 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 정적에서 만든 개체는 <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드가 항상 반환 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.CanReadValueChunk">
          <source>All other Microsoft .NET Framework implementations of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> class, including the <ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph> class, return <ph id="ph3">`false`</ph>.</source>
          <target state="translated">다른 모든 Microsoft.NET Framework 구현과 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스를 포함 하는 <ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph> 클래스, 반환 <ph id="ph3">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.CanReadValueChunk">
          <source>If this property returns <ph id="ph1">`false`</ph> a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is returned when the <ph id="ph3">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph> method is called.</source>
          <target state="translated">이 속성을 반환 하는 경우 <ph id="ph1">`false`</ph> 는 <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> 이 반환 됩니다는 <ph id="ph3">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.CanReadValueChunk">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.CanReadValueChunk">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.CanResolveEntity">
          <source>Gets a value indicating whether this reader can parse and resolve entities.</source>
          <target state="translated">이 판독기가 엔터티를 구문 분석하고 확인할 수 있는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.CanResolveEntity">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the reader can parse and resolve entities; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">판독기가 엔터티를 구문 분석하고 확인할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.CanResolveEntity">
          <source>This property always returns <ph id="ph1">`false`</ph> for implementations of <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> that do not support DTD information.</source>
          <target state="translated">이 속성은 항상 반환 <ph id="ph1">`false`</ph> 의 구현을 위한 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> DTD 정보를 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.CanResolveEntity">
          <source>In this case, calling <ph id="ph1">&lt;xref:System.Xml.XmlReader.ResolveEntity%2A&gt;</ph> throws an exception.</source>
          <target state="translated">이 경우 호출 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ResolveEntity%2A&gt;</ph> 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.CanResolveEntity">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.CanResolveEntity">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Close">
          <source>When overridden in a derived class, changes the <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.ReadState" /&gt;</ph> to <ph id="ph2">&lt;see cref="F:System.Xml.ReadState.Closed" /&gt;</ph>.</source>
          <target state="translated">파생 클래스에서 재정의되면 <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.ReadState" /&gt;</ph>를 <ph id="ph2">&lt;see cref="F:System.Xml.ReadState.Closed" /&gt;</ph>로 변경합니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Close">
          <source>This method also releases any resources held during reading.</source>
          <target state="translated">이 메서드는 또한 읽는 동안 보유 한 모든 리소스를 해제 합니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Close">
          <source>If <ph id="ph1">&lt;xref:System.Xml.XmlReader.Close%2A&gt;</ph> has already been called, no action is performed.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Xml.XmlReader.Close%2A&gt;</ph> 가 이미 호출 아무 작업도 수행 합니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Close">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Close">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Most of the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> overloads include a <ph id="ph2">`settings`</ph> parameter that accepts an <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object.</source>
          <target state="translated">대부분의 <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 오버 로드는 포함 한 <ph id="ph2">`settings`</ph> 받는 매개 변수는 <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>You can use this object to:</source>
          <target state="translated">이 개체를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Specify which features you want supported on the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object.</source>
          <target state="translated">지원 되는 원하는 어떤 기능을 지정 된 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Reuse the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object to create multiple readers.</source>
          <target state="translated">다시 사용 된 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 여러 판독기를 만들 개체입니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>You can use the same settings to create multiple readers with the same functionality.</source>
          <target state="translated">같은 설정을 사용하면 같은 기능을 갖춘 여러 판독기를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Or, you can modify the settings on an <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> instance and create a new reader with a different set of features.</source>
          <target state="translated">또는에서 설정을 수정할 수는 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 인스턴스 및 다른 기능 집합이 새 판독기를 만듭니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Add features to an existing XML reader.</source>
          <target state="translated">기존 XML 판독기에 기능을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method can accept another <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드는 다른 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 개체를 허용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The underlying <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object can be a user-defined reader, a <ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph> object, or another <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> instance that you want to add additional features to.</source>
          <target state="translated">내부 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 개체는 사용자 정의 판독기 수는 <ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph> 개체 또는 다른 <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> 추가 기능을 추가 하려면 인스턴스.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Take full advantage of features such as better conformance checking and compliance to the <bpt id="p1">[</bpt>XML 1.0 (fourth edition)<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/)</ept>recommendation that are available only on <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> objects created by the static <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">더 나은 규칙 검사에 대 한 규정 준수 등의 기능을 완전히 활용는 <bpt id="p1">[</bpt>XML 1.0 (fourth edition)<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/)</ept>에 대해서만 사용할 수 있는 권장 사항을 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 정적이 만든 개체 <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Although the .NET Framework includes concrete implementations of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> class, such as the <ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlNodeReader&gt;</ph>, and the <ph id="ph4">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> classes, we recommend that you create <ph id="ph5">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph6">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">.NET Framework의 구체적인 구현에 포함 되어 있지만 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 클래스 같은 <ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlNodeReader&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> 클래스인 것이 좋습니다 만드는 <ph id="ph5">&lt;xref:System.Xml.XmlReader&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph6">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드입니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Default settings</source>
          <target state="translated">기본 설정</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>If you use a <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> overload that doesn't accept a <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object, the following default reader settings are used:</source>
          <target state="translated">사용 하는 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 받지 않은 오버 로드는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 개체를 다음과 같은 기본 판독기 설정이 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Setting</source>
          <target state="translated">설정</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Default</source>
          <target state="translated">기본</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>An empty <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> object</source>
          <target state="translated">빈 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 개체</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints&gt;</ph> enabled</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints&gt;</ph> 사용 하도록 설정</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>A new <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> object.</source>
          <target state="translated">새 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Starting with the .NET Framework 4.5.2, this setting has a default value of <ph id="ph1">`null`</ph>.</source>
          <target state="translated">.NET Framework 4.5.2 이상에서는이 설정에는 기본값인 <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Settings for common scenarios</source>
          <target state="translated">일반적인 시나리오에 대 한 설정</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Here are the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> properties you should set for some of the typical XML reader scenarios.</source>
          <target state="translated">다음은 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 속성이 일반적인 XML 판독기 시나리오 중 일부에 대해 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Requirement</source>
          <target state="translated">요구 사항</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Set</source>
          <target state="translated">Set</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Data must be a well-formed XML document.</source>
          <target state="translated">데이터는 올바른 형식의 XML 문서 여야 합니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Xml.ConformanceLevel.Document&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A&gt;</ph> <ph id="ph2">&lt;xref:System.Xml.ConformanceLevel.Document&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Data must be a well-formed XML parsed entity.</source>
          <target state="translated">데이터는 올바른 형식의 XML을 구문 분석할 엔터티 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Xml.ConformanceLevel.Fragment&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A&gt;</ph> <ph id="ph2">&lt;xref:System.Xml.ConformanceLevel.Fragment&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Data must be validated against a DTD.</source>
          <target state="translated">데이터는 DTD에 대해 유효성을 검사 해야 합니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.DtdProcessing%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Xml.DtdProcessing.Parse&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.DtdProcessing%2A&gt;</ph> - <ph id="ph2">&lt;xref:System.Xml.DtdProcessing.Parse&gt;</ph></target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ValidationType%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Xml.ValidationType.DTD&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ValidationType%2A&gt;</ph> <ph id="ph2">&lt;xref:System.Xml.ValidationType.DTD&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Data must be validated against an XML schema.</source>
          <target state="translated">데이터는 XML 스키마에 대해 유효성을 검사 해야 합니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ValidationType%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Xml.ValidationType.Schema&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ValidationType%2A&gt;</ph> - <ph id="ph2">&lt;xref:System.Xml.ValidationType.Schema&gt;</ph></target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Schemas%2A&gt;</ph> to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> to use for validation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Schemas%2A&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 유효성 검사에 사용할 합니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Note that <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> doesn't support XML-Data Reduced (XDR) schema validation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> Xml-data Reduced (XDR) 스키마 유효성 검사를 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Data must be validated against an inline XML schema.</source>
          <target state="translated">데이터는 인라인 XML 스키마에 대해 유효성을 검사 해야 합니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ValidationType%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Xml.ValidationType.Schema&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ValidationType%2A&gt;</ph> - <ph id="ph2">&lt;xref:System.Xml.ValidationType.Schema&gt;</ph></target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ValidationFlags%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ValidationFlags%2A&gt;</ph> <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Type support.</source>
          <target state="translated">지원을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ValidationType%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Xml.ValidationType.Schema&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ValidationType%2A&gt;</ph> - <ph id="ph2">&lt;xref:System.Xml.ValidationType.Schema&gt;</ph></target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Schemas%2A&gt;</ph> to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> to use.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Schemas%2A&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 사용 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> doesn't support XML-Data Reduced (XDR) schema validation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> Xml-data Reduced (XDR) 스키마 유효성 검사를 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Asynchronous programming</source>
          <target state="translated">비동기 프로그래밍</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>In synchronous mode, the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method reads the first chunk of data from the buffer of the file, stream, or text reader.</source>
          <target state="translated">동기 모드에서의 <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드는 데이터의 첫 번째 청크 파일, 스트림 또는 텍스트 판독기의 버퍼에서 읽습니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>This may throw an exception if an I/O operation fails.</source>
          <target state="translated">I/O 작업이 실패 하면 예외가 throw 될 수 있습니다이 합니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>In asynchronous mode, the first I/O operation occurs with a read operation, so exceptions that arise will be thrown when the read operation occurs.</source>
          <target state="translated">비동기 모드에서 첫 번째는 I/O 작업이 읽기 작업을 발생 하므로 읽기 작업이 수행 될 때 발생 하는 예외를 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Security considerations</source>
          <target state="translated">보안 고려 사항</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>By default, the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> uses an <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> object with no user credentials to open resources.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 사용 하 여 프로그램 <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 리소스를 열려면 사용자 자격 증명이 없는 개체입니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>This means that, by default, the XML reader can access any location that doesn't require credentials.</source>
          <target state="translated">즉, 기본적으로 XML 판독기 위치에 액세스할 수 있는 자격 증명이 필요 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> property to control access to resources:</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> 리소스에 대 한 액세스를 제어 하려면 속성:</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Set <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> to an <ph id="ph2">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> object to restrict the resources that the XML reader can access.</source>
          <target state="translated">설정 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> XML 판독기에 액세스할 수 있는 리소스를 제한 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Set <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> to <ph id="ph2">`null`</ph> to prevent the XML reader from opening any external resources.</source>
          <target state="translated">설정 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> 를 <ph id="ph2">`null`</ph> XML 판독기의 외부 리소스를 열지 하지 못하도록 합니다.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>This example creates an XML reader that strips insignificant white space, strips comments, and performs fragment-level conformance checking.</source>
          <target state="translated">이 예제에서는 불필요 한 공백을 제거, 의견에서 제거 하 고, 조각 수준 규칙 검사를 수행 하는 XML 판독기를 만듭니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The following example uses an <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with default credentials to access a file.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 파일에 액세스 하려면 기본 자격 증명을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The following code wraps a reader instance within another reader.</source>
          <target state="translated">다음 코드는 다른 판독기 내에 판독기 인스턴스를 래핑합니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>This example chains readers to add DTD and XML schema validation.</source>
          <target state="translated">이 예제에서는 DTD 및 XML 스키마 유효성 검사를 추가 하는 판독기를 연결 합니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream)">
          <source>The stream that contains the XML data.</source>
          <target state="translated">XML 데이터가 포함된 스트림입니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> scans the first bytes of the stream looking for a byte order mark or other sign of encoding.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>는 스트림의 첫 번째 바이트를 검색하여 바이트 순서 표시나 다른 인코딩 기호를 찾습니다.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream)">
          <source>When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.</source>
          <target state="translated">인코딩이 확인되면 이 인코딩을 사용하여 스트림을 읽고, 입력을 문자 스트림(유니코드)으로 구문 분석하는 작업이 수행됩니다.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance using the specified stream with default settings.</source>
          <target state="translated">기본 설정의 지정된 스트림을 사용하여 새 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream)">
          <source>An object that is used to read the XML data in the stream.</source>
          <target state="translated">스트림의 XML 데이터를 읽는 데 사용되는 개체입니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream)">
          <source>An <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object with default settings is used to create the reader.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 개체 기본 설정으로 판독기를 만드는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream)">
          <source>If you wish to specify the features to support on the created reader, use the overload that takes an <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object as one of its arguments, and pass in an <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object with the correct settings.</source>
          <target state="translated">만들어진된 판독기에서 지원할 기능을 지정 하려는 경우는 오버 로드를 사용 하 여는 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 개체를 해당 인수를 전달는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 올바른 설정으로는 개체입니다.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream)">
          <source>A default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</source>
          <target state="translated">기본 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 자격 증명 없이 문서 형식 정의 (DTD), 엔터티, 스키마 등의 외부 리소스에 액세스 하려면 사용 합니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream)">
          <source>Starting with the .NET Framework 4.5.2, no default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> is provided.</source>
          <target state="translated">.NET Framework 4.5.2, 기본값은 없습니다부터 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream)">
          <source>If your solution targets the .NET Framework 4.5.2 or later versions, specify an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">솔루션 이상 버전의.NET Framework 4.5.2 대상으로 하는 경우 지정 된 <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> 를 사용 하 여는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream)">
          <source>If the external resource is located on a network resource that requires authentication, specify an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> with the necessary credentials using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">외부 리소스를 인증이 필요한 네트워크 리소스에 있는 경우 지정 된 <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> 를 사용 하 여 필요한 자격 증명는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream)">
          <source>The created <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object expands entity references and performs XML normalization of new line characters.</source>
          <target state="translated">만든 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 개체는 엔터티 참조를 확장 하 고 줄 바꿈 문자의 XML 정규화를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object that reads from a <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 에서 읽을 수 있는 개체는 <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;paramref name="input" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> does not have sufficient permissions to access the location of the XML data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>에는 XML 데이터 위치에 액세스할 수 있는 충분한 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader)">
          <source>The text reader from which to read the XML data.</source>
          <target state="translated">XML 데이터를 읽어올 텍스트 판독기입니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader)">
          <source>A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration is not used by the XML reader to decode the data stream.</source>
          <target state="translated">텍스트 판독기는 유니코드 문자 스트림을 반환하므로 XML 선언에 지정된 인코딩은 XML 판독기가 데이터 스트림을 디코딩하는 데 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance by using the specified text reader.</source>
          <target state="translated">지정된 텍스트 판독기를 사용하여 새 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader)">
          <source>An object that is used to read the XML data in the stream.</source>
          <target state="translated">스트림의 XML 데이터를 읽는 데 사용되는 개체입니다.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader)">
          <source>An <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object with default settings is used to create the reader.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 개체 기본 설정으로 판독기를 만드는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader)">
          <source>If you wish to specify the features to support on the created reader, use the overload that takes an <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object as one of its arguments, and pass in an <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object with the correct settings.</source>
          <target state="translated">만들어진된 판독기에서 지원할 기능을 지정 하려는 경우는 오버 로드를 사용 하 여는 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 개체를 해당 인수를 전달는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 올바른 설정으로는 개체입니다.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader)">
          <source>A default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</source>
          <target state="translated">기본 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 자격 증명 없이 문서 형식 정의 (DTD), 엔터티, 스키마 등의 외부 리소스에 액세스 하려면 사용 합니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader)">
          <source>Starting with the .NET Framework 4.5.2, no default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> is provided.</source>
          <target state="translated">.NET Framework 4.5.2, 기본값은 없습니다부터 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader)">
          <source>If your solution targets the .NET Framework 4.5.2 or later versions, specify an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">솔루션 이상 버전의.NET Framework 4.5.2 대상으로 하는 경우 지정 된 <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> 를 사용 하 여는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader)">
          <source>If the external resource is located on a network resource that requires authentication, specify an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> with the necessary credentials using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">외부 리소스를 인증이 필요한 네트워크 리소스에 있는 경우 지정 된 <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> 를 사용 하 여 필요한 자격 증명는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader)">
          <source>The created <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object expands entity references and performs XML normalization of new line characters.</source>
          <target state="translated">만든 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 개체는 엔터티 참조를 확장 하 고 줄 바꿈 문자의 XML 정규화를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph> class to read an XML string.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph> 클래스는 XML 문자열을 읽습니다.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;paramref name="input" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String)">
          <source>The URI for the file that contains the XML data.</source>
          <target state="translated">XML 데이터를 포함하는 파일의 URI입니다.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlUrlResolver" /&gt;</ph> class is used to convert the path to a canonical data representation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlUrlResolver" /&gt;</ph> 클래스는 경로를 정규 데이터 표현으로 변환하는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance with specified URI.</source>
          <target state="translated">지정된 URI를 사용하여 새 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String)">
          <source>An object that is used to read the XML data in the stream.</source>
          <target state="translated">스트림의 XML 데이터를 읽는 데 사용되는 개체입니다.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String)">
          <source>An <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object with default settings is used to create the reader.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 개체 기본 설정으로 판독기를 만드는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String)">
          <source>If you wish to specify the features to support on the created reader, use the overload that takes an <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object as one of its arguments, and pass in an <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object with the correct settings.</source>
          <target state="translated">만들어진된 판독기에서 지원할 기능을 지정 하려는 경우는 오버 로드를 사용 하 여는 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 개체를 해당 인수를 전달는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 올바른 설정으로는 개체입니다.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String)">
          <source>A default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</source>
          <target state="translated">기본 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 자격 증명 없이 문서 형식 정의 (DTD), 엔터티, 스키마 등의 외부 리소스에 액세스 하려면 사용 합니다.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String)">
          <source>Starting with the .NET Framework 4.5.2, no default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> is provided.</source>
          <target state="translated">.NET Framework 4.5.2, 기본값은 없습니다부터 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String)">
          <source>If your solution targets the .NET Framework 4.5.2 or later versions, specify an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">솔루션 이상 버전의.NET Framework 4.5.2 대상으로 하는 경우 지정 된 <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> 를 사용 하 여는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String)">
          <source>If the external resource is located on a network resource that requires authentication, specify an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> with the necessary credentials using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">외부 리소스를 인증이 필요한 네트워크 리소스에 있는 경우 지정 된 <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> 를 사용 하 여 필요한 자격 증명는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String)">
          <source>The created <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object expands entity references and performs XML normalization of new line characters.</source>
          <target state="translated">만든 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 개체는 엔터티 참조를 확장 하 고 줄 바꿈 문자의 XML 정규화를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object that reads XML data file specified by the URI.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> URI로 지정 된 XML 데이터 파일을 읽는 개체입니다.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="inputUri" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inputUri" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> does not have sufficient permissions to access the location of the XML data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>에는 XML 데이터 위치에 액세스할 수 있는 충분한 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String)">
          <source>The file identified by the URI does not exist.</source>
          <target state="translated">URI로 식별된 파일이 없는 경우</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String)">
          <source>In the <bpt id="p1">[</bpt>.NET for Windows Store apps<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> or the <bpt id="p2">[</bpt>Portable Class Library<ept id="p2">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>, catch the base class exception, <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph>, instead.</source>
          <target state="translated"><bpt id="p1">[</bpt>Windows 스토어 앱용 .NET<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> 또는 <bpt id="p2">[</bpt>이식 가능한 클래스 라이브러리<ept id="p2">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>에서 대신 기본 클래스 예외 <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph>을 catch합니다.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String)">
          <source>The URI format is not correct.</source>
          <target state="translated">URI 형식이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
          <source>The stream that contains the XML data.</source>
          <target state="translated">XML 데이터가 포함된 스트림입니다.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> scans the first bytes of the stream looking for a byte order mark or other sign of encoding.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>는 스트림의 첫 번째 바이트를 검색하여 바이트 순서 표시나 다른 인코딩 기호를 찾습니다.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
          <source>When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.</source>
          <target state="translated">인코딩이 확인되면 이 인코딩을 사용하여 스트림을 읽고, 입력을 문자 스트림(유니코드)으로 구문 분석하는 작업이 수행됩니다.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
          <source>The settings for the new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 인스턴스의 설정입니다.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
          <source>This value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance with the specified stream and settings.</source>
          <target state="translated">지정된 스트림 및 설정을 사용하여 새 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
          <source>An object that is used to read the XML data in the stream.</source>
          <target state="translated">스트림의 XML 데이터를 읽는 데 사용되는 개체입니다.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
          <source>By default an <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 자격 증명 없이 문서 형식 정의 (DTD), 엔터티, 스키마 등의 외부 리소스에 액세스 하려면 사용 합니다.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
          <source>Starting with the .NET Framework 4.5.2, no default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> is provided.</source>
          <target state="translated">.NET Framework 4.5.2, 기본값은 없습니다부터 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
          <source>If your solution targets the .NET Framework 4.5.2 or later versions, specify an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">솔루션 이상 버전의.NET Framework 4.5.2 대상으로 하는 경우 지정 된 <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> 를 사용 하 여는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
          <source>If the external resource is located on a network resource that requires authentication, use the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property to specify an <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> with the necessary credentials.</source>
          <target state="translated">외부 리소스를 인증이 필요한 네트워크 리소스에 있는 경우 사용 하 여는 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> 속성을 통해 지정 된 <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> 에 필요한 자격 증명 합니다.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
          <source>You can use one of the following methods to control which resources the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> can access:</source>
          <target state="translated">다음 방법 중 하나를 사용 하 여 있는 리소스를 제어할 수 있습니다는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
          <source>Restrict the resources that the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> can access by setting the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> property to an <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 속성을 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> 개체로 설정하여 <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph>에서 액세스 가능한 리소스를 제한합니다.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
          <source>Do not allow the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> to open any external resources by setting the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> property to <ph id="ph3">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 속성을 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph>로 설정하여 <ph id="ph3">`null`</ph>가 모든 외부 리소스를 열 수 없도록 하십시오.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
          <source>The created <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object expands entity references and performs XML normalization of new line characters.</source>
          <target state="translated">만든 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 개체는 엔터티 참조를 확장 하 고 줄 바꿈 문자의 XML 정규화를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
          <source>The <ph id="ph1">&lt;paramref name="input" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
          <source>The text reader from which to read the XML data.</source>
          <target state="translated">XML 데이터를 읽어올 텍스트 판독기입니다.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
          <source>A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration isn't used by the XML reader to decode the data stream.</source>
          <target state="translated">텍스트 판독기는 유니코드 문자 스트림을 반환하므로 XML 선언에 지정된 인코딩은 XML 판독기가 데이터 스트림을 디코딩하는 데 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
          <source>The settings for the new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>의 설정입니다.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
          <source>This value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance by using the specified text reader and settings.</source>
          <target state="translated">지정된 텍스트 판독기 및 설정을 사용하여 새 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
          <source>An object that is used to read the XML data in the stream.</source>
          <target state="translated">스트림의 XML 데이터를 읽는 데 사용되는 개체입니다.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
          <source>By default an <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 자격 증명 없이 문서 형식 정의 (DTD), 엔터티, 스키마 등의 외부 리소스에 액세스 하려면 사용 합니다.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
          <source>Starting with the .NET Framework 4.5.2, no default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> is provided.</source>
          <target state="translated">.NET Framework 4.5.2, 기본값은 없습니다부터 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
          <source>If your solution targets the .NET Framework 4.5.2 or later versions, specify an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">솔루션 이상 버전의.NET Framework 4.5.2 대상으로 하는 경우 지정 된 <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> 를 사용 하 여는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
          <source>If the external resource is located on a network resource that requires authentication, use the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property to specify an <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> with the necessary credentials.</source>
          <target state="translated">외부 리소스를 인증이 필요한 네트워크 리소스에 있는 경우 사용 하 여는 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> 속성을 통해 지정 된 <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> 에 필요한 자격 증명 합니다.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
          <source>You can use one of the following methods to control which resources the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> can access:</source>
          <target state="translated">다음 방법 중 하나를 사용 하 여 있는 리소스를 제어할 수 있습니다는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
          <source>Restrict the resources that the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> can access by setting the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> property to an <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 속성을 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> 개체로 설정하여 <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph>에서 액세스 가능한 리소스를 제한합니다.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
          <source>Do not allow the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> to open any external resources by setting the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> property to <ph id="ph3">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 속성을 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph>로 설정하여 <ph id="ph3">`null`</ph>가 모든 외부 리소스를 열 수 없도록 하십시오.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
          <source>The created <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object expands entity references and performs XML normalization of new line characters.</source>
          <target state="translated">만든 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 개체는 엔터티 참조를 확장 하 고 줄 바꿈 문자의 XML 정규화를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
          <source>The <ph id="ph1">&lt;paramref name="input" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
          <source>The URI for the file containing the XML data.</source>
          <target state="translated">XML 데이터를 포함하는 파일의 URI입니다.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> object on the <ph id="ph2">&lt;see cref="T:System.Xml.XmlReaderSettings" /&gt;</ph> object is used to convert the path to a canonical data representation.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Xml.XmlReaderSettings" /&gt;</ph> 개체의 <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> 개체는 경로를 정규 데이터 표현으로 변환하는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
          <source>If <ph id="ph1">&lt;see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, a new <ph id="ph3">&lt;see cref="T:System.Xml.XmlUrlResolver" /&gt;</ph> object is used.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이면 새 <ph id="ph3">&lt;see cref="T:System.Xml.XmlUrlResolver" /&gt;</ph> 개체가 사용됩니다.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
          <source>The settings for the new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 인스턴스의 설정입니다.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
          <source>This value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance by using the specified URI and settings.</source>
          <target state="translated">지정된 URI 및 설정을 사용하여 새 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
          <source>An object that is used to read the XML data in the stream.</source>
          <target state="translated">스트림의 XML 데이터를 읽는 데 사용되는 개체입니다.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
          <source>By default an <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 자격 증명 없이 문서 형식 정의 (DTD), 엔터티, 스키마 등의 외부 리소스에 액세스 하려면 사용 합니다.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
          <source>Starting with the .NET Framework 4.5.2, no default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> is provided.</source>
          <target state="translated">.NET Framework 4.5.2, 기본값은 없습니다부터 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
          <source>If your solution targets the .NET Framework 4.5.2 or later versions, specify an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">솔루션 이상 버전의.NET Framework 4.5.2 대상으로 하는 경우 지정 된 <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> 를 사용 하 여는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
          <source>This means that the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> can access any locations that does not require authentication.</source>
          <target state="translated">즉는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 인증이 필요 하지 않은 모든 위치에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
          <source>If the external resource is located on a network resource that requires authentication, use the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property to specify an <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> with the necessary credentials.</source>
          <target state="translated">외부 리소스를 인증이 필요한 네트워크 리소스에 있는 경우 사용 하 여는 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> 속성을 통해 지정 된 <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> 에 필요한 자격 증명 합니다.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
          <source>You can restrict the resources that the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> can access by setting the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> property to an <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> object.</source>
          <target state="translated">리소스를 제한할 수 있는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 설정 하 여 액세스할 수는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> 속성을는 <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
          <source>The created <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object expands entity references and performs XML normalization of new line characters.</source>
          <target state="translated">만든 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 개체는 엔터티 참조를 확장 하 고 줄 바꿈 문자의 XML 정규화를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object that supports document type definition (DTD) validation.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 문서 유형 정의 (DTD) 유효성 검사를 지 원하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
          <source>The <ph id="ph1">&lt;paramref name="inputUri" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inputUri" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
          <source>The file specified by the URI cannot be found.</source>
          <target state="translated">URI로 지정된 파일을 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
          <source>In the <bpt id="p1">[</bpt>.NET for Windows Store apps<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> or the <bpt id="p2">[</bpt>Portable Class Library<ept id="p2">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>, catch the base class exception, <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph>, instead.</source>
          <target state="translated"><bpt id="p1">[</bpt>Windows 스토어 앱용 .NET<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> 또는 <bpt id="p2">[</bpt>이식 가능한 클래스 라이브러리<ept id="p2">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>에서 대신 기본 클래스 예외 <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph>을 catch합니다.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
          <source>The URI format is not correct.</source>
          <target state="translated">URI 형식이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>The object that you want to use as the underlying XML reader.</source>
          <target state="translated">내부 XML 판독기로 사용할 개체입니다.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>The settings for the new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 인스턴스의 설정입니다.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>The conformance level of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReaderSettings" /&gt;</ph> object must either match the conformance level of the underlying reader, or it must be set to <ph id="ph2">&lt;see cref="F:System.Xml.ConformanceLevel.Auto" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReaderSettings" /&gt;</ph> 개체의 규칙 수준은 기본 판독기의 규칙 수준과 일치하거나 <ph id="ph2">&lt;see cref="F:System.Xml.ConformanceLevel.Auto" /&gt;</ph>로 설정되어야 합니다.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance by using the specified XML reader and settings.</source>
          <target state="translated">지정된 XML 판독기 및 설정을 사용하여 새 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>An object that is wrapped around the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> object.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 개체를 래핑하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>This method allows you add additional features to an underlying <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object.</source>
          <target state="translated">이 메서드는 내부에 추가 기능을 사용 하면 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>The underlying <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object can be another <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> object created by the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method, or an <ph id="ph4">&lt;xref:System.Xml.XmlReader&gt;</ph> object created using one of the concrete <ph id="ph5">&lt;xref:System.Xml.XmlReader&gt;</ph> implementations.</source>
          <target state="translated">내부 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 다른 개체 일 수 있습니다 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 하 여 만든 개체는 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드, 또는 <ph id="ph4">&lt;xref:System.Xml.XmlReader&gt;</ph> 개체 중 하나를 사용 하 여 만든 <ph id="ph5">&lt;xref:System.Xml.XmlReader&gt;</ph> 구현 합니다.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>A default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no credentials is used to access any external resources such as a schema.</source>
          <target state="translated">기본 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 자격 증명 없이 스키마 같은 외부 리소스에 액세스할 때는 사용 합니다.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>Starting with the .NET Framework 4.5.2, no default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> is provided.</source>
          <target state="translated">.NET Framework 4.5.2, 기본값은 없습니다부터 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>If your solution targets the .NET Framework 4.5.2 or later versions, specify an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">솔루션 이상 버전의.NET Framework 4.5.2 대상으로 하는 경우 지정 된 <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> 를 사용 하 여는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>If the external resource is located on a network resource that requires authentication, specify an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> with the necessary credentials using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">외부 리소스를 인증이 필요한 네트워크 리소스에 있는 경우 지정 된 <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> 를 사용 하 여 필요한 자격 증명는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>You can use one of the following methods to control which resources the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> can access:</source>
          <target state="translated">다음 방법 중 하나를 사용 하 여 있는 리소스를 제어할 수 있습니다는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>Restrict the resources that the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> can access by setting the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> property to an <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 속성을 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> 개체로 설정하여 <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph>에서 액세스 가능한 리소스를 제한합니다.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>Do not allow the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> to open any external resources by setting the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> property to <ph id="ph3">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 속성을 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph>로 설정하여 <ph id="ph3">`null`</ph>가 모든 외부 리소스를 열 수 없도록 하십시오.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>The created <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object expands entity references and performs XML normalization of new line characters.</source>
          <target state="translated">만든 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 개체는 엔터티 참조를 확장 하 고 줄 바꿈 문자의 XML 정규화를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>The following example creates a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object that is wrapped around an <ph id="ph2">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> object.</source>
          <target state="translated">다음 예제에서는 유효성 검사 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 개체를 래핑하는 <ph id="ph2">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>The <ph id="ph1">&lt;paramref name="reader" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReaderSettings" /&gt;</ph> object specifies a conformance level that is not consistent with conformance level of the underlying reader.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReaderSettings" /&gt;</ph> 개체가 기본 판독기의 규칙 수준과 일치하지 않는 규칙 수준을 지정하는 경우</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> is in an <ph id="ph2">&lt;see cref="F:System.Xml.ReadState.Error" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Xml.ReadState.Closed" /&gt;</ph> state.</source>
          <target state="translated">기본 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Xml.ReadState.Error" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="F:System.Xml.ReadState.Closed" /&gt;</ph> 상태에 있는 경우</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source>The stream that contains the XML data.</source>
          <target state="translated">XML 데이터가 포함된 스트림입니다.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> scans the first bytes of the stream looking for a byte order mark or other sign of encoding.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>는 스트림의 첫 번째 바이트를 검색하여 바이트 순서 표시나 다른 인코딩 기호를 찾습니다.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source>When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.</source>
          <target state="translated">인코딩이 확인되면 이 인코딩을 사용하여 스트림을 읽고, 입력을 문자 스트림(유니코드)으로 구문 분석하는 작업이 수행됩니다.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source>The settings for the new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 인스턴스의 설정입니다.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source>This value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source>The base URI for the entity or document being read.</source>
          <target state="translated">읽을 엔터티 또는 문서의 기본 URI입니다.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source>This value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source><bpt id="p1">**</bpt>Security Note<ept id="p1">**</ept> The base URI is used to resolve the relative URI of the XML document.</source>
          <target state="translated"><bpt id="p1">**</bpt>보안 정보<ept id="p1">**</ept> 기본 URI는 XML 문서의 상대 URI를 확인하는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source>Do not use a base URI from an untrusted source.</source>
          <target state="translated">신뢰할 수 없는 소스의 기본 URI는 사용하지 않는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance using the specified stream, base URI, and settings.</source>
          <target state="translated">지정된 스트림, 기본 URI 및 설정을 사용하여 새 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source>An object that is used to read the XML data in the stream.</source>
          <target state="translated">스트림의 XML 데이터를 읽는 데 사용되는 개체입니다.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source>By default an <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 자격 증명 없이 문서 형식 정의 (DTD), 엔터티, 스키마 등의 외부 리소스에 액세스 하려면 사용 합니다.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source>Starting with the .NET Framework 4.5.2, no default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> is provided.</source>
          <target state="translated">.NET Framework 4.5.2, 기본값은 없습니다부터 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source>If your solution targets the .NET Framework 4.5.2 or later versions, specify an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">솔루션 이상 버전의.NET Framework 4.5.2 대상으로 하는 경우 지정 된 <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> 를 사용 하 여는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source>If the external resource is located on a network resource that requires authentication, use the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property to specify an <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> with the necessary credentials.</source>
          <target state="translated">외부 리소스를 인증이 필요한 네트워크 리소스에 있는 경우 사용 하 여는 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> 속성을 통해 지정 된 <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> 에 필요한 자격 증명 합니다.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source>You can use one of the following methods to control which resources the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> can access:</source>
          <target state="translated">다음 방법 중 하나를 사용 하 여 있는 리소스를 제어할 수 있습니다는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source>Restrict the resources that the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> can access by setting the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> property to an <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 속성을 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> 개체로 설정하여 <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph>에서 액세스 가능한 리소스를 제한합니다.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source>Do not allow the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> to open any external resources by setting the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> property to <ph id="ph3">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 속성을 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph>로 설정하여 <ph id="ph3">`null`</ph>가 모든 외부 리소스를 열 수 없도록 하십시오.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source>The created <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object expands entity references and performs XML normalization of new line characters.</source>
          <target state="translated">만든 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 개체는 엔터티 참조를 확장 하 고 줄 바꿈 문자의 XML 정규화를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="input" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The stream that contains the XML data.</source>
          <target state="translated">XML 데이터가 포함된 스트림입니다.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> scans the first bytes of the stream looking for a byte order mark or other sign of encoding.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>는 스트림의 첫 번째 바이트를 검색하여 바이트 순서 표시나 다른 인코딩 기호를 찾습니다.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.</source>
          <target state="translated">인코딩이 확인되면 이 인코딩을 사용하여 스트림을 읽고, 입력을 문자 스트림(유니코드)으로 구문 분석하는 작업이 수행됩니다.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The settings for the new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 인스턴스의 설정입니다.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>This value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The context information required to parse the XML fragment.</source>
          <target state="translated">XML 조각을 구문 분석하는 데 필요한 컨텍스트 정보입니다.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The context information can include the <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> to use, encoding, namespace scope, the current <bpt id="p1">&lt;c&gt;</bpt>xml:lang<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>xml:space<ept id="p2">&lt;/c&gt;</ept> scope, base URI, and document type definition.</source>
          <target state="translated">컨텍스트 정보에는 사용할 <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph>, 인코딩, 네임스페이스 범위, 현재 <bpt id="p1">&lt;c&gt;</bpt>xml:lang<ept id="p1">&lt;/c&gt;</ept>과 <bpt id="p2">&lt;c&gt;</bpt>xml:space<ept id="p2">&lt;/c&gt;</ept> 범위, 기본 URI 및 문서 종류 정의가 포함될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>This value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance using the specified stream, settings, and context information for parsing.</source>
          <target state="translated">구문 분석을 위해 지정한 스트림, 설정 및 컨텍스트 정보를 사용하여 새 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>An object that is used to read the XML data in the stream.</source>
          <target state="translated">스트림의 XML 데이터를 읽는 데 사용되는 개체입니다.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>By default an <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 자격 증명 없이 문서 형식 정의 (DTD), 엔터티, 스키마 등의 외부 리소스에 액세스 하려면 사용 합니다.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>Starting with the .NET Framework 4.5.2, no default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> is provided.</source>
          <target state="translated">.NET Framework 4.5.2, 기본값은 없습니다부터 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>If your solution targets the .NET Framework 4.5.2 or later versions, specify an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">솔루션 이상 버전의.NET Framework 4.5.2 대상으로 하는 경우 지정 된 <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> 를 사용 하 여는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>If the external resource is located on a network resource that requires authentication, use the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property to specify an <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> with the necessary credentials.</source>
          <target state="translated">외부 리소스를 인증이 필요한 네트워크 리소스에 있는 경우 사용 하 여는 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> 속성을 통해 지정 된 <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> 에 필요한 자격 증명 합니다.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>You can use one of the following methods to control which resources the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> can access:</source>
          <target state="translated">다음 방법 중 하나를 사용 하 여 있는 리소스를 제어할 수 있습니다는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>Restrict the resources that the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> can access by setting the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> property to an <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 속성을 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> 개체로 설정하여 <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph>에서 액세스 가능한 리소스를 제한합니다.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>Do not allow the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> to open any external resources by setting the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> property to <ph id="ph3">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 속성을 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph>로 설정하여 <ph id="ph3">`null`</ph>가 모든 외부 리소스를 열 수 없도록 하십시오.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The created <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object expands entity references and performs XML normalization of new line characters.</source>
          <target state="translated">만든 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 개체는 엔터티 참조를 확장 하 고 줄 바꿈 문자의 XML 정규화를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The <ph id="ph1">&lt;paramref name="input" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
          <source>The text reader from which to read the XML data.</source>
          <target state="translated">XML 데이터를 읽어올 텍스트 판독기입니다.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
          <source>A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration isn't used by the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> to decode the data stream.</source>
          <target state="translated">텍스트 판독기는 유니코드 문자 스트림을 반환하므로 XML 선언에 지정된 인코딩은 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>가 데이터 스트림을 디코딩하는 데 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
          <source>The settings for the new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 인스턴스의 설정입니다.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
          <source>This value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
          <source>The base URI for the entity or document being read.</source>
          <target state="translated">읽을 엔터티 또는 문서의 기본 URI입니다.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
          <source>This value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
          <source><bpt id="p1">**</bpt>Security Note<ept id="p1">**</ept> The base URI is used to resolve the relative URI of the XML document.</source>
          <target state="translated"><bpt id="p1">**</bpt>보안 정보<ept id="p1">**</ept> 기본 URI는 XML 문서의 상대 URI를 확인하는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
          <source>Do not use a base URI from an untrusted source.</source>
          <target state="translated">신뢰할 수 없는 소스의 기본 URI는 사용하지 않는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance by using the specified text reader, settings, and base URI.</source>
          <target state="translated">지정된 텍스트 판독기, 설정 및 기본 URI를 사용하여 새 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
          <source>An object that is used to read the XML data in the stream.</source>
          <target state="translated">스트림의 XML 데이터를 읽는 데 사용되는 개체입니다.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
          <source>By default an <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 자격 증명 없이 문서 형식 정의 (DTD), 엔터티, 스키마 등의 외부 리소스에 액세스 하려면 사용 합니다.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
          <source>Starting with the .NET Framework 4.5.2, no default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> is provided.</source>
          <target state="translated">.NET Framework 4.5.2, 기본값은 없습니다부터 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
          <source>If your solution targets the .NET Framework 4.5.2 or later versions, specify an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">솔루션 이상 버전의.NET Framework 4.5.2 대상으로 하는 경우 지정 된 <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> 를 사용 하 여는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
          <source>If the external resource is located on a network resource that requires authentication, use the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property to specify an <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> with the necessary credentials.</source>
          <target state="translated">외부 리소스를 인증이 필요한 네트워크 리소스에 있는 경우 사용 하 여는 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> 속성을 통해 지정 된 <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> 에 필요한 자격 증명 합니다.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
          <source>You can use one of the following methods to control which resources the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> can access:</source>
          <target state="translated">다음 방법 중 하나를 사용 하 여 있는 리소스를 제어할 수 있습니다는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
          <source>Restrict the resources that the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> can access by setting the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> property to an <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 속성을 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> 개체로 설정하여 <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph>에서 액세스 가능한 리소스를 제한합니다.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
          <source>Do not allow the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> to open any external resources by setting the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> property to <ph id="ph3">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 속성을 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph>로 설정하여 <ph id="ph3">`null`</ph>가 모든 외부 리소스를 열 수 없도록 하십시오.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
          <source>The created <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object expands entity references and performs XML normalization of new line characters.</source>
          <target state="translated">만든 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 개체는 엔터티 참조를 확장 하 고 줄 바꿈 문자의 XML 정규화를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="input" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The text reader from which to read the XML data.</source>
          <target state="translated">XML 데이터를 읽어올 텍스트 판독기입니다.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration isn't used by the XML reader to decode the data stream.</source>
          <target state="translated">텍스트 판독기는 유니코드 문자 스트림을 반환하므로 XML 선언에 지정된 인코딩은 XML 판독기가 데이터 스트림을 디코딩하는 데 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The settings for the new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 인스턴스의 설정입니다.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>This value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The context information required to parse the XML fragment.</source>
          <target state="translated">XML 조각을 구문 분석하는 데 필요한 컨텍스트 정보입니다.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The context information can include the <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> to use, encoding, namespace scope, the current <bpt id="p1">&lt;c&gt;</bpt>xml:lang<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>xml:space<ept id="p2">&lt;/c&gt;</ept> scope, base URI, and document type definition.</source>
          <target state="translated">컨텍스트 정보에는 사용할 <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph>, 인코딩, 네임스페이스 범위, 현재 <bpt id="p1">&lt;c&gt;</bpt>xml:lang<ept id="p1">&lt;/c&gt;</ept>과 <bpt id="p2">&lt;c&gt;</bpt>xml:space<ept id="p2">&lt;/c&gt;</ept> 범위, 기본 URI 및 문서 종류 정의가 포함될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>This value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance by using the specified text reader, settings, and context information for parsing.</source>
          <target state="translated">지정된 텍스트 판독기, 설정 및 컨텍스트 정보를 구문 분석에 사용하여 새 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>An object that is used to read the XML data in the stream.</source>
          <target state="translated">스트림의 XML 데이터를 읽는 데 사용되는 개체입니다.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>By default an <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 자격 증명 없이 문서 형식 정의 (DTD), 엔터티, 스키마 등의 외부 리소스에 액세스 하려면 사용 합니다.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>Starting with the .NET Framework 4.5.2, no default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> is provided.</source>
          <target state="translated">.NET Framework 4.5.2, 기본값은 없습니다부터 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>If your solution targets the .NET Framework 4.5.2 or later versions, specify an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">솔루션 이상 버전의.NET Framework 4.5.2 대상으로 하는 경우 지정 된 <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> 를 사용 하 여는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>If the external resource is located on a network resource that requires authentication, use the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property to specify an <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> with the necessary credentials.</source>
          <target state="translated">외부 리소스를 인증이 필요한 네트워크 리소스에 있는 경우 사용 하 여는 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> 속성을 통해 지정 된 <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> 에 필요한 자격 증명 합니다.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>You can use one of the following methods to control which resources the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> can access:</source>
          <target state="translated">다음 방법 중 하나를 사용 하 여 있는 리소스를 제어할 수 있습니다는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>Restrict the resources that the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> can access by setting the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> property to an <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 속성을 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> 개체로 설정하여 <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph>에서 액세스 가능한 리소스를 제한합니다.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>Do not allow the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> to open any external resources by setting the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> property to <ph id="ph3">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 속성을 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph>로 설정하여 <ph id="ph3">`null`</ph>가 모든 외부 리소스를 열 수 없도록 하십시오.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The created <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object expands entity references and performs XML normalization of new line characters.</source>
          <target state="translated">만든 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 개체는 엔터티 참조를 확장 하 고 줄 바꿈 문자의 XML 정규화를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object that reads an XML fragment.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> XML 조각을 읽는 개체입니다.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The <ph id="ph1">&lt;paramref name="input" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Xml.XmlReaderSettings.NameTable" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Xml.XmlParserContext.NameTable" /&gt;</ph> properties both contain values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Xml.XmlReaderSettings.NameTable" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="P:System.Xml.XmlParserContext.NameTable" /&gt;</ph> 속성 둘 다에 값이 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>(Only one of these <ph id="ph1">&lt;see langword="NameTable" /&gt;</ph> properties can be set and used).</source>
          <target state="translated"><ph id="ph1">&lt;see langword="NameTable" /&gt;</ph> 속성 중 하나만 설정 및 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The URI for the file containing the XML data.</source>
          <target state="translated">XML 데이터를 포함하는 파일의 URI입니다.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> object on the <ph id="ph2">&lt;see cref="T:System.Xml.XmlReaderSettings" /&gt;</ph> object is used to convert the path to a canonical data representation.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Xml.XmlReaderSettings" /&gt;</ph> 개체의 <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> 개체는 경로를 정규 데이터 표현으로 변환하는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>If <ph id="ph1">&lt;see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, a new <ph id="ph3">&lt;see cref="T:System.Xml.XmlUrlResolver" /&gt;</ph> object is used.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이면 새 <ph id="ph3">&lt;see cref="T:System.Xml.XmlUrlResolver" /&gt;</ph> 개체가 사용됩니다.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The settings for the new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 인스턴스의 설정입니다.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>This value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The context information required to parse the XML fragment.</source>
          <target state="translated">XML 조각을 구문 분석하는 데 필요한 컨텍스트 정보입니다.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The context information can include the <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> to use, encoding, namespace scope, the current <bpt id="p1">&lt;c&gt;</bpt>xml:lang<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>xml:space<ept id="p2">&lt;/c&gt;</ept> scope, base URI, and document type definition.</source>
          <target state="translated">컨텍스트 정보에는 사용할 <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph>, 인코딩, 네임스페이스 범위, 현재 <bpt id="p1">&lt;c&gt;</bpt>xml:lang<ept id="p1">&lt;/c&gt;</ept>과 <bpt id="p2">&lt;c&gt;</bpt>xml:space<ept id="p2">&lt;/c&gt;</ept> 범위, 기본 URI 및 문서 종류 정의가 포함될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>This value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance by using the specified URI, settings, and context information for parsing.</source>
          <target state="translated">지정된 URI, 설정 및 컨텍스트 정보를 구문 분석에 사용하여 새 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>An object that is used to read the XML data in the stream.</source>
          <target state="translated">스트림의 XML 데이터를 읽는 데 사용되는 개체입니다.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>By default an <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 자격 증명 없이 문서 형식 정의 (DTD), 엔터티, 스키마 등의 외부 리소스에 액세스 하려면 사용 합니다.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>Starting with the .NET Framework 4.5.2, no default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> is provided.</source>
          <target state="translated">.NET Framework 4.5.2, 기본값은 없습니다부터 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>If your solution targets the .NET Framework 4.5.2 or later versions, specify an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">솔루션 이상 버전의.NET Framework 4.5.2 대상으로 하는 경우 지정 된 <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> 를 사용 하 여는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>This means that the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> can access any locations that does not require authentication.</source>
          <target state="translated">즉는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 인증이 필요 하지 않은 모든 위치에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>If the external resource is located on a network resource that requires authentication, use the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property to specify an <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> with the necessary credentials.</source>
          <target state="translated">외부 리소스를 인증이 필요한 네트워크 리소스에 있는 경우 사용 하 여는 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> 속성을 통해 지정 된 <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> 에 필요한 자격 증명 합니다.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>You can restrict the resources that the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> can access by setting the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> property to an <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> object.</source>
          <target state="translated">리소스를 제한할 수 있는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 설정 하 여 액세스할 수는 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> 속성을는 <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The created <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object expands entity references and performs XML normalization of new line characters.</source>
          <target state="translated">만든 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 개체는 엔터티 참조를 확장 하 고 줄 바꿈 문자의 XML 정규화를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The <ph id="ph1">&lt;see langword="inputUri" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="inputUri" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> does not have sufficient permissions to access the location of the XML data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>에는 XML 데이터 위치에 액세스할 수 있는 충분한 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Xml.XmlReaderSettings.NameTable" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Xml.XmlParserContext.NameTable" /&gt;</ph> properties both contain values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Xml.XmlReaderSettings.NameTable" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="P:System.Xml.XmlParserContext.NameTable" /&gt;</ph> 속성 둘 다에 값이 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>(Only one of these <ph id="ph1">&lt;see langword="NameTable" /&gt;</ph> properties can be set and used).</source>
          <target state="translated"><ph id="ph1">&lt;see langword="NameTable" /&gt;</ph> 속성 중 하나만 설정 및 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The file specified by the URI cannot be found.</source>
          <target state="translated">URI로 지정된 파일을 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The URI format is not correct.</source>
          <target state="translated">URI 형식이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Depth">
          <source>When overridden in a derived class, gets the depth of the current node in the XML document.</source>
          <target state="translated">파생 클래스에서 재정의되면 XML 문서에서 현재 노드의 수준을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Depth">
          <source>The depth of the current node in the XML document.</source>
          <target state="translated">XML 문서의 현재 노드 수준입니다.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Depth">
          <source>See <ph id="ph1">&lt;xref:System.Xml.XmlTextReader.Depth%2A&gt;</ph> (in the <ph id="ph2">`XmlTextReader`</ph> class) for an example using this property.</source>
          <target state="translated">참조 <ph id="ph1">&lt;xref:System.Xml.XmlTextReader.Depth%2A&gt;</ph> (에 <ph id="ph2">`XmlTextReader`</ph> 클래스)이이 속성을 사용 하는 예제에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Depth">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Depth">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message “An asynchronous operation is already in progress.”</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 클래스에서 사용하는 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 클래스의 현재 인스턴스에서 사용하는 모든 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Dispose">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Dispose">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>로 설정하고, 관리되지 않는 리소스만 해제하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Dispose(System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Dispose(System.Boolean)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.EOF">
          <source>When overridden in a derived class, gets a value indicating whether the reader is positioned at the end of the stream.</source>
          <target state="translated">파생 클래스에서 재정의되면 판독기가 스트림의 끝에 배치되었는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.EOF">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the reader is positioned at the end of the stream; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">판독기가 스트림의 맨 끝에 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.EOF">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.EOF">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message “An asynchronous operation is already in progress.”</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>When overridden in a derived class, gets the value of an attribute.</source>
          <target state="translated">파생 클래스에서 재정의되면 특성의 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.Int32)">
          <source>The index of the attribute.</source>
          <target state="translated">특성의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.Int32)">
          <source>The index is zero-based.</source>
          <target state="translated">인덱스는 0부터 시작합니다.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.Int32)">
          <source>(The first attribute has index 0.)</source>
          <target state="translated">첫 번째 특성의 인덱스는 0입니다.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.Int32)">
          <source>When overridden in a derived class, gets the value of the attribute with the specified index.</source>
          <target state="translated">파생 클래스에서 재정의되면 지정된 인덱스가 있는 특성의 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.Int32)">
          <source>The value of the specified attribute.</source>
          <target state="translated">지정된 특성의 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.Int32)">
          <source>This method does not move the reader.</source>
          <target state="translated">이 메서드는 판독기를 이동하지 않습니다.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.GetAttribute(System.Int32)">
          <source>The following example gets the value of the third attribute.</source>
          <target state="translated">다음 예제에서는 세 번째 특성의 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="i" /&gt;</ph> is out of range.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="i" /&gt;</ph>가 범위에서 벗어난 경우</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.Int32)">
          <source>It must be non-negative and less than the size of the attribute collection.</source>
          <target state="translated">음수가 아니어야 하며 특성 컬렉션의 크기보다 작아야합니다.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.String)">
          <source>The qualified name of the attribute.</source>
          <target state="translated">특성의 정규화된 이름입니다.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.String)">
          <source>When overridden in a derived class, gets the value of the attribute with the specified <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.Name" /&gt;</ph>.</source>
          <target state="translated">파생 클래스에서 재정의되면 지정된 <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.Name" /&gt;</ph>이 있는 특성의 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.String)">
          <source>The value of the specified attribute.</source>
          <target state="translated">지정된 특성의 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.String)">
          <source>If the attribute is not found or the value is <ph id="ph1">&lt;see langword="String.Empty" /&gt;</ph>, <ph id="ph2">&lt;see langword="null" /&gt;</ph> is returned.</source>
          <target state="translated">지정된 특성이 없거나 값이 <ph id="ph1">&lt;see langword="String.Empty" /&gt;</ph>이면 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이 반환됩니다.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.GetAttribute(System.String)">
          <source>This method does not move the reader.</source>
          <target state="translated">이 메서드는 판독기를 이동하지 않습니다.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.GetAttribute(System.String)">
          <source>If the reader is positioned on a <ph id="ph1">`DocumentType`</ph> node, this method can be used to get the PUBLIC and SYSTEM literals, for example, <ph id="ph2">`reader.GetAttribute("PUBLIC")`</ph></source>
          <target state="translated">판독기가 배치 되 면는 <ph id="ph1">`DocumentType`</ph> 노드를이 메서드는 PUBLIC 및 시스템 리터럴, 예를 들어, 가져오는 데 사용할 수 있습니다 <ph id="ph2">`reader.GetAttribute("PUBLIC")`</ph></target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.GetAttribute(System.String)">
          <source>The following example gets the value of the ISBN attribute.</source>
          <target state="translated">다음 예제에서는 ISBN 특성의 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">특성의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
          <source>The namespace URI of the attribute.</source>
          <target state="translated">특성의 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
          <source>When overridden in a derived class, gets the value of the attribute with the specified <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.LocalName" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NamespaceURI" /&gt;</ph>.</source>
          <target state="translated">파생 클래스에서 재정의되면 지정된 <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.LocalName" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NamespaceURI" /&gt;</ph>가 있는 특성의 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
          <source>The value of the specified attribute.</source>
          <target state="translated">지정된 특성의 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
          <source>If the attribute is not found or the value is <ph id="ph1">&lt;see langword="String.Empty" /&gt;</ph>, <ph id="ph2">&lt;see langword="null" /&gt;</ph> is returned.</source>
          <target state="translated">지정된 특성이 없거나 값이 <ph id="ph1">&lt;see langword="String.Empty" /&gt;</ph>이면 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이 반환됩니다.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
          <source>This method does not move the reader.</source>
          <target state="translated">이 메서드는 판독기를 이동하지 않습니다.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
          <source>The following XML contains an attribute in a specific namespace:</source>
          <target state="translated">다음 XML 특성을 특정 네임 스페이스에 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
          <source>You can lookup the <ph id="ph1">`dt:type`</ph> attribute using one argument (prefix and local name) or two arguments (local name and namespace URI):</source>
          <target state="translated">조회할 수 있습니다는 <ph id="ph1">`dt:type`</ph> (접두사와 로컬 이름)에 하나의 인수 또는 (로컬 이름 및 네임 스페이스 URI)는 두 개의 인수를 사용 하 여 특성:</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
          <source>To lookup the <ph id="ph1">`xmlns:dt`</ph> attribute, use one of the following arguments:</source>
          <target state="translated">조회는 <ph id="ph1">`xmlns:dt`</ph> 특성을 다음 인수 중 하나를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
          <source>You can also get this information using the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Prefix%2A&gt;</ph> property.</source>
          <target state="translated">사용 하 여이 정보를 가져올 수도 있습니다는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.Prefix%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetValueAsync">
          <source>Asynchronously gets the value of the current node.</source>
          <target state="translated">현재 노드의 값을 비동기적으로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetValueAsync">
          <source>The value of the current node.</source>
          <target state="translated">현재 노드의 값입니다.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.GetValueAsync">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetValueAsync">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetValueAsync">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 “비동기 메서드를 사용하려면 XmlReaderSettings.Async를 true로 설정하세요.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.HasAttributes">
          <source>Gets a value indicating whether the current node has any attributes.</source>
          <target state="translated">현재 노드에 특성이 있는지를 나타내는 값을 얻습니다.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.HasAttributes">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current node has attributes; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 노드에 특성이 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.HasAttributes">
          <source>The following example displays all attributes on the current node.</source>
          <target state="translated">다음 예에서는 현재 노드의 모든 특성을 표시합니다.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.HasAttributes">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.HasAttributes">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.HasValue">
          <source>When overridden in a derived class, gets a value indicating whether the current node can have a <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.Value" /&gt;</ph>.</source>
          <target state="translated">파생 클래스에서 재정의되면 현재 노드에 <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.Value" /&gt;</ph>가 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.HasValue">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the node on which the reader is currently positioned can have a <ph id="ph2">&lt;see langword="Value" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 판독기가 위치한 노드에 <ph id="ph2">&lt;see langword="Value" /&gt;</ph>가 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.HasValue">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, the node has a value of <ph id="ph2">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph>인 경우 노드의 값은 <ph id="ph2">&lt;see langword="String.Empty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.HasValue">
          <source>The following table lists node types that have a value to return.</source>
          <target state="translated">다음 표에서는 반환할 값이 있는 노드 형식을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.HasValue">
          <source>Node Type</source>
          <target state="translated">노드 형식</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.HasValue">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.HasValue">
          <source>The value of the attribute.</source>
          <target state="translated">특성 값</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.HasValue">
          <source>The content of the CDATA section.</source>
          <target state="translated">CDATA 섹션 내용입니다.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.HasValue">
          <source>The content of the comment.</source>
          <target state="translated">주석의 내용입니다.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.HasValue">
          <source>The internal subset.</source>
          <target state="translated">내부 하위 집합입니다.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.HasValue">
          <source>The entire content, excluding the target.</source>
          <target state="translated">대상을 제외한 전체 내용입니다.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.HasValue">
          <source>The white space between markup in a mixed content model.</source>
          <target state="translated">혼합된 콘텐츠 모델의 태그 간 공백입니다.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.HasValue">
          <source>The content of the text node.</source>
          <target state="translated">텍스트 노드의 내용입니다.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.HasValue">
          <source>The white space between markup.</source>
          <target state="translated">태그 사이의 공백입니다.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.HasValue">
          <source>The content of the declaration.</source>
          <target state="translated">선언 내용입니다.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.HasValue">
          <source>See <ph id="ph1">&lt;xref:System.Xml.XmlTextReader.HasValue%2A&gt;</ph> (in the <ph id="ph2">`XmlTextReader`</ph> class) for a sample using this method.</source>
          <target state="translated">참조 <ph id="ph1">&lt;xref:System.Xml.XmlTextReader.HasValue%2A&gt;</ph> (에 <ph id="ph2">`XmlTextReader`</ph> 클래스)이이 메서드를 사용 하는 샘플에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.HasValue">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.HasValue">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.IsDefault">
          <source>When overridden in a derived class, gets a value indicating whether the current node is an attribute that was generated from the default value defined in the DTD or schema.</source>
          <target state="translated">파생 클래스에서 재정의되면 현재 노드가 DTD나 스키마에서 정의한 기본값에서 생성된 값을 가진 특성인지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.IsDefault">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current node is an attribute whose value was generated from the default value defined in the DTD or schema; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the attribute value was explicitly set.</source>
          <target state="translated">현재 노드가 DTD나 스키마에서 정의한 기본값에서 생성된 값을 가진 특성이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 특성 값이 명시적으로 설정되었으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.IsDefault">
          <source><ph id="ph1">`IsDefault`</ph> always returns <ph id="ph2">`false`</ph> for implementations of <ph id="ph3">`XmlReader`</ph> that do not support schema or DTD information.</source>
          <target state="translated"><ph id="ph1">`IsDefault`</ph> 항상 반환 <ph id="ph2">`false`</ph> 의 구현을 위한 <ph id="ph3">`XmlReader`</ph> 스키마 또는 DTD 정보를 지원 하지 않는 합니다.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.IsDefault">
          <source>This property applies only to an attribute node.</source>
          <target state="translated">특성 노드의 경우에이 속성이 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.IsDefault">
          <source>The following example displays all attributes on the root element.</source>
          <target state="translated">다음 예제에서는 루트 요소에 모든 특성을 표시합니다.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.IsDefault">
          <source>The example uses the following files as input.</source>
          <target state="translated">이 예제에서는 입력으로 다음 파일을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.IsDefault">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.IsDefault">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.IsEmptyElement">
          <source>When overridden in a derived class, gets a value indicating whether the current node is an empty element (for example, <bpt id="p1">&lt;c&gt;</bpt><ph id="ph1">&amp;lt;</ph>MyElement/<ph id="ph2">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>).</source>
          <target state="translated">파생 클래스에서 재정의되면 현재 노드가 <bpt id="p1">&lt;c&gt;</bpt><ph id="ph1">&amp;lt;</ph>MyElement/<ph id="ph2">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>와 같은 빈 요소인지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.IsEmptyElement">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current node is an element (<ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NodeType" /&gt;</ph> equals <ph id="ph3">&lt;see langword="XmlNodeType.Element" /&gt;</ph>) that ends with <bpt id="p1">&lt;c&gt;</bpt><ph id="ph4">/</ph><ph id="ph5">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>; otherwise, <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 현재 노드가 요소 이면 (<ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NodeType" /&gt;</ph> equals <ph id="ph3">&lt;see langword="XmlNodeType.Element" /&gt;</ph>)로 끝나는 <bpt id="p1">&lt;c&gt;</bpt> <ph id="ph4">/</ph> <ph id="ph5">&amp;gt;</ph> <ept id="p1">&lt;/c&gt;</ept>, 그렇지 않으면 <ph id="ph6">&lt;see langword="false" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.IsEmptyElement">
          <source>This property enables you to determine the difference between the following:</source>
          <target state="translated">이 속성을 사용하여 다음 간의 차이를 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.IsEmptyElement">
          <source><ph id="ph1">`&lt;item num="123"/&gt;`</ph> (<ph id="ph2">`IsEmptyElement`</ph> is <ph id="ph3">`true`</ph>).</source>
          <target state="translated"><ph id="ph1">`&lt;item num="123"/&gt;`</ph> (<ph id="ph2">`IsEmptyElement`</ph> 은 <ph id="ph3">`true`</ph>).</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.IsEmptyElement">
          <source><ph id="ph1">`&lt;item num="123"&gt;&lt;/item&gt;`</ph> (<ph id="ph2">`IsEmptyElement`</ph> is <ph id="ph3">`false`</ph>, although element content is empty).</source>
          <target state="translated"><ph id="ph1">`&lt;item num="123"&gt;&lt;/item&gt;`</ph> (<ph id="ph2">`IsEmptyElement`</ph> 은 <ph id="ph3">`false`</ph>요소 내용이 비어 있지만).</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.IsEmptyElement">
          <source>A corresponding <ph id="ph1">`EndElement`</ph> node is not generated for empty elements.</source>
          <target state="translated">해당 <ph id="ph1">`EndElement`</ph> 빈 요소에 대 한 노드는 생성 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.IsEmptyElement">
          <source>If default content has been added to an element due to schema validation, <ph id="ph1">`IsEmptyElement`</ph> still returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">기본 콘텐츠 스키마 유효성 검사로 인해 요소에 추가한 경우 <ph id="ph1">`IsEmptyElement`</ph> 여전히 반환 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.IsEmptyElement">
          <source>It has no bearing on whether or not the element has a default value.</source>
          <target state="translated">여부는 요소에는 기본값에 관계가 없습니다.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.IsEmptyElement">
          <source>In other words, <ph id="ph1">`IsEmptyElement`</ph> simply reports whether or not the element in the source document had an end element tag.</source>
          <target state="translated">즉, <ph id="ph1">`IsEmptyElement`</ph> 단순히 원본 문서의 요소에 끝 요소 태그가 있는지 여부를 보고 합니다.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.IsEmptyElement">
          <source>The following example displays the text content of each element.</source>
          <target state="translated">다음 예제에서는 각 요소의 텍스트 콘텐츠를 표시합니다.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.IsEmptyElement">
          <source>The example uses the file, <ph id="ph1">`elems.xml`</ph>, as input.</source>
          <target state="translated">이 예제에서는 파일을 사용 하 여 <ph id="ph1">`elems.xml`</ph>입력으로 합니다.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.IsEmptyElement">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.IsEmptyElement">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsName(System.String)">
          <source>The name to validate.</source>
          <target state="translated">유효성을 검사할 이름입니다.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsName(System.String)">
          <source>Returns a value indicating whether the string argument is a valid XML name.</source>
          <target state="translated">문자열 인수가 유효한 XML 이름인지를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsName(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the name is valid; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">유효한 이름이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.IsName(System.String)">
          <source>This method uses the <bpt id="p1">[</bpt>W3C XML 1.0 Recommendation<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=49863)</ept> to determine whether the name is valid.</source>
          <target state="translated">이 방법은 사용 하 여는 <bpt id="p1">[</bpt>W3C XML 1.0 권장 사항<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=49863)</ept> 이름이 올바른지 여부를 확인 하려면.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsName(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="str" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="str" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsNameToken(System.String)">
          <source>The name token to validate.</source>
          <target state="translated">유효성을 검사할 이름 토큰입니다.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsNameToken(System.String)">
          <source>Returns a value indicating whether or not the string argument is a valid XML name token.</source>
          <target state="translated">문자열 인수가 유효한 XML 이름 토큰인지를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsNameToken(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if it is a valid name token; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">유효한 이름 토큰이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.IsNameToken(System.String)">
          <source>This method uses the <bpt id="p1">[</bpt>W3C XML 1.0 Recommendation<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=49863)</ept> to determine whether the name token is valid.</source>
          <target state="translated">이 방법은 사용 하 여는 <bpt id="p1">[</bpt>W3C XML 1.0 권장 사항<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=49863)</ept> 이름 토큰 올바른지 여부를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsNameToken(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="str" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="str" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message “An asynchronous operation is already in progress.”</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>Tests if the current content node is a start tag.</source>
          <target state="translated">현재 콘텐츠 노드가 시작 태그인지 테스트합니다.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsStartElement">
          <source>Calls <ph id="ph1">&lt;see cref="M:System.Xml.XmlReader.MoveToContent" /&gt;</ph> and tests if the current content node is a start tag or empty element tag.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Xml.XmlReader.MoveToContent" /&gt;</ph>를 호출하고 현재 콘텐츠 노드가 시작 태그 또는 빈 요소 태그인지 테스트합니다.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsStartElement">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;see cref="M:System.Xml.XmlReader.MoveToContent" /&gt;</ph> finds a start tag or empty element tag; <ph id="ph3">&lt;see langword="false" /&gt;</ph> if a node type other than <ph id="ph4">&lt;see langword="XmlNodeType.Element" /&gt;</ph> was found.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="M:System.Xml.XmlReader.MoveToContent" /&gt;</ph>가 시작 태그나 빈 요소 태그를 찾으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, <ph id="ph3">&lt;see langword="false" /&gt;</ph> 이외의 노드 형식을 찾으면 <ph id="ph4">&lt;see langword="XmlNodeType.Element" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.IsStartElement">
          <source>This method skips white space, comments, and processing instructions until the reader is positioned on a content node.</source>
          <target state="translated">공백, 주석 및 처리 명령 콘텐츠 노드에 판독기가 배치 될 때까지이 메서드는 건너뜁니다.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.IsStartElement">
          <source>The method then tests if the current node is an element.</source>
          <target state="translated">메서드 다음 현재 노드가 요소 인지 테스트 합니다.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.IsStartElement">
          <source>The following example displays the text content of each element.</source>
          <target state="translated">다음 예제에서는 각 요소의 텍스트 콘텐츠를 표시합니다.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.IsStartElement">
          <source>The example uses the file, <ph id="ph1">`elems.xml`</ph>, as input.</source>
          <target state="translated">이 예제에서는 파일을 사용 하 여 <ph id="ph1">`elems.xml`</ph>입력으로 합니다.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsStartElement">
          <source>Incorrect XML is encountered in the input stream.</source>
          <target state="translated">입력 스트림에 잘못된 XML이 있는 경우</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsStartElement">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsStartElement">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsStartElement(System.String)">
          <source>The string matched against the <ph id="ph1">&lt;see langword="Name" /&gt;</ph> property of the element found.</source>
          <target state="translated">찾은 요소의 <ph id="ph1">&lt;see langword="Name" /&gt;</ph> 속성과 일치하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsStartElement(System.String)">
          <source>Calls <ph id="ph1">&lt;see cref="M:System.Xml.XmlReader.MoveToContent" /&gt;</ph> and tests if the current content node is a start tag or empty element tag and if the <ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.Name" /&gt;</ph> property of the element found matches the given argument.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Xml.XmlReader.MoveToContent" /&gt;</ph>를 호출하고 현재 콘텐츠 노드가 시작 태그 또는 빈 요소 태그인지 여부와 찾은 요소의 <ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.Name" /&gt;</ph> 속성이 지정된 인수와 일치하는지 여부를 테스트합니다.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsStartElement(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the resulting node is an element and the <ph id="ph2">&lt;see langword="Name" /&gt;</ph> property matches the specified string.</source>
          <target state="translated">테스트한 결과 현재 노드가 요소이고 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 속성이 지정된 문자열과 일치하면 <ph id="ph2">&lt;see langword="Name" /&gt;</ph>이고,</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsStartElement(System.String)">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if a node type other than <ph id="ph2">&lt;see langword="XmlNodeType.Element" /&gt;</ph> was found or if the element <ph id="ph3">&lt;see langword="Name" /&gt;</ph> property does not match the specified string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph> 이외의 노드 형식을 찾거나 요소 <ph id="ph2">&lt;see langword="XmlNodeType.Element" /&gt;</ph> 속성이 지정된 문자열과 일치하지 않으면 <ph id="ph3">&lt;see langword="Name" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.IsStartElement(System.String)">
          <source>This method skips white space, comments, and processing instructions until the reader is positioned on a content node.</source>
          <target state="translated">공백, 주석 및 처리 명령 콘텐츠 노드에 판독기가 배치 될 때까지이 메서드는 건너뜁니다.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.IsStartElement(System.String)">
          <source>The method then tests if the current node is an element.</source>
          <target state="translated">메서드 다음 현재 노드가 요소 인지 테스트 합니다.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.IsStartElement(System.String)">
          <source>The following example displays each price element.</source>
          <target state="translated">다음 예제에서는 각 가격 요소를 표시합니다.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsStartElement(System.String)">
          <source>Incorrect XML is encountered in the input stream.</source>
          <target state="translated">입력 스트림에 잘못된 XML이 있는 경우</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsStartElement(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsStartElement(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)">
          <source>The string to match against the <ph id="ph1">&lt;see langword="LocalName" /&gt;</ph> property of the element found.</source>
          <target state="translated">찾은 요소의 <ph id="ph1">&lt;see langword="LocalName" /&gt;</ph> 속성과 일치하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)">
          <source>The string to match against the <ph id="ph1">&lt;see langword="NamespaceURI" /&gt;</ph> property of the element found.</source>
          <target state="translated">찾은 요소의 <ph id="ph1">&lt;see langword="NamespaceURI" /&gt;</ph> 속성과 일치하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)">
          <source>Calls <ph id="ph1">&lt;see cref="M:System.Xml.XmlReader.MoveToContent" /&gt;</ph> and tests if the current content node is a start tag or empty element tag and if the <ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.LocalName" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Xml.XmlReader.NamespaceURI" /&gt;</ph> properties of the element found match the given strings.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Xml.XmlReader.MoveToContent" /&gt;</ph>를 호출하고 현재 콘텐츠 노드가 시작 태그 또는 빈 요소 태그인지 여부와 찾은 요소의 <ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.LocalName" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="P:System.Xml.XmlReader.NamespaceURI" /&gt;</ph> 속성이 지정된 인수와 일치하는지 여부를 테스트합니다.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the resulting node is an element.</source>
          <target state="translated">테스트한 결과 현재 노드가 요소이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고,</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if a node type other than <ph id="ph2">&lt;see langword="XmlNodeType.Element" /&gt;</ph> was found or if the <ph id="ph3">&lt;see langword="LocalName" /&gt;</ph> and <ph id="ph4">&lt;see langword="NamespaceURI" /&gt;</ph> properties of the element do not match the specified strings.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph> 이외의 노드 형식을 찾거나 요소의 <ph id="ph2">&lt;see langword="XmlNodeType.Element" /&gt;</ph> 및 <ph id="ph3">&lt;see langword="LocalName" /&gt;</ph> 속성이 지정된 문자열과 일치하지 않으면 <ph id="ph4">&lt;see langword="NamespaceURI" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)">
          <source>This method skips white space, comments, and processing instructions until the reader is positioned on a content node.</source>
          <target state="translated">공백, 주석 및 처리 명령 콘텐츠 노드에 판독기가 배치 될 때까지이 메서드는 건너뜁니다.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)">
          <source>The method then tests if the current node is an element.</source>
          <target state="translated">메서드 다음 현재 노드가 요소 인지 테스트 합니다.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)">
          <source>Incorrect XML is encountered in the input stream.</source>
          <target state="translated">입력 스트림에 잘못된 XML이 있는 경우</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message “An asynchronous operation is already in progress.”</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>When overridden in a derived class, gets the value of the attribute.</source>
          <target state="translated">파생 클래스에서 재정의되면 특성의 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Item(System.Int32)">
          <source>The index of the attribute.</source>
          <target state="translated">특성의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Item(System.Int32)">
          <source>When overridden in a derived class, gets the value of the attribute with the specified index.</source>
          <target state="translated">파생 클래스에서 재정의되면 지정된 인덱스가 있는 특성의 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Item(System.Int32)">
          <source>The value of the specified attribute.</source>
          <target state="translated">지정된 특성의 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Item(System.Int32)">
          <source>This property does not move the reader.</source>
          <target state="translated">이 속성에서 판독기를 이동 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Item(System.Int32)">
          <source>The following example displays all attributes on the current node.</source>
          <target state="translated">다음 예에서는 현재 노드의 모든 특성을 표시합니다.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Item(System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Item(System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Item(System.String)">
          <source>The qualified name of the attribute.</source>
          <target state="translated">특성의 정규화된 이름입니다.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Item(System.String)">
          <source>When overridden in a derived class, gets the value of the attribute with the specified <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.Name" /&gt;</ph>.</source>
          <target state="translated">파생 클래스에서 재정의되면 지정된 <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.Name" /&gt;</ph>이 있는 특성의 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Item(System.String)">
          <source>The value of the specified attribute.</source>
          <target state="translated">지정된 특성의 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Item(System.String)">
          <source>If the attribute is not found, <ph id="ph1">&lt;see langword="null" /&gt;</ph> is returned.</source>
          <target state="translated">특성이 없으면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이 반환됩니다.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Item(System.String)">
          <source>This property does not move the reader.</source>
          <target state="translated">이 속성에서 판독기를 이동 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Item(System.String)">
          <source>If the reader is positioned on a <ph id="ph1">`DocumentType`</ph> node, this method can be used to get the PUBLIC and SYSTEM literals, for example, <ph id="ph2">`reader["PUBLIC"]`</ph></source>
          <target state="translated">판독기가 배치 되 면는 <ph id="ph1">`DocumentType`</ph> 노드를이 메서드는 PUBLIC 및 시스템 리터럴, 예를 들어, 가져오는 데 사용할 수 있습니다 <ph id="ph2">`reader["PUBLIC"]`</ph></target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Item(System.String)">
          <source>The following example gets the value of the ISBN attribute.</source>
          <target state="translated">다음 예제에서는 ISBN 특성의 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Item(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Item(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Item(System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">특성의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Item(System.String,System.String)">
          <source>The namespace URI of the attribute.</source>
          <target state="translated">특성의 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Item(System.String,System.String)">
          <source>When overridden in a derived class, gets the value of the attribute with the specified <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.LocalName" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NamespaceURI" /&gt;</ph>.</source>
          <target state="translated">파생 클래스에서 재정의되면 지정된 <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.LocalName" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NamespaceURI" /&gt;</ph>가 있는 특성의 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Item(System.String,System.String)">
          <source>The value of the specified attribute.</source>
          <target state="translated">지정된 특성의 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Item(System.String,System.String)">
          <source>If the attribute is not found, <ph id="ph1">&lt;see langword="null" /&gt;</ph> is returned.</source>
          <target state="translated">특성이 없으면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이 반환됩니다.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Item(System.String,System.String)">
          <source>This property does not move the reader.</source>
          <target state="translated">이 속성에서 판독기를 이동 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Item(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Item(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.LocalName">
          <source>When overridden in a derived class, gets the local name of the current node.</source>
          <target state="translated">파생 클래스에서 재정의되면 현재 노드의 로컬 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.LocalName">
          <source>The name of the current node with the prefix removed.</source>
          <target state="translated">접두사를 제거한 현재 노드의 이름입니다.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.LocalName">
          <source>For example, <ph id="ph1">&lt;see langword="LocalName" /&gt;</ph> is <ph id="ph2">&lt;see langword="book" /&gt;</ph> for the element <bpt id="p1">&lt;c&gt;</bpt><ph id="ph3">&amp;lt;</ph>bk:book<ph id="ph4">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">예를 들어 <ph id="ph1">&lt;see langword="LocalName" /&gt;</ph> 은 <ph id="ph2">&lt;see langword="book" /&gt;</ph> 요소에 대해 <bpt id="p1">&lt;c&gt;</bpt> <ph id="ph3">&amp;lt;</ph>예<ph id="ph4">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.LocalName">
          <source>For node types that do not have a name (like <ph id="ph1">&lt;see langword="Text" /&gt;</ph>, <ph id="ph2">&lt;see langword="Comment" /&gt;</ph>, and so on), this property returns <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated">이름이 없는 노드 형식(예: <ph id="ph1">&lt;see langword="Text" /&gt;</ph>, <ph id="ph2">&lt;see langword="Comment" /&gt;</ph> 등)의 경우 이 속성은 <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.LocalName">
          <source>The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</source>
          <target state="translated">다음 예제에서는 각 노드의 로컬 이름을 표시 하 고, 있는 경우, 접두사 및 네임 스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.LocalName">
          <source>The example uses the file, book2.xml, as input.</source>
          <target state="translated">이 예제에서는 입력으로 book2.xml, 파일을 사용합니다.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.LocalName">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.LocalName">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.LookupNamespace(System.String)">
          <source>The prefix whose namespace URI you want to resolve.</source>
          <target state="translated">확인할 네임스페이스 URI의 접두사입니다.</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.LookupNamespace(System.String)">
          <source>To match the default namespace, pass an empty string.</source>
          <target state="translated">기본 네임스페이스와 일치시키려면 빈 문자열을 전달합니다.</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.LookupNamespace(System.String)">
          <source>When overridden in a derived class, resolves a namespace prefix in the current element's scope.</source>
          <target state="translated">파생 클래스에서 재정의되면 현재 요소의 범위에서 네임스페이스 접두사를 확인합니다.</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.LookupNamespace(System.String)">
          <source>The namespace URI to which the prefix maps or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no matching prefix is found.</source>
          <target state="translated">접두사가 매핑되는 네임스페이스 URI이거나 일치하는 접두사가 없는 경우 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.LookupNamespace(System.String)">
          <source>In the following XML string, if the reader is positioned on the <ph id="ph1">`href`</ph> attribute, the prefix <ph id="ph2">`a`</ph> is resolved by calling <ph id="ph3">`reader.LookupNamespace("a")`</ph>.</source>
          <target state="translated">판독기가 배치 되 면 다음 XML 문자열에는 <ph id="ph1">`href`</ph> 특성을 접두사 <ph id="ph2">`a`</ph> 호출 하 여 확인 <ph id="ph3">`reader.LookupNamespace("a")`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.LookupNamespace(System.String)">
          <source>The returned string is <ph id="ph1">`urn:456`</ph>.</source>
          <target state="translated">반환 된 문자열은 <ph id="ph1">`urn:456`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.LookupNamespace(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.LookupNamespace(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message “An asynchronous operation is already in progress.”</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>When overridden in a derived class, moves to the specified attribute.</source>
          <target state="translated">파생 클래스에서 재정의되면 지정된 특성으로 이동합니다.</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToAttribute(System.Int32)">
          <source>The index of the attribute.</source>
          <target state="translated">특성의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToAttribute(System.Int32)">
          <source>When overridden in a derived class, moves to the attribute with the specified index.</source>
          <target state="translated">파생 클래스에서 재정의되면 지정된 인덱스가 있는 특성으로 이동합니다.</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.MoveToAttribute(System.Int32)">
          <source>The following example displays all attributes on the current node.</source>
          <target state="translated">다음 예에서는 현재 노드의 모든 특성을 표시합니다.</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToAttribute(System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToAttribute(System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToAttribute(System.Int32)">
          <source>The parameter has a negative value.</source>
          <target state="translated">매개 변수에 음수 값이 있습니다.</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToAttribute(System.String)">
          <source>The qualified name of the attribute.</source>
          <target state="translated">특성의 정규화된 이름입니다.</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToAttribute(System.String)">
          <source>When overridden in a derived class, moves to the attribute with the specified <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.Name" /&gt;</ph>.</source>
          <target state="translated">파생 클래스에서 재정의되면 지정된 <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.Name" /&gt;</ph>이 있는 특성으로 이동합니다.</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToAttribute(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the attribute is found; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">특성이 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToAttribute(System.String)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, the reader's position does not change.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph>이면, 판독기의 위치는 변경되지 않습니다.</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.MoveToAttribute(System.String)">
          <source>After calling <ph id="ph1">`MoveToAttribute`</ph>, the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Name%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlReader.NamespaceURI%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Xml.XmlReader.Prefix%2A&gt;</ph> properties reflect the properties of that attribute.</source>
          <target state="translated">호출한 후 <ph id="ph1">`MoveToAttribute`</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlReader.Name%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlReader.NamespaceURI%2A&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Prefix%2A&gt;</ph> 속성 해당 특성의 속성을 반영 합니다.</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToAttribute(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToAttribute(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToAttribute(System.String)">
          <source>The parameter is an empty string.</source>
          <target state="translated">매개 변수가 빈 문자열인 경우</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToAttribute(System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">특성의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToAttribute(System.String,System.String)">
          <source>The namespace URI of the attribute.</source>
          <target state="translated">특성의 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToAttribute(System.String,System.String)">
          <source>When overridden in a derived class, moves to the attribute with the specified <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.LocalName" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NamespaceURI" /&gt;</ph>.</source>
          <target state="translated">파생 클래스에서 재정의되면 지정된 <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.LocalName" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NamespaceURI" /&gt;</ph>가 있는 특성으로 이동합니다.</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToAttribute(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the attribute is found; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">특성이 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToAttribute(System.String,System.String)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, the reader's position does not change.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph>이면, 판독기의 위치는 변경되지 않습니다.</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.MoveToAttribute(System.String,System.String)">
          <source>After calling <ph id="ph1">`MoveToAttribute`</ph>, the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Name%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlReader.NamespaceURI%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Xml.XmlReader.Prefix%2A&gt;</ph> properties reflect the properties of that attribute.</source>
          <target state="translated">호출한 후 <ph id="ph1">`MoveToAttribute`</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlReader.Name%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlReader.NamespaceURI%2A&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Prefix%2A&gt;</ph> 속성 해당 특성의 속성을 반영 합니다.</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToAttribute(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToAttribute(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToAttribute(System.String,System.String)">
          <source>Both parameter values are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">두 매개 변수 값이 모두 <ph id="ph1">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToContent">
          <source>Checks whether the current node is a content (non-white space text, <ph id="ph1">&lt;see langword="CDATA" /&gt;</ph>, <ph id="ph2">&lt;see langword="Element" /&gt;</ph>, <ph id="ph3">&lt;see langword="EndElement" /&gt;</ph>, <ph id="ph4">&lt;see langword="EntityReference" /&gt;</ph>, or <ph id="ph5">&lt;see langword="EndEntity" /&gt;</ph>) node.</source>
          <target state="translated">현재 노드가 콘텐츠 노드(공백 없는 텍스트, <ph id="ph1">&lt;see langword="CDATA" /&gt;</ph>, <ph id="ph2">&lt;see langword="Element" /&gt;</ph>, <ph id="ph3">&lt;see langword="EndElement" /&gt;</ph>, <ph id="ph4">&lt;see langword="EntityReference" /&gt;</ph> 또는 <ph id="ph5">&lt;see langword="EndEntity" /&gt;</ph>)인지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToContent">
          <source>If the node is not a content node, the reader skips ahead to the next content node or end of file.</source>
          <target state="translated">해당 노드가 콘텐츠 노드가 아니면 판독기는 다음 콘텐츠 노드나 파일의 끝으로 건너뜁니다.</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToContent">
          <source>It skips over nodes of the following type: <ph id="ph1">&lt;see langword="ProcessingInstruction" /&gt;</ph>, <ph id="ph2">&lt;see langword="DocumentType" /&gt;</ph>, <ph id="ph3">&lt;see langword="Comment" /&gt;</ph>, <ph id="ph4">&lt;see langword="Whitespace" /&gt;</ph>, or <ph id="ph5">&lt;see langword="SignificantWhitespace" /&gt;</ph>.</source>
          <target state="translated">판독기는 <ph id="ph1">&lt;see langword="ProcessingInstruction" /&gt;</ph>, <ph id="ph2">&lt;see langword="DocumentType" /&gt;</ph>, <ph id="ph3">&lt;see langword="Comment" /&gt;</ph>, <ph id="ph4">&lt;see langword="Whitespace" /&gt;</ph> 또는 <ph id="ph5">&lt;see langword="SignificantWhitespace" /&gt;</ph> 같은 형식의 노드를 건너뜁니다.</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToContent">
          <source>The <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.NodeType" /&gt;</ph> of the current node found by the method or <ph id="ph2">&lt;see langword="XmlNodeType.None" /&gt;</ph> if the reader has reached the end of the input stream.</source>
          <target state="translated">메서드를 사용하여 찾은 현재 노드의 <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.NodeType" /&gt;</ph>이거나 판독기가 입력 스트림의 끝에 도달한 경우에는 <ph id="ph2">&lt;see langword="XmlNodeType.None" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.MoveToContent">
          <source>If the current node is an attribute node, this method moves the reader back to the element that owns the attribute.</source>
          <target state="translated">현재 노드가 특성 노드의 경우이 메서드 판독기로 다시 이동 특성이 있는 요소입니다.</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.MoveToContent">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToContentAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToContentAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.MoveToContent">
          <source>This is useful when you want to write code that can skip over random XML markup without breaking.</source>
          <target state="translated">중단 하지 않고 임의의 XML 태그를 건너뛸 수 있는 코드를 작성 하려는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.MoveToContent">
          <source>For example, suppose you have the following code:</source>
          <target state="translated">예를 들어 다음 코드를 있다고 가정 합니다.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.MoveToContent">
          <source>This code can handle the following inputs without breaking:</source>
          <target state="translated">이 코드를 중단 하지 않고 다음과 같은 입력을 처리 합니다.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.MoveToContent">
          <source>and</source>
          <target state="translated">를 갖는</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.MoveToContent">
          <source>and</source>
          <target state="translated">를 갖는</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.MoveToContent">
          <source>and</source>
          <target state="translated">를 갖는</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToContent">
          <source>Incorrect XML encountered in the input stream.</source>
          <target state="translated">입력 스트림에 잘못된 XML이 있는 경우</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToContent">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToContent">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToContentAsync">
          <source>Asynchronously checks whether the current node is a content node.</source>
          <target state="translated">현재 노드가 콘텐츠 노드인지를 비동기적으로 확인합니다.</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToContentAsync">
          <source>If the node is not a content node, the reader skips ahead to the next content node or end of file.</source>
          <target state="translated">해당 노드가 콘텐츠 노드가 아니면 판독기는 다음 콘텐츠 노드나 파일의 끝으로 건너뜁니다.</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToContentAsync">
          <source>The <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.NodeType" /&gt;</ph> of the current node found by the method or <ph id="ph2">&lt;see langword="XmlNodeType.None" /&gt;</ph> if the reader has reached the end of the input stream.</source>
          <target state="translated">메서드를 사용하여 찾은 현재 노드의 <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.NodeType" /&gt;</ph>이거나 판독기가 입력 스트림의 끝에 도달한 경우에는 <ph id="ph2">&lt;see langword="XmlNodeType.None" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.MoveToContentAsync">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToContent%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToContent%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.MoveToContentAsync">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToContentAsync">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToContentAsync">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 “비동기 메서드를 사용하려면 XmlReaderSettings.Async를 true로 설정하세요.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToElement">
          <source>When overridden in a derived class, moves to the element that contains the current attribute node.</source>
          <target state="translated">파생 클래스에서 재정의되면 현재 특성 노드를 포함하는 요소로 이동합니다.</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToElement">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the reader is positioned on an attribute (the reader moves to the element that owns the attribute); <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the reader is not positioned on an attribute (the position of the reader does not change).</source>
          <target state="translated">판독기가 특성에 있으면(특성이 있는 요소로 판독기가 이동하면) <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 판독기가 특성에 없으면(판독기의 위치가 바뀌지 않으면) <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.MoveToElement">
          <source>Use this method to return to an element after navigating through its attributes.</source>
          <target state="translated">이 메서드를 사용 하 여 특성을 탐색 한 후 요소 돌아갑니다.</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.MoveToElement">
          <source>This method moves the reader to one of the following node types: <ph id="ph1">`Element`</ph>, <ph id="ph2">`DocumentType`</ph>, or <ph id="ph3">`XmlDeclaration`</ph>.</source>
          <target state="translated">이 메서드는 다음과 같은 노드 유형 중 하나에 판독기를 이동: <ph id="ph1">`Element`</ph>, <ph id="ph2">`DocumentType`</ph>, 또는 <ph id="ph3">`XmlDeclaration`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.MoveToElement">
          <source>The following example displays all attributes on the current node.</source>
          <target state="translated">다음 예에서는 현재 노드의 모든 특성을 표시합니다.</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToElement">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToElement">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToFirstAttribute">
          <source>When overridden in a derived class, moves to the first attribute.</source>
          <target state="translated">파생 클래스에서 재정의되면 첫 번째 특성으로 이동합니다.</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToFirstAttribute">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if an attribute exists (the reader moves to the first attribute); otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph> (the position of the reader does not change).</source>
          <target state="translated">특성이 있으면(판독기가 첫 번째 특성으로 이동하면) <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면(판독기의 위치가 바뀌지 않으면) <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.MoveToFirstAttribute">
          <source>The following example gets the value of the first attribute.</source>
          <target state="translated">다음 예제에서는 첫 번째 특성의 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToFirstAttribute">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToFirstAttribute">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToNextAttribute">
          <source>When overridden in a derived class, moves to the next attribute.</source>
          <target state="translated">파생 클래스에서 재정의되면 다음 특성으로 이동합니다.</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToNextAttribute">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if there is a next attribute; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if there are no more attributes.</source>
          <target state="translated">다음 특성이 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 더 이상 특성이 없으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.MoveToNextAttribute">
          <source>If the current node is an element node, this method is equivalent to <ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToFirstAttribute%2A&gt;</ph>.</source>
          <target state="translated">현재 노드가 요소 노드 이면이 메서드는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToFirstAttribute%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.MoveToNextAttribute">
          <source>If <ph id="ph1">`MoveToNextAttribute`</ph> returns <ph id="ph2">`true`</ph>, the reader moves to the next attribute; otherwise, the position of the reader does not change.</source>
          <target state="translated">경우 <ph id="ph1">`MoveToNextAttribute`</ph> 반환 <ph id="ph2">`true`</ph>, 판독기가 다음 특성으로 이동, 그렇지 않으면 판독기의 위치가 변경 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.MoveToNextAttribute">
          <source>The following example displays all attributes on the current node.</source>
          <target state="translated">다음 예에서는 현재 노드의 모든 특성을 표시합니다.</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToNextAttribute">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToNextAttribute">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Name">
          <source>When overridden in a derived class, gets the qualified name of the current node.</source>
          <target state="translated">파생 클래스에서 재정의되면 현재 노드의 정규화된 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Name">
          <source>The qualified name of the current node.</source>
          <target state="translated">현재 노드의 정규화된 이름입니다.</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Name">
          <source>For example, <ph id="ph1">&lt;see langword="Name" /&gt;</ph> is <ph id="ph2">&lt;see langword="bk:book" /&gt;</ph> for the element <bpt id="p1">&lt;c&gt;</bpt><ph id="ph3">&amp;lt;</ph>bk:book<ph id="ph4">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">예를 들어 <ph id="ph1">&lt;see langword="Name" /&gt;</ph> 은 <ph id="ph2">&lt;see langword="bk:book" /&gt;</ph> 요소에 대해 <bpt id="p1">&lt;c&gt;</bpt> <ph id="ph3">&amp;lt;</ph>예<ph id="ph4">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Name">
          <source>The name returned is dependent on the <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.NodeType" /&gt;</ph> of the node.</source>
          <target state="translated">반환되는 이름은 다음과 같이 노드의 <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.NodeType" /&gt;</ph>에 따라 달라집니다.</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Name">
          <source>The following node types return the listed values.</source>
          <target state="translated">다음 노드 형식은 나열된 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Name">
          <source>All other node types return an empty string.</source>
          <target state="translated">기타 모든 노드 형식은 빈 문자열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Name">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Node type</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 노드 형식</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Name">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Name</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이름</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Name">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Attribute" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The name of the attribute.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Attribute" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 특성의 이름입니다.</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Name">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="DocumentType" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The document type name.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="DocumentType" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 문서 종류 이름입니다.</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Name">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Element" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The tag name.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Element" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 태그 이름입니다.</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Name">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="EntityReference" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The name of the entity referenced.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="EntityReference" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 참조 엔터티의 이름입니다.</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Name">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="ProcessingInstruction" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The target of the processing instruction.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="ProcessingInstruction" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 처리 명령의 대상입니다.</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Name">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="XmlDeclaration" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The literal string <ph id="ph6">&lt;see langword="xml" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="XmlDeclaration" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 리터럴 문자열 <ph id="ph6">&lt;see langword="xml" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Name">
          <source>The following example reads an XML file and displays each of the nodes.</source>
          <target state="translated">다음 예제에서는 XML 파일을 읽고 각 노드를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Name">
          <source>The sample uses the <ph id="ph1">`items.xml`</ph> file.</source>
          <target state="translated">이 샘플에서는 사용 된 <ph id="ph1">`items.xml`</ph> 파일입니다.</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Name">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Name">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.NamespaceURI">
          <source>When overridden in a derived class, gets the namespace URI (as defined in the W3C Namespace specification) of the node on which the reader is positioned.</source>
          <target state="translated">파생 클래스에서 재정의되면 판독기가 배치된 노드의 네임스페이스 URI를 W3C 네임스페이스 사양에 정의된 대로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.NamespaceURI">
          <source>The namespace URI of the current node; otherwise an empty string.</source>
          <target state="translated">현재 노드의 네임스페이스 URI이거나 빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.NamespaceURI">
          <source>This property is relevant to <ph id="ph1">`Element`</ph> and <ph id="ph2">`Attribute`</ph> nodes only.</source>
          <target state="translated">이 속성은 관련이 <ph id="ph1">`Element`</ph> 및 <ph id="ph2">`Attribute`</ph> 노드만 해당 합니다.</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.NamespaceURI">
          <source>The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</source>
          <target state="translated">다음 예제에서는 각 노드의 로컬 이름을 표시 하 고, 있는 경우, 접두사 및 네임 스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.NamespaceURI">
          <source>The example uses the file, book2.xml, as input.</source>
          <target state="translated">이 예제에서는 입력으로 book2.xml, 파일을 사용합니다.</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.NamespaceURI">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.NamespaceURI">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.NameTable">
          <source>When overridden in a derived class, gets the <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> associated with this implementation.</source>
          <target state="translated">파생 클래스에서 재정의되면 이 구현과 관련된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph>을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.NameTable">
          <source>The <ph id="ph1">&lt;see langword="XmlNameTable" /&gt;</ph> enabling you to get the atomized version of a string within the node.</source>
          <target state="translated">노드 내에 있는 문자열의 원자화된 버전을 가져올 수 있도록 하는 <ph id="ph1">&lt;see langword="XmlNameTable" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.NameTable">
          <source>All node and attribute names returned from <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> are atomized using the <ph id="ph2">`NameTable`</ph>.</source>
          <target state="translated">반환 된 모든 노드 및 특성 이름은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 사용해 원자화는 <ph id="ph2">`NameTable`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.NameTable">
          <source>When the same name is returned multiple times (for example, <ph id="ph1">`Customer`</ph>), then the same <ph id="ph2">`String`</ph> object will be returned for that name.</source>
          <target state="translated">이름이 같은 여러 번에 반환 될 때 (예를 들어 <ph id="ph1">`Customer`</ph>), 다음 동일한 <ph id="ph2">`String`</ph> 해당 이름에 대 한 개체를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.NameTable">
          <source>This makes it possible for you to write efficient code that does object comparisons on these strings instead of expensive string comparisons.</source>
          <target state="translated">이렇게 하면 개체 비용이 많이 드는 문자열 비교 대신이 문자열에 대해 비교를 수행 하는 효율적인 코드를 작성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.NameTable">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.NameTable">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.NodeType">
          <source>When overridden in a derived class, gets the type of the current node.</source>
          <target state="translated">파생 클래스에서 재정의되면 현재 노드의 형식을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.NodeType">
          <source>One of the enumeration values that specify the type of the current node.</source>
          <target state="translated">현재 노드의 형식을 지정하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.NodeType">
          <source>The following example reads an XML file and displays each of the nodes.</source>
          <target state="translated">다음 예제에서는 XML 파일을 읽고 각 노드를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.NodeType">
          <source>The sample uses the <ph id="ph1">`items.xml`</ph> file.</source>
          <target state="translated">이 샘플에서는 사용 된 <ph id="ph1">`items.xml`</ph> 파일입니다.</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.NodeType">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.NodeType">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Prefix">
          <source>When overridden in a derived class, gets the namespace prefix associated with the current node.</source>
          <target state="translated">파생 클래스에서 재정의되면 현재 노드와 관련된 네임스페이스 접두사를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Prefix">
          <source>The namespace prefix associated with the current node.</source>
          <target state="translated">현재 노드와 관련된 네임스페이스 접두사입니다.</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Prefix">
          <source>The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</source>
          <target state="translated">다음 예제에서는 각 노드의 로컬 이름을 표시 하 고, 있는 경우, 접두사 및 네임 스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Prefix">
          <source>The example uses the file, book2.xml, as input.</source>
          <target state="translated">이 예제에서는 입력으로 book2.xml, 파일을 사용합니다.</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Prefix">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Prefix">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.QuoteChar">
          <source>When overridden in a derived class, gets the quotation mark character used to enclose the value of an attribute node.</source>
          <target state="translated">파생 클래스에서 재정의되면 특성 노드의 값을 묶는 데 사용되는 따옴표 문자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.QuoteChar">
          <source>The quotation mark character (" or ') used to enclose the value of an attribute node.</source>
          <target state="translated">특성 노드의 값을 묶을 때 사용하는 인용 부호 문자입니다.</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.QuoteChar">
          <source>This property applies only to an attribute node.</source>
          <target state="translated">특성 노드의 경우에이 속성이 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.QuoteChar">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.QuoteChar">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Read">
          <source>When overridden in a derived class, reads the next node from the stream.</source>
          <target state="translated">파생 클래스에서 재정의되면 스트림에서 다음 노드를 읽습니다.</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Read">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the next node was read successfully; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">서명을 읽었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Read">
          <source>When an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> is first created and initialized, there is no information available.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 처음 정보가 사용할 수 없는 만들어지고 초기화 합니다.</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Read">
          <source>You must call <ph id="ph1">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph> to read the first node.</source>
          <target state="translated">호출 해야 <ph id="ph1">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph> 첫 번째 노드를 읽을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Read">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph> method sets the state of the XML reader to initiate <ph id="ph2">&lt;xref:System.Xml.ReadState&gt;</ph> and moves through the XML file sequentially until it reaches the end of the file, at which point the method returns a value of <ph id="ph3">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph> 메서드 시작 하는 XML 판독기의 상태를 설정 <ph id="ph2">&lt;xref:System.Xml.ReadState&gt;</ph> 지점을 메서드는 값을 반환 하는 파일의 끝에 도달할 때까지 순서 대로 XML 파일을 통해 이동 하 고 <ph id="ph3">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Read">
          <source>This method requires at least four bytes from the data stream in order to begin parsing.</source>
          <target state="translated">이 메서드는 구문 분석을 시작 하기 위해 데이터 스트림에서 4 바이트 이상 필요 합니다.</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Read">
          <source>If fewer than four bytes are returned and there is no more data in the stream, the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">메서드가 반환 하는 4 바이트 미만 반환 되 고 스트림에서 더 이상 데이터, <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Read">
          <source>If there is more data in the stream, the method will block parsing until receipt of the fourth byte.</source>
          <target state="translated">스트림의 데이터가 더 경우 메서드는 네 번째 바이트가 수신 될 때까지 구문 분석 차단 됩니다.</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Read">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Read">
          <source>The following example reads an XML file and displays each of the nodes.</source>
          <target state="translated">다음 예제에서는 XML 파일을 읽고 각 노드를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Read">
          <source>The sample uses the <ph id="ph1">`items.xml`</ph> file.</source>
          <target state="translated">이 샘플에서는 사용 된 <ph id="ph1">`items.xml`</ph> 파일입니다.</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Read">
          <source><bpt id="p1">**</bpt>Output:<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>출력:<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Read">
          <source>An error occurred while parsing the XML.</source>
          <target state="translated">XML을 구문 분석하는 동안 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Read">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Read">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadAsync">
          <source>Asynchronously reads the next node from the stream.</source>
          <target state="translated">스트림에서 다음 노드를 비동기적으로 읽습니다.</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadAsync">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the next node was read successfully; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if there are no more nodes to read.</source>
          <target state="translated">다음 노드를 읽었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 더 이상 읽을 노드가 없으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadAsync">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadAsync">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadAsync">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadAsync">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 “비동기 메서드를 사용하려면 XmlReaderSettings.Async를 true로 설정하세요.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadAttributeValue">
          <source>When overridden in a derived class, parses the attribute value into one or more <ph id="ph1">&lt;see langword="Text" /&gt;</ph>, <ph id="ph2">&lt;see langword="EntityReference" /&gt;</ph>, or <ph id="ph3">&lt;see langword="EndEntity" /&gt;</ph> nodes.</source>
          <target state="translated">파생 클래스에서 재정의되면 하나 이상의 <ph id="ph1">&lt;see langword="Text" /&gt;</ph>, <ph id="ph2">&lt;see langword="EntityReference" /&gt;</ph> 또는 <ph id="ph3">&lt;see langword="EndEntity" /&gt;</ph> 노드로 특성 값을 구문 분석합니다.</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadAttributeValue">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if there are nodes to return.</source>
          <target state="translated">반환할 노드가 있는 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadAttributeValue">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.</source>
          <target state="translated">처음 호출할 때 판독기가 특성 노드에 있거나 모든 특성 값을 읽은 경우 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadAttributeValue">
          <source>An empty attribute, such as, <bpt id="p1">&lt;c&gt;</bpt>misc=""<ept id="p1">&lt;/c&gt;</ept>, returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> with a single node with a value of <ph id="ph2">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>misc=""<ept id="p1">&lt;/c&gt;</ept>와 같은 빈 특성은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>를 반환하며 이것은 단일 노드가 <ph id="ph2">&lt;see langword="String.Empty" /&gt;</ph>의 값을 갖는 것을 의미합니다.</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadAttributeValue">
          <source>Use this method after calling <ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToAttribute%2A&gt;</ph> to read through the text or entity reference nodes that make up the attribute value.</source>
          <target state="translated">이 메서드를 사용 하 여 호출한 후 <ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToAttribute%2A&gt;</ph> 특성 값을 구성 하는 텍스트 또는 엔터티 참조 노드를 읽을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadAttributeValue">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader.Depth%2A&gt;</ph> of the attribute value nodes is one plus the depth of the attribute node; it increments and decrements by one when you step into and out of general entity references.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.Depth%2A&gt;</ph> 특성 값 노드 1을 더한 특성 노드의 깊이 이며 수를 늘리면 내부 / 외부로 일반 엔터티 참조를 단계별로 실행할 때 1 씩 감소 시킵니다.</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadAttributeValue">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadAttributeValue">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The type of the value to be returned.</source>
          <target state="translated">반환될 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> With the release of the .NET Framework 3.5, the value of the <bpt id="p2">&lt;c&gt;</bpt>returnType<ept id="p2">&lt;/c&gt;</ept> parameter can now be the <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> type.</source>
          <target state="translated"><bpt id="p1">**</bpt>참고<ept id="p1">**</ept> .NET Framework 3.5 릴리스에서는 <bpt id="p2">&lt;c&gt;</bpt>returnType<ept id="p2">&lt;/c&gt;</ept> 매개 변수 값이 <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> 형식이 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> object that is used to resolve any namespace prefixes related to type conversion.</source>
          <target state="translated">형식 변환과 관련된 모든 네임스페이스 접두사를 확인하는 <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>For example, this can be used when converting an <ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> object to an <bpt id="p1">&lt;c&gt;</bpt>xs:string<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">예를 들어, <ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> 개체를 <bpt id="p1">&lt;c&gt;</bpt>xs:string<ept id="p1">&lt;/c&gt;</ept>으로 변환할 때 이 개체를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>This value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>Reads the content as an object of the type specified.</source>
          <target state="translated">지정한 형식의 개체로 콘텐츠를 읽습니다.</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The concatenated text content or attribute value converted to the requested type.</source>
          <target state="translated">요청된 형식으로 변환된 특성 값 또는 연결된 텍스트 콘텐츠입니다.</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>This method reads the text content at the current reader position and converts it to the requested return type.</source>
          <target state="translated">이 메서드는 현재 판독기 위치의 텍스트 콘텐츠 요청된 반환 형식으로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>Text, white space, significant white space and CDATA sections are concatenated.</source>
          <target state="translated">텍스트, 공백, 유효 공백 및 CDATA 섹션이 연결됩니다.</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>Comments and processing instructions are skipped and entity references are automatically resolved.</source>
          <target state="translated">주석 및 처리 명령은 건너뛰고 엔터티 참조는 자동으로 확인됩니다.</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>This method is used to read, convert if necessary, and return atomic value items from the current node content.</source>
          <target state="translated">이 메서드는을 읽고, 필요한 경우 변환 현재 노드에서 원자 값 항목을 콘텐츠 반환 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>If the input type is a valid mappings for the type of the current node then an instance of the target type containing the value of the current node is returned.</source>
          <target state="translated">입력된 유형은 현재 노드의 값을 포함 하는 대상 형식 인스턴스가 현재 노드의 형식에 대 한 올바른 매핑에 대해서는 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>See the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> referencepage for a list of the default mappings.</source>
          <target state="translated">주의 섹션을 참조는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> referencepage 기본 매핑의 목록에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>For example, if you had the following XML text:</source>
          <target state="translated">예를 들어, 다음 XML 텍스트를 설치한 경우:</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>If the data is typed and a string array is supplied to the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAs%2A&gt;</ph> method call, then the integer values are converted from strings according to the list of valid CLR type mappings.</source>
          <target state="translated">데이터를 입력 하 고 문자열 배열에 제공 되는 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAs%2A&gt;</ph> 메서드 호출이 한 정수 값의 유효한 CLR 형식 매핑 목록에 따라 문자열에서 변환 됩니다.</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>If the data is untyped and a string array is supplied to the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAs%2A&gt;</ph> method call, then the content is parsed into separate strings.</source>
          <target state="translated">데이터 형식화 되지 않은 경우 및 문자열 배열에 제공 되는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAs%2A&gt;</ph> 메서드 호출을 별도 문자열로 콘텐츠 구문 분석 됩니다.</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>An array containing two strings is returned with the values "123" and "456".</source>
          <target state="translated">두 문자열을 포함 하는 배열 "123" 및 "456" 값으로 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The spaces are not preserved from the content.</source>
          <target state="translated">콘텐츠에서 공백은 유지 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>In general when reading untyped data the content is parsed according to the supplied type.</source>
          <target state="translated">형식화 되지 않은 데이터를 읽을 때 일반적 콘텐츠가 제공 된 형식에 따라 구문 분석 됩니다.</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>For example, if an integer array is supplied to the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAs%2A&gt;</ph> method call then the string is parsed into an array of integers <ph id="ph2">{123,456}</ph>.</source>
          <target state="translated">예를 들어, 정수 배열에 제공 되는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAs%2A&gt;</ph> 정수의 배열 요소로 문자열 구문 분석은 메서드 호출 <ph id="ph2">{123,456}</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>In the following example the XML text is not separated by spaces</source>
          <target state="translated">다음 예에서 XML 텍스트는 공백으로 구분 되지</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>If the content is untyped and a string array is supplied to the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAs%2A&gt;</ph> method call then an array containing one concatenated string is returned with the value "123456789".</source>
          <target state="translated">콘텐츠 형식화 되지 않은 경우 및 문자열 배열에 제공 되는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAs%2A&gt;</ph> 메서드 호출 연결 된 문자열 값 "123456789"와 함께 반환 되는지 하나를 포함 하는 배열입니다.</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The following table describes how this method treats each node type.</source>
          <target state="translated">다음 표에서이 메서드는 각 노드 유형에 처리 하는 방법을 설명 합니다.</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>XmlNodeType</source>
          <target state="translated">XmlNodeType</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>Return value</source>
          <target state="translated">반환 값</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>Reader behavior</source>
          <target state="translated">판독기 동작</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</source>
          <target state="translated">요청한 형식으로 변환된 텍스트, CDATA, 공백 및 유효 공백 노드가 연결된 내용</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>Moves to the next start element or end element tag.</source>
          <target state="translated">다음 시작 요소 또는 끝 요소 태그로 이동합니다.</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>Entity references are automatically expanded.</source>
          <target state="translated">엔터티 참조가 자동으로 확장됩니다.</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>Same as calling <ph id="ph1">`XmlConvert.ToXxx`</ph> on the attribute value.</source>
          <target state="translated">호출할 때와 동일한 <ph id="ph1">`XmlConvert.ToXxx`</ph> 특성 값에 있습니다.</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The reader remains in the current position.</source>
          <target state="translated">판독기는 현재 위치를 유지합니다.</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</source>
          <target state="translated">PI(처리 명령) 또는 주석을 무시하고 PI 또는 주석 다음에 연결된 텍스트 내용을 읽습니다.</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>Moves to the next start element or end element tag.</source>
          <target state="translated">다음 시작 요소 또는 끝 요소 태그로 이동합니다.</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>Entity references are automatically expanded.</source>
          <target state="translated">엔터티 참조가 자동으로 확장됩니다.</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>An empty string.</source>
          <target state="translated">빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The reader remains in the current position.</source>
          <target state="translated">판독기는 현재 위치를 유지합니다.</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>Undefined, although typically the reader remains in the current position.</source>
          <target state="translated">일반적으로 판독기가 현재 위치를 유지하지만 정의되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page and the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지 및 <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> 권장 구성 합니다.</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAs%2A&gt;</ph> method to return the contents of the colors element into an array of string objects.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAs%2A&gt;</ph> string 개체의 배열에 색 요소의 내용을 반환 하는 메서드.</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The example uses the <ph id="ph1">`dataFile_2.xml`</ph> file as input.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">`dataFile_2.xml`</ph> 파일을 입력으로 사용합니다.</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The content is not in the correct format for the target type.</source>
          <target state="translated">콘텐츠가 대상 형식에 맞지 않는 형식인 경우</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The attempted cast is not valid.</source>
          <target state="translated">시도된 캐스팅이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The <ph id="ph1">&lt;paramref name="returnType" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="returnType" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>Read <ph id="ph1">&lt;see langword="Decimal.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Decimal.MaxValue" /&gt;</ph>를 읽는 경우</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The type of the value to be returned.</source>
          <target state="translated">반환될 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> object that is used to resolve any namespace prefixes related to type conversion.</source>
          <target state="translated">형식 변환과 관련된 모든 네임스페이스 접두사를 확인하는 <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>Asynchronously reads the content as an object of the type specified.</source>
          <target state="translated">지정한 형식의 개체로 콘텐츠를 비동기적으로 읽습니다.</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The concatenated text content or attribute value converted to the requested type.</source>
          <target state="translated">요청된 형식으로 변환된 특성 값 또는 연결된 텍스트 콘텐츠입니다.</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAs%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAs%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 “비동기 메서드를 사용하려면 XmlReaderSettings.Async를 true로 설정하세요.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer into which to copy the resulting text.</source>
          <target state="translated">결과 텍스트를 복사해 넣을 버퍼입니다.</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This value cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the buffer where to start copying the result.</source>
          <target state="translated">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to copy into the buffer.</source>
          <target state="translated">버퍼에 복사할 최대 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The actual number of bytes copied is returned from this method.</source>
          <target state="translated">복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>Reads the content and returns the Base64 decoded binary bytes.</source>
          <target state="translated">콘텐츠를 읽고 Base64 디코딩된 이진 바이트를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes written to the buffer.</source>
          <target state="translated">버퍼에 쓴 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This method streams the content, decodes the <ph id="ph1">`Base64`</ph> content, and returns the decoded binary bytes (for example, an inline <ph id="ph2">`Base64`</ph> encoded GIF image) into the buffer.</source>
          <target state="translated">이 메서드는 콘텐츠를 스트리밍하는 <ph id="ph1">`Base64`</ph> content 및 디코딩된 이진 바이트를 반환 합니다 (예를 들어, 인라인 <ph id="ph2">`Base64`</ph> 인코딩된 GIF 이미지) 버퍼에 있습니다.</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This method can be called successively to read large streams of embedded text.</source>
          <target state="translated">이 메서드는 포함 된 텍스트의 큰 스트림을 읽도록 연속적으로 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>For more information, see RFC 1521, "MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies".</source>
          <target state="translated">자세한 내용은 RFC 1521을 참조 하십시오. "MIME (Multipurpose Internet Mail Extensions) 파트 1:를 지정 하 고 인터넷 메시지 본문의 형식을 설명 하는 메커니즘"입니다.</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>You can obtain RFCs from the <bpt id="p1">[</bpt>Request for Comments Web site<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=37119)</ept>.</source>
          <target state="translated">Rfc를 얻을 수는 <bpt id="p1">[</bpt>의견 웹 사이트에 대 한 요청<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=37119)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>You should not access any of the reader properties between calls to the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBase64%2A&gt;</ph> method until the method returns the value <ph id="ph2">`0`</ph>.</source>
          <target state="translated">에 대 한 호출 간의 판독기 속성을 액세스 하지 않아야는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBase64%2A&gt;</ph> 메서드는 메서드가 값을 반환할 때까지 <ph id="ph2">`0`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This method has the following behavior:</source>
          <target state="translated">이 메서드에 다음과 같은 동작이 있습니다.</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBase64%2A&gt;</ph> returns the value <ph id="ph2">`0`</ph> when it has reached the end of the byte stream it was operating on.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBase64%2A&gt;</ph> 값을 반환 <ph id="ph2">`0`</ph> 는 작업 중인 바이트 스트림 끝에 도달 하면 합니다.</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The reader is positioned on the first non-content node.</source>
          <target state="translated">첫 번째 비 콘텐츠 노드에 판독기가 있습니다.</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>If you ask for fewer, or the exact number of, bytes than are left in the stream the reader remains in its current position.</source>
          <target state="translated">요청 하는 경우 보다는 판독기의 현재 위치를 유지 하는 스트림에 남아 바이트의 수입니다.</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBase64%2A&gt;</ph> is not supported on the following XML node types: <ph id="ph2">`Element`</ph>, <ph id="ph3">`XmlDeclaration`</ph>, <ph id="ph4">`None`</ph>, <ph id="ph5">`Document`</ph>, <ph id="ph6">`DocumentType`</ph>, <ph id="ph7">`Notation`</ph>, <ph id="ph8">`Entity`</ph>, <ph id="ph9">`DocumentFragment`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBase64%2A&gt;</ph> 다음 XML 노드 형식에서 지원 되지 않습니다: <ph id="ph2">`Element`</ph>, <ph id="ph3">`XmlDeclaration`</ph>, <ph id="ph4">`None`</ph>, <ph id="ph5">`Document`</ph>, <ph id="ph6">`DocumentType`</ph>, <ph id="ph7">`Notation`</ph>, <ph id="ph8">`Entity`</ph>, <ph id="ph9">`DocumentFragment`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBase64Async%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBase64Async%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The index into the buffer or index + count is larger than the allocated buffer size.</source>
          <target state="translated">버퍼 내의 인덱스 또는 인덱스와 개수를 합한 값이 할당된 버퍼 크기보다 큰 경우</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> implementation does not support this method.</source>
          <target state="translated">구현된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>에서 이 메서드를 지원하지 않는 경우</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer into which to copy the resulting text.</source>
          <target state="translated">결과 텍스트를 복사해 넣을 버퍼입니다.</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>This value cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the buffer where to start copying the result.</source>
          <target state="translated">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to copy into the buffer.</source>
          <target state="translated">버퍼에 복사할 최대 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>The actual number of bytes copied is returned from this method.</source>
          <target state="translated">복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>Asynchronously reads the content and returns the Base64 decoded binary bytes.</source>
          <target state="translated">콘텐츠를 비동기적으로 읽고 Base64 디코딩된 이진 바이트를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes written to the buffer.</source>
          <target state="translated">버퍼에 쓴 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBase64%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBase64%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 “비동기 메서드를 사용하려면 XmlReaderSettings.Async를 true로 설정하세요.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer into which to copy the resulting text.</source>
          <target state="translated">결과 텍스트를 복사해 넣을 버퍼입니다.</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This value cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the buffer where to start copying the result.</source>
          <target state="translated">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to copy into the buffer.</source>
          <target state="translated">버퍼에 복사할 최대 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The actual number of bytes copied is returned from this method.</source>
          <target state="translated">복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>Reads the content and returns the <ph id="ph1">&lt;see langword="BinHex" /&gt;</ph> decoded binary bytes.</source>
          <target state="translated">콘텐츠를 읽고 <ph id="ph1">&lt;see langword="BinHex" /&gt;</ph> 디코딩된 이진 바이트를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes written to the buffer.</source>
          <target state="translated">버퍼에 쓴 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This method streams the content, decodes the <ph id="ph1">`BinHex`</ph> content, and returns the decoded binary bytes (for example, an inline <ph id="ph2">`BinHex`</ph> encoded GIF image) into the buffer.</source>
          <target state="translated">이 메서드는 콘텐츠를 스트리밍하는 <ph id="ph1">`BinHex`</ph> content 및 디코딩된 이진 바이트를 반환 합니다 (예를 들어, 인라인 <ph id="ph2">`BinHex`</ph> 인코딩된 GIF 이미지) 버퍼에 있습니다.</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This method can be called successively to read large streams of embedded text.</source>
          <target state="translated">이 메서드는 포함 된 텍스트의 큰 스트림을 읽도록 연속적으로 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>You should not access any of the reader properties between calls to the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBinHex%2A&gt;</ph> method until the method returns the value <ph id="ph2">`0`</ph>.</source>
          <target state="translated">에 대 한 호출 간의 판독기 속성을 액세스 하지 않아야는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBinHex%2A&gt;</ph> 메서드는 메서드가 값을 반환할 때까지 <ph id="ph2">`0`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This method has the following behavior:</source>
          <target state="translated">이 메서드에 다음과 같은 동작이 있습니다.</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBinHex%2A&gt;</ph> returns the value <ph id="ph2">`0`</ph> when it has reached the end of the byte stream it was operating on.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBinHex%2A&gt;</ph> 값을 반환 <ph id="ph2">`0`</ph> 는 작업 중인 바이트 스트림 끝에 도달 하면 합니다.</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The reader is positioned on the first non-content node.</source>
          <target state="translated">첫 번째 비 콘텐츠 노드에 판독기가 있습니다.</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>If you ask for fewer, or the exact number, of bytes than are left in the stream the reader remains in its current position.</source>
          <target state="translated">요청 하거나 정확한 개수의 바이트 남아 있는 것 보다는 스트림 판독기의 현재 위치에 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBinHex%2A&gt;</ph> is not supported on the following XML node types: <ph id="ph2">`Element`</ph>, <ph id="ph3">`XmlDeclaration`</ph>, <ph id="ph4">`None`</ph>, <ph id="ph5">`Document`</ph>, <ph id="ph6">`DocumentType`</ph>, <ph id="ph7">`Notation, Entity`</ph>, <ph id="ph8">`DocumentFragment`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBinHex%2A&gt;</ph> 다음 XML 노드 형식에서 지원 되지 않습니다: <ph id="ph2">`Element`</ph>, <ph id="ph3">`XmlDeclaration`</ph>, <ph id="ph4">`None`</ph>, <ph id="ph5">`Document`</ph>, <ph id="ph6">`DocumentType`</ph>, <ph id="ph7">`Notation, Entity`</ph>, <ph id="ph8">`DocumentFragment`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBinHexAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBinHexAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The index into the buffer or index + count is larger than the allocated buffer size.</source>
          <target state="translated">버퍼 내의 인덱스 또는 인덱스와 개수를 합한 값이 할당된 버퍼 크기보다 큰 경우</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> implementation does not support this method.</source>
          <target state="translated">구현된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>에서 이 메서드를 지원하지 않는 경우</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer into which to copy the resulting text.</source>
          <target state="translated">결과 텍스트를 복사해 넣을 버퍼입니다.</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>This value cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the buffer where to start copying the result.</source>
          <target state="translated">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to copy into the buffer.</source>
          <target state="translated">버퍼에 복사할 최대 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>The actual number of bytes copied is returned from this method.</source>
          <target state="translated">복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>Asynchronously reads the content and returns the <ph id="ph1">&lt;see langword="BinHex" /&gt;</ph> decoded binary bytes.</source>
          <target state="translated">콘텐츠를 비동기적으로 읽고 <ph id="ph1">&lt;see langword="BinHex" /&gt;</ph> 디코딩된 이진 바이트를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes written to the buffer.</source>
          <target state="translated">버퍼에 쓴 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBinHex%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBinHex%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 “비동기 메서드를 사용하려면 XmlReaderSettings.Async를 true로 설정하세요.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>Reads the text content at the current position as a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>.</source>
          <target state="translated">현재 위치의 텍스트 콘텐츠를 <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>으로 읽습니다.</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>The text content as a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> object.</source>
          <target state="translated">텍스트 콘텐츠에 해당하는 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</source>
          <target state="translated">이 메서드는 텍스트, 공백, 유효 공백 및 CDATA 섹션이 연결 하 고 설명 이나 처리 명령을 건너뜁니다.</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>Entity references are automatically resolved.</source>
          <target state="translated">엔터티 참조가 자동으로 해결 됩니다.</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>If the content is typed <ph id="ph1">`xsd:boolean`</ph>, the reader returns an unboxed <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> object.</source>
          <target state="translated">콘텐츠 형식이 경우 <ph id="ph1">`xsd:boolean`</ph>, 판독기는 unboxed 반환 <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>If the content is not typed <ph id="ph1">`xsd:boolean`</ph>, the reader attempts to convert it to a <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> object according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">콘텐츠 형식화 되지 않은 경우 <ph id="ph1">`xsd:boolean`</ph>, 판독기로 변환 하려고 시도 <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> 개체에 정의 된 규칙에 따라는 <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> 권장 합니다.</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>The following table describes how this method treats each node type.</source>
          <target state="translated">다음 표에서이 메서드는 각 노드 유형에 처리 하는 방법을 설명 합니다.</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>XmlNodeType</source>
          <target state="translated">XmlNodeType</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>Return value</source>
          <target state="translated">반환 값</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>Reader behavior</source>
          <target state="translated">판독기 동작</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</source>
          <target state="translated">요청한 형식으로 변환된 텍스트, CDATA, 공백 및 유효 공백 노드가 연결된 내용</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>Moves to the next start element or end element tag.</source>
          <target state="translated">다음 시작 요소 또는 끝 요소 태그로 이동합니다.</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>Entity references are automatically expanded.</source>
          <target state="translated">엔터티 참조가 자동으로 확장됩니다.</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>Same as calling <ph id="ph1">`XmlConvert.ToXxx`</ph> on the attribute value.</source>
          <target state="translated">호출할 때와 동일한 <ph id="ph1">`XmlConvert.ToXxx`</ph> 특성 값에 있습니다.</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>The reader remains in the current position.</source>
          <target state="translated">판독기는 현재 위치를 유지합니다.</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</source>
          <target state="translated">PI(처리 명령) 또는 주석을 무시하고 PI 또는 주석 다음에 연결된 텍스트 내용을 읽습니다.</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>Moves to the next start element or end element tag.</source>
          <target state="translated">다음 시작 요소 또는 끝 요소 태그로 이동합니다.</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>Entity references are automatically expanded.</source>
          <target state="translated">엔터티 참조가 자동으로 확장됩니다.</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>An empty string.</source>
          <target state="translated">빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>The reader remains in the current position.</source>
          <target state="translated">판독기는 현재 위치를 유지합니다.</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>Undefined, although typically the reader remains in the current position.</source>
          <target state="translated">일반적으로 판독기가 현재 위치를 유지하지만 정의되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page and the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지 및 <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> 권장 사항.</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBoolean%2A&gt;</ph> method to read the attribute as a B<ph id="ph2">`oolean`</ph> value.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBoolean%2A&gt;</ph> 메서드는 B로 특성을 읽을 수<ph id="ph2">`oolean`</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>The example uses the <ph id="ph1">`dataFile_2.xml`</ph> file as input.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">`dataFile_2.xml`</ph> 파일을 입력으로 사용합니다.</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>The attempted cast is not valid.</source>
          <target state="translated">시도된 캐스팅이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>The string format is not valid.</source>
          <target state="translated">문자열 형식이 올바르지 않은 경우</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>Reads the text content at the current position as a <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> object.</source>
          <target state="translated">현재 위치의 텍스트 콘텐츠를 <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> 개체로 읽습니다.</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>The text content as a <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> object.</source>
          <target state="translated">텍스트 콘텐츠에 해당하는 <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</source>
          <target state="translated">이 메서드는 텍스트, 공백, 유효 공백 및 CDATA 섹션이 연결 하 고 설명 이나 처리 명령을 건너뜁니다.</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>Entity references are automatically resolved.</source>
          <target state="translated">엔터티 참조가 자동으로 해결 됩니다.</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>If the content is typed <ph id="ph1">`xsd:dateTime`</ph>, the reader returns an unboxed <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> object.</source>
          <target state="translated">콘텐츠 형식이 경우 <ph id="ph1">`xsd:dateTime`</ph>, 판독기는 unboxed 반환 <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>If the content is not typed <ph id="ph1">`xsd:dateTime`</ph>, the reader attempts to convert it to a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> object according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">콘텐츠 형식화 되지 않은 경우 <ph id="ph1">`xsd:dateTime`</ph>, 판독기로 변환 하려고 시도 <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> 개체에 정의 된 규칙에 따라는 <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> 권장 합니다.</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>You cannot rely on the <ph id="ph1">&lt;xref:System.DateTime.Year%2A?displayProperty=nameWithType&gt;</ph> value when the content is typed as <ph id="ph2">`xsd:gMonthDay`</ph>.</source>
          <target state="translated">내용 형식이 <ph id="ph1">&lt;xref:System.DateTime.Year%2A?displayProperty=nameWithType&gt;</ph>로 지정된 경우 <ph id="ph2">`xsd:gMonthDay`</ph> 값을 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> always sets the <ph id="ph2">&lt;xref:System.DateTime.Year%2A?displayProperty=nameWithType&gt;</ph> value to 1904 in this case.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 항상 설정 된 <ph id="ph2">&lt;xref:System.DateTime.Year%2A?displayProperty=nameWithType&gt;</ph> 이 경우 값을 1904 합니다.</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>The following table describes how this method treats each node type.</source>
          <target state="translated">다음 표에서이 메서드는 각 노드 유형에 처리 하는 방법을 설명 합니다.</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>XmlNodeType</source>
          <target state="translated">XmlNodeType</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>Return value</source>
          <target state="translated">반환 값</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>Reader behavior</source>
          <target state="translated">판독기 동작</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</source>
          <target state="translated">요청한 형식으로 변환된 텍스트, CDATA, 공백 및 유효 공백 노드가 연결된 내용</target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>Moves to the next start element or end element tag.</source>
          <target state="translated">다음 시작 요소 또는 끝 요소 태그로 이동합니다.</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>Entity references are automatically expanded.</source>
          <target state="translated">엔터티 참조가 자동으로 확장됩니다.</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>Same as calling <ph id="ph1">`XmlConvert.ToXxx`</ph> on the attribute value.</source>
          <target state="translated">호출할 때와 동일한 <ph id="ph1">`XmlConvert.ToXxx`</ph> 특성 값에 있습니다.</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>The reader remains in the current position.</source>
          <target state="translated">판독기는 현재 위치를 유지합니다.</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</source>
          <target state="translated">PI(처리 명령) 또는 주석을 무시하고 PI 또는 주석 다음에 연결된 텍스트 내용을 읽습니다.</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>Moves to the next start element or end element tag.</source>
          <target state="translated">다음 시작 요소 또는 끝 요소 태그로 이동합니다.</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>Entity references are automatically expanded.</source>
          <target state="translated">엔터티 참조가 자동으로 확장됩니다.</target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>An empty string.</source>
          <target state="translated">빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>The reader remains in the current position.</source>
          <target state="translated">판독기는 현재 위치를 유지합니다.</target>       </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>Undefined, although typically the reader remains in the current position.</source>
          <target state="translated">일반적으로 판독기가 현재 위치를 유지하지만 정의되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page and the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지 및 <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> 권장 사항.</target>       </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>The attempted cast is not valid.</source>
          <target state="translated">시도된 캐스팅이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>The string format is not valid.</source>
          <target state="translated">문자열 형식이 올바르지 않은 경우</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDateTimeOffset">
          <source>Reads the text content at the current position as a <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> object.</source>
          <target state="translated">현재 위치의 텍스트 콘텐츠를 <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> 개체로 읽습니다.</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDateTimeOffset">
          <source>The text content as a <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> object.</source>
          <target state="translated">텍스트 콘텐츠에 해당하는 <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDateTimeOffset">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDateTimeOffset">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>Reads the text content at the current position as a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> object.</source>
          <target state="translated">현재 위치의 텍스트 콘텐츠를 <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 개체로 읽습니다.</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>The text content at the current position as a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> object.</source>
          <target state="translated">현재 위치의 텍스트 콘텐츠에 해당하는 <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</source>
          <target state="translated">이 메서드는 텍스트, 공백, 유효 공백 및 CDATA 섹션이 연결 하 고 설명 이나 처리 명령을 건너뜁니다.</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>Entity references are automatically resolved.</source>
          <target state="translated">엔터티 참조가 자동으로 해결 됩니다.</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>If the content is typed <ph id="ph1">`xsd:decimal`</ph>, the reader returns an unboxed <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> object.</source>
          <target state="translated">콘텐츠 형식이 경우 <ph id="ph1">`xsd:decimal`</ph>, 판독기는 unboxed 반환 <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>If the content is not typed <ph id="ph1">`xsd:decimal`</ph>, the reader attempts to convert it to a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> object according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">콘텐츠 형식화 되지 않은 경우 <ph id="ph1">`xsd:decimal`</ph>, 판독기로 변환 하려고 시도 <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> 개체에 정의 된 규칙에 따라는 <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> 권장 합니다.</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>The following table describes how this method treats each node type.</source>
          <target state="translated">다음 표에서이 메서드는 각 노드 유형에 처리 하는 방법을 설명 합니다.</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>XmlNodeType</source>
          <target state="translated">XmlNodeType</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>Return value</source>
          <target state="translated">반환 값</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>Reader behavior</source>
          <target state="translated">판독기 동작</target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</source>
          <target state="translated">요청한 형식으로 변환된 텍스트, CDATA, 공백 및 유효 공백 노드가 연결된 내용</target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>Moves to the next start element or end element tag.</source>
          <target state="translated">다음 시작 요소 또는 끝 요소 태그로 이동합니다.</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>Entity references are automatically expanded.</source>
          <target state="translated">엔터티 참조가 자동으로 확장됩니다.</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>Same as calling <ph id="ph1">`XmlConvert.ToXxx`</ph> on the attribute value.</source>
          <target state="translated">호출할 때와 동일한 <ph id="ph1">`XmlConvert.ToXxx`</ph> 특성 값에 있습니다.</target>       </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>The reader remains in the current position.</source>
          <target state="translated">판독기는 현재 위치를 유지합니다.</target>       </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</source>
          <target state="translated">PI(처리 명령) 또는 주석을 무시하고 PI 또는 주석 다음에 연결된 텍스트 내용을 읽습니다.</target>       </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>Moves to the next start element or end element tag.</source>
          <target state="translated">다음 시작 요소 또는 끝 요소 태그로 이동합니다.</target>       </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>Entity references are automatically expanded.</source>
          <target state="translated">엔터티 참조가 자동으로 확장됩니다.</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>An empty string.</source>
          <target state="translated">빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>The reader remains in the current position.</source>
          <target state="translated">판독기는 현재 위치를 유지합니다.</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>Undefined, although typically the reader remains in the current position.</source>
          <target state="translated">일반적으로 판독기가 현재 위치를 유지하지만 정의되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page and the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지 및 <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> 권장 사항.</target>       </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>The attempted cast is not valid.</source>
          <target state="translated">시도된 캐스팅이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>The string format is not valid.</source>
          <target state="translated">문자열 형식이 올바르지 않은 경우</target>       </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>Reads the text content at the current position as a double-precision floating-point number.</source>
          <target state="translated">현재 위치의 텍스트 콘텐츠를 배정밀도 부동 소수점 숫자로 읽습니다.</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>The text content as a double-precision floating-point number.</source>
          <target state="translated">텍스트 콘텐츠에 해당하는 배정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</source>
          <target state="translated">이 메서드는 텍스트, 공백, 유효 공백 및 CDATA 섹션이 연결 하 고 설명 이나 처리 명령을 건너뜁니다.</target>       </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>Entity references are automatically resolved.</source>
          <target state="translated">엔터티 참조가 자동으로 해결 됩니다.</target>       </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>If the content is typed <ph id="ph1">`xsd:double`</ph>, the reader returns a double-precision floating-point number.</source>
          <target state="translated">콘텐츠 형식이 경우 <ph id="ph1">`xsd:double`</ph>, 판독기 배정밀도 부동 소수점 숫자를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>If the content is not typed <ph id="ph1">`xsd:double`</ph>, the reader attempts to convert it to a double-precision floating-point number according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">콘텐츠 형식화 되지 않은 경우 <ph id="ph1">`xsd:double`</ph>, 판독기에 정의 된 규칙에 따라 배정밀도 부동 소수점 숫자로 변환 하려고 시도 <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> 권장 합니다.</target>       </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>The following table describes how this method treats each node type.</source>
          <target state="translated">다음 표에서이 메서드는 각 노드 유형에 처리 하는 방법을 설명 합니다.</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>XmlNodeType</source>
          <target state="translated">XmlNodeType</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>Return value</source>
          <target state="translated">반환 값</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>Reader behavior</source>
          <target state="translated">판독기 동작</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</source>
          <target state="translated">요청한 형식으로 변환된 텍스트, CDATA, 공백 및 유효 공백 노드가 연결된 내용</target>       </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>Moves to the next start element or end element tag.</source>
          <target state="translated">다음 시작 요소 또는 끝 요소 태그로 이동합니다.</target>       </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>Entity references are automatically expanded.</source>
          <target state="translated">엔터티 참조가 자동으로 확장됩니다.</target>       </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>Same as calling <ph id="ph1">`XmlConvert.ToXxx`</ph> on the attribute value.</source>
          <target state="translated">호출할 때와 동일한 <ph id="ph1">`XmlConvert.ToXxx`</ph> 특성 값에 있습니다.</target>       </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>The reader remains in the current position.</source>
          <target state="translated">판독기는 현재 위치를 유지합니다.</target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</source>
          <target state="translated">PI(처리 명령) 또는 주석을 무시하고 PI 또는 주석 다음에 연결된 텍스트 내용을 읽습니다.</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>Moves to the next start element or end element tag.</source>
          <target state="translated">다음 시작 요소 또는 끝 요소 태그로 이동합니다.</target>       </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>Entity references are automatically expanded.</source>
          <target state="translated">엔터티 참조가 자동으로 확장됩니다.</target>       </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>An empty string.</source>
          <target state="translated">빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>The reader remains in the current position.</source>
          <target state="translated">판독기는 현재 위치를 유지합니다.</target>       </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>Undefined, although typically the reader remains in the current position.</source>
          <target state="translated">일반적으로 판독기가 현재 위치를 유지하지만 정의되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page and the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지 및 <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> 권장 사항.</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>The attempted cast is not valid.</source>
          <target state="translated">시도된 캐스팅이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>The string format is not valid.</source>
          <target state="translated">문자열 형식이 올바르지 않은 경우</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>Reads the text content at the current position as a single-precision floating point number.</source>
          <target state="translated">현재 위치의 텍스트 콘텐츠를 단정밀도 부동 소수점 숫자로 읽습니다.</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>The text content at the current position as a single-precision floating point number.</source>
          <target state="translated">현재 위치의 텍스트 콘텐츠에 해당하는 단정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</source>
          <target state="translated">이 메서드는 텍스트, 공백, 유효 공백 및 CDATA 섹션이 연결 하 고 설명 이나 처리 명령을 건너뜁니다.</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>Entity references are automatically resolved.</source>
          <target state="translated">엔터티 참조가 자동으로 해결 됩니다.</target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>If the content is typed <ph id="ph1">`xsd:float`</ph>, the reader returns an unboxed a single-precision floating point number.</source>
          <target state="translated">콘텐츠 형식이 경우 <ph id="ph1">`xsd:float`</ph>, 판독기는 unboxed 반환는 단 정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>If the content is not typed <ph id="ph1">`xsd:float`</ph>, the reader attempts to convert it to a single-precision floating point number according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">콘텐츠 형식화 되지 않은 경우 <ph id="ph1">`xsd:float`</ph>, 판독기를에 정의 된 규칙에 따라 단 정밀도 부동 소수점 숫자로 변환 하려고 시도 <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> 권장 합니다.</target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>The following table describes how this method treats each node type.</source>
          <target state="translated">다음 표에서이 메서드는 각 노드 유형에 처리 하는 방법을 설명 합니다.</target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>XmlNodeType</source>
          <target state="translated">XmlNodeType</target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>Return value</source>
          <target state="translated">반환 값</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>Reader behavior</source>
          <target state="translated">판독기 동작</target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</source>
          <target state="translated">요청한 형식으로 변환된 텍스트, CDATA, 공백 및 유효 공백 노드가 연결된 내용</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>Moves to the next start element or end element tag.</source>
          <target state="translated">다음 시작 요소 또는 끝 요소 태그로 이동합니다.</target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>Entity references are automatically expanded.</source>
          <target state="translated">엔터티 참조가 자동으로 확장됩니다.</target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>Same as calling <ph id="ph1">`XmlConvert.ToXxx`</ph> on the attribute value.</source>
          <target state="translated">호출할 때와 동일한 <ph id="ph1">`XmlConvert.ToXxx`</ph> 특성 값에 있습니다.</target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>The reader remains in the current position.</source>
          <target state="translated">판독기는 현재 위치를 유지합니다.</target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</source>
          <target state="translated">PI(처리 명령) 또는 주석을 무시하고 PI 또는 주석 다음에 연결된 텍스트 내용을 읽습니다.</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>Moves to the next start element or end element tag.</source>
          <target state="translated">다음 시작 요소 또는 끝 요소 태그로 이동합니다.</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>Entity references are automatically expanded.</source>
          <target state="translated">엔터티 참조가 자동으로 확장됩니다.</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>An empty string.</source>
          <target state="translated">빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>The reader remains in the current position.</source>
          <target state="translated">판독기는 현재 위치를 유지합니다.</target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>Undefined, although typically the reader remains in the current position.</source>
          <target state="translated">일반적으로 판독기가 현재 위치를 유지하지만 정의되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page and the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지 및 <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> 권장 구성 합니다.</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>The attempted cast is not valid.</source>
          <target state="translated">시도된 캐스팅이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>The string format is not valid.</source>
          <target state="translated">문자열 형식이 올바르지 않은 경우</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>Reads the text content at the current position as a 32-bit signed integer.</source>
          <target state="translated">현재 위치의 텍스트 콘텐츠를 부호 있는 32비트 정수로 읽습니다.</target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>The text content as a 32-bit signed integer.</source>
          <target state="translated">텍스트 콘텐츠에 해당하는 부호 있는 32비트 정수입니다.</target>       </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</source>
          <target state="translated">이 메서드는 텍스트, 공백, 유효 공백 및 CDATA 섹션이 연결 하 고 설명 이나 처리 명령을 건너뜁니다.</target>       </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>Entity references are automatically resolved.</source>
          <target state="translated">엔터티 참조가 자동으로 해결 됩니다.</target>       </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>If the content is typed <ph id="ph1">`xsd:integer`</ph>, the reader returns an unboxed 32-bit signed integer.</source>
          <target state="translated">콘텐츠 형식이 경우 <ph id="ph1">`xsd:integer`</ph>, 판독기 unboxed 32 비트 부호 있는 정수를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>If the content is not typed <ph id="ph1">`xsd:integer`</ph>, the reader attempts to convert it to a 32-bit signed integer according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">콘텐츠 형식화 되지 않은 경우 <ph id="ph1">`xsd:integer`</ph>, 판독기에 정의 된 규칙에 따라 32 비트 부호 있는 정수로 변환 하려고 시도 <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> 권장 합니다.</target>       </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>The following table describes how this method treats each node type.</source>
          <target state="translated">다음 표에서이 메서드는 각 노드 유형에 처리 하는 방법을 설명 합니다.</target>       </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>XmlNodeType</source>
          <target state="translated">XmlNodeType</target>       </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>Return value</source>
          <target state="translated">반환 값</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>Reader behavior</source>
          <target state="translated">판독기 동작</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</source>
          <target state="translated">요청한 형식으로 변환된 텍스트, CDATA, 공백 및 유효 공백 노드가 연결된 내용</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>Moves to the next start element or end element tag.</source>
          <target state="translated">다음 시작 요소 또는 끝 요소 태그로 이동합니다.</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>Entity references are automatically expanded.</source>
          <target state="translated">엔터티 참조가 자동으로 확장됩니다.</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>Same as calling <ph id="ph1">`XmlConvert.ToXxx`</ph> on the attribute value.</source>
          <target state="translated">호출할 때와 동일한 <ph id="ph1">`XmlConvert.ToXxx`</ph> 특성 값에 있습니다.</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>The reader remains in the current position.</source>
          <target state="translated">판독기는 현재 위치를 유지합니다.</target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</source>
          <target state="translated">PI(처리 명령) 또는 주석을 무시하고 PI 또는 주석 다음에 연결된 텍스트 내용을 읽습니다.</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>Moves to the next start element or end element tag.</source>
          <target state="translated">다음 시작 요소 또는 끝 요소 태그로 이동합니다.</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>Entity references are automatically expanded.</source>
          <target state="translated">엔터티 참조가 자동으로 확장됩니다.</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>An empty string.</source>
          <target state="translated">빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>The reader remains in the current position.</source>
          <target state="translated">판독기는 현재 위치를 유지합니다.</target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>Undefined, although typically the reader remains in the current position.</source>
          <target state="translated">일반적으로 판독기가 현재 위치를 유지하지만 정의되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page and the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지 및 <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> 권장 구성 합니다.</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>The attempted cast is not valid.</source>
          <target state="translated">시도된 캐스팅이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>The string format is not valid.</source>
          <target state="translated">문자열 형식이 올바르지 않은 경우</target>       </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1350" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>Reads the text content at the current position as a 64-bit signed integer.</source>
          <target state="translated">현재 위치의 텍스트 콘텐츠를 부호 있는 64비트 정수로 읽습니다.</target>       </trans-unit>
        <trans-unit id="1351" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>The text content as a 64-bit signed integer.</source>
          <target state="translated">텍스트 콘텐츠에 해당하는 부호 있는 64비트 정수입니다.</target>       </trans-unit>
        <trans-unit id="1352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</source>
          <target state="translated">이 메서드는 텍스트, 공백, 유효 공백 및 CDATA 섹션이 연결 하 고 설명 이나 처리 명령을 건너뜁니다.</target>       </trans-unit>
        <trans-unit id="1353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>Entity references are automatically resolved.</source>
          <target state="translated">엔터티 참조가 자동으로 해결 됩니다.</target>       </trans-unit>
        <trans-unit id="1354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>If the content is typed <ph id="ph1">`xsd:long`</ph>, the reader returns an unboxed 64-bit signed integer.</source>
          <target state="translated">콘텐츠 형식이 경우 <ph id="ph1">`xsd:long`</ph>, 판독기 unboxed 64 비트 부호 있는 정수를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>If the content is not typed <ph id="ph1">`xsd:long`</ph>, the reader attempts to convert it to a 64-bit signed integer according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">콘텐츠 형식화 되지 않은 경우 <ph id="ph1">`xsd:long`</ph>, 판독기에 정의 된 규칙에 따라 64 비트 부호 있는 정수로 변환 하려고 시도 <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> 권장 합니다.</target>       </trans-unit>
        <trans-unit id="1356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>The following table describes this method treats each node type.</source>
          <target state="translated">다음 표에이 메서드는 각 노드 형식을 처리 합니다.</target>       </trans-unit>
        <trans-unit id="1357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>XmlNodeType</source>
          <target state="translated">XmlNodeType</target>       </trans-unit>
        <trans-unit id="1358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>Return value</source>
          <target state="translated">반환 값</target>       </trans-unit>
        <trans-unit id="1359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>Reader behavior</source>
          <target state="translated">판독기 동작</target>       </trans-unit>
        <trans-unit id="1360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</source>
          <target state="translated">요청한 형식으로 변환된 텍스트, CDATA, 공백 및 유효 공백 노드가 연결된 내용</target>       </trans-unit>
        <trans-unit id="1361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>Moves to the next start element or end element tag.</source>
          <target state="translated">다음 시작 요소 또는 끝 요소 태그로 이동합니다.</target>       </trans-unit>
        <trans-unit id="1362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>Entity references are automatically expanded.</source>
          <target state="translated">엔터티 참조가 자동으로 확장됩니다.</target>       </trans-unit>
        <trans-unit id="1363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>Same as <ph id="ph1">`XmlConvert.ToXxx`</ph> on attribute value.</source>
          <target state="translated">와 동일 <ph id="ph1">`XmlConvert.ToXxx`</ph> 특성 값에 있습니다.</target>       </trans-unit>
        <trans-unit id="1364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>The reader remains in the current position</source>
          <target state="translated">판독기는 현재 위치에서를 유지합니다</target>       </trans-unit>
        <trans-unit id="1365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</source>
          <target state="translated">PI(처리 명령) 또는 주석을 무시하고 PI 또는 주석 다음에 연결된 텍스트 내용을 읽습니다.</target>       </trans-unit>
        <trans-unit id="1366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>Moves to the next start element or end element tag.</source>
          <target state="translated">다음 시작 요소 또는 끝 요소 태그로 이동합니다.</target>       </trans-unit>
        <trans-unit id="1367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>Entity references are automatically expanded.</source>
          <target state="translated">엔터티 참조가 자동으로 확장됩니다.</target>       </trans-unit>
        <trans-unit id="1368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>An empty string.</source>
          <target state="translated">빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>The reader remains in the current position.</source>
          <target state="translated">판독기는 현재 위치를 유지합니다.</target>       </trans-unit>
        <trans-unit id="1370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>Undefined, although typically the reader remains in the current position.</source>
          <target state="translated">일반적으로 판독기가 현재 위치를 유지하지만 정의되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="1372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="1373" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>The attempted cast is not valid.</source>
          <target state="translated">시도된 캐스팅이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="1374" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>The string format is not valid.</source>
          <target state="translated">문자열 형식이 올바르지 않은 경우</target>       </trans-unit>
        <trans-unit id="1375" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1376" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1377" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>Reads the text content at the current position as an <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">현재 위치의 텍스트 콘텐츠를 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>로 읽습니다.</target>       </trans-unit>
        <trans-unit id="1378" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>The text content as the most appropriate common language runtime (CLR) object.</source>
          <target state="translated">텍스트 콘텐츠에 해당하는 가장 적합한 CLR(공용 언어 런타임) 개체입니다.</target>       </trans-unit>
        <trans-unit id="1379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</source>
          <target state="translated">이 메서드는 텍스트, 공백, 유효 공백 및 CDATA 섹션이 연결 하 고 설명 이나 처리 명령을 건너뜁니다.</target>       </trans-unit>
        <trans-unit id="1380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>Entity references are automatically resolved.</source>
          <target state="translated">엔터티 참조가 자동으로 해결 됩니다.</target>       </trans-unit>
        <trans-unit id="1381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>If the content is typed, the reader returns a boxed CLR of the most appropriate type, specified by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ValueType%2A&gt;</ph> property.</source>
          <target state="translated">콘텐츠 형식이 판독기에서 지정 하는 가장 적합 한 형식의 boxed CLR 반환는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ValueType%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>If the content is a list type, the reader returns an array of boxed objects of the appropriate type.</source>
          <target state="translated">콘텐츠 목록 형식인 경우 판독기는 적절 한 형식의 boxed 개체 배열을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>If a validation error occurs while parsing the content and the reader is an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object created by the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method, the reader returns the content as a string.</source>
          <target state="translated">유효성 검사 오류가 발생 하는 콘텐츠를 구문 분석 중 이며 판독기는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 하 여 만든 개체는 <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드, 판독기를 문자열로 콘텐츠를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>In other words when a validation error or warning occurs, the content is considered to be untyped.</source>
          <target state="translated">즉 유효성 검사 오류나 경고가 발생할 때 콘텐츠 간주 됩니다 형식화 되지 않아야 합니다.</target>       </trans-unit>
        <trans-unit id="1385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>If the content is not typed, the reader returns the content as a string.</source>
          <target state="translated">형식화되지 않은 내용의 경우 판독기가 해당 내용을 문자열로 반환합니다.</target>       </trans-unit>
        <trans-unit id="1386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>The following table describes how this method treats each node type.</source>
          <target state="translated">다음 표에서이 메서드는 각 노드 유형에 처리 하는 방법을 설명 합니다.</target>       </trans-unit>
        <trans-unit id="1387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>XmlNodeType</source>
          <target state="translated">XmlNodeType</target>       </trans-unit>
        <trans-unit id="1388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>Return value</source>
          <target state="translated">반환 값</target>       </trans-unit>
        <trans-unit id="1389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>Reader behavior</source>
          <target state="translated">판독기 동작</target>       </trans-unit>
        <trans-unit id="1390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</source>
          <target state="translated">요청한 형식으로 변환된 텍스트, CDATA, 공백 및 유효 공백 노드가 연결된 내용</target>       </trans-unit>
        <trans-unit id="1391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>Moves to the next start element or end element tag.</source>
          <target state="translated">다음 시작 요소 또는 끝 요소 태그로 이동합니다.</target>       </trans-unit>
        <trans-unit id="1392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>Entity references are automatically expanded.</source>
          <target state="translated">엔터티 참조가 자동으로 확장됩니다.</target>       </trans-unit>
        <trans-unit id="1393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>Same as calling <ph id="ph1">`XmlConvert.ToXxx`</ph> on the attribute value.</source>
          <target state="translated">호출할 때와 동일한 <ph id="ph1">`XmlConvert.ToXxx`</ph> 특성 값에 있습니다.</target>       </trans-unit>
        <trans-unit id="1394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>The reader remains in the current position</source>
          <target state="translated">판독기는 현재 위치에서를 유지합니다</target>       </trans-unit>
        <trans-unit id="1395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</source>
          <target state="translated">PI(처리 명령) 또는 주석을 무시하고 PI 또는 주석 다음에 연결된 텍스트 내용을 읽습니다.</target>       </trans-unit>
        <trans-unit id="1396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>Moves to the next start element or end element tag.</source>
          <target state="translated">다음 시작 요소 또는 끝 요소 태그로 이동합니다.</target>       </trans-unit>
        <trans-unit id="1397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>Entity references are automatically expanded.</source>
          <target state="translated">엔터티 참조가 자동으로 확장됩니다.</target>       </trans-unit>
        <trans-unit id="1398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>The value of the element if the reader is a schema validating reader (<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ValidationType%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Xml.ValidationType.Schema&gt;</ph>); otherwise an empty string.</source>
          <target state="translated">판독기가 스키마 유효성 검사 판독기 경우 요소의 값 (<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ValidationType%2A&gt;</ph> 로 설정 된 <ph id="ph2">&lt;xref:System.Xml.ValidationType.Schema&gt;</ph>) 고, 그렇지 않으면 빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>The reader remains in the current position.</source>
          <target state="translated">판독기는 현재 위치를 유지합니다.</target>       </trans-unit>
        <trans-unit id="1400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>Undefined, although typically the reader remains in the current position.</source>
          <target state="translated">일반적으로 판독기가 현재 위치를 유지하지만 정의되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="1402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page and the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지 및 <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> 권장 구성 합니다.</target>       </trans-unit>
        <trans-unit id="1403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsObjectAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsObjectAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1404" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>The attempted cast is not valid.</source>
          <target state="translated">시도된 캐스팅이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="1405" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>The string format is not valid.</source>
          <target state="translated">문자열 형식이 올바르지 않은 경우</target>       </trans-unit>
        <trans-unit id="1406" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1407" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1408" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsObjectAsync">
          <source>Asynchronously reads the text content at the current position as an <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">현재 위치의 텍스트 콘텐츠를 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>로 비동기적으로 읽습니다.</target>       </trans-unit>
        <trans-unit id="1409" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsObjectAsync">
          <source>The text content as the most appropriate common language runtime (CLR) object.</source>
          <target state="translated">텍스트 콘텐츠에 해당하는 가장 적합한 CLR(공용 언어 런타임) 개체입니다.</target>       </trans-unit>
        <trans-unit id="1410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObjectAsync">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsObject%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsObject%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="1411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObjectAsync">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1412" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsObjectAsync">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1413" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsObjectAsync">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 “비동기 메서드를 사용하려면 XmlReaderSettings.Async를 true로 설정하세요.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1414" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>Reads the text content at the current position as a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> object.</source>
          <target state="translated">현재 위치의 텍스트 콘텐츠를 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 개체로 읽습니다.</target>       </trans-unit>
        <trans-unit id="1415" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>The text content as a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> object.</source>
          <target state="translated">텍스트 콘텐츠에 해당하는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</source>
          <target state="translated">이 메서드는 텍스트, 공백, 유효 공백 및 CDATA 섹션이 연결 하 고 설명 이나 처리 명령을 건너뜁니다.</target>       </trans-unit>
        <trans-unit id="1417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>Entity references are automatically resolved.</source>
          <target state="translated">엔터티 참조가 자동으로 해결 됩니다.</target>       </trans-unit>
        <trans-unit id="1418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>This method can be used convert typed values to a string, or to read the text content while skipping comments and processing instructions.</source>
          <target state="translated">이 메서드를 사용할 수는 문자열 또는 메모를 건너뛰고 처리 명령 하는 동안 텍스트 콘텐츠를 읽을 형식화 된 값으로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="1419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>The following table describes how this method treats each node type.</source>
          <target state="translated">다음 표에서이 메서드는 각 노드 유형에 처리 하는 방법을 설명 합니다.</target>       </trans-unit>
        <trans-unit id="1420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>XmlNodeType</source>
          <target state="translated">XmlNodeType</target>       </trans-unit>
        <trans-unit id="1421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>Return value</source>
          <target state="translated">반환 값</target>       </trans-unit>
        <trans-unit id="1422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>Reader behavior</source>
          <target state="translated">판독기 동작</target>       </trans-unit>
        <trans-unit id="1423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</source>
          <target state="translated">요청한 형식으로 변환된 텍스트, CDATA, 공백 및 유효 공백 노드가 연결된 내용</target>       </trans-unit>
        <trans-unit id="1424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>Moves to the next start element or end element tag.</source>
          <target state="translated">다음 시작 요소 또는 끝 요소 태그로 이동합니다.</target>       </trans-unit>
        <trans-unit id="1425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>Entity references are automatically expanded.</source>
          <target state="translated">엔터티 참조가 자동으로 확장됩니다.</target>       </trans-unit>
        <trans-unit id="1426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>Same as calling <ph id="ph1">`XmlConvert.ToXxx`</ph> on the attribute value.</source>
          <target state="translated">호출할 때와 동일한 <ph id="ph1">`XmlConvert.ToXxx`</ph> 특성 값에 있습니다.</target>       </trans-unit>
        <trans-unit id="1427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>The reader remains in the current position.</source>
          <target state="translated">판독기는 현재 위치를 유지합니다.</target>       </trans-unit>
        <trans-unit id="1428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</source>
          <target state="translated">PI(처리 명령) 또는 주석을 무시하고 PI 또는 주석 다음에 연결된 텍스트 내용을 읽습니다.</target>       </trans-unit>
        <trans-unit id="1429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>Moves to the next start element or end element tag.</source>
          <target state="translated">다음 시작 요소 또는 끝 요소 태그로 이동합니다.</target>       </trans-unit>
        <trans-unit id="1430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>Entity references are automatically expanded.</source>
          <target state="translated">엔터티 참조가 자동으로 확장됩니다.</target>       </trans-unit>
        <trans-unit id="1431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>An empty string.</source>
          <target state="translated">빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>The reader remains in the current position.</source>
          <target state="translated">판독기는 현재 위치를 유지합니다.</target>       </trans-unit>
        <trans-unit id="1433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>Undefined, although typically the reader remains in the current position.</source>
          <target state="translated">일반적으로 판독기가 현재 위치를 유지하지만 정의되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="1435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page and the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지 및 <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> 권장 구성 합니다.</target>       </trans-unit>
        <trans-unit id="1436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsStringAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsStringAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1437" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>The attempted cast is not valid.</source>
          <target state="translated">시도된 캐스팅이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="1438" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>The string format is not valid.</source>
          <target state="translated">문자열 형식이 올바르지 않은 경우</target>       </trans-unit>
        <trans-unit id="1439" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1440" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1441" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsStringAsync">
          <source>Asynchronously reads the text content at the current position as a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> object.</source>
          <target state="translated">현재 위치의 텍스트 콘텐츠를 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 개체로 읽습니다.</target>       </trans-unit>
        <trans-unit id="1442" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsStringAsync">
          <source>The text content as a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> object.</source>
          <target state="translated">텍스트 콘텐츠에 해당하는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsStringAsync">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsString%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsString%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="1444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsStringAsync">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1445" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsStringAsync">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1446" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsStringAsync">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 “비동기 메서드를 사용하려면 XmlReaderSettings.Async를 true로 설정하세요.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1447" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1448" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message “An asynchronous operation is already in progress.”</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1449" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>Reads the current element and returns the contents as an object of the type specified.</source>
          <target state="translated">현재 요소를 읽고 콘텐츠를 지정된 형식의 개체로 반환합니다.</target>       </trans-unit>
        <trans-unit id="1450" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The type of the value to be returned.</source>
          <target state="translated">반환될 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1451" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> With the release of the .NET Framework 3.5, the value of the <bpt id="p2">&lt;c&gt;</bpt>returnType<ept id="p2">&lt;/c&gt;</ept> parameter can now be the <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> type.</source>
          <target state="translated"><bpt id="p1">**</bpt>참고<ept id="p1">**</ept> .NET Framework 3.5 릴리스에서는 <bpt id="p2">&lt;c&gt;</bpt>returnType<ept id="p2">&lt;/c&gt;</ept> 매개 변수 값이 <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> 형식이 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1452" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> object that is used to resolve any namespace prefixes related to type conversion.</source>
          <target state="translated">형식 변환과 관련된 모든 네임스페이스 접두사를 확인하는 <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1453" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>Reads the element content as the requested type.</source>
          <target state="translated">요소 콘텐츠를 요청된 형식으로 읽습니다.</target>       </trans-unit>
        <trans-unit id="1454" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The element content converted to the requested typed object.</source>
          <target state="translated">요청된 형식의 개체로 변환된 요소 콘텐츠입니다.</target>       </trans-unit>
        <trans-unit id="1455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</source>
          <target state="translated">이 메서드는 요소의 내용을 시작 태그를 읽고 판독기 끝 요소 태그를 지나서 이동 합니다.</target>       </trans-unit>
        <trans-unit id="1456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>It expands entities and ignores processing instructions and comments.</source>
          <target state="translated">엔터티를 확장 하 고 처리 명령과 주석을 무시 합니다.</target>       </trans-unit>
        <trans-unit id="1457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The element can only contain simple content.</source>
          <target state="translated">요소에는 단순 콘텐츠 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>That is, it cannot have child elements.</source>
          <target state="translated">즉, 자식 요소를 가질 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page and the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지 및 <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> 권장 구성 합니다.</target>       </trans-unit>
        <trans-unit id="1460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAs%2A&gt;</ph> method to read the content of the <ph id="ph2">`date`</ph> node.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAs%2A&gt;</ph> 의 콘텐츠를 읽으려면 메서드는 <ph id="ph2">`date`</ph> 노드.</target>       </trans-unit>
        <trans-unit id="1462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The example uses the <ph id="ph1">`dataFile.xml`</ph> file as input.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">`dataFile.xml`</ph> 파일을 입력으로 사용합니다.</target>       </trans-unit>
        <trans-unit id="1463" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1464" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1465" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The current element contains child elements.</source>
          <target state="translated">현재 요소에 자식 요소가 포함된 경우</target>       </trans-unit>
        <trans-unit id="1466" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1467" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The element content cannot be converted to the requested type.</source>
          <target state="translated">요소 콘텐츠를 요청한 형식으로 변환할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="1468" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The method is called with <ph id="ph1">&lt;see langword="null" /&gt;</ph> arguments.</source>
          <target state="translated">메서드가 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 인수를 사용하여 호출된 경우</target>       </trans-unit>
        <trans-unit id="1469" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>Read <ph id="ph1">&lt;see langword="Decimal.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Decimal.MaxValue" /&gt;</ph>를 읽는 경우</target>       </trans-unit>
        <trans-unit id="1470" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
          <source>The type of the value to be returned.</source>
          <target state="translated">반환될 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1471" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> With the release of the .NET Framework 3.5, the value of the <bpt id="p2">&lt;c&gt;</bpt>returnType<ept id="p2">&lt;/c&gt;</ept> parameter can now be the <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> type.</source>
          <target state="translated"><bpt id="p1">**</bpt>참고<ept id="p1">**</ept> .NET Framework 3.5 릴리스에서는 <bpt id="p2">&lt;c&gt;</bpt>returnType<ept id="p2">&lt;/c&gt;</ept> 매개 변수 값이 <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> 형식이 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1472" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> object that is used to resolve any namespace prefixes related to type conversion.</source>
          <target state="translated">형식 변환과 관련된 모든 네임스페이스 접두사를 확인하는 <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1473" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">요소의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="1474" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
          <source>The namespace URI of the element.</source>
          <target state="translated">요소의 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="1475" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
          <source>Checks that the specified local name and namespace URI matches that of the current element, then reads the element content as the requested type.</source>
          <target state="translated">지정된 로컬 이름과 네임스페이스 URI가 현재 요소의 로컬 이름 및 네임스페이스 URI와 일치하는지 확인한 다음 요소 콘텐츠를 요청된 형식으로 읽습니다.</target>       </trans-unit>
        <trans-unit id="1476" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
          <source>The element content converted to the requested typed object.</source>
          <target state="translated">요청된 형식의 개체로 변환된 요소 콘텐츠입니다.</target>       </trans-unit>
        <trans-unit id="1477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
          <source>This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</source>
          <target state="translated">이 메서드는 요소의 내용을 시작 태그를 읽고 판독기 끝 요소 태그를 지나서 이동 합니다.</target>       </trans-unit>
        <trans-unit id="1478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
          <source>It expands entities and ignores processing instructions and comments.</source>
          <target state="translated">엔터티를 확장 하 고 처리 명령과 주석을 무시 합니다.</target>       </trans-unit>
        <trans-unit id="1479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
          <source>The element can only contain simple content.</source>
          <target state="translated">요소에는 단순 콘텐츠 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
          <source>That is, it cannot have child elements.</source>
          <target state="translated">즉, 자식 요소를 가질 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page and the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지 및 <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> 권장 구성 합니다.</target>       </trans-unit>
        <trans-unit id="1482" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1483" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1484" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
          <source>The current element contains child elements.</source>
          <target state="translated">현재 요소에 자식 요소가 포함된 경우</target>       </trans-unit>
        <trans-unit id="1485" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1486" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
          <source>The element content cannot be converted to the requested type.</source>
          <target state="translated">요소 콘텐츠를 요청한 형식으로 변환할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="1487" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
          <source>The method is called with <ph id="ph1">&lt;see langword="null" /&gt;</ph> arguments.</source>
          <target state="translated">메서드가 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 인수를 사용하여 호출된 경우</target>       </trans-unit>
        <trans-unit id="1488" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
          <source>The specified local name and namespace URI do not match that of the current element being read.</source>
          <target state="translated">지정한 로컬 이름과 네임스페이스 URI가 읽고 있는 현재 요소의 로컬 이름 및 네임스페이스 URI와 일치하지 않는 경우</target>       </trans-unit>
        <trans-unit id="1489" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
          <source>Read <ph id="ph1">&lt;see langword="Decimal.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Decimal.MaxValue" /&gt;</ph>를 읽는 경우</target>       </trans-unit>
        <trans-unit id="1490" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The type of the value to be returned.</source>
          <target state="translated">반환될 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1491" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> object that is used to resolve any namespace prefixes related to type conversion.</source>
          <target state="translated">형식 변환과 관련된 모든 네임스페이스 접두사를 확인하는 <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1492" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>Asynchronously reads the element content as the requested type.</source>
          <target state="translated">요소 콘텐츠를 요청된 형식으로 비동기적으로 읽습니다.</target>       </trans-unit>
        <trans-unit id="1493" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The element content converted to the requested typed object.</source>
          <target state="translated">요청된 형식의 개체로 변환된 요소 콘텐츠입니다.</target>       </trans-unit>
        <trans-unit id="1494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAs%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAs%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="1495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1496" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1497" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 “비동기 메서드를 사용하려면 XmlReaderSettings.Async를 true로 설정하세요.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1498" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer into which to copy the resulting text.</source>
          <target state="translated">결과 텍스트를 복사해 넣을 버퍼입니다.</target>       </trans-unit>
        <trans-unit id="1499" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This value cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1500" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the buffer where to start copying the result.</source>
          <target state="translated">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="1501" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to copy into the buffer.</source>
          <target state="translated">버퍼에 복사할 최대 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="1502" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The actual number of bytes copied is returned from this method.</source>
          <target state="translated">복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</target>       </trans-unit>
        <trans-unit id="1503" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>Reads the element and decodes the <ph id="ph1">&lt;see langword="Base64" /&gt;</ph> content.</source>
          <target state="translated">요소를 읽고 <ph id="ph1">&lt;see langword="Base64" /&gt;</ph> 콘텐츠를 디코딩합니다.</target>       </trans-unit>
        <trans-unit id="1504" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes written to the buffer.</source>
          <target state="translated">버퍼에 쓴 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="1505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This method reads the element content, decodes it using <ph id="ph1">`Base64`</ph> encoding, and returns the decoded binary bytes (for example, an inline <ph id="ph2">`Base64`</ph>-encoded GIF image) into the buffer.</source>
          <target state="translated">이 메서드는 요소 콘텐츠를 읽고, 사용 하 여 디코딩 <ph id="ph1">`Base64`</ph> 인코딩 및 디코딩된 이진 바이트를 반환 합니다 (예를 들어, 인라인 <ph id="ph2">`Base64`</ph>-인코딩된 GIF 이미지) 버퍼에 있습니다.</target>       </trans-unit>
        <trans-unit id="1506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>For more information, see RFC 1521, "MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies".</source>
          <target state="translated">자세한 내용은 RFC 1521을 참조 하십시오. "MIME (Multipurpose Internet Mail Extensions) 파트 1:를 지정 하 고 인터넷 메시지 본문의 형식을 설명 하는 메커니즘"입니다.</target>       </trans-unit>
        <trans-unit id="1507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>You can obtain RFCs from the <bpt id="p1">[</bpt>Request for Comments Web site<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=37119)</ept>.</source>
          <target state="translated">Rfc를 얻을 수는 <bpt id="p1">[</bpt>의견 웹 사이트에 대 한 요청<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=37119)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A&gt;</ph> can only read simple-content elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A&gt;</ph> 단순 콘텐츠 요소 읽을 수만 있습니다.</target>       </trans-unit>
        <trans-unit id="1509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The element can contain text, white space, significant white space, CDATA sections, comments and processing instructions.</source>
          <target state="translated">요소는 텍스트, 공백, 유효 공백, CDATA 섹션, 주석 및 처리 명령을 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>It can also contain entity references, which are automatically expanded.</source>
          <target state="translated">자동으로 확장 되는 엔터티 참조를 포함할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="1511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The element cannot have child elements.</source>
          <target state="translated">요소는 자식 요소를 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This method is very similar to the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBase64%2A&gt;</ph> method except that it can only be called on element node types.</source>
          <target state="translated">이 메서드는 매우 비슷합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBase64%2A&gt;</ph> 한다는 점 제외 하면 메서드는 요소 노드 형식에만 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>If the <ph id="ph1">`count`</ph> value is higher than the number of bytes in the document, or if it is equal to the number of bytes in the document, the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> reads all the remaining bytes in the document and returns the number of bytes read.</source>
          <target state="translated">경우는 <ph id="ph1">`count`</ph> 값이 문서에서 바이트 수와 같은 경우 또는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 문서에 나머지 모든 바이트를 읽고 읽은 바이트 수를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The next <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> method call returns a zero and moves the reader to the node following the <ph id="ph2">`EndElement`</ph>.</source>
          <target state="translated">다음 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 0을 반환 하 고 노드 다음에는 판독기를 이동 하는 메서드 호출의 <ph id="ph2">`EndElement`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>If you call <ph id="ph1">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph> before all of the element content is consumed, the reader may behave as if the first content was consumed and then the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph> method was called.</source>
          <target state="translated">호출 하는 경우 <ph id="ph1">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph> 요소 콘텐츠를 모두 사용 하기 전에 요소에서 사용 하는 경우 다음는 <ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph> 메서드를 호출 했습니다.</target>       </trans-unit>
        <trans-unit id="1516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This means that the reader will read all the text until the end element is encountered.</source>
          <target state="translated">즉, 판독기는 end 요소가 발견 될 때까지 모든 텍스트를 읽습니다.</target>       </trans-unit>
        <trans-unit id="1517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>It will then read the end tag node, read the next node, and then position itself on the next subsequent node.</source>
          <target state="translated">그런 다음 끝 태그 노드를 읽고, 다음 노드를 읽이 되며 다음 노드로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="1518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsBase64Async%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsBase64Async%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The following example reads an inline <ph id="ph1">`Base64`</ph> encoded image.</source>
          <target state="translated">다음 예제에서는 인라인 <ph id="ph1">`Base64`</ph> 인코딩된 이미지입니다.</target>       </trans-unit>
        <trans-unit id="1520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">`Base64`</ph> data is embedded within the <ph id="ph2">`&lt;image&gt;`</ph> element.</source>
          <target state="translated"><ph id="ph1">`Base64`</ph> 데이터 내에 포함 되는 <ph id="ph2">`&lt;image&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="1521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>A <ph id="ph1">&lt;xref:System.IO.BinaryWriter&gt;</ph> is used to create a new binary data file.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.IO.BinaryWriter&gt;</ph> 새 이진 데이터 파일을 만드는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="1522" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1523" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1524" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1525" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The index into the buffer or index + count is larger than the allocated buffer size.</source>
          <target state="translated">버퍼 내의 인덱스 또는 인덱스와 개수를 합한 값이 할당된 버퍼 크기보다 큰 경우</target>       </trans-unit>
        <trans-unit id="1526" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> implementation does not support this method.</source>
          <target state="translated">구현된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>에서 이 메서드를 지원하지 않는 경우</target>       </trans-unit>
        <trans-unit id="1527" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The element contains mixed-content.</source>
          <target state="translated">요소가 혼합 콘텐츠를 포함하는 경우</target>       </trans-unit>
        <trans-unit id="1528" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The content cannot be converted to the requested type.</source>
          <target state="translated">요소를 요청한 형식으로 변환할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="1529" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer into which to copy the resulting text.</source>
          <target state="translated">결과 텍스트를 복사해 넣을 버퍼입니다.</target>       </trans-unit>
        <trans-unit id="1530" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>This value cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1531" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the buffer where to start copying the result.</source>
          <target state="translated">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="1532" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to copy into the buffer.</source>
          <target state="translated">버퍼에 복사할 최대 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="1533" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>The actual number of bytes copied is returned from this method.</source>
          <target state="translated">복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</target>       </trans-unit>
        <trans-unit id="1534" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>Asynchronously reads the element and decodes the <ph id="ph1">&lt;see langword="Base64" /&gt;</ph> content.</source>
          <target state="translated">요소를 비동기적으로 읽고 <ph id="ph1">&lt;see langword="Base64" /&gt;</ph> 콘텐츠를 디코딩합니다.</target>       </trans-unit>
        <trans-unit id="1535" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes written to the buffer.</source>
          <target state="translated">버퍼에 쓴 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="1536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="1537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1538" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1539" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 “비동기 메서드를 사용하려면 XmlReaderSettings.Async를 true로 설정하세요.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1540" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer into which to copy the resulting text.</source>
          <target state="translated">결과 텍스트를 복사해 넣을 버퍼입니다.</target>       </trans-unit>
        <trans-unit id="1541" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This value cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1542" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the buffer where to start copying the result.</source>
          <target state="translated">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="1543" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to copy into the buffer.</source>
          <target state="translated">버퍼에 복사할 최대 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="1544" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The actual number of bytes copied is returned from this method.</source>
          <target state="translated">복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</target>       </trans-unit>
        <trans-unit id="1545" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>Reads the element and decodes the <ph id="ph1">&lt;see langword="BinHex" /&gt;</ph> content.</source>
          <target state="translated">요소를 읽고 <ph id="ph1">&lt;see langword="BinHex" /&gt;</ph> 콘텐츠를 디코딩합니다.</target>       </trans-unit>
        <trans-unit id="1546" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes written to the buffer.</source>
          <target state="translated">버퍼에 쓴 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="1547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This method reads the element content, decodes it using <ph id="ph1">`BinHex`</ph> encoding, and returns the decoded binary bytes (for example, an inline <ph id="ph2">`BinHex`</ph>-encoded GIF image) into the buffer.</source>
          <target state="translated">이 메서드는 요소 콘텐츠를 읽고, 사용 하 여 디코딩 <ph id="ph1">`BinHex`</ph> 인코딩 및 디코딩된 이진 바이트를 반환 합니다 (예를 들어, 인라인 <ph id="ph2">`BinHex`</ph>-인코딩된 GIF 이미지) 버퍼에 있습니다.</target>       </trans-unit>
        <trans-unit id="1548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This method can only read simple-content elements.</source>
          <target state="translated">이 메서드는 단순 콘텐츠 요소 읽을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The element can contain text, white space, significant white space, CDATA sections, comments and processing instructions.</source>
          <target state="translated">요소는 텍스트, 공백, 유효 공백, CDATA 섹션, 주석 및 처리 명령을 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>It can also contain entity references, which are automatically expanded.</source>
          <target state="translated">자동으로 확장 되는 엔터티 참조를 포함할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="1551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The element cannot have child elements.</source>
          <target state="translated">요소는 자식 요소를 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This method is very similar to the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBinHex%2A&gt;</ph> method except that it can only be called on element node types.</source>
          <target state="translated">이 메서드는 매우 비슷합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBinHex%2A&gt;</ph> 한다는 점 제외 하면 메서드는 요소 노드 형식에만 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>If the <ph id="ph1">`count`</ph> value is higher than the number of bytes in the document, or if it is equal to the number of bytes in the document, the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> reads all the remaining bytes in the document and returns the number of bytes read.</source>
          <target state="translated">경우는 <ph id="ph1">`count`</ph> 값이 문서에서 바이트 수와 같은 경우 또는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 문서에 나머지 모든 바이트를 읽고 읽은 바이트 수를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The next <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> method call returns a zero and moves the reader to the node following the <ph id="ph2">`EndElement`</ph>.</source>
          <target state="translated">다음 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 0을 반환 하 고 노드 다음에는 판독기를 이동 하는 메서드 호출의 <ph id="ph2">`EndElement`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>If you call <ph id="ph1">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph> before all of the element content is consumed, the reader may behave as if the first content was consumed and then the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph> method was called.</source>
          <target state="translated">호출 하는 경우 <ph id="ph1">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph> 요소 콘텐츠를 모두 사용 하기 전에 요소에서 사용 하는 경우 다음는 <ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph> 메서드를 호출 했습니다.</target>       </trans-unit>
        <trans-unit id="1556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This means that the reader will read all the text until the end element is encountered.</source>
          <target state="translated">즉, 판독기는 end 요소가 발견 될 때까지 모든 텍스트를 읽습니다.</target>       </trans-unit>
        <trans-unit id="1557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>It will then read the end tag node, read the next node, and then position itself on the next subsequent node.</source>
          <target state="translated">그런 다음 끝 태그 노드를 읽고, 다음 노드를 읽이 되며 다음 노드로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="1558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsBinHexAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsBinHexAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The following example reads an inline <ph id="ph1">`BinHex`</ph> encoded image.</source>
          <target state="translated">다음 예제에서는 인라인 <ph id="ph1">`BinHex`</ph> 인코딩된 이미지입니다.</target>       </trans-unit>
        <trans-unit id="1560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">`BinHex`</ph> data is embedded within the <ph id="ph2">`&lt;image&gt;`</ph> element.</source>
          <target state="translated"><ph id="ph1">`BinHex`</ph> 데이터 내에 포함 되는 <ph id="ph2">`&lt;image&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="1561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>A <ph id="ph1">&lt;xref:System.IO.BinaryWriter&gt;</ph> is used to create a new binary data file.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.IO.BinaryWriter&gt;</ph> 새 이진 데이터 파일을 만드는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="1562" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1563" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1564" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1565" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The index into the buffer or index + count is larger than the allocated buffer size.</source>
          <target state="translated">버퍼 내의 인덱스 또는 인덱스와 개수를 합한 값이 할당된 버퍼 크기보다 큰 경우</target>       </trans-unit>
        <trans-unit id="1566" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> implementation does not support this method.</source>
          <target state="translated">구현된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>에서 이 메서드를 지원하지 않는 경우</target>       </trans-unit>
        <trans-unit id="1567" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The element contains mixed-content.</source>
          <target state="translated">요소가 혼합 콘텐츠를 포함하는 경우</target>       </trans-unit>
        <trans-unit id="1568" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The content cannot be converted to the requested type.</source>
          <target state="translated">요소를 요청한 형식으로 변환할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="1569" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer into which to copy the resulting text.</source>
          <target state="translated">결과 텍스트를 복사해 넣을 버퍼입니다.</target>       </trans-unit>
        <trans-unit id="1570" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>This value cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1571" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the buffer where to start copying the result.</source>
          <target state="translated">버퍼에 넣을 결과 복사가 시작되는 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="1572" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to copy into the buffer.</source>
          <target state="translated">버퍼에 복사할 최대 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="1573" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>The actual number of bytes copied is returned from this method.</source>
          <target state="translated">복사된 실제 바이트 수가 이 메서드에서 반환됩니다.</target>       </trans-unit>
        <trans-unit id="1574" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>Asynchronously reads the element and decodes the <ph id="ph1">&lt;see langword="BinHex" /&gt;</ph> content.</source>
          <target state="translated">요소를 비동기적으로 읽고 <ph id="ph1">&lt;see langword="BinHex" /&gt;</ph> 콘텐츠를 디코딩합니다.</target>       </trans-unit>
        <trans-unit id="1575" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes written to the buffer.</source>
          <target state="translated">버퍼에 쓴 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="1576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="1577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1578" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1579" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 “비동기 메서드를 사용하려면 XmlReaderSettings.Async를 true로 설정하세요.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1580" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1581" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message “An asynchronous operation is already in progress.”</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1582" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>Reads the current element value as a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> object.</source>
          <target state="translated">현재 요소 값을 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 개체로 읽습니다.</target>       </trans-unit>
        <trans-unit id="1583" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
          <source>Reads the current element and returns the contents as a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> object.</source>
          <target state="translated">현재 요소를 읽고 콘텐츠를 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 개체로 반환합니다.</target>       </trans-unit>
        <trans-unit id="1584" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
          <source>The element content as a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> object.</source>
          <target state="translated">요소 콘텐츠에 해당하는 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
          <source>This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</source>
          <target state="translated">이 메서드는 요소의 내용을 시작 태그를 읽고 판독기 끝 요소 태그를 지나서 이동 합니다.</target>       </trans-unit>
        <trans-unit id="1586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
          <source>It expands entities and ignores processing instructions and comments.</source>
          <target state="translated">엔터티를 확장 하 고 처리 명령과 주석을 무시 합니다.</target>       </trans-unit>
        <trans-unit id="1587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
          <source>The element can only contain simple content.</source>
          <target state="translated">요소에는 단순 콘텐츠 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
          <source>That is, it cannot have child elements.</source>
          <target state="translated">즉, 자식 요소를 가질 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
          <source>If the element content is typed <ph id="ph1">`xsd:boolean`</ph>, the reader returns an unboxed <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> object.</source>
          <target state="translated">요소 콘텐츠를 입력 하는 경우 <ph id="ph1">`xsd:boolean`</ph>, 판독기는 unboxed 반환 <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
          <source>If the content is not typed <ph id="ph1">`xsd:boolean`</ph>, the reader attempts to convert it to a <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> object according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">콘텐츠 형식화 되지 않은 경우 <ph id="ph1">`xsd:boolean`</ph>, 판독기로 변환 하려고 시도 <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> 개체에 정의 된 규칙에 따라는 <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> 권장 합니다.</target>       </trans-unit>
        <trans-unit id="1591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="1592" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1593" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1594" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
          <source>The current element contains child elements.</source>
          <target state="translated">현재 요소에 자식 요소가 포함된 경우</target>       </trans-unit>
        <trans-unit id="1595" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1596" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
          <source>The element content cannot be converted to a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> object.</source>
          <target state="translated">요소 콘텐츠를 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 개체로 변환할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="1597" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
          <source>The method is called with <ph id="ph1">&lt;see langword="null" /&gt;</ph> arguments.</source>
          <target state="translated">메서드가 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 인수를 사용하여 호출된 경우</target>       </trans-unit>
        <trans-unit id="1598" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">요소의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="1599" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
          <source>The namespace URI of the element.</source>
          <target state="translated">요소의 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="1600" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
          <source>Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> object.</source>
          <target state="translated">지정된 로컬 이름과 네임스페이스 URI가 현재 요소의 로컬 이름 및 네임스페이스 URI와 일치하는지 확인한 다음 현재 요소를 읽고 콘텐츠를 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 개체로 반환합니다.</target>       </trans-unit>
        <trans-unit id="1601" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
          <source>The element content as a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> object.</source>
          <target state="translated">요소 콘텐츠에 해당하는 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
          <source>This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</source>
          <target state="translated">이 메서드는 요소의 내용을 시작 태그를 읽고 판독기 끝 요소 태그를 지나서 이동 합니다.</target>       </trans-unit>
        <trans-unit id="1603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
          <source>It expands entities and ignores processing instructions and comments.</source>
          <target state="translated">엔터티를 확장 하 고 처리 명령과 주석을 무시 합니다.</target>       </trans-unit>
        <trans-unit id="1604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
          <source>The element can only contain simple content.</source>
          <target state="translated">요소에는 단순 콘텐츠 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
          <source>That is, it cannot have child elements.</source>
          <target state="translated">즉, 자식 요소를 가질 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
          <source>If the content is typed <ph id="ph1">`xsd:boolean`</ph>, the reader returns an unboxed <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> object.</source>
          <target state="translated">콘텐츠 형식이 경우 <ph id="ph1">`xsd:boolean`</ph>, 판독기는 unboxed 반환 <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
          <source>If the content is not typed <ph id="ph1">`xsd:boolean`</ph>, the reader attempts to convert it to a <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> object according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">콘텐츠 형식화 되지 않은 경우 <ph id="ph1">`xsd:boolean`</ph>, 판독기로 변환 하려고 시도 <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> 개체에 정의 된 규칙에 따라는 <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> 권장 합니다.</target>       </trans-unit>
        <trans-unit id="1608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="1609" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1610" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1611" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
          <source>The current element contains child elements.</source>
          <target state="translated">현재 요소에 자식 요소가 포함된 경우</target>       </trans-unit>
        <trans-unit id="1612" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1613" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
          <source>The element content cannot be converted to the requested type.</source>
          <target state="translated">요소 콘텐츠를 요청한 형식으로 변환할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="1614" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
          <source>The method is called with <ph id="ph1">&lt;see langword="null" /&gt;</ph> arguments.</source>
          <target state="translated">메서드가 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 인수를 사용하여 호출된 경우</target>       </trans-unit>
        <trans-unit id="1615" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
          <source>The specified local name and namespace URI do not match that of the current element being read.</source>
          <target state="translated">지정한 로컬 이름과 네임스페이스 URI가 읽고 있는 현재 요소의 로컬 이름 및 네임스페이스 URI와 일치하지 않는 경우</target>       </trans-unit>
        <trans-unit id="1616" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1617" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message “An asynchronous operation is already in progress.”</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1618" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>Reads the current element and returns the contents as a <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> object.</source>
          <target state="translated">현재 요소를 읽고 콘텐츠를 <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> 개체로 반환합니다.</target>       </trans-unit>
        <trans-unit id="1619" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
          <source>Reads the current element and returns the contents as a <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> object.</source>
          <target state="translated">현재 요소를 읽고 콘텐츠를 <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> 개체로 반환합니다.</target>       </trans-unit>
        <trans-unit id="1620" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
          <source>The element content as a <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> object.</source>
          <target state="translated">요소 콘텐츠에 해당하는 <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
          <source>This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</source>
          <target state="translated">이 메서드는 요소의 내용을 시작 태그를 읽고 판독기 끝 요소 태그를 지나서 이동 합니다.</target>       </trans-unit>
        <trans-unit id="1622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
          <source>It expands entities and ignores processing instructions and comments.</source>
          <target state="translated">엔터티를 확장 하 고 처리 명령과 주석을 무시 합니다.</target>       </trans-unit>
        <trans-unit id="1623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
          <source>The element can only contain simple content.</source>
          <target state="translated">요소에는 단순 콘텐츠 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
          <source>That is, it cannot have child elements.</source>
          <target state="translated">즉, 자식 요소를 가질 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
          <source>If the content is typed <ph id="ph1">`xsd:dateTime`</ph>, the reader returns an unboxed <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> object.</source>
          <target state="translated">콘텐츠 형식이 경우 <ph id="ph1">`xsd:dateTime`</ph>, 판독기는 unboxed 반환 <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
          <source>If the content is not typed <ph id="ph1">`xsd:dateTime`</ph>, the reader attempts to convert it to a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> object according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">콘텐츠 형식화 되지 않은 경우 <ph id="ph1">`xsd:dateTime`</ph>, 판독기로 변환 하려고 시도 <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> 개체에 정의 된 규칙에 따라는 <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> 권장 합니다.</target>       </trans-unit>
        <trans-unit id="1627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
          <source>You cannot rely on the <ph id="ph1">&lt;xref:System.DateTime.Year%2A?displayProperty=nameWithType&gt;</ph> value when the content is typed as <ph id="ph2">`xsd:gMonthDay`</ph>.</source>
          <target state="translated">내용 형식이 <ph id="ph1">&lt;xref:System.DateTime.Year%2A?displayProperty=nameWithType&gt;</ph>로 지정된 경우 <ph id="ph2">`xsd:gMonthDay`</ph> 값을 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> always sets the <ph id="ph2">&lt;xref:System.DateTime.Year%2A?displayProperty=nameWithType&gt;</ph> value to 1904 in this case.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 항상 설정 된 <ph id="ph2">&lt;xref:System.DateTime.Year%2A?displayProperty=nameWithType&gt;</ph> 이 경우 값을 1904 합니다.</target>       </trans-unit>
        <trans-unit id="1629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="1630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsDateTime%2A&gt;</ph> method to read the content of the <ph id="ph2">`date`</ph> element.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsDateTime%2A&gt;</ph> 의 콘텐츠를 읽으려면 메서드는 <ph id="ph2">`date`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="1631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
          <source>The example uses the <ph id="ph1">`dataFile.xml`</ph> file as input.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">`dataFile.xml`</ph> 파일을 입력으로 사용합니다.</target>       </trans-unit>
        <trans-unit id="1632" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1633" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1634" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
          <source>The current element contains child elements.</source>
          <target state="translated">현재 요소에 자식 요소가 포함된 경우</target>       </trans-unit>
        <trans-unit id="1635" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1636" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
          <source>The element content cannot be converted to a <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> object.</source>
          <target state="translated">요소 콘텐츠를 <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> 개체로 변환할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="1637" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
          <source>The method is called with <ph id="ph1">&lt;see langword="null" /&gt;</ph> arguments.</source>
          <target state="translated">메서드가 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 인수를 사용하여 호출된 경우</target>       </trans-unit>
        <trans-unit id="1638" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">요소의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="1639" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
          <source>The namespace URI of the element.</source>
          <target state="translated">요소의 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="1640" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
          <source>Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> object.</source>
          <target state="translated">지정된 로컬 이름과 네임스페이스 URI가 현재 요소의 로컬 이름 및 네임스페이스 URI와 일치하는지 확인한 다음 현재 요소를 읽고 콘텐츠를 <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> 개체로 반환합니다.</target>       </trans-unit>
        <trans-unit id="1641" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
          <source>The element contents as a <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> object.</source>
          <target state="translated">요소 콘텐츠에 해당하는 <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
          <source>This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</source>
          <target state="translated">이 메서드는 요소의 내용을 시작 태그를 읽고 판독기 끝 요소 태그를 지나서 이동 합니다.</target>       </trans-unit>
        <trans-unit id="1643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
          <source>It expands entities and ignores processing instructions and comments.</source>
          <target state="translated">엔터티를 확장 하 고 처리 명령과 주석을 무시 합니다.</target>       </trans-unit>
        <trans-unit id="1644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
          <source>The element can only contain simple content.</source>
          <target state="translated">요소에는 단순 콘텐츠 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
          <source>That is, it cannot have child elements.</source>
          <target state="translated">즉, 자식 요소를 가질 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
          <source>If the content is typed <ph id="ph1">`xsd:dateTime`</ph>, the reader returns an unboxed <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> object.</source>
          <target state="translated">콘텐츠 형식이 경우 <ph id="ph1">`xsd:dateTime`</ph>, 판독기는 unboxed 반환 <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
          <source>If the content is not typed <ph id="ph1">`xsd:dateTime`</ph>, the reader attempts to convert it to a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> object according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">콘텐츠 형식화 되지 않은 경우 <ph id="ph1">`xsd:dateTime`</ph>, 판독기로 변환 하려고 시도 <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> 개체에 정의 된 규칙에 따라는 <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> 권장 합니다.</target>       </trans-unit>
        <trans-unit id="1648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
          <source>You cannot rely on the <ph id="ph1">&lt;xref:System.DateTime.Year%2A?displayProperty=nameWithType&gt;</ph> value when the content is typed as <ph id="ph2">`xsd:gMonthDay`</ph>.</source>
          <target state="translated">내용 형식이 <ph id="ph1">&lt;xref:System.DateTime.Year%2A?displayProperty=nameWithType&gt;</ph>로 지정된 경우 <ph id="ph2">`xsd:gMonthDay`</ph> 값을 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> always sets the <ph id="ph2">&lt;xref:System.DateTime.Year%2A?displayProperty=nameWithType&gt;</ph> value to 1904 in this case.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 항상 설정 된 <ph id="ph2">&lt;xref:System.DateTime.Year%2A?displayProperty=nameWithType&gt;</ph> 이 경우 값을 1904 합니다.</target>       </trans-unit>
        <trans-unit id="1650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="1651" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1652" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1653" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
          <source>The current element contains child elements.</source>
          <target state="translated">현재 요소에 자식 요소가 포함된 경우</target>       </trans-unit>
        <trans-unit id="1654" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1655" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
          <source>The element content cannot be converted to the requested type.</source>
          <target state="translated">요소 콘텐츠를 요청한 형식으로 변환할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="1656" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
          <source>The method is called with <ph id="ph1">&lt;see langword="null" /&gt;</ph> arguments.</source>
          <target state="translated">메서드가 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 인수를 사용하여 호출된 경우</target>       </trans-unit>
        <trans-unit id="1657" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
          <source>The specified local name and namespace URI do not match that of the current element being read.</source>
          <target state="translated">지정한 로컬 이름과 네임스페이스 URI가 읽고 있는 현재 요소의 로컬 이름 및 네임스페이스 URI와 일치하지 않는 경우</target>       </trans-unit>
        <trans-unit id="1658" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1659" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message “An asynchronous operation is already in progress.”</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1660" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>Reads the current element value as a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> object.</source>
          <target state="translated">현재 요소 값을 <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 개체로 읽습니다.</target>       </trans-unit>
        <trans-unit id="1661" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal">
          <source>Reads the current element and returns the contents as a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> object.</source>
          <target state="translated">현재 요소를 읽고 콘텐츠를 <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 개체로 반환합니다.</target>       </trans-unit>
        <trans-unit id="1662" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal">
          <source>The element content as a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> object.</source>
          <target state="translated">요소 콘텐츠에 해당하는 <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal">
          <source>This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</source>
          <target state="translated">이 메서드는 요소의 내용을 시작 태그를 읽고 판독기 끝 요소 태그를 지나서 이동 합니다.</target>       </trans-unit>
        <trans-unit id="1664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal">
          <source>It expands entities and ignores processing instructions and comments.</source>
          <target state="translated">엔터티를 확장 하 고 처리 명령과 주석을 무시 합니다.</target>       </trans-unit>
        <trans-unit id="1665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal">
          <source>The element can only contain simple content.</source>
          <target state="translated">요소에는 단순 콘텐츠 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal">
          <source>That is, it cannot have child elements.</source>
          <target state="translated">즉, 자식 요소를 가질 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal">
          <source>The reader attempts to convert the element content to an <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> object according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">판독기가 요소에 콘텐츠를 변환 하려고는 <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> 개체에 정의 된 규칙에 따라는 <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> 권장 합니다.</target>       </trans-unit>
        <trans-unit id="1668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="1669" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1670" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1671" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal">
          <source>The current element contains child elements.</source>
          <target state="translated">현재 요소에 자식 요소가 포함된 경우</target>       </trans-unit>
        <trans-unit id="1672" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1673" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal">
          <source>The element content cannot be converted to a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">요소 콘텐츠를 <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>로 변환할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="1674" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal">
          <source>The method is called with <ph id="ph1">&lt;see langword="null" /&gt;</ph> arguments.</source>
          <target state="translated">메서드가 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 인수를 사용하여 호출된 경우</target>       </trans-unit>
        <trans-unit id="1675" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">요소의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="1676" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
          <source>The namespace URI of the element.</source>
          <target state="translated">요소의 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="1677" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
          <source>Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> object.</source>
          <target state="translated">지정된 로컬 이름과 네임스페이스 URI가 현재 요소의 로컬 이름 및 네임스페이스 URI와 일치하는지 확인한 다음 현재 요소를 읽고 콘텐츠를 <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 개체로 반환합니다.</target>       </trans-unit>
        <trans-unit id="1678" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
          <source>The element content as a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> object.</source>
          <target state="translated">요소 콘텐츠에 해당하는 <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
          <source>This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</source>
          <target state="translated">이 메서드는 요소의 내용을 시작 태그를 읽고 판독기 끝 요소 태그를 지나서 이동 합니다.</target>       </trans-unit>
        <trans-unit id="1680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
          <source>It expands entities and ignores processing instructions and comments.</source>
          <target state="translated">엔터티를 확장 하 고 처리 명령과 주석을 무시 합니다.</target>       </trans-unit>
        <trans-unit id="1681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
          <source>The element can only contain simple content.</source>
          <target state="translated">요소에는 단순 콘텐츠 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
          <source>That is, it cannot have child elements.</source>
          <target state="translated">즉, 자식 요소를 가질 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
          <source>The reader attempts to convert the element content to an <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> object according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">판독기가 요소에 콘텐츠를 변환 하려고는 <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> 개체에 정의 된 규칙에 따라는 <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> 권장 합니다.</target>       </trans-unit>
        <trans-unit id="1684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="1685" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1686" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1687" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
          <source>The current element contains child elements.</source>
          <target state="translated">현재 요소에 자식 요소가 포함된 경우</target>       </trans-unit>
        <trans-unit id="1688" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1689" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
          <source>The element content cannot be converted to a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">요소 콘텐츠를 <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>로 변환할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="1690" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
          <source>The method is called with <ph id="ph1">&lt;see langword="null" /&gt;</ph> arguments.</source>
          <target state="translated">메서드가 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 인수를 사용하여 호출된 경우</target>       </trans-unit>
        <trans-unit id="1691" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
          <source>The specified local name and namespace URI do not match that of the current element being read.</source>
          <target state="translated">지정한 로컬 이름과 네임스페이스 URI가 읽고 있는 현재 요소의 로컬 이름 및 네임스페이스 URI와 일치하지 않는 경우</target>       </trans-unit>
        <trans-unit id="1692" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1693" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message “An asynchronous operation is already in progress.”</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1694" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>Reads the current element and returns the contents as a double-precision floating-point number.</source>
          <target state="translated">현재 요소를 읽고 콘텐츠를 배정밀도 부동 소수점 숫자로 반환합니다.</target>       </trans-unit>
        <trans-unit id="1695" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble">
          <source>Reads the current element and returns the contents as a double-precision floating-point number.</source>
          <target state="translated">현재 요소를 읽고 콘텐츠를 배정밀도 부동 소수점 숫자로 반환합니다.</target>       </trans-unit>
        <trans-unit id="1696" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble">
          <source>The element content as a double-precision floating-point number.</source>
          <target state="translated">요소 콘텐츠에 해당하는 배정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble">
          <source>This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</source>
          <target state="translated">이 메서드는 요소의 내용을 시작 태그를 읽고 판독기 끝 요소 태그를 지나서 이동 합니다.</target>       </trans-unit>
        <trans-unit id="1698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble">
          <source>It expands entities and ignores processing instructions and comments.</source>
          <target state="translated">엔터티를 확장 하 고 처리 명령과 주석을 무시 합니다.</target>       </trans-unit>
        <trans-unit id="1699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble">
          <source>The element can only contain simple content.</source>
          <target state="translated">요소에는 단순 콘텐츠 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble">
          <source>That is, it cannot have child elements.</source>
          <target state="translated">즉, 자식 요소를 가질 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble">
          <source>If the content is typed <ph id="ph1">`xsd:double`</ph>, the reader returns a double-precision floating-point number.</source>
          <target state="translated">콘텐츠 형식이 경우 <ph id="ph1">`xsd:double`</ph>, 판독기 배정밀도 부동 소수점 숫자를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble">
          <source>If the content is not typed <ph id="ph1">`xsd:double`</ph>, the reader attempts to convert it to a double-precision floating-point number according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">콘텐츠 형식화 되지 않은 경우 <ph id="ph1">`xsd:double`</ph>, 판독기에 정의 된 규칙에 따라 배정밀도 부동 소수점 숫자로 변환 하려고 시도 <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> 권장 합니다.</target>       </trans-unit>
        <trans-unit id="1703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="1704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble">
          <source>The following example uses the method to return the element content as a double-precision floating-point number.</source>
          <target state="translated">다음 예제에서는 메서드를 사용 하 여 요소 콘텐츠에 해당 하는 배정밀도 부동 소수점 숫자를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble">
          <source>The example uses the <ph id="ph1">`dataFile.xml`</ph> file as input.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">`dataFile.xml`</ph> 파일을 입력으로 사용합니다.</target>       </trans-unit>
        <trans-unit id="1706" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1707" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1708" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble">
          <source>The current element contains child elements.</source>
          <target state="translated">현재 요소에 자식 요소가 포함된 경우</target>       </trans-unit>
        <trans-unit id="1709" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1710" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble">
          <source>The element content cannot be converted to a double-precision floating-point number.</source>
          <target state="translated">요소 콘텐츠를 배정밀도 부동 소수점 숫자로 변환할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="1711" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble">
          <source>The method is called with <ph id="ph1">&lt;see langword="null" /&gt;</ph> arguments.</source>
          <target state="translated">메서드가 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 인수를 사용하여 호출된 경우</target>       </trans-unit>
        <trans-unit id="1712" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">요소의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="1713" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
          <source>The namespace URI of the element.</source>
          <target state="translated">요소의 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="1714" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
          <source>Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a double-precision floating-point number.</source>
          <target state="translated">지정된 로컬 이름과 네임스페이스 URI가 현재 요소의 로컬 이름 및 네임스페이스 URI와 일치하는지 확인한 다음 현재 요소를 읽고 콘텐츠를 배정밀도 부동 소수점 숫자로 반환합니다.</target>       </trans-unit>
        <trans-unit id="1715" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
          <source>The element content as a double-precision floating-point number.</source>
          <target state="translated">요소 콘텐츠에 해당하는 배정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
          <source>This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</source>
          <target state="translated">이 메서드는 요소의 내용을 시작 태그를 읽고 판독기 끝 요소 태그를 지나서 이동 합니다.</target>       </trans-unit>
        <trans-unit id="1717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
          <source>It expands entities and ignores processing instructions and comments.</source>
          <target state="translated">엔터티를 확장 하 고 처리 명령과 주석을 무시 합니다.</target>       </trans-unit>
        <trans-unit id="1718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
          <source>The element can only contain simple content.</source>
          <target state="translated">요소에는 단순 콘텐츠 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
          <source>That is, it cannot have child elements.</source>
          <target state="translated">즉, 자식 요소를 가질 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
          <source>If the content is typed <ph id="ph1">`xsd:double`</ph>, the reader returns a double-precision floating-point number.</source>
          <target state="translated">콘텐츠 형식이 경우 <ph id="ph1">`xsd:double`</ph>, 판독기 배정밀도 부동 소수점 숫자를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
          <source>If the content is not typed <ph id="ph1">`xsd:double`</ph>, the reader attempts to convert it to a double-precision floating-point number according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">콘텐츠 형식화 되지 않은 경우 <ph id="ph1">`xsd:double`</ph>, 판독기에 정의 된 규칙에 따라 배정밀도 부동 소수점 숫자로 변환 하려고 시도 <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> 권장 합니다.</target>       </trans-unit>
        <trans-unit id="1722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="1723" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1724" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1725" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
          <source>The current element contains child elements.</source>
          <target state="translated">현재 요소에 자식 요소가 포함된 경우</target>       </trans-unit>
        <trans-unit id="1726" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1727" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
          <source>The element content cannot be converted to the requested type.</source>
          <target state="translated">요소 콘텐츠를 요청한 형식으로 변환할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="1728" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
          <source>The method is called with <ph id="ph1">&lt;see langword="null" /&gt;</ph> arguments.</source>
          <target state="translated">메서드가 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 인수를 사용하여 호출된 경우</target>       </trans-unit>
        <trans-unit id="1729" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
          <source>The specified local name and namespace URI do not match that of the current element being read.</source>
          <target state="translated">지정한 로컬 이름과 네임스페이스 URI가 읽고 있는 현재 요소의 로컬 이름 및 네임스페이스 URI와 일치하지 않는 경우</target>       </trans-unit>
        <trans-unit id="1730" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1731" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message “An asynchronous operation is already in progress.”</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1732" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>Reads the current element value as a single-precision floating-point number.</source>
          <target state="translated">현재 요소 값을 단정밀도 부동 소수점 숫자로 읽습니다.</target>       </trans-unit>
        <trans-unit id="1733" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat">
          <source>Reads the current element and returns the contents as single-precision floating-point number.</source>
          <target state="translated">현재 요소를 읽고 콘텐츠를 단정밀도 부동 소수점 숫자로 반환합니다.</target>       </trans-unit>
        <trans-unit id="1734" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat">
          <source>The element content as a single-precision floating point number.</source>
          <target state="translated">요소 콘텐츠에 해당하는 단정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat">
          <source>This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</source>
          <target state="translated">이 메서드는 요소의 내용을 시작 태그를 읽고 판독기 끝 요소 태그를 지나서 이동 합니다.</target>       </trans-unit>
        <trans-unit id="1736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat">
          <source>It expands entities and ignores processing instructions and comments.</source>
          <target state="translated">엔터티를 확장 하 고 처리 명령과 주석을 무시 합니다.</target>       </trans-unit>
        <trans-unit id="1737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat">
          <source>The element can only contain simple content.</source>
          <target state="translated">요소에는 단순 콘텐츠 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat">
          <source>That is, it cannot have child elements.</source>
          <target state="translated">즉, 자식 요소를 가질 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat">
          <source>The reader attempts to convert the element content to a single-precision floating point number according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">판독기가 요소 콘텐츠에 해당 하는 단 정밀도 부동 소수점 숫자에 정의 된 규칙에 따라 변환 하려고는 <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> 권장 합니다.</target>       </trans-unit>
        <trans-unit id="1740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="1741" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1742" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1743" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat">
          <source>The current element contains child elements.</source>
          <target state="translated">현재 요소에 자식 요소가 포함된 경우</target>       </trans-unit>
        <trans-unit id="1744" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1745" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat">
          <source>The element content cannot be converted to a single-precision floating-point number.</source>
          <target state="translated">요소 콘텐츠를 단정밀도 부동 소수점 숫자로 변환할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="1746" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat">
          <source>The method is called with <ph id="ph1">&lt;see langword="null" /&gt;</ph> arguments.</source>
          <target state="translated">메서드가 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 인수를 사용하여 호출된 경우</target>       </trans-unit>
        <trans-unit id="1747" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">요소의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="1748" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
          <source>The namespace URI of the element.</source>
          <target state="translated">요소의 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="1749" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
          <source>Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a single-precision floating-point number.</source>
          <target state="translated">지정된 로컬 이름과 네임스페이스 URI가 현재 요소의 로컬 이름 및 네임스페이스 URI와 일치하는지 확인한 다음 현재 요소를 읽고 콘텐츠를 단정밀도 부동 소수점 숫자로 반환합니다.</target>       </trans-unit>
        <trans-unit id="1750" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
          <source>The element content as a single-precision floating point number.</source>
          <target state="translated">요소 콘텐츠에 해당하는 단정밀도 부동 소수점 숫자입니다.</target>       </trans-unit>
        <trans-unit id="1751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
          <source>This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</source>
          <target state="translated">이 메서드는 요소의 내용을 시작 태그를 읽고 판독기 끝 요소 태그를 지나서 이동 합니다.</target>       </trans-unit>
        <trans-unit id="1752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
          <source>It expands entities and ignores processing instructions and comments.</source>
          <target state="translated">엔터티를 확장 하 고 처리 명령과 주석을 무시 합니다.</target>       </trans-unit>
        <trans-unit id="1753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
          <source>The element can only contain simple content.</source>
          <target state="translated">요소에는 단순 콘텐츠 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
          <source>That is, it cannot have child elements.</source>
          <target state="translated">즉, 자식 요소를 가질 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
          <source>The reader attempts to convert the element content to a single-precision floating point number according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">판독기가 요소 콘텐츠에 해당 하는 단 정밀도 부동 소수점 숫자에 정의 된 규칙에 따라 변환 하려고는 <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> 권장 합니다.</target>       </trans-unit>
        <trans-unit id="1756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="1757" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1758" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1759" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
          <source>The current element contains child elements.</source>
          <target state="translated">현재 요소에 자식 요소가 포함된 경우</target>       </trans-unit>
        <trans-unit id="1760" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1761" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
          <source>The element content cannot be converted to a single-precision floating-point number.</source>
          <target state="translated">요소 콘텐츠를 단정밀도 부동 소수점 숫자로 변환할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="1762" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
          <source>The method is called with <ph id="ph1">&lt;see langword="null" /&gt;</ph> arguments.</source>
          <target state="translated">메서드가 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 인수를 사용하여 호출된 경우</target>       </trans-unit>
        <trans-unit id="1763" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
          <source>The specified local name and namespace URI do not match that of the current element being read.</source>
          <target state="translated">지정한 로컬 이름과 네임스페이스 URI가 읽고 있는 현재 요소의 로컬 이름 및 네임스페이스 URI와 일치하지 않는 경우</target>       </trans-unit>
        <trans-unit id="1764" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1765" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message “An asynchronous operation is already in progress.”</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1766" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>Reads the current element and returns the contents as a 32-bit signed integer.</source>
          <target state="translated">현재 요소를 읽고 부호 있는 32비트 정수로 콘텐츠를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1767" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsInt">
          <source>Reads the current element and returns the contents as a 32-bit signed integer.</source>
          <target state="translated">현재 요소를 읽고 부호 있는 32비트 정수로 콘텐츠를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1768" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsInt">
          <source>The element content as a 32-bit signed integer.</source>
          <target state="translated">요소 콘텐츠에 해당하는 부호 있는 32비트 정수입니다.</target>       </trans-unit>
        <trans-unit id="1769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsInt">
          <source>This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</source>
          <target state="translated">이 메서드는 요소의 내용을 시작 태그를 읽고 판독기 끝 요소 태그를 지나서 이동 합니다.</target>       </trans-unit>
        <trans-unit id="1770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsInt">
          <source>It expands entities and ignores processing instructions and comments.</source>
          <target state="translated">엔터티를 확장 하 고 처리 명령과 주석을 무시 합니다.</target>       </trans-unit>
        <trans-unit id="1771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsInt">
          <source>The element can only contain simple content.</source>
          <target state="translated">요소에는 단순 콘텐츠 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsInt">
          <source>That is, it cannot have child elements.</source>
          <target state="translated">즉, 자식 요소를 가질 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsInt">
          <source>If the content is typed <ph id="ph1">`xsd:integer`</ph>, the reader returns an unboxed 32-bit signed integer.</source>
          <target state="translated">콘텐츠 형식이 경우 <ph id="ph1">`xsd:integer`</ph>, 판독기 unboxed 32 비트 부호 있는 정수를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsInt">
          <source>If the content is not typed <ph id="ph1">`xsd:integer`</ph>, the reader attempts to convert it to a 32-bit signed integer according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">콘텐츠 형식화 되지 않은 경우 <ph id="ph1">`xsd:integer`</ph>, 판독기에 정의 된 규칙에 따라 32 비트 부호 있는 정수로 변환 하려고 시도 <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> 권장 합니다.</target>       </trans-unit>
        <trans-unit id="1775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsInt">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="1776" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsInt">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1777" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsInt">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1778" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsInt">
          <source>The current element contains child elements.</source>
          <target state="translated">현재 요소에 자식 요소가 포함된 경우</target>       </trans-unit>
        <trans-unit id="1779" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsInt">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1780" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsInt">
          <source>The element content cannot be converted to a 32-bit signed integer.</source>
          <target state="translated">요소 콘텐츠를 부호 있는 32비트 정수로 변환할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="1781" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsInt">
          <source>The method is called with <ph id="ph1">&lt;see langword="null" /&gt;</ph> arguments.</source>
          <target state="translated">메서드가 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 인수를 사용하여 호출된 경우</target>       </trans-unit>
        <trans-unit id="1782" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">요소의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="1783" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
          <source>The namespace URI of the element.</source>
          <target state="translated">요소의 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="1784" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
          <source>Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a 32-bit signed integer.</source>
          <target state="translated">지정된 로컬 이름과 네임스페이스 URI가 현재 요소의 로컬 이름 및 네임스페이스 URI와 일치하는지 확인한 다음 현재 요소를 읽고 콘텐츠를 부호 있는 32비트 정수로 반환합니다.</target>       </trans-unit>
        <trans-unit id="1785" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
          <source>The element content as a 32-bit signed integer.</source>
          <target state="translated">요소 콘텐츠에 해당하는 부호 있는 32비트 정수입니다.</target>       </trans-unit>
        <trans-unit id="1786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
          <source>This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</source>
          <target state="translated">이 메서드는 요소의 내용을 시작 태그를 읽고 판독기 끝 요소 태그를 지나서 이동 합니다.</target>       </trans-unit>
        <trans-unit id="1787" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
          <source>It expands entities and ignores processing instructions and comments.</source>
          <target state="translated">엔터티를 확장 하 고 처리 명령과 주석을 무시 합니다.</target>       </trans-unit>
        <trans-unit id="1788" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
          <source>The element can only contain simple content.</source>
          <target state="translated">요소에는 단순 콘텐츠 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1789" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
          <source>That is, it cannot have child elements.</source>
          <target state="translated">즉, 자식 요소를 가질 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
          <source>If the content is typed <ph id="ph1">`xsd:integer`</ph>, the reader returns an unboxed 32-bit signed integer.</source>
          <target state="translated">콘텐츠 형식이 경우 <ph id="ph1">`xsd:integer`</ph>, 판독기 unboxed 32 비트 부호 있는 정수를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
          <source>If the content is not typed <ph id="ph1">`xsd:integer`</ph>, the reader attempts to convert it to a 32-bit signed integer according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">콘텐츠 형식화 되지 않은 경우 <ph id="ph1">`xsd:integer`</ph>, 판독기에 정의 된 규칙에 따라 32 비트 부호 있는 정수로 변환 하려고 시도 <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> 권장 합니다.</target>       </trans-unit>
        <trans-unit id="1792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="1793" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1794" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1795" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
          <source>The current element contains child elements.</source>
          <target state="translated">현재 요소에 자식 요소가 포함된 경우</target>       </trans-unit>
        <trans-unit id="1796" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1797" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
          <source>The element content cannot be converted to a 32-bit signed integer.</source>
          <target state="translated">요소 콘텐츠를 부호 있는 32비트 정수로 변환할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="1798" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
          <source>The method is called with <ph id="ph1">&lt;see langword="null" /&gt;</ph> arguments.</source>
          <target state="translated">메서드가 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 인수를 사용하여 호출된 경우</target>       </trans-unit>
        <trans-unit id="1799" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
          <source>The specified local name and namespace URI do not match that of the current element being read.</source>
          <target state="translated">지정한 로컬 이름과 네임스페이스 URI가 읽고 있는 현재 요소의 로컬 이름 및 네임스페이스 URI와 일치하지 않는 경우</target>       </trans-unit>
        <trans-unit id="1800" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1801" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message “An asynchronous operation is already in progress.”</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1802" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>Reads the current element and returns the contents as a 64-bit signed integer.</source>
          <target state="translated">현재 요소를 읽고 부호 있는 64비트 정수로 콘텐츠를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1803" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsLong">
          <source>Reads the current element and returns the contents as a 64-bit signed integer.</source>
          <target state="translated">현재 요소를 읽고 부호 있는 64비트 정수로 콘텐츠를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1804" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsLong">
          <source>The element content as a 64-bit signed integer.</source>
          <target state="translated">요소 콘텐츠에 해당하는 부호 있는 64비트 정수입니다.</target>       </trans-unit>
        <trans-unit id="1805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsLong">
          <source>This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</source>
          <target state="translated">이 메서드는 요소의 내용을 시작 태그를 읽고 판독기 끝 요소 태그를 지나서 이동 합니다.</target>       </trans-unit>
        <trans-unit id="1806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsLong">
          <source>It expands entities and ignores processing instructions and comments.</source>
          <target state="translated">엔터티를 확장 하 고 처리 명령과 주석을 무시 합니다.</target>       </trans-unit>
        <trans-unit id="1807" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsLong">
          <source>The element can only contain simple content.</source>
          <target state="translated">요소에는 단순 콘텐츠 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1808" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsLong">
          <source>That is, it cannot have child elements.</source>
          <target state="translated">즉, 자식 요소를 가질 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsLong">
          <source>If the content is typed <ph id="ph1">`xsd:long`</ph>, the reader returns an unboxed 64-bit signed integer.</source>
          <target state="translated">콘텐츠 형식이 경우 <ph id="ph1">`xsd:long`</ph>, 판독기 unboxed 64 비트 부호 있는 정수를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsLong">
          <source>If the content is not typed <ph id="ph1">`xsd:long`</ph>, the reader attempts to convert it to a 64-bit signed integer according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">콘텐츠 형식화 되지 않은 경우 <ph id="ph1">`xsd:long`</ph>, 판독기에 정의 된 규칙에 따라 64 비트 부호 있는 정수로 변환 하려고 시도 <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> 권장 합니다.</target>       </trans-unit>
        <trans-unit id="1811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsLong">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="1812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsLong">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsLong%2A&gt;</ph> method to read the content of the <ph id="ph2">`longValue`</ph> element.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsLong%2A&gt;</ph> 의 콘텐츠를 읽으려면 메서드는 <ph id="ph2">`longValue`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="1813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsLong">
          <source>The example uses the <ph id="ph1">`dataFile.xml`</ph> file as input.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">`dataFile.xml`</ph> 파일을 입력으로 사용합니다.</target>       </trans-unit>
        <trans-unit id="1814" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsLong">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1815" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsLong">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1816" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsLong">
          <source>The current element contains child elements.</source>
          <target state="translated">현재 요소에 자식 요소가 포함된 경우</target>       </trans-unit>
        <trans-unit id="1817" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsLong">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1818" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsLong">
          <source>The element content cannot be converted to a 64-bit signed integer.</source>
          <target state="translated">요소 콘텐츠를 부호 있는 64비트 정수로 변환할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="1819" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsLong">
          <source>The method is called with <ph id="ph1">&lt;see langword="null" /&gt;</ph> arguments.</source>
          <target state="translated">메서드가 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 인수를 사용하여 호출된 경우</target>       </trans-unit>
        <trans-unit id="1820" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">요소의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="1821" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
          <source>The namespace URI of the element.</source>
          <target state="translated">요소의 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="1822" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
          <source>Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a 64-bit signed integer.</source>
          <target state="translated">지정된 로컬 이름과 네임스페이스 URI가 현재 요소의 로컬 이름 및 네임스페이스 URI와 일치하는지 확인한 다음 현재 요소를 읽고 콘텐츠를 부호 있는 64비트 정수로 반환합니다.</target>       </trans-unit>
        <trans-unit id="1823" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
          <source>The element content as a 64-bit signed integer.</source>
          <target state="translated">요소 콘텐츠에 해당하는 부호 있는 64비트 정수입니다.</target>       </trans-unit>
        <trans-unit id="1824" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
          <source>This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</source>
          <target state="translated">이 메서드는 요소의 내용을 시작 태그를 읽고 판독기 끝 요소 태그를 지나서 이동 합니다.</target>       </trans-unit>
        <trans-unit id="1825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
          <source>It expands entities and ignores processing instructions and comments.</source>
          <target state="translated">엔터티를 확장 하 고 처리 명령과 주석을 무시 합니다.</target>       </trans-unit>
        <trans-unit id="1826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
          <source>The element can only contain simple content.</source>
          <target state="translated">요소에는 단순 콘텐츠 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
          <source>That is, it cannot have child elements.</source>
          <target state="translated">즉, 자식 요소를 가질 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
          <source>If the content is typed <ph id="ph1">`xsd:long`</ph>, the reader returns an unboxed 64-bit signed integer.</source>
          <target state="translated">콘텐츠 형식이 경우 <ph id="ph1">`xsd:long`</ph>, 판독기 unboxed 64 비트 부호 있는 정수를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
          <source>If the content is not typed <ph id="ph1">`xsd:long`</ph>, the reader attempts to convert it to a 64-bit signed integer according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">콘텐츠 형식화 되지 않은 경우 <ph id="ph1">`xsd:long`</ph>, 판독기에 정의 된 규칙에 따라 64 비트 부호 있는 정수로 변환 하려고 시도 <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> 권장 합니다.</target>       </trans-unit>
        <trans-unit id="1830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지의 설명 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="1831" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1832" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1833" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
          <source>The current element contains child elements.</source>
          <target state="translated">현재 요소에 자식 요소가 포함된 경우</target>       </trans-unit>
        <trans-unit id="1834" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1835" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
          <source>The element content cannot be converted to a 64-bit signed integer.</source>
          <target state="translated">요소 콘텐츠를 부호 있는 64비트 정수로 변환할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="1836" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
          <source>The method is called with <ph id="ph1">&lt;see langword="null" /&gt;</ph> arguments.</source>
          <target state="translated">메서드가 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 인수를 사용하여 호출된 경우</target>       </trans-unit>
        <trans-unit id="1837" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
          <source>The specified local name and namespace URI do not match that of the current element being read.</source>
          <target state="translated">지정한 로컬 이름과 네임스페이스 URI가 읽고 있는 현재 요소의 로컬 이름 및 네임스페이스 URI와 일치하지 않는 경우</target>       </trans-unit>
        <trans-unit id="1838" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1839" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message “An asynchronous operation is already in progress.”</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1840" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>Reads the current element and returns the contents as an <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">현재 요소를 읽고 콘텐츠를 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>로 반환합니다.</target>       </trans-unit>
        <trans-unit id="1841" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject">
          <source>Reads the current element and returns the contents as an <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">현재 요소를 읽고 콘텐츠를 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>로 반환합니다.</target>       </trans-unit>
        <trans-unit id="1842" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject">
          <source>A boxed common language runtime (CLR) object of the most appropriate type.</source>
          <target state="translated">가장 적합한 형식의 boxed CLR(공용 언어 런타임) 개체입니다.</target>       </trans-unit>
        <trans-unit id="1843" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject">
          <source>The <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.ValueType" /&gt;</ph> property determines the appropriate CLR type.</source>
          <target state="translated">적합한 CLR 형식은 <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.ValueType" /&gt;</ph> 속성에 따라 결정됩니다.</target>       </trans-unit>
        <trans-unit id="1844" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject">
          <source>If the content is typed as a list type, this method returns an array of boxed objects of the appropriate type.</source>
          <target state="translated">콘텐츠가 목록 형식이면 이 메서드는 적합한 형식의 boxed 개체 배열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsObject">
          <source>This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</source>
          <target state="translated">이 메서드는 요소의 내용을 시작 태그를 읽고 판독기 끝 요소 태그를 지나서 이동 합니다.</target>       </trans-unit>
        <trans-unit id="1846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsObject">
          <source>It expands entities and ignores processing instructions and comments.</source>
          <target state="translated">엔터티를 확장 하 고 처리 명령과 주석을 무시 합니다.</target>       </trans-unit>
        <trans-unit id="1847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsObject">
          <source>The element can only contain simple content.</source>
          <target state="translated">요소에는 단순 콘텐츠 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1848" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsObject">
          <source>That is, it cannot have child elements.</source>
          <target state="translated">즉, 자식 요소를 가질 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1849" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsObject">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page and the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지 및 <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> 권장 구성 합니다.</target>       </trans-unit>
        <trans-unit id="1850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsObject">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsObjectAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsObjectAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsObject">
          <source>The following example uses the method to read the content of the <ph id="ph1">`price`</ph> node.</source>
          <target state="translated">다음 예제에서는 메서드를 사용 하 여의 내용을 읽을 수는 <ph id="ph1">`price`</ph> 노드.</target>       </trans-unit>
        <trans-unit id="1852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsObject">
          <source>The reader uses the information in the schema to map the content to the correct data type.</source>
          <target state="translated">판독기는 스키마에는 정보를 사용 하 여 콘텐츠 올바른 데이터 형식에 매핑됩니다.</target>       </trans-unit>
        <trans-unit id="1853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsObject">
          <source>The example uses the following two files as input.</source>
          <target state="translated">이 예제에서는 입력으로 다음 두 파일을 사용합니다.</target>       </trans-unit>
        <trans-unit id="1854" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1855" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1856" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject">
          <source>The current element contains child elements.</source>
          <target state="translated">현재 요소에 자식 요소가 포함된 경우</target>       </trans-unit>
        <trans-unit id="1857" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1858" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject">
          <source>The element content cannot be converted to the requested type</source>
          <target state="translated">요소 콘텐츠를 요청한 형식으로 변환할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="1859" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject">
          <source>The method is called with <ph id="ph1">&lt;see langword="null" /&gt;</ph> arguments.</source>
          <target state="translated">메서드가 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 인수를 사용하여 호출된 경우</target>       </trans-unit>
        <trans-unit id="1860" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">요소의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="1861" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
          <source>The namespace URI of the element.</source>
          <target state="translated">요소의 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="1862" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
          <source>Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as an <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">지정된 로컬 이름과 네임스페이스 URI가 현재 요소의 로컬 이름 및 네임스페이스 URI와 일치하는지 확인한 다음 현재 요소를 읽고 콘텐츠를 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>로 반환합니다.</target>       </trans-unit>
        <trans-unit id="1863" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
          <source>A boxed common language runtime (CLR) object of the most appropriate type.</source>
          <target state="translated">가장 적합한 형식의 boxed CLR(공용 언어 런타임) 개체입니다.</target>       </trans-unit>
        <trans-unit id="1864" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.ValueType" /&gt;</ph> property determines the appropriate CLR type.</source>
          <target state="translated">적합한 CLR 형식은 <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.ValueType" /&gt;</ph> 속성에 따라 결정됩니다.</target>       </trans-unit>
        <trans-unit id="1865" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
          <source>If the content is typed as a list type, this method returns an array of boxed objects of the appropriate type.</source>
          <target state="translated">콘텐츠가 목록 형식이면 이 메서드는 적합한 형식의 boxed 개체 배열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
          <source>This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</source>
          <target state="translated">이 메서드는 요소의 내용을 시작 태그를 읽고 판독기 끝 요소 태그를 지나서 이동 합니다.</target>       </trans-unit>
        <trans-unit id="1867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
          <source>It expands entities and ignores processing instructions and comments.</source>
          <target state="translated">엔터티를 확장 하 고 처리 명령과 주석을 무시 합니다.</target>       </trans-unit>
        <trans-unit id="1868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
          <source>The element can only contain simple content.</source>
          <target state="translated">요소에는 단순 콘텐츠 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1869" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
          <source>That is, it cannot have child elements.</source>
          <target state="translated">즉, 자식 요소를 가질 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page and the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지 및 <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> 권장 구성 합니다.</target>       </trans-unit>
        <trans-unit id="1871" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1872" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1873" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
          <source>The current element contains child elements.</source>
          <target state="translated">현재 요소에 자식 요소가 포함된 경우</target>       </trans-unit>
        <trans-unit id="1874" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1875" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
          <source>The element content cannot be converted to the requested type.</source>
          <target state="translated">요소 콘텐츠를 요청한 형식으로 변환할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="1876" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
          <source>The method is called with <ph id="ph1">&lt;see langword="null" /&gt;</ph> arguments.</source>
          <target state="translated">메서드가 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 인수를 사용하여 호출된 경우</target>       </trans-unit>
        <trans-unit id="1877" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
          <source>The specified local name and namespace URI do not match that of the current element being read.</source>
          <target state="translated">지정한 로컬 이름과 네임스페이스 URI가 읽고 있는 현재 요소의 로컬 이름 및 네임스페이스 URI와 일치하지 않는 경우</target>       </trans-unit>
        <trans-unit id="1878" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObjectAsync">
          <source>Asynchronously reads the current element and returns the contents as an <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">현재 요소를 비동기적으로 읽고 콘텐츠를 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>로 반환합니다.</target>       </trans-unit>
        <trans-unit id="1879" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObjectAsync">
          <source>A boxed common language runtime (CLR) object of the most appropriate type.</source>
          <target state="translated">가장 적합한 형식의 boxed CLR(공용 언어 런타임) 개체입니다.</target>       </trans-unit>
        <trans-unit id="1880" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObjectAsync">
          <source>The <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.ValueType" /&gt;</ph> property determines the appropriate CLR type.</source>
          <target state="translated">적합한 CLR 형식은 <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.ValueType" /&gt;</ph> 속성에 따라 결정됩니다.</target>       </trans-unit>
        <trans-unit id="1881" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObjectAsync">
          <source>If the content is typed as a list type, this method returns an array of boxed objects of the appropriate type.</source>
          <target state="translated">콘텐츠가 목록 형식이면 이 메서드는 적합한 형식의 boxed 개체 배열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsObjectAsync">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsObject%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsObject%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="1883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsObjectAsync">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1884" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObjectAsync">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1885" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObjectAsync">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 “비동기 메서드를 사용하려면 XmlReaderSettings.Async를 true로 설정하세요.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1886" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1887" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message “An asynchronous operation is already in progress.”</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1888" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>Reads the current element and returns the contents as a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> object.</source>
          <target state="translated">현재 요소를 읽고 콘텐츠를 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 개체로 반환합니다.</target>       </trans-unit>
        <trans-unit id="1889" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsString">
          <source>Reads the current element and returns the contents as a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> object.</source>
          <target state="translated">현재 요소를 읽고 콘텐츠를 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 개체로 반환합니다.</target>       </trans-unit>
        <trans-unit id="1890" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsString">
          <source>The element content as a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> object.</source>
          <target state="translated">요소 콘텐츠에 해당하는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1891" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsString">
          <source>This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</source>
          <target state="translated">이 메서드는 요소의 내용을 시작 태그를 읽고 판독기 끝 요소 태그를 지나서 이동 합니다.</target>       </trans-unit>
        <trans-unit id="1892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsString">
          <source>It expands entities and ignores processing instructions and comments.</source>
          <target state="translated">엔터티를 확장 하 고 처리 명령과 주석을 무시 합니다.</target>       </trans-unit>
        <trans-unit id="1893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsString">
          <source>The element can only contain simple content.</source>
          <target state="translated">요소에는 단순 콘텐츠 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsString">
          <source>That is, it cannot have child elements.</source>
          <target state="translated">즉, 자식 요소를 가질 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsString">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page and the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지 및 <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> 권장 구성 합니다.</target>       </trans-unit>
        <trans-unit id="1896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsString">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsStringAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsStringAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsString">
          <source>The following example reads the <ph id="ph1">`stringValue`</ph> element and returns the text content (ignoring the comment and processing instruction).</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`stringValue`</ph> 요소의 텍스트 콘텐츠 (주석을 무시 및 처리 명령)를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsString">
          <source>The example uses the <ph id="ph1">`dataFile.xml`</ph> file as input.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">`dataFile.xml`</ph> 파일을 입력으로 사용합니다.</target>       </trans-unit>
        <trans-unit id="1899" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsString">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1900" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsString">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1901" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsString">
          <source>The current element contains child elements.</source>
          <target state="translated">현재 요소에 자식 요소가 포함된 경우</target>       </trans-unit>
        <trans-unit id="1902" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsString">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1903" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsString">
          <source>The element content cannot be converted to a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> object.</source>
          <target state="translated">요소 콘텐츠를 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 개체로 변환할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="1904" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsString">
          <source>The method is called with <ph id="ph1">&lt;see langword="null" /&gt;</ph> arguments.</source>
          <target state="translated">메서드가 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 인수를 사용하여 호출된 경우</target>       </trans-unit>
        <trans-unit id="1905" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">요소의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="1906" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
          <source>The namespace URI of the element.</source>
          <target state="translated">요소의 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="1907" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
          <source>Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> object.</source>
          <target state="translated">지정된 로컬 이름과 네임스페이스 URI가 현재 요소의 로컬 이름 및 네임스페이스 URI와 일치하는지 확인한 다음 현재 요소를 읽고 콘텐츠를 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 개체로 반환합니다.</target>       </trans-unit>
        <trans-unit id="1908" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
          <source>The element content as a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> object.</source>
          <target state="translated">요소 콘텐츠에 해당하는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1909" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
          <source>This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</source>
          <target state="translated">이 메서드는 요소의 내용을 시작 태그를 읽고 판독기 끝 요소 태그를 지나서 이동 합니다.</target>       </trans-unit>
        <trans-unit id="1910" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
          <source>It expands entities and ignores processing instructions and comments.</source>
          <target state="translated">엔터티를 확장 하 고 처리 명령과 주석을 무시 합니다.</target>       </trans-unit>
        <trans-unit id="1911" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
          <source>The element can only contain simple content.</source>
          <target state="translated">요소에는 단순 콘텐츠 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1912" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
          <source>That is, it cannot have child elements.</source>
          <target state="translated">즉, 자식 요소를 가질 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1913" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page and the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 참조 페이지 및 <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> 권장 구성 합니다.</target>       </trans-unit>
        <trans-unit id="1914" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
          <source>The following example reads the <ph id="ph1">`stringValue`</ph> element and returns the text content (ignoring the comment and processing instruction).</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`stringValue`</ph> 요소의 텍스트 콘텐츠 (주석을 무시 및 처리 명령)를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1915" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
          <source>The example uses the <ph id="ph1">`dataFile.xml`</ph> file as input.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">`dataFile.xml`</ph> 파일을 입력으로 사용합니다.</target>       </trans-unit>
        <trans-unit id="1916" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1917" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1918" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
          <source>The current element contains child elements.</source>
          <target state="translated">현재 요소에 자식 요소가 포함된 경우</target>       </trans-unit>
        <trans-unit id="1919" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1920" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
          <source>The element content cannot be converted to a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> object.</source>
          <target state="translated">요소 콘텐츠를 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 개체로 변환할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="1921" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
          <source>The method is called with <ph id="ph1">&lt;see langword="null" /&gt;</ph> arguments.</source>
          <target state="translated">메서드가 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 인수를 사용하여 호출된 경우</target>       </trans-unit>
        <trans-unit id="1922" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
          <source>The specified local name and namespace URI do not match that of the current element being read.</source>
          <target state="translated">지정한 로컬 이름과 네임스페이스 URI가 읽고 있는 현재 요소의 로컬 이름 및 네임스페이스 URI와 일치하지 않는 경우</target>       </trans-unit>
        <trans-unit id="1923" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsStringAsync">
          <source>Asynchronously reads the current element and returns the contents as a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> object.</source>
          <target state="translated">현재 요소를 비동기적으로 읽고 콘텐츠를 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 개체로 반환합니다.</target>       </trans-unit>
        <trans-unit id="1924" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsStringAsync">
          <source>The element content as a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> object.</source>
          <target state="translated">요소 콘텐츠에 해당하는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1925" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsStringAsync">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsString%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsString%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="1926" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsStringAsync">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1927" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsStringAsync">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1928" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsStringAsync">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 “비동기 메서드를 사용하려면 XmlReaderSettings.Async를 true로 설정하세요.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1929" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1930" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1931" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>Reads the simple text-only elements.</source>
          <target state="translated">단순 텍스트 전용 요소를 읽습니다.</target>       </trans-unit>
        <trans-unit id="1932" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>However, we recommend that you use the <ph id="ph1">&lt;see cref="Overload:System.Xml.XmlReader.ReadElementContentAsString" /&gt;</ph> method instead, because it provides a more straightforward way to handle this operation.</source>
          <target state="translated">그러나 이 연산을 더 간단하게 처리하는 방법을 제공하는 <ph id="ph1">&lt;see cref="Overload:System.Xml.XmlReader.ReadElementContentAsString" /&gt;</ph> 메서드를 대신 사용하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="1933" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>We recommend that you use the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsString%2A&gt;</ph> method to read a text element.</source>
          <target state="translated">사용 하는 것이 좋습니다는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsString%2A&gt;</ph> 메서드 텍스트 요소를 읽습니다.</target>       </trans-unit>
        <trans-unit id="1934" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString">
          <source>Reads a text-only element.</source>
          <target state="translated">텍스트 전용 요소를 읽습니다.</target>       </trans-unit>
        <trans-unit id="1935" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString">
          <source>However, we recommend that you use the <ph id="ph1">&lt;see cref="M:System.Xml.XmlReader.ReadElementContentAsString" /&gt;</ph> method instead, because it provides a more straightforward way to handle this operation.</source>
          <target state="translated">그러나 이 연산을 더 간단하게 처리하는 방법을 제공하는 <ph id="ph1">&lt;see cref="M:System.Xml.XmlReader.ReadElementContentAsString" /&gt;</ph> 메서드를 대신 사용하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="1936" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString">
          <source>The text contained in the element that was read.</source>
          <target state="translated">읽은 요소에 포함된 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="1937" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString">
          <source>An empty string if the element is empty.</source>
          <target state="translated">요소가 비어 있으면 빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1938" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementString">
          <source>We recommend that you use the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsString&gt;</ph> method to read a text element.</source>
          <target state="translated">사용 하는 것이 좋습니다는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsString&gt;</ph> 메서드 텍스트 요소를 읽습니다.</target>       </trans-unit>
        <trans-unit id="1939" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString">
          <source>The next content node is not a start tag; or the element found does not contain a simple text value.</source>
          <target state="translated">다음 콘텐츠 노드가 시작 태그가 아니거나 찾은 요소에 간단한 텍스트 값이 없는 경우</target>       </trans-unit>
        <trans-unit id="1940" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1941" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1942" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString(System.String)">
          <source>The name to check.</source>
          <target state="translated">확인할 이름입니다.</target>       </trans-unit>
        <trans-unit id="1943" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString(System.String)">
          <source>Checks that the <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.Name" /&gt;</ph> property of the element found matches the given string before reading a text-only element.</source>
          <target state="translated">텍스트 전용 요소를 읽기 전에 찾은 요소의 <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.Name" /&gt;</ph> 속성이 지정된 문자열과 일치하는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="1944" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString(System.String)">
          <source>However, we recommend that you use the <ph id="ph1">&lt;see cref="M:System.Xml.XmlReader.ReadElementContentAsString" /&gt;</ph> method instead, because it provides a more straightforward way to handle this operation.</source>
          <target state="translated">그러나 이 연산을 더 간단하게 처리하는 방법을 제공하는 <ph id="ph1">&lt;see cref="M:System.Xml.XmlReader.ReadElementContentAsString" /&gt;</ph> 메서드를 대신 사용하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="1945" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString(System.String)">
          <source>The text contained in the element that was read.</source>
          <target state="translated">읽은 요소에 포함된 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="1946" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString(System.String)">
          <source>An empty string if the element is empty.</source>
          <target state="translated">요소가 비어 있으면 빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1947" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementString(System.String)">
          <source>We recommend that you use the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsString&gt;</ph> method to read a text element.</source>
          <target state="translated">사용 하는 것이 좋습니다는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsString&gt;</ph> 메서드 텍스트 요소를 읽습니다.</target>       </trans-unit>
        <trans-unit id="1948" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString(System.String)">
          <source>If the next content node is not a start tag; if the element <ph id="ph1">&lt;see langword="Name" /&gt;</ph> does not match the given argument; or if the element found does not contain a simple text value.</source>
          <target state="translated">다음 콘텐츠 노드가 시작 태그가 아닌 경우, <ph id="ph1">&lt;see langword="Name" /&gt;</ph> 요소가 지정된 인수와 일치하지 않는 경우 또는 찾은 요소에 간단한 텍스트 값이 없는 경우</target>       </trans-unit>
        <trans-unit id="1949" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1950" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1951" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString(System.String,System.String)">
          <source>The local name to check.</source>
          <target state="translated">확인할 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="1952" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString(System.String,System.String)">
          <source>The namespace URI to check.</source>
          <target state="translated">확인할 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="1953" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString(System.String,System.String)">
          <source>Checks that the <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.LocalName" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NamespaceURI" /&gt;</ph> properties of the element found matches the given strings before reading a text-only element.</source>
          <target state="translated">텍스트 전용 요소를 읽기 전에 찾은 요소의 <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.LocalName" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NamespaceURI" /&gt;</ph> 속성이 지정된 문자열과 일치하는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="1954" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString(System.String,System.String)">
          <source>However, we recommend that you use the <ph id="ph1">&lt;see cref="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)" /&gt;</ph> method instead, because it provides a more straightforward way to handle this operation.</source>
          <target state="translated">그러나 이 연산을 더 간단하게 처리하는 방법을 제공하는 <ph id="ph1">&lt;see cref="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)" /&gt;</ph> 메서드를 대신 사용하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="1955" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString(System.String,System.String)">
          <source>The text contained in the element that was read.</source>
          <target state="translated">읽은 요소에 포함된 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="1956" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString(System.String,System.String)">
          <source>An empty string if the element is empty.</source>
          <target state="translated">요소가 비어 있으면 빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1957" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementString(System.String,System.String)">
          <source>We recommend that you use the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsString%28System.String%2CSystem.String%29&gt;</ph> method to read a text element.</source>
          <target state="translated">사용 하는 것이 좋습니다는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsString%28System.String%2CSystem.String%29&gt;</ph> 메서드 텍스트 요소를 읽습니다.</target>       </trans-unit>
        <trans-unit id="1958" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString(System.String,System.String)">
          <source>If the next content node is not a start tag; if the element <ph id="ph1">&lt;see langword="LocalName" /&gt;</ph> or <ph id="ph2">&lt;see langword="NamespaceURI" /&gt;</ph> do not match the given arguments; or if the element found does not contain a simple text value.</source>
          <target state="translated">다음 콘텐츠 노드가 시작 태그가 아닌 경우, <ph id="ph1">&lt;see langword="LocalName" /&gt;</ph> 또는 <ph id="ph2">&lt;see langword="NamespaceURI" /&gt;</ph> 요소가 지정된 인수와 일치하지 않는 경우 또는 찾은 요소에 간단한 텍스트 값이 없는 경우</target>       </trans-unit>
        <trans-unit id="1959" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1960" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1961" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadEndElement">
          <source>Checks that the current content node is an end tag and advances the reader to the next node.</source>
          <target state="translated">현재 콘텐츠 노드가 끝 태그인지 확인하고 판독기를 다음 노드로 이동합니다.</target>       </trans-unit>
        <trans-unit id="1962" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadEndElement">
          <source>The following example displays the text content of each element.</source>
          <target state="translated">다음 예제에서는 각 요소의 텍스트 콘텐츠를 표시합니다.</target>       </trans-unit>
        <trans-unit id="1963" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadEndElement">
          <source>The example uses the <ph id="ph1">`book3.xml`</ph> file.</source>
          <target state="translated">이 예제에서는 사용 된 <ph id="ph1">`book3.xml`</ph> 파일입니다.</target>       </trans-unit>
        <trans-unit id="1964" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadEndElement">
          <source>The current node is not an end tag or if incorrect XML is encountered in the input stream.</source>
          <target state="translated">현재 노드가 끝 태그가 아니거나 입력 스트림에 잘못된 XML이 있는 경우</target>       </trans-unit>
        <trans-unit id="1965" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadEndElement">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1966" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadEndElement">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="1967" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>When overridden in a derived class, reads all the content, including markup, as a string.</source>
          <target state="translated">파생 클래스에서 재정의되면 태그를 포함한 모든 콘텐츠를 문자열로 읽습니다.</target>       </trans-unit>
        <trans-unit id="1968" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>All the XML content, including markup, in the current node.</source>
          <target state="translated">태그를 포함한 모든 현재 노드의 XML 콘텐츠입니다.</target>       </trans-unit>
        <trans-unit id="1969" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>If the current node has no children, an empty string is returned.</source>
          <target state="translated">현재 노드에 자식이 없으면 빈 문자열이 반환됩니다.</target>       </trans-unit>
        <trans-unit id="1970" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>If the current node is neither an element nor attribute, an empty string is returned.</source>
          <target state="translated">현재 노드가 요소나 특성이 아니면 빈 문자열이 반환됩니다.</target>       </trans-unit>
        <trans-unit id="1971" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>This method returns all the content of the current node including the markup.</source>
          <target state="translated">이 메서드는 태그를 포함 하 여 현재 노드의 모든 콘텐츠를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1972" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>The current node (start tag) and corresponding end node (end tag) are not returned.</source>
          <target state="translated">현재 노드(시작 태그)와 해당 끝 노드(끝 태그)는 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1973" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>For example, if you had the following:</source>
          <target state="translated">예를 들어, 다음을 설치한 경우:</target>       </trans-unit>
        <trans-unit id="1974" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source><ph id="ph1">`ReadInnerXml`</ph> returns <ph id="ph2">`this &lt;child id="123"/&gt;`</ph></source>
          <target state="translated"><ph id="ph1">`ReadInnerXml`</ph>은 <ph id="ph2">`this &lt;child id="123"/&gt;`</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1975" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>This method handles element and attribute nodes in the following manner:</source>
          <target state="translated">이 메서드는 다음과 같은 방법으로 요소 및 특성 노드를 처리합니다.</target>       </trans-unit>
        <trans-unit id="1976" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>Node type</source>
          <target state="translated">노드 형식</target>       </trans-unit>
        <trans-unit id="1977" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>Position before the call</source>
          <target state="translated">호출 전 위치</target>       </trans-unit>
        <trans-unit id="1978" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>XML fragment</source>
          <target state="translated">XML 조각</target>       </trans-unit>
        <trans-unit id="1979" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>Return value</source>
          <target state="translated">반환 값</target>       </trans-unit>
        <trans-unit id="1980" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>Position after the call</source>
          <target state="translated">호출 후 위치</target>       </trans-unit>
        <trans-unit id="1981" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>On the <ph id="ph1">`item1`</ph> start tag.</source>
          <target state="translated"><ph id="ph1">`item1`</ph> 시작 태그에 있습니다.</target>       </trans-unit>
        <trans-unit id="1982" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source><ph id="ph1">\&lt;</ph>item1&gt;text1<ph id="ph2">\&lt;</ph>/item1&gt;<ph id="ph3">\&lt;</ph>item2&gt;text2<ph id="ph4">\&lt;</ph>/item2&gt;</source>
          <target state="translated"><ph id="ph1">\&lt;</ph>item1&gt;text1<ph id="ph2">\&lt;</ph>/item1&gt;<ph id="ph3">\&lt;</ph>item2&gt;text2<ph id="ph4">\&lt;</ph>/item2&gt;</target>       </trans-unit>
        <trans-unit id="1983" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>text1</source>
          <target state="translated">text1</target>       </trans-unit>
        <trans-unit id="1984" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>On the <ph id="ph1">`item2`</ph> start tag.</source>
          <target state="translated"><ph id="ph1">`item2`</ph> 시작 태그에 있습니다.</target>       </trans-unit>
        <trans-unit id="1985" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>On the <ph id="ph1">`attr1`</ph> attribute node.</source>
          <target state="translated"><ph id="ph1">`attr1`</ph> 특성 노드에 있습니다.</target>       </trans-unit>
        <trans-unit id="1986" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source><ph id="ph1">\&lt;</ph>item attr1="val1" attr2="val2"&gt;text<ph id="ph2">\&lt;</ph>/item&gt;</source>
          <target state="translated"><ph id="ph1">\&lt;</ph>항목 attr1 "v a l 1" attr2 = "val2" = &gt; 텍스트<ph id="ph2">\&lt;</ph>항목/&gt;</target>       </trans-unit>
        <trans-unit id="1987" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>val1</source>
          <target state="translated">val1</target>       </trans-unit>
        <trans-unit id="1988" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>Remains on the <ph id="ph1">`attr1`</ph> attribute node.</source>
          <target state="translated"><ph id="ph1">`attr1`</ph> 특성 노드에 남아 있습니다.</target>       </trans-unit>
        <trans-unit id="1989" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>If the reader is positioned on a leaf node, calling <ph id="ph1">`ReadInnerXml`</ph> is equivalent to calling <ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph>.</source>
          <target state="translated">판독기가 리프 노드에 있을 경우 <ph id="ph1">`ReadInnerXml`</ph>을 호출하는 것과 <ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph>를 호출하는 것은 같습니다.</target>       </trans-unit>
        <trans-unit id="1990" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>The method returns <ph id="ph1">`String.Empty`</ph> (except for attribute nodes, in which case the value of the attribute is returned).</source>
          <target state="translated">메서드가 반환 <ph id="ph1">`String.Empty`</ph> (제외 특성 노드에 대 한 특성의 값이 반환 하는 경우).</target>       </trans-unit>
        <trans-unit id="1991" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>This method checks for well-formed XML.</source>
          <target state="translated">이 메서드는 올바른 형식의 XML에 대 한 확인합니다.</target>       </trans-unit>
        <trans-unit id="1992" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>If <ph id="ph1">`ReadInnerXml`</ph> is called from an <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph>, this method also validates the content returned.</source>
          <target state="translated">경우 <ph id="ph1">`ReadInnerXml`</ph> 에서 호출 되는 <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph>,이 메서드는 반환 된 콘텐츠에도 유효성을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="1993" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>As implemented in the <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph> and <ph id="ph3">`XmlValidatingReader`</ph> classes the <ph id="ph4">`ReadOuterXml`</ph> method is namespace aware.</source>
          <target state="translated">구현 되는 <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph> 및 <ph id="ph3">`XmlValidatingReader`</ph> 클래스는 <ph id="ph4">`ReadOuterXml`</ph> 메서드는 네임 스페이스를 인식 합니다.</target>       </trans-unit>
        <trans-unit id="1994" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadInnerXmlAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadInnerXmlAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1995" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>The following example compares the <ph id="ph1">`ReadInnerXml`</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadOuterXml%2A&gt;</ph> methods.</source>
          <target state="translated">다음 예제에서는 비교는 <ph id="ph1">`ReadInnerXml`</ph> 및 <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadOuterXml%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1996" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>The example uses <ph id="ph1">`2books.xml`</ph> file as input.</source>
          <target state="translated">이 예제에서는 사용 <ph id="ph1">`2books.xml`</ph> 파일을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="1997" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>The XML was not well-formed, or an error occurred while parsing the XML.</source>
          <target state="translated">XML의 형식이 잘못되었거나 XML을 구문 분석하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="1998" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="1999" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="2000" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadInnerXmlAsync">
          <source>Asynchronously reads all the content, including markup, as a string.</source>
          <target state="translated">태그를 포함한 모든 콘텐츠를 문자열로 비동기적으로 읽습니다.</target>       </trans-unit>
        <trans-unit id="2001" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadInnerXmlAsync">
          <source>All the XML content, including markup, in the current node.</source>
          <target state="translated">태그를 포함한 모든 현재 노드의 XML 콘텐츠입니다.</target>       </trans-unit>
        <trans-unit id="2002" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadInnerXmlAsync">
          <source>If the current node has no children, an empty string is returned.</source>
          <target state="translated">현재 노드에 자식이 없으면 빈 문자열이 반환됩니다.</target>       </trans-unit>
        <trans-unit id="2003" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXmlAsync">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadInnerXml%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadInnerXml%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="2004" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXmlAsync">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2005" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadInnerXmlAsync">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="2006" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadInnerXmlAsync">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 “비동기 메서드를 사용하려면 XmlReaderSettings.Async를 true로 설정하세요.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="2007" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>When overridden in a derived class, reads the content, including markup, representing this node and all its children.</source>
          <target state="translated">파생 클래스에서 재정의되면 태그를 포함하여 이 노드 및 모든 자식 노드를 나타내는 콘텐츠를 읽습니다.</target>       </trans-unit>
        <trans-unit id="2008" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>If the reader is positioned on an element or an attribute node, this method returns all the XML content, including markup, of the current node and all its children; otherwise, it returns an empty string.</source>
          <target state="translated">판독기가 요소 또는 특성 노드에 배치되면 이 메서드는 태그를 포함해 현재 노드와 모든 자식 노드의 xml 콘텐츠를 모두 반환하고, 그렇지 않으면 빈 문자열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2009" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>This method is similar to <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadInnerXml%2A&gt;</ph> except it also returns the start and end tags.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadInnerXml%2A&gt;</ph> 시작 및 끝 태그를 반환 한다는 점을 제외 하 고 있습니다.</target>       </trans-unit>
        <trans-unit id="2010" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>This method handles element and attribute nodes in the following manner:</source>
          <target state="translated">이 메서드는 다음과 같은 방법으로 요소 및 특성 노드를 처리합니다.</target>       </trans-unit>
        <trans-unit id="2011" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>Node type</source>
          <target state="translated">노드 형식</target>       </trans-unit>
        <trans-unit id="2012" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>Position before the call</source>
          <target state="translated">호출 전 위치</target>       </trans-unit>
        <trans-unit id="2013" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>XML fragment</source>
          <target state="translated">XML 조각</target>       </trans-unit>
        <trans-unit id="2014" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>Return value</source>
          <target state="translated">반환 값</target>       </trans-unit>
        <trans-unit id="2015" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>Position After the Call</source>
          <target state="translated">호출 후 위치</target>       </trans-unit>
        <trans-unit id="2016" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>On the <ph id="ph1">`item1`</ph> start tag.</source>
          <target state="translated"><ph id="ph1">`item1`</ph> 시작 태그에 있습니다.</target>       </trans-unit>
        <trans-unit id="2017" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source><ph id="ph1">\&lt;</ph>item1&gt;text1<ph id="ph2">\&lt;</ph>/item1&gt;<ph id="ph3">\&lt;</ph>item2&gt;text2<ph id="ph4">\&lt;</ph>/item2&gt;</source>
          <target state="translated"><ph id="ph1">\&lt;</ph>item1&gt;text1<ph id="ph2">\&lt;</ph>/item1&gt;<ph id="ph3">\&lt;</ph>item2&gt;text2<ph id="ph4">\&lt;</ph>/item2&gt;</target>       </trans-unit>
        <trans-unit id="2018" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source><ph id="ph1">\&lt;</ph>item1&gt;text1<ph id="ph2">\&lt;</ph>/item1&gt;</source>
          <target state="translated"><ph id="ph1">\&lt;</ph>item1&gt;text1<ph id="ph2">\&lt;</ph>/item1&gt;</target>       </trans-unit>
        <trans-unit id="2019" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>On the <ph id="ph1">`item2`</ph> start tag.</source>
          <target state="translated"><ph id="ph1">`item2`</ph> 시작 태그에 있습니다.</target>       </trans-unit>
        <trans-unit id="2020" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>On the <ph id="ph1">`attr1`</ph> attribute node.</source>
          <target state="translated"><ph id="ph1">`attr1`</ph> 특성 노드에 있습니다.</target>       </trans-unit>
        <trans-unit id="2021" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source><ph id="ph1">\&lt;</ph>item attr1="val1" attr2="val2"&gt;text<ph id="ph2">\&lt;</ph>/item&gt;</source>
          <target state="translated"><ph id="ph1">\&lt;</ph>항목 attr1 "v a l 1" attr2 = "val2" = &gt; 텍스트<ph id="ph2">\&lt;</ph>항목/&gt;</target>       </trans-unit>
        <trans-unit id="2022" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>attr1="val1"</source>
          <target state="translated">attr1="val1"</target>       </trans-unit>
        <trans-unit id="2023" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>Remains on the <ph id="ph1">`attr1`</ph> attribute node.</source>
          <target state="translated"><ph id="ph1">`attr1`</ph> 특성 노드에 남아 있습니다.</target>       </trans-unit>
        <trans-unit id="2024" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>If the reader is positioned on a leaf node, calling <ph id="ph1">`ReadOuterXml`</ph> is equivalent to calling <ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph>.</source>
          <target state="translated">판독기가 리프 노드에 있을 경우 <ph id="ph1">`ReadOuterXml`</ph>을 호출하는 것과 <ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph>를 호출하는 것은 같습니다.</target>       </trans-unit>
        <trans-unit id="2025" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>The method returns <ph id="ph1">`String.Empty`</ph> (except for attribute nodes, in which case the attribute markup is returned).</source>
          <target state="translated">메서드가 반환 <ph id="ph1">`String.Empty`</ph> (제외 특성 노드에 대 한이 반환 되는 경우).</target>       </trans-unit>
        <trans-unit id="2026" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>This method checks for well-formed XML.</source>
          <target state="translated">이 메서드는 올바른 형식의 XML에 대 한 확인합니다.</target>       </trans-unit>
        <trans-unit id="2027" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>If <ph id="ph1">`ReadOuterXml`</ph> is called from an <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph>, this method also validates the content returned</source>
          <target state="translated">경우 <ph id="ph1">`ReadOuterXml`</ph> 에서 호출 되는 <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph>,이 메서드는 또한 반환 된 콘텐츠 확인</target>       </trans-unit>
        <trans-unit id="2028" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>As implemented in the <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph> and <ph id="ph3">`XmlValidatingReader`</ph> classes the <ph id="ph4">`ReadOuterXml`</ph> method is namespace aware.</source>
          <target state="translated">구현 되는 <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph> 및 <ph id="ph3">`XmlValidatingReader`</ph> 클래스는 <ph id="ph4">`ReadOuterXml`</ph> 메서드는 네임 스페이스를 인식 합니다.</target>       </trans-unit>
        <trans-unit id="2029" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>Given the following XML text <ph id="ph1">`&lt;A xmlns:S="urn:1"&gt;&lt;S:B&gt;hello&lt;/S:B&gt;&lt;/A&gt;`</ph>, if the reader were positioned on the <ph id="ph2">`S:B`</ph> start tag, <ph id="ph3">`ReadOuterXml`</ph> returns <ph id="ph4">`&lt;S:B xmlns:S="urn:1"&gt;hello&lt;S:B/&gt;`</ph>.</source>
          <target state="translated">다음 XML 텍스트를 지정 된 <ph id="ph1">`&lt;A xmlns:S="urn:1"&gt;&lt;S:B&gt;hello&lt;/S:B&gt;&lt;/A&gt;`</ph>에 판독기가 있을 경우는 <ph id="ph2">`S:B`</ph> 시작 태그, <ph id="ph3">`ReadOuterXml`</ph> 반환 <ph id="ph4">`&lt;S:B xmlns:S="urn:1"&gt;hello&lt;S:B/&gt;`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2030" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadOuterXmlAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadOuterXmlAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2031" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>The following example compares the <ph id="ph1">`ReadInnerXml`</ph> and <ph id="ph2">`ReadOuterXml`</ph> methods.</source>
          <target state="translated">다음 예제에서는 비교는 <ph id="ph1">`ReadInnerXml`</ph> 및 <ph id="ph2">`ReadOuterXml`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="2032" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>The example uses <ph id="ph1">`2books.xml`</ph> file as input.</source>
          <target state="translated">이 예제에서는 사용 <ph id="ph1">`2books.xml`</ph> 파일을 입력 합니다.</target>       </trans-unit>
        <trans-unit id="2033" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>The XML was not well-formed, or an error occurred while parsing the XML.</source>
          <target state="translated">XML의 형식이 잘못되었거나 XML을 구문 분석하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="2034" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="2035" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="2036" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadOuterXmlAsync">
          <source>Asynchronously reads the content, including markup, representing this node and all its children.</source>
          <target state="translated">이 노드 및 이 노드의 모든 자식을 나타내는 태그를 포함한 콘텐츠를 비동기적으로 읽습니다.</target>       </trans-unit>
        <trans-unit id="2037" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadOuterXmlAsync">
          <source>If the reader is positioned on an element or an attribute node, this method returns all the XML content, including markup, of the current node and all its children; otherwise, it returns an empty string.</source>
          <target state="translated">판독기가 요소 또는 특성 노드에 배치되면 이 메서드는 태그를 포함해 현재 노드와 모든 자식 노드의 xml 콘텐츠를 모두 반환하고, 그렇지 않으면 빈 문자열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2038" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXmlAsync">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadOuterXml%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadOuterXml%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="2039" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXmlAsync">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2040" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadOuterXmlAsync">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="2041" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadOuterXmlAsync">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 “비동기 메서드를 사용하려면 XmlReaderSettings.Async를 true로 설정하세요.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="2042" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="2043" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message “An asynchronous operation is already in progress.”</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="2044" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>Checks that the current node is an element and advances the reader to the next node.</source>
          <target state="translated">현재 노드가 요소인지 확인하고 판독기를 다음 노드로 진행합니다.</target>       </trans-unit>
        <trans-unit id="2045" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadStartElement">
          <source>Checks that the current node is an element and advances the reader to the next node.</source>
          <target state="translated">현재 노드가 요소인지 확인하고 판독기를 다음 노드로 진행합니다.</target>       </trans-unit>
        <trans-unit id="2046" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadStartElement">
          <source>This method calls <ph id="ph1">&lt;xref:System.Xml.XmlReader.IsStartElement%2A&gt;</ph> followed by <ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph> to position you on the content of that element found in the input stream.</source>
          <target state="translated">이 메서드를 호출 <ph id="ph1">&lt;xref:System.Xml.XmlReader.IsStartElement%2A&gt;</ph> 이어서 <ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph> 있습니다 입력된 스트림에 있는 해당 요소의 콘텐츠를 배치 하기.</target>       </trans-unit>
        <trans-unit id="2047" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadStartElement">
          <source>Incorrect XML was encountered in the input stream.</source>
          <target state="translated">입력 스트림에 잘못된 XML이 있는 경우</target>       </trans-unit>
        <trans-unit id="2048" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadStartElement">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="2049" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadStartElement">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="2050" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadStartElement(System.String)">
          <source>The qualified name of the element.</source>
          <target state="translated">요소의 정규화된 이름입니다.</target>       </trans-unit>
        <trans-unit id="2051" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadStartElement(System.String)">
          <source>Checks that the current content node is an element with the given <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.Name" /&gt;</ph> and advances the reader to the next node.</source>
          <target state="translated">현재 콘텐츠 노드가 지정된 <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.Name" /&gt;</ph>을 가진 요소인지 확인하고 판독기를 다음 노드로 이동합니다.</target>       </trans-unit>
        <trans-unit id="2052" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadStartElement(System.String)">
          <source>A call to this method corresponds to a call to <ph id="ph1">&lt;xref:System.Xml.XmlReader.IsStartElement%2A&gt;</ph> followed by a call to <ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph>.</source>
          <target state="translated">이 메서드에 대 한 호출에 대 한 호출에 해당 <ph id="ph1">&lt;xref:System.Xml.XmlReader.IsStartElement%2A&gt;</ph> 를 호출 하 여 다음 <ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2053" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadStartElement(System.String)">
          <source>The following example displays the text content of each element.</source>
          <target state="translated">다음 예제에서는 각 요소의 텍스트 콘텐츠를 표시합니다.</target>       </trans-unit>
        <trans-unit id="2054" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadStartElement(System.String)">
          <source>The example uses the <ph id="ph1">`book3.xml`</ph> file.</source>
          <target state="translated">이 예제에서는 사용 된 <ph id="ph1">`book3.xml`</ph> 파일입니다.</target>       </trans-unit>
        <trans-unit id="2055" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadStartElement(System.String)">
          <source>Incorrect XML was encountered in the input stream.</source>
          <target state="translated">입력 스트림에 잘못된 XML이 있는 경우</target>       </trans-unit>
        <trans-unit id="2056" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadStartElement(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2057" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadStartElement(System.String)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.Name" /&gt;</ph> of the element does not match the given <ph id="ph2">&lt;paramref name="name" /&gt;</ph>.</source>
          <target state="translated">이 요소의 <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.Name" /&gt;</ph>는 주어진 <ph id="ph2">&lt;paramref name="name" /&gt;</ph>에 매치되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2058" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadStartElement(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="2059" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadStartElement(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="2060" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">요소의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="2061" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)">
          <source>The namespace URI of the element.</source>
          <target state="translated">요소의 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="2062" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)">
          <source>Checks that the current content node is an element with the given <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.LocalName" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NamespaceURI" /&gt;</ph> and advances the reader to the next node.</source>
          <target state="translated">현재 콘텐츠 노드가 지정된 <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.LocalName" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NamespaceURI" /&gt;</ph>가 있는 요소인지 확인하고 판독기를 다음 노드로 이동합니다.</target>       </trans-unit>
        <trans-unit id="2063" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)">
          <source>A call to this method corresponds to a call to <ph id="ph1">&lt;xref:System.Xml.XmlReader.IsStartElement%2A&gt;</ph> followed by a call to <ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph>.</source>
          <target state="translated">이 메서드에 대 한 호출에 대 한 호출에 해당 <ph id="ph1">&lt;xref:System.Xml.XmlReader.IsStartElement%2A&gt;</ph> 를 호출 하 여 다음 <ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2064" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)">
          <source>Incorrect XML was encountered in the input stream.</source>
          <target state="translated">입력 스트림에 잘못된 XML이 있는 경우</target>       </trans-unit>
        <trans-unit id="2065" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2066" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.LocalName" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NamespaceURI" /&gt;</ph> properties of the element found do not match the given arguments.</source>
          <target state="translated">검색된 요소의 <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.LocalName" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NamespaceURI" /&gt;</ph> 속성은 주어진 인수와 일치하지 않습니다.</target>       </trans-unit>
        <trans-unit id="2067" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="2068" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="2069" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.ReadState">
          <source>When overridden in a derived class, gets the state of the reader.</source>
          <target state="translated">파생 클래스에서 재정의되면 판독기의 상태를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="2070" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.ReadState">
          <source>One of the enumeration values that specifies the state of the reader.</source>
          <target state="translated">판독기 상태를 지정하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="2071" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.ReadState">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadState%2A&gt;</ph> property has one of the following values:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadState%2A&gt;</ph> 속성은 다음 값 중 하나를 취합니다.</target>       </trans-unit>
        <trans-unit id="2072" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.ReadState">
          <source><ph id="ph1">&lt;xref:System.Xml.ReadState.Initial&gt;</ph>, when the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType&gt;</ph> method is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.ReadState.Initial&gt;</ph>때는 <ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="2073" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.ReadState">
          <source><ph id="ph1">&lt;xref:System.Xml.ReadState.Interactive&gt;</ph>, when the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType&gt;</ph> method has been called, and additional methods may be called on the reader.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.ReadState.Interactive&gt;</ph>때는 <ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType&gt;</ph> 메서드를 호출 하며 판독기에서 추가 메서드를 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2074" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.ReadState">
          <source><ph id="ph1">&lt;xref:System.Xml.ReadState.EndOfFile&gt;</ph>, when the end of the XML document has been reached successfully.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.ReadState.EndOfFile&gt;</ph>때 XML 문서의 끝에 도달한 했습니다.</target>       </trans-unit>
        <trans-unit id="2075" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.ReadState">
          <source><ph id="ph1">&lt;xref:System.Xml.ReadState.Closed&gt;</ph>, when the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Close%2A?displayProperty=nameWithType&gt;</ph> method is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.ReadState.Closed&gt;</ph>때는 <ph id="ph2">&lt;xref:System.Xml.XmlReader.Close%2A?displayProperty=nameWithType&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="2076" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.ReadState">
          <source><ph id="ph1">&lt;xref:System.Xml.ReadState.Error&gt;</ph>, when an error is preventing the read operation from continuing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.ReadState.Error&gt;</ph>오류로 인해 읽기 작업을 계속할 때.</target>       </trans-unit>
        <trans-unit id="2077" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.ReadState">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="2078" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.ReadState">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="2079" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadString">
          <source>When overridden in a derived class, reads the contents of an element or text node as a string.</source>
          <target state="translated">파생 클래스에서 재정의되면 요소 또는 텍스트 노드의 내용을 문자열로 읽습니다.</target>       </trans-unit>
        <trans-unit id="2080" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadString">
          <source>However, we recommend that you use the <ph id="ph1">&lt;see cref="Overload:System.Xml.XmlReader.ReadElementContentAsString" /&gt;</ph> method instead, because it provides a more straightforward way to handle this operation.</source>
          <target state="translated">그러나 이 연산을 더 간단하게 처리하는 방법을 제공하는 <ph id="ph1">&lt;see cref="Overload:System.Xml.XmlReader.ReadElementContentAsString" /&gt;</ph> 메서드를 대신 사용하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="2081" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadString">
          <source>The contents of the element or an empty string.</source>
          <target state="translated">요소의 내용이나 빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="2082" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadString">
          <source>We recommend that you use the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsString%2A&gt;</ph> method to read the contents of an element or text node as a string.</source>
          <target state="translated">사용 하는 것이 좋습니다는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsString%2A&gt;</ph> 메서드를 문자열로 요소 또는 텍스트 노드의 내용을 읽을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2083" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadString">
          <source>An error occurred while parsing the XML.</source>
          <target state="translated">XML을 구문 분석하는 동안 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="2084" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadString">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="2085" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadString">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="2086" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadSubtree">
          <source>Returns a new <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> instance that can be used to read the current node, and all its descendants.</source>
          <target state="translated">현재 노드와 해당 하위 노드 전체를 읽는 데 사용되는 새 <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> 인스턴스를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2087" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadSubtree">
          <source>A new XML reader instance set to <ph id="ph1">&lt;see cref="F:System.Xml.ReadState.Initial" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Xml.ReadState.Initial" /&gt;</ph>로 설정된 새로운 XML 판독기 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="2088" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadSubtree">
          <source>Calling the <ph id="ph1">&lt;see cref="M:System.Xml.XmlReader.Read" /&gt;</ph> method positions the new reader on the node that was current before the call to the <ph id="ph2">&lt;see cref="M:System.Xml.XmlReader.ReadSubtree" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Xml.XmlReader.Read" /&gt;</ph> 메서드를 호출하면 <ph id="ph2">&lt;see cref="M:System.Xml.XmlReader.ReadSubtree" /&gt;</ph> 메서드를 호출하기 전에 현재 노드에 새 판독기가 배치됩니다.</target>       </trans-unit>
        <trans-unit id="2089" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadSubtree">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadSubtree%2A&gt;</ph> can be called only on element nodes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadSubtree%2A&gt;</ph> element 노드에서만 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2090" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadSubtree">
          <source>When the entire sub-tree has been read, calls to the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph> method returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">호출 하는 경우 전체 하위 트리를 읽은 후에 <ph id="ph1">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph> 메서드 반환 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2091" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadSubtree">
          <source>When the new XML reader has been closed, the original readeris positioned on the <ph id="ph1">`EndElement`</ph> node of the sub-tree.</source>
          <target state="translated">때 새 XML 판독기를 닫으면 위치에 원래 readeris는 <ph id="ph1">`EndElement`</ph> 하위 트리의 노드입니다.</target>       </trans-unit>
        <trans-unit id="2092" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadSubtree">
          <source>Thus, if you called the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadSubtree%2A&gt;</ph> method on the start tag of the book element, after the sub-tree has been read and the new XML reader has been closed, the original XML reader is positioned on the end tag of the book element.</source>
          <target state="translated">따라서 호출 하는 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadSubtree%2A&gt;</ph> 메서드 읽기 및 새 XML 판독기는 하위 트리의 후 책 요소의 시작 태그에 닫힌, 원래 XML 판독기가 책 요소의 끝 태그에 배치 합니다.</target>       </trans-unit>
        <trans-unit id="2093" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadSubtree">
          <source>You should not perform any operations on the original reader until the new reader has been closed.</source>
          <target state="translated">원래 판독기에서 작업을 수행하려면 먼저 새 판독기를 닫아야 합니다.</target>       </trans-unit>
        <trans-unit id="2094" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadSubtree">
          <source>This action is not supported and can result in unpredictable behavior.</source>
          <target state="translated">새 판독기를 닫기 전에는 원래 판독기에서 작업을 수행할 수 없으며 수행할 경우 예기치 않은 동작이 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2095" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadSubtree">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadSubtree%2A&gt;</ph> method isn't intended for creatingcopies of the XML data that you can work with independently.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadSubtree%2A&gt;</ph> 메서드 creatingcopies 있습니다 수 단독으로 사용할 XML 데이터에 대 한 사용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2096" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadSubtree">
          <source>It's designedto create a boundary around an XML element.</source>
          <target state="translated">designedto XML 요소 주위의 경계를 만듭니다.</target>       </trans-unit>
        <trans-unit id="2097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadSubtree">
          <source>This is useful if you want to pass data to another component for processing and you wish to limit how much of your data the component can access.</source>
          <target state="translated">데이터 처리를 위해 다른 구성 요소에 전달 하 고 구성 요소에 액세스할 수 있습니다 프로그램 데이터의 양을 제한 하려는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="2098" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadSubtree">
          <source>When you pass an XML reader returned by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadSubtree%2A&gt;</ph> method to another application, the application can access only that XML element, not the entire XML document.</source>
          <target state="translated">반환 된 XML 판독기를 전달 하는 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadSubtree%2A&gt;</ph> 메서드 다른 응용 프로그램, 응용 프로그램에만 해당 XML 요소에 전체 XML 문서에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2099" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadSubtree">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadSubtree%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadSubtree%2A&gt;</ph> 메서드를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="2100" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadSubtree">
          <source>Use the following XML data to run the examples in this topic:</source>
          <target state="translated">이 항목의 예제를 실행 하려면 다음 XML 데이터를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="2101" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadSubtree">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="2102" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadSubtree">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="2103" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="2104" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message “An asynchronous operation is already in progress.”</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="2105" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>Advances the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> to the next matching descendant element.</source>
          <target state="translated">일치하는 다음 하위 요소로 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>를 이동합니다.</target>       </trans-unit>
        <trans-unit id="2106" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToDescendant(System.String)">
          <source>The qualified name of the element you wish to move to.</source>
          <target state="translated">판독기를 이동할 요소의 정규화된 이름입니다.</target>       </trans-unit>
        <trans-unit id="2107" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToDescendant(System.String)">
          <source>Advances the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> to the next descendant element with the specified qualified name.</source>
          <target state="translated">지정된 정규화 이름을 사용하는 다음 하위 요소로 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>를 이동합니다.</target>       </trans-unit>
        <trans-unit id="2108" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToDescendant(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a matching descendant element is found; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">일치하는 하위 요소가 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2109" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToDescendant(System.String)">
          <source>If a matching child element is not found, the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> is positioned on the end tag (<ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NodeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="XmlNodeType.EndElement" /&gt;</ph>) of the element.</source>
          <target state="translated">일치하는 하위 요소가 없으면 요소의 끝 태그, 즉 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>이 <ph id="ph3">&lt;see langword="XmlNodeType.EndElement" /&gt;</ph>인 태그에 <ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NodeType" /&gt;</ph>가 배치됩니다.</target>       </trans-unit>
        <trans-unit id="2110" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToDescendant(System.String)">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> is not positioned on an element when <ph id="ph2">&lt;see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String)" /&gt;</ph> was called, this method returns <ph id="ph3">&lt;see langword="false" /&gt;</ph> and the position of the <ph id="ph4">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> is not changed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>를 호출했을 때 <ph id="ph2">&lt;see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String)" /&gt;</ph>가 요소에 배치되어 있지 않으면 이 메서드가 <ph id="ph3">&lt;see langword="false" /&gt;</ph>를 반환하고 <ph id="ph4">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>의 위치는 변경되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadToDescendant(System.String)">
          <source>The following example parses the second book node.</source>
          <target state="translated">다음 예제에서는 두 번째 book 노드로 구문 분석합니다.</target>       </trans-unit>
        <trans-unit id="2112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadToDescendant(System.String)">
          <source>The example uses the file, <ph id="ph1">`2books.xml`</ph>, as input.</source>
          <target state="translated">이 예제에서는 파일을 사용 하 여 <ph id="ph1">`2books.xml`</ph>입력으로 합니다.</target>       </trans-unit>
        <trans-unit id="2113" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToDescendant(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="2114" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToDescendant(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="2115" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToDescendant(System.String)">
          <source>The parameter is an empty string.</source>
          <target state="translated">매개 변수가 빈 문자열인 경우</target>       </trans-unit>
        <trans-unit id="2116" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)">
          <source>The local name of the element you wish to move to.</source>
          <target state="translated">판독기를 이동할 요소의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="2117" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)">
          <source>The namespace URI of the element you wish to move to.</source>
          <target state="translated">판독기를 이동할 하위 요소의 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="2118" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)">
          <source>Advances the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> to the next descendant element with the specified local name and namespace URI.</source>
          <target state="translated">지정된 로컬 이름과 네임스페이스 URI를 사용하는 다음 하위 요소로 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>를 이동합니다.</target>       </trans-unit>
        <trans-unit id="2119" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a matching descendant element is found; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">일치하는 하위 요소가 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2120" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)">
          <source>If a matching child element is not found, the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> is positioned on the end tag (<ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NodeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="XmlNodeType.EndElement" /&gt;</ph>) of the element.</source>
          <target state="translated">일치하는 하위 요소가 없으면 요소의 끝 태그, 즉 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>이 <ph id="ph3">&lt;see langword="XmlNodeType.EndElement" /&gt;</ph>인 태그에 <ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NodeType" /&gt;</ph>가 배치됩니다.</target>       </trans-unit>
        <trans-unit id="2121" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> is not positioned on an element when <ph id="ph2">&lt;see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)" /&gt;</ph> was called, this method returns <ph id="ph3">&lt;see langword="false" /&gt;</ph> and the position of the <ph id="ph4">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> is not changed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>를 호출했을 때 <ph id="ph2">&lt;see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)" /&gt;</ph>가 요소에 배치되어 있지 않으면 이 메서드가 <ph id="ph3">&lt;see langword="false" /&gt;</ph>를 반환하고 <ph id="ph4">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>의 위치는 변경되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2122" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="2123" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="2124" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)">
          <source>Both parameter values are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">두 매개 변수 값이 모두 <ph id="ph1">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="2125" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="2126" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message “An asynchronous operation is already in progress.”</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="2127" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>Reads until the named element is found.</source>
          <target state="translated">명명된 요소를 찾을 때까지 읽습니다.</target>       </trans-unit>
        <trans-unit id="2128" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String)">
          <source>The qualified name of the element.</source>
          <target state="translated">요소의 정규화된 이름입니다.</target>       </trans-unit>
        <trans-unit id="2129" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String)">
          <source>Reads until an element with the specified qualified name is found.</source>
          <target state="translated">지정된 정규화된 이름의 요소를 찾을 때까지 읽습니다.</target>       </trans-unit>
        <trans-unit id="2130" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a matching element is found; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph> and the <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> is in an end of file state.</source>
          <target state="translated">일치하는 요소가 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>이고 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>가 파일 끝에 도달합니다.</target>       </trans-unit>
        <trans-unit id="2131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String)">
          <source>This method is functionally equivalent executing the <ph id="ph1">`following::name`</ph> XPath expression from the current node.</source>
          <target state="translated">이 메서드는 기능적으로 동일한 실행에서 <ph id="ph1">`following::name`</ph> 현재 노드의 XPath 식입니다.</target>       </trans-unit>
        <trans-unit id="2132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String)">
          <source>It provides a quick way to find a named element in the XML document.</source>
          <target state="translated">XML 문서에 있는 명명된 된 요소를 찾는 빠른 방법을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="2133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String)">
          <source>It advances the reader to the next following element that matches the specified name and returns <ph id="ph1">`true`</ph> if a matching element is found.</source>
          <target state="translated">메서드는 판독기를 지정된 된 이름과 일치 하는 다음 요소로 이동 <ph id="ph1">`true`</ph> 일치 하는 요소가 없는 경우.</target>       </trans-unit>
        <trans-unit id="2134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String)">
          <source>Using the example below, the reader would read to the first instance of the specified element while reading forward.</source>
          <target state="translated">아래 예제를 사용 하 여 판독기가 읽을 첫 번째 인스턴스의 지정된 된 요소를 앞으로 읽는 동안 합니다.</target>       </trans-unit>
        <trans-unit id="2135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String)">
          <source>This method can be called on all node types.</source>
          <target state="translated">이 메서드는 모든 노드 형식에서 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2136" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="2137" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="2138" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String)">
          <source>The parameter is an empty string.</source>
          <target state="translated">매개 변수가 빈 문자열인 경우</target>       </trans-unit>
        <trans-unit id="2139" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">요소의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="2140" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)">
          <source>The namespace URI of the element.</source>
          <target state="translated">요소의 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="2141" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)">
          <source>Reads until an element with the specified local name and namespace URI is found.</source>
          <target state="translated">지정된 로컬 이름 및 네임스페이스 URI를 사용하는 요소를 찾을 때까지 읽습니다.</target>       </trans-unit>
        <trans-unit id="2142" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a matching element is found; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph> and the <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> is in an end of file state.</source>
          <target state="translated">일치하는 요소가 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>이고 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>가 파일 끝에 도달합니다.</target>       </trans-unit>
        <trans-unit id="2143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)">
          <source>This method is functionally equivalent executing the <ph id="ph1">`following::name`</ph> XPath expression from the current node.</source>
          <target state="translated">이 메서드는 기능적으로 동일한 실행에서 <ph id="ph1">`following::name`</ph> 현재 노드의 XPath 식입니다.</target>       </trans-unit>
        <trans-unit id="2144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)">
          <source>It provides a quick way to find a named element in the XML document.</source>
          <target state="translated">XML 문서에 있는 명명된 된 요소를 찾는 빠른 방법을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="2145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)">
          <source>It advances the reader to the next following element that matches the specified name and returns <ph id="ph1">`true`</ph> if a matching element is found.</source>
          <target state="translated">메서드는 판독기를 지정된 된 이름과 일치 하는 다음 요소로 이동 <ph id="ph1">`true`</ph> 일치 하는 요소가 없는 경우.</target>       </trans-unit>
        <trans-unit id="2146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)">
          <source>This method can be called on all node types.</source>
          <target state="translated">이 메서드는 모든 노드 형식에서 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2147" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="2148" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="2149" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)">
          <source>Both parameter values are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">두 매개 변수 값이 모두 <ph id="ph1">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="2150" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="2151" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message “An asynchronous operation is already in progress.”</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="2152" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>Advances the <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> to the next matching sibling element.</source>
          <target state="translated">일치하는 다음 형제 요소로 <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph>를 이동합니다.</target>       </trans-unit>
        <trans-unit id="2153" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToNextSibling(System.String)">
          <source>The qualified name of the sibling element you wish to move to.</source>
          <target state="translated">판독기를 이동할 형제 요소의 정규화된 이름입니다.</target>       </trans-unit>
        <trans-unit id="2154" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToNextSibling(System.String)">
          <source>Advances the <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> to the next sibling element with the specified qualified name.</source>
          <target state="translated">지정된 정규화 이름을 사용하는 다음 형제 요소로 <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph>를 이동합니다.</target>       </trans-unit>
        <trans-unit id="2155" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToNextSibling(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a matching sibling element is found; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">일치하는 형제 요소가 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2156" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToNextSibling(System.String)">
          <source>If a matching sibling element is not found, the <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> is positioned on the end tag (<ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NodeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="XmlNodeType.EndElement" /&gt;</ph>) of the parent element.</source>
          <target state="translated">일치하는 형제 요소가 없으면 부모 요소의 끝 태그, 즉 <ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NodeType" /&gt;</ph>이 <ph id="ph3">&lt;see langword="XmlNodeType.EndElement" /&gt;</ph>인 태그에 <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph>가 배치됩니다.</target>       </trans-unit>
        <trans-unit id="2157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadToNextSibling(System.String)">
          <source>Do not call <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadToNextSibling%2A&gt;</ph> when the <ph id="ph2">`XmlReader`</ph> is an initial state (<ph id="ph3">&lt;xref:System.Xml.XmlReader.ReadState%2A&gt;</ph> is <ph id="ph4">&lt;xref:System.Xml.ReadState.Initial&gt;</ph>).</source>
          <target state="translated">호출 하지 마십시오 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadToNextSibling%2A&gt;</ph> 때는 <ph id="ph2">`XmlReader`</ph> 는 초기 상태 (<ph id="ph3">&lt;xref:System.Xml.XmlReader.ReadState%2A&gt;</ph> 은 <ph id="ph4">&lt;xref:System.Xml.ReadState.Initial&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="2158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadToNextSibling(System.String)">
          <source>You can call <ph id="ph1">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph> to advance the <ph id="ph2">`XmlReader`</ph> and then call the <ph id="ph3">&lt;xref:System.Xml.XmlReader.ReadToNextSibling%2A&gt;</ph> method.</source>
          <target state="translated">호출할 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph> 이동 하는 <ph id="ph2">`XmlReader`</ph> 다음 호출에서 <ph id="ph3">&lt;xref:System.Xml.XmlReader.ReadToNextSibling%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="2159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadToNextSibling(System.String)">
          <source>The following example reads the ISBN attribute on each book node.</source>
          <target state="translated">다음 예제에서는 각 book 노드에 ISBN 특성을 읽습니다.</target>       </trans-unit>
        <trans-unit id="2160" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToNextSibling(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="2161" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToNextSibling(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="2162" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToNextSibling(System.String)">
          <source>The parameter is an empty string.</source>
          <target state="translated">매개 변수가 빈 문자열인 경우</target>       </trans-unit>
        <trans-unit id="2163" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)">
          <source>The local name of the sibling element you wish to move to.</source>
          <target state="translated">판독기를 이동할 형제 요소의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="2164" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)">
          <source>The namespace URI of the sibling element you wish to move to.</source>
          <target state="translated">판독기를 이동할 형제 요소의 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="2165" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)">
          <source>Advances the <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> to the next sibling element with the specified local name and namespace URI.</source>
          <target state="translated">지정된 로컬 이름과 네임스페이스 URI를 사용하는 다음 형제 요소로 <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph>를 이동합니다.</target>       </trans-unit>
        <trans-unit id="2166" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a matching sibling element is found; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">일치하는 형제 요소가 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2167" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)">
          <source>If a matching sibling element is not found, the <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> is positioned on the end tag (<ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NodeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="XmlNodeType.EndElement" /&gt;</ph>) of the parent element.</source>
          <target state="translated">일치하는 형제 요소가 없으면 부모 요소의 끝 태그, 즉 <ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NodeType" /&gt;</ph>이 <ph id="ph3">&lt;see langword="XmlNodeType.EndElement" /&gt;</ph>인 태그에 <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph>가 배치됩니다.</target>       </trans-unit>
        <trans-unit id="2168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)">
          <source>Do not call <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadToNextSibling%2A&gt;</ph> when the <ph id="ph2">`XmlReader`</ph> is an initial state (<ph id="ph3">&lt;xref:System.Xml.XmlReader.ReadState%2A&gt;</ph> is <ph id="ph4">&lt;xref:System.Xml.ReadState.Initial&gt;</ph>).</source>
          <target state="translated">호출 하지 마십시오 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadToNextSibling%2A&gt;</ph> 때는 <ph id="ph2">`XmlReader`</ph> 는 초기 상태 (<ph id="ph3">&lt;xref:System.Xml.XmlReader.ReadState%2A&gt;</ph> 은 <ph id="ph4">&lt;xref:System.Xml.ReadState.Initial&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="2169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)">
          <source>You can call <ph id="ph1">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph> to advance the <ph id="ph2">`XmlReader`</ph> and then call the <ph id="ph3">&lt;xref:System.Xml.XmlReader.ReadToNextSibling%2A&gt;</ph> method.</source>
          <target state="translated">호출할 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph> 이동 하는 <ph id="ph2">`XmlReader`</ph> 다음 호출에서 <ph id="ph3">&lt;xref:System.Xml.XmlReader.ReadToNextSibling%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="2170" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="2171" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="2172" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)">
          <source>Both parameter values are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">두 매개 변수 값이 모두 <ph id="ph1">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="2173" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>The array of characters that serves as the buffer to which the text contents are written.</source>
          <target state="translated">텍스트 콘텐츠를 쓸 버퍼 역할을 하는 문자 배열입니다.</target>       </trans-unit>
        <trans-unit id="2174" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>This value cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 없습니다.</target>       </trans-unit>
        <trans-unit id="2175" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>The offset within the buffer where the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> can start to copy the results.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>가 버퍼 내에서 결과 복사를 시작할 수 있는 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="2176" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>The maximum number of characters to copy into the buffer.</source>
          <target state="translated">버퍼에 복사할 최대 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="2177" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>The actual number of characters copied is returned from this method.</source>
          <target state="translated">이 메서드는 복사된 실제 문자 수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2178" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>Reads large streams of text embedded in an XML document.</source>
          <target state="translated">XML 문서에 포함된 큰 텍스트 스트림을 읽습니다.</target>       </trans-unit>
        <trans-unit id="2179" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters read into the buffer.</source>
          <target state="translated">버퍼로 읽어온 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="2180" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>The value zero is returned when there is no more text content.</source>
          <target state="translated">텍스트 콘텐츠가 더 이상 없으면 0이 반환됩니다.</target>       </trans-unit>
        <trans-unit id="2181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>This method enables reading of very large streams of text embedded in an XML document in a streaming fashion, that is, a small number of characters at a time instead of allocating a single string for the whole value.</source>
          <target state="translated">이 메서드는 적은 수의 문자는 전체 값에 대 한 단일 문자열을 할당 하는 대신 한 번에는 스트리밍 방식, 즉, XML 문서에 포함 된 텍스트의 매우 큰 스트림을 읽을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>This method can be called on any node that has a value (<ph id="ph1">&lt;xref:System.Xml.XmlReader.HasValue%2A&gt;</ph> is <ph id="ph2">`true`</ph>), however actual streaming of the node value only occurs when called on a text, white space and significant white space nodes.</source>
          <target state="translated">값이 있는 모든 노드에서이 메서드를 호출할 수 있습니다 (<ph id="ph1">&lt;xref:System.Xml.XmlReader.HasValue%2A&gt;</ph> 은 <ph id="ph2">`true`</ph>)는 텍스트, 공백 및 유효 공백 노드가에서 호출 하는 경우에 발생 노드 값의 실제 스트리밍을 있지만, 합니다.</target>       </trans-unit>
        <trans-unit id="2183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>Other node type values are cached, including attributes and CDATA nodes.</source>
          <target state="translated">특성 및 CDATA 노드를 포함 하 여 다른 노드 형식 값은 캐시 됩니다.</target>       </trans-unit>
        <trans-unit id="2184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>This method returns only the content of the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Value%2A&gt;</ph> property and does not move the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">이 메서드가 반환의 콘텐츠만 <ph id="ph1">&lt;xref:System.Xml.XmlReader.Value%2A&gt;</ph> 속성 이동 하지 않습니다는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>This method reads the specified number of characters (<ph id="ph1">`count`</ph>) of the node value into a character buffer (<ph id="ph2">`buffer`</ph>) at a specified offset (<ph id="ph3">`index`</ph>) and returns the number of characters written to the buffer.</source>
          <target state="translated">이 메서드는 지정한 개수의 문자를 읽습니다 (<ph id="ph1">`count`</ph>)를 문자 버퍼로 노드 값의 (<ph id="ph2">`buffer`</ph>) 지정 된 오프셋 (<ph id="ph3">`index`</ph>) 버퍼에 쓴 문자의 수를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="2186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>It returns the <ph id="ph1">`0`</ph> when it has reached the end of the value.</source>
          <target state="translated">반환 된 <ph id="ph1">`0`</ph> 값의 끝에 도달 하면 합니다.</target>       </trans-unit>
        <trans-unit id="2187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>It cannot be restarted to read through the value again.</source>
          <target state="translated">값을 통해 읽기를 다시 시작할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="2188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>In between calls to <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph> the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> properties do no change except for the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Value%2A&gt;</ph> property.</source>
          <target state="translated">에 대 한 호출 사이 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph> 는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 속성을 제외 하 고 변경 되지 않습니다는 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Value%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="2189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Value%2A&gt;</ph> property is accessed it may either return a partial value (with characters not yet returned by <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph>) or a full value depending on the implementation.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.Value%2A&gt;</ph> 속성에 액세스 하거나 부분 값을 반환할 수 있습니다 (아직 반환한 문자로 <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph>) 또는 구현에 따라 전체 값입니다.</target>       </trans-unit>
        <trans-unit id="2190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>All the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> implementations in the <ph id="ph2">&lt;xref:System.Xml&gt;</ph> namespace return a partial value for the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Value%2A&gt;</ph> property implementation.</source>
          <target state="translated">모든는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 구현을 <ph id="ph2">&lt;xref:System.Xml&gt;</ph> 부분 값을 반환 하는 네임 스페이스는 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Value%2A&gt;</ph> 속성 구현 합니다.</target>       </trans-unit>
        <trans-unit id="2191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>Any Read method can be called in between calls to <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph>.</source>
          <target state="translated">모든 Read 메서드를 호출 사이 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>If this occurs, the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> moves to the next <ph id="ph2">&lt;xref:System.Xml.XmlNodeType&gt;</ph> in the stream and any characters not yet returned are skipped.</source>
          <target state="translated">이 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 다음 <ph id="ph2">&lt;xref:System.Xml.XmlNodeType&gt;</ph> 스트림과 아직 반환 된 모든 문자에는 건너뜁니다.</target>       </trans-unit>
        <trans-unit id="2193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>There may be a case when <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph> returns less than the requested number of characters.</source>
          <target state="translated">경우가 있을 수 때 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph> 요청 된 문자 수보다 작은 반환 합니다.</target>       </trans-unit>
        <trans-unit id="2194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>For example, if you had a 200-character long value with a surrogate pair at positions 127 and 128 and you called <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph> with a 128-character buffer, the method call would return 127 characters instead of the requested 128.</source>
          <target state="translated">예를 들어 127과 128 서로게이트 쌍과 함께 200 자 long 값을 가지 며 호출한 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph> 메서드 호출 요청한 128 대신 127 자는 128 자 버퍼를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="2195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>The surrogate pair would then be returned in the next <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph> call.</source>
          <target state="translated">서로게이트 쌍을 반환 하 여 다음에서 다음는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph> 호출 합니다.</target>       </trans-unit>
        <trans-unit id="2196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph> did not return the requested 128 characters because doing so would have resulted in an incomplete surrogate pair at the end of the buffer.</source>
          <target state="translated">이 경우 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph> 이렇게 하면 있으므로 결과는 서로게이트 쌍이 불완전 버퍼의 끝에 때문에 요청된 된 128 자를 반환 하지 않았습니다.</target>       </trans-unit>
        <trans-unit id="2197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadValueChunkAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadValueChunkAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2198" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="2199" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="2200" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2201" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>The index into the buffer, or index + count is larger than the allocated buffer size.</source>
          <target state="translated">버퍼 내의 인덱스 또는 인덱스와 개수를 합한 값이 할당된 버퍼 크기보다 큰 경우</target>       </trans-unit>
        <trans-unit id="2202" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> implementation does not support this method.</source>
          <target state="translated">구현된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>에서 이 메서드를 지원하지 않는 경우</target>       </trans-unit>
        <trans-unit id="2203" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>The XML data is not well-formed.</source>
          <target state="translated">XML 데이터가 올바른 형식이 아닌 경우</target>       </trans-unit>
        <trans-unit id="2204" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)">
          <source>The array of characters that serves as the buffer to which the text contents are written.</source>
          <target state="translated">텍스트 콘텐츠를 쓸 버퍼 역할을 하는 문자 배열입니다.</target>       </trans-unit>
        <trans-unit id="2205" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)">
          <source>This value cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 없습니다.</target>       </trans-unit>
        <trans-unit id="2206" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)">
          <source>The offset within the buffer where the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> can start to copy the results.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>가 버퍼 내에서 결과 복사를 시작할 수 있는 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="2207" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)">
          <source>The maximum number of characters to copy into the buffer.</source>
          <target state="translated">버퍼에 복사할 최대 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="2208" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)">
          <source>The actual number of characters copied is returned from this method.</source>
          <target state="translated">이 메서드는 복사된 실제 문자 수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2209" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)">
          <source>Asynchronously reads large streams of text embedded in an XML document.</source>
          <target state="translated">XML 문서에 포함된 큰 텍스트 스트림을 비동기적으로 읽습니다.</target>       </trans-unit>
        <trans-unit id="2210" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters read into the buffer.</source>
          <target state="translated">버퍼로 읽어온 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="2211" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)">
          <source>The value zero is returned when there is no more text content.</source>
          <target state="translated">텍스트 콘텐츠가 더 이상 없으면 0이 반환됩니다.</target>       </trans-unit>
        <trans-unit id="2212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="2213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2214" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="2215" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 “비동기 메서드를 사용하려면 XmlReaderSettings.Async를 true로 설정하세요.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="2216" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ResolveEntity">
          <source>When overridden in a derived class, resolves the entity reference for <ph id="ph1">&lt;see langword="EntityReference" /&gt;</ph> nodes.</source>
          <target state="translated">파생 클래스에서 재정의되면 <ph id="ph1">&lt;see langword="EntityReference" /&gt;</ph> 노드에 대한 엔터티 참조를 확인합니다.</target>       </trans-unit>
        <trans-unit id="2217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ResolveEntity">
          <source>If the reader is positioned on an <ph id="ph1">`EntityReference`</ph> node (<ph id="ph2">`XmlNodeType.EntityReference`</ph>), if <ph id="ph3">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph> is called after calling this method, the entity replacement text is parsed.</source>
          <target state="translated">판독기가 배치 되 면는 <ph id="ph1">`EntityReference`</ph> 노드 (<ph id="ph2">`XmlNodeType.EntityReference`</ph>) 하는 경우, <ph id="ph3">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph> 이 방법에서는 엔터티 대체 텍스트를 구문 분석 하는 호출 후에 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="2218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ResolveEntity">
          <source>When the entity replacement text is finished, an <ph id="ph1">`EndEntity`</ph> node is returned to close the entity reference scope.</source>
          <target state="translated">엔터티 대체 텍스트 완료 되 면는 <ph id="ph1">`EndEntity`</ph> 노드가 엔터티 참조 범위를 닫습니다 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="2219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ResolveEntity">
          <source>After calling this method, if the entity is part of an attribute value, you must call <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadAttributeValue%2A&gt;</ph> to step into the entity.</source>
          <target state="translated">이 메서드를 호출한 후 엔터티의 특성 값의 일부인 경우 호출 해야 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadAttributeValue%2A&gt;</ph> 를 엔터티로 단계로 합니다.</target>       </trans-unit>
        <trans-unit id="2220" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ResolveEntity">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="2221" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ResolveEntity">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="2222" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.SchemaInfo">
          <source>Gets the schema information that has been assigned to the current node as a result of schema validation.</source>
          <target state="translated">스키마 유효성 검사의 결과로 현재 노드에 할당된 스키마 정보를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="2223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.SchemaInfo">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.IXmlSchemaInfo" /&gt;</ph> object containing the schema information for the current node.</source>
          <target state="translated">현재 노드에 대한 스키마 정보를 포함하는 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.IXmlSchemaInfo" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="2224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.SchemaInfo">
          <source>Schema information can be set on elements, attributes, or on text nodes with a non-null <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.ValueType" /&gt;</ph> (typed values).</source>
          <target state="translated">스키마 정보는 <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.ValueType" /&gt;</ph>(형식화된 값)이 null이 아닌 Element, Attribute 또는 Text 노드에 설정될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.SchemaInfo">
          <source>If the current node is not one of the above node types, or if the <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> instance does not report schema information, this property returns <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">현재 노드가 이러한 노드 형식 중 하나가 아니거나, <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> 인스턴스에서 스키마 정보를 보고하지 않는 경우에는 이 속성이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.SchemaInfo">
          <source>If this property is called from an <ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> or an <ph id="ph2">&lt;see cref="T:System.Xml.XmlValidatingReader" /&gt;</ph> object, this property always returns <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="T:System.Xml.XmlValidatingReader" /&gt;</ph> 개체에서 이 속성을 호출하면 항상 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이 반환됩니다.</target>       </trans-unit>
        <trans-unit id="2227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.SchemaInfo">
          <source>These <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> implementations do not expose schema information through the <ph id="ph2">&lt;see langword="SchemaInfo" /&gt;</ph> property.</source>
          <target state="translated">이러한 <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> 구현에서는 <ph id="ph2">&lt;see langword="SchemaInfo" /&gt;</ph> 속성을 통해 스키마 정보를 노출하지 않습니다.</target>       </trans-unit>
        <trans-unit id="2228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.SchemaInfo">
          <source>If you have to get the post-schema-validation information set (PSVI) for an element, position the reader on the end tag of the element, rather than on the start tag.</source>
          <target state="translated">요소에 대한 PSVI(스키마 유효성 검사 이후 정보 집합)을 가져와야 하는 경우 시작 태그 대신에 요소의 종료 태그에 판독기를 배치합니다.</target>       </trans-unit>
        <trans-unit id="2229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.SchemaInfo">
          <source>You get the PSVI through the <ph id="ph1">&lt;see langword="SchemaInfo" /&gt;</ph> property of a reader.</source>
          <target state="translated">판독기의 <ph id="ph1">&lt;see langword="SchemaInfo" /&gt;</ph> 속성을 통해 PSVI를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="2230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.SchemaInfo">
          <source>The validating reader that is created through <ph id="ph1">&lt;see cref="Overload:System.Xml.XmlReader.Create" /&gt;</ph> with the <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.ValidationType" /&gt;</ph> property set to <ph id="ph3">&lt;see cref="F:System.Xml.ValidationType.Schema" /&gt;</ph> has complete PSVI for an element only when the reader is positioned on the end tag of an element.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.Xml.XmlReader.Create" /&gt;</ph> 속성을 <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.ValidationType" /&gt;</ph>로 설정하고 <ph id="ph3">&lt;see cref="F:System.Xml.ValidationType.Schema" /&gt;</ph>를 통해 만든 유효성 검사 판독기는 요소의 종료 태그에 판독기가 배치된 경우에만 요소에 대한 완전한 PSVI가 있습니다.</target>       </trans-unit>
        <trans-unit id="2231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.SchemaInfo">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.IXmlSchemaInfo&gt;</ph> interface exposes a subset of the Post Schema Validation Infoset (PSVI) associated with an XML node.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.IXmlSchemaInfo&gt;</ph> 인터페이스의는 스키마 유효성 검사 이후 정보 집합 (PSVI) XML 노드에 연결 된 하위 집합을 노출 합니다.</target>       </trans-unit>
        <trans-unit id="2232" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.SchemaInfo">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="2233" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.SchemaInfo">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="2234" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Settings">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReaderSettings" /&gt;</ph> object used to create this <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 인스턴스를 만드는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReaderSettings" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="2235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Settings">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReaderSettings" /&gt;</ph> object used to create this reader instance.</source>
          <target state="translated">이 판독기 인스턴스를 만드는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReaderSettings" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Settings">
          <source>If this reader was not created using the <ph id="ph1">&lt;see cref="Overload:System.Xml.XmlReader.Create" /&gt;</ph> method, this property returns <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.Xml.XmlReader.Create" /&gt;</ph> 메서드를 사용하여 판독기를 만들지 않은 경우 이 속성은 <ph id="ph2">&lt;see langword="null" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Settings">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object can contain sensitive information such as user credentials.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 개체에는 사용자 자격 증명과 같은 중요 한 정보가 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Settings">
          <source>Applications must be careful when caching this object or passing it to another component.</source>
          <target state="translated">경우 응용 프로그램 주의 해야이 개체를 캐시 하거나 다른 구성 요소에 전달 합니다.</target>       </trans-unit>
        <trans-unit id="2239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Settings">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class is used to specify the set of features to support on the created reader instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 클래스 만들어진된 판독기 인스턴스에 대해 지원할 기능 집합을 지정 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="2240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Settings">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object returned by this property cannot be modified.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 이 속성에서 반환 된 개체를 수정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="2241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Settings">
          <source>Any attempt to change individual settings results in an exception being thrown.</source>
          <target state="translated">예외가 throw 되 고 개별 설정을 결과 변경 하려고 시도 합니다.</target>       </trans-unit>
        <trans-unit id="2242" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Settings">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="2243" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Settings">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="2244" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Skip">
          <source>Skips the children of the current node.</source>
          <target state="translated">현재 노드의 자식을 건너뜁니다.</target>       </trans-unit>
        <trans-unit id="2245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>In the following XML input if the reader is positioned on the <ph id="ph1">`&lt;a&gt;`</ph> node or any of its attributes, calling <ph id="ph2">`Skip`</ph> positions the reader to the <ph id="ph3">`&lt;b&gt;`</ph> node.</source>
          <target state="translated">다음 xml에서에 판독기가 배치 하는 경우 입력은 <ph id="ph1">`&lt;a&gt;`</ph> 노드 또는 특성, 호출 <ph id="ph2">`Skip`</ph> 판독기가 <ph id="ph3">`&lt;b&gt;`</ph> 노드.</target>       </trans-unit>
        <trans-unit id="2246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>If the reader is positioned on a leaf node already (such as the <ph id="ph1">`&lt;x&gt;`</ph> node or the text node <ph id="ph2">`abc`</ph>), calling <ph id="ph3">`Skip`</ph> is the same as calling <ph id="ph4">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph>.</source>
          <target state="translated">경우 판독기가 리프 노드에 이미 (같은 <ph id="ph1">`&lt;x&gt;`</ph> 노드 또는 텍스트 노드 <ph id="ph2">`abc`</ph>) 호출, <ph id="ph3">`Skip`</ph> 호출할 때와 동일 <ph id="ph4">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>This method checks for well-formed XML.</source>
          <target state="translated">이 메서드는 올바른 형식의 XML에 대 한 확인합니다.</target>       </trans-unit>
        <trans-unit id="2248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>If the reader is an <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph>, this method also validates the skipped content.</source>
          <target state="translated">판독기가 경우에 <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph>,이 메서드는 건너뛴된 콘텐츠의 또한 유효성을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="2249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>The <ph id="ph1">`XmlReader`</ph> implementation determines whether or not the <ph id="ph2">`Skip`</ph> method will expand external entities.</source>
          <target state="translated"><ph id="ph1">`XmlReader`</ph> 구현 결정 여부는 <ph id="ph2">`Skip`</ph> 메서드 외부 엔터티를 확장 합니다.</target>       </trans-unit>
        <trans-unit id="2250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>The following table describes whether the external entities are expanded for the various types of <ph id="ph1">`XmlReader`</ph> objects.</source>
          <target state="translated">다음 표에서 다양 한 유형의 외부 엔터티를 확장 하는지 여부를 설명 <ph id="ph1">`XmlReader`</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="2251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>Type of XmlReader</source>
          <target state="translated">XmlReader의 유형</target>       </trans-unit>
        <trans-unit id="2252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>Expands external entities</source>
          <target state="translated">외부 엔터티 확장</target>       </trans-unit>
        <trans-unit id="2253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>No.</source>
          <target state="translated">아니요.</target>       </trans-unit>
        <trans-unit id="2254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance created by the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method that is reading text data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 만든 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 텍스트 데이터를 읽는 메서드.</target>       </trans-unit>
        <trans-unit id="2255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>No.</source>
          <target state="translated">아니요.</target>       </trans-unit>
        <trans-unit id="2256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance created by the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method that is reading binary data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 만든 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 이진 데이터를 읽는 메서드.</target>       </trans-unit>
        <trans-unit id="2257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>Not applicable.</source>
          <target state="translated">해당 사항 없음.</target>       </trans-unit>
        <trans-unit id="2258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>A schema validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance created by the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">스키마 유효성 검사 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 만든 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="2259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>Yes.</source>
          <target state="translated">예.</target>       </trans-unit>
        <trans-unit id="2260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>Yes.</source>
          <target state="translated">예.</target>       </trans-unit>
        <trans-unit id="2261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance returned by a <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 반환 된 인스턴스는 <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="2262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>Not applicable.</source>
          <target state="translated">해당 사항 없음.</target>       </trans-unit>
        <trans-unit id="2263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>No.</source>
          <target state="translated">아니요.</target>       </trans-unit>
        <trans-unit id="2264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance wrapped around another <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 인스턴스를 다른 래핑하 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="2265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>Depends on the implementation of the underlying <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">기본 구현에 따라 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>(The <ph id="ph1">`Skip`</ph> method on the underlying <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> is called).</source>
          <target state="translated">(의 <ph id="ph1">`Skip`</ph> 메서드는 기본 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 라고).</target>       </trans-unit>
        <trans-unit id="2267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlReader.SkipAsync%2A&gt;</ph>.</source>
          <target state="translated">이 메서드의 비동기 버전에 대 한 참조 <ph id="ph1">&lt;xref:System.Xml.XmlReader.SkipAsync%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>The following example parses an XML file starting on the second book node.</source>
          <target state="translated">다음 예제에서는 두 번째 book 노드에 시작 하는 XML 파일을 구문 분석 합니다.</target>       </trans-unit>
        <trans-unit id="2269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>The example uses the file, <ph id="ph1">`2books.xml`</ph>, as input.</source>
          <target state="translated">이 예제에서는 파일을 사용 하 여 <ph id="ph1">`2books.xml`</ph>입력으로 합니다.</target>       </trans-unit>
        <trans-unit id="2270" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Skip">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="2271" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Skip">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="2272" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.SkipAsync">
          <source>Asynchronously skips the children of the current node.</source>
          <target state="translated">현재 노드의 자식을 비동기적으로 건너뜁니다.</target>       </trans-unit>
        <trans-unit id="2273" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.SkipAsync">
          <source>The current node.</source>
          <target state="translated">현재 노드입니다.</target>       </trans-unit>
        <trans-unit id="2274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.SkipAsync">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlReader.Skip%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">이 비동기 버전의 <ph id="ph1">&lt;xref:System.Xml.XmlReader.Skip%2A&gt;</ph>와 동일한 기능입니다.</target>       </trans-unit>
        <trans-unit id="2275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.SkipAsync">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드를 사용 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> 플래그를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2276" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.SkipAsync">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> 플래그를 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정하지 않고 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 비동기 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="2277" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.SkipAsync">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">이 경우 “비동기 메서드를 사용하려면 XmlReaderSettings.Async를 true로 설정하세요.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="2278" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Value">
          <source>When overridden in a derived class, gets the text value of the current node.</source>
          <target state="translated">파생 클래스에서 재정의되면 현재 노드의 텍스트 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="2279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Value">
          <source>The value returned depends on the <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.NodeType" /&gt;</ph> of the node.</source>
          <target state="translated">노드의 <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.NodeType" /&gt;</ph>에 따라 반환되는 값이 달라집니다.</target>       </trans-unit>
        <trans-unit id="2280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Value">
          <source>The following table lists node types that have a value to return.</source>
          <target state="translated">다음 표에서는 반환할 값이 있는 노드 형식을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="2281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Value">
          <source>All other node types return <ph id="ph1">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated">다른 모든 노드 형식은 <ph id="ph1">&lt;see langword="String.Empty" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Value">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Node type</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 노드 형식</target>       </trans-unit>
        <trans-unit id="2283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Value">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 값</target>       </trans-unit>
        <trans-unit id="2284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Attribute" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The value of the attribute.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Attribute" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 특성의 값입니다.</target>       </trans-unit>
        <trans-unit id="2285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="CDATA" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The content of the CDATA section.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="CDATA" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> CDATA 섹션의 내용입니다.</target>       </trans-unit>
        <trans-unit id="2286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Comment" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The content of the comment.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Comment" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 주석의 내용입니다.</target>       </trans-unit>
        <trans-unit id="2287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="DocumentType" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The internal subset.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="DocumentType" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 내부 하위 집합입니다.</target>       </trans-unit>
        <trans-unit id="2288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="ProcessingInstruction" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The entire content, excluding the target.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="ProcessingInstruction" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 대상을 제외한 전체 내용입니다.</target>       </trans-unit>
        <trans-unit id="2289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="SignificantWhitespace" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The white space between markup in a mixed content model.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="SignificantWhitespace" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 혼합된 내용 모델에서 태그 사이의 공백입니다.</target>       </trans-unit>
        <trans-unit id="2290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Text" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The content of the text node.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Text" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 텍스트 노드의 내용입니다.</target>       </trans-unit>
        <trans-unit id="2291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Whitespace" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The white space between markup.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Whitespace" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 태그 사이의 공백입니다.</target>       </trans-unit>
        <trans-unit id="2292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="XmlDeclaration" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The content of the declaration.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="XmlDeclaration" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 선언 내용입니다.</target>       </trans-unit>
        <trans-unit id="2293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Value">
          <source>For the asynchronous version of this property, see the <ph id="ph1">&lt;xref:System.Xml.XmlReader.GetValueAsync%2A&gt;</ph> method.</source>
          <target state="translated">이 속성의 비동기 버전에 대 한 참조는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.GetValueAsync%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="2294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Value">
          <source>The following example reads an XML file and displays each of the nodes.</source>
          <target state="translated">다음 예제에서는 XML 파일을 읽고 각 노드를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="2295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Value">
          <source>The sample uses the <ph id="ph1">`items.xml`</ph> file.</source>
          <target state="translated">이 샘플에서는 사용 된 <ph id="ph1">`items.xml`</ph> 파일입니다.</target>       </trans-unit>
        <trans-unit id="2296" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Value">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="2297" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Value">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="2298" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.ValueType">
          <source>Gets The Common Language Runtime (CLR) type for the current node.</source>
          <target state="translated">현재 노드의 CLR(공용 언어 런타임) 형식을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="2299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.ValueType">
          <source>The CLR type that corresponds to the typed value of the node.</source>
          <target state="translated">노드의 형식화된 값에 해당하는 CLR 형식입니다.</target>       </trans-unit>
        <trans-unit id="2300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.ValueType">
          <source>The default is <ph id="ph1">&lt;see langword="System.String" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.ValueType">
          <source>See <bpt id="p1">[</bpt>Type Support in the System.Xml Classes<ept id="p1">](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)</ept> for a list of the default mappings.</source>
          <target state="translated">참조 <bpt id="p1">[</bpt>System.Xml 클래스의 형식 지원<ept id="p1">](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)</ept> 기본 매핑의 목록에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="2302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.ValueType">
          <source>An element of type <ph id="ph1">`xs:int`</ph> has a <ph id="ph2">`ValueType`</ph> of <ph id="ph3">`System.Int32`</ph> by default.</source>
          <target state="translated">형식의 요소 <ph id="ph1">`xs:int`</ph> 에 <ph id="ph2">`ValueType`</ph> 의 <ph id="ph3">`System.Int32`</ph> 기본적으로 합니다.</target>       </trans-unit>
        <trans-unit id="2303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.ValueType">
          <source>However, the <ph id="ph1">`ValueType`</ph> could be one of the valid types that can be mapped to <ph id="ph2">`xs:int`</ph>, such as <ph id="ph3">`System.Int16`</ph> or <ph id="ph4">`System.Double`</ph>.</source>
          <target state="translated">그러나는 <ph id="ph1">`ValueType`</ph> 에 매핑될 수 있는 유효한 유형을 중 하나일 수 있습니다 <ph id="ph2">`xs:int`</ph>와 같은 <ph id="ph3">`System.Int16`</ph> 또는 <ph id="ph4">`System.Double`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.ValueType">
          <source>If a node is un-typed, or if the node is an element that contains mixed content, the node value is mapped to the <ph id="ph1">`System.String`</ph> type.</source>
          <target state="translated">노드가 형식화 되었거나 노드 값에 매핑되지 노드가 혼합 된 콘텐츠를 포함 하는 요소 이면는 <ph id="ph1">`System.String`</ph> 유형입니다.</target>       </trans-unit>
        <trans-unit id="2305" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.ValueType">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="2306" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.ValueType">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="2307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.ValueType">
          <source>Implementers must provide a <ph id="ph1">&lt;see langword="ValueType" /&gt;</ph> for every node, even if it is only the <ph id="ph2">&lt;see langword="System.String" /&gt;</ph> type.</source>
          <target state="translated">구현 자가 제공 해야는 <ph id="ph1">&lt;see langword="ValueType" /&gt;</ph> 만 하는 경우에 모든 노드에 대해는 <ph id="ph2">&lt;see langword="System.String" /&gt;</ph> 유형입니다.</target>       </trans-unit>
        <trans-unit id="2308" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.XmlLang">
          <source>When overridden in a derived class, gets the current <ph id="ph1">&lt;see langword="xml:lang" /&gt;</ph> scope.</source>
          <target state="translated">파생 클래스에서 재정의되면 현재 <ph id="ph1">&lt;see langword="xml:lang" /&gt;</ph> 범위를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="2309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.XmlLang">
          <source>The current <ph id="ph1">&lt;see langword="xml:lang" /&gt;</ph> scope.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see langword="xml:lang" /&gt;</ph> 범위입니다.</target>       </trans-unit>
        <trans-unit id="2310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.XmlLang">
          <source>This property represents the <ph id="ph1">`xml:lang`</ph> scope within which the current node resides.</source>
          <target state="translated">이 속성은 나타냅니다는 <ph id="ph1">`xml:lang`</ph> 있는 현재 노드 내에서 범위입니다.</target>       </trans-unit>
        <trans-unit id="2311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.XmlLang">
          <source>For example, here is an XML fragment with <ph id="ph1">`xml:lang`</ph> set to US English in the root element:</source>
          <target state="translated">예를 들어 여기는 XML 조각으로 <ph id="ph1">`xml:lang`</ph> 루트 요소에 영어 (미국)로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="2312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.XmlLang">
          <source>When the reader is positioned on the <ph id="ph1">`name`</ph> element, you can use this property to find that it is in the scope of a US English <ph id="ph2">`xml:lang`</ph> attribute.</source>
          <target state="translated">에 판독기가 배치 하는 경우는 <ph id="ph1">`name`</ph> 요소를이 속성을 사용 하 여 미국 영어의 범위에 필요할 수 있습니다 <ph id="ph2">`xml:lang`</ph> 특성입니다.</target>       </trans-unit>
        <trans-unit id="2313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.XmlLang">
          <source>See <ph id="ph1">&lt;xref:System.Xml.XmlTextReader.XmlLang%2A?displayProperty=nameWithType&gt;</ph> for an example of using this property.</source>
          <target state="translated">참조 <ph id="ph1">&lt;xref:System.Xml.XmlTextReader.XmlLang%2A?displayProperty=nameWithType&gt;</ph> 이 속성을 사용 하는 예제에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="2314" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.XmlLang">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="2315" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.XmlLang">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="2316" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.XmlSpace">
          <source>When overridden in a derived class, gets the current <ph id="ph1">&lt;see langword="xml:space" /&gt;</ph> scope.</source>
          <target state="translated">파생 클래스에서 재정의되면 현재 <ph id="ph1">&lt;see langword="xml:space" /&gt;</ph> 범위를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="2317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.XmlSpace">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlSpace" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlSpace" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="2318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.XmlSpace">
          <source>If no <ph id="ph1">&lt;see langword="xml:space" /&gt;</ph> scope exists, this property defaults to <ph id="ph2">&lt;see langword="XmlSpace.None" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="xml:space" /&gt;</ph> 범위가 존재하지 않으면 이 속성은 기본적으로 <ph id="ph2">&lt;see langword="XmlSpace.None" /&gt;</ph>으로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="2319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.XmlSpace">
          <source>See <ph id="ph1">&lt;xref:System.Xml.XmlTextReader.XmlSpace%2A&gt;</ph> (in the <ph id="ph2">`XmlTextReader`</ph> class) for an example using this property.</source>
          <target state="translated">참조 <ph id="ph1">&lt;xref:System.Xml.XmlTextReader.XmlSpace%2A&gt;</ph> (에 <ph id="ph2">`XmlTextReader`</ph> 클래스)이이 속성을 사용 하는 예제에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="2320" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.XmlSpace">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">이전 비동기 작업이 완료되기 전에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="2321" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.XmlSpace">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">이 경우 “비동기 작업이 이미 진행 중입니다.” 메시지를 나타내며 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>