<Type Name="XmlElement" FullName="System.Xml.XmlElement">
  <TypeSignature Language="C#" Value="public class XmlElement : System.Xml.XmlLinkedNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlElement extends System.Xml.XmlLinkedNode" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlElement" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlElement&#xA;Inherits XmlLinkedNode" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlElement : System::Xml::XmlLinkedNode" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlDocument</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlLinkedNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e92e1-101">요소를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-101">Represents an element.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92e1-102">요소는 W3C 문서 개체 모델 (DOM)에서 가장 일반적인 노드 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-102">Elements are one of the most common nodes in the W3C Document Object Model (DOM).</span></span> <span data-ttu-id="e92e1-103">요소는 관련 된 특성이 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-103">Elements can have attributes associated with them.</span></span> <span data-ttu-id="e92e1-104">`XmlElement` 클래스에는 특성에 액세스 하기 위한 여러 메서드가 (<xref:System.Xml.XmlElement.GetAttribute%2A>, <xref:System.Xml.XmlElement.SetAttribute%2A>, <xref:System.Xml.XmlElement.RemoveAttribute%2A>, <xref:System.Xml.XmlElement.GetAttributeNode%2A>등).</span><span class="sxs-lookup"><span data-stu-id="e92e1-104">The `XmlElement` class has many methods for accessing attributes (<xref:System.Xml.XmlElement.GetAttribute%2A>, <xref:System.Xml.XmlElement.SetAttribute%2A>, <xref:System.Xml.XmlElement.RemoveAttribute%2A>, <xref:System.Xml.XmlElement.GetAttributeNode%2A>, and so on).</span></span> <span data-ttu-id="e92e1-105">사용할 수도 있습니다는 <xref:System.Xml.XmlElement.Attributes%2A> 속성을 반환 하는 <xref:System.Xml.XmlAttributeCollection> 컬렉션에서 특성 이름이 나 인덱스로 액세스할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-105">You can also use the <xref:System.Xml.XmlElement.Attributes%2A> property which returns an <xref:System.Xml.XmlAttributeCollection> enabling you to access attributes by name or index from the collection.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Xml.XmlDocument.CreateElement(System.String)" />
    <altmember cref="T:System.Xml.XmlAttribute" />
    <altmember cref="T:System.Xml.XmlDocument" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal XmlElement (string prefix, string localName, string namespaceURI, System.Xml.XmlDocument doc);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string prefix, string localName, string namespaceURI, class System.Xml.XmlDocument doc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (prefix As String, localName As String, namespaceURI As String, doc As XmlDocument)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; XmlElement(System::String ^ prefix, System::String ^ localName, System::String ^ namespaceURI, System::Xml::XmlDocument ^ doc);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="doc" Type="System.Xml.XmlDocument" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="e92e1-106">네임스페이스 접두사입니다. <see cref="P:System.Xml.XmlElement.Prefix" /> 속성을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="e92e1-106">The namespace prefix; see the <see cref="P:System.Xml.XmlElement.Prefix" /> property.</span></span></param>
        <param name="localName"><span data-ttu-id="e92e1-107">로컬 이름입니다. <see cref="P:System.Xml.XmlElement.LocalName" /> 속성을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="e92e1-107">The local name; see the <see cref="P:System.Xml.XmlElement.LocalName" /> property.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="e92e1-108">네임스페이스 URI입니다. <see cref="P:System.Xml.XmlElement.NamespaceURI" /> 속성을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="e92e1-108">The namespace URI; see the <see cref="P:System.Xml.XmlElement.NamespaceURI" /> property.</span></span></param>
        <param name="doc"><span data-ttu-id="e92e1-109">부모 XML 문서입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-109">The parent XML document.</span></span></param>
        <summary><span data-ttu-id="e92e1-110"><see cref="T:System.Xml.XmlElement" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-110">Initializes a new instance of the <see cref="T:System.Xml.XmlElement" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92e1-111">인스턴스화할 수 없습니다는 <xref:System.Xml.XmlElement> 직접; 대신와 같은 메서드 사용 <xref:System.Xml.XmlDocument.CreateElement%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-111">Do not instantiate an <xref:System.Xml.XmlElement> directly; instead, use methods such as <xref:System.Xml.XmlDocument.CreateElement%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlAttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlAttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Attributes As XmlAttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlAttributeCollection ^ Attributes { System::Xml::XmlAttributeCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92e1-112">이 노드에 대한 특성 목록을 포함하는 <see cref="T:System.Xml.XmlAttributeCollection" />을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-112">Gets an <see cref="T:System.Xml.XmlAttributeCollection" /> containing the list of attributes for this node.</span></span></summary>
        <value>
          <span data-ttu-id="e92e1-113">이 노드에 대한 특성 목록을 포함하는 <see cref="T:System.Xml.XmlAttributeCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-113"><see cref="T:System.Xml.XmlAttributeCollection" /> containing the list of attributes for this node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e92e1-114">다음 예제에서는 첫 번째 특성의 값을 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-114">The following example uses changes the value of the first attribute.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.Attributes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.Attributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.Attributes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.Attributes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.Attributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.Attributes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlNode CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlNode ^ CloneNode(bool deep);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">
          <span data-ttu-id="e92e1-115">지정된 노드 아래의 하위 트리를 재귀적으로 복제하려면 <see langword="true" />이고, 노드 자체(노드가 <see langword="XmlElement" />인 경우 해당 특성)만 복제하려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-115"><see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself (and its attributes if the node is an <see langword="XmlElement" />).</span></span></param>
        <summary><span data-ttu-id="e92e1-116">이 노드의 복제본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-116">Creates a duplicate of this node.</span></span></summary>
        <returns><span data-ttu-id="e92e1-117">복제된 노드입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-117">The cloned node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92e1-118">이 메서드는 노드에 대 한 복사 생성자로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-118">This method serves as a copy constructor for nodes.</span></span> <span data-ttu-id="e92e1-119">중복 된 노드는 부모 없습니다 (<xref:System.Xml.XmlNode.ParentNode%2A> 반환 `null`).</span><span class="sxs-lookup"><span data-stu-id="e92e1-119">The duplicate node has no parent (<xref:System.Xml.XmlNode.ParentNode%2A> returns `null`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92e1-120">새 요소를 만들고 복제 다음 XML 문서에 두 요소를 추가 하는 다음 예제입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-120">The following example creates a new element, clones it, and then adds both elements into an XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.CloneNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.CloneNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.CloneNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.CloneNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.CloneNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.CloneNode Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e92e1-121">지정된 특성의 특성 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-121">Returns the attribute value for the specified attribute.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public virtual string GetAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAttribute (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetAttribute(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e92e1-122">검색할 특성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-122">The name of the attribute to retrieve.</span></span> <span data-ttu-id="e92e1-123">정규화된 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-123">This is a qualified name.</span></span> <span data-ttu-id="e92e1-124">일치하는 노드의 <see langword="Name" /> 속성과 일치합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-124">It is matched against the <see langword="Name" /> property of the matching node.</span></span></param>
        <summary><span data-ttu-id="e92e1-125">지정된 이름을 가진 특성의 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-125">Returns the value for the attribute with the specified name.</span></span></summary>
        <returns><span data-ttu-id="e92e1-126">지정된 특성의 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-126">The value of the specified attribute.</span></span> <span data-ttu-id="e92e1-127">일치 하는 특성이 없거나 특성에 지정된 값 또는 기본값이 없으면 빈 문자열이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-127">An empty string is returned if a matching attribute is not found or if the attribute does not have a specified or default value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e92e1-128">다음 예제에서는 요소에 지정 된 특성이 있는지를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-128">The following example checks to see if the element has the specified attribute.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.HasAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.HasAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.HasAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.HasAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.HasAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.HasAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public virtual string GetAttribute (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttribute(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.GetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAttribute (localName As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetAttribute(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="e92e1-129">검색할 특성의 로컬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-129">The local name of the attribute to retrieve.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="e92e1-130">검색할 특성의 네임스페이스 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-130">The namespace URI of the attribute to retrieve.</span></span></param>
        <summary><span data-ttu-id="e92e1-131">지정된 로컬 이름과 네임스페이스 URI를 갖고 있는 특성의 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-131">Returns the value for the attribute with the specified local name and namespace URI.</span></span></summary>
        <returns><span data-ttu-id="e92e1-132">지정된 특성의 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-132">The value of the specified attribute.</span></span> <span data-ttu-id="e92e1-133">일치 하는 특성이 없거나 특성에 지정된 값 또는 기본값이 없으면 빈 문자열이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-133">An empty string is returned if a matching attribute is not found or if the attribute does not have a specified or default value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAttributeNode">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e92e1-134">지정된 <see cref="T:System.Xml.XmlAttribute" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-134">Return the specified <see cref="T:System.Xml.XmlAttribute" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAttributeNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttribute GetAttributeNode (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlAttribute GetAttributeNode(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.GetAttributeNode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAttributeNode (name As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlAttribute ^ GetAttributeNode(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e92e1-135">검색할 특성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-135">The name of the attribute to retrieve.</span></span> <span data-ttu-id="e92e1-136">정규화된 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-136">This is a qualified name.</span></span> <span data-ttu-id="e92e1-137">일치하는 노드의 <see langword="Name" /> 속성과 일치합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-137">It is matched against the <see langword="Name" /> property of the matching node.</span></span></param>
        <summary><span data-ttu-id="e92e1-138">지정된 이름의 <see langword="XmlAttribute" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-138">Returns the <see langword="XmlAttribute" /> with the specified name.</span></span></summary>
        <returns><span data-ttu-id="e92e1-139">지정된 <see langword="XmlAttribute" />이거나 일치하는 특성이 없는 경우에는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-139">The specified <see langword="XmlAttribute" /> or <see langword="null" /> if a matching attribute was not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e92e1-140">다음 예제에서는 요소에 지정 된 특성이 있는지를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-140">The following example checks to see if the element has the specified attribute.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.GetAttributeNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.GetAttributeNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.GetAttributeNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.GetAttributeNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.GetAttributeNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.GetAttributeNode Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttributeNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttribute GetAttributeNode (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlAttribute GetAttributeNode(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.GetAttributeNode(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAttributeNode (localName As String, namespaceURI As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlAttribute ^ GetAttributeNode(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="e92e1-141">특성의 로컬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-141">The local name of the attribute.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="e92e1-142">특성의 네임스페이스 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-142">The namespace URI of the attribute.</span></span></param>
        <summary><span data-ttu-id="e92e1-143">지정된 로컬 이름과 네임스페이스 URI를 갖고 있는 <see cref="T:System.Xml.XmlAttribute" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-143">Returns the <see cref="T:System.Xml.XmlAttribute" /> with the specified local name and namespace URI.</span></span></summary>
        <returns><span data-ttu-id="e92e1-144">지정된 <see langword="XmlAttribute" />이거나 일치하는 특성이 없는 경우에는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-144">The specified <see langword="XmlAttribute" /> or <see langword="null" /> if a matching attribute was not found.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetElementsByTagName">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e92e1-145">지정된 이름과 일치하는 모든 하위 요소의 목록이 포함된 <see cref="T:System.Xml.XmlNodeList" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-145">Returns an <see cref="T:System.Xml.XmlNodeList" /> containing a list of all descendant elements that match the specified name.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetElementsByTagName">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNodeList GetElementsByTagName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNodeList GetElementsByTagName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.GetElementsByTagName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetElementsByTagName (name As String) As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNodeList ^ GetElementsByTagName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e92e1-146">일치시킬 이름 태그입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-146">The name tag to match.</span></span> <span data-ttu-id="e92e1-147">정규화된 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-147">This is a qualified name.</span></span> <span data-ttu-id="e92e1-148">일치하는 노드의 <see langword="Name" /> 속성과 일치합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-148">It is matched against the <see langword="Name" /> property of the matching node.</span></span> <span data-ttu-id="e92e1-149">별표(\*)는 모든 태그와 일치하는 특수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-149">The asterisk (\*) is a special value that matches all tags.</span></span></param>
        <summary><span data-ttu-id="e92e1-150">지정된 <see cref="P:System.Xml.XmlElement.Name" />과 일치하는 모든 하위 요소의 목록이 포함된 <see cref="T:System.Xml.XmlNodeList" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-150">Returns an <see cref="T:System.Xml.XmlNodeList" /> containing a list of all descendant elements that match the specified <see cref="P:System.Xml.XmlElement.Name" />.</span></span></summary>
        <returns><span data-ttu-id="e92e1-151">일치하는 모든 노드 목록이 포함된 <see cref="T:System.Xml.XmlNodeList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-151">An <see cref="T:System.Xml.XmlNodeList" /> containing a list of all matching nodes.</span></span> <span data-ttu-id="e92e1-152">일치하는 노드가 없으면 목록이 비어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-152">The list is empty if there are no matching nodes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92e1-153">노드는 이러한에서 발생 하는 한 전위 순서에 배치 됩니다는 <xref:System.Xml.XmlElement> 트리 합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-153">The nodes are placed in the order in which they would be encountered in a preorder traversal of the <xref:System.Xml.XmlElement> tree.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e92e1-154">사용 하는 것이 좋습니다.는 <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> 또는 <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType> 메서드 대신는 <xref:System.Xml.XmlElement.GetElementsByTagName%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e92e1-154">It is recommended that you use the <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> or <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType> method instead of the <xref:System.Xml.XmlElement.GetElementsByTagName%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92e1-155">다음 예제를 가져오고 모든 책 제목을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-155">The following example gets and displays all the book titles.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.GetElementsByTagName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.GetElementsByTagName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.GetElementsByTagName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.GetElementsByTagName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.GetElementsByTagName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.GetElementsByTagName Example/VB/source.vb#1)]  
  
 <span data-ttu-id="e92e1-156">이 예제에서는 파일을 사용 하 여 `2books.xml`입력으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-156">The example uses the file, `2books.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlElement.GetElementsByTagName Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlElement.GetElementsByTagName Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetElementsByTagName">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNodeList GetElementsByTagName (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNodeList GetElementsByTagName(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetElementsByTagName (localName As String, namespaceURI As String) As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNodeList ^ GetElementsByTagName(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="e92e1-157">일치시킬 로컬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-157">The local name to match.</span></span> <span data-ttu-id="e92e1-158">별표(\*)는 모든 태그와 일치하는 특수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-158">The asterisk (\*) is a special value that matches all tags.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="e92e1-159">일치시킬 네임스페이스 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-159">The namespace URI to match.</span></span></param>
        <summary><span data-ttu-id="e92e1-160">지정된 <see cref="P:System.Xml.XmlElement.LocalName" /> 및 <see cref="P:System.Xml.XmlElement.NamespaceURI" />와 일치하는 모든 하위 요소의 목록이 포함된 <see cref="T:System.Xml.XmlNodeList" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-160">Returns an <see cref="T:System.Xml.XmlNodeList" /> containing a list of all descendant elements that match the specified <see cref="P:System.Xml.XmlElement.LocalName" /> and <see cref="P:System.Xml.XmlElement.NamespaceURI" />.</span></span></summary>
        <returns><span data-ttu-id="e92e1-161">일치하는 모든 노드 목록이 포함된 <see cref="T:System.Xml.XmlNodeList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-161">An <see cref="T:System.Xml.XmlNodeList" /> containing a list of all matching nodes.</span></span> <span data-ttu-id="e92e1-162">일치하는 노드가 없으면 목록이 비어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-162">The list is empty if there are no matching nodes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92e1-163">노드는 이러한에서 발생 하는 한 전위 순서에 배치 됩니다는 `XmlElement` 트리 합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-163">The nodes are placed in the order in which they would be encountered in a preorder traversal of the `XmlElement` tree.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e92e1-164">사용 하는 것이 좋습니다.는 <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> 또는 <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType> 메서드 대신는 <xref:System.Xml.XmlElement.GetElementsByTagName%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e92e1-164">It is recommended that you use the <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> or <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType> method instead of the <xref:System.Xml.XmlElement.GetElementsByTagName%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HasAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e92e1-165">현재 노드에 지정된 특성이 있는지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-165">Determines whether the current node has the specified attribute.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HasAttribute">
      <MemberSignature Language="C#" Value="public virtual bool HasAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.HasAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasAttribute (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasAttribute(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e92e1-166">찾을 특성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-166">The name of the attribute to find.</span></span> <span data-ttu-id="e92e1-167">정규화된 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-167">This is a qualified name.</span></span> <span data-ttu-id="e92e1-168">일치하는 노드의 <see langword="Name" /> 속성과 일치합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-168">It is matched against the <see langword="Name" /> property of the matching node.</span></span></param>
        <summary><span data-ttu-id="e92e1-169">현재 노드에 지정된 이름의 특성이 있는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-169">Determines whether the current node has an attribute with the specified name.</span></span></summary>
        <returns>
          <span data-ttu-id="e92e1-170">현재 노드에 지정된 특성이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-170"><see langword="true" /> if the current node has the specified attribute; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e92e1-171">다음 예제에서는 요소에 지정 된 특성이 있는지를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-171">The following example checks to see if the element has the specified attribute.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.HasAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.HasAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.HasAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.HasAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.HasAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.HasAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAttribute">
      <MemberSignature Language="C#" Value="public virtual bool HasAttribute (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasAttribute(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.HasAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasAttribute (localName As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasAttribute(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="e92e1-172">찾을 특성의 로컬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-172">The local name of the attribute to find.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="e92e1-173">찾을 특성의 네임스페이스 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-173">The namespace URI of the attribute to find.</span></span></param>
        <summary><span data-ttu-id="e92e1-174">현재 노드에 지정된 로컬 이름과 네임스페이스 URI를 갖고 있는 특성이 있는지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-174">Determines whether the current node has an attribute with the specified local name and namespace URI.</span></span></summary>
        <returns>
          <span data-ttu-id="e92e1-175">현재 노드에 지정된 특성이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-175"><see langword="true" /> if the current node has the specified attribute; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAttributes">
      <MemberSignature Language="C#" Value="public virtual bool HasAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.HasAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasAttributes { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92e1-176">현재 노드에 특성이 있는지를 나타내는 <see langword="boolean" /> 값을 얻습니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-176">Gets a <see langword="boolean" /> value indicating whether the current node has any attributes.</span></span></summary>
        <value>
          <span data-ttu-id="e92e1-177">현재 노드에 특성이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-177"><see langword="true" /> if the current node has attributes; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92e1-178">이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-178">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92e1-179">다음 예제에서는 루트 요소에서 모든 특성을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-179">The following example removes all attributes from the root element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.HasAttributes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.HasAttributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.HasAttributes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.HasAttributes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.HasAttributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.HasAttributes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerText">
      <MemberSignature Language="C#" Value="public override string InnerText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.InnerText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InnerText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92e1-180">노드와 모든 자식의 연결된 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-180">Gets or sets the concatenated values of the node and all its children.</span></span></summary>
        <value><span data-ttu-id="e92e1-181">노드와 모든 자식의 연결된 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-181">The concatenated values of the node and all its children.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92e1-182">이 속성을 설정 모든 자식이 지정된 된 문자열의 구문 분석 된 내용으로 바뀝니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-182">Setting this property replaces all the children with the parsed contents of the given string.</span></span>  
  
 <span data-ttu-id="e92e1-183">이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-183">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92e1-184">다음 예제에서는 비교는 `InnerText` 및 <xref:System.Xml.XmlElement.InnerXml%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-184">The following example compares the `InnerText` and <xref:System.Xml.XmlElement.InnerXml%2A> properties.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.InnerXml Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.InnerXml Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.InnerXml Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.InnerXml Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.InnerXml Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.InnerXml Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerXml">
      <MemberSignature Language="C#" Value="public override string InnerXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerXml" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.InnerXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InnerXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerXml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92e1-185">이 노드의 자식을 나타내는 태그를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-185">Gets or sets the markup representing just the children of this node.</span></span></summary>
        <value><span data-ttu-id="e92e1-186">이 노드의 자식 태그입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-186">The markup of the children of this node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92e1-187">이 속성을 설정 노드의 자식이 지정된 된 문자열의 구문 분석 된 내용으로 바뀝니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-187">Setting this property replaces the children of the node with the parsed contents of the given string.</span></span> <span data-ttu-id="e92e1-188">현재 네임스페이스 컨텍스트에서 구문 분석이 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-188">The parsing is done in the current namespace context.</span></span>  
  
 <span data-ttu-id="e92e1-189">이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-189">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92e1-190">다음 예제에서는 비교는 <xref:System.Xml.XmlElement.InnerText%2A> 및 `InnerXml` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-190">The following example compares the <xref:System.Xml.XmlElement.InnerText%2A> and `InnerXml` properties.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.InnerXml Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.InnerXml Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.InnerXml Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.InnerXml Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.InnerXml Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.InnerXml Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="e92e1-191">이 속성을 설정할 때 지정된 XML이 올바른 형식이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-191">The XML specified when setting this property is not well-formed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92e1-192">요소의 태그 서식을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-192">Gets or sets the tag format of the element.</span></span></summary>
        <value><span data-ttu-id="e92e1-193">반환 <see langword="true" /> 요소가 짧은 태그 형식으로 직렬화 하는 경우 "&lt;항목 /&gt;"; <see langword="false" /> 긴 형식에 대 한 "&lt;항목&gt;&lt;항목/&gt;"입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-193">Returns <see langword="true" /> if the element is to be serialized in the short tag format "&lt;item/&gt;"; <see langword="false" /> for the long format "&lt;item&gt;&lt;/item&gt;".</span></span>  
  
 <span data-ttu-id="e92e1-194">이 속성을 설정할 때 <see langword="true" />로 설정하면 요소의 자식이 제거되고 요소는 짧은 태그 형식으로 serialize됩니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-194">When setting this property, if set to <see langword="true" />, the children of the element are removed and the element is serialized in the short tag format.</span></span> <span data-ttu-id="e92e1-195"><see langword="false" />로 설정하면 요소에 내용이 있는지 여부와 상관없이 속성 값이 변경되고, 요소가 비었으면 긴 형식으로 serialize됩니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-195">If set to <see langword="false" />, the value of the property is changed (regardless of whether or not the element has content); if the element is empty, it is serialized in the long format.</span></span>  
  
 <span data-ttu-id="e92e1-196">이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-196">This property is a Microsoft extension to the Document Object Model (DOM).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92e1-197">이 속성은 문서 개체 모델 (DOM)의 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-197">This property is a Microsoft extension of the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92e1-198">다음 예제에서는 빈 요소에 콘텐츠를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-198">The following example adds content to an empty element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.IsEmpty Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.IsEmpty Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.IsEmpty Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.IsEmpty Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.IsEmpty Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.IsEmpty Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92e1-199">현재 노드의 로컬 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-199">Gets the local name of the current node.</span></span></summary>
        <value><span data-ttu-id="e92e1-200">접두사를 제거한 현재 노드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-200">The name of the current node with the prefix removed.</span></span> <span data-ttu-id="e92e1-201">예를 들어 <see langword="LocalName" /> 은 book 요소에 대 한 &lt;예&gt;합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-201">For example, <see langword="LocalName" /> is book for the element &lt;bk:book&gt;.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92e1-202">노드는 접두사가 없는 경우 `LocalName` 동일 <xref:System.Xml.XmlElement.Name%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-202">If the node does not have a prefix, `LocalName` is the same as <xref:System.Xml.XmlElement.Name%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92e1-203">다음 예제에서는 ISBN 요소에 정보가 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-203">The following example displays information on the ISBN element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92e1-204">노드의 정규화된 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-204">Gets the qualified name of the node.</span></span></summary>
        <value><span data-ttu-id="e92e1-205">노드의 정규화된 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-205">The qualified name of the node.</span></span> <span data-ttu-id="e92e1-206"><see langword="XmlElement" /> 노드의 경우에는 요소의 태그 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-206">For <see langword="XmlElement" /> nodes, this is the tag name of the element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e92e1-207">다음 예제에서는 ISBN 요소에 정보가 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-207">The following example displays information on the ISBN element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlElement.LocalName" />
      </Docs>
    </Member>
    <Member MemberName="NamespaceURI">
      <MemberSignature Language="C#" Value="public override string NamespaceURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.NamespaceURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NamespaceURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NamespaceURI { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92e1-208">이 노드의 네임스페이스 URI를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-208">Gets the namespace URI of this node.</span></span></summary>
        <value><span data-ttu-id="e92e1-209">이 노드의 네임스페이스 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-209">The namespace URI of this node.</span></span> <span data-ttu-id="e92e1-210">네임스페이스 URI가 없으면, 이 속성은 String.Empty를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-210">If there is no namespace URI, this property returns String.Empty.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92e1-211">네임 스페이스를 만들 때 지정 된 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-211">This is the namespace URI specified at creation time.</span></span> <span data-ttu-id="e92e1-212">예를 들어 `NamespaceURI` urn: 요소에 대 한 샘플은 \<예 xmlns:bk = "urn: 예제" ></span><span class="sxs-lookup"><span data-stu-id="e92e1-212">For example, `NamespaceURI` is urn:samples for the element \<bk:book xmlns:bk= "urn:samples"></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92e1-213">다음 예제에서는 ISBN 요소에 정보가 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-213">The following example displays information on the ISBN element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextSibling">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode NextSibling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode NextSibling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.NextSibling" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NextSibling As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ NextSibling { System::Xml::XmlNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92e1-214">이 요소 바로 다음에 오는 <see cref="T:System.Xml.XmlNode" />를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-214">Gets the <see cref="T:System.Xml.XmlNode" /> immediately following this element.</span></span></summary>
        <value><span data-ttu-id="e92e1-215">이 요소 바로 다음에 오는 <see langword="XmlNode" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-215">The <see langword="XmlNode" /> immediately following this element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92e1-216">현재 노드의 형식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-216">Gets the type of the current node.</span></span></summary>
        <value><span data-ttu-id="e92e1-217">노드 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-217">The node type.</span></span> <span data-ttu-id="e92e1-218"><see langword="XmlElement" /> 노드의 경우 이 값은 XmlNodeType.Element입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-218">For <see langword="XmlElement" /> nodes, this value is XmlNodeType.Element.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="OwnerDocument">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlDocument OwnerDocument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDocument OwnerDocument" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.OwnerDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property OwnerDocument As XmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlDocument ^ OwnerDocument { System::Xml::XmlDocument ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92e1-219">이 노드가 속한 <see cref="T:System.Xml.XmlDocument" />를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-219">Gets the <see cref="T:System.Xml.XmlDocument" /> to which this node belongs.</span></span></summary>
        <value><span data-ttu-id="e92e1-220">이 요소가 속한 <see langword="XmlDocument" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-220">The <see langword="XmlDocument" /> to which this element belongs.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92e1-221">현재 노드에 노드를 추가할 때 사용 하 여는 `XmlDocument` 에서 반환 되는 `OwnerDocument` 속성 노드를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-221">When adding nodes to the current node, use the `XmlDocument` returned by the `OwnerDocument` property to create the node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92e1-222">다음 예제에서는 XML 문서에 새 요소를 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-222">The following example inserts a new element into an XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.OwnerDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.OwnerDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.OwnerDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.OwnerDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.OwnerDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.OwnerDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentNode">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode ParentNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode ParentNode" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.ParentNode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ParentNode As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ ParentNode { System::Xml::XmlNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92e1-223">부모를 가질 수 있는 노드의 경우 이 노드의 부모를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-223">Gets the parent of this node (for nodes that can have parents).</span></span></summary>
        <value><span data-ttu-id="e92e1-224">현재 노드의 부모인 <see langword="XmlNode" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-224">The <see langword="XmlNode" /> that is the parent of the current node.</span></span> <span data-ttu-id="e92e1-225">노드를 만들고 트리에 추가하지 않은 경우나 트리에서 노드를 제거한 경우 부모는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-225">If a node has just been created and not yet added to the tree, or if it has been removed from the tree, the parent is <see langword="null" />.</span></span> <span data-ttu-id="e92e1-226">다른 모든 노드의 경우에는 노드의 <see cref="P:System.Xml.XmlNode.NodeType" />에 따라 반환되는 값이 달라집니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-226">For all other nodes, the value returned depends on the <see cref="P:System.Xml.XmlNode.NodeType" /> of the node.</span></span> <span data-ttu-id="e92e1-227">다음 표에서는 <see langword="ParentNode" /> 속성에 대해 가능한 반환 값을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-227">The following table describes the possible return values for the <see langword="ParentNode" /> property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public override string Prefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Prefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92e1-228">이 노드의 네임스페이스 접두사를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-228">Gets or sets the namespace prefix of this node.</span></span></summary>
        <value><span data-ttu-id="e92e1-229">이 노드의 네임스페이스 접두사입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-229">The namespace prefix of this node.</span></span> <span data-ttu-id="e92e1-230">접두사가 없으면, 이 속성은 String.Empty를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-230">If there is no prefix, this property returns String.Empty.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92e1-231">설정 속성 변경 내용을이 <xref:System.Xml.XmlElement.Name%2A> 속성에 대 한 정규화 된 이름을 포함 하는 `XmlElement`합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-231">Setting this property changes the <xref:System.Xml.XmlElement.Name%2A> property, which holds the qualified name for an `XmlElement`.</span></span> <span data-ttu-id="e92e1-232">그러나 접두사를 변경 해도 요소의 네임 스페이스 URI는 변경 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-232">However, changing the prefix does not change the namespace URI of the element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92e1-233">다음 예제에서는 ISBN 요소에 정보가 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-233">The following example displays information on the ISBN element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e92e1-234">이 노드가 읽기 전용인 경우</span><span class="sxs-lookup"><span data-stu-id="e92e1-234">This node is read-only</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="e92e1-235">지정된 접두사에 잘못된 문자가 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="e92e1-235">The specified prefix contains an invalid character.</span></span>  
  
 <span data-ttu-id="e92e1-236">지정된 접두사의 형식이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="e92e1-236">The specified prefix is malformed.</span></span>  
  
 <span data-ttu-id="e92e1-237">이 노드의 namespaceURI가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="e92e1-237">The namespaceURI of this node is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="e92e1-238">지정된 접두사가 “xml”이고 이 노드의 namespaceURI가 “http://www.w3.org/XML/1998/namespace”와 다른 경우</span><span class="sxs-lookup"><span data-stu-id="e92e1-238">The specified prefix is "xml" and the namespaceURI of this node is different from http://www.w3.org/XML/1998/namespace.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public override void RemoveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.RemoveAll" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e92e1-239">지정된 특성 및 현재 노드의 자식을 모두 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-239">Removes all specified attributes and children of the current node.</span></span> <span data-ttu-id="e92e1-240">기본 특성은 제거되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-240">Default attributes are not removed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e92e1-241">다음 예제에서는 루트 요소에서 모든 특성 및 자식 노드를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-241">The following example removes all attributes and child nodes from the root element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.RemoveAll Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAll Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.RemoveAll Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAll Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.RemoveAll Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.RemoveAll Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllAttributes">
      <MemberSignature Language="C#" Value="public virtual void RemoveAllAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAllAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.RemoveAllAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAllAttributes ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAllAttributes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e92e1-242">요소에서 지정된 모든 특성을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-242">Removes all specified attributes from the element.</span></span> <span data-ttu-id="e92e1-243">기본 특성은 제거되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-243">Default attributes are not removed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92e1-244">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-244">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92e1-245">다음 예제에서는 루트 요소에서 모든 특성을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-245">The following example removes all attributes from the root element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.RemoveAllAttributes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAllAttributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.RemoveAllAttributes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAllAttributes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.RemoveAllAttributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.RemoveAllAttributes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e92e1-246">지정된 특성을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-246">Removes the specified attribute.</span></span> <span data-ttu-id="e92e1-247">제거한 특성에 기본값이 있는 경우 즉시 바뀝니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-247">(If the removed attribute has a default value, it is immediately replaced).</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveAttribute">
      <MemberSignature Language="C#" Value="public virtual void RemoveAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.RemoveAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAttribute (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAttribute(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e92e1-248">제거할 특성의 이름입니다. 정규화된 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-248">The name of the attribute to remove.This is a qualified name.</span></span> <span data-ttu-id="e92e1-249">일치하는 노드의 <see langword="Name" /> 속성과 일치합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-249">It is matched against the <see langword="Name" /> property of the matching node.</span></span></param>
        <summary><span data-ttu-id="e92e1-250">이름을 사용하여 특성을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-250">Removes an attribute by name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92e1-251">제거 된 특성 기본값을 포함 하는 특성 즉시 표시는 기본 값을 가질 경우 및 해당 하는 경우 해당 네임 스페이스 URI, 로컬 이름 및 접두사입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-251">If the removed attribute is known to have a default value, an attribute immediately appears containing the default value and, if applicable, the corresponding namespace URI, local name, and prefix.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92e1-252">다음 예제에서는 요소에서 특성을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-252">The following example removes an attribute from an element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.RemoveAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.RemoveAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.RemoveAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e92e1-253">노드는 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-253">The node is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAttribute">
      <MemberSignature Language="C#" Value="public virtual void RemoveAttribute (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAttribute(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.RemoveAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAttribute (localName As String, namespaceURI As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAttribute(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="e92e1-254">제거할 특성의 로컬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-254">The local name of the attribute to remove.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="e92e1-255">제거할 특성의 네임스페이스 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-255">The namespace URI of the attribute to remove.</span></span></param>
        <summary><span data-ttu-id="e92e1-256">지정된 로컬 이름과 네임스페이스 URI를 갖고 있는 특성을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-256">Removes an attribute with the specified local name and namespace URI.</span></span> <span data-ttu-id="e92e1-257">제거한 특성에 기본값이 있는 경우 즉시 바뀝니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-257">(If the removed attribute has a default value, it is immediately replaced).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92e1-258">제거 된 특성 기본값을 포함 하는 특성 즉시 표시는 기본 값을 가질 경우 및 해당 하는 경우 해당 네임 스페이스 URI, 로컬 이름 및 접두사입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-258">If the removed attribute is known to have a default value, an attribute immediately appears containing the default value and, if applicable, the corresponding namespace URI, local name, and prefix.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92e1-259">다음 예제에서는 요소에서 특성을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-259">The following example removes an attribute from an element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.RemoveAttribute1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttribute1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.RemoveAttribute1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttribute1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.RemoveAttribute1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttribute1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e92e1-260">노드는 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-260">The node is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAttributeAt">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode RemoveAttributeAt (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode RemoveAttributeAt(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.RemoveAttributeAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveAttributeAt (i As Integer) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ RemoveAttributeAt(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="e92e1-261">제거할 노드의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-261">The index of the node to remove.</span></span> <span data-ttu-id="e92e1-262">첫 번째 노드에 인덱스 0이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-262">The first node has index 0.</span></span></param>
        <summary><span data-ttu-id="e92e1-263">요소에서 지정된 인덱스의 특성 노드를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-263">Removes the attribute node with the specified index from the element.</span></span> <span data-ttu-id="e92e1-264">제거한 특성에 기본값이 있는 경우 즉시 바뀝니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-264">(If the removed attribute has a default value, it is immediately replaced).</span></span></summary>
        <returns><span data-ttu-id="e92e1-265">제거한 Attribute 노드이거나, 지정한 인덱스에 노드가 없는 경우에는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-265">The attribute node removed or <see langword="null" /> if there is no node at the given index.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92e1-266">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-266">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92e1-267">다음 예제에서는 요소에서 특성을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-267">The following example removes an attribute from an element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.RemoveAttributeAt Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttributeAt Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.RemoveAttributeAt Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttributeAt Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.RemoveAttributeAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttributeAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveAttributeNode">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e92e1-268"><see cref="T:System.Xml.XmlAttribute" />를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-268">Removes an <see cref="T:System.Xml.XmlAttribute" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveAttributeNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttribute RemoveAttributeNode (System.Xml.XmlAttribute oldAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlAttribute RemoveAttributeNode(class System.Xml.XmlAttribute oldAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.RemoveAttributeNode(System.Xml.XmlAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveAttributeNode (oldAttr As XmlAttribute) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlAttribute ^ RemoveAttributeNode(System::Xml::XmlAttribute ^ oldAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldAttr" Type="System.Xml.XmlAttribute" />
      </Parameters>
      <Docs>
        <param name="oldAttr"><span data-ttu-id="e92e1-269">제거할 <see langword="XmlAttribute" /> 노드입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-269">The <see langword="XmlAttribute" /> node to remove.</span></span> <span data-ttu-id="e92e1-270">제거한 특성에 기본값이 있으면 바로 대체됩니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-270">If the removed attribute has a default value, it is immediately replaced.</span></span></param>
        <summary><span data-ttu-id="e92e1-271">지정된 <see cref="T:System.Xml.XmlAttribute" />을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-271">Removes the specified <see cref="T:System.Xml.XmlAttribute" />.</span></span></summary>
        <returns><span data-ttu-id="e92e1-272">제거한 <see langword="XmlAttribute" />이거나, <paramref name="oldAttr" />이 <see langword="null" />의 Attribute 노드가 아닐 경우에는 <see langword="XmlElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-272">The removed <see langword="XmlAttribute" /> or <see langword="null" /> if <paramref name="oldAttr" /> is not an attribute node of the <see langword="XmlElement" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e92e1-273">이 노드가 읽기 전용인 경우</span><span class="sxs-lookup"><span data-stu-id="e92e1-273">This node is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAttributeNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttribute RemoveAttributeNode (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlAttribute RemoveAttributeNode(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.RemoveAttributeNode(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveAttributeNode (localName As String, namespaceURI As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlAttribute ^ RemoveAttributeNode(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="e92e1-274">특성의 로컬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-274">The local name of the attribute.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="e92e1-275">특성의 네임스페이스 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-275">The namespace URI of the attribute.</span></span></param>
        <summary><span data-ttu-id="e92e1-276">로컬 이름과 네임스페이스 URI로 지정한 <see cref="T:System.Xml.XmlAttribute" />를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-276">Removes the <see cref="T:System.Xml.XmlAttribute" /> specified by the local name and namespace URI.</span></span> <span data-ttu-id="e92e1-277">제거한 특성에 기본값이 있는 경우 즉시 바뀝니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-277">(If the removed attribute has a default value, it is immediately replaced).</span></span></summary>
        <returns><span data-ttu-id="e92e1-278">제거한 <see langword="XmlAttribute" />이거나 <see langword="null" />에 일치하는 Attribute 노드가 없으면 <see langword="XmlElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-278">The removed <see langword="XmlAttribute" /> or <see langword="null" /> if the <see langword="XmlElement" /> does not have a matching attribute node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e92e1-279">다음 예제에서는 요소에서 특성을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-279">The following example removes an attribute from an element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.RemoveAttributeNode1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttributeNode1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.RemoveAttributeNode1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttributeNode1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.RemoveAttributeNode1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttributeNode1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e92e1-280">이 노드가 읽기 전용인 경우</span><span class="sxs-lookup"><span data-stu-id="e92e1-280">This node is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SchemaInfo">
      <MemberSignature Language="C#" Value="public override System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.IXmlSchemaInfo SchemaInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.SchemaInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SchemaInfo As IXmlSchemaInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::IXmlSchemaInfo ^ SchemaInfo { System::Xml::Schema::IXmlSchemaInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.IXmlSchemaInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e92e1-281">스키마 유효성 검사의 결과로 이 노드에 할당된 스키마 유효성 검사 이후 정보 집합을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-281">Gets the post schema validation infoset that has been assigned to this node as a result of schema validation.</span></span></summary>
        <value><span data-ttu-id="e92e1-282">이 노드의 스키마 유효성 검사 이후 정보 집합이 포함된 <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-282">An <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> object containing the post schema validation infoset of this node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92e1-283"><xref:System.Xml.XmlElement.SchemaInfo%2A> 이 노드의 유효성을 검사할 때 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-283">The <xref:System.Xml.XmlElement.SchemaInfo%2A> property is set when this node is validated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e92e1-284">지정된 특성의 값을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-284">Sets the value of the specified attribute.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetAttribute">
      <MemberSignature Language="C#" Value="public virtual void SetAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.SetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAttribute(System::String ^ name, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e92e1-285">만들거나 변경할 특성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-285">The name of the attribute to create or alter.</span></span> <span data-ttu-id="e92e1-286">정규화된 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-286">This is a qualified name.</span></span> <span data-ttu-id="e92e1-287">이름에 콜론이 포함되어 있으면 접두사와 로컬 이름 구성 요소로 구문 분석됩니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-287">If the name contains a colon it is parsed into prefix and local name components.</span></span></param>
        <param name="value"><span data-ttu-id="e92e1-288">특성에 설정할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-288">The value to set for the attribute.</span></span></param>
        <summary><span data-ttu-id="e92e1-289">지정된 이름을 가진 특성의 값을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-289">Sets the value of the attribute with the specified name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92e1-290">해당 값이 변경 되는 요소에 동일한 이름의 특성이 이미 있으면 `value`합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-290">If an attribute with the same name is already present in the element, its value is changed to that of `value`.</span></span> <span data-ttu-id="e92e1-291">`value` 간단한 문자열이입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-291">`value` is a simple string.</span></span> <span data-ttu-id="e92e1-292">설정 되는 구문 분석 되지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-292">It is not parsed as it is being set.</span></span> <span data-ttu-id="e92e1-293">엔터티 참조로 인식 되도록 하려면 다음 구문 사용 같은 모든 태그 리터럴 텍스트로 처리 및 기록 될 때 제대로 구현 하 여 이스케이프 해야 합니다. 엔터티 참조를 포함 하는 특성 값을 지정 하려면 사용자를 만들어야는 <xref:System.Xml.XmlAttribute> 노드와 함께 <xref:System.Xml.XmlText> 및 <xref:System.Xml.XmlEntityReference> 노드 적절 한 하위 트리를 작성 및 사용 하 여 <xref:System.Xml.XmlElement.SetAttributeNode%2A> 특성의 값으로 할당할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-293">Any markup, such as syntax to be recognized as an entity reference, is treated as literal text and needs to be properly escaped by the implementation when it is written out. In order to assign an attribute value that contains entity references, the user must create an <xref:System.Xml.XmlAttribute> node plus any <xref:System.Xml.XmlText> and <xref:System.Xml.XmlEntityReference> nodes, build the appropriate subtree and use <xref:System.Xml.XmlElement.SetAttributeNode%2A> to assign it as the value of an attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="e92e1-294">지정된 이름에 잘못된 문자가 있는 경우</span><span class="sxs-lookup"><span data-stu-id="e92e1-294">The specified name contains an invalid character.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e92e1-295">노드는 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-295">The node is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetAttribute">
      <MemberSignature Language="C#" Value="public virtual string SetAttribute (string localName, string namespaceURI, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string SetAttribute(string localName, string namespaceURI, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.SetAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetAttribute (localName As String, namespaceURI As String, value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ SetAttribute(System::String ^ localName, System::String ^ namespaceURI, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="e92e1-296">특성의 로컬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-296">The local name of the attribute.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="e92e1-297">특성의 네임스페이스 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-297">The namespace URI of the attribute.</span></span></param>
        <param name="value"><span data-ttu-id="e92e1-298">특성에 설정할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-298">The value to set for the attribute.</span></span></param>
        <summary><span data-ttu-id="e92e1-299">지정된 로컬 이름과 네임스페이스 URI를 갖고 있는 특성의 값을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-299">Sets the value of the attribute with the specified local name and namespace URI.</span></span></summary>
        <returns><span data-ttu-id="e92e1-300">특성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-300">The attribute value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetAttributeNode">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e92e1-301">새 <see cref="T:System.Xml.XmlAttribute" />를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-301">Adds a new <see cref="T:System.Xml.XmlAttribute" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetAttributeNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttribute SetAttributeNode (System.Xml.XmlAttribute newAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlAttribute SetAttributeNode(class System.Xml.XmlAttribute newAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetAttributeNode (newAttr As XmlAttribute) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlAttribute ^ SetAttributeNode(System::Xml::XmlAttribute ^ newAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newAttr" Type="System.Xml.XmlAttribute" />
      </Parameters>
      <Docs>
        <param name="newAttr"><span data-ttu-id="e92e1-302">이 요소의 특성 컬렉션에 추가할 <see langword="XmlAttribute" /> 노드입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-302">The <see langword="XmlAttribute" /> node to add to the attribute collection for this element.</span></span></param>
        <summary><span data-ttu-id="e92e1-303">지정된 <see cref="T:System.Xml.XmlAttribute" />를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-303">Adds the specified <see cref="T:System.Xml.XmlAttribute" />.</span></span></summary>
        <returns><span data-ttu-id="e92e1-304">특성이 같은 이름을 가진 기존 특성을 대체할 경우 이전 <see langword="XmlAttribute" />가 반환됩니다. 그렇지 않으면 <see langword="null" />이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-304">If the attribute replaces an existing attribute with the same name, the old <see langword="XmlAttribute" /> is returned; otherwise, <see langword="null" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92e1-305">요소에 해당 이름 가진 특성이 이미 있으면 새 식으로 대체 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-305">If an attribute with that name is already present in the element, it is replaced by the new one.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e92e1-306">이 노드를 만든 문서가 아닌 다른 문서에서 <paramref name="newAttr" />를 만든 경우</span><span class="sxs-lookup"><span data-stu-id="e92e1-306">The <paramref name="newAttr" /> was created from a different document than the one that created this node.</span></span> <span data-ttu-id="e92e1-307">이 노드가 읽기 전용인 경우</span><span class="sxs-lookup"><span data-stu-id="e92e1-307">Or this node is read-only.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e92e1-308"><paramref name="newAttr" />가 이미 다른 <see langword="XmlElement" /> 개체의 특성인 경우.</span><span class="sxs-lookup"><span data-stu-id="e92e1-308">The <paramref name="newAttr" /> is already an attribute of another <see langword="XmlElement" /> object.</span></span> <span data-ttu-id="e92e1-309">다른 <see langword="XmlAttribute" /> 개체에서 다시 사용하려면 명시적으로 <see langword="XmlElement" /> 노드를 복제해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-309">You must explicitly clone <see langword="XmlAttribute" /> nodes to re-use them in other <see langword="XmlElement" /> objects.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetAttributeNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttribute SetAttributeNode (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlAttribute SetAttributeNode(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.SetAttributeNode(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetAttributeNode (localName As String, namespaceURI As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlAttribute ^ SetAttributeNode(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="e92e1-310">특성의 로컬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-310">The local name of the attribute.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="e92e1-311">특성의 네임스페이스 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-311">The namespace URI of the attribute.</span></span></param>
        <summary><span data-ttu-id="e92e1-312">지정된 <see cref="T:System.Xml.XmlAttribute" />를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-312">Adds the specified <see cref="T:System.Xml.XmlAttribute" />.</span></span></summary>
        <returns><span data-ttu-id="e92e1-313">추가할 <see langword="XmlAttribute" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-313">The <see langword="XmlAttribute" /> to add.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92e1-314">`XmlAttribute` 자식을 포함 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-314">The `XmlAttribute` does not have any children.</span></span> <span data-ttu-id="e92e1-315">사용 하 여 <xref:System.Xml.XmlAttribute.Value%2A> 특성에는 텍스트 값을 할당 하거나 사용 하 여 <xref:System.Xml.XmlNode.AppendChild%2A> (또는 비슷한 메서드) 특성에 자식을 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-315">Use <xref:System.Xml.XmlAttribute.Value%2A> to assign a text value to the attribute or use <xref:System.Xml.XmlNode.AppendChild%2A> (or a similar method) to add children to the attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92e1-316">다음 예제에서는 요소에 특성을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-316">The following example adds an attribute to an element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.SetAttributeNode1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.SetAttributeNode1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.SetAttributeNode1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.SetAttributeNode1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.SetAttributeNode1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.SetAttributeNode1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteContentTo">
      <MemberSignature Language="C#" Value="public override void WriteContentTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteContentTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.WriteContentTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteContentTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteContentTo(System::Xml::XmlWriter ^ w);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w"><span data-ttu-id="e92e1-317">저장할 대상 <see langword="XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-317">The <see langword="XmlWriter" /> to which you want to save.</span></span></param>
        <summary><span data-ttu-id="e92e1-318">지정된 <see cref="T:System.Xml.XmlWriter" />에 노드의 모든 자식을 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-318">Saves all the children of the node to the specified <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92e1-319">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-319">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92e1-320">다음 예제에서는 콘솔에는 요소의 내용을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-320">The following example displays the contents of the element to the console.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.WriteContentTo Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.WriteContentTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.WriteContentTo Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.WriteContentTo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.WriteContentTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.WriteContentTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlElement.WriteTo(System.Xml.XmlWriter)" />
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public override void WriteTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.WriteTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteTo(System::Xml::XmlWriter ^ w);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w"><span data-ttu-id="e92e1-321">저장할 대상 <see langword="XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-321">The <see langword="XmlWriter" /> to which you want to save.</span></span></param>
        <summary><span data-ttu-id="e92e1-322">현재 노드를 지정된 <see cref="T:System.Xml.XmlWriter" />에 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-322">Saves the current node to the specified <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92e1-323">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-323">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e92e1-324">다음 예제에서는 요소에 특성을 추가 하 고 수정된 된 요소를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="e92e1-324">The following example adds an attribute to an element and then displays the modified element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.WriteTo Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.WriteTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.WriteTo Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.WriteTo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.WriteTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.WriteTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>