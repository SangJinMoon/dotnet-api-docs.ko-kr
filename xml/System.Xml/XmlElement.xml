<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlElement.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d7a4d609de9aa613973f5d46855ba168b2714a10.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d7a4d609de9aa613973f5d46855ba168b2714a10</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlElement">
          <source>Represents an element.</source>
          <target state="translated">요소를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlElement">
          <source>Elements are one of the most common nodes in the W3C Document Object Model (DOM).</source>
          <target state="translated">요소는 W3C 문서 개체 모델 (DOM)에서 가장 일반적인 노드 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlElement">
          <source>Elements can have attributes associated with them.</source>
          <target state="translated">요소는 관련 된 특성이 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlElement">
          <source>The <ph id="ph1">`XmlElement`</ph> class has many methods for accessing attributes (<ph id="ph2">&lt;xref:System.Xml.XmlElement.GetAttribute%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlElement.SetAttribute%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.XmlElement.RemoveAttribute%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Xml.XmlElement.GetAttributeNode%2A&gt;</ph>, and so on).</source>
          <target state="translated"><ph id="ph1">`XmlElement`</ph> 클래스에는 특성에 액세스 하기 위한 여러 메서드가 (<ph id="ph2">&lt;xref:System.Xml.XmlElement.GetAttribute%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlElement.SetAttribute%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.XmlElement.RemoveAttribute%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Xml.XmlElement.GetAttributeNode%2A&gt;</ph>등).</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlElement">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Xml.XmlElement.Attributes%2A&gt;</ph> property which returns an <ph id="ph2">&lt;xref:System.Xml.XmlAttributeCollection&gt;</ph> enabling you to access attributes by name or index from the collection.</source>
          <target state="translated">사용할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Xml.XmlElement.Attributes%2A&gt;</ph> 속성을 반환 하는 <ph id="ph2">&lt;xref:System.Xml.XmlAttributeCollection&gt;</ph> 컬렉션에서 특성 이름이 나 인덱스로 액세스할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
          <source>The namespace prefix; see the <ph id="ph1">&lt;see cref="P:System.Xml.XmlElement.Prefix" /&gt;</ph> property.</source>
          <target state="translated">네임스페이스 접두사입니다. <ph id="ph1">&lt;see cref="P:System.Xml.XmlElement.Prefix" /&gt;</ph> 속성을 참조하십시오.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
          <source>The local name; see the <ph id="ph1">&lt;see cref="P:System.Xml.XmlElement.LocalName" /&gt;</ph> property.</source>
          <target state="translated">로컬 이름입니다. <ph id="ph1">&lt;see cref="P:System.Xml.XmlElement.LocalName" /&gt;</ph> 속성을 참조하십시오.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
          <source>The namespace URI; see the <ph id="ph1">&lt;see cref="P:System.Xml.XmlElement.NamespaceURI" /&gt;</ph> property.</source>
          <target state="translated">네임스페이스 URI입니다. <ph id="ph1">&lt;see cref="P:System.Xml.XmlElement.NamespaceURI" /&gt;</ph> 속성을 참조하십시오.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
          <source>The parent XML document.</source>
          <target state="translated">부모 XML 문서입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
          <source>Do not instantiate an <ph id="ph1">&lt;xref:System.Xml.XmlElement&gt;</ph> directly; instead, use methods such as <ph id="ph2">&lt;xref:System.Xml.XmlDocument.CreateElement%2A&gt;</ph>.</source>
          <target state="translated">인스턴스화할 수 없습니다는 <ph id="ph1">&lt;xref:System.Xml.XmlElement&gt;</ph> 직접; 대신와 같은 메서드 사용 <ph id="ph2">&lt;xref:System.Xml.XmlDocument.CreateElement%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlElement.Attributes">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Xml.XmlAttributeCollection" /&gt;</ph> containing the list of attributes for this node.</source>
          <target state="translated">이 노드에 대한 특성 목록을 포함하는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlAttributeCollection" /&gt;</ph>을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.Attributes">
          <source><ph id="ph1">&lt;see cref="T:System.Xml.XmlAttributeCollection" /&gt;</ph> containing the list of attributes for this node.</source>
          <target state="translated">이 노드에 대한 특성 목록을 포함하는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlAttributeCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.Attributes">
          <source>The following example uses changes the value of the first attribute.</source>
          <target state="translated">다음 예제에서는 첫 번째 특성의 값을 변경 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.CloneNode(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to recursively clone the subtree under the specified node; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to clone only the node itself (and its attributes if the node is an <ph id="ph3">&lt;see langword="XmlElement" /&gt;</ph>).</source>
          <target state="translated">지정된 노드 아래의 하위 트리를 재귀적으로 복제하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 노드 자체(노드가 <ph id="ph3">&lt;see langword="XmlElement" /&gt;</ph>인 경우 해당 특성)만 복제하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.CloneNode(System.Boolean)">
          <source>Creates a duplicate of this node.</source>
          <target state="translated">이 노드의 복제본을 만듭니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.CloneNode(System.Boolean)">
          <source>The cloned node.</source>
          <target state="translated">복제된 노드입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.CloneNode(System.Boolean)">
          <source>This method serves as a copy constructor for nodes.</source>
          <target state="translated">이 메서드는 노드에 대 한 복사 생성자로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.CloneNode(System.Boolean)">
          <source>The duplicate node has no parent (<ph id="ph1">&lt;xref:System.Xml.XmlNode.ParentNode%2A&gt;</ph> returns <ph id="ph2">`null`</ph>).</source>
          <target state="translated">중복 된 노드는 부모 없습니다 (<ph id="ph1">&lt;xref:System.Xml.XmlNode.ParentNode%2A&gt;</ph> 반환 <ph id="ph2">`null`</ph>).</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.CloneNode(System.Boolean)">
          <source>The following example creates a new element, clones it, and then adds both elements into an XML document.</source>
          <target state="translated">새 요소를 만들고 복제 다음 XML 문서에 두 요소를 추가 하는 다음 예제입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlElement">
          <source>Returns the attribute value for the specified attribute.</source>
          <target state="translated">지정된 특성의 특성 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetAttribute(System.String)">
          <source>The name of the attribute to retrieve.</source>
          <target state="translated">검색할 특성의 이름입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetAttribute(System.String)">
          <source>This is a qualified name.</source>
          <target state="translated">정규화된 이름입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetAttribute(System.String)">
          <source>It is matched against the <ph id="ph1">&lt;see langword="Name" /&gt;</ph> property of the matching node.</source>
          <target state="translated">일치하는 노드의 <ph id="ph1">&lt;see langword="Name" /&gt;</ph> 속성과 일치합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetAttribute(System.String)">
          <source>Returns the value for the attribute with the specified name.</source>
          <target state="translated">지정된 이름을 가진 특성의 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetAttribute(System.String)">
          <source>The value of the specified attribute.</source>
          <target state="translated">지정된 특성의 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetAttribute(System.String)">
          <source>An empty string is returned if a matching attribute is not found or if the attribute does not have a specified or default value.</source>
          <target state="translated">일치 하는 특성이 없거나 특성에 지정된 값 또는 기본값이 없으면 빈 문자열이 반환됩니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.GetAttribute(System.String)">
          <source>The following example checks to see if the element has the specified attribute.</source>
          <target state="translated">다음 예제에서는 요소에 지정 된 특성이 있는지를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetAttribute(System.String,System.String)">
          <source>The local name of the attribute to retrieve.</source>
          <target state="translated">검색할 특성의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetAttribute(System.String,System.String)">
          <source>The namespace URI of the attribute to retrieve.</source>
          <target state="translated">검색할 특성의 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetAttribute(System.String,System.String)">
          <source>Returns the value for the attribute with the specified local name and namespace URI.</source>
          <target state="translated">지정된 로컬 이름과 네임스페이스 URI를 갖고 있는 특성의 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetAttribute(System.String,System.String)">
          <source>The value of the specified attribute.</source>
          <target state="translated">지정된 특성의 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetAttribute(System.String,System.String)">
          <source>An empty string is returned if a matching attribute is not found or if the attribute does not have a specified or default value.</source>
          <target state="translated">일치 하는 특성이 없거나 특성에 지정된 값 또는 기본값이 없으면 빈 문자열이 반환됩니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlElement">
          <source>Return the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlAttribute" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlAttribute" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetAttributeNode(System.String)">
          <source>The name of the attribute to retrieve.</source>
          <target state="translated">검색할 특성의 이름입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetAttributeNode(System.String)">
          <source>This is a qualified name.</source>
          <target state="translated">정규화된 이름입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetAttributeNode(System.String)">
          <source>It is matched against the <ph id="ph1">&lt;see langword="Name" /&gt;</ph> property of the matching node.</source>
          <target state="translated">일치하는 노드의 <ph id="ph1">&lt;see langword="Name" /&gt;</ph> 속성과 일치합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetAttributeNode(System.String)">
          <source>Returns the <ph id="ph1">&lt;see langword="XmlAttribute" /&gt;</ph> with the specified name.</source>
          <target state="translated">지정된 이름의 <ph id="ph1">&lt;see langword="XmlAttribute" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetAttributeNode(System.String)">
          <source>The specified <ph id="ph1">&lt;see langword="XmlAttribute" /&gt;</ph> or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if a matching attribute was not found.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see langword="XmlAttribute" /&gt;</ph>이거나 일치하는 특성이 없는 경우에는 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.GetAttributeNode(System.String)">
          <source>The following example checks to see if the element has the specified attribute.</source>
          <target state="translated">다음 예제에서는 요소에 지정 된 특성이 있는지를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetAttributeNode(System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">특성의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetAttributeNode(System.String,System.String)">
          <source>The namespace URI of the attribute.</source>
          <target state="translated">특성의 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetAttributeNode(System.String,System.String)">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Xml.XmlAttribute" /&gt;</ph> with the specified local name and namespace URI.</source>
          <target state="translated">지정된 로컬 이름과 네임스페이스 URI를 갖고 있는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlAttribute" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetAttributeNode(System.String,System.String)">
          <source>The specified <ph id="ph1">&lt;see langword="XmlAttribute" /&gt;</ph> or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if a matching attribute was not found.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see langword="XmlAttribute" /&gt;</ph>이거나 일치하는 특성이 없는 경우에는 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlElement">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> containing a list of all descendant elements that match the specified name.</source>
          <target state="translated">지정된 이름과 일치하는 모든 하위 요소의 목록이 포함된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetElementsByTagName(System.String)">
          <source>The name tag to match.</source>
          <target state="translated">일치시킬 이름 태그입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetElementsByTagName(System.String)">
          <source>This is a qualified name.</source>
          <target state="translated">정규화된 이름입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetElementsByTagName(System.String)">
          <source>It is matched against the <ph id="ph1">&lt;see langword="Name" /&gt;</ph> property of the matching node.</source>
          <target state="translated">일치하는 노드의 <ph id="ph1">&lt;see langword="Name" /&gt;</ph> 속성과 일치합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetElementsByTagName(System.String)">
          <source>The asterisk (*) is a special value that matches all tags.</source>
          <target state="translated">별표(*)는 모든 태그와 일치하는 특수 값입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetElementsByTagName(System.String)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> containing a list of all descendant elements that match the specified <ph id="ph2">&lt;see cref="P:System.Xml.XmlElement.Name" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph2">&lt;see cref="P:System.Xml.XmlElement.Name" /&gt;</ph>과 일치하는 모든 하위 요소의 목록이 포함된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetElementsByTagName(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> containing a list of all matching nodes.</source>
          <target state="translated">일치하는 모든 노드 목록이 포함된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetElementsByTagName(System.String)">
          <source>The list is empty if there are no matching nodes.</source>
          <target state="translated">일치하는 노드가 없으면 목록이 비어 있습니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.GetElementsByTagName(System.String)">
          <source>The nodes are placed in the order in which they would be encountered in a preorder traversal of the <ph id="ph1">&lt;xref:System.Xml.XmlElement&gt;</ph> tree.</source>
          <target state="translated">노드는 이러한에서 발생 하는 한 전위 순서에 배치 됩니다는 <ph id="ph1">&lt;xref:System.Xml.XmlElement&gt;</ph> 트리 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.GetElementsByTagName(System.String)">
          <source>It is recommended that you use the <ph id="ph1">&lt;xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType&gt;</ph> method instead of the <ph id="ph3">&lt;xref:System.Xml.XmlElement.GetElementsByTagName%2A&gt;</ph> method.</source>
          <target state="translated">사용 하는 것이 좋습니다.는 <ph id="ph1">&lt;xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType&gt;</ph> 메서드 대신는 <ph id="ph3">&lt;xref:System.Xml.XmlElement.GetElementsByTagName%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.GetElementsByTagName(System.String)">
          <source>The following example gets and displays all the book titles.</source>
          <target state="translated">다음 예제를 가져오고 모든 책 제목을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.GetElementsByTagName(System.String)">
          <source>The example uses the file, <ph id="ph1">`2books.xml`</ph>, as input.</source>
          <target state="translated">이 예제에서는 파일을 사용 하 여 <ph id="ph1">`2books.xml`</ph>입력으로 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)">
          <source>The local name to match.</source>
          <target state="translated">일치시킬 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)">
          <source>The asterisk (*) is a special value that matches all tags.</source>
          <target state="translated">별표(*)는 모든 태그와 일치하는 특수 값입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)">
          <source>The namespace URI to match.</source>
          <target state="translated">일치시킬 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> containing a list of all descendant elements that match the specified <ph id="ph2">&lt;see cref="P:System.Xml.XmlElement.LocalName" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Xml.XmlElement.NamespaceURI" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph2">&lt;see cref="P:System.Xml.XmlElement.LocalName" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="P:System.Xml.XmlElement.NamespaceURI" /&gt;</ph>와 일치하는 모든 하위 요소의 목록이 포함된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> containing a list of all matching nodes.</source>
          <target state="translated">일치하는 모든 노드 목록이 포함된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)">
          <source>The list is empty if there are no matching nodes.</source>
          <target state="translated">일치하는 노드가 없으면 목록이 비어 있습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)">
          <source>The nodes are placed in the order in which they would be encountered in a preorder traversal of the <ph id="ph1">`XmlElement`</ph> tree.</source>
          <target state="translated">노드는 이러한에서 발생 하는 한 전위 순서에 배치 됩니다는 <ph id="ph1">`XmlElement`</ph> 트리 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)">
          <source>It is recommended that you use the <ph id="ph1">&lt;xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType&gt;</ph> method instead of the <ph id="ph3">&lt;xref:System.Xml.XmlElement.GetElementsByTagName%2A&gt;</ph> method.</source>
          <target state="translated">사용 하는 것이 좋습니다.는 <ph id="ph1">&lt;xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType&gt;</ph> 메서드 대신는 <ph id="ph3">&lt;xref:System.Xml.XmlElement.GetElementsByTagName%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlElement">
          <source>Determines whether the current node has the specified attribute.</source>
          <target state="translated">현재 노드에 지정된 특성이 있는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.HasAttribute(System.String)">
          <source>The name of the attribute to find.</source>
          <target state="translated">찾을 특성의 이름입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.HasAttribute(System.String)">
          <source>This is a qualified name.</source>
          <target state="translated">정규화된 이름입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.HasAttribute(System.String)">
          <source>It is matched against the <ph id="ph1">&lt;see langword="Name" /&gt;</ph> property of the matching node.</source>
          <target state="translated">일치하는 노드의 <ph id="ph1">&lt;see langword="Name" /&gt;</ph> 속성과 일치합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.HasAttribute(System.String)">
          <source>Determines whether the current node has an attribute with the specified name.</source>
          <target state="translated">현재 노드에 지정된 이름의 특성이 있는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.HasAttribute(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current node has the specified attribute; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 노드에 지정된 특성이 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.HasAttribute(System.String)">
          <source>The following example checks to see if the element has the specified attribute.</source>
          <target state="translated">다음 예제에서는 요소에 지정 된 특성이 있는지를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.HasAttribute(System.String,System.String)">
          <source>The local name of the attribute to find.</source>
          <target state="translated">찾을 특성의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.HasAttribute(System.String,System.String)">
          <source>The namespace URI of the attribute to find.</source>
          <target state="translated">찾을 특성의 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.HasAttribute(System.String,System.String)">
          <source>Determines whether the current node has an attribute with the specified local name and namespace URI.</source>
          <target state="translated">현재 노드에 지정된 로컬 이름과 네임스페이스 URI를 갖고 있는 특성이 있는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.HasAttribute(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current node has the specified attribute; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 노드에 지정된 특성이 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlElement.HasAttributes">
          <source>Gets a <ph id="ph1">&lt;see langword="boolean" /&gt;</ph> value indicating whether the current node has any attributes.</source>
          <target state="translated">현재 노드에 특성이 있는지를 나타내는 <ph id="ph1">&lt;see langword="boolean" /&gt;</ph> 값을 얻습니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.HasAttributes">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current node has attributes; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 노드에 특성이 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.HasAttributes">
          <source>This property is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.HasAttributes">
          <source>The following example removes all attributes from the root element.</source>
          <target state="translated">다음 예제에서는 루트 요소에서 모든 특성을 제거합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlElement.InnerText">
          <source>Gets or sets the concatenated values of the node and all its children.</source>
          <target state="translated">노드와 모든 자식의 연결된 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.InnerText">
          <source>The concatenated values of the node and all its children.</source>
          <target state="translated">노드와 모든 자식의 연결된 값입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.InnerText">
          <source>Setting this property replaces all the children with the parsed contents of the given string.</source>
          <target state="translated">이 속성을 설정 모든 자식이 지정된 된 문자열의 구문 분석 된 내용으로 바뀝니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.InnerText">
          <source>This property is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.InnerText">
          <source>The following example compares the <ph id="ph1">`InnerText`</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlElement.InnerXml%2A&gt;</ph> properties.</source>
          <target state="translated">다음 예제에서는 비교는 <ph id="ph1">`InnerText`</ph> 및 <ph id="ph2">&lt;xref:System.Xml.XmlElement.InnerXml%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlElement.InnerXml">
          <source>Gets or sets the markup representing just the children of this node.</source>
          <target state="translated">이 노드의 자식을 나타내는 태그를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.InnerXml">
          <source>The markup of the children of this node.</source>
          <target state="translated">이 노드의 자식 태그입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.InnerXml">
          <source>Setting this property replaces the children of the node with the parsed contents of the given string.</source>
          <target state="translated">이 속성을 설정 노드의 자식이 지정된 된 문자열의 구문 분석 된 내용으로 바뀝니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.InnerXml">
          <source>The parsing is done in the current namespace context.</source>
          <target state="translated">현재 네임스페이스 컨텍스트에서 구문 분석이 수행됩니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.InnerXml">
          <source>This property is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.InnerXml">
          <source>The following example compares the <ph id="ph1">&lt;xref:System.Xml.XmlElement.InnerText%2A&gt;</ph> and <ph id="ph2">`InnerXml`</ph> properties.</source>
          <target state="translated">다음 예제에서는 비교는 <ph id="ph1">&lt;xref:System.Xml.XmlElement.InnerText%2A&gt;</ph> 및 <ph id="ph2">`InnerXml`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlElement.InnerXml">
          <source>The XML specified when setting this property is not well-formed.</source>
          <target state="translated">이 속성을 설정할 때 지정된 XML이 올바른 형식이 아닙니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlElement.IsEmpty">
          <source>Gets or sets the tag format of the element.</source>
          <target state="translated">요소의 태그 서식을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.IsEmpty">
          <source>Returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element is to be serialized in the short tag format "<ph id="ph2">&amp;lt;</ph>item/<ph id="ph3">&amp;gt;</ph>"; <ph id="ph4">&lt;see langword="false" /&gt;</ph> for the long format "<ph id="ph5">&amp;lt;</ph>item<ph id="ph6">&amp;gt;</ph><ph id="ph7">&amp;lt;</ph>/item<ph id="ph8">&amp;gt;</ph>".</source>
          <target state="translated">반환 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 요소가 짧은 태그 형식으로 직렬화 하는 경우 "<ph id="ph2">&amp;lt;</ph>항목 /<ph id="ph3">&amp;gt;</ph>"; <ph id="ph4">&lt;see langword="false" /&gt;</ph> 긴 형식에 대 한 "<ph id="ph5">&amp;lt;</ph>항목<ph id="ph6">&amp;gt;</ph><ph id="ph7">&amp;lt;</ph>항목/<ph id="ph8">&amp;gt;</ph>"입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.IsEmpty">
          <source>When setting this property, if set to <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the children of the element are removed and the element is serialized in the short tag format.</source>
          <target state="translated">이 속성을 설정할 때 <ph id="ph1">&lt;see langword="true" /&gt;</ph>로 설정하면 요소의 자식이 제거되고 요소는 짧은 태그 형식으로 serialize됩니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.IsEmpty">
          <source>If set to <ph id="ph1">&lt;see langword="false" /&gt;</ph>, the value of the property is changed (regardless of whether or not the element has content); if the element is empty, it is serialized in the long format.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph>로 설정하면 요소에 내용이 있는지 여부와 상관없이 속성 값이 변경되고, 요소가 비었으면 긴 형식으로 serialize됩니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.IsEmpty">
          <source>This property is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.IsEmpty">
          <source>This property is a Microsoft extension of the Document Object Model (DOM).</source>
          <target state="translated">이 속성은 문서 개체 모델 (DOM)의 Microsoft 확장입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.IsEmpty">
          <source>The following example adds content to an empty element.</source>
          <target state="translated">다음 예제에서는 빈 요소에 콘텐츠를 추가합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlElement.LocalName">
          <source>Gets the local name of the current node.</source>
          <target state="translated">현재 노드의 로컬 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.LocalName">
          <source>The name of the current node with the prefix removed.</source>
          <target state="translated">접두사를 제거한 현재 노드의 이름입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.LocalName">
          <source>For example, <ph id="ph1">&lt;see langword="LocalName" /&gt;</ph> is book for the element <ph id="ph2">&amp;lt;</ph>bk:book<ph id="ph3">&amp;gt;</ph>.</source>
          <target state="translated">예를 들어 <ph id="ph1">&lt;see langword="LocalName" /&gt;</ph> 은 book 요소에 대 한 <ph id="ph2">&amp;lt;</ph>예<ph id="ph3">&amp;gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.LocalName">
          <source>If the node does not have a prefix, <ph id="ph1">`LocalName`</ph> is the same as <ph id="ph2">&lt;xref:System.Xml.XmlElement.Name%2A&gt;</ph>.</source>
          <target state="translated">노드는 접두사가 없는 경우 <ph id="ph1">`LocalName`</ph> 동일 <ph id="ph2">&lt;xref:System.Xml.XmlElement.Name%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.LocalName">
          <source>The following example displays information on the ISBN element.</source>
          <target state="translated">다음 예제에서는 ISBN 요소에 정보가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlElement.Name">
          <source>Gets the qualified name of the node.</source>
          <target state="translated">노드의 정규화된 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.Name">
          <source>The qualified name of the node.</source>
          <target state="translated">노드의 정규화된 이름입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.Name">
          <source>For <ph id="ph1">&lt;see langword="XmlElement" /&gt;</ph> nodes, this is the tag name of the element.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlElement" /&gt;</ph> 노드의 경우에는 요소의 태그 이름입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.Name">
          <source>The following example displays information on the ISBN element.</source>
          <target state="translated">다음 예제에서는 ISBN 요소에 정보가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlElement.NamespaceURI">
          <source>Gets the namespace URI of this node.</source>
          <target state="translated">이 노드의 네임스페이스 URI를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.NamespaceURI">
          <source>The namespace URI of this node.</source>
          <target state="translated">이 노드의 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.NamespaceURI">
          <source>If there is no namespace URI, this property returns String.Empty.</source>
          <target state="translated">네임스페이스 URI가 없으면, 이 속성은 String.Empty를 반환합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.NamespaceURI">
          <source>This is the namespace URI specified at creation time.</source>
          <target state="translated">네임 스페이스를 만들 때 지정 된 URI입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.NamespaceURI">
          <source>For example, <ph id="ph1">`NamespaceURI`</ph> is urn:samples for the element <ph id="ph2">\&lt;</ph>bk:book xmlns:bk= "urn:samples"&gt;</source>
          <target state="translated">예를 들어 <ph id="ph1">`NamespaceURI`</ph> urn: 요소에 대 한 샘플은 <ph id="ph2">\&lt;</ph>예 xmlns:bk = "urn: 예제" &gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.NamespaceURI">
          <source>The following example displays information on the ISBN element.</source>
          <target state="translated">다음 예제에서는 ISBN 요소에 정보가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlElement.NextSibling">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xml.XmlNode" /&gt;</ph> immediately following this element.</source>
          <target state="translated">이 요소 바로 다음에 오는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlNode" /&gt;</ph>를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.NextSibling">
          <source>The <ph id="ph1">&lt;see langword="XmlNode" /&gt;</ph> immediately following this element.</source>
          <target state="translated">이 요소 바로 다음에 오는 <ph id="ph1">&lt;see langword="XmlNode" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlElement.NodeType">
          <source>Gets the type of the current node.</source>
          <target state="translated">현재 노드의 형식을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.NodeType">
          <source>The node type.</source>
          <target state="translated">노드 형식입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.NodeType">
          <source>For <ph id="ph1">&lt;see langword="XmlElement" /&gt;</ph> nodes, this value is XmlNodeType.Element.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlElement" /&gt;</ph> 노드의 경우 이 값은 XmlNodeType.Element입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlElement.OwnerDocument">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xml.XmlDocument" /&gt;</ph> to which this node belongs.</source>
          <target state="translated">이 노드가 속한 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDocument" /&gt;</ph>를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.OwnerDocument">
          <source>The <ph id="ph1">&lt;see langword="XmlDocument" /&gt;</ph> to which this element belongs.</source>
          <target state="translated">이 요소가 속한 <ph id="ph1">&lt;see langword="XmlDocument" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.OwnerDocument">
          <source>When adding nodes to the current node, use the <ph id="ph1">`XmlDocument`</ph> returned by the <ph id="ph2">`OwnerDocument`</ph> property to create the node.</source>
          <target state="translated">현재 노드에 노드를 추가할 때 사용 하 여는 <ph id="ph1">`XmlDocument`</ph> 에서 반환 되는 <ph id="ph2">`OwnerDocument`</ph> 속성 노드를 만듭니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.OwnerDocument">
          <source>The following example inserts a new element into an XML document.</source>
          <target state="translated">다음 예제에서는 XML 문서에 새 요소를 삽입합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlElement.ParentNode">
          <source>Gets the parent of this node (for nodes that can have parents).</source>
          <target state="translated">부모를 가질 수 있는 노드의 경우 이 노드의 부모를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.ParentNode">
          <source>The <ph id="ph1">&lt;see langword="XmlNode" /&gt;</ph> that is the parent of the current node.</source>
          <target state="translated">현재 노드의 부모인 <ph id="ph1">&lt;see langword="XmlNode" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.ParentNode">
          <source>If a node has just been created and not yet added to the tree, or if it has been removed from the tree, the parent is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">노드를 만들고 트리에 추가하지 않은 경우나 트리에서 노드를 제거한 경우 부모는 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.ParentNode">
          <source>For all other nodes, the value returned depends on the <ph id="ph1">&lt;see cref="P:System.Xml.XmlNode.NodeType" /&gt;</ph> of the node.</source>
          <target state="translated">다른 모든 노드의 경우에는 노드의 <ph id="ph1">&lt;see cref="P:System.Xml.XmlNode.NodeType" /&gt;</ph>에 따라 반환되는 값이 달라집니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.ParentNode">
          <source>The following table describes the possible return values for the <ph id="ph1">&lt;see langword="ParentNode" /&gt;</ph> property.</source>
          <target state="translated">다음 표에서는 <ph id="ph1">&lt;see langword="ParentNode" /&gt;</ph> 속성에 대해 가능한 반환 값을 설명합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlElement.Prefix">
          <source>Gets or sets the namespace prefix of this node.</source>
          <target state="translated">이 노드의 네임스페이스 접두사를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.Prefix">
          <source>The namespace prefix of this node.</source>
          <target state="translated">이 노드의 네임스페이스 접두사입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.Prefix">
          <source>If there is no prefix, this property returns String.Empty.</source>
          <target state="translated">접두사가 없으면, 이 속성은 String.Empty를 반환합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.Prefix">
          <source>Setting this property changes the <ph id="ph1">&lt;xref:System.Xml.XmlElement.Name%2A&gt;</ph> property, which holds the qualified name for an <ph id="ph2">`XmlElement`</ph>.</source>
          <target state="translated">설정 속성 변경 내용을이 <ph id="ph1">&lt;xref:System.Xml.XmlElement.Name%2A&gt;</ph> 속성에 대 한 정규화 된 이름을 포함 하는 <ph id="ph2">`XmlElement`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.Prefix">
          <source>However, changing the prefix does not change the namespace URI of the element.</source>
          <target state="translated">그러나 접두사를 변경 해도 요소의 네임 스페이스 URI는 변경 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.Prefix">
          <source>The following example displays information on the ISBN element.</source>
          <target state="translated">다음 예제에서는 ISBN 요소에 정보가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlElement.Prefix">
          <source>This node is read-only</source>
          <target state="translated">이 노드가 읽기 전용인 경우</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlElement.Prefix">
          <source>The specified prefix contains an invalid character.</source>
          <target state="translated">지정된 접두사에 잘못된 문자가 포함된 경우</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlElement.Prefix">
          <source>The specified prefix is malformed.</source>
          <target state="translated">지정된 접두사의 형식이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlElement.Prefix">
          <source>The namespaceURI of this node is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 노드의 namespaceURI가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlElement.Prefix">
          <source>The specified prefix is "xml" and the namespaceURI of this node is different from <ph id="ph1">http://www.w3.org/XML/1998/namespace</ph>.</source>
          <target state="translated">지정된 접두사가 “xml”이고 이 노드의 namespaceURI가 “<ph id="ph1">http://www.w3.org/XML/1998/namespace</ph>”와 다른 경우</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAll">
          <source>Removes all specified attributes and children of the current node.</source>
          <target state="translated">지정된 특성 및 현재 노드의 자식을 모두 제거합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAll">
          <source>Default attributes are not removed.</source>
          <target state="translated">기본 특성은 제거되지 않습니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.RemoveAll">
          <source>The following example removes all attributes and child nodes from the root element.</source>
          <target state="translated">다음 예제에서는 루트 요소에서 모든 특성 및 자식 노드를 제거합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAllAttributes">
          <source>Removes all specified attributes from the element.</source>
          <target state="translated">요소에서 지정된 모든 특성을 제거합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAllAttributes">
          <source>Default attributes are not removed.</source>
          <target state="translated">기본 특성은 제거되지 않습니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.RemoveAllAttributes">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.RemoveAllAttributes">
          <source>The following example removes all attributes from the root element.</source>
          <target state="translated">다음 예제에서는 루트 요소에서 모든 특성을 제거합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlElement">
          <source>Removes the specified attribute.</source>
          <target state="translated">지정된 특성을 제거합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlElement">
          <source>(If the removed attribute has a default value, it is immediately replaced).</source>
          <target state="translated">제거한 특성에 기본값이 있는 경우 즉시 바뀝니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttribute(System.String)">
          <source>The name of the attribute to remove.This is a qualified name.</source>
          <target state="translated">제거할 특성의 이름입니다. 정규화된 이름입니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttribute(System.String)">
          <source>It is matched against the <ph id="ph1">&lt;see langword="Name" /&gt;</ph> property of the matching node.</source>
          <target state="translated">일치하는 노드의 <ph id="ph1">&lt;see langword="Name" /&gt;</ph> 속성과 일치합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttribute(System.String)">
          <source>Removes an attribute by name.</source>
          <target state="translated">이름을 사용하여 특성을 제거합니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.RemoveAttribute(System.String)">
          <source>If the removed attribute is known to have a default value, an attribute immediately appears containing the default value and, if applicable, the corresponding namespace URI, local name, and prefix.</source>
          <target state="translated">제거 된 특성 기본값을 포함 하는 특성 즉시 표시는 기본 값을 가질 경우 및 해당 하는 경우 해당 네임 스페이스 URI, 로컬 이름 및 접두사입니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.RemoveAttribute(System.String)">
          <source>The following example removes an attribute from an element.</source>
          <target state="translated">다음 예제에서는 요소에서 특성을 제거합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttribute(System.String)">
          <source>The node is read-only.</source>
          <target state="translated">노드는 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttribute(System.String,System.String)">
          <source>The local name of the attribute to remove.</source>
          <target state="translated">제거할 특성의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttribute(System.String,System.String)">
          <source>The namespace URI of the attribute to remove.</source>
          <target state="translated">제거할 특성의 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttribute(System.String,System.String)">
          <source>Removes an attribute with the specified local name and namespace URI.</source>
          <target state="translated">지정된 로컬 이름과 네임스페이스 URI를 갖고 있는 특성을 제거합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttribute(System.String,System.String)">
          <source>(If the removed attribute has a default value, it is immediately replaced).</source>
          <target state="translated">제거한 특성에 기본값이 있는 경우 즉시 바뀝니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.RemoveAttribute(System.String,System.String)">
          <source>If the removed attribute is known to have a default value, an attribute immediately appears containing the default value and, if applicable, the corresponding namespace URI, local name, and prefix.</source>
          <target state="translated">제거 된 특성 기본값을 포함 하는 특성 즉시 표시는 기본 값을 가질 경우 및 해당 하는 경우 해당 네임 스페이스 URI, 로컬 이름 및 접두사입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.RemoveAttribute(System.String,System.String)">
          <source>The following example removes an attribute from an element.</source>
          <target state="translated">다음 예제에서는 요소에서 특성을 제거합니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttribute(System.String,System.String)">
          <source>The node is read-only.</source>
          <target state="translated">노드는 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttributeAt(System.Int32)">
          <source>The index of the node to remove.</source>
          <target state="translated">제거할 노드의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttributeAt(System.Int32)">
          <source>The first node has index 0.</source>
          <target state="translated">첫 번째 노드에 인덱스 0이 있습니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttributeAt(System.Int32)">
          <source>Removes the attribute node with the specified index from the element.</source>
          <target state="translated">요소에서 지정된 인덱스의 특성 노드를 제거합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttributeAt(System.Int32)">
          <source>(If the removed attribute has a default value, it is immediately replaced).</source>
          <target state="translated">제거한 특성에 기본값이 있는 경우 즉시 바뀝니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttributeAt(System.Int32)">
          <source>The attribute node removed or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if there is no node at the given index.</source>
          <target state="translated">제거한 Attribute 노드이거나, 지정한 인덱스에 노드가 없는 경우에는 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.RemoveAttributeAt(System.Int32)">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.RemoveAttributeAt(System.Int32)">
          <source>The following example removes an attribute from an element.</source>
          <target state="translated">다음 예제에서는 요소에서 특성을 제거합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlElement">
          <source>Removes an <ph id="ph1">&lt;see cref="T:System.Xml.XmlAttribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlAttribute" /&gt;</ph>를 제거합니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttributeNode(System.Xml.XmlAttribute)">
          <source>The <ph id="ph1">&lt;see langword="XmlAttribute" /&gt;</ph> node to remove.</source>
          <target state="translated">제거할 <ph id="ph1">&lt;see langword="XmlAttribute" /&gt;</ph> 노드입니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttributeNode(System.Xml.XmlAttribute)">
          <source>If the removed attribute has a default value, it is immediately replaced.</source>
          <target state="translated">제거한 특성에 기본값이 있으면 바로 대체됩니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttributeNode(System.Xml.XmlAttribute)">
          <source>Removes the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlAttribute" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlAttribute" /&gt;</ph>을 제거합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttributeNode(System.Xml.XmlAttribute)">
          <source>The removed <ph id="ph1">&lt;see langword="XmlAttribute" /&gt;</ph> or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if <ph id="ph3">&lt;paramref name="oldAttr" /&gt;</ph> is not an attribute node of the <ph id="ph4">&lt;see langword="XmlElement" /&gt;</ph>.</source>
          <target state="translated">제거한 <ph id="ph1">&lt;see langword="XmlAttribute" /&gt;</ph>이거나, <ph id="ph3">&lt;paramref name="oldAttr" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>의 Attribute 노드가 아닐 경우에는 <ph id="ph4">&lt;see langword="XmlElement" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttributeNode(System.Xml.XmlAttribute)">
          <source>This node is read-only.</source>
          <target state="translated">이 노드가 읽기 전용인 경우</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttributeNode(System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">특성의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttributeNode(System.String,System.String)">
          <source>The namespace URI of the attribute.</source>
          <target state="translated">특성의 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttributeNode(System.String,System.String)">
          <source>Removes the <ph id="ph1">&lt;see cref="T:System.Xml.XmlAttribute" /&gt;</ph> specified by the local name and namespace URI.</source>
          <target state="translated">로컬 이름과 네임스페이스 URI로 지정한 <ph id="ph1">&lt;see cref="T:System.Xml.XmlAttribute" /&gt;</ph>를 제거합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttributeNode(System.String,System.String)">
          <source>(If the removed attribute has a default value, it is immediately replaced).</source>
          <target state="translated">제거한 특성에 기본값이 있는 경우 즉시 바뀝니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttributeNode(System.String,System.String)">
          <source>The removed <ph id="ph1">&lt;see langword="XmlAttribute" /&gt;</ph> or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the <ph id="ph3">&lt;see langword="XmlElement" /&gt;</ph> does not have a matching attribute node.</source>
          <target state="translated">제거한 <ph id="ph1">&lt;see langword="XmlAttribute" /&gt;</ph>이거나 <ph id="ph2">&lt;see langword="null" /&gt;</ph>에 일치하는 Attribute 노드가 없으면 <ph id="ph3">&lt;see langword="XmlElement" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.RemoveAttributeNode(System.String,System.String)">
          <source>The following example removes an attribute from an element.</source>
          <target state="translated">다음 예제에서는 요소에서 특성을 제거합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.RemoveAttributeNode(System.String,System.String)">
          <source>This node is read-only.</source>
          <target state="translated">이 노드가 읽기 전용인 경우</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlElement.SchemaInfo">
          <source>Gets the post schema validation infoset that has been assigned to this node as a result of schema validation.</source>
          <target state="translated">스키마 유효성 검사의 결과로 이 노드에 할당된 스키마 유효성 검사 이후 정보 집합을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.SchemaInfo">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.IXmlSchemaInfo" /&gt;</ph> object containing the post schema validation infoset of this node.</source>
          <target state="translated">이 노드의 스키마 유효성 검사 이후 정보 집합이 포함된 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.IXmlSchemaInfo" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlElement.SchemaInfo">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlElement.SchemaInfo%2A&gt;</ph> property is set when this node is validated.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlElement.SchemaInfo%2A&gt;</ph> 이 노드의 유효성을 검사할 때 속성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlElement">
          <source>Sets the value of the specified attribute.</source>
          <target state="translated">지정된 특성의 값을 설정합니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttribute(System.String,System.String)">
          <source>The name of the attribute to create or alter.</source>
          <target state="translated">만들거나 변경할 특성의 이름입니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttribute(System.String,System.String)">
          <source>This is a qualified name.</source>
          <target state="translated">정규화된 이름입니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttribute(System.String,System.String)">
          <source>If the name contains a colon it is parsed into prefix and local name components.</source>
          <target state="translated">이름에 콜론이 포함되어 있으면 접두사와 로컬 이름 구성 요소로 구문 분석됩니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttribute(System.String,System.String)">
          <source>The value to set for the attribute.</source>
          <target state="translated">특성에 설정할 값입니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttribute(System.String,System.String)">
          <source>Sets the value of the attribute with the specified name.</source>
          <target state="translated">지정된 이름을 가진 특성의 값을 설정합니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.SetAttribute(System.String,System.String)">
          <source>If an attribute with the same name is already present in the element, its value is changed to that of <ph id="ph1">`value`</ph>.</source>
          <target state="translated">해당 값이 변경 되는 요소에 동일한 이름의 특성이 이미 있으면 <ph id="ph1">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.SetAttribute(System.String,System.String)">
          <source><ph id="ph1">`value`</ph> is a simple string.</source>
          <target state="translated"><ph id="ph1">`value`</ph> 간단한 문자열이입니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.SetAttribute(System.String,System.String)">
          <source>It is not parsed as it is being set.</source>
          <target state="translated">설정 되는 구문 분석 되지 됩니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.SetAttribute(System.String,System.String)">
          <source>Any markup, such as syntax to be recognized as an entity reference, is treated as literal text and needs to be properly escaped by the implementation when it is written out. In order to assign an attribute value that contains entity references, the user must create an <ph id="ph1">&lt;xref:System.Xml.XmlAttribute&gt;</ph> node plus any <ph id="ph2">&lt;xref:System.Xml.XmlText&gt;</ph> and <ph id="ph3">&lt;xref:System.Xml.XmlEntityReference&gt;</ph> nodes, build the appropriate subtree and use <ph id="ph4">&lt;xref:System.Xml.XmlElement.SetAttributeNode%2A&gt;</ph> to assign it as the value of an attribute.</source>
          <target state="translated">엔터티 참조로 인식 되도록 하려면 다음 구문 사용 같은 모든 태그 리터럴 텍스트로 처리 및 기록 될 때 제대로 구현 하 여 이스케이프 해야 합니다. 엔터티 참조를 포함 하는 특성 값을 지정 하려면 사용자를 만들어야는 <ph id="ph1">&lt;xref:System.Xml.XmlAttribute&gt;</ph> 노드와 함께 <ph id="ph2">&lt;xref:System.Xml.XmlText&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Xml.XmlEntityReference&gt;</ph> 노드 적절 한 하위 트리를 작성 및 사용 하 여 <ph id="ph4">&lt;xref:System.Xml.XmlElement.SetAttributeNode%2A&gt;</ph> 특성의 값으로 할당할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttribute(System.String,System.String)">
          <source>The specified name contains an invalid character.</source>
          <target state="translated">지정된 이름에 잘못된 문자가 있는 경우</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttribute(System.String,System.String)">
          <source>The node is read-only.</source>
          <target state="translated">노드는 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttribute(System.String,System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">특성의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttribute(System.String,System.String,System.String)">
          <source>The namespace URI of the attribute.</source>
          <target state="translated">특성의 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttribute(System.String,System.String,System.String)">
          <source>The value to set for the attribute.</source>
          <target state="translated">특성에 설정할 값입니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttribute(System.String,System.String,System.String)">
          <source>Sets the value of the attribute with the specified local name and namespace URI.</source>
          <target state="translated">지정된 로컬 이름과 네임스페이스 URI를 갖고 있는 특성의 값을 설정합니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttribute(System.String,System.String,System.String)">
          <source>The attribute value.</source>
          <target state="translated">특성 값입니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlElement">
          <source>Adds a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlAttribute" /&gt;</ph>.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Xml.XmlAttribute" /&gt;</ph>를 추가합니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)">
          <source>The <ph id="ph1">&lt;see langword="XmlAttribute" /&gt;</ph> node to add to the attribute collection for this element.</source>
          <target state="translated">이 요소의 특성 컬렉션에 추가할 <ph id="ph1">&lt;see langword="XmlAttribute" /&gt;</ph> 노드입니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlAttribute" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlAttribute" /&gt;</ph>를 추가합니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)">
          <source>If the attribute replaces an existing attribute with the same name, the old <ph id="ph1">&lt;see langword="XmlAttribute" /&gt;</ph> is returned; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph> is returned.</source>
          <target state="translated">특성이 같은 이름을 가진 기존 특성을 대체할 경우 이전 <ph id="ph1">&lt;see langword="XmlAttribute" /&gt;</ph>가 반환됩니다. 그렇지 않으면 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이 반환됩니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)">
          <source>If an attribute with that name is already present in the element, it is replaced by the new one.</source>
          <target state="translated">요소에 해당 이름 가진 특성이 이미 있으면 새 식으로 대체 됩니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)">
          <source>The <ph id="ph1">&lt;paramref name="newAttr" /&gt;</ph> was created from a different document than the one that created this node.</source>
          <target state="translated">이 노드를 만든 문서가 아닌 다른 문서에서 <ph id="ph1">&lt;paramref name="newAttr" /&gt;</ph>를 만든 경우</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)">
          <source>Or this node is read-only.</source>
          <target state="translated">이 노드가 읽기 전용인 경우</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)">
          <source>The <ph id="ph1">&lt;paramref name="newAttr" /&gt;</ph> is already an attribute of another <ph id="ph2">&lt;see langword="XmlElement" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="newAttr" /&gt;</ph>가 이미 다른 <ph id="ph2">&lt;see langword="XmlElement" /&gt;</ph> 개체의 특성인 경우.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)">
          <source>You must explicitly clone <ph id="ph1">&lt;see langword="XmlAttribute" /&gt;</ph> nodes to re-use them in other <ph id="ph2">&lt;see langword="XmlElement" /&gt;</ph> objects.</source>
          <target state="translated">다른 <ph id="ph1">&lt;see langword="XmlAttribute" /&gt;</ph> 개체에서 다시 사용하려면 명시적으로 <ph id="ph2">&lt;see langword="XmlElement" /&gt;</ph> 노드를 복제해야 합니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttributeNode(System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">특성의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttributeNode(System.String,System.String)">
          <source>The namespace URI of the attribute.</source>
          <target state="translated">특성의 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttributeNode(System.String,System.String)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlAttribute" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlAttribute" /&gt;</ph>를 추가합니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.SetAttributeNode(System.String,System.String)">
          <source>The <ph id="ph1">&lt;see langword="XmlAttribute" /&gt;</ph> to add.</source>
          <target state="translated">추가할 <ph id="ph1">&lt;see langword="XmlAttribute" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.SetAttributeNode(System.String,System.String)">
          <source>The <ph id="ph1">`XmlAttribute`</ph> does not have any children.</source>
          <target state="translated"><ph id="ph1">`XmlAttribute`</ph> 자식을 포함 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.SetAttributeNode(System.String,System.String)">
          <source>Use <ph id="ph1">&lt;xref:System.Xml.XmlAttribute.Value%2A&gt;</ph> to assign a text value to the attribute or use <ph id="ph2">&lt;xref:System.Xml.XmlNode.AppendChild%2A&gt;</ph> (or a similar method) to add children to the attribute.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Xml.XmlAttribute.Value%2A&gt;</ph> 특성에는 텍스트 값을 할당 하거나 사용 하 여 <ph id="ph2">&lt;xref:System.Xml.XmlNode.AppendChild%2A&gt;</ph> (또는 비슷한 메서드) 특성에 자식을 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.SetAttributeNode(System.String,System.String)">
          <source>The following example adds an attribute to an element.</source>
          <target state="translated">다음 예제에서는 요소에 특성을 추가합니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.WriteContentTo(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;see langword="XmlWriter" /&gt;</ph> to which you want to save.</source>
          <target state="translated">저장할 대상 <ph id="ph1">&lt;see langword="XmlWriter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.WriteContentTo(System.Xml.XmlWriter)">
          <source>Saves all the children of the node to the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>에 노드의 모든 자식을 저장합니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.WriteContentTo(System.Xml.XmlWriter)">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.WriteContentTo(System.Xml.XmlWriter)">
          <source>The following example displays the contents of the element to the console.</source>
          <target state="translated">다음 예제에서는 콘솔에는 요소의 내용을 표시합니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.WriteTo(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;see langword="XmlWriter" /&gt;</ph> to which you want to save.</source>
          <target state="translated">저장할 대상 <ph id="ph1">&lt;see langword="XmlWriter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlElement.WriteTo(System.Xml.XmlWriter)">
          <source>Saves the current node to the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">현재 노드를 지정된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>에 저장합니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.WriteTo(System.Xml.XmlWriter)">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">이 방법은 Microsoft 문서 개체 모델 (DOM)를 확장 합니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlElement.WriteTo(System.Xml.XmlWriter)">
          <source>The following example adds an attribute to an element and then displays the modified element.</source>
          <target state="translated">다음 예제에서는 요소에 특성을 추가 하 고 수정된 된 요소를 표시 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>