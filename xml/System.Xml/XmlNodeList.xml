<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlNodeList.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac521361984d1fcdeebc2714f6a5f04f7c729d42d68.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">21361984d1fcdeebc2714f6a5f04f7c729d42d68</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlNodeList">
          <source>Represents an ordered collection of nodes.</source>
          <target state="translated">노드의 정렬된 컬렉션을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlNodeList">
          <source>Changes to the children of the node object that the <ph id="ph1">&lt;xref:System.Xml.XmlNodeList&gt;</ph> collection was created from are immediately reflected in the nodes returned by the <ph id="ph2">`XmlNodeList`</ph> properties and methods.</source>
          <target state="translated">노드의 자식에 대 한 변경 하는 개체는 <ph id="ph1">&lt;xref:System.Xml.XmlNodeList&gt;</ph> 컬렉션이 생성에서에서 바로 반영 됩니다에서 반환한 노드는 <ph id="ph2">`XmlNodeList`</ph> 속성 및 메서드가 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlNodeList">
          <source><ph id="ph1">`XmlNodeList`</ph> supports iteration and indexed access.</source>
          <target state="translated"><ph id="ph1">`XmlNodeList`</ph> 인덱싱된 액세스와 반복을 지원합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlNodeList">
          <source><ph id="ph1">`XmlNodeList`</ph> is returned by the following properties and methods.</source>
          <target state="translated"><ph id="ph1">`XmlNodeList`</ph> 다음과 같은 속성 및 메서드에 의해 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlNodeList">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlNode.ChildNodes%2A?displayProperty=nameWithType&gt;</ph> - Returns an <ph id="ph2">`XmlNodeList`</ph> containing all the children of the node.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlNode.ChildNodes%2A?displayProperty=nameWithType&gt;</ph> -반환는 <ph id="ph2">`XmlNodeList`</ph> 노드의 모든 자식을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlNodeList">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType&gt;</ph> - Returns an <ph id="ph2">`XmlNodeList`</ph> containing a collection of nodes matching the XPath query.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType&gt;</ph> -반환는 <ph id="ph2">`XmlNodeList`</ph> XPath 쿼리와 일치 하는 노드 컬렉션을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlNodeList">
          <source><ph id="ph1">`GetElementsByTagName`</ph> - Returns an <ph id="ph2">`XmlNodeList`</ph> containing a list of all descendant elements that match the specified name.</source>
          <target state="translated"><ph id="ph1">`GetElementsByTagName`</ph> -반환는 <ph id="ph2">`XmlNodeList`</ph> 지정된 된 이름과 일치 하는 모든 하위 요소의 목록이 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlNodeList">
          <source>This method is available in both the <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph> classes.</source>
          <target state="translated">이 메서드는 모두에서 사용할 수는 <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeList.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlNodeList.Count">
          <source>Gets the number of nodes in the <ph id="ph1">&lt;see langword="XmlNodeList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlNodeList" /&gt;</ph>의 노드 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeList.Count">
          <source>The number of nodes in the <ph id="ph1">&lt;see langword="XmlNodeList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlNodeList" /&gt;</ph>의 노드 수입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeList.Count">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph> object and uses the <ph id="ph2">&lt;xref:System.Xml.XmlDocument.GetElementsByTagName%2A&gt;</ph> method and the resulting <ph id="ph3">`XmlNodeList`</ph> to display all the book titles.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph> 개체와 사용 하 여는 <ph id="ph2">&lt;xref:System.Xml.XmlDocument.GetElementsByTagName%2A&gt;</ph> 메서드와 그 결과 <ph id="ph3">`XmlNodeList`</ph> 모든 책 제목을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeList.Count">
          <source>The example uses the file <ph id="ph1">`2books.xml`</ph> as input.</source>
          <target state="translated">이 예제에서는 파일을 사용 하 여 <ph id="ph1">`2books.xml`</ph> 입력으로 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeList.GetEnumerator">
          <source>Gets an enumerator that iterates through the collection of nodes.</source>
          <target state="translated">노드의 컬렉션을 반복하는 열거자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeList.GetEnumerator">
          <source>An enumerator used to iterate through the collection of nodes.</source>
          <target state="translated">노드의 컬렉션 전체에서 반복하는 데 사용되는 열거자입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeList.GetEnumerator">
          <source>Provides a simple "foreach" style iteration over the collection of nodes in the <ph id="ph1">`XmlNodeList`</ph>.</source>
          <target state="translated">간단한 "foreach" 스타일 반복에 있는 노드의 컬렉션에 대해 제공 된 <ph id="ph1">`XmlNodeList`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeList.GetEnumerator">
          <source>The following example displays all the book titles.</source>
          <target state="translated">다음 예제에서는 모든 책 제목을 표시합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeList.GetEnumerator">
          <source>The example uses the file <ph id="ph1">`2books.xml`</ph> as input.</source>
          <target state="translated">이 예제에서는 파일을 사용 하 여 <ph id="ph1">`2books.xml`</ph> 입력으로 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeList.Item(System.Int32)">
          <source>The zero-based index into the list of nodes.</source>
          <target state="translated">노드 목록에 대한 0부터 시작하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeList.Item(System.Int32)">
          <source>Retrieves a node at the given index.</source>
          <target state="translated">특정 인덱스에서 노드를 검색합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeList.Item(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlNode" /&gt;</ph> with the specified index in the collection.</source>
          <target state="translated">컬렉션에서 지정된 인덱스의 <ph id="ph1">&lt;see cref="T:System.Xml.XmlNode" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeList.Item(System.Int32)">
          <source>If <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than or equal to the number of nodes in the list, this returns <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>가 목록의 노드 수보다 크거나 같은 경우 <ph id="ph2">&lt;see langword="null" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlNodeList.Item(System.Int32)">
          <source>The following example gets and displays the second node in the <ph id="ph1">`XmlNodeList`</ph>.</source>
          <target state="translated">다음 예제에서는 가져오고의 두 번째 노드 표시의 <ph id="ph1">`XmlNodeList`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlNodeList.ItemOf(System.Int32)">
          <source>The zero-based index into the list of nodes.</source>
          <target state="translated">노드 목록에 대한 0부터 시작하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlNodeList.ItemOf(System.Int32)">
          <source>Gets a node at the given index.</source>
          <target state="translated">특정 인덱스에서 노드를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeList.ItemOf(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlNode" /&gt;</ph> with the specified index in the collection.</source>
          <target state="translated">컬렉션에서 지정된 인덱스의 <ph id="ph1">&lt;see cref="T:System.Xml.XmlNode" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeList.ItemOf(System.Int32)">
          <source>If index is greater than or equal to the number of nodes in the list, this returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">인덱스가 목록의 노드 수보다 크거나 같은 경우 <ph id="ph1">&lt;see langword="null" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeList.ItemOf(System.Int32)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph> object and uses the <ph id="ph2">&lt;xref:System.Xml.XmlDocument.GetElementsByTagName%2A&gt;</ph> method and the resulting <ph id="ph3">`XmlNodeList`</ph> to display all the book titles.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph> 개체와 사용 하 여는 <ph id="ph2">&lt;xref:System.Xml.XmlDocument.GetElementsByTagName%2A&gt;</ph> 메서드와 그 결과 <ph id="ph3">`XmlNodeList`</ph> 모든 책 제목을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlNodeList.ItemOf(System.Int32)">
          <source>The example uses the file <ph id="ph1">`2books.xml`</ph> as input.</source>
          <target state="translated">이 예제에서는 파일을 사용 하 여 <ph id="ph1">`2books.xml`</ph> 입력으로 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeList.PrivateDisposeNodeList">
          <source>Disposes resources in the node list privately.</source>
          <target state="translated">노드 목록에서 개인적으로 리소스를 삭제합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlNodeList.System#IDisposable#Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> 클래스에서 사용하는 모든 리소스를 해제합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>