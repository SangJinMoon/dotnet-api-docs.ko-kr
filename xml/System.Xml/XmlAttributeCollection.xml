<Type Name="XmlAttributeCollection" FullName="System.Xml.XmlAttributeCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dc2788ec4b1c61539c512bc9459212e810144e5b" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37482992" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XmlAttributeCollection : System.Xml.XmlNamedNodeMap, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlAttributeCollection extends System.Xml.XmlNamedNodeMap implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlAttributeCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlAttributeCollection&#xA;Inherits XmlNamedNodeMap&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlAttributeCollection sealed : System::Xml::XmlNamedNodeMap, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type XmlAttributeCollection = class&#xA;    inherit XmlNamedNodeMap&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlDocument</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlNamedNodeMap</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="79d0d-101">이름이나 인덱스로 액세스할 수 있는 특성의 컬렉션을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="79d0d-101">Represents a collection of attributes that can be accessed by name or index.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d0d-102">`XmlAttributeCollection` 확장 된 <xref:System.Xml.XmlNamedNodeMap> 강력 하 게 추가 하 여 클래스 형식의 도우미 메서드.</span><span class="sxs-lookup"><span data-stu-id="79d0d-102">`XmlAttributeCollection` extends the <xref:System.Xml.XmlNamedNodeMap> class by adding strongly typed helper methods.</span></span> <span data-ttu-id="79d0d-103">추가, 제거 또는 컬렉션의 특성을 수정 하려면이 클래스를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="79d0d-103">You can use this class to add, remove, or modify attributes in the collection.</span></span> <span data-ttu-id="79d0d-104">`XmlAttributeCollection` 반환 되는 <xref:System.Xml.XmlElement.Attributes%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="79d0d-104">`XmlAttributeCollection` is returned by the <xref:System.Xml.XmlElement.Attributes%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.XmlAttribute" />
    <altmember cref="T:System.Xml.XmlElement" />
  </Docs>
  <Members>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute Append (System.Xml.XmlAttribute node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlAttribute Append(class System.Xml.XmlAttribute node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.Append(System.Xml.XmlAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (node As XmlAttribute) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlAttribute ^ Append(System::Xml::XmlAttribute ^ node);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Xml.XmlAttribute -&gt; System.Xml.XmlAttribute" Usage="xmlAttributeCollection.Append node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlAttribute" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="79d0d-105">삽입할 <see cref="T:System.Xml.XmlAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-105">The <see cref="T:System.Xml.XmlAttribute" /> to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79d0d-106">지정된 특성을 컬렉션의 마지막 노드로 삽입합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-106">Inserts the specified attribute as the last node in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79d0d-107">컬렉션에 추가할 <see langword="XmlAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-107">The <see langword="XmlAttribute" /> to append to the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d0d-108">컬렉션에 동일한 이름의 특성이 이미 있는 원래 특성을 컬렉션에서 제거 됩니다 및 `node` 컬렉션의 끝에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="79d0d-108">If an attribute with the same name is already present in the collection, the original attribute is removed from the collection and `node` is added to the end of the collection.</span></span>  
  
 <span data-ttu-id="79d0d-109">이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="79d0d-109">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d0d-110">다음 예제에서는 문서에 새 특성을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="79d0d-110">The following example adds a new attribute to a document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.Append Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Append Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.Append Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Append Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.Append Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Append Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="79d0d-111">이 컬렉션을 만든 문서와 다른 문서에서 <paramref name="node" />를 만든 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-111">
              <paramref name="node" /> was created from a document different from the one that created this collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Xml.XmlAttribute[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Xml.XmlAttribute[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As XmlAttribute(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Xml::XmlAttribute ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Xml.XmlAttribute[] * int -&gt; unit" Usage="xmlAttributeCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Xml.XmlAttribute[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="79d0d-112">이 컬렉션에서 복사된 개체의 대상인 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-112">The array that is the destination of the objects copied from this collection.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="79d0d-113">복사를 시작할 배열의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-113">The index in the array where copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79d0d-114">모든 <see cref="T:System.Xml.XmlAttribute" /> 개체를 이 컬렉션에서 지정된 배열로 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-114">Copies all the <see cref="T:System.Xml.XmlAttribute" /> objects from this collection into the given array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d0d-115">이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="79d0d-115">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d0d-116">다음 예제에서는 `CopyTo` 를 배열에 컬렉션에 있는 모든 특성을 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="79d0d-116">The following example uses `CopyTo` to copy all the attributes in the collection into an array.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertAfter">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute InsertAfter (System.Xml.XmlAttribute newNode, System.Xml.XmlAttribute refNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlAttribute InsertAfter(class System.Xml.XmlAttribute newNode, class System.Xml.XmlAttribute refNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.InsertAfter(System.Xml.XmlAttribute,System.Xml.XmlAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertAfter (newNode As XmlAttribute, refNode As XmlAttribute) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlAttribute ^ InsertAfter(System::Xml::XmlAttribute ^ newNode, System::Xml::XmlAttribute ^ refNode);" />
      <MemberSignature Language="F#" Value="member this.InsertAfter : System.Xml.XmlAttribute * System.Xml.XmlAttribute -&gt; System.Xml.XmlAttribute" Usage="xmlAttributeCollection.InsertAfter (newNode, refNode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newNode" Type="System.Xml.XmlAttribute" />
        <Parameter Name="refNode" Type="System.Xml.XmlAttribute" />
      </Parameters>
      <Docs>
        <param name="newNode">
          <span data-ttu-id="79d0d-117">삽입할 <see cref="T:System.Xml.XmlAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-117">The <see cref="T:System.Xml.XmlAttribute" /> to insert.</span>
          </span>
        </param>
        <param name="refNode">
          <span data-ttu-id="79d0d-118">참조 특성인 <see cref="T:System.Xml.XmlAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-118">The <see cref="T:System.Xml.XmlAttribute" /> that is the reference attribute.</span>
          </span>
          <span data-ttu-id="79d0d-119">
            <c>newNode</c>가 <c>refNode</c> 뒤에 배치됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-119">
              <c>newNode</c> is placed after the <c>refNode</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79d0d-120">지정된 특성을 지정된 참조 특성 바로 뒤에 삽입합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-120">Inserts the specified attribute immediately after the specified reference attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79d0d-121">컬렉션에 삽입할 <see langword="XmlAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-121">The <see langword="XmlAttribute" /> to insert into the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d0d-122">컬렉션에 동일한 이름의 특성이 이미 있는 원래 특성을 컬렉션에서 제거 됩니다 및 `newNode` 컬렉션에 삽입 됩니다.</span><span class="sxs-lookup"><span data-stu-id="79d0d-122">If an attribute with the same name is already present in the collection, the original attribute is removed from the collection and `newNode` is inserted into the collection.</span></span> <span data-ttu-id="79d0d-123">하는 경우 `refNode` 됩니다 `null`, `newNode` 컬렉션의 시작 부분에 삽입 됩니다.</span><span class="sxs-lookup"><span data-stu-id="79d0d-123">If `refNode` is `null`, `newNode` is inserted at the beginning of the collection.</span></span>  
  
 <span data-ttu-id="79d0d-124">이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="79d0d-124">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d0d-125">다음 예제에서는 문서에 새 특성을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="79d0d-125">The following example adds a new attribute to a document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.InsertAfter Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.InsertAfter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.InsertAfter Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.InsertAfter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.InsertAfter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.InsertAfter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="79d0d-126">이 컬렉션을 만든 문서와 다른 문서에서 <paramref name="newNode" />를 만든 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-126">The <paramref name="newNode" /> was created from a document different from the one that created this collection.</span>
          </span>
          <span data-ttu-id="79d0d-127">또는 <paramref name="refNode" />가 이 컬렉션의 멤버가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-127">Or the <paramref name="refNode" /> is not a member of this collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InsertBefore">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute InsertBefore (System.Xml.XmlAttribute newNode, System.Xml.XmlAttribute refNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlAttribute InsertBefore(class System.Xml.XmlAttribute newNode, class System.Xml.XmlAttribute refNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.InsertBefore(System.Xml.XmlAttribute,System.Xml.XmlAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertBefore (newNode As XmlAttribute, refNode As XmlAttribute) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlAttribute ^ InsertBefore(System::Xml::XmlAttribute ^ newNode, System::Xml::XmlAttribute ^ refNode);" />
      <MemberSignature Language="F#" Value="member this.InsertBefore : System.Xml.XmlAttribute * System.Xml.XmlAttribute -&gt; System.Xml.XmlAttribute" Usage="xmlAttributeCollection.InsertBefore (newNode, refNode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newNode" Type="System.Xml.XmlAttribute" />
        <Parameter Name="refNode" Type="System.Xml.XmlAttribute" />
      </Parameters>
      <Docs>
        <param name="newNode">
          <span data-ttu-id="79d0d-128">삽입할 <see cref="T:System.Xml.XmlAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-128">The <see cref="T:System.Xml.XmlAttribute" /> to insert.</span>
          </span>
        </param>
        <param name="refNode">
          <span data-ttu-id="79d0d-129">참조 특성인 <see cref="T:System.Xml.XmlAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-129">The <see cref="T:System.Xml.XmlAttribute" /> that is the reference attribute.</span>
          </span>
          <span data-ttu-id="79d0d-130">
            <c>newNode</c>가 <c>refNode</c> 앞에 배치됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-130">
              <c>newNode</c> is placed before the <c>refNode</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79d0d-131">지정된 특성을 지정된 참조 특성 바로 앞에 삽입합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-131">Inserts the specified attribute immediately before the specified reference attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79d0d-132">컬렉션에 삽입할 <see langword="XmlAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-132">The <see langword="XmlAttribute" /> to insert into the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d0d-133">컬렉션에 동일한 이름의 특성이 이미 있는 원래 특성을 컬렉션에서 제거 됩니다 및 `newNode` 컬렉션에 삽입 됩니다.</span><span class="sxs-lookup"><span data-stu-id="79d0d-133">If an attribute with the same name is already present in the collection, the original attribute is removed from the collection and `newNode` is inserted into the collection.</span></span> <span data-ttu-id="79d0d-134">하는 경우 `refNode` 됩니다 `null`, `newNode` 컬렉션의 끝에 삽입 됩니다.</span><span class="sxs-lookup"><span data-stu-id="79d0d-134">If `refNode` is `null`, `newNode` is inserted at the end of the collection.</span></span>  
  
 <span data-ttu-id="79d0d-135">이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="79d0d-135">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d0d-136">다음 예제에서는 문서에 새 특성을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="79d0d-136">The following example adds a new attribute to a document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.InsertBefore Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.InsertBefore Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.InsertBefore Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.InsertBefore Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.InsertBefore Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.InsertBefore Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="79d0d-137">이 컬렉션을 만든 문서와 다른 문서에서 <paramref name="newNode" />를 만든 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-137">The <paramref name="newNode" /> was created from a document different from the one that created this collection.</span>
          </span>
          <span data-ttu-id="79d0d-138">또는 <paramref name="refNode" />가 이 컬렉션의 멤버가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-138">Or the <paramref name="refNode" /> is not a member of this collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ItemOf">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="79d0d-139">지정된 이름이나 인덱스가 있는 특성을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-139">Gets the attribute with the specified name or index.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ItemOf">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute this[int i] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlAttribute ItemOf(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttributeCollection.ItemOf(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property ItemOf(i As Integer) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlAttribute ^ default[int] { System::Xml::XmlAttribute ^ get(int i); };" />
      <MemberSignature Language="F#" Value="member this.ItemOf(int) : System.Xml.XmlAttribute" Usage="System.Xml.XmlAttributeCollection.ItemOf" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="79d0d-140">특성의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-140">The index of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79d0d-141">지정된 인덱스가 있는 특성을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-141">Gets the attribute with the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79d0d-142">지정된 인덱스의 <see cref="T:System.Xml.XmlAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-142">The <see cref="T:System.Xml.XmlAttribute" /> at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d0d-143">이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="79d0d-143">This property is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="79d0d-144">호출 하는 것과 같습니다 <xref:System.Xml.XmlNamedNodeMap.Item%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="79d0d-144">It is equivalent to calling <xref:System.Xml.XmlNamedNodeMap.Item%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d0d-145">다음 예제에서는 컬렉션의 모든 특성을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="79d0d-145">The following example displays all the attributes in the collection.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.this Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.this Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="79d0d-146">전달된 인덱스가 범위를 벗어납니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-146">The index being passed in is out of range.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlNamedNodeMap.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ItemOf">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlAttribute ItemOf(string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttributeCollection.ItemOf(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property ItemOf(name As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlAttribute ^ default[System::String ^] { System::Xml::XmlAttribute ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.ItemOf(string) : System.Xml.XmlAttribute" Usage="System.Xml.XmlAttributeCollection.ItemOf" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="79d0d-147">특성의 정규화된 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-147">The qualified name of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79d0d-148">지정된 이름이 있는 특성을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-148">Gets the attribute with the specified name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79d0d-149">지정된 이름을 가진 <see cref="T:System.Xml.XmlAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-149">The <see cref="T:System.Xml.XmlAttribute" /> with the specified name.</span>
          </span>
          <span data-ttu-id="79d0d-150">특성이 없는 경우 이 속성은 <see langword="null" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-150">If the attribute does not exist, this property returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d0d-151">이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="79d0d-151">This property is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="79d0d-152">호출 하는 것과 같습니다 <xref:System.Xml.XmlNamedNodeMap.GetNamedItem%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="79d0d-152">It is equivalent to calling <xref:System.Xml.XmlNamedNodeMap.GetNamedItem%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d0d-153">다음 예제에서는 문서에서 특성을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="79d0d-153">The following example removes an attribute from the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemOf">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute this[string localName, string namespaceURI] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlAttribute ItemOf(string, string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttributeCollection.ItemOf(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property ItemOf(localName As String, namespaceURI As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlAttribute ^ default[System::String ^, System::String ^] { System::Xml::XmlAttribute ^ get(System::String ^ localName, System::String ^ namespaceURI); };" />
      <MemberSignature Language="F#" Value="member this.ItemOf(string * string) : System.Xml.XmlAttribute" Usage="System.Xml.XmlAttributeCollection.ItemOf" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="79d0d-154">특성의 로컬 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-154">The local name of the attribute.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="79d0d-155">특성의 네임스페이스 URI입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-155">The namespace URI of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79d0d-156">지정된 로컬 이름이나 네임스페이스 URI(Uniform Resource Identifier)가 있는 특성을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-156">Gets the attribute with the specified local name and namespace Uniform Resource Identifier (URI).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79d0d-157">지정된 로컬 이름이나 네임스페이스 URI가 있는 <see cref="T:System.Xml.XmlAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-157">The <see cref="T:System.Xml.XmlAttribute" /> with the specified local name and namespace URI.</span>
          </span>
          <span data-ttu-id="79d0d-158">특성이 없는 경우 이 속성은 <see langword="null" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-158">If the attribute does not exist, this property returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d0d-159">이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="79d0d-159">This property is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="79d0d-160">호출 하는 것과 같습니다 <xref:System.Xml.XmlNamedNodeMap.GetNamedItem%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="79d0d-160">It is equivalent to calling <xref:System.Xml.XmlNamedNodeMap.GetNamedItem%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepend">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute Prepend (System.Xml.XmlAttribute node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlAttribute Prepend(class System.Xml.XmlAttribute node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.Prepend(System.Xml.XmlAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Function Prepend (node As XmlAttribute) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlAttribute ^ Prepend(System::Xml::XmlAttribute ^ node);" />
      <MemberSignature Language="F#" Value="member this.Prepend : System.Xml.XmlAttribute -&gt; System.Xml.XmlAttribute" Usage="xmlAttributeCollection.Prepend node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlAttribute" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="79d0d-161">삽입할 <see cref="T:System.Xml.XmlAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-161">The <see cref="T:System.Xml.XmlAttribute" /> to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79d0d-162">지정된 특성을 컬렉션의 첫 노드로 삽입합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-162">Inserts the specified attribute as the first node in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79d0d-163">컬렉션에 추가된 <see langword="XmlAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-163">The <see langword="XmlAttribute" /> added to the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d0d-164">컬렉션에 동일한 이름의 특성이 이미 있는 원래 특성을 컬렉션에서 제거 됩니다 및 `node` 컬렉션의 시작 부분에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="79d0d-164">If an attribute with the same name is already present in the collection, the original attribute is removed from the collection and `node` is added to the beginning of the collection.</span></span>  
  
 <span data-ttu-id="79d0d-165">이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="79d0d-165">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d0d-166">다음 예제에서는 문서에 새 특성을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="79d0d-166">The following example adds a new attribute to a document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.Prepend Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Prepend Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.Prepend Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Prepend Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.Prepend Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Prepend Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute Remove (System.Xml.XmlAttribute node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlAttribute Remove(class System.Xml.XmlAttribute node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.Remove(System.Xml.XmlAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (node As XmlAttribute) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlAttribute ^ Remove(System::Xml::XmlAttribute ^ node);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Xml.XmlAttribute -&gt; System.Xml.XmlAttribute" Usage="xmlAttributeCollection.Remove node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlAttribute" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="79d0d-167">제거할 <see cref="T:System.Xml.XmlAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-167">The <see cref="T:System.Xml.XmlAttribute" /> to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79d0d-168">컬렉션에서 지정된 특성을 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-168">Removes the specified attribute from the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79d0d-169">제거된 노드이거나 컬렉션에 없는 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-169">The node removed or <see langword="null" /> if it is not found in the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d0d-170">이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="79d0d-170">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d0d-171">다음 예제에서는 문서에서 특성을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="79d0d-171">The following example removes an attribute from the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public void RemoveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.RemoveAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAll();" />
      <MemberSignature Language="F#" Value="member this.RemoveAll : unit -&gt; unit" Usage="xmlAttributeCollection.RemoveAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="79d0d-172">컬렉션에서 모든 특성을 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-172">Removes all attributes from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d0d-173">이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="79d0d-173">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d0d-174">다음 예제에서는 문서에서 모든 특성을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="79d0d-174">The following example removes all attributes from the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.RemoveAll Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.RemoveAll Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.RemoveAll Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.RemoveAll Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.RemoveAll Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.RemoveAll Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute RemoveAt (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlAttribute RemoveAt(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAt (i As Integer) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlAttribute ^ RemoveAt(int i);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; System.Xml.XmlAttribute" Usage="xmlAttributeCollection.RemoveAt i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="79d0d-175">제거할 노드의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-175">The index of the node to remove.</span>
          </span>
          <span data-ttu-id="79d0d-176">첫 번째 노드에 인덱스 0이 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-176">The first node has index 0.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79d0d-177">컬렉션에서 지정된 인덱스에 해당하는 특성을 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-177">Removes the attribute corresponding to the specified index from the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79d0d-178">지정된 인덱스에 특성이 없으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-178">Returns <see langword="null" /> if there is no attribute at the specified index.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d0d-179">이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="79d0d-179">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d0d-180">다음 예제에서는 문서에서 특성을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="79d0d-180">The following example removes an attribute from the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.RemoveAt Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.RemoveAt Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.RemoveAt Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.RemoveAt Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.RemoveAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNamedItem">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode SetNamedItem (System.Xml.XmlNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlNode SetNamedItem(class System.Xml.XmlNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.SetNamedItem(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SetNamedItem (node As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlNode ^ SetNamedItem(System::Xml::XmlNode ^ node);" />
      <MemberSignature Language="F#" Value="override this.SetNamedItem : System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlAttributeCollection.SetNamedItem node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="79d0d-181">이 컬렉션에 저장할 Attribute 노드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-181">An attribute node to store in this collection.</span>
          </span>
          <span data-ttu-id="79d0d-182">노드 이름을 사용하여 나중에 노드에 액세스할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-182">The node will later be accessible using the name of the node.</span>
          </span>
          <span data-ttu-id="79d0d-183">컬렉션에 해당 이름의 노드가 이미 있으면 새 노드로 바뀌고, 그렇지 않으면 노드가 컬렉션 끝에 추가됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-183">If a node with that name is already present in the collection, it is replaced by the new one; otherwise, the node is appended to the end of the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79d0d-184">해당 <see cref="T:System.Xml.XmlNode" /> 속성을 사용하여 <see cref="P:System.Xml.XmlNode.Name" />를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-184">Adds a <see cref="T:System.Xml.XmlNode" /> using its <see cref="P:System.Xml.XmlNode.Name" /> property</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79d0d-185">
            <paramref name="node" />가 기존 노드를 같은 이름으로 바꾸면 이전 노드가 반환되고, 그렇지 않으면 추가된 노드가 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-185">If the <paramref name="node" /> replaces an existing node with the same name, the old node is returned; otherwise, the added node is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="79d0d-186">다음 예제에서는 문서에 새 특성을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="79d0d-186">The following example adds a new attribute to a document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.SetNamedItem Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.SetNamedItem Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.SetNamedItem Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.SetNamedItem Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.SetNamedItem Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.SetNamedItem Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="79d0d-187">이 컬렉션을 만든 문서와 다른 <see cref="T:System.Xml.XmlDocument" />에서 <paramref name="node" />를 만든 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-187">
              <paramref name="node" /> was created from a different <see cref="T:System.Xml.XmlDocument" /> than the one that created this collection.</span>
          </span>
          <span data-ttu-id="79d0d-188">이 <see langword="XmlAttributeCollection" />이 읽기 전용인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-188">This <see langword="XmlAttributeCollection" /> is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="79d0d-189">
            <paramref name="node" />가 이미 다른 <see cref="T:System.Xml.XmlAttribute" /> 개체의 특성인 <see cref="T:System.Xml.XmlElement" />인 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-189">
              <paramref name="node" /> is an <see cref="T:System.Xml.XmlAttribute" /> that is already an attribute of another <see cref="T:System.Xml.XmlElement" /> object.</span>
          </span>
          <span data-ttu-id="79d0d-190">다른 요소에서 특성을 다시 사용하려면 다시 사용할 <see langword="XmlAttribute" /> 개체를 복제해야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-190">To re-use attributes in other elements, you must clone the <see langword="XmlAttribute" /> objects you want to re-use.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="79d0d-191">이 컬렉션에서 복사된 개체의 대상인 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-191">The array that is the destination of the objects copied from this collection.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="79d0d-192">복사를 시작할 배열의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-192">The index in the array where copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79d0d-193">이 멤버에 대한 설명은 <see cref="M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-193">For a description of this member, see <see cref="M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d0d-194">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="79d0d-194">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="79d0d-195"><xref:System.Xml.XmlAttributeCollection> 인스턴스가 <xref:System.Collections.ICollection> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="79d0d-195">It can be used only when the <xref:System.Xml.XmlAttributeCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System.Collections.ICollection.Count { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Xml.XmlAttributeCollection.System.Collections.ICollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79d0d-196">이 멤버에 대한 설명은 <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-196">For a description of this member, see <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79d0d-197">특성의 수가 포함된 <see langword="int" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-197">Returns an <see langword="int" /> that contains the count of the attributes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d0d-198">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="79d0d-198">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="79d0d-199"><xref:System.Xml.XmlAttributeCollection> 인스턴스가 <xref:System.Collections.ICollection> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="79d0d-199">It can be used only when the <xref:System.Xml.XmlAttributeCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Xml.XmlAttributeCollection.System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79d0d-200">이 멤버에 대한 설명은 <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-200">For a description of this member, see <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79d0d-201">컬렉션이 동기화되면 <see langword="true" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-201">Returns <see langword="true" /> if the collection is synchronized.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d0d-202">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="79d0d-202">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="79d0d-203"><xref:System.Xml.XmlAttributeCollection> 인스턴스가 <xref:System.Collections.ICollection> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="79d0d-203">It can be used only when the <xref:System.Xml.XmlAttributeCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Xml.XmlAttributeCollection.System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79d0d-204">이 멤버에 대한 설명은 <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-204">For a description of this member, see <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79d0d-205">컬렉션의 루트인 <see cref="T:System.Object" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79d0d-205">Returns the <see cref="T:System.Object" /> that is the root of the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d0d-206">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="79d0d-206">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="79d0d-207"><xref:System.Xml.XmlAttributeCollection> 인스턴스가 <xref:System.Collections.ICollection> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="79d0d-207">It can be used only when the <xref:System.Xml.XmlAttributeCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>