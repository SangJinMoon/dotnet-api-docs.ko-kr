<Type Name="XmlAttributeCollection" FullName="System.Xml.XmlAttributeCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f11a5114a349192ec58819e83956e08ba96d4896" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52250637" /></Metadata><TypeSignature Language="C#" Value="public sealed class XmlAttributeCollection : System.Xml.XmlNamedNodeMap, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlAttributeCollection extends System.Xml.XmlNamedNodeMap implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlAttributeCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlAttributeCollection&#xA;Inherits XmlNamedNodeMap&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlAttributeCollection sealed : System::Xml::XmlNamedNodeMap, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type XmlAttributeCollection = class&#xA;    inherit XmlNamedNodeMap&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlDocument</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlNamedNodeMap</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="beccb-101">이름이나 인덱스로 액세스할 수 있는 특성의 컬렉션을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-101">Represents a collection of attributes that can be accessed by name or index.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beccb-102">`XmlAttributeCollection` 확장 된 <xref:System.Xml.XmlNamedNodeMap> 강력 하 게 추가 하 여 클래스 형식의 도우미 메서드.</span><span class="sxs-lookup"><span data-stu-id="beccb-102">`XmlAttributeCollection` extends the <xref:System.Xml.XmlNamedNodeMap> class by adding strongly typed helper methods.</span></span> <span data-ttu-id="beccb-103">추가, 제거 또는 컬렉션의 특성을 수정 하려면이 클래스를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-103">You can use this class to add, remove, or modify attributes in the collection.</span></span> <span data-ttu-id="beccb-104">`XmlAttributeCollection` 반환 되는 <xref:System.Xml.XmlElement.Attributes%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-104">`XmlAttributeCollection` is returned by the <xref:System.Xml.XmlElement.Attributes%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.XmlAttribute" />
    <altmember cref="T:System.Xml.XmlElement" />
    <related type="Article" href="https://msdn.microsoft.com/library/ce2df341-a1a4-4e97-8e1b-cd45b8e3e71e"><span data-ttu-id="beccb-105">DOM에서 특성 액세스</span><span class="sxs-lookup"><span data-stu-id="beccb-105">Accessing Attributes in the DOM</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/2038a90b-92af-4a0a-baaa-08e688d95194"><span data-ttu-id="beccb-106">이름 또는 인덱스별로 정렬되지 않은 노드 검색</span><span class="sxs-lookup"><span data-stu-id="beccb-106">Unordered Node Retrieval by Name or Index</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/b5e52844-4820-47c0-a61d-de2da33e9f54"><span data-ttu-id="beccb-107">XML DOM(문서 개체 모델)</span><span class="sxs-lookup"><span data-stu-id="beccb-107">XML Document Object Model (DOM)</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute Append (System.Xml.XmlAttribute node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlAttribute Append(class System.Xml.XmlAttribute node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.Append(System.Xml.XmlAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (node As XmlAttribute) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlAttribute ^ Append(System::Xml::XmlAttribute ^ node);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Xml.XmlAttribute -&gt; System.Xml.XmlAttribute" Usage="xmlAttributeCollection.Append node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlAttribute" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="beccb-108">삽입할 <see cref="T:System.Xml.XmlAttribute" />입니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-108">The <see cref="T:System.Xml.XmlAttribute" /> to insert.</span></span></param>
        <summary><span data-ttu-id="beccb-109">지정된 된 특성 컬렉션의 마지막 노드로 삽입 합니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-109">Inserts the specified attribute as the last node in the collection.</span></span></summary>
        <returns><span data-ttu-id="beccb-110"><see langword="XmlAttribute" /> 컬렉션에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-110">The <see langword="XmlAttribute" /> to append to the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beccb-111">컬렉션에 동일한 이름의 특성이 이미 있는 원래 특성을 컬렉션에서 제거 됩니다 및 `node` 컬렉션의 끝에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-111">If an attribute with the same name is already present in the collection, the original attribute is removed from the collection and `node` is added to the end of the collection.</span></span>  
  
 <span data-ttu-id="beccb-112">이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-112">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="beccb-113">다음 예제에서는 문서에 새 특성을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-113">The following example adds a new attribute to a document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.Append Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Append Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.Append Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Append Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.Append Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Append Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="beccb-114"><paramref name="node" /> 이 컬렉션을 만든 것과에서 다른 문서에서 생성 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-114"><paramref name="node" /> was created from a document different from the one that created this collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Xml.XmlAttribute[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Xml.XmlAttribute[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As XmlAttribute(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Xml::XmlAttribute ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Xml.XmlAttribute[] * int -&gt; unit" Usage="xmlAttributeCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Xml.XmlAttribute[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="beccb-115">이 컬렉션에서 복사한 개체의 대상인 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-115">The array that is the destination of the objects copied from this collection.</span></span></param>
        <param name="index"><span data-ttu-id="beccb-116">복사를 시작할 배열의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-116">The index in the array where copying begins.</span></span></param>
        <summary><span data-ttu-id="beccb-117">모든 복사는 <see cref="T:System.Xml.XmlAttribute" /> 지정된 된 배열에이 컬렉션의 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-117">Copies all the <see cref="T:System.Xml.XmlAttribute" /> objects from this collection into the given array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beccb-118">이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-118">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="beccb-119">다음 예제에서는 `CopyTo` 를 배열에 컬렉션에 있는 모든 특성을 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-119">The following example uses `CopyTo` to copy all the attributes in the collection into an array.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertAfter">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute InsertAfter (System.Xml.XmlAttribute newNode, System.Xml.XmlAttribute refNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlAttribute InsertAfter(class System.Xml.XmlAttribute newNode, class System.Xml.XmlAttribute refNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.InsertAfter(System.Xml.XmlAttribute,System.Xml.XmlAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertAfter (newNode As XmlAttribute, refNode As XmlAttribute) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlAttribute ^ InsertAfter(System::Xml::XmlAttribute ^ newNode, System::Xml::XmlAttribute ^ refNode);" />
      <MemberSignature Language="F#" Value="member this.InsertAfter : System.Xml.XmlAttribute * System.Xml.XmlAttribute -&gt; System.Xml.XmlAttribute" Usage="xmlAttributeCollection.InsertAfter (newNode, refNode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newNode" Type="System.Xml.XmlAttribute" />
        <Parameter Name="refNode" Type="System.Xml.XmlAttribute" />
      </Parameters>
      <Docs>
        <param name="newNode"><span data-ttu-id="beccb-120">삽입할 <see cref="T:System.Xml.XmlAttribute" />입니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-120">The <see cref="T:System.Xml.XmlAttribute" /> to insert.</span></span></param>
        <param name="refNode"><span data-ttu-id="beccb-121"><see cref="T:System.Xml.XmlAttribute" /> 참조 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-121">The <see cref="T:System.Xml.XmlAttribute" /> that is the reference attribute.</span></span> <span data-ttu-id="beccb-122"><paramref name="newNode" /> 뒤에 배치 됩니다는 <paramref name="refNode" />합니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-122"><paramref name="newNode" /> is placed after the <paramref name="refNode" />.</span></span></param>
        <summary><span data-ttu-id="beccb-123">지정 된 특성이 지정된 된 참조 특성 바로 뒤에 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-123">Inserts the specified attribute immediately after the specified reference attribute.</span></span></summary>
        <returns><span data-ttu-id="beccb-124"><see langword="XmlAttribute" /> 컬렉션에 삽입 합니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-124">The <see langword="XmlAttribute" /> to insert into the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beccb-125">컬렉션에 동일한 이름의 특성이 이미 있는 원래 특성을 컬렉션에서 제거 됩니다 및 `newNode` 컬렉션에 삽입 됩니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-125">If an attribute with the same name is already present in the collection, the original attribute is removed from the collection and `newNode` is inserted into the collection.</span></span> <span data-ttu-id="beccb-126">하는 경우 `refNode` 됩니다 `null`, `newNode` 컬렉션의 시작 부분에 삽입 됩니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-126">If `refNode` is `null`, `newNode` is inserted at the beginning of the collection.</span></span>  
  
 <span data-ttu-id="beccb-127">이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-127">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="beccb-128">다음 예제에서는 문서에 새 특성을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-128">The following example adds a new attribute to a document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.InsertAfter Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.InsertAfter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.InsertAfter Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.InsertAfter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.InsertAfter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.InsertAfter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="beccb-129"><paramref name="newNode" /> 이 컬렉션을 만든 것과에서 다른 문서에서 생성 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-129">The <paramref name="newNode" /> was created from a document different from the one that created this collection.</span></span> <span data-ttu-id="beccb-130">또는 <paramref name="refNode" /> 이 컬렉션의 구성원이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-130">Or the <paramref name="refNode" /> is not a member of this collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InsertBefore">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute InsertBefore (System.Xml.XmlAttribute newNode, System.Xml.XmlAttribute refNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlAttribute InsertBefore(class System.Xml.XmlAttribute newNode, class System.Xml.XmlAttribute refNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.InsertBefore(System.Xml.XmlAttribute,System.Xml.XmlAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertBefore (newNode As XmlAttribute, refNode As XmlAttribute) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlAttribute ^ InsertBefore(System::Xml::XmlAttribute ^ newNode, System::Xml::XmlAttribute ^ refNode);" />
      <MemberSignature Language="F#" Value="member this.InsertBefore : System.Xml.XmlAttribute * System.Xml.XmlAttribute -&gt; System.Xml.XmlAttribute" Usage="xmlAttributeCollection.InsertBefore (newNode, refNode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newNode" Type="System.Xml.XmlAttribute" />
        <Parameter Name="refNode" Type="System.Xml.XmlAttribute" />
      </Parameters>
      <Docs>
        <param name="newNode"><span data-ttu-id="beccb-131">삽입할 <see cref="T:System.Xml.XmlAttribute" />입니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-131">The <see cref="T:System.Xml.XmlAttribute" /> to insert.</span></span></param>
        <param name="refNode"><span data-ttu-id="beccb-132"><see cref="T:System.Xml.XmlAttribute" /> 참조 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-132">The <see cref="T:System.Xml.XmlAttribute" /> that is the reference attribute.</span></span> <span data-ttu-id="beccb-133"><paramref name="newNode" /> 앞에 배치 된 <paramref name="refNode" />합니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-133"><paramref name="newNode" /> is placed before the <paramref name="refNode" />.</span></span></param>
        <summary><span data-ttu-id="beccb-134">지정된 된 참조 특성 바로 앞에 지정된 된 특성을 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-134">Inserts the specified attribute immediately before the specified reference attribute.</span></span></summary>
        <returns><span data-ttu-id="beccb-135"><see langword="XmlAttribute" /> 컬렉션에 삽입 합니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-135">The <see langword="XmlAttribute" /> to insert into the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beccb-136">컬렉션에 동일한 이름의 특성이 이미 있는 원래 특성을 컬렉션에서 제거 됩니다 및 `newNode` 컬렉션에 삽입 됩니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-136">If an attribute with the same name is already present in the collection, the original attribute is removed from the collection and `newNode` is inserted into the collection.</span></span> <span data-ttu-id="beccb-137">하는 경우 `refNode` 됩니다 `null`, `newNode` 컬렉션의 끝에 삽입 됩니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-137">If `refNode` is `null`, `newNode` is inserted at the end of the collection.</span></span>  
  
 <span data-ttu-id="beccb-138">이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-138">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="beccb-139">다음 예제에서는 문서에 새 특성을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-139">The following example adds a new attribute to a document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.InsertBefore Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.InsertBefore Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.InsertBefore Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.InsertBefore Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.InsertBefore Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.InsertBefore Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="beccb-140"><paramref name="newNode" /> 이 컬렉션을 만든 것과에서 다른 문서에서 생성 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-140">The <paramref name="newNode" /> was created from a document different from the one that created this collection.</span></span> <span data-ttu-id="beccb-141">또는 <paramref name="refNode" /> 이 컬렉션의 구성원이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-141">Or the <paramref name="refNode" /> is not a member of this collection.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ItemOf">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="beccb-142">지정 된 이름 또는 인덱스를 사용 하 여 특성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-142">Gets the attribute with the specified name or index.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ItemOf">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute this[int i] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlAttribute ItemOf(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttributeCollection.ItemOf(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property ItemOf(i As Integer) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlAttribute ^ default[int] { System::Xml::XmlAttribute ^ get(int i); };" />
      <MemberSignature Language="F#" Value="member this.ItemOf(int) : System.Xml.XmlAttribute" Usage="System.Xml.XmlAttributeCollection.ItemOf" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="beccb-143">특성의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-143">The index of the attribute.</span></span></param>
        <summary><span data-ttu-id="beccb-144">지정된 된 인덱스를 사용 하 여 특성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-144">Gets the attribute with the specified index.</span></span></summary>
        <value><span data-ttu-id="beccb-145">지정된 인덱스의 <see cref="T:System.Xml.XmlAttribute" />입니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-145">The <see cref="T:System.Xml.XmlAttribute" /> at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beccb-146">이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-146">This property is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="beccb-147">호출 하는 것과 같습니다 <xref:System.Xml.XmlNamedNodeMap.Item%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-147">It is equivalent to calling <xref:System.Xml.XmlNamedNodeMap.Item%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="beccb-148">다음 예제에서는 컬렉션의 모든 특성을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-148">The following example displays all the attributes in the collection.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.this Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.this Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="beccb-149">에 전달 되는 인덱스가 범위를 벗어났습니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-149">The index being passed in is out of range.</span></span></exception>
        <altmember cref="M:System.Xml.XmlNamedNodeMap.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ItemOf">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlAttribute ItemOf(string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttributeCollection.ItemOf(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property ItemOf(name As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlAttribute ^ default[System::String ^] { System::Xml::XmlAttribute ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.ItemOf(string) : System.Xml.XmlAttribute" Usage="System.Xml.XmlAttributeCollection.ItemOf" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="beccb-150">특성의 정규화된 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-150">The qualified name of the attribute.</span></span></param>
        <summary><span data-ttu-id="beccb-151">지정한 이름 가진 특성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-151">Gets the attribute with the specified name.</span></span></summary>
        <value><span data-ttu-id="beccb-152">지정된 이름을 가진 <see cref="T:System.Xml.XmlAttribute" />입니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-152">The <see cref="T:System.Xml.XmlAttribute" /> with the specified name.</span></span> <span data-ttu-id="beccb-153">특성이 존재 하지 않는 경우이 속성은 반환 <see langword="null" />합니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-153">If the attribute does not exist, this property returns <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beccb-154">이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-154">This property is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="beccb-155">호출 하는 것과 같습니다 <xref:System.Xml.XmlNamedNodeMap.GetNamedItem%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-155">It is equivalent to calling <xref:System.Xml.XmlNamedNodeMap.GetNamedItem%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="beccb-156">다음 예제에서는 문서에서 특성을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-156">The following example removes an attribute from the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemOf">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute this[string localName, string namespaceURI] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlAttribute ItemOf(string, string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttributeCollection.ItemOf(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property ItemOf(localName As String, namespaceURI As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlAttribute ^ default[System::String ^, System::String ^] { System::Xml::XmlAttribute ^ get(System::String ^ localName, System::String ^ namespaceURI); };" />
      <MemberSignature Language="F#" Value="member this.ItemOf(string * string) : System.Xml.XmlAttribute" Usage="System.Xml.XmlAttributeCollection.ItemOf" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="beccb-157">특성의 로컬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-157">The local name of the attribute.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="beccb-158">특성의 네임스페이스 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-158">The namespace URI of the attribute.</span></span></param>
        <summary><span data-ttu-id="beccb-159">지정 된 로컬 이름과 네임 스페이스 리소스 URI (Uniform Identifier)를 사용 하 여 특성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-159">Gets the attribute with the specified local name and namespace Uniform Resource Identifier (URI).</span></span></summary>
        <value><span data-ttu-id="beccb-160"><see cref="T:System.Xml.XmlAttribute" /> 지정 된 로컬 이름과 네임 스페이스 URI 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-160">The <see cref="T:System.Xml.XmlAttribute" /> with the specified local name and namespace URI.</span></span> <span data-ttu-id="beccb-161">특성이 존재 하지 않는 경우이 속성은 반환 <see langword="null" />합니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-161">If the attribute does not exist, this property returns <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beccb-162">이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-162">This property is a Microsoft extension to the Document Object Model (DOM).</span></span> <span data-ttu-id="beccb-163">호출 하는 것과 같습니다 <xref:System.Xml.XmlNamedNodeMap.GetNamedItem%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-163">It is equivalent to calling <xref:System.Xml.XmlNamedNodeMap.GetNamedItem%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepend">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute Prepend (System.Xml.XmlAttribute node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlAttribute Prepend(class System.Xml.XmlAttribute node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.Prepend(System.Xml.XmlAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Function Prepend (node As XmlAttribute) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlAttribute ^ Prepend(System::Xml::XmlAttribute ^ node);" />
      <MemberSignature Language="F#" Value="member this.Prepend : System.Xml.XmlAttribute -&gt; System.Xml.XmlAttribute" Usage="xmlAttributeCollection.Prepend node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlAttribute" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="beccb-164">삽입할 <see cref="T:System.Xml.XmlAttribute" />입니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-164">The <see cref="T:System.Xml.XmlAttribute" /> to insert.</span></span></param>
        <summary><span data-ttu-id="beccb-165">컬렉션의 첫 번째 노드로 지정된 된 특성을 삽입 합니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-165">Inserts the specified attribute as the first node in the collection.</span></span></summary>
        <returns><span data-ttu-id="beccb-166"><see langword="XmlAttribute" /> 컬렉션에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-166">The <see langword="XmlAttribute" /> added to the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beccb-167">컬렉션에 동일한 이름의 특성이 이미 있는 원래 특성을 컬렉션에서 제거 됩니다 및 `node` 컬렉션의 시작 부분에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-167">If an attribute with the same name is already present in the collection, the original attribute is removed from the collection and `node` is added to the beginning of the collection.</span></span>  
  
 <span data-ttu-id="beccb-168">이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-168">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="beccb-169">다음 예제에서는 문서에 새 특성을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-169">The following example adds a new attribute to a document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.Prepend Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Prepend Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.Prepend Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Prepend Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.Prepend Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Prepend Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute Remove (System.Xml.XmlAttribute node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlAttribute Remove(class System.Xml.XmlAttribute node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.Remove(System.Xml.XmlAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (node As XmlAttribute) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlAttribute ^ Remove(System::Xml::XmlAttribute ^ node);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Xml.XmlAttribute -&gt; System.Xml.XmlAttribute" Usage="xmlAttributeCollection.Remove node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlAttribute" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="beccb-170">제거할 <see cref="T:System.Xml.XmlAttribute" />입니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-170">The <see cref="T:System.Xml.XmlAttribute" /> to remove.</span></span></param>
        <summary><span data-ttu-id="beccb-171">컬렉션에서 지정된 된 특성을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-171">Removes the specified attribute from the collection.</span></span></summary>
        <returns><span data-ttu-id="beccb-172">노드 제거 또는 <see langword="null" /> 컬렉션에 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="beccb-172">The node removed or <see langword="null" /> if it is not found in the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beccb-173">이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-173">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="beccb-174">다음 예제에서는 문서에서 특성을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-174">The following example removes an attribute from the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public void RemoveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.RemoveAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAll();" />
      <MemberSignature Language="F#" Value="member this.RemoveAll : unit -&gt; unit" Usage="xmlAttributeCollection.RemoveAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="beccb-175">컬렉션에서 모든 특성을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-175">Removes all attributes from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beccb-176">이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-176">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="beccb-177">다음 예제에서는 문서에서 모든 특성을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-177">The following example removes all attributes from the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.RemoveAll Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.RemoveAll Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.RemoveAll Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.RemoveAll Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.RemoveAll Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.RemoveAll Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public System.Xml.XmlAttribute RemoveAt (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlAttribute RemoveAt(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAt (i As Integer) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlAttribute ^ RemoveAt(int i);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; System.Xml.XmlAttribute" Usage="xmlAttributeCollection.RemoveAt i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="beccb-178">제거할 노드의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-178">The index of the node to remove.</span></span> <span data-ttu-id="beccb-179">첫 번째 노드에 인덱스 0이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-179">The first node has index 0.</span></span></param>
        <summary><span data-ttu-id="beccb-180">컬렉션에서 지정한 인덱스에 해당 특성을 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-180">Removes the attribute corresponding to the specified index from the collection.</span></span></summary>
        <returns><span data-ttu-id="beccb-181">반환 <see langword="null" /> 지정된 된 인덱스에 특성이 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="beccb-181">Returns <see langword="null" /> if there is no attribute at the specified index.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beccb-182">이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-182">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="beccb-183">다음 예제에서는 문서에서 특성을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-183">The following example removes an attribute from the document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.RemoveAt Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.RemoveAt Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.RemoveAt Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.RemoveAt Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.RemoveAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNamedItem">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode SetNamedItem (System.Xml.XmlNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlNode SetNamedItem(class System.Xml.XmlNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.SetNamedItem(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SetNamedItem (node As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlNode ^ SetNamedItem(System::Xml::XmlNode ^ node);" />
      <MemberSignature Language="F#" Value="override this.SetNamedItem : System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlAttributeCollection.SetNamedItem node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="beccb-184">이 컬렉션에 저장할 attribute 노드입니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-184">An attribute node to store in this collection.</span></span> <span data-ttu-id="beccb-185">노드는 노드의 이름을 사용 하 여 액세스할 수 나중에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-185">The node will later be accessible using the name of the node.</span></span> <span data-ttu-id="beccb-186">컬렉션에서 해당 이름의 노드가 이미 있으면 새 노드로; 대체 됩니다. 그렇지 않으면 노드가 컬렉션의 끝에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-186">If a node with that name is already present in the collection, it is replaced by the new one; otherwise, the node is appended to the end of the collection.</span></span></param>
        <summary><span data-ttu-id="beccb-187">추가 된 <see cref="T:System.Xml.XmlNode" /> 를 사용 하 여 해당 <see cref="P:System.Xml.XmlNode.Name" /> 속성</span><span class="sxs-lookup"><span data-stu-id="beccb-187">Adds a <see cref="T:System.Xml.XmlNode" /> using its <see cref="P:System.Xml.XmlNode.Name" /> property</span></span></summary>
        <returns><span data-ttu-id="beccb-188">경우는 <paramref name="node" /> 대체 이전 노드가 동일한 이름 가진 기존 노드가 고 그렇지 않으면 반환 된, 추가 된 노드가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-188">If the <paramref name="node" /> replaces an existing node with the same name, the old node is returned; otherwise, the added node is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="beccb-189">다음 예제에서는 문서에 새 특성을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-189">The following example adds a new attribute to a document.</span></span>  
  
 [!code-cpp[Classic WebData XmlAttributeCollection.SetNamedItem Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.SetNamedItem Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlAttributeCollection.SetNamedItem Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlAttributeCollection.SetNamedItem Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlAttributeCollection.SetNamedItem Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlAttributeCollection.SetNamedItem Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="beccb-190"><paramref name="node" /> 다른 만들어진 <see cref="T:System.Xml.XmlDocument" /> 이 컬렉션을 만든 것입니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-190"><paramref name="node" /> was created from a different <see cref="T:System.Xml.XmlDocument" /> than the one that created this collection.</span></span>  
  
<span data-ttu-id="beccb-191">이 <see langword="XmlAttributeCollection" /> 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-191">This <see langword="XmlAttributeCollection" /> is read-only.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="beccb-192"><paramref name="node" /> <see cref="T:System.Xml.XmlAttribute" /> 는 이미 다른 특성 <see cref="T:System.Xml.XmlElement" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-192"><paramref name="node" /> is an <see cref="T:System.Xml.XmlAttribute" /> that is already an attribute of another <see cref="T:System.Xml.XmlElement" /> object.</span></span> <span data-ttu-id="beccb-193">특성의 다른 요소를 다시 사용 하려면 복제 해야 합니다는 <see langword="XmlAttribute" /> 다시 사용 하려는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-193">To re-use attributes in other elements, you must clone the <see langword="XmlAttribute" /> objects you want to re-use.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlAttributeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="beccb-194">이 컬렉션에서 복사한 개체의 대상인 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-194">The array that is the destination of the objects copied from this collection.</span></span></param>
        <param name="index"><span data-ttu-id="beccb-195">복사를 시작할 배열의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-195">The index in the array where copying begins.</span></span></param>
        <summary><span data-ttu-id="beccb-196">이 멤버에 대한 설명은 <see cref="M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="beccb-196">For a description of this member, see <see cref="M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beccb-197">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="beccb-197">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="beccb-198"><xref:System.Xml.XmlAttributeCollection> 인스턴스가 <xref:System.Collections.ICollection> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-198">It can be used only when the <xref:System.Xml.XmlAttributeCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System::Collections::ICollection::Count { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="beccb-199">이 멤버에 대한 설명은 <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="beccb-199">For a description of this member, see <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count" />.</span></span></summary>
        <value><span data-ttu-id="beccb-200">반환 된 <see langword="int" /> 특성의 수를 포함 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-200">Returns an <see langword="int" /> that contains the count of the attributes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beccb-201">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="beccb-201">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="beccb-202"><xref:System.Xml.XmlAttributeCollection> 인스턴스가 <xref:System.Collections.ICollection> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-202">It can be used only when the <xref:System.Xml.XmlAttributeCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="beccb-203">이 멤버에 대한 설명은 <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="beccb-203">For a description of this member, see <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized" />.</span></span></summary>
        <value><span data-ttu-id="beccb-204">반환 <see langword="true" /> 컬렉션이 동기화 되는 경우.</span><span class="sxs-lookup"><span data-stu-id="beccb-204">Returns <see langword="true" /> if the collection is synchronized.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beccb-205">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="beccb-205">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="beccb-206"><xref:System.Xml.XmlAttributeCollection> 인스턴스가 <xref:System.Collections.ICollection> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-206">It can be used only when the <xref:System.Xml.XmlAttributeCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="beccb-207">이 멤버에 대한 설명은 <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="beccb-207">For a description of this member, see <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot" />.</span></span></summary>
        <value><span data-ttu-id="beccb-208">반환 된 <see cref="T:System.Object" /> 컬렉션의 루트입니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-208">Returns the <see cref="T:System.Object" /> that is the root of the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beccb-209">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="beccb-209">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="beccb-210"><xref:System.Xml.XmlAttributeCollection> 인스턴스가 <xref:System.Collections.ICollection> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="beccb-210">It can be used only when the <xref:System.Xml.XmlAttributeCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>