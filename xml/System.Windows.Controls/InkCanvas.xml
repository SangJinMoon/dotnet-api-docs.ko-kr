<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="InkCanvas.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac542ba86c1dbd2eab3ddd951fe615e1e7a4f36eb6e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">42ba86c1dbd2eab3ddd951fe615e1e7a4f36eb6e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Controls.InkCanvas">
          <source>Defines an area that receives and displays ink strokes.</source>
          <target state="translated">잉크 스트로크를 받아 표시하는 영역을 정의합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.InkCanvas">
          <source>An <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> is an element that can be used to receive and display ink input.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 받고 잉크 입력을 표시 하는 데 사용할 수 있는 요소입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.InkCanvas">
          <source>This is commonly done through the use of a stylus, which interacts with a digitizer to produce ink strokes using a stylus or a mouse.</source>
          <target state="translated">일반적으로 작용 스타일러스나 마우스를 사용 하 여 잉크 스트로크를 생성 하는 디지타이저와 스타일러스를 사용 하 여 수행 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.InkCanvas">
          <source>The created strokes are represented as <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> objects, and can be manipulated either programmatically or based on user input.</source>
          <target state="translated">생성된 된 스트로크로 표현 됩니다 <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> 개체, 수 및 중 하나를 프로그래밍 방식으로 조작 또는 사용자 입력에 따라 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.InkCanvas">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> enables users to modify or delete an existing <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 사용자가을 수정 하거나 기존의 삭제할 수 있도록 <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.InkCanvas">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> can be bound to a data source.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 데이터 원본에 바인딩될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.InkCanvas">
          <source>For example, you can bind the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.Strokes%2A&gt;</ph> property to: a base-64, encoded string that contains ink data in Ink Serialized format (ISF); or even to the <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas.Strokes%2A&gt;</ph> property of another <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">예를 들어 바인딩할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.Strokes%2A&gt;</ph> 속성을: serialize 된 잉크의 데이터 형식인 (ISF) 또는 심지어 잉크를 포함 하는 base 64로 인코딩된 문자열에서 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas.Strokes%2A&gt;</ph> 재산 <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.InkCanvas">
          <source>You can also bind properties, such as <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph>, to other data sources.</source>
          <target state="translated">속성을 같은 바인딩할 수도 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph>, 다른 데이터 소스에 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.InkCanvas">
          <source>The following example demonstrates how to simulate the use of both a pen and a highlighter on the same <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 펜과 동일한 highlighter의 사용을 시뮬레이션 하는 방법을 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.InkCanvas">
          <source>The example assumes that the root element in the markup language (XAML) file is a <ph id="ph1">&lt;xref:System.Windows.Controls.DockPanel&gt;</ph> called <ph id="ph2">`root`</ph>.</source>
          <target state="translated">이 예제에서는 태그 언어 (XAML) 파일의 루트 요소 임을 가정는 <ph id="ph1">&lt;xref:System.Windows.Controls.DockPanel&gt;</ph> 호출 <ph id="ph2">`root`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.InkCanvas">
          <source>It also assumes that there is a <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> called <ph id="ph2">`switchHighlighter`</ph> and that both the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> events are connected to the example's event handler.</source>
          <target state="translated">또한 라고 가정는 <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> 호출 <ph id="ph2">`switchHighlighter`</ph> 하 고 모두는 <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> 이벤트가 예에 나오는 이벤트 처리기에 연결 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.InkCanvas">
          <source>The following example declares two <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> objects in XAML and establishes data binding between them and other data sources.</source>
          <target state="translated">다음 예제에서는 두 개의 선언 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> XAML에서 개체를 다른 데이터 소스 간의 데이터 바인딩을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.InkCanvas">
          <source>The first <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>, called <ph id="ph2">`ic`</ph>, is bound to two data sources.</source>
          <target state="translated">첫 번째 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>라는 <ph id="ph2">`ic`</ph>, 두 데이터 소스에 바인딩되어 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.InkCanvas">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A&gt;</ph> properties on <ph id="ph3">`ic`</ph> are bound to <ph id="ph4">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> objects, which are, in turn, bound to arrays defined in the XAML.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A&gt;</ph> 속성에 <ph id="ph3">`ic`</ph> 에 바인딩된 <ph id="ph4">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> , 차례로에 바인딩되는 XAML에 정의 된 배열 개체입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.InkCanvas">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvas.Strokes%2A&gt;</ph> properties of the second <ph id="ph4">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> are bound to the first <ph id="ph5">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> in the following code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvas.Strokes%2A&gt;</ph> 의 두 번째 속성 <ph id="ph4">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 바인딩된 첫 번째 <ph id="ph5">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 다음 코드에 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.#ctor">
          <source>Initializes a new instance of the InkCanvas class.</source>
          <target state="translated">InkCanvas 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.InkCanvas.ActiveEditingMode">
          <source>Gets the current editing mode of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>의 현재 편집 모드를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.ActiveEditingMode">
          <source>The current editing mode of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>의 현재 편집 모드입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.ActiveEditingMode">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A&gt;</ph> property indicates the current <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvasEditingMode&gt;</ph> of the <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A&gt;</ph> 속성은 현재 나타냅니다 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvasEditingMode&gt;</ph> 의 <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.ActiveEditingMode">
          <source>Suppose that the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvasEditingMode.Ink&gt;</ph> and the <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A&gt;</ph> is set to <ph id="ph4">&lt;xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint&gt;</ph>.</source>
          <target state="translated">되었다고 가정은 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph> 로 설정 되어 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvasEditingMode.Ink&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A&gt;</ph> 로 설정 된 <ph id="ph4">&lt;xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.ActiveEditingMode">
          <source>When the tablet pen is used in an inverted position, <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A&gt;</ph> has a value of <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint&gt;</ph>.</source>
          <target state="translated">태블릿 펜은 반전 된 위치에 사용 된 경우 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A&gt;</ph> 값 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.ActiveEditingMode">
          <source>Otherwise, its value is <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvasEditingMode.Ink&gt;</ph>.</source>
          <target state="translated">그렇지 않으면 해당 값은 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvasEditingMode.Ink&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.ActiveEditingMode">
          <source>Dependency Property Information</source>
          <target state="translated">종속성 속성 정보</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.ActiveEditingMode">
          <source>Identifier field</source>
          <target state="translated">식별자 필드</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.ActiveEditingMode">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">로 메타 데이터 속성 설정 <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.ActiveEditingMode">
          <source>None</source>
          <target state="translated">없음</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.ActiveEditingMode">
          <source>The following example reports the value of <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A&gt;</ph> whenever it changes.</source>
          <target state="translated">값을 보고 하는 다음 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A&gt;</ph> 변경 될 때마다 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged">
          <source>Occurs when the current editing mode changes.</source>
          <target state="translated">현재 편집 모드가 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A&gt;</ph> property changes whenever the <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> enters a new editing mode.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A&gt;</ph> 속성이 변경 될 때마다는 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 새 편집 모드로 전환 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged">
          <source>For example, suppose that the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvasEditingMode.Ink&gt;</ph> and the <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A&gt;</ph> is set to <ph id="ph4">&lt;xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint&gt;</ph>.</source>
          <target state="translated">예를 들어 있다고 가정은 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph> 로 설정 되어 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvasEditingMode.Ink&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A&gt;</ph> 로 설정 된 <ph id="ph4">&lt;xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged">
          <source>When the user changes the tip of tablet pen, the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged&gt;</ph> event occurs.</source>
          <target state="translated">태블릿 펜 끝을 변경할 때의 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged&gt;</ph> 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged">
          <source>Routed Event Information</source>
          <target state="translated">라우팅 이벤트 정보</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged">
          <source>Identifier field</source>
          <target state="translated">식별자 필드</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged">
          <source>Routing strategy</source>
          <target state="translated">라우팅 전략</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged">
          <source>Bubbling</source>
          <target state="translated">버블링</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged">
          <source>Delegate</source>
          <target state="translated">대리자</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged">
          <source>The following example reports the value of <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A&gt;</ph> whenever it changes.</source>
          <target state="translated">값을 보고 하는 다음 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A&gt;</ph> 변경 될 때마다 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.InkCanvas.ActiveEditingModeChangedEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" /&gt;</ph> routed event.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" /&gt;</ph> 라우트된 이벤트를 식별합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.InkCanvas.ActiveEditingModeProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.ActiveEditingMode" /&gt;</ph> dependency property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.ActiveEditingMode" /&gt;</ph> 종속성 속성을 식별합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.ArrangeOverride(System.Windows.Size)">
          <source>The final area within the parent that this element should use to arrange itself and its children.</source>
          <target state="translated">이 요소에서 자신과 자식을 정렬하는 데 사용해야 하는 부모 내의 마지막 영역입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.ArrangeOverride(System.Windows.Size)">
          <source>Positions child elements and determines a size for the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph> object.</source>
          <target state="translated">자식 요소를 배치하고 <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph> 개체에 대한 크기를 결정합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.ArrangeOverride(System.Windows.Size)">
          <source>The actual size used.</source>
          <target state="translated">사용되는 실제 크기입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.InkCanvas.Background">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Windows.Media.Brush" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Brush" /&gt;</ph>을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.InkCanvas.Background">
          <source>The brush is used to fill the border area surrounding a <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>.</source>
          <target state="translated">브러시는 <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph> 주위의 테두리 영역을 채우는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.Background">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Media.Brush" /&gt;</ph> used to fill the border area surrounding a <ph id="ph2">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Brush" /&gt;</ph> 주위의 테두리 영역을 채우는 데 사용되는 <ph id="ph2">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.Background">
          <source>Dependency Property Information</source>
          <target state="translated">종속성 속성 정보</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.Background">
          <source>Identifier field</source>
          <target state="translated">식별자 필드</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.Background">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">로 메타 데이터 속성 설정 <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.Background">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.Background">
          <source>The following example demonstrates how to set the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.Background%2A&gt;</ph> property on an <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 설정 하는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.Background%2A&gt;</ph> 속성에는 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.InkCanvas.BackgroundProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.Background" /&gt;</ph> dependency property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.Background" /&gt;</ph> 종속성 속성을 식별합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.InkCanvas.BottomProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.Bottom" /&gt;</ph> attached property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.Bottom" /&gt;</ph> 연결된 속성을 식별합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.CanPaste">
          <source>Indicates whether the contents of the Clipboard can be pasted into the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>.</source>
          <target state="translated">클립보드 내용을 <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>에 붙여 넣을 수 있는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.CanPaste">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the contents of the Clipboard can be pasted in; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">클립보드 내용을 붙여 넣을 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.CanPaste">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> can support Clipboard data in <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> format, <ph id="ph3">[!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]</ph>, and text format.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 클립보드 데이터를 지원할 수 <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> 형식으로 <ph id="ph3">[!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]</ph>, 및 텍스트 형식입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.CanPaste">
          <source>The following example copies an element to the Clipboard and pastes it to the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 클립보드에 요소를 복사 하 고을 붙여는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.CanPaste">
          <source>This example assumes that there is an element called <ph id="ph1">`rect1`</ph>, and that the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> events have been connected to the event handlers in the example.</source>
          <target state="translated">이 예에서는 라는 요소가 있다고 가정 <ph id="ph1">`rect1`</ph>, 있고는 <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> 예제의 이벤트 처리기에 연결 된 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.CanPaste">
          <source>Permission to paste content from the Clipboard to the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>.</source>
          <target state="translated">클립보드의 내용을 <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.CanPaste">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /&gt;</ph>.</source>
          <target state="translated">연관된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.InkCanvas.Children">
          <source>Retrieves child elements of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>의 자식 요소를 검색합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.Children">
          <source>A collection of child elements located on the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>에 있는 자식 요소의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.Children">
          <source>XAML Property Element Usage</source>
          <target state="translated">XAML 속성 요소 사용</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.Children">
          <source>XAML Values</source>
          <target state="translated">XAML 값</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.Children">
          <source><bpt id="p1">*</bpt>OneOrMoreUIElements<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>OneOrMoreUIElements<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.Children">
          <source>One or more <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> objects.</source>
          <target state="translated">하나 이상의 <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.Children">
          <source>The following example adds a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> to an <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 추가 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.CopySelection">
          <source>Copies selected strokes and/or elements to the Clipboard.</source>
          <target state="translated">선택된 스트로크 및/또는 요소를 클립보드로 복사합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.CopySelection">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> can support Clipboard data in <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> format, <ph id="ph3">[!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]</ph>, and text format.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 클립보드 데이터를 지원할 수 <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> 형식으로 <ph id="ph3">[!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]</ph>, 및 텍스트 형식입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.CopySelection">
          <source>Strokes to the Clipboard are both <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> format, <ph id="ph2">[!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]</ph>.</source>
          <target state="translated">클립보드가 둘 다 <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> 형식으로 <ph id="ph2">[!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.CopySelection">
          <source>The following example selects two elements on an <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> and copies them to the Clipboard.</source>
          <target state="translated">두 개의 요소를 선택 하는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 클립보드에 복사 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.CopySelection">
          <source>This example assumes that there is a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> called <ph id="ph2">`textbox1`</ph> and a <ph id="ph3">&lt;xref:System.Windows.Controls.Button&gt;</ph> called <ph id="ph4">`button1 -`</ph> and thatboth controls are child elements of the <ph id="ph5">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">이 예에서는 라고 가정는 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 호출 <ph id="ph2">`textbox1`</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Controls.Button&gt;</ph> 호출 <ph id="ph4">`button1 -`</ph> thatboth 컨트롤은 자식 요소 및는 <ph id="ph5">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.CutSelection">
          <source>Deletes the selected strokes and elements, and copies them to the Clipboard.</source>
          <target state="translated">선택된 스트로크 및 요소를 삭제하고 클립보드로 복사합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.CutSelection">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> can support Clipboard data in <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> format, <ph id="ph3">[!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]</ph>, and text format.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 클립보드 데이터를 지원할 수 <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> 형식으로 <ph id="ph3">[!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]</ph>, 및 텍스트 형식입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.CutSelection">
          <source>Strokes to the Clipboard are both <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> format, <ph id="ph2">[!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]</ph>.</source>
          <target state="translated">클립보드가 둘 다 <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> 형식으로 <ph id="ph2">[!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.CutSelection">
          <source>The following example selects and cuts two elements on an <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 선택 하 고 두 요소에서 자릅니다는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.CutSelection">
          <source>This example assumes that there is a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> called <ph id="ph2">`textbox1`</ph> and a <ph id="ph3">&lt;xref:System.Windows.Controls.Button&gt;</ph> called <ph id="ph4">`button1`</ph> - and that both controls are child elements of the <ph id="ph5">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">이 예에서는 라고 가정는 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 호출 <ph id="ph2">`textbox1`</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Controls.Button&gt;</ph> 호출 <ph id="ph4">`button1`</ph> -있고 두 컨트롤은 자식 요소는 <ph id="ph5">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes">
          <source>Gets or sets the drawing attributes that are applied to new ink strokes made on the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>에 그려진 새 잉크 스트로크에 적용된 그리기 특성을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes">
          <source>The default drawing attributes for the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>의 기본 그리기 특성입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes">
          <source>Setting this property will affect only new strokes that are made after this property is set.</source>
          <target state="translated">이 속성을 설정 하면 새로 스트로크가이 속성을 설정 후에 영향을 줍니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes">
          <source>To apply new drawing attributes to already-created <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> objects, access them individually using the <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas.Strokes%2A&gt;</ph> property.</source>
          <target state="translated">이미 만든 새 그리기 특성을 적용 하려면 <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> 개별적으로 사용 하 여 개체, 액세스는 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas.Strokes%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes">
          <source>Dependency Property Information</source>
          <target state="translated">종속성 속성 정보</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes">
          <source>Identifier field</source>
          <target state="translated">식별자 필드</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">로 메타 데이터 속성 설정 <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes">
          <source>None</source>
          <target state="translated">없음</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes">
          <source>The following example demonstrates how to use two <ph id="ph1">&lt;xref:System.Windows.Ink.DrawingAttributes&gt;</ph> objects to simulate the experience of using a pen and a highlighter on the same <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 두 개를 사용 하는 방법을 <ph id="ph1">&lt;xref:System.Windows.Ink.DrawingAttributes&gt;</ph> 펜 및는 highlighter를 사용 하 여 동일한의 경험을 시뮬레이션할 개체 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes">
          <source>The example assumes that the root element in the markup language (XAML) file is a <ph id="ph1">&lt;xref:System.Windows.Controls.DockPanel&gt;</ph> called <ph id="ph2">`root`</ph>.</source>
          <target state="translated">이 예제에서는 태그 언어 (XAML) 파일의 루트 요소 임을 가정는 <ph id="ph1">&lt;xref:System.Windows.Controls.DockPanel&gt;</ph> 호출 <ph id="ph2">`root`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes">
          <source>It also assumes that there is a <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> called <ph id="ph2">`switchHilighter`</ph> and that the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> event is connected to the event handler.</source>
          <target state="translated">또한 라고 가정는 <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> 호출 <ph id="ph2">`switchHilighter`</ph> 하 고는 <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> 이벤트가 이벤트 처리기에 연결 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes">
          <source>The following example demonstrates how to bind the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A&gt;</ph> property to a data source.</source>
          <target state="translated">다음 예제에서는 바인딩하는 방법을 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A&gt;</ph> 속성을 데이터 소스입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" /&gt;</ph> dependency property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" /&gt;</ph> 종속성 속성을 식별합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="E:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" /&gt;</ph> property is replaced.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" /&gt;</ph> 속성이 바뀔 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced">
          <source>The following example checks the value of the <ph id="ph1">&lt;xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A&gt;</ph> property of the new <ph id="ph2">&lt;xref:System.Windows.Ink.DrawingAttributes&gt;</ph> object.</source>
          <target state="translated">값을 확인 하는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A&gt;</ph> 새 속성 <ph id="ph2">&lt;xref:System.Windows.Ink.DrawingAttributes&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription">
          <source>Gets or sets the stylus point description for an <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>의 스타일러스 포인트 설정을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription">
          <source>The stylus point description for an <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>의 스타일러스 포인트 설명입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription">
          <source>By default, the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> stores only the <ph id="ph2">&lt;xref:System.Windows.Input.StylusPointProperties.X&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Input.StylusPointProperties.Y&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Input.StylusPointProperties.NormalPressure&gt;</ph> properties for each <ph id="ph5">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> belonging to a stroke.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 만 저장는 <ph id="ph2">&lt;xref:System.Windows.Input.StylusPointProperties.X&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Input.StylusPointProperties.Y&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Windows.Input.StylusPointProperties.NormalPressure&gt;</ph> 각각에 대 한 속성 <ph id="ph5">&lt;xref:System.Windows.Input.StylusPoint&gt;</ph> 획에 속하는 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription">
          <source>You can use the DefaultStylusPointDescription property to store additional information about points comprising the strokes on a <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">스트로크에 구성 된 지점에 대 한 추가 정보를 저장할 DefaultStylusPointDescription 속성을 사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription">
          <source>Setting this property will affect only new strokes that are made after the property is set.</source>
          <target state="translated">이 속성을 설정 하면 새로 스트로크 속성이 설정 된 후에 영향을 줍니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription">
          <source>XAML Text Usage</source>
          <target state="translated">XAML 텍스트 사용</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription">
          <source>You cannot use this property in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">이 속성을 사용할 수 없습니다 <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription%2A&gt;</ph> so that the stylus points of the strokes on the <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> contain the <ph id="ph3">&lt;xref:System.Windows.Input.StylusPointProperties.X&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Input.StylusPointProperties.Y&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Input.StylusPointProperties.NormalPressure&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Input.StylusPointProperties.TipButton&gt;</ph> properties.</source>
          <target state="translated">다음 예에서는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription%2A&gt;</ph> 있도록에 스트로크의 스타일러스 포인트는 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 포함는 <ph id="ph3">&lt;xref:System.Windows.Input.StylusPointProperties.X&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Input.StylusPointProperties.Y&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Input.StylusPointProperties.NormalPressure&gt;</ph>, 및 <ph id="ph6">&lt;xref:System.Windows.Input.StylusPointProperties.TipButton&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription">
          <source>Only the strokes that are added to the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> after the <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription%2A&gt;</ph> is set to contain the additional property.</source>
          <target state="translated">에 추가 하는 선은 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 후는 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription%2A&gt;</ph> 추가 속성이 포함으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.InkCanvas.DynamicRenderer">
          <source>Gets or sets the renderer that dynamically draws ink on the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>에 동적으로 잉크를 그리는 렌더러를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.DynamicRenderer">
          <source>The renderer that dynamically draws ink on the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>에 동적으로 잉크를 그리는 렌더러입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.DynamicRenderer">
          <source>You can set the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A&gt;</ph> property to a custom <ph id="ph2">&lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;</ph> if you want to customize the ink.</source>
          <target state="translated">설정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A&gt;</ph> 을 사용자 지정 속성 <ph id="ph2">&lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;</ph> 잉크를 사용자 지정 하려는 경우.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.DynamicRenderer">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A&gt;</ph> is a member of the <ph id="ph2">&lt;xref:System.Windows.UIElement.StylusPlugIns%2A&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A&gt;</ph> 의 구성원은 <ph id="ph2">&lt;xref:System.Windows.UIElement.StylusPlugIns%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.DynamicRenderer">
          <source>When you set the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> removes the old <ph id="ph3">&lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;</ph> from the <ph id="ph4">&lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugInCollection&gt;</ph> and adds the new <ph id="ph5">&lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;</ph> to the end of the collection.</source>
          <target state="translated">설정 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 이전 제거 <ph id="ph3">&lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;</ph> 에서 <ph id="ph4">&lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugInCollection&gt;</ph> 새 추가 <ph id="ph5">&lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt;</ph> 컬렉션의 끝에 있습니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.DynamicRenderer">
          <source>This may change the behavior of the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">동작을 변경할 수 있습니다이 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.InkCanvas.EditingMode">
          <source>Gets or sets the user editing mode used by an active pointing device.</source>
          <target state="translated">활성 포인팅 장치에 사용되는 사용자 편집 모드를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.EditingMode">
          <source>The editing mode used when a pointing device (such as a tablet pen or mouse) is active.</source>
          <target state="translated">태블릿 펜이나 마우스 등의 포인팅 장치가 활성 상태일 때 사용되는 편집 모드입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.EditingMode">
          <source>The default <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph> is <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvasEditingMode.Ink&gt;</ph>.</source>
          <target state="translated">기본 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph>는 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvasEditingMode.Ink&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.EditingMode">
          <source>Changing the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph> clears any existing selections.</source>
          <target state="translated">변경 된 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph> 기존 선택 내용을 지웁니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.EditingMode">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph> specifies the mode of the pointing device as it interacts with the <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph> 와 상호 작용 하는 포인팅 장치가 모드를 지정 된 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.EditingMode">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A&gt;</ph> is used by some digitizers when the "eraser end" of the stylus contacts the digitizer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A&gt;</ph> "지우개 끝날" 스타일러스가 디지타이저를 연결한 경우에 일부 디지타이저에서 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.EditingMode">
          <source>Dependency Property Information</source>
          <target state="translated">종속성 속성 정보</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.EditingMode">
          <source>Identifier field</source>
          <target state="translated">식별자 필드</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.EditingMode">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">로 메타 데이터 속성 설정 <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.EditingMode">
          <source>None</source>
          <target state="translated">없음</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.EditingMode">
          <source>The following example creates an application that uses the various types of editing modes on an <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 다양 한 유형의에 편집 모드를 사용 하는 응용 프로그램 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="E:System.Windows.Controls.InkCanvas.EditingModeChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.EditingMode" /&gt;</ph> property of an <ph id="ph2">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph> object has been changed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.EditingMode" /&gt;</ph> 개체의 <ph id="ph2">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph> 속성이 변경되었을 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.EditingModeChanged">
          <source>This event occurs after the editing mode has been changed; the changes are reflected in the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">편집 모드가 변경 된 후에이 이벤트 발생 에 변경 내용이 반영 된 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph> 속성의는 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.EditingModeChanged">
          <source>Routed Event Information</source>
          <target state="translated">라우팅 이벤트 정보</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.EditingModeChanged">
          <source>Identifier field</source>
          <target state="translated">식별자 필드</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.EditingModeChanged">
          <source>Routing strategy</source>
          <target state="translated">라우팅 전략</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.EditingModeChanged">
          <source>Bubbling</source>
          <target state="translated">버블링</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.EditingModeChanged">
          <source>Delegate</source>
          <target state="translated">대리자</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.EditingModeChanged">
          <source>The following example checks whether the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvasEditingMode.Ink&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvasEditingMode.Select&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 검사 여부는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph> 속성이 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvasEditingMode.Ink&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvasEditingMode.Select&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.InkCanvas.EditingModeChangedEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Controls.InkCanvas.EditingModeChanged" /&gt;</ph> routed event.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="E:System.Windows.Controls.InkCanvas.EditingModeChanged" /&gt;</ph> 라우트된 이벤트를 식별합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.InkCanvas.EditingModeInverted">
          <source>Gets or sets the user editing mode if the stylus is inverted when it interacts with the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>와 상호 작용할 때 스타일러스가 반전된 경우 사용자 편집 모드를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.EditingModeInverted">
          <source>The inverted editing mode of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>의 반전 편집 모드입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.EditingModeInverted">
          <source>This property controls the actions that are performed when the stylus is inverted.</source>
          <target state="translated">이 속성 스타일러스가 반전 때 수행 하는 동작을 제어 합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.EditingModeInverted">
          <source>Similarly, the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph> property controls actions that are performed when the stylus is in a standard, tip-down position against the digitizer,</source>
          <target state="translated">마찬가지로,는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph> 스타일러스가 디지타이저에 대 한 표준, 끝 위치에 있는 때 수행 하는 동작을 제어 하는 속성</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.EditingModeInverted">
          <source>Dependency Property Information</source>
          <target state="translated">종속성 속성 정보</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.EditingModeInverted">
          <source>Identifier field</source>
          <target state="translated">식별자 필드</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.EditingModeInverted">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">로 메타 데이터 속성 설정 <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.EditingModeInverted">
          <source>None</source>
          <target state="translated">없음</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.EditingModeInverted">
          <source>The following example demonstrates how to allow a user to partially erase strokes with the inverted tip of a stylus.</source>
          <target state="translated">다음 예제에서는 사용자가 스타일러스 반전된 팁 선을 부분적으로 지울 수를 허용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.EditingModeInverted">
          <source>An elliptical cursor appears on the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> when the user erases ink.</source>
          <target state="translated">타원형 커서에 표시 된 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 사용자 잉크를 지울 때.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" /&gt;</ph> property of an <ph id="ph2">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph> object has been changed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" /&gt;</ph> 개체의 <ph id="ph2">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph> 속성이 변경되었을 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged">
          <source>This event occurs after the inverted editing mode has been changed.</source>
          <target state="translated">이 이벤트는 반전된 편집 모드가 변경 된 후 발생 합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged">
          <source>These changes are reflected in the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">이러한 변경 내용이 반영 된 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A&gt;</ph> 속성은 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged">
          <source>Routed Event Information</source>
          <target state="translated">라우팅 이벤트 정보</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged">
          <source>Identifier field</source>
          <target state="translated">식별자 필드</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged">
          <source>Routing strategy</source>
          <target state="translated">라우팅 전략</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged">
          <source>Bubbling</source>
          <target state="translated">버블링</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged">
          <source>Delegate</source>
          <target state="translated">대리자</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged">
          <source>The following example checks whether the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 검사 여부는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A&gt;</ph> 속성이 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.InkCanvas.EditingModeInvertedChangedEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" /&gt;</ph> routed event.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" /&gt;</ph> 라우트된 이벤트를 식별합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.InkCanvas.EditingModeInvertedProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" /&gt;</ph> dependency property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" /&gt;</ph> 종속성 속성을 식별합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.InkCanvas.EditingModeProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.EditingMode" /&gt;</ph> dependency property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.EditingMode" /&gt;</ph> 종속성 속성을 식별합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.InkCanvas.EraserShape">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StylusShape" /&gt;</ph> used to point-erase ink from an <ph id="ph2">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Ink.StylusShape" /&gt;</ph>에서 잉크를 지우는 데 사용되는 <ph id="ph2">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.EraserShape">
          <source>The eraser shape associated with the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>에 연결된 지우개 도형입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.EraserShape">
          <source>This shape will be used to erase ink from an <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> when the current <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph> is set to <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint&gt;</ph>.</source>
          <target state="translated">이 셰이프가에서 잉크를 지우는 데 사용 되는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 때 현재 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph> 로 설정 된 <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.EraserShape">
          <source>Individual properties of a <ph id="ph1">&lt;xref:System.Windows.Ink.StylusShape&gt;</ph> cannot be modified once the shape has been created.</source>
          <target state="translated">개별 속성은 <ph id="ph1">&lt;xref:System.Windows.Ink.StylusShape&gt;</ph> 셰이프를 만든 후에 수정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.EraserShape">
          <source>If you change the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EraserShape%2A&gt;</ph>, the cursor rendered on the <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> is not updated until the next <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph> change.</source>
          <target state="translated">변경 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EraserShape%2A&gt;</ph>에 렌더링 되는 커서는 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 다음 될 때까지 업데이트 되지 않습니다 <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph> 변경 합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.EraserShape">
          <source>XAML Text Usage</source>
          <target state="translated">XAML 텍스트 사용</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.EraserShape">
          <source>This property is not typically used in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">이 속성에 사용 되는 것은 일반적으로 <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.EraserShape">
          <source>The following example demonstrates how to allow a user to partially erase strokes with the inverted tip of a stylus.</source>
          <target state="translated">다음 예제에서는 사용자가 스타일러스 반전된 팁 선을 부분적으로 지울 수를 허용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.EraserShape">
          <source>An elliptical cursor appears on the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> when the user erases ink.</source>
          <target state="translated">타원형 커서에 표시 된 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 사용자 잉크를 지울 때.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="E:System.Windows.Controls.InkCanvas.Gesture">
          <source>Occurs when the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph> detects a gesture.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>에서 제스처가 감지될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.Gesture">
          <source>Routed Event Information</source>
          <target state="translated">라우팅 이벤트 정보</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.Gesture">
          <source>Identifier field</source>
          <target state="translated">식별자 필드</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.Gesture">
          <source>Routing strategy</source>
          <target state="translated">라우팅 전략</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.Gesture">
          <source>Bubbling</source>
          <target state="translated">버블링</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.Gesture">
          <source>Delegate</source>
          <target state="translated">대리자</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.Gesture">
          <source>The following example demonstrates how to set up an <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> to recognize application gestures.</source>
          <target state="translated">다음 예제를 설정 하는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 응용 프로그램 제스처를 인식 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.InkCanvas.GestureEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Controls.InkCanvas.Gesture" /&gt;</ph> routed event.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="E:System.Windows.Controls.InkCanvas.Gesture" /&gt;</ph> 라우트된 이벤트를 식별합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.GetBottom(System.Windows.UIElement)">
          <source>The element of which to get the bottom property.</source>
          <target state="translated">Bottom 속성을 가져올 요소입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.GetBottom(System.Windows.UIElement)">
          <source>Gets the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.Bottom" /&gt;</ph> attached property for a given dependency object.</source>
          <target state="translated">지정된 종속성 개체에 연결된 <ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.Bottom" /&gt;</ph> 속성 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.GetBottom(System.Windows.UIElement)">
          <source>The bottom coordinate of the dependency object.</source>
          <target state="translated">종속성 개체의 아래쪽 좌표입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.GetBottom(System.Windows.UIElement)">
          <source>The following example demonstrates how to get the position of a <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph>.</source>
          <target state="translated">다음 예제에서는의 위치를 가져올 수는 <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.GetEnabledGestures">
          <source>Returns a collection of application gestures that are recognized by <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>에서 인식되는 응용 프로그램 제스처의 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.GetEnabledGestures">
          <source>A collection of gestures that the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph> recognizes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>에서 인식되는 제스처의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.GetEnabledGestures">
          <source>The following example demonstrates how to get the enabled application gestures from the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">다음 예제에서 활성화 된 응용 프로그램 제스처를 가져오는 방법을 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.GetEnabledGestures">
          <source>The <ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" /&gt;</ph> 속성은 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.GetLeft(System.Windows.UIElement)">
          <source>The element of which to get the left property.</source>
          <target state="translated">Left 속성을 가져올 요소입니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.GetLeft(System.Windows.UIElement)">
          <source>Gets the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.Left" /&gt;</ph> attached property for a given dependency object.</source>
          <target state="translated">지정된 종속성 개체에 연결된 <ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.Left" /&gt;</ph> 속성 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.GetLeft(System.Windows.UIElement)">
          <source>The left coordinate of the dependency object.</source>
          <target state="translated">종속성 개체의 왼쪽 좌표입니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.GetLeft(System.Windows.UIElement)">
          <source>The following example demonstrates how to get the position of a <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph>.</source>
          <target state="translated">다음 예제에서는의 위치를 가져올 수는 <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.GetRight(System.Windows.UIElement)">
          <source>The element of which to get the right property.</source>
          <target state="translated">Right 속성을 가져올 요소입니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.GetRight(System.Windows.UIElement)">
          <source>Gets the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.Right" /&gt;</ph> attached property for a given dependency object.</source>
          <target state="translated">지정된 종속성 개체에 연결된 <ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.Right" /&gt;</ph> 속성 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.GetRight(System.Windows.UIElement)">
          <source>The right coordinate of the dependency object.</source>
          <target state="translated">종속성 개체의 오른쪽 좌표입니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.GetRight(System.Windows.UIElement)">
          <source>The following example demonstrates how to get the position of a <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph>.</source>
          <target state="translated">다음 예제에서는의 위치를 가져올 수는 <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.GetSelectedElements">
          <source>Retrieves the <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> objects that are selected in the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph>에서 선택된 <ph id="ph2">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph> 개체를 검색합니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.GetSelectedElements">
          <source>Array of <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.GetSelectedElements">
          <source>This method returns only <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> objects, not <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> objects.</source>
          <target state="translated">이 메서드는만 반환 <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> 개체가 아닌 <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.GetSelectedElements">
          <source>To retrieve selected <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> objects, call the <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas.GetSelectedStrokes%2A&gt;</ph> method.</source>
          <target state="translated">검색 하려면 선택 <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> 개체를 호출 하는 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas.GetSelectedStrokes%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.GetSelectedElements">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph> of <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> is set to <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph>, users can select <ph id="ph4">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> objects and <ph id="ph5">&lt;xref:System.Windows.FrameworkElement&gt;</ph> objects.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph> 의 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 로 설정 된 <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph>, 사용자가 선택할 수 <ph id="ph4">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> 개체 및 <ph id="ph5">&lt;xref:System.Windows.FrameworkElement&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.GetSelectedElements">
          <source>Alternatively, both types of objects can be selected using code:  just call the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.Select%2A&gt;</ph> method.</source>
          <target state="translated">코드를 사용 하 여 두 가지 유형의 개체 수 선택 또는: 호출 된 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.Select%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.GetSelectedElements">
          <source>The following example doubles the height and width of each selected element on an <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 선택 된 각 요소의 너비와 높이 두 배로 증가에 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes">
          <source>Retrieves a <ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph> that represents selected <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> objects on the <ph id="ph3">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Ink.StrokeCollection" /&gt;</ph>에서 선택된 <ph id="ph2">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> 개체를 나타내는 <ph id="ph3">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>을 검색합니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes">
          <source>The collection of selected strokes.</source>
          <target state="translated">선택된 스트로크의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes">
          <source>This method returns <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> objects, only.</source>
          <target state="translated">이 메서드가 반환 <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> 만 개체입니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes">
          <source>To retrieve selected <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> objects, call the <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas.GetSelectedElements%2A&gt;</ph> method.</source>
          <target state="translated">검색 하려면 선택 <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> 개체를 호출 하는 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas.GetSelectedElements%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph> of <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> is set to <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph>, users can select <ph id="ph4">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> objects and <ph id="ph5">&lt;xref:System.Windows.FrameworkElement&gt;</ph> objects.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph> 의 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 로 설정 된 <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph>, 사용자가 선택할 수 <ph id="ph4">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> 개체 및 <ph id="ph5">&lt;xref:System.Windows.FrameworkElement&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes">
          <source>Alternatively, both types of objects can be selected using code: just call the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.Select%2A&gt;</ph> method.</source>
          <target state="translated">코드를 사용 하 여 두 가지 유형의 개체 수 선택 또는: 호출 된 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.Select%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes">
          <source>The following example changes the color of each selected stroke on an <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">선택한 각 선의 색을 변경 하는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.GetSelectionBounds">
          <source>Gets the bounds of the selected strokes and elements on the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>에서 선택된 스트로크 및 요소의 경계를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.GetSelectionBounds">
          <source>The smallest rectangle that encompasses all selected strokes and elements.</source>
          <target state="translated">선택된 모든 스트로크 및 요소를 둘러싸는 가장 작은 사각형입니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.GetSelectionBounds">
          <source>The following example prevents the user from making a selection smaller than its original size.</source>
          <target state="translated">다음 예제에서는 선택 원래 크기 보다 작게 하에서 사용자 수 없습니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.GetTop(System.Windows.UIElement)">
          <source>The element of which to get the top property.</source>
          <target state="translated">Top 속성을 가져올 요소입니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.GetTop(System.Windows.UIElement)">
          <source>Gets the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.Top" /&gt;</ph> attached property for a given dependency object.</source>
          <target state="translated">지정된 종속성 개체에 연결된 <ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.Top" /&gt;</ph> 속성 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.GetTop(System.Windows.UIElement)">
          <source>The top coordinate of the dependency object.</source>
          <target state="translated">종속성 개체의 위쪽 좌표입니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.GetTop(System.Windows.UIElement)">
          <source>The following example demonstrates how to get the position of a <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph>.</source>
          <target state="translated">다음 예제에서는의 위치를 가져올 수는 <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.GetVisualChild(System.Int32)">
          <source>The zero-based index of the requested child element in the collection.</source>
          <target state="translated">컬렉션에서 요청된 자식 요소의 인덱스(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.GetVisualChild(System.Int32)">
          <source>Overrides <ph id="ph1">&lt;see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" /&gt;</ph>, and returns a child at the specified index from a collection of child elements.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" /&gt;</ph>를 재정의하고 자식 요소 컬렉션에서 지정한 인덱스에 있는 자식을 반환합니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.GetVisualChild(System.Int32)">
          <source>The requested child element.</source>
          <target state="translated">요청된 자식 요소입니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.GetVisualChild(System.Int32)">
          <source>This should not return <ph id="ph1">&lt;see langword="null" /&gt;</ph>; if the provided index is out of range, an exception is thrown.</source>
          <target state="translated">여기서는 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이 반환되어서는 안 됩니다. 제공된 인덱스가 범위를 벗어나면 예외가 throw됩니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.HitTestCore(System.Windows.Media.PointHitTestParameters)">
          <source>An object that specifies the <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> to hit test against.</source>
          <target state="translated">적중 테스트를 수행할 대상 <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph>를 지정하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.HitTestCore(System.Windows.Media.PointHitTestParameters)">
          <source>Determines whether a given point falls within the rendering bounds of an <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>.</source>
          <target state="translated">지정된 지점이 <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>의 렌더링 경계 내에 있는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.HitTestCore(System.Windows.Media.PointHitTestParameters)">
          <source>An object that represents the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> that is returned from a hit test.</source>
          <target state="translated">적중 테스트에서 반환되는 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.HitTestSelection(System.Windows.Point)">
          <source>The point to hit test.</source>
          <target state="translated">적중 테스트를 수행할 점입니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.HitTestSelection(System.Windows.Point)">
          <source>Returns a value that indicates which part of the selection adorner intersects or surrounds the specified point.</source>
          <target state="translated">선택 표시기에서 지정된 지점과 교차하거나 이 점을 둘러싸는 부분을 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.HitTestSelection(System.Windows.Point)">
          <source>A value that indicates which part of the selection adorner intersects or surrounds a specified point.</source>
          <target state="translated">선택 표시기에서 지정된 지점과 교차하거나 이 점을 둘러싸는 부분을 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.HitTestSelection(System.Windows.Point)">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.HitTestSelection%2A&gt;</ph> method to determine whether the point is within a stroke selection's bounds or on one of the eight handles.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.HitTestSelection%2A&gt;</ph> 점은 스트로크 선택 항목의 범위 내 또는 8 개 핸들 중 하나에 있는지 여부를 확인 하려면 메서드.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.HitTestSelection(System.Windows.Point)">
          <source>This is useful when performing drag and drop operations.</source>
          <target state="translated">끌어서 놓기 작업을 수행 하는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.HitTestSelection(System.Windows.Point)">
          <source>The following example demonstrates how use <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.HitTestSelection%2A&gt;</ph> to determine whether to create a <ph id="ph2">&lt;xref:System.Windows.DataObject&gt;</ph> to initiate drag and drop.</source>
          <target state="translated">다음 예제에서는 사용 하는 방법을 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.HitTestSelection%2A&gt;</ph> 를 만들지 여부를 결정 하는 <ph id="ph2">&lt;xref:System.Windows.DataObject&gt;</ph> 시작 끌어서 놓습니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.HitTestSelection(System.Windows.Point)">
          <source>To implement drag and drop between two <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> objects, see <bpt id="p1">[</bpt>How to: Drag and Drop Ink<ept id="p1">](~/docs/framework/wpf/advanced/how-to-drag-and-drop-ink.md)</ept>.</source>
          <target state="translated">끌어서를 구현 하 여 두 놓을 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 개체 참조 <bpt id="p1">[</bpt>하는 방법: 끌어서 놓기 잉크<ept id="p1">](~/docs/framework/wpf/advanced/how-to-drag-and-drop-ink.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.InkCanvas.InkPresenter">
          <source>Gets the ink presenter that displays ink on the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>에 잉크를 표시하는 잉크 프리젠터를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.InkPresenter">
          <source>The ink presenter that displays ink on the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>에 잉크를 표시하는 잉크 프리젠터입니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable">
          <source>Gets (determines) whether the gesture recognition component is available on the user's system.</source>
          <target state="translated">사용자의 시스템에서 제스처 인식 구성 요소를 사용할 수 있는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the recognition component is available; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">인식 구성 요소를 사용할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable">
          <source>The following example demonstrates how to configure an <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> to recognize application gestures.</source>
          <target state="translated">다음 예제에서는 구성 하는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 응용 프로그램 제스처를 인식 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.InkCanvas.LeftProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.Left" /&gt;</ph> attached property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.Left" /&gt;</ph> 연결된 속성을 식별합니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.InkCanvas.LogicalChildren">
          <source>Returns enumerator to logical children.</source>
          <target state="translated">논리적 자식에 대한 열거자를 반환합니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.MeasureOverride(System.Windows.Size)">
          <source>The available size that this element can give to child elements.</source>
          <target state="translated">이 요소가 자식 요소에 제공할 수 있는 사용 가능한 크기입니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.MeasureOverride(System.Windows.Size)">
          <source>Infinity can be specified as a value to indicate that the element will size to whatever content is available.</source>
          <target state="translated">값으로 무한대를 지정하면 사용할 수 있는 콘텐츠에 따라 요소 크기가 지정됩니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.MeasureOverride(System.Windows.Size)">
          <source>Measures the size in layout required for child elements and determines a size for the <ph id="ph1">&lt;see cref="System.Windows.Controls.InkCanvas" /&gt;</ph> object.</source>
          <target state="translated">자식 요소에 필요한 레이아웃의 크기를 측정하고 <ph id="ph1">&lt;see cref="System.Windows.Controls.InkCanvas" /&gt;</ph> 개체의 크기를 결정합니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.MeasureOverride(System.Windows.Size)">
          <source>The size that this element determines it needs during layout, based on its calculations of child element sizes.</source>
          <target state="translated">이 요소에서 자식 요소 크기 계산에 따라 레이아웃 중에 필요하다고 결정하는 크기입니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.InkCanvas.MoveEnabled">
          <source>Gets or sets a Boolean value which indicates whether the user is enabled to move selected ink strokes and/or elements on the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>.</source>
          <target state="translated">사용자가 <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>에서 선택한 잉크 스트로크 및/또는 요소를 이동할 수 있는지 여부를 나타내는 부울 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.MoveEnabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a user can move strokes and/or elements on the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">사용자가 <ph id="ph2">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>의 스트로크 및/또는 요소를 이동할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.MoveEnabled">
          <source>If this property is set to <ph id="ph1">`true`</ph>, an adorner border is drawn around ink strokes and/or elements when they are selected.</source>
          <target state="translated">이 속성은로 설정 하는 경우 <ph id="ph1">`true`</ph>를 선택할 때 잉크 스트로크 및/또는 요소 주위 표시기 테두리가 그려집니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.MoveEnabled">
          <source>This border enables the user to move the selected objects.</source>
          <target state="translated">이 테두리 선택한 개체를 이동할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.MoveEnabled">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.ResizeEnabled%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the adorner enables the user to resize the strokes and/or elements as well.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.ResizeEnabled%2A&gt;</ph> 은 <ph id="ph2">`true`</ph>, 표시기를 스트로크 및/또는 요소 크기를 조정 하려면 사용 합니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.MoveEnabled">
          <source>If this property is set to <ph id="ph1">`false`</ph> while one or more ink strokes and/or elements are selected, the adorner border will be automatically removed from the selected objects.</source>
          <target state="translated">이 속성은로 설정 하는 경우 <ph id="ph1">`false`</ph> 잉크 스트로크 또는 요소의 선택 된 상태에서 표시기 테두리 자동으로 제거 됩니다 선택 된 개체에서 합니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.MoveEnabled">
          <source>The following example prevents a user from moving and resizing the elements and strokes on a <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 사용자가 이동 하 고 요소 크기 조정 되지 않으며 스트로크를 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.OnActiveEditingModeChanged(System.Windows.RoutedEventArgs)">
          <source>The event data.</source>
          <target state="translated">이벤트 데이터입니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.OnActiveEditingModeChanged(System.Windows.RoutedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.OnCreateAutomationPeer">
          <source>Provides an appropriate <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer" /&gt;</ph> implementation for this control, as part of the <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> infrastructure.</source>
          <target state="translated"><ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> 인프라의 일부로 이 컨트롤에 대한 적절한 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer" /&gt;</ph> 구현을 제공합니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.OnDefaultDrawingAttributesReplaced(System.Windows.Ink.DrawingAttributesReplacedEventArgs)">
          <source>The event data.</source>
          <target state="translated">이벤트 데이터입니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.OnDefaultDrawingAttributesReplaced(System.Windows.Ink.DrawingAttributesReplacedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.OnEditingModeChanged(System.Windows.RoutedEventArgs)">
          <source>The event data.</source>
          <target state="translated">이벤트 데이터입니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.OnEditingModeChanged(System.Windows.RoutedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Controls.InkCanvas.EditingModeChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Controls.InkCanvas.EditingModeChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.OnEditingModeChanged(System.Windows.RoutedEventArgs)">
          <source>This event occurs after the editing mode has been changed; the changes are reflected in the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">편집 모드가 변경 된 후에이 이벤트 발생 에 변경 내용이 반영 된 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph> 속성의는 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.OnEditingModeInvertedChanged(System.Windows.RoutedEventArgs)">
          <source>The event data.</source>
          <target state="translated">이벤트 데이터입니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.OnEditingModeInvertedChanged(System.Windows.RoutedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.OnEditingModeInvertedChanged(System.Windows.RoutedEventArgs)">
          <source>This event occurs after the inverted editing mode has been changed; the changes reflected in the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">반전 된 편집 모드가 변경 된 후이 이벤트 발생 에 반영 된 변경의 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.OnGesture(System.Windows.Controls.InkCanvasGestureEventArgs)">
          <source>The event data.</source>
          <target state="translated">이벤트 데이터입니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.OnGesture(System.Windows.Controls.InkCanvasGestureEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Controls.InkCanvas.Gesture" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Controls.InkCanvas.Gesture" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <source>The event data that describes the property that changed, as well as old and new values.</source>
          <target state="translated">기존 값과 새 값 그리고 변경된 속성을 설명하는 이벤트 데이터입니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <source>Invoked whenever the effective value of any dependency property on this <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> has been updated.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph>에서 종속성 속성의 유효 값이 업데이트될 때마다 호출됩니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <source>The specific dependency property that changed is reported in the arguments parameter.</source>
          <target state="translated">변경된 특정 종속성 속성이 인수 매개 변수에서 보고됩니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <source>Overrides <ph id="ph1">&lt;see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" /&gt;</ph>를 재정의합니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.OnSelectionChanged(System.EventArgs)">
          <source>The event data.</source>
          <target state="translated">이벤트 데이터입니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.OnSelectionChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Controls.InkCanvas.SelectionChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Controls.InkCanvas.SelectionChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.OnSelectionChanged(System.EventArgs)">
          <source>This method is called after a set of ink strokes and/or elements has been selected by the user and the selection change has been applied.</source>
          <target state="translated">이 메서드는 사용자가 잉크 스트로크 및/또는 요소 집합을 선택한 후 선택 영역 변경 내용이 적용 된 후 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.OnSelectionChanged(System.EventArgs)">
          <source>Before the change is applied, the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.OnSelectionChanging%2A&gt;</ph> method is called.</source>
          <target state="translated">변경 내용이 적용 되기 전에 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.OnSelectionChanging%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.OnSelectionChanging(System.Windows.Controls.InkCanvasSelectionChangingEventArgs)">
          <source>The event data.</source>
          <target state="translated">이벤트 데이터입니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.OnSelectionChanging(System.Windows.Controls.InkCanvasSelectionChangingEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Controls.InkCanvas.SelectionChanging" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Controls.InkCanvas.SelectionChanging" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.OnSelectionChanging(System.Windows.Controls.InkCanvasSelectionChangingEventArgs)">
          <source>This method is called when a new selection of strokes and/or elements is made by the user, but before the change is applied.</source>
          <target state="translated">이 메서드는 변경 내용이 적용 되기 전에 하지만 사용자가 스트로크 및/또는 요소는 새 선택을 만들어질 때 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.OnSelectionChanging(System.Windows.Controls.InkCanvasSelectionChangingEventArgs)">
          <source>After the change has been applied, the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.OnSelectionChanged%2A&gt;</ph> method is called.</source>
          <target state="translated">변경 내용을 적용 된 후의 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.OnSelectionChanged%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.OnSelectionMoved(System.EventArgs)">
          <source>Not used.</source>
          <target state="translated">사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.OnSelectionMoved(System.EventArgs)">
          <source>An event announcing that the user selected and moved a selection of strokes and/or elements.</source>
          <target state="translated">사용자가 스트로크 및/또는 요소를 선택하고 선택 영역을 이동했음을 알리는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.OnSelectionMoved(System.EventArgs)">
          <source>This method is called after a selection of strokes and/or elements has been moved by the user and the change has been applied.</source>
          <target state="translated">이 메서드는 사용자가 스트로크 및/또는 요소 선택 이동 하 고는 변경 내용이 적용 된 후 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.OnSelectionMoved(System.EventArgs)">
          <source>Before the change is applied, the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.OnSelectionMoving%2A&gt;</ph> method is called.</source>
          <target state="translated">변경 내용이 적용 되기 전에 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.OnSelectionMoving%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.OnSelectionMoving(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)">
          <source>The event data.</source>
          <target state="translated">이벤트 데이터입니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.OnSelectionMoving(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Controls.InkCanvas.SelectionMoving" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Controls.InkCanvas.SelectionMoving" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.OnSelectionMoving(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)">
          <source>This method is called after the user requests that a selection of strokes and/or elements be moved and before the change is applied.</source>
          <target state="translated">이 메서드는 사용자가 스트로크 및/또는 요소는 선택 항목을 이동할 수 있는 요청 후 하 고 변경 내용이 적용 되기 전에 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.OnSelectionMoving(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)">
          <source>After the change is applied, the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.OnSelectionMoved%2A&gt;</ph> method is called.</source>
          <target state="translated">변경이 적용 되는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.OnSelectionMoved%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.OnSelectionResized(System.EventArgs)">
          <source>The event data.</source>
          <target state="translated">이벤트 데이터입니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.OnSelectionResized(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Controls.InkCanvas.SelectionResized" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Controls.InkCanvas.SelectionResized" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.OnSelectionResized(System.EventArgs)">
          <source>This method is called after a selection of strokes and/or elements has been resized by the user and the change has been applied.</source>
          <target state="translated">이 메서드는 사용자가 스트로크 및/또는 요소는 선택 항목의 크기가 조정 하 고는 변경 내용이 적용 된 후 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.OnSelectionResized(System.EventArgs)">
          <source>Before the change is applied, the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.OnSelectionResizing%2A&gt;</ph> method is called.</source>
          <target state="translated">변경 내용이 적용 되기 전에 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.OnSelectionResizing%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.OnSelectionResizing(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)">
          <source>The event data.</source>
          <target state="translated">이벤트 데이터입니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.OnSelectionResizing(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Controls.InkCanvas.SelectionResizing" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Controls.InkCanvas.SelectionResizing" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.OnSelectionResizing(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)">
          <source>This method is called after the user requests a selection of strokes and/or elements be resized and before the change is applied.</source>
          <target state="translated">이 메서드는 사용자가 선택한 스트로크 및/또는 요소 크기를 조정할 수 요청 후 하 고 변경 내용이 적용 되기 전에 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.OnSelectionResizing(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)">
          <source>After the change is applied, the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.OnSelectionResized%2A&gt;</ph> method will be called.</source>
          <target state="translated">변경이 적용 되는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.OnSelectionResized%2A&gt;</ph> 메서드가 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.OnStrokeCollected(System.Windows.Controls.InkCanvasStrokeCollectedEventArgs)">
          <source>The event data.</source>
          <target state="translated">이벤트 데이터입니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.OnStrokeCollected(System.Windows.Controls.InkCanvasStrokeCollectedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.OnStrokeCollected(System.Windows.Controls.InkCanvasStrokeCollectedEventArgs)">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.OnStrokeCollected%2A&gt;</ph> is called when a user physically completes a stroke, for example, by raising the stylus from a tablet after making a motion.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.OnStrokeCollected%2A&gt;</ph> 사용자 물리적으로 완료 되는 선 예를 들어 움직인 후 스타일러스를 태블릿에서 발생 시켜 때 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.OnStrokeCollected(System.Windows.Controls.InkCanvasStrokeCollectedEventArgs)">
          <source>A programmatic addition of strokes to the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.Strokes%2A&gt;</ph> collection will not call the <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas.OnStrokeCollected%2A&gt;</ph> method.</source>
          <target state="translated">스트로크를 프로그래밍 방식으로 추가 된 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.Strokes%2A&gt;</ph> 컬렉션 호출 하지 것입니다는 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas.OnStrokeCollected%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.OnStrokeErased(System.Windows.RoutedEventArgs)">
          <source>The event data.</source>
          <target state="translated">이벤트 데이터입니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.OnStrokeErased(System.Windows.RoutedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Controls.InkCanvas.StrokeErased" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Controls.InkCanvas.StrokeErased" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.OnStrokeErasing(System.Windows.Controls.InkCanvasStrokeErasingEventArgs)">
          <source>The event data.</source>
          <target state="translated">이벤트 데이터입니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.OnStrokeErasing(System.Windows.Controls.InkCanvasStrokeErasingEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Controls.InkCanvas.StrokeErasing" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Controls.InkCanvas.StrokeErasing" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.OnStrokesReplaced(System.Windows.Controls.InkCanvasStrokesReplacedEventArgs)">
          <source>The event data.</source>
          <target state="translated">이벤트 데이터입니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.OnStrokesReplaced(System.Windows.Controls.InkCanvasStrokesReplacedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Controls.InkCanvas.StrokesReplaced" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Controls.InkCanvas.StrokesReplaced" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="T:System.Windows.Controls.InkCanvas">
          <source>Pastes the contents of the Clipboard to the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>.</source>
          <target state="translated">클립보드의 내용을 <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>에 붙여 넣습니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.InkCanvas">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> can support Clipboard data in <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> format, <ph id="ph3">[!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]</ph>, and text format.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 클립보드 데이터를 지원할 수 <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> 형식으로 <ph id="ph3">[!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]</ph>, 및 텍스트 형식입니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.Paste">
          <source>Pastes the contents of the Clipboard to the top-left corner of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>.</source>
          <target state="translated">클립보드의 내용을 <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>의 왼쪽 위 모퉁이에 붙여 넣습니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.Paste">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> can support Clipboard data in <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> format, <ph id="ph3">[!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]</ph>, and text format.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 클립보드 데이터를 지원할 수 <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> 형식으로 <ph id="ph3">[!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]</ph>, 및 텍스트 형식입니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.Paste">
          <source>The following example copies an element to the Clipboard and pastes it to the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 클립보드에 요소를 복사 하 고을 붙여는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.Paste">
          <source>This example assumes that there is an element called <ph id="ph1">`rect1`</ph>, and that the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> events have been connected to the event handlers in the example.</source>
          <target state="translated">이 예에서는 라는 요소가 있다고 가정 <ph id="ph1">`rect1`</ph>, 있고는 <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> 예제의 이벤트 처리기에 연결 된 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.Paste">
          <source>for pasting content from the Clipboard to the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>.</source>
          <target state="translated">클립보드의 내용을 <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.Paste">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /&gt;</ph>.</source>
          <target state="translated">연관된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.Paste(System.Windows.Point)">
          <source>The point at which to paste the strokes.</source>
          <target state="translated">스트로크를 붙여 넣을 지점입니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.Paste(System.Windows.Point)">
          <source>Pastes the contents of the Clipboard to the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph> at a given point.</source>
          <target state="translated">클립보드의 내용을 <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>의 지정된 지점에 붙여 넣습니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.Paste(System.Windows.Point)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> can support Clipboard data in <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> format, <ph id="ph3">[!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]</ph>, and text format.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 클립보드 데이터를 지원할 수 <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> 형식으로 <ph id="ph3">[!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]</ph>, 및 텍스트 형식입니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.Paste(System.Windows.Point)">
          <source>The following example copies an element to the Clipboard and pastes it to the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 클립보드에 요소를 복사 하 고을 붙여는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.Paste(System.Windows.Point)">
          <source>This example assumes that there is an element called <ph id="ph1">`rect1`</ph>, and that the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> events are connected to the event handlers in the example.</source>
          <target state="translated">이 예에서는 라는 요소가 있다고 가정 <ph id="ph1">`rect1`</ph>, 있고는 <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> 이벤트가 예제의 이벤트 처리기에 연결 합니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.Paste(System.Windows.Point)">
          <source>Permission to paste content from the Clipboard to the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>.</source>
          <target state="translated">클립보드의 내용을 <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.Paste(System.Windows.Point)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /&gt;</ph>.</source>
          <target state="translated">연관된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.InkCanvas.PreferredPasteFormats">
          <source>Gets or sets formats that can be pasted onto the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>에 붙여 넣을 수 있는 서식을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.PreferredPasteFormats">
          <source>A collection of enumeration values.</source>
          <target state="translated">열거형 값의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.PreferredPasteFormats">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Controls.InkCanvasClipboardFormat.InkSerializedFormat" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Windows.Controls.InkCanvasClipboardFormat.InkSerializedFormat" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.PreferredPasteFormats">
          <source>XAML Property Element Usage</source>
          <target state="translated">XAML 속성 요소 사용</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.PreferredPasteFormats">
          <source>XAML Values</source>
          <target state="translated">XAML 값</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.PreferredPasteFormats">
          <source><bpt id="p1">*</bpt>InkCanvasClipboardFormats<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>InkCanvasClipboardFormats<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.PreferredPasteFormats">
          <source>An array of <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvasClipboardFormat&gt;</ph> enumeration values.</source>
          <target state="translated">배열 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvasClipboardFormat&gt;</ph> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.PreferredPasteFormats">
          <source>Specifying an array in XAML requires <ph id="ph1">`x:Array`</ph> usage.</source>
          <target state="translated">XAML의 배열을 지정 하려면 <ph id="ph1">`x:Array`</ph> 사용 합니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.PreferredPasteFormats">
          <source>Specifying an enumeration value as an element that declares an array member requires <ph id="ph1">`x:Static`</ph> usage.</source>
          <target state="translated">배열 멤버를 선언 하는 요소로 열거형 값을 지정 하려면 <ph id="ph1">`x:Static`</ph> 사용 합니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.PreferredPasteFormats">
          <source>For more information, see <bpt id="p1">[</bpt>x:Array Markup Extension<ept id="p1">](~/docs/framework/xaml-services/x-array-markup-extension.md)</ept> and <bpt id="p2">[</bpt>x:Static Markup Extension<ept id="p2">](~/docs/framework/xaml-services/x-static-markup-extension.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>X:array 태그 확장<ept id="p1">](~/docs/framework/xaml-services/x-array-markup-extension.md)</ept> 및 <bpt id="p2">[</bpt>X:static 태그 확장<ept id="p2">](~/docs/framework/xaml-services/x-static-markup-extension.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.PreferredPasteFormats">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.PreferredPasteFormats%2A&gt;</ph> to make the <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> accept <ph id="ph3">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> format, <ph id="ph4">[!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]</ph>.</source>
          <target state="translated">다음 예에서는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.PreferredPasteFormats%2A&gt;</ph> 있도록는 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 수락 <ph id="ph3">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> 형식으로 <ph id="ph4">[!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.PreferredPasteFormats">
          <source>The following example accomplishes the same thing in <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">다음 예제에서 동일한 결과 얻을 <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.InkCanvas.ResizeEnabled">
          <source>Gets or sets a Boolean value that indicates whether the user can resize selected ink strokes and/or elements on the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>.</source>
          <target state="translated">사용자가 <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>에서 선택한 잉크 스트로크 및/또는 요소의 크기를 조정할 수 있는지 여부를 나타내는 부울 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.ResizeEnabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a user can resize strokes and/or elements on the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">사용자가 <ph id="ph2">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>의 스트로크 및/또는 요소의 크기를 조정할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.ResizeEnabled">
          <source>If this property is set to <ph id="ph1">`true`</ph>, an adorner border is drawn around ink strokes and/or elements when they are selected.</source>
          <target state="translated">이 속성은로 설정 하는 경우 <ph id="ph1">`true`</ph>를 선택할 때 잉크 스트로크 및/또는 요소 주위 표시기 테두리가 그려집니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.ResizeEnabled">
          <source>This border enables the user to resize the selected objects.</source>
          <target state="translated">이 테두리에 선택 된 개체 크기를 조정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.ResizeEnabled">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.MoveEnabled%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the adorner enables the user to move the strokes and/or elements as well.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.MoveEnabled%2A&gt;</ph> 은 <ph id="ph2">`true`</ph>, 표시기 스트로크 및/또는 요소를 이동할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.ResizeEnabled">
          <source>If this property is set to <ph id="ph1">`false`</ph> while one or more ink strokes and/or elements are selected, the adorner border is automatically removed from the selected objects.</source>
          <target state="translated">이 속성은로 설정 하는 경우 <ph id="ph1">`false`</ph> 표시기 테두리가 하나 이상의 잉크 스트로크 및/또는 요소를 선택 하는 동안 선택 된 개체에서 자동으로 제거 됩니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.ResizeEnabled">
          <source>The following example prevents a user from moving and resizing the elements and strokes on a <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 사용자가 이동 하 고 요소 크기 조정 되지 않으며 스트로크를 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.InkCanvas.RightProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.Right" /&gt;</ph> attached propertyy.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.Right" /&gt;</ph> 연결된 속성을 식별합니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="T:System.Windows.Controls.InkCanvas">
          <source>Selects a set of ink <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> objects and/or <ph id="ph2">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> objects.</source>
          <target state="translated">잉크 <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> 개체 및/또는 <ph id="ph2">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> 개체의 집합을 선택합니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.InkCanvas">
          <source>An <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> can contain <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> objects, which are created in response to user stylus input, and <ph id="ph3">&lt;xref:System.Windows.FrameworkElement&gt;</ph> objects, such as <ph id="ph4">&lt;xref:System.Windows.Controls.Image&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Controls.Button&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 포함 될 수 있습니다 <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> 사용자 스타일러스 입력에 대 한 응답으로 생성 되는 개체 및 <ph id="ph3">&lt;xref:System.Windows.FrameworkElement&gt;</ph> 와 같은 개체 <ph id="ph4">&lt;xref:System.Windows.Controls.Image&gt;</ph> 및 <ph id="ph5">&lt;xref:System.Windows.Controls.Button&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.InkCanvas">
          <source>Selected strokes will be displayed with an adorner around them for ease of recognition and manipulation.</source>
          <target state="translated">선택한 스트로크 주위에 알아보기 인식 및 조작 하기 표시기가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.InkCanvas">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> objects will not display differently when selected.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> 개체 선택 다르게 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.Select(System.Collections.Generic.IEnumerable{System.Windows.UIElement})">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> objects to select.</source>
          <target state="translated">선택할 <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> 개체의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.Select(System.Collections.Generic.IEnumerable{System.Windows.UIElement})">
          <source>Selects a set of <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> 개체 집합을 선택합니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.Select(System.Collections.Generic.IEnumerable{System.Windows.UIElement})">
          <source>An <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> can contain <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> objects, which are created in response to user stylus input and <ph id="ph3">&lt;xref:System.Windows.UIElement&gt;</ph> objects, such as <ph id="ph4">&lt;xref:System.Windows.Controls.Image&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Controls.Button&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 포함 될 수 있습니다 <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> 사용자 스타일러스 입력에 대 한 응답으로 생성 되는 개체 및 <ph id="ph3">&lt;xref:System.Windows.UIElement&gt;</ph> 와 같은 개체 <ph id="ph4">&lt;xref:System.Windows.Controls.Image&gt;</ph> 및 <ph id="ph5">&lt;xref:System.Windows.Controls.Button&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.Select(System.Collections.Generic.IEnumerable{System.Windows.UIElement})">
          <source>Selected strokes are displayed with an adorner around them for ease of recognition and manipulation.</source>
          <target state="translated">선택한 스트로크 인식 및 조작 하기 쉽도록 주위 표시기 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.Select(System.Collections.Generic.IEnumerable{System.Windows.UIElement})">
          <source><ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> objects will not display differently when selected.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> 개체 선택 다르게 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.Select(System.Collections.Generic.IEnumerable{System.Windows.UIElement})">
          <source>If a <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> in <ph id="ph2">`selectedElements`</ph> is not in the Children collection, <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvas.Select%2A&gt;</ph> ignores the <ph id="ph4">&lt;xref:System.Windows.UIElement&gt;</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> 에 <ph id="ph2">`selectedElements`</ph> 자식 컬렉션에 없는 <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvas.Select%2A&gt;</ph> 무시는 <ph id="ph4">&lt;xref:System.Windows.UIElement&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.Select(System.Collections.Generic.IEnumerable{System.Windows.UIElement})">
          <source>The following example selects all the strokes and two elements on an <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">다음 예에서는 select 모든 스트로크 및 두 개의 요소에는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.Select(System.Collections.Generic.IEnumerable{System.Windows.UIElement})">
          <source>This example assumes that there is a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> called <ph id="ph2">`textbox1`</ph> and a <ph id="ph3">&lt;xref:System.Windows.Controls.Button&gt;</ph> called <ph id="ph4">`button1`</ph> - and that both controls are child elements of the <ph id="ph5">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">이 예에서는 라고 가정는 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 호출 <ph id="ph2">`textbox1`</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Controls.Button&gt;</ph> 호출 <ph id="ph4">`button1`</ph> -있고 두 컨트롤은 자식 요소는 <ph id="ph5">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection)">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> objects to select.</source>
          <target state="translated">선택할 <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> 개체의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection)">
          <source>Selects a set of ink <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> objects.</source>
          <target state="translated">잉크 <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> 개체 집합을 선택합니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection)">
          <source>An <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> can contain <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> objects, which are created in response to user stylus input, and <ph id="ph3">&lt;xref:System.Windows.FrameworkElement&gt;</ph> objects, such as <ph id="ph4">&lt;xref:System.Windows.Controls.Image&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Controls.Button&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 포함 될 수 있습니다 <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> 사용자 스타일러스 입력에 대 한 응답으로 생성 되는 개체 및 <ph id="ph3">&lt;xref:System.Windows.FrameworkElement&gt;</ph> 와 같은 개체 <ph id="ph4">&lt;xref:System.Windows.Controls.Image&gt;</ph> 및 <ph id="ph5">&lt;xref:System.Windows.Controls.Button&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection)">
          <source>Selected strokes are displayed with an adorner around them for ease of recognition and manipulation.</source>
          <target state="translated">선택한 스트로크 인식 및 조작 하기 쉽도록 주위 표시기 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection)">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> objects do not display differently when selected.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> 개체 선택 다르게 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection)">
          <source>The following example selects all the strokes and two elements on an <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">다음 예에서는 select 모든 스트로크 및 두 개의 요소에는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection)">
          <source>This example assumes that there is a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> called <ph id="ph2">`textbox1`</ph> and a <ph id="ph3">&lt;xref:System.Windows.Controls.Button&gt;</ph> called <ph id="ph4">`button1`</ph> - and that both controls are child elements of the <ph id="ph5">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">이 예에서는 라고 가정는 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 호출 <ph id="ph2">`textbox1`</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Controls.Button&gt;</ph> 호출 <ph id="ph4">`button1`</ph> -있고 두 컨트롤은 자식 요소는 <ph id="ph5">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection)">
          <source>One or more strokes in <ph id="ph1">&lt;paramref name="selectedStrokes" /&gt;</ph> is not in the <ph id="ph2">&lt;see cref="P:System.Windows.Controls.InkCanvas.Strokes" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="selectedStrokes" /&gt;</ph>의 스트로크 중 하나 이상이 <ph id="ph2">&lt;see cref="P:System.Windows.Controls.InkCanvas.Strokes" /&gt;</ph> 속성에 없는 경우</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection,System.Collections.Generic.IEnumerable{System.Windows.UIElement})">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> objects to select.</source>
          <target state="translated">선택할 <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> 개체의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection,System.Collections.Generic.IEnumerable{System.Windows.UIElement})">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> objects to select.</source>
          <target state="translated">선택할 <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> 개체의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection,System.Collections.Generic.IEnumerable{System.Windows.UIElement})">
          <source>Selects a combination of <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> and <ph id="ph2">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>와 <ph id="ph2">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> 개체를 조합하여 선택합니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection,System.Collections.Generic.IEnumerable{System.Windows.UIElement})">
          <source>An <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> can contain <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> objects, which are created in response to user stylus input and <ph id="ph3">&lt;xref:System.Windows.UIElement&gt;</ph> objects, such as <ph id="ph4">&lt;xref:System.Windows.Controls.Image&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Controls.Button&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 포함 될 수 있습니다 <ph id="ph2">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> 사용자 스타일러스 입력에 대 한 응답으로 생성 되는 개체 및 <ph id="ph3">&lt;xref:System.Windows.UIElement&gt;</ph> 와 같은 개체 <ph id="ph4">&lt;xref:System.Windows.Controls.Image&gt;</ph> 및 <ph id="ph5">&lt;xref:System.Windows.Controls.Button&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection,System.Collections.Generic.IEnumerable{System.Windows.UIElement})">
          <source>Selected strokes will be displayed with an adorner around them for ease of recognition and manipulation.</source>
          <target state="translated">선택한 스트로크 주위에 알아보기 인식 및 조작 하기 표시기가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection,System.Collections.Generic.IEnumerable{System.Windows.UIElement})">
          <source><ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> objects will not display differently when selected.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> 개체 선택 다르게 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection,System.Collections.Generic.IEnumerable{System.Windows.UIElement})">
          <source>If a <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> in <ph id="ph2">`selectedElements`</ph> is not in the Children collection, <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvas.Select%2A&gt;</ph> ignores the <ph id="ph4">&lt;xref:System.Windows.UIElement&gt;</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> 에 <ph id="ph2">`selectedElements`</ph> 자식 컬렉션에 없는 <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvas.Select%2A&gt;</ph> 무시는 <ph id="ph4">&lt;xref:System.Windows.UIElement&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection,System.Collections.Generic.IEnumerable{System.Windows.UIElement})">
          <source>The following example selects all the strokes and two elements on an <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">다음 예에서는 select 모든 스트로크 및 두 개의 요소에는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection,System.Collections.Generic.IEnumerable{System.Windows.UIElement})">
          <source>This example assumes that there is a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> called <ph id="ph2">`textbox1`</ph> and a <ph id="ph3">&lt;xref:System.Windows.Controls.Button&gt;</ph> called <ph id="ph4">`button1`</ph> - and that both controls are child elements of the <ph id="ph5">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">이 예에서는 라고 가정는 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 호출 <ph id="ph2">`textbox1`</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Controls.Button&gt;</ph> 호출 <ph id="ph4">`button1`</ph> -있고 두 컨트롤은 자식 요소는 <ph id="ph5">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection,System.Collections.Generic.IEnumerable{System.Windows.UIElement})">
          <source>One or more strokes in <ph id="ph1">&lt;paramref name="selectedStrokes" /&gt;</ph> is not included in the <ph id="ph2">&lt;see cref="P:System.Windows.Controls.InkCanvas.Strokes" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="selectedStrokes" /&gt;</ph>의 스트로크 중 하나 이상이 <ph id="ph2">&lt;see cref="P:System.Windows.Controls.InkCanvas.Strokes" /&gt;</ph> 속성에 포함되어 있지 않은 경우</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="E:System.Windows.Controls.InkCanvas.SelectionChanged">
          <source>Occurs when the selection on the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph> changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>의 선택 영역이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.SelectionChanged">
          <source>This event is raised after a set of ink strokes and/or elements has been selected and applied by the user.</source>
          <target state="translated">이 이벤트는 잉크 스트로크 및/또는 요소 집합 선택 되 고 사용자가 적용 된 후에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.SelectionChanged">
          <source>If, instead, you must handle a request that select a set of ink strokes and/or elements before the selection is applied, add an event handler to the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.SelectionChanging&gt;</ph> event.</source>
          <target state="translated">대신, 선택 영역을 적용 하기 전에 잉크 스트로크 및/또는 요소 집합을 선택 하는 요청을 처리 해야, 경우 추가 하는 이벤트 처리기는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.SelectionChanging&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.SelectionChanged">
          <source>The following example prevents the user from making a selection smaller than its original size.</source>
          <target state="translated">다음 예제에서는 선택 원래 크기 보다 작게 하에서 사용자 수 없습니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="E:System.Windows.Controls.InkCanvas.SelectionChanging">
          <source>Occurs when a new set of ink strokes and/or elements is being selected.</source>
          <target state="translated">새 잉크 스트로크 및/또는 요소 집합이 선택될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.SelectionChanging">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.SelectionChanging&gt;</ph> event is raised when strokes and/or elements are selected by the user - but before the change is applied.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.SelectionChanging&gt;</ph> 변경 내용이 적용 되기 전에 하지만 사용자가 스트로크 및/또는 요소를 선택 하면 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.SelectionChanging">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.SelectionChanging&gt;</ph> event is processed when the <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvasSelectionChangingEventHandler&gt;</ph> receives an <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvasSelectionChangingEventArgs&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.SelectionChanging&gt;</ph> 이벤트 처리 될 때는 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvasSelectionChangingEventHandler&gt;</ph> 수신는 <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvasSelectionChangingEventArgs&gt;</ph> 개체.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.SelectionChanging">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvasSelectionChangingEventArgs&gt;</ph> provides methods for accessing <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> objects after they are selected by the user.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvasSelectionChangingEventArgs&gt;</ph> 에 액세스 하기 위한 메서드를 제공 <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> 사용자가 선택 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.SelectionChanging">
          <source>After the change is applied, the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.SelectionChanged&gt;</ph> event is raised.</source>
          <target state="translated">변경이 적용 되는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.SelectionChanged&gt;</ph> 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.SelectionChanging">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.SelectionChanging&gt;</ph> event does not occur when the selected strokes are deleted or when the <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.SelectionChanging&gt;</ph> 선택한 스트로크 삭제 되거나 때 이벤트가 발생 하지 않습니다는 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A&gt;</ph> 속성 변경 합니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.SelectionChanging">
          <source>The following example makes selected strokes royal blue.</source>
          <target state="translated">다음 예제에서는 선택 된 스트로크 royal 파란색입니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="E:System.Windows.Controls.InkCanvas.SelectionMoved">
          <source>Occurs after the user moves a selection of strokes and/or elements.</source>
          <target state="translated">사용자가 스트로크 및/또는 요소 선택 영역을 이동한 후 발생합니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.SelectionMoved">
          <source>This event occurs after a selection of strokes and/or elements is moved, but before the stroke or element data is updated to record its new position.</source>
          <target state="translated">이 이벤트에는 선택한 스트로크 및/또는 요소 이동 하면서 스트로크 또는 요소의 하기 전에 데이터가 업데이트 되어 새 위치가 기록 후 발생 합니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.SelectionMoved">
          <source>Add an event handler to the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.SelectionMoving&gt;</ph> event.</source>
          <target state="translated">이벤트 처리기를 추가 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.SelectionMoving&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.SelectionMoved">
          <source>The following example unselects items on an <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> after the user moves them.</source>
          <target state="translated">다음 예제에서는에 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 후 사용자가 있습니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="E:System.Windows.Controls.InkCanvas.SelectionMoving">
          <source>Occurs before selected strokes and elements are moved.</source>
          <target state="translated">선택된 스트로크 및 요소가 이동하기 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.SelectionMoving">
          <source>This event occurs after the user requests that a selection of strokes and/or elements be moved, but before the change is applied.</source>
          <target state="translated">이 이벤트 스트로크 및/또는 요소 선택 이동할 수 있는 사용자가 요청 후 변경 내용이 적용 되기 전에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.SelectionMoving">
          <source>The event handler receives an argument of type <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs&gt;</ph> with two properties: <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A&gt;</ph>.</source>
          <target state="translated">이벤트 처리기 형식의 인수를 받습니다. <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs&gt;</ph> 두 개의 속성이 있는: <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.SelectionMoving">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A&gt;</ph> defines the boundaries of the selection before the move and <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A&gt;</ph> defines the boundaries of the selection after the move.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A&gt;</ph> 이동 하기 전에 선택 항목의 경계를 정의 하 고 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A&gt;</ph> 이동 후 선택의 경계를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.SelectionMoving">
          <source>After the change is applied, the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.SelectionMoved&gt;</ph> event will occur.</source>
          <target state="translated">변경이 적용 되는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.SelectionMoved&gt;</ph> 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.SelectionMoving">
          <source>The following example prevents the user from moving selected items vertically on an <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 선택한 항목에 세로로 이동할 사용자 수 없습니다.는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="E:System.Windows.Controls.InkCanvas.SelectionResized">
          <source>Occurs when a selection of strokes and/or elements has been resized by the user.</source>
          <target state="translated">사용자가 스트로크 및/또는 요소 선택 영역의 크기를 조정했을 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.SelectionResized">
          <source>This event is raised after a selection of strokes and/or elements is resized.</source>
          <target state="translated">이 이벤트는 선택한 스트로크 및/또는 요소 크기 조정 후 발생 합니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.SelectionResized">
          <source>If, instead, you must handle a request to resize a selection before the strokes and/or elements are resized, add an event handler to the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.SelectionResizing&gt;</ph> event.</source>
          <target state="translated">대신, 스트로크 및/또는 요소 크기가 조정 되기 전에 선택 영역 크기를 조정 하려면 요청을 처리 해야, 하는 경우 이벤트 처리기를 추가 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.SelectionResizing&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.SelectionResized">
          <source>The following example unselects all the items on an <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> after the user re-sizes the selection.</source>
          <target state="translated">다음 예제에서 모든 항목을 선택 취소 한 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 후 사용자는 선택 영역의 크기입니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="E:System.Windows.Controls.InkCanvas.SelectionResizing">
          <source>Occurs before selected strokes and elements are resized.</source>
          <target state="translated">선택된 스트로크 및 요소의 크기가 조정되기 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.SelectionResizing">
          <source>This event occurs after the user requests that a selection of strokes and/or elements be resized, but before the change is applied.</source>
          <target state="translated">이 이벤트는 사용자는 선택한 스트로크 및/또는 요소 크기를 조정할 수를 요청한 후 변경 내용이 적용 되기 전에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.SelectionResizing">
          <source>The event handler receives an argument of type <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs&gt;</ph> that contains two properties: <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A&gt;</ph>.</source>
          <target state="translated">이벤트 처리기 형식의 인수를 받습니다. <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs&gt;</ph> 두 속성이 들어 있는: <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.SelectionResizing">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A&gt;</ph> defines the boundaries of the selection before the resizing operation and <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A&gt;</ph> defines the boundaries of the selection after the resizing operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A&gt;</ph> 크기 조정 작업 앞에 선택 항목의 경계를 정의 하 고 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A&gt;</ph> 크기 조정 작업 후 선택 항목의 경계를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.SelectionResizing">
          <source>After the strokes and/or elements are updated with the new size, the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.SelectionResized&gt;</ph> event is raised.</source>
          <target state="translated">스트로크 및/또는 요소를 새 크기로 업데이트 한 후의 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.SelectionResized&gt;</ph> 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.SelectionResizing">
          <source>The following example prevents the user from making a selection smaller than its original size.</source>
          <target state="translated">다음 예제에서는 선택 원래 크기 보다 작게 하에서 사용자 수 없습니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.SetBottom(System.Windows.UIElement,System.Double)">
          <source>The element on which to set the bottom property.</source>
          <target state="translated">Bottom 속성을 설정할 요소입니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.SetBottom(System.Windows.UIElement,System.Double)">
          <source>The bottom coordinate of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>요소<ept id="p1">&lt;/c&gt;</ept>의 아래쪽 좌표입니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.SetBottom(System.Windows.UIElement,System.Double)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.Bottom" /&gt;</ph> attached property for a given dependency object.</source>
          <target state="translated">지정된 종속성 개체에 연결된 <ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.Bottom" /&gt;</ph> 속성 값을 설정합니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.SetBottom(System.Windows.UIElement,System.Double)">
          <source>The following example demonstrates how to set the position of a <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 위치를 설정 하는 <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.SetEnabledGestures(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})">
          <source>A collection of application gestures that the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph> will recognize.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>에서 인식되는 응용 프로그램 제스처의 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.SetEnabledGestures(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})">
          <source>Sets the application gestures that the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph> will recognize.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>에서 인식되는 응용 프로그램 제스처를 설정합니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.SetEnabledGestures(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})">
          <source>The following example demonstrates how to set up an <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> to recognize application gestures.</source>
          <target state="translated">다음 예제를 설정 하는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 응용 프로그램 제스처를 인식 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.SetEnabledGestures(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})">
          <source>The <ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" /&gt;</ph> 속성은 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.SetLeft(System.Windows.UIElement,System.Double)">
          <source>The element on which to set the left property.</source>
          <target state="translated">Left 속성을 설정할 요소입니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.SetLeft(System.Windows.UIElement,System.Double)">
          <source>The left coordinate of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>요소<ept id="p1">&lt;/c&gt;</ept>의 왼쪽 좌표입니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.SetLeft(System.Windows.UIElement,System.Double)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.Left" /&gt;</ph> attached property for a given dependency object.</source>
          <target state="translated">지정된 종속성 개체에 연결된 <ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.Left" /&gt;</ph> 속성 값을 설정합니다.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.SetLeft(System.Windows.UIElement,System.Double)">
          <source>The following example demonstrates how to set the position of a <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 위치를 설정 하는 <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.SetRight(System.Windows.UIElement,System.Double)">
          <source>The element on which to set the right property.</source>
          <target state="translated">Right 속성을 설정할 요소입니다.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.SetRight(System.Windows.UIElement,System.Double)">
          <source>The right coordinate of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>요소<ept id="p1">&lt;/c&gt;</ept>의 오른쪽 좌표입니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.SetRight(System.Windows.UIElement,System.Double)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.Right" /&gt;</ph> attached property for a given dependency object.</source>
          <target state="translated">지정된 종속성 개체에 연결된 <ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.Right" /&gt;</ph> 속성 값을 설정합니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.SetRight(System.Windows.UIElement,System.Double)">
          <source>The following example demonstrates how to set the position of a <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 위치를 설정 하는 <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.SetTop(System.Windows.UIElement,System.Double)">
          <source>The element on which to set the top property.</source>
          <target state="translated">Top 속성을 설정할 요소입니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.SetTop(System.Windows.UIElement,System.Double)">
          <source>The top coordinate of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>요소<ept id="p1">&lt;/c&gt;</ept>의 위쪽 좌표입니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.SetTop(System.Windows.UIElement,System.Double)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.Top" /&gt;</ph> attached property for a given dependency object.</source>
          <target state="translated">지정된 종속성 개체에 연결된 <ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.Top" /&gt;</ph> 속성 값을 설정합니다.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.InkCanvas.SetTop(System.Windows.UIElement,System.Double)">
          <source>The following example demonstrates how to set the position of a <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 위치를 설정 하는 <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="E:System.Windows.Controls.InkCanvas.StrokeCollected">
          <source>Occurs when a stroke drawn by the user is added to the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.Strokes" /&gt;</ph> property.</source>
          <target state="translated">사용자가 그린 스트로크가 <ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.Strokes" /&gt;</ph> 속성에 추가될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.StrokeCollected">
          <source>This event is raised when a user completes a stroke using a pointing device.</source>
          <target state="translated">이 이벤트는 사용자가 스트로크 포인팅 장치를 사용 하 여 완료 될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.StrokeCollected">
          <source>For example, a user might raise a stylus from a digitizer after making a motion, thereby completing a stroke.</source>
          <target state="translated">예를 들어 사용자 발생 시킬 수 있습니다 디지타이저에서 스타일러스를 움직인 후 함으로써 스트로크를 완료 합니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.StrokeCollected">
          <source>The event handler receives an argument of type <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs&gt;</ph>, which references the completed stroke.</source>
          <target state="translated">이벤트 처리기 형식의 인수를 받습니다. <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs&gt;</ph>, 완료 된 스트로크를 참조 하는 합니다.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.StrokeCollected">
          <source>The stroke is also added to the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.Strokes%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">Stroke에도 추가 됩니다는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.Strokes%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.StrokeCollected">
          <source>The programmatic addition of a <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> object to the <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas.Strokes%2A&gt;</ph> collection does not raise this event.</source>
          <target state="translated">프로그래밍 방식으로 추가할은 <ph id="ph1">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> 개체는 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas.Strokes%2A&gt;</ph> 컬렉션이이 이벤트가 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.StrokeCollected">
          <source>Routed Event Information</source>
          <target state="translated">라우팅 이벤트 정보</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.StrokeCollected">
          <source>Identifier field</source>
          <target state="translated">식별자 필드</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.StrokeCollected">
          <source>Routing strategy</source>
          <target state="translated">라우팅 전략</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.StrokeCollected">
          <source>Bubbling</source>
          <target state="translated">버블링</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.StrokeCollected">
          <source>Delegate</source>
          <target state="translated">대리자</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.StrokeCollected">
          <source>The following example saves the time as a custom property when a user adds a stroke to the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 사용자 스트로크를 추가할 때 사용자 지정 속성으로 시간을 저장는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.InkCanvas.StrokeCollectedEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /&gt;</ph> routed event.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /&gt;</ph> 라우트된 이벤트를 식별합니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="E:System.Windows.Controls.InkCanvas.StrokeErased">
          <source>Occurs when user erases a stroke.</source>
          <target state="translated">사용자가 스트로크를 지울 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.StrokeErased">
          <source>This event occurs when a user erases ink whether the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke&gt;</ph>.</source>
          <target state="translated">이 이벤트 발생 여부 잉크 지울 때는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph> 속성이 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.StrokeErased">
          <source>Routed Event Information</source>
          <target state="translated">라우팅 이벤트 정보</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.StrokeErased">
          <source>Identifier field</source>
          <target state="translated">식별자 필드</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.StrokeErased">
          <source>Routing strategy</source>
          <target state="translated">라우팅 전략</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.StrokeErased">
          <source>Bubbling</source>
          <target state="translated">버블링</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.StrokeErased">
          <source>Delegate</source>
          <target state="translated">대리자</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.StrokeErased">
          <source>The following example reports the number of strokes that are on an <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> when the <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas.StrokeErased&gt;</ph> event occurs.</source>
          <target state="translated">다음 예제에서는 획에 있는 수를 보고 한 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 때는 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas.StrokeErased&gt;</ph> 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.StrokeErased">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint&gt;</ph> and the user erases the middle of a stroke, the number of strokes on the <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> increases.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph> 로 설정 된 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint&gt;</ph> 에 사용자가 스트로크를 strokes 수의 중간을 지우기 및는 <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 증가 합니다.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.StrokeErased">
          <source>This is because the old stroke was replaced by two new strokes.</source>
          <target state="translated">즉, 이전 스트로크가 두 개의 새 스트로크가로 대체 되었습니다.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.InkCanvas.StrokeErasedEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Controls.InkCanvas.StrokeErased" /&gt;</ph> routed event.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="E:System.Windows.Controls.InkCanvas.StrokeErased" /&gt;</ph> 라우트된 이벤트를 식별합니다.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="E:System.Windows.Controls.InkCanvas.StrokeErasing">
          <source>Occurs just before a user erases a stroke.</source>
          <target state="translated">사용자가 스트로크를 지우기 직전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.StrokeErasing">
          <source>Handle this event when you want to check whether a stroke should be erased.</source>
          <target state="translated">Stroke 지워야 하는지 여부를 확인 하려는 경우이 이벤트를 처리 합니다.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.StrokeErasing">
          <source>Set the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property to <ph id="ph2">`true`</ph> if you want to prevent the stroke from being erased.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph> 획을 지우거 되지 않도록 하려는 경우.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.StrokeErasing">
          <source>You can use this technique when the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A&gt;</ph> property is set to <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint&gt;</ph>.</source>
          <target state="translated">이 방법을 사용할 수 있습니다 때는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A&gt;</ph> 속성이 <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.StrokeErasing">
          <source>The following example prevents any strokes rendered as highlighters from being erased.</source>
          <target state="translated">다음 예제에서는 모든 선을를 지우거 형광펜으로 렌더링 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.StrokeErasing">
          <source>The example assumes that the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> is connected to the event handler.</source>
          <target state="translated">이 예에서는 가정 하는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 이벤트 처리기에 연결 합니다.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.InkCanvas.Strokes">
          <source>Gets or sets the collection of ink <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> objects collected by the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph>에서 수집한 잉크 <ph id="ph2">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph> 개체의 컬렉션을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.Strokes">
          <source>The collection of <ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> objects contained within the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Ink.Stroke" /&gt;</ph> 내에 포함된 <ph id="ph2">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph> 개체의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.Strokes">
          <source>Dependency Property Information</source>
          <target state="translated">종속성 속성 정보</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.Strokes">
          <source>Identifier field</source>
          <target state="translated">식별자 필드</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.Strokes">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">로 메타 데이터 속성 설정 <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.Strokes">
          <source>None</source>
          <target state="translated">없음</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.Strokes">
          <source>The following example demonstrates how to use two <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> objects for the same <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 두 개를 사용 하는 방법을 <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> 동일한 컴퓨터에 대해 개체 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.Strokes">
          <source>In this example, player one and player two each use an individual "inking surface" even though they share the same <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">이 예제에서는 플레이어 1과 플레이어 2 사용 하 여 개별 "잉크 화면" 동일한 공유 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.Strokes">
          <source>This example assumes the click event is connected to the event handler, <ph id="ph1">`switchPlayersButton_Click`</ph>.</source>
          <target state="translated">이 예에서는 클릭 이벤트는 이벤트 처리기에 연결 되어 있다고 가정 <ph id="ph1">`switchPlayersButton_Click`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.Strokes">
          <source>The following example demonstrates how to bind the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.Strokes%2A&gt;</ph> property of an <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> to another <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 바인딩하는 방법을 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas.Strokes%2A&gt;</ph> 속성은 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 다른 <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.InkCanvas.StrokesProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.Strokes" /&gt;</ph> dependency property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.Strokes" /&gt;</ph> 종속성 속성을 식별합니다.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="E:System.Windows.Controls.InkCanvas.StrokesReplaced">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.Strokes" /&gt;</ph> property is replaced.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.Strokes" /&gt;</ph> 속성이 바뀔 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.StrokesReplaced">
          <source>The following example demonstrates how to use two <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> objects that are co-located on the same <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 두 개를 사용 하는 방법을 <ph id="ph1">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> 동일에 함께 배치 하는 개체 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.StrokesReplaced">
          <source>In this example, player one and player two each use an individual "inking surface" even though they share the same <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">이 예제에서는 플레이어 1과 플레이어 2 사용 하 여 개별 "잉크 화면" 동일한 공유 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.InkCanvas.StrokesReplaced">
          <source>This example assumes that the <ph id="ph1">`switchPlayersButton_Click`</ph> event is connected to the event handler.</source>
          <target state="translated">이 예에서는 가정 하는 <ph id="ph1">`switchPlayersButton_Click`</ph> 이벤트가 이벤트 처리기에 연결 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddChild(System.Object)">
          <source>The child object to add.</source>
          <target state="translated">추가할 자식 개체입니다.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddChild(System.Object)">
          <source>Adds the specified object to the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>.</source>
          <target state="translated">지정된 개체를 <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>에 추가합니다.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddText(System.String)">
          <source>Not used.</source>
          <target state="translated">사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddText(System.String)">
          <source>Adds the text that within the tags in markup.</source>
          <target state="translated">태그 안에 있는 텍스트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddText(System.String)">
          <source>Always throws an <ph id="ph1">&lt;see cref="T:System.ArgumentException" /&gt;</ph>.</source>
          <target state="translated">항상 <ph id="ph1">&lt;see cref="T:System.ArgumentException" /&gt;</ph>을 throw합니다.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.InkCanvas.TopProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.Top" /&gt;</ph> attached property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Controls.InkCanvas.Top" /&gt;</ph> 연결된 속성을 식별합니다.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.InkCanvas.UseCustomCursor">
          <source>Gets or sets a Boolean value that indicates whether to override standard <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph> cursor functionality to support a custom cursor.</source>
          <target state="translated">표준 <ph id="ph1">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph> 커서 기능을 재정의하여 사용자 지정 커서를 지원할지 여부를 나타내는 부울 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.UseCustomCursor">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph> is using a custom cursor; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Controls.InkCanvas" /&gt;</ph>에서 사용자 지정 커서를 사용하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.UseCustomCursor">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> will change the cursor style to reflect the current <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph> while the cursor is within the bounds of the <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 현재 반영 하기 위해 커서 스타일 바뀝니다 <ph id="ph2">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph> 커서가의 경계에 있는 동안는 <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.UseCustomCursor">
          <source>If this behavior is not wanted, for example, when the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> uses a custom cursor, set this property to <ph id="ph2">`true`</ph>, and the cursor will not change with the <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph>.</source>
          <target state="translated">이 동작은 사용 하지 않으려는 예를 들어 때 경우는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> 사용자 지정을 사용 하 여이 속성을 설정 하는 커서를 <ph id="ph2">`true`</ph>, 커서 변경 되지 것입니다는 <ph id="ph3">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.UseCustomCursor">
          <source>The following example demonstrates how to use a cursor that is different than the one supplied by the <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>.</source>
          <target state="translated">다음 예제에서 제공 하는 것과 다른 되는 커서를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.InkCanvas.VisualChildrenCount">
          <source>Gets the number of visual child elements within this element.</source>
          <target state="translated">이 요소 내 시각적 자식 요소의 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.InkCanvas.VisualChildrenCount">
          <source>The number of visual child elements for this element.</source>
          <target state="translated">이 요소에 대한 시각적 자식 요소의 수입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>