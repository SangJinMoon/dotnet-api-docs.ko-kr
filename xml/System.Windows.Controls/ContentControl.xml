<Type Name="ContentControl" FullName="System.Windows.Controls.ContentControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="11771f296bcfe2d02f782b38b4fa2594451b1e6d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30619947" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ContentControl : System.Windows.Controls.Control, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ContentControl extends System.Windows.Controls.Control implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ContentControl" />
  <TypeSignature Language="VB.NET" Value="Public Class ContentControl&#xA;Inherits Control&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContentControl : System::Windows::Controls::Control, System::Windows::Markup::IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Content")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Content")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>모든 유형의 단일 콘텐츠로 이루어진 컨트롤을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.ContentControl> 모든 형식의 공용 언어 런타임 개체를 포함할 수 있습니다 (예: 문자열 또는 <xref:System.DateTime> 개체) 또는 <xref:System.Windows.UIElement> 개체 (같은 <xref:System.Windows.Shapes.Rectangle> 또는 <xref:System.Windows.Controls.Panel>). 이렇게 하면 컨트롤에 같은 다양 한 콘텐츠를 추가 하려면 <xref:System.Windows.Controls.Button> 및 <xref:System.Windows.Controls.CheckBox>합니다.  
  
 다음 그림에서는 4 개의 단추 <xref:System.Windows.Controls.ContentControl.Content%2A> 속성에서 다음 중 하나로 설정 됩니다.  
  
-   문자열  
  
-   <xref:System.DateTime> 개체입니다.  
  
-   <xref:System.Windows.UIElement> 개체입니다.  
  
-   A <xref:System.Windows.Controls.Panel> 같은 <xref:System.Windows.UIElement> 개체입니다.  
  
 ![단추가 네 개](~/add/media/controlcontentmodelbuttons.PNG "네 개의 단추")  
서로 다른 형식의 콘텐츠 있는 네 개의 단추  
  
 A <xref:System.Windows.Controls.ContentControl> 에 제한 된 기본 스타일입니다. 컨트롤의 모양을 개선 하려면 새 만들 수 <xref:System.Windows.DataTemplate>합니다. 자세한 내용은 [데이터 템플릿 개요](~/docs/framework/wpf/data/data-templating-overview.md)를 참조하세요. 또 다른 일반적인 방법 사용 하는 것은 <xref:System.Windows.Controls.ContentControl> 에서 선택한 항목에 대 한 자세한 내용을 표시 하는 <xref:System.Windows.Controls.ItemsControl> 제어 합니다. 자세한 내용은 참조 [하는 방법: 컬렉션 및 표시 선택에 따라 정보에 바인딩](~/docs/framework/wpf/data/how-to-bind-to-a-collection-and-display-information-based-on-selection.md)합니다.  
  
 종속성 속성을이 컨트롤은 컨트롤의 기본 스타일으로 설정할 수 있습니다.  기본 스타일 속성은 응용 프로그램에이 컨트롤이 표시 하는 경우 속성이 기본값에서 변경 될 수 있습니다. 기본 스타일 응용 프로그램이 실행 중인 때 사용 되는 데스크톱 테마에 따라 결정 됩니다.  자세한 내용은 참조 [기본 WPF 테마](http://go.microsoft.com/fwlink/?LinkID=158252)합니다.  
  
   
  
## Examples  
 다음 예제에는 주의 섹션에 표시 된 단추 4 개를 만드는 방법을 보여 줍니다.  
  
> [!NOTE]
>  하지만 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 예제의 버전에서 사용할 수는 `<Button.Content>` 각 단추의 콘텐츠 태그, 필요 하지 않습니다. 자세한 내용은 참조 [XAML 개요 (WPF)](~/docs/framework/wpf/advanced/xaml-overview-wpf.md)합니다.  
  
 [!code-xaml[ControlContentOverviewSnippets#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlContentOverviewSnippets/CSharp/Window1.xaml#1)]  
  
 [!code-csharp[ControlContentOverviewSnippets#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlContentOverviewSnippets/CSharp/Window1.xaml.cs#2)]
 [!code-vb[ControlContentOverviewSnippets#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ControlContentOverviewSnippets/VisualBasic/Window1.xaml.vb#2)]  
  
 다음 예제에 대 한 스타일을 만드는 방법을 보여 줍니다는 <xref:System.Windows.Controls.ContentControl> 컨트롤에는 향상 된 시각적 모양에 있도록 합니다.  
  
 [!code-xaml[ContentControl#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentControl/CSharp/Page1.xaml#1)]  
[!code-xaml[ContentControl#5](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentControl/CSharp/Page1.xaml#5)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContentControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.ContentControl" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="protected virtual void AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentControl.AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddChild (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddChild(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">추가할 개체입니다.</param>
        <summary>지정된 개체를 <see cref="T:System.Windows.Controls.ContentControl" />의 자식으로 추가합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddText">
      <MemberSignature Language="C#" Value="protected virtual void AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentControl.AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddText(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">추가할 문자열입니다.</param>
        <summary>지정된 텍스트 문자열을 <see cref="T:System.Windows.Controls.ContentControl" />에 추가합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public object Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Content" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContentControl.Content" />
      <MemberSignature Language="VB.NET" Value="Public Property Content As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Content { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.ContentControl" />의 내용을 가져오거나 설정합니다.</summary>
        <value>컨트롤의 내용이 들어 있는 개체입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때문에 <xref:System.Windows.Controls.ContentControl.Content%2A> 형식의 속성은 <xref:System.Object>, 넣을 수에 대 한 제한은 없습니다는 <xref:System.Windows.Controls.ContentControl>합니다. <xref:System.Windows.Controls.ContentControl.Content%2A> 하 여 표시 되는 <xref:System.Windows.Controls.ContentPresenter>에 <xref:System.Windows.Controls.ControlTemplate> 의 <xref:System.Windows.Controls.ContentControl>합니다.  모든 <xref:System.Windows.Controls.ContentControl> 에 입력 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 에 <xref:System.Windows.Controls.ContentPresenter> 기본에서 <xref:System.Windows.Controls.ControlTemplate>합니다.  방식에 대 한 자세한 내용은 <xref:System.Windows.Controls.ContentPresenter> 표시 <xref:System.Windows.Controls.ContentControl.Content%2A>, 참조 <xref:System.Windows.Controls.ContentPresenter>합니다.  
  
<a name="dependencyPropertyInfo_Content"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Controls.ContentControl.ContentProperty>|  
|로 메타 데이터 속성 설정 `true`|없음|  
  
<a name="xamlAttributeUsage_Content"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object Content="content"/>  
```  
  
<a name="xamlPropertyElementUsage_Content"></a>   
## <a name="xaml-property-element-usage"></a>XAML 속성 요소 사용  
  
```  
<object> content</object>  
```  
  
<a name="xamlValues_Content"></a>   
## <a name="xaml-values"></a>XAML 값  
 `Content`  
 텍스트 또는 단일 개체입니다.  
  
   
  
## Examples  
 다음 예제에는 4 개를 만드는 방법을 보여 줍니다 <xref:System.Windows.Controls.Button> 컨트롤과 <xref:System.Windows.Controls.ContentControl.Content%2A> 다음 중 하나로 설정 됩니다.  
  
-   문자열  
  
-   <xref:System.DateTime> 개체입니다.  
  
-   <xref:System.Windows.UIElement> 개체입니다.  
  
-   A <xref:System.Windows.Controls.Panel> 같은 <xref:System.Windows.UIElement> 개체입니다.  
  
> [!NOTE]
>  하지만 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 예제의 버전에서 사용할 수는 `<Button.Content>` 각 단추의 콘텐츠 태그, 필요 하지 않습니다. 자세한 내용은 참조 [XAML 개요 (WPF)](~/docs/framework/wpf/advanced/xaml-overview-wpf.md)합니다.  
  
 [!code-xaml[ControlContentOverviewSnippets#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlContentOverviewSnippets/CSharp/Window1.xaml#1)]  
  
 [!code-csharp[ControlContentOverviewSnippets#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlContentOverviewSnippets/CSharp/Window1.xaml.cs#2)]
 [!code-vb[ControlContentOverviewSnippets#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ControlContentOverviewSnippets/VisualBasic/Window1.xaml.vb#2)]  
  
 다음 그림은 이전 예제에서 만든 네 개의 단추를 보여 줍니다.  
  
 ![단추가 네 개](~/add/media/controlcontentmodelbuttons.PNG "네 개의 단추")  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContentControl.ContentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ContentProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.ContentControl.Content" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentStringFormat">
      <MemberSignature Language="C#" Value="public string ContentStringFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentStringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContentControl.ContentStringFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentStringFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentStringFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.ContentControl.Content" /> 속성이 문자열로 표시되는 경우 이 속성의 형식 지정 방법을 지정하는 합성 문자열을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="P:System.Windows.Controls.ContentControl.Content" /> 속성이 문자열로 표시되는 경우 이 속성의 형식 지정 방법을 지정하는 합성 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.ContentControl.ContentStringFormat%2A> 미리 정의 된 복합, 또는 사용자 지정 문자열 형식이 될 수 있습니다. 문자열 형식에 대 한 자세한 내용은 참조 [형식 지정](~/docs/standard/base-types/formatting-types.md)합니다.  설정 하는 경우는 <xref:System.Windows.Controls.ContentControl.ContentTemplate%2A> 또는 <xref:System.Windows.Controls.ContentControl.ContentTemplateSelector%2A> 속성은 <xref:System.Windows.Controls.ContentControl>, <xref:System.Windows.Controls.ContentControl.ContentStringFormat%2A> 속성은 무시 됩니다.  
  
   
  
## Examples  
 다음 예제에서는의 형식을 지정 <xref:System.DateTime> 설정 하 여 개체는 <xref:System.Windows.Controls.ContentControl.ContentStringFormat%2A> 속성에는 <xref:System.Windows.Style> 적용 하 고는 <xref:System.Windows.Style> 2 개로 <xref:System.Windows.Controls.Label> 에서 상속 하는 개체 <xref:System.Windows.Controls.ContentControl>합니다.  
  
 [!code-xaml[ContentStringSnippets#ContentControl](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentStringSnippets/CSharp/Window1.xaml#contentcontrol)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentStringFormatProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContentStringFormatProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContentStringFormatProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContentControl.ContentStringFormatProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContentStringFormatProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ContentStringFormatProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.ContentControl.ContentStringFormat" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate ContentTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate ContentTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContentControl.ContentTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentTemplate As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DataTemplate ^ ContentTemplate { System::Windows::DataTemplate ^ get(); void set(System::Windows::DataTemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.ContentControl" />의 내용을 표시하는 데 사용되는 데이터 템플릿을 가져오거나 설정합니다.</summary>
        <value>데이터 템플릿입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 설정는 <xref:System.Windows.DataTemplate> 의 모양을 지정 하는 <xref:System.Windows.Controls.ContentControl>합니다. 데이터 템플릿에 대 한 자세한 내용은 참조 하십시오. [데이터 템플릿 개요](~/docs/framework/wpf/data/data-templating-overview.md)합니다.  
  
<a name="xamlAttributeUsage_ContentTemplate"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object ContentTemplate="{resourceExtension styleResourceKey}"/>  
```  
  
<a name="xamlValues_ContentTemplate"></a>   
## <a name="xaml-values"></a>XAML 값  
 *resourceExtension*  
 템플릿 리소스를 하거나 참조 하는 방법을 식별 하는 태그 확장 `StaticResource` 또는 `DynamicResource`합니다. 참조 [XAML 리소스](~/docs/framework/wpf/advanced/xaml-resources.md)합니다.  
  
 *styleResourceKey*  
 요청된 된 템플릿 선택기를 식별 하는 키입니다. 기존 리소스를이 키는 한 <xref:System.Windows.ResourceDictionary>합니다.  
  
> [!NOTE]
>  속성 요소 구문은 지원 되지만 권장 하지는 않습니다. 자세한 내용은 참조 [인라인 스타일 및 템플릿](~/docs/framework/wpf/advanced/inline-styles-and-templates.md)합니다.  
  
<a name="dependencyPropertyInfo_ContentTemplate"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Controls.ContentControl.ContentTemplateProperty>|  
|로 메타 데이터 속성 설정 `true`|없음|  
  
   
  
## Examples  
 다음 예에서는 콘텐츠 서식 파일을 만들고 템플릿을 콘텐츠 컨트롤에 적용 하는 방법을 보여 줍니다.  
  
 [!code-xaml[ContentControl#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentControl/CSharp/Page1.xaml#2)]  
  
 [!code-xaml[ContentControl#3](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentControl/CSharp/Page1.xaml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContentTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContentTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContentControl.ContentTemplateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContentTemplateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ContentTemplateProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataTemplateSelector ContentTemplateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.DataTemplateSelector ContentTemplateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContentControl.ContentTemplateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentTemplateSelector As DataTemplateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::DataTemplateSelector ^ ContentTemplateSelector { System::Windows::Controls::DataTemplateSelector ^ get(); void set(System::Windows::Controls::DataTemplateSelector ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>응용 프로그램 작성기에서 사용자 지정 템플릿 선택 논리를 제공하도록 하는 템플릿 선택기를 가져오거나 설정합니다.</summary>
        <value>데이터 템플릿 선택기입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 만들 때는 일반적으로 <xref:System.Windows.Controls.DataTemplateSelector> 여러 개 설치한 경우 <xref:System.Windows.DataTemplate> 동일한 유형의 개체에 대 한 원하는 선택 하기 위한 자체 논리를 제공 하는 <xref:System.Windows.DataTemplate> 각 데이터 개체의 속성을 기준으로 적용 합니다. 다른 개체가 여러 개 있는 경우 형식를 설정할 수는 <xref:System.Windows.DataTemplate.DataType%2A> 속성에는 <xref:System.Windows.DataTemplate>합니다. 이렇게 하면를 만들 필요 없이 경우는 <xref:System.Windows.Controls.DataTemplateSelector>합니다. 또한 서로 다른 속성과 같지만 동일한 유형의 개체를 사용 하도록 설정한 경우을 고려해볼 수도 있습니다를 사용 하는 <xref:System.Windows.DataTrigger> 또는 데이터 변환기입니다. 자세한 내용은 [데이터 템플릿 개요](~/docs/framework/wpf/data/data-templating-overview.md)를 참조하세요.  
  
 템플릿 선택기를 만들려면에서 상속 되는 클래스를 만듭니다 <xref:System.Windows.Controls.DataTemplateSelector> 재정의 <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> 메서드. 클래스를 정의한 후 클래스의 인스턴스를 요소의 템플릿 선택기 속성에 할당할 수 있습니다.  
  
 모두는 <xref:System.Windows.Controls.ContentControl.ContentTemplateSelector%2A> 및 <xref:System.Windows.Controls.ContentControl.ContentTemplate%2A> 속성이 설정 된 후이 속성은 무시 됩니다.  
  
<a name="xamlAttributeUsage_ContentTemplateSelector"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object ContentTemplateSelector="{ResourceExtension TemplateSelectorKey}"/>  
```  
  
<a name="xamlValues_ContentTemplateSelector"></a>   
## <a name="xaml-values"></a>XAML 값  
 *ResourceExtension*  
 템플릿 리소스를 하거나 참조 하는 방법을 식별 하는 태그 확장 `StaticResource` 또는 `DynamicResource`합니다. 참조 [XAML 리소스](~/docs/framework/wpf/advanced/xaml-resources.md)합니다.  
  
 *TemplateSelectorKey*  
 요청된 된 템플릿 선택기를 식별 하는 키입니다. 기존 리소스를이 키는 한 <xref:System.Windows.ResourceDictionary>합니다.  
  
<a name="dependencyPropertyInfo_ContentTemplateSelector"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Controls.ContentControl.ContentTemplateSelectorProperty>|  
|로 메타 데이터 속성 설정 `true`|없음|  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Windows.Controls.ContentControl.ContentTemplateSelector%2A> 속성을 사용하는 방법을 보여 줍니다. 선택한 항목에 바인딩하는이 예제는 <xref:System.Windows.Controls.ComboBox> 에 <xref:System.Windows.Controls.ContentControl.Content%2A> 속성은 <xref:System.Windows.Controls.Label>에서 상속 되 <xref:System.Windows.Controls.ContentControl>합니다.  선택한 항목의 값에서 검은색 사각형 안에 나타납니다 5 보다 작은 값을 선택 하면는 <xref:System.Windows.Controls.Label>합니다.  5 하는 값을 선택할 때 이상이 면 녹색 타원에 값이 나타납니다. 이 예제에서는 두 개를 만들어이 수행 합니다 <xref:System.Windows.DataTemplate> 개체 및 <xref:System.Windows.Controls.DataTemplateSelector>로 설정 하는 <xref:System.Windows.Controls.ContentControl.ContentTemplateSelector%2A> 속성을 적절 한 선택 <xref:System.Windows.DataTemplate> 선택한 항목의 값에 따라 합니다.  
  
 [!code-xaml[ContentControlTemplateSelector#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentControlTemplateSelector/CSharp/Window1.xaml#1)]  
[!code-csharp[ContentControlTemplateSelector#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentControlTemplateSelector/CSharp/Window1.xaml.cs#2)]
[!code-vb[ContentControlTemplateSelector#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentControlTemplateSelector/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentTemplateSelectorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContentTemplateSelectorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContentTemplateSelectorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContentControl.ContentTemplateSelectorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContentTemplateSelectorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ContentTemplateSelectorProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasContent">
      <MemberSignature Language="C#" Value="public bool HasContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContentControl.HasContent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasContent { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.ContentControl" />에 콘텐츠가 들어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Windows.Controls.ContentControl" />에 콘텐츠가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Controls.ContentControl.Content%2A> 속성은 `null`,이 속성은 반환 `false`합니다.  
  
<a name="dependencyPropertyInfo_HasContent"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Controls.ContentControl.HasContentProperty>|  
|로 메타 데이터 속성 설정 `true`|없음|  
  
   
  
## Examples  
 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Controls.ContentControl.HasContent%2A> 속성을 콘텐츠는 콘텐츠 컨트롤에 포함 되어 있는지 확인 합니다.  
  
 [!code-csharp[ContentControl#4](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentControl/CSharp/Page1.xaml.cs#4)]
 [!code-vb[ContentControl#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentControl/VisualBasic/Page1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasContentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HasContentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HasContentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContentControl.HasContentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HasContentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HasContentProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.ContentControl.HasContent" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContentControl.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>콘텐츠 컨트롤의 논리적 자식 요소에 대한 열거자를 가져옵니다.</summary>
        <value>열거자입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContentChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnContentChanged (object oldContent, object newContent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContentChanged(object oldContent, object newContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentControl.OnContentChanged(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContentChanged (oldContent As Object, newContent As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContentChanged(System::Object ^ oldContent, System::Object ^ newContent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldContent" Type="System.Object" />
        <Parameter Name="newContent" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="oldContent">
          <see cref="P:System.Windows.Controls.ContentControl.Content" /> 속성의 이전 값입니다.</param>
        <param name="newContent">
          <see cref="P:System.Windows.Controls.ContentControl.Content" /> 속성의 새 값입니다.</param>
        <summary>
          <see cref="P:System.Windows.Controls.ContentControl.Content" /> 속성이 변경되면 호출됩니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContentStringFormatChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnContentStringFormatChanged (string oldContentStringFormat, string newContentStringFormat);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContentStringFormatChanged(string oldContentStringFormat, string newContentStringFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentControl.OnContentStringFormatChanged(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContentStringFormatChanged (oldContentStringFormat As String, newContentStringFormat As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContentStringFormatChanged(System::String ^ oldContentStringFormat, System::String ^ newContentStringFormat);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldContentStringFormat" Type="System.String" />
        <Parameter Name="newContentStringFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="oldContentStringFormat">
          <see cref="P:System.Windows.Controls.ContentControl.ContentStringFormat" />의 이전 값입니다.</param>
        <param name="newContentStringFormat">
          <see cref="P:System.Windows.Controls.ContentControl.ContentStringFormat" />의 새 값입니다.</param>
        <summary>
          <see cref="P:System.Windows.Controls.ContentControl.ContentStringFormat" /> 속성이 변경되면 발생합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContentTemplateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnContentTemplateChanged (System.Windows.DataTemplate oldContentTemplate, System.Windows.DataTemplate newContentTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContentTemplateChanged(class System.Windows.DataTemplate oldContentTemplate, class System.Windows.DataTemplate newContentTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentControl.OnContentTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContentTemplateChanged (oldContentTemplate As DataTemplate, newContentTemplate As DataTemplate)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContentTemplateChanged(System::Windows::DataTemplate ^ oldContentTemplate, System::Windows::DataTemplate ^ newContentTemplate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldContentTemplate" Type="System.Windows.DataTemplate" />
        <Parameter Name="newContentTemplate" Type="System.Windows.DataTemplate" />
      </Parameters>
      <Docs>
        <param name="oldContentTemplate">
          <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> 속성의 이전 값입니다.</param>
        <param name="newContentTemplate">
          <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> 속성의 새 값입니다.</param>
        <summary>
          <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> 속성이 변경되면 호출됩니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContentTemplateSelectorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnContentTemplateSelectorChanged (System.Windows.Controls.DataTemplateSelector oldContentTemplateSelector, System.Windows.Controls.DataTemplateSelector newContentTemplateSelector);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContentTemplateSelectorChanged(class System.Windows.Controls.DataTemplateSelector oldContentTemplateSelector, class System.Windows.Controls.DataTemplateSelector newContentTemplateSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentControl.OnContentTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContentTemplateSelectorChanged (oldContentTemplateSelector As DataTemplateSelector, newContentTemplateSelector As DataTemplateSelector)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContentTemplateSelectorChanged(System::Windows::Controls::DataTemplateSelector ^ oldContentTemplateSelector, System::Windows::Controls::DataTemplateSelector ^ newContentTemplateSelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldContentTemplateSelector" Type="System.Windows.Controls.DataTemplateSelector" />
        <Parameter Name="newContentTemplateSelector" Type="System.Windows.Controls.DataTemplateSelector" />
      </Parameters>
      <Docs>
        <param name="oldContentTemplateSelector">
          <see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector" /> 속성의 이전 값입니다.</param>
        <param name="newContentTemplateSelector">
          <see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector" /> 속성의 새 값입니다.</param>
        <summary>
          <see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector" /> 속성이 변경되면 호출됩니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeContent">
      <MemberSignature Language="C#" Value="public virtual bool ShouldSerializeContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldSerializeContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentControl.ShouldSerializeContent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldSerializeContent () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ShouldSerializeContent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.ContentControl.Content" /> 속성을 지속해야 하는지 여부를 나타냅니다.</summary>
        <returns>
          <see cref="P:System.Windows.Controls.ContentControl.Content" /> 속성을 지속시켜야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 `ShouldSerialize` 메서드가 때문에 제공 되는 <xref:System.Windows.Controls.ContentControl.Content%2A> 속성 간단한 기본 값이 없는 합니다. 이 메서드는 속성이 기본값에서 변경 되었는지 여부를 나타냅니다. 에 대 한 디자이너를 하거나 개발 하는 경우 일반적으로이 메서드를 호출는 <xref:System.Windows.Controls.ContentControl> 포함 하는 사용자 고유의 컨트롤을 개발 하거나는 <xref:System.Windows.Controls.ContentControl>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentControl.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">자식으로 추가할 개체입니다.</param>
        <summary>이 형식 또는 멤버는 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentControl.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">개체에 추가할 문자열입니다.</param>
        <summary>이 형식 또는 멤버는 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>