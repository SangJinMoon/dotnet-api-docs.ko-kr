<Type Name="HeaderedItemsControl" FullName="System.Windows.Controls.HeaderedItemsControl">
  <TypeSignature Language="C#" Value="public class HeaderedItemsControl : System.Windows.Controls.ItemsControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HeaderedItemsControl extends System.Windows.Controls.ItemsControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.HeaderedItemsControl" />
  <TypeSignature Language="VB.NET" Value="Public Class HeaderedItemsControl&#xA;Inherits ItemsControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class HeaderedItemsControl : System::Windows::Controls::ItemsControl" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ItemsControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Header")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Menu)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4c58d-101">여러 항목과 머리글이 들어 있는 컨트롤을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-101">Represents a control that contains multiple items and has a header.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c58d-102">머리글 (또는 제목)을 포함 하는 컨트롤을 만들려면이 클래스를 사용 하 고 여러 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-102">Use this class to create a control that contains a heading (or title) and multiple items.</span></span> <span data-ttu-id="4c58d-103"><xref:System.Windows.Controls.HeaderedItemsControl.Header%2A?displayProperty=nameWithType> 속성 형식일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-103">The <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A?displayProperty=nameWithType> property can be any type.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="4c58d-104"> 상속 하는 세 컨트롤을 발송 <xref:System.Windows.Controls.HeaderedItemsControl>:</span><span class="sxs-lookup"><span data-stu-id="4c58d-104"> ships three controls that inherit from <xref:System.Windows.Controls.HeaderedItemsControl>:</span></span>  
  
-   <xref:System.Windows.Controls.MenuItem>  
  
-   <xref:System.Windows.Controls.ToolBar>  
  
-   <xref:System.Windows.Controls.TreeViewItem>  
  
 <span data-ttu-id="4c58d-105">A <xref:System.Windows.Controls.HeaderedItemsControl> 에 제한 된 기본 스타일입니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-105">A <xref:System.Windows.Controls.HeaderedItemsControl> has a limited default style.</span></span> <span data-ttu-id="4c58d-106">만들려는 <xref:System.Windows.Controls.HeaderedItemsControl> 사용자 지정 모양을 만들 새 <xref:System.Windows.Controls.ControlTemplate>합니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-106">To create a <xref:System.Windows.Controls.HeaderedItemsControl> with a custom appearance, create a new <xref:System.Windows.Controls.ControlTemplate>.</span></span>  
  
 <span data-ttu-id="4c58d-107">설정의 <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> 속성의 레이블을 지정 하는 <xref:System.Windows.Controls.HeaderedItemsControl>합니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-107">Set the <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> property to specify the label of the <xref:System.Windows.Controls.HeaderedItemsControl>.</span></span>  <span data-ttu-id="4c58d-108"><xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> 모든 종류의 개체 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-108"><xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> can be any type of object.</span></span>  <span data-ttu-id="4c58d-109">설정의 <xref:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate%2A> 속성을 한 <xref:System.Windows.DataTemplate> 헤더를 사용자 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-109">Set the <xref:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate%2A> property to a <xref:System.Windows.DataTemplate> to customize the header.</span></span>  <span data-ttu-id="4c58d-110">데이터 템플릿에 대한 자세한 내용은 [데이터 템플릿 개요](~/docs/framework/wpf/data/data-templating-overview.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="4c58d-110">For more information about data templates, see [Data Templating Overview](~/docs/framework/wpf/data/data-templating-overview.md).</span></span>  
  
 <span data-ttu-id="4c58d-111">종속성 속성을이 컨트롤은 컨트롤의 기본 스타일으로 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-111">Dependency properties for this control might be set by the control’s default style.</span></span>  <span data-ttu-id="4c58d-112">기본 스타일 속성은 응용 프로그램에이 컨트롤이 표시 하는 경우 속성이 기본값에서 변경 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-112">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="4c58d-113">기본 스타일 응용 프로그램이 실행 중인 때 사용 되는 데스크톱 테마에 따라 결정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-113">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="4c58d-114">자세한 내용은 참조 [기본 WPF 테마](http://go.microsoft.com/fwlink/?LinkID=158252)합니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-114">For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c58d-115">다음 예제에서는 <xref:System.Windows.Controls.TreeViewItem>합니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-115">The following example creates a <xref:System.Windows.Controls.TreeViewItem>.</span></span> <span data-ttu-id="4c58d-116"><xref:System.Windows.Controls.TreeView> 컨트롤 포함 하는 하나의 <xref:System.Windows.Controls.TreeViewItem>, 레이블이 있는 `TreeViewItem 1`, 다음 항목이 및:</span><span class="sxs-lookup"><span data-stu-id="4c58d-116">The <xref:System.Windows.Controls.TreeView> control contains a single <xref:System.Windows.Controls.TreeViewItem>, which is labeled `TreeViewItem 1`, and has the following items:</span></span>  
  
-   <span data-ttu-id="4c58d-117">문자열</span><span class="sxs-lookup"><span data-stu-id="4c58d-117">A string.</span></span>  
  
-   <span data-ttu-id="4c58d-118"><xref:System.DateTime> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-118">A <xref:System.DateTime> object.</span></span>  
  
-   <span data-ttu-id="4c58d-119">A <xref:System.Windows.Controls.TreeViewItem> 포함 된 개체는 <xref:System.Windows.Shapes.Rectangle> 에 해당 <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-119">A <xref:System.Windows.Controls.TreeViewItem> object that contains a <xref:System.Windows.Shapes.Rectangle> in its <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A>.</span></span>  
  
-   <span data-ttu-id="4c58d-120">A <xref:System.Windows.Controls.TreeViewItem> 개체 <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> 속성이로 설정 되는 <xref:System.Windows.Controls.StackPanel> 두 개체를 포함 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-120">A <xref:System.Windows.Controls.TreeViewItem> object whose <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> property is set to a <xref:System.Windows.Controls.StackPanel> that contains two objects.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4c58d-121">이 예에서는 명시적으로 만듭니다. <xref:System.Windows.Controls.TreeViewItem> 때문에 두 항목에 대 한 마지막 개체 <xref:System.Windows.Shapes.Rectangle> 및 <xref:System.Windows.Controls.StackPanel> 에서 상속 된 <xref:System.Windows.Media.Visual> 클래스.</span><span class="sxs-lookup"><span data-stu-id="4c58d-121">The example explicitly creates <xref:System.Windows.Controls.TreeViewItem> objects for the last two items because <xref:System.Windows.Shapes.Rectangle> and <xref:System.Windows.Controls.StackPanel> inherit from the <xref:System.Windows.Media.Visual> class.</span></span> <span data-ttu-id="4c58d-122">에 대 한 기본 스타일은 <xref:System.Windows.Controls.TreeViewItem> 설정는 <xref:System.Windows.Controls.Control.Foreground%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-122">The default style for the <xref:System.Windows.Controls.TreeViewItem> sets the <xref:System.Windows.Controls.Control.Foreground%2A> property.</span></span> <span data-ttu-id="4c58d-123">자식 개체에서 명시적으로 만든 속성 값 상속 <xref:System.Windows.Controls.TreeViewItem>, 이것이 일반적으로 원하는 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-123">The child objects inherit the property value from the explicitly created <xref:System.Windows.Controls.TreeViewItem>, which is typically the desired behavior.</span></span>  
  
 [!code-xaml[ControlContentOverviewSnippets#17](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlContentOverviewSnippets/CSharp/Window1.xaml#17)]  
  
 <span data-ttu-id="4c58d-124">다음 예제에서는 한 <xref:System.Windows.Controls.ControlTemplate> 에 대 한는 <xref:System.Windows.Controls.HeaderedItemsControl>합니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-124">The following example creates a <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.HeaderedItemsControl>.</span></span>  
  
 [!code-xaml[HeaderedItemsControl#HeaderedItemsControl_Style](~/samples/snippets/csharp/VS_Snippets_Wpf/HeaderedItemsControl/CSharp/Page1.xaml#headereditemscontrol_style)]  
[!code-xaml[HeaderedItemsControl#HeaderedItemsControl](~/samples/snippets/csharp/VS_Snippets_Wpf/HeaderedItemsControl/CSharp/Page1.xaml#headereditemscontrol)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HeaderedItemsControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.HeaderedItemsControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HeaderedItemsControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4c58d-125"><see cref="T:System.Windows.Controls.HeaderedItemsControl" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-125">Initializes a new instance of the <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasHeader">
      <MemberSignature Language="C#" Value="public bool HasHeader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasHeader" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.HeaderedItemsControl.HasHeader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasHeader As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasHeader { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4c58d-126">이 <see cref="T:System.Windows.Controls.HeaderedItemsControl" />에 머리글이 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-126">Gets a value that indicates whether this <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> has a header.</span></span></summary>
        <value>
          <span data-ttu-id="4c58d-127">컨트롤에 머리글이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-127"><see langword="true" /> if the control has a header; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="4c58d-128">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-128">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c58d-129">경우는 <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> 속성은 `null`,이 속성은 반환 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-129">If the <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> property is `null`, this property returns `false`.</span></span>  
  
<a name="dependencyPropertyInfo_HasHeader"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="4c58d-130">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="4c58d-130">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="4c58d-131">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="4c58d-131">Identifier field</span></span>|<xref:System.Windows.Controls.HeaderedItemsControl.HasHeaderProperty>|  
|<span data-ttu-id="4c58d-132">로 메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="4c58d-132">Metadata properties set to `true`</span></span>|<span data-ttu-id="4c58d-133">없음</span><span class="sxs-lookup"><span data-stu-id="4c58d-133">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="4c58d-134">다음 예제에서는 컨트롤 헤더에 있는지 확인 하려면이 속성을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-134">The following example shows how to use this property to determine whether the control has a header.</span></span>  
  
 [!code-csharp[HeaderedItemsControl#HeaderedItemsControl_HasHeader](~/samples/snippets/csharp/VS_Snippets_Wpf/HeaderedItemsControl/CSharp/Page1.xaml.cs#headereditemscontrol_hasheader)]
 [!code-vb[HeaderedItemsControl#HeaderedItemsControl_HasHeader](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HeaderedItemsControl/visualbasic/page1.xaml.vb#headereditemscontrol_hasheader)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasHeaderProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HasHeaderProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HasHeaderProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.HeaderedItemsControl.HasHeaderProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HasHeaderProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HasHeaderProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4c58d-135"><see cref="P:System.Windows.Controls.HeaderedItemsControl.HasHeader" /> 종속성 속성을 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-135">Identifies the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HasHeader" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Header">
      <MemberSignature Language="C#" Value="public object Header { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Header" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.HeaderedItemsControl.Header" />
      <MemberSignature Language="VB.NET" Value="Public Property Header As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Header { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4c58d-136">컨트롤의 레이블을 지정하는 항목을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-136">Gets or sets the item that labels the control.</span></span></summary>
        <value><span data-ttu-id="4c58d-137"><see cref="T:System.Windows.Controls.HeaderedItemsControl" />의 레이블을 지정하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-137">An object that labels the <see cref="T:System.Windows.Controls.HeaderedItemsControl" />.</span></span> <span data-ttu-id="4c58d-138">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-138">The default is <see langword="null" />.</span></span> <span data-ttu-id="4c58d-139">머리글은 문자열이나 <see cref="T:System.Windows.UIElement" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-139">A header can be a string or a <see cref="T:System.Windows.UIElement" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c58d-140">때문에 <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> 형식의 속성은 <xref:System.Object>, 넣을 수에 대 한 제한은 없습니다는 <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-140">Because the <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> property is of type <xref:System.Object>, there are no restrictions on what you can put in the <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A>.</span></span> <span data-ttu-id="4c58d-141"><xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> 하 여 표시 되는 <xref:System.Windows.Controls.ContentPresenter>에 <xref:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate%2A> 의 <xref:System.Windows.Controls.HeaderedItemsControl>합니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-141">The <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> is displayed by a <xref:System.Windows.Controls.ContentPresenter>, which is in the <xref:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate%2A> of the <xref:System.Windows.Controls.HeaderedItemsControl>.</span></span> <span data-ttu-id="4c58d-142">방식에 대 한 자세한 내용은 <xref:System.Windows.Controls.ContentPresenter> 표시는 <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A>, 참조 <xref:System.Windows.Controls.ContentPresenter>합니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-142">For more information about how the <xref:System.Windows.Controls.ContentPresenter> displays the <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A>, see <xref:System.Windows.Controls.ContentPresenter>.</span></span>  
  
<a name="xamlAttributeUsage_Header"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4c58d-143">XAML 특성 사용</span><span class="sxs-lookup"><span data-stu-id="4c58d-143">XAML Attribute Usage</span></span>  
  
```  
<object Header="headerString"/>  
```  
  
<a name="xamlPropertyElementUsage_Header"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="4c58d-144">XAML 속성 요소 사용</span><span class="sxs-lookup"><span data-stu-id="4c58d-144">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.Header>  
    <UIElement />  
  </object.Header>  
</object>  
  
```  
  
<a name="xamlValues_Header"></a>   
## <a name="xaml-values"></a><span data-ttu-id="4c58d-145">XAML 값</span><span class="sxs-lookup"><span data-stu-id="4c58d-145">XAML Values</span></span>  
 <span data-ttu-id="4c58d-146">*headerString*</span><span class="sxs-lookup"><span data-stu-id="4c58d-146">*headerString*</span></span>  
 <span data-ttu-id="4c58d-147">제목으로 사용 하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-147">The string to use as a heading.</span></span>  
  
<a name="dependencyPropertyInfo_Header"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="4c58d-148">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="4c58d-148">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="4c58d-149">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="4c58d-149">Identifier field</span></span>|<xref:System.Windows.Controls.HeaderedItemsControl.HeaderProperty>|  
|<span data-ttu-id="4c58d-150">로 메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="4c58d-150">Metadata properties set to `true`</span></span>|<span data-ttu-id="4c58d-151">없음</span><span class="sxs-lookup"><span data-stu-id="4c58d-151">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="4c58d-152">다음 예제에서는 만들고 헤더 템플릿을 사용 하 여 헤더의 모양을 지정 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-152">The following example shows how to create and use a header template to specify the appearance of the header.</span></span>  
  
 [!code-xaml[HeaderedItemsControl#HeaderedItemsControl_Style](~/samples/snippets/csharp/VS_Snippets_Wpf/HeaderedItemsControl/CSharp/Page1.xaml#headereditemscontrol_style)]  
[!code-xaml[HeaderedItemsControl#HeaderedItemsControl_Template1](~/samples/snippets/csharp/VS_Snippets_Wpf/HeaderedItemsControl/CSharp/Page1.xaml#headereditemscontrol_template1)]  
[!code-xaml[HeaderedItemsControl#HeaderedItemsControl_Template2](~/samples/snippets/csharp/VS_Snippets_Wpf/HeaderedItemsControl/CSharp/Page1.xaml#headereditemscontrol_template2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HeaderProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HeaderProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.HeaderedItemsControl.HeaderProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HeaderProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HeaderProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4c58d-153"><see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> 종속성 속성을 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-153">Identifies the <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderStringFormat">
      <MemberSignature Language="C#" Value="public string HeaderStringFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderStringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderStringFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HeaderStringFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4c58d-154"><see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> 속성이 문자열로 표시되는 경우 이 속성의 형식 지정 방법을 지정하는 합성 문자열을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-154">Gets or sets a composite string that specifies how to format the <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> property if it is displayed as a string.</span></span></summary>
        <value><span data-ttu-id="4c58d-155"><see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> 속성이 문자열로 표시되는 경우 이 속성의 형식 지정 방법을 지정하는 합성 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-155">A composite string that specifies how to format the <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> property if it is displayed as a string.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderStringFormatProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HeaderStringFormatProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HeaderStringFormatProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormatProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HeaderStringFormatProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HeaderStringFormatProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4c58d-156"><see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormat" /> 종속성 속성을 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-156">Identifies the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormat" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderTemplate As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DataTemplate ^ HeaderTemplate { System::Windows::DataTemplate ^ get(); void set(System::Windows::DataTemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4c58d-157">컨트롤 머리글의 내용을 표시하는 데 사용되는 템플릿을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-157">Gets or sets the template used to display the contents of the control's header.</span></span></summary>
        <value><span data-ttu-id="4c58d-158">컨트롤 머리글을 표시하는 데 사용되는 데이터 템플릿입니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-158">A data template used to display a control's header.</span></span> <span data-ttu-id="4c58d-159">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-159">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c58d-160">제목 사용자 지정 하는 <xref:System.Windows.Controls.HeaderedItemsControl>,이 속성을 설정는 <xref:System.Windows.DataTemplate>합니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-160">To customize the heading of the <xref:System.Windows.Controls.HeaderedItemsControl>, set this property to a <xref:System.Windows.DataTemplate>.</span></span> <span data-ttu-id="4c58d-161">데이터 템플릿에 대 한 자세한 내용은 참조 하십시오. [데이터 템플릿 개요](~/docs/framework/wpf/data/data-templating-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-161">For more information on data templates, see [Data Templating Overview](~/docs/framework/wpf/data/data-templating-overview.md).</span></span>  
  
<a name="xamlAttributeUsage_HeaderTemplate"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4c58d-162">XAML 특성 사용</span><span class="sxs-lookup"><span data-stu-id="4c58d-162">XAML Attribute Usage</span></span>  
  
```  
<object HeaderTemplate="{ResourceExtension TemplateResourceKey}"/>  
```  
  
<a name="xamlPropertyElementUsage_HeaderTemplate"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="4c58d-163">XAML 속성 요소 사용</span><span class="sxs-lookup"><span data-stu-id="4c58d-163">XAML Property Element Usage</span></span>  
  
<a name="xamlValues_HeaderTemplate"></a>   
## <a name="xaml-values"></a><span data-ttu-id="4c58d-164">XAML 값</span><span class="sxs-lookup"><span data-stu-id="4c58d-164">XAML Values</span></span>  
 <span data-ttu-id="4c58d-165">*ResourceExtension*</span><span class="sxs-lookup"><span data-stu-id="4c58d-165">*ResourceExtension*</span></span>  
 <span data-ttu-id="4c58d-166">다음 중 하나: `StaticResource`, 또는 `DynamicResource`합니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-166">One of the following: `StaticResource`, or `DynamicResource`.</span></span> <span data-ttu-id="4c58d-167">참조 [XAML 리소스](~/docs/framework/wpf/advanced/xaml-resources.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-167">See [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).</span></span>  
  
 <span data-ttu-id="4c58d-168">*TemplateResourceKey*</span><span class="sxs-lookup"><span data-stu-id="4c58d-168">*TemplateResourceKey*</span></span>  
 <span data-ttu-id="4c58d-169">요청 되는 템플릿을 식별 하는 키입니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-169">The key that identifies the template being requested.</span></span> <span data-ttu-id="4c58d-170">기존 리소스를이 키는 한 <xref:System.Windows.ResourceDictionary>합니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-170">The key refers to an existing resource in a <xref:System.Windows.ResourceDictionary>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4c58d-171">속성 요소 구문은 지원 되지만 권장 하지는 않습니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-171">Property element syntax is technically possible, but not recommended.</span></span> <span data-ttu-id="4c58d-172">참조 [인라인 스타일 및 템플릿](~/docs/framework/wpf/advanced/inline-styles-and-templates.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-172">See [Inline Styles and Templates](~/docs/framework/wpf/advanced/inline-styles-and-templates.md).</span></span> <span data-ttu-id="4c58d-173">바인딩을 사용 하 여 참조 하거나 가능 하지만 일반적이 지 않은 이기도 합니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-173">A binding reference using  or  is also possible, but uncommon.</span></span>  
  
<a name="dependencyPropertyInfo_HeaderTemplate"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="4c58d-174">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="4c58d-174">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="4c58d-175">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="4c58d-175">Identifier field</span></span>|<xref:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateProperty>|  
|<span data-ttu-id="4c58d-176">로 메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="4c58d-176">Metadata properties set to `true`</span></span>|<span data-ttu-id="4c58d-177">없음</span><span class="sxs-lookup"><span data-stu-id="4c58d-177">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="4c58d-178">다음 예제에서는 만들고 헤더 템플릿을 사용 하 여 헤더의 모양을 지정 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-178">The following example shows how to create and use a header template to specify the appearance of the header.</span></span>  
  
 [!code-xaml[HeaderedItemsControl#HeaderedItemsControl_Style](~/samples/snippets/csharp/VS_Snippets_Wpf/HeaderedItemsControl/CSharp/Page1.xaml#headereditemscontrol_style)]  
[!code-xaml[HeaderedItemsControl#HeaderedItemsControl_Template1](~/samples/snippets/csharp/VS_Snippets_Wpf/HeaderedItemsControl/CSharp/Page1.xaml#headereditemscontrol_template1)]  
[!code-xaml[HeaderedItemsControl#HeaderedItemsControl_Template2](~/samples/snippets/csharp/VS_Snippets_Wpf/HeaderedItemsControl/CSharp/Page1.xaml#headereditemscontrol_template2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.HierarchicalDataTemplate" />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HeaderTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HeaderTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HeaderTemplateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HeaderTemplateProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4c58d-179"><see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" /> 종속성 속성을 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-179">Identifies the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataTemplateSelector HeaderTemplateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.DataTemplateSelector HeaderTemplateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderTemplateSelector As DataTemplateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::DataTemplateSelector ^ HeaderTemplateSelector { System::Windows::Controls::DataTemplateSelector ^ get(); void set(System::Windows::Controls::DataTemplateSelector ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4c58d-180">각 항목의 머리글을 표시하는 데 사용되는 템플릿에 대한 사용자 지정 선택 논리를 제공하는 개체를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-180">Gets or sets the object that provides custom selection logic for a template used to display the header of each item.</span></span></summary>
        <value><span data-ttu-id="4c58d-181">데이터 템플릿 선택기입니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-181">A data template selector.</span></span> <span data-ttu-id="4c58d-182">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-182">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c58d-183">만들 때는 일반적으로 <xref:System.Windows.Controls.DataTemplateSelector> 여러 개 설치한 경우 <xref:System.Windows.DataTemplate> 동일한 유형의 개체에 대 한 원하는 선택 하기 위한 자체 논리를 제공 하는 <xref:System.Windows.DataTemplate> 각 데이터 개체의 속성을 기준으로 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-183">Typically, you create a <xref:System.Windows.Controls.DataTemplateSelector> when you have more than one <xref:System.Windows.DataTemplate> for the same type of objects and you want to supply your own logic to choose a <xref:System.Windows.DataTemplate> to apply based on the properties of each data object.</span></span> <span data-ttu-id="4c58d-184">다른 개체가 여러 개 있는 경우 형식를 설정할 수는 <xref:System.Windows.DataTemplate.DataType%2A> 속성에는 <xref:System.Windows.DataTemplate>합니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-184">Note that if you have objects of different types you can set the <xref:System.Windows.DataTemplate.DataType%2A> property on the <xref:System.Windows.DataTemplate>.</span></span> <span data-ttu-id="4c58d-185">이렇게 하면를 만들 필요 없이 경우는 <xref:System.Windows.Controls.DataTemplateSelector>합니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-185">If you do that, then there is no need to create a <xref:System.Windows.Controls.DataTemplateSelector>.</span></span> <span data-ttu-id="4c58d-186">또한 서로 다른 속성과 같지만 동일한 유형의 개체를 사용 하도록 설정한 경우을 고려해볼 수도 있습니다를 사용 하는 <xref:System.Windows.DataTrigger> 또는 데이터 변환기입니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-186">Furthermore, if you have objects of the same type but with different properties, you can also consider using a <xref:System.Windows.DataTrigger> or a data converter.</span></span> <span data-ttu-id="4c58d-187">자세한 내용은 [데이터 템플릿 개요](~/docs/framework/wpf/data/data-templating-overview.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="4c58d-187">For more information, see [Data Templating Overview](~/docs/framework/wpf/data/data-templating-overview.md).</span></span>  
  
 <span data-ttu-id="4c58d-188">템플릿 선택기를 만들려면에서 상속 되는 클래스를 만듭니다 <xref:System.Windows.Controls.DataTemplateSelector> 재정의 <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="4c58d-188">To create a template selector, create a class that inherits from <xref:System.Windows.Controls.DataTemplateSelector> and override the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method.</span></span> <span data-ttu-id="4c58d-189">클래스를 정의한 후 클래스의 인스턴스를 요소의 템플릿 선택기 속성에 할당할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-189">After your class is defined, you can assign an instance of the class to the template selector property of your element.</span></span>  
  
 <span data-ttu-id="4c58d-190">모두는 <xref:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector%2A> 및 <xref:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate%2A> 속성이 설정 되어, 템플릿 선택기 속성은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-190">If both the <xref:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector%2A> and the <xref:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate%2A> properties are set, the template selector property is ignored.</span></span>  
  
<a name="xamlAttributeUsage_HeaderTemplateSelector"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4c58d-191">XAML 특성 사용</span><span class="sxs-lookup"><span data-stu-id="4c58d-191">XAML Attribute Usage</span></span>  
  
```  
<object HeaderTemplateSelector="{ResourceExtension DataTemplateSelectorClassKey}"/>  
```  
  
<a name="xamlPropertyElementUsage_HeaderTemplateSelector"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="4c58d-192">XAML 속성 요소 사용</span><span class="sxs-lookup"><span data-stu-id="4c58d-192">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.HeaderTemplateSelector>  
    <MyDataTemplateSelectorImplementation .../>  
  </object.HeaderTemplateSelector>  
</object>  
```  
  
<a name="xamlValues_HeaderTemplateSelector"></a>   
## <a name="xaml-values"></a><span data-ttu-id="4c58d-193">XAML 값</span><span class="sxs-lookup"><span data-stu-id="4c58d-193">XAML Values</span></span>  
 <span data-ttu-id="4c58d-194">*MyDataTemplateSelectorImplementation*</span><span class="sxs-lookup"><span data-stu-id="4c58d-194">*MyDataTemplateSelectorImplementation*</span></span>  
 <span data-ttu-id="4c58d-195">클래스에서 파생 <xref:System.Windows.Controls.DataTemplateSelector> 구현 하는 실제 <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> 재정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-195">A class derived from <xref:System.Windows.Controls.DataTemplateSelector> that implements a practical <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> override.</span></span> <span data-ttu-id="4c58d-196">사용자 지정 클래스를 매핑하는 방법에 대 한 정보를 참조 하십시오. [XAML 네임 스페이스 및 WPF XAML에 대 한 매핑 Namespace](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-196">For information about how to map your custom class, see [XAML Namespaces and Namespace Mapping for WPF XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).</span></span>  
  
 <span data-ttu-id="4c58d-197">*ResourceExtension*</span><span class="sxs-lookup"><span data-stu-id="4c58d-197">*ResourceExtension*</span></span>  
 <span data-ttu-id="4c58d-198">다음 중 하나: `StaticResource`, 또는 `DynamicResource`합니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-198">One of the following: `StaticResource`, or `DynamicResource`.</span></span> <span data-ttu-id="4c58d-199">참조 [XAML 리소스](~/docs/framework/wpf/advanced/xaml-resources.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-199">See [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).</span></span>  
  
 <span data-ttu-id="4c58d-200">*DataTemplateSelectorClassKey*</span><span class="sxs-lookup"><span data-stu-id="4c58d-200">*DataTemplateSelectorClassKey*</span></span>  
 <span data-ttu-id="4c58d-201">요청 된 선택기 구현을 식별 하는 키입니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-201">The key that identifies the selector implementation being requested.</span></span> <span data-ttu-id="4c58d-202">실제 구현 하는 파생된 클래스가 키는 <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> 재정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-202">The key refers to a derived class that implements a practical <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> override.</span></span> <span data-ttu-id="4c58d-203">사용자 지정 클래스를 매핑하는 방법에 대 한 정보를 참조 하십시오. [XAML 네임 스페이스 및 WPF XAML에 대 한 매핑 Namespace](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-203">For information about how to map your custom class, see [XAML Namespaces and Namespace Mapping for WPF XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).</span></span> <span data-ttu-id="4c58d-204">인스턴스를 프로그래밍 방식으로 추가할 수 있습니다 프로그램 <xref:System.Windows.Controls.DataTemplateSelector> 리소스 사전에 리소스로 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-204">You can also programmatically add an instance of your <xref:System.Windows.Controls.DataTemplateSelector> class as a resource to a resource dictionary.</span></span>  
  
<a name="dependencyPropertyInfo_HeaderTemplateSelector"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="4c58d-205">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="4c58d-205">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="4c58d-206">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="4c58d-206">Identifier field</span></span>|<xref:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelectorProperty>|  
|<span data-ttu-id="4c58d-207">로 메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="4c58d-207">Metadata properties set to `true`</span></span>|<span data-ttu-id="4c58d-208">없음</span><span class="sxs-lookup"><span data-stu-id="4c58d-208">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplateSelectorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HeaderTemplateSelectorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HeaderTemplateSelectorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelectorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HeaderTemplateSelectorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HeaderTemplateSelectorProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4c58d-209"><see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector" /> 종속성 속성을 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-209">Identifies the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.HeaderedItemsControl.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4c58d-210"><see cref="T:System.Windows.Controls.HeaderedItemsControl" />의 논리적 자식 요소에 대한 열거자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-210">Gets an enumerator to the logical child elements of the <see cref="T:System.Windows.Controls.HeaderedItemsControl" />.</span></span></summary>
        <value><span data-ttu-id="4c58d-211">열거자입니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-211">An enumerator.</span></span> <span data-ttu-id="4c58d-212">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-212">The default is <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHeaderChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnHeaderChanged (object oldHeader, object newHeader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHeaderChanged(object oldHeader, object newHeader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.HeaderedItemsControl.OnHeaderChanged(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHeaderChanged (oldHeader As Object, newHeader As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHeaderChanged(System::Object ^ oldHeader, System::Object ^ newHeader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldHeader" Type="System.Object" />
        <Parameter Name="newHeader" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="oldHeader"><span data-ttu-id="4c58d-213"><see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> 속성의 이전 값입니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-213">The old value of the <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> property.</span></span></param>
        <param name="newHeader"><span data-ttu-id="4c58d-214"><see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> 속성의 새 값입니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-214">The new value of the <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> property.</span></span></param>
        <summary><span data-ttu-id="4c58d-215"><see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" />의 <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> 속성이 변경되면 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-215">Called when the <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> property of a <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHeaderStringFormatChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnHeaderStringFormatChanged (string oldHeaderStringFormat, string newHeaderStringFormat);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHeaderStringFormatChanged(string oldHeaderStringFormat, string newHeaderStringFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.HeaderedItemsControl.OnHeaderStringFormatChanged(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHeaderStringFormatChanged (oldHeaderStringFormat As String, newHeaderStringFormat As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHeaderStringFormatChanged(System::String ^ oldHeaderStringFormat, System::String ^ newHeaderStringFormat);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldHeaderStringFormat" Type="System.String" />
        <Parameter Name="newHeaderStringFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="oldHeaderStringFormat"><span data-ttu-id="4c58d-216"><see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormat" /> 속성의 이전 값입니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-216">The old value of the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormat" /> property.</span></span></param>
        <param name="newHeaderStringFormat"><span data-ttu-id="4c58d-217"><see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormat" /> 속성의 새 값입니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-217">The new value of the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormat" /> property.</span></span></param>
        <summary><span data-ttu-id="4c58d-218"><see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormat" /> 속성이 변경되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-218">Occurs when the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormat" /> property changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHeaderTemplateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnHeaderTemplateChanged (System.Windows.DataTemplate oldHeaderTemplate, System.Windows.DataTemplate newHeaderTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHeaderTemplateChanged(class System.Windows.DataTemplate oldHeaderTemplate, class System.Windows.DataTemplate newHeaderTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.HeaderedItemsControl.OnHeaderTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHeaderTemplateChanged (oldHeaderTemplate As DataTemplate, newHeaderTemplate As DataTemplate)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHeaderTemplateChanged(System::Windows::DataTemplate ^ oldHeaderTemplate, System::Windows::DataTemplate ^ newHeaderTemplate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldHeaderTemplate" Type="System.Windows.DataTemplate" />
        <Parameter Name="newHeaderTemplate" Type="System.Windows.DataTemplate" />
      </Parameters>
      <Docs>
        <param name="oldHeaderTemplate"><span data-ttu-id="4c58d-219"><see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" /> 속성의 이전 값입니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-219">The old value of the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" /> property.</span></span></param>
        <param name="newHeaderTemplate"><span data-ttu-id="4c58d-220"><see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" /> 속성의 새 값입니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-220">The new value of the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" /> property.</span></span></param>
        <summary><span data-ttu-id="4c58d-221"><see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" /> 속성이 변경되면 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-221">Called when the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" /> property changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHeaderTemplateSelectorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnHeaderTemplateSelectorChanged (System.Windows.Controls.DataTemplateSelector oldHeaderTemplateSelector, System.Windows.Controls.DataTemplateSelector newHeaderTemplateSelector);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHeaderTemplateSelectorChanged(class System.Windows.Controls.DataTemplateSelector oldHeaderTemplateSelector, class System.Windows.Controls.DataTemplateSelector newHeaderTemplateSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.HeaderedItemsControl.OnHeaderTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHeaderTemplateSelectorChanged (oldHeaderTemplateSelector As DataTemplateSelector, newHeaderTemplateSelector As DataTemplateSelector)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHeaderTemplateSelectorChanged(System::Windows::Controls::DataTemplateSelector ^ oldHeaderTemplateSelector, System::Windows::Controls::DataTemplateSelector ^ newHeaderTemplateSelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldHeaderTemplateSelector" Type="System.Windows.Controls.DataTemplateSelector" />
        <Parameter Name="newHeaderTemplateSelector" Type="System.Windows.Controls.DataTemplateSelector" />
      </Parameters>
      <Docs>
        <param name="oldHeaderTemplateSelector"><span data-ttu-id="4c58d-222"><see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector" /> 속성의 이전 값입니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-222">The old value of the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector" /> property.</span></span></param>
        <param name="newHeaderTemplateSelector"><span data-ttu-id="4c58d-223"><see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector" /> 속성의 새 값입니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-223">The new value of the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector" /> property.</span></span></param>
        <summary><span data-ttu-id="4c58d-224"><see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector" /> 속성이 변경되면 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-224">Called when the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector" /> property changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.HeaderedItemsControl.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4c58d-225"><see cref="T:System.Windows.Controls.HeaderedItemsControl" /> 개체의 문자열 표현을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-225">Returns the string representation of a <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> object.</span></span></summary>
        <returns><span data-ttu-id="4c58d-226">이 개체를 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-226">A string that represents this object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c58d-227">헤더 속성 및의 항목 수에 대 한 정보를 포함 하는 문자열을 반환 하는이 메서드는 <xref:System.Windows.Controls.ItemsControl.Items%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="4c58d-227">This method returns a string that contains information about the header property and the number of items in the <xref:System.Windows.Controls.ItemsControl.Items%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>