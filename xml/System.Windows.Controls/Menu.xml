<Type Name="Menu" FullName="System.Windows.Controls.Menu">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c4aa4d39241c73e92f24879fe451abe1b072b8f8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36366107" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Menu : System.Windows.Controls.Primitives.MenuBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Menu extends System.Windows.Controls.Primitives.MenuBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Menu" />
  <TypeSignature Language="VB.NET" Value="Public Class Menu&#xA;Inherits MenuBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class Menu : System::Windows::Controls::Primitives::MenuBase" />
  <TypeSignature Language="F#" Value="type Menu = class&#xA;    inherit MenuBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.MenuBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a Windows menu control that enables you to hierarchically organize elements associated with commands and event handlers.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Menu> 컨트롤에 명령 또는 응용 프로그램에 대 한 옵션을 지정 하는 항목의 목록을 표시 합니다. 일반적으로 메뉴 항목을 클릭 하면 하위 메뉴를 엽니다 하거나 응용 프로그램이 명령을 실행 합니다.  
  
 <xref:System.Windows.Controls.Menu> 이 <xref:System.Windows.Controls.ItemsControl>합니다 (예: 문자열, 이미지 또는 패널) 모든 형식의 개체의 컬렉션을 포함할 수 있다는 의미입니다. 자세한 내용은 <xref:System.Windows.Controls.ItemsControl> 클래스를 참조하세요. <xref:System.Windows.Controls.MenuItem> 는 가장 일반적인 유형의 항목에는 <xref:System.Windows.Controls.Menu>합니다. A <xref:System.Windows.Controls.MenuItem> 자식 항목이 포함 될 수 있습니다. 부모를 선택 하면 하위 메뉴에 자식 항목이 나타납니다 <xref:System.Windows.Controls.MenuItem>합니다.  
  
## <a name="customizing-the-menu-control"></a>메뉴 컨트롤을 사용자 지정  
 여러 동일한 속성 설정을 적용 하려면 <xref:System.Windows.Controls.Menu> 컨트롤을 사용 하 여는 <xref:System.Windows.FrameworkElement.Style%2A> 속성입니다. 기본값을 수정할 수 <xref:System.Windows.Controls.ControlTemplate> 고유한 모양을 제어할 수 있습니다. 만들기에 대 한 자세한 내용은 <xref:System.Windows.Controls.ControlTemplate>, 참조 [는 ControlTemplate을 만들어 기존 컨트롤의 모양 사용자 지정](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)합니다.  부분 및 관련 된 상태를 보려면는 <xref:System.Windows.Controls.Menu>, 참조 [메뉴 스타일 및 템플릿](~/docs/framework/wpf/controls/menu-styles-and-templates.md)합니다.  
  
 종속성 속성을이 컨트롤은 컨트롤의 기본 스타일으로 설정할 수 있습니다.  기본 스타일 속성은 응용 프로그램에이 컨트롤이 표시 하는 경우 속성이 기본값에서 변경 될 수 있습니다. 기본 스타일 응용 프로그램이 실행 중인 때 사용 되는 데스크톱 테마에 따라 결정 됩니다.  자세한 내용은 참조 [기본 WPF 테마](http://go.microsoft.com/fwlink/?LinkID=158252)합니다.  
  
> [!NOTE]
>  시각적 속성을 설정만 영향을 미칠 경우 해당 속성을 둘 다에 <xref:System.Windows.Controls.Menu> 컨트롤의 기본 템플릿에 하 고 사용 하 여 설정 됩니다는 합니다. "변경의 시각적 구조의 정도 제어" 섹션의 시각적 속성 목록을 찾을 수 있습니다 [는 ControlTemplate을 만들어 기존 컨트롤의 모양 사용자 지정](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.MenuItem" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Menu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Menu();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Menu" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleMouseButton">
      <MemberSignature Language="C#" Value="protected override void HandleMouseButton (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HandleMouseButton(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.HandleMouseButton(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HandleMouseButton (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HandleMouseButton(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.HandleMouseButton : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="menu.HandleMouseButton e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</param>
        <summary>Called when any mouse button is pressed or released.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMainMenu">
      <MemberSignature Language="C#" Value="public bool IsMainMenu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMainMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Menu.IsMainMenu" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMainMenu As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMainMenu { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsMainMenu : bool with get, set" Usage="System.Windows.Controls.Menu.IsMainMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether this <see cref="T:System.Windows.Controls.Menu" /> receives a main menu activation notification.</summary>
        <value>
          <see langword="true" /> 메뉴 주 메뉴 활성화 알림;를 수신 하는 경우 그렇지 않으면 <see langword="false" />합니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 여러 개 있는 경우 <xref:System.Windows.Controls.Menu> 페이지, 컨트롤 <xref:System.Windows.Controls.Menu> alt 키 또는 F10 키 알림을 수신 하지 해야 하는 컨트롤이 속성을 설정 해야 `false`합니다.  
  
<a name="dependencyPropertyInfo_IsMainMenu"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Controls.Menu.IsMainMenuProperty>|  
|로 메타 데이터 속성 설정 `true`|없음|  
  
   
  
## Examples  
 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Controls.Menu.IsMainMenu%2A> 만들 속성은 <xref:System.Windows.Controls.Menu> 활성화 알림을 수신 하지 않습니다.  
  
 [!code-xaml[MenuStylesSnippet#MenuIsMainMenu](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuStylesSnippet/CS/pane1.xaml#menuismainmenu)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMainMenuProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMainMenuProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMainMenuProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Menu.IsMainMenuProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMainMenuProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMainMenuProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMainMenuProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Menu.IsMainMenuProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Controls.Menu.IsMainMenu" /> dependency property.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="menu.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Provides an appropriate <see cref="T:System.Windows.Automation.Peers.MenuAutomationPeer" /> implementation for this control, as part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] automation infrastructure.</summary>
        <returns>The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInitialized">
      <MemberSignature Language="C#" Value="protected override void OnInitialized (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInitialized(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.OnInitialized(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInitialized (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInitialized(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInitialized : EventArgs -&gt; unit" Usage="menu.OnInitialized e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        <summary>Called when the <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> property is set to <see langword="true" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="menu.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</param>
        <summary>Responds to the <see cref="E:System.Windows.ContentElement.KeyDown" /> event.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected override void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit" Usage="menu.OnTextInput e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">The event data.</param>
        <summary>Handles the <see cref="E:System.Windows.UIElement.TextInput" /> routed event that occurs when the menu receives text input from any device.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 구현은 처리 상태를 변경 되지 않습니다 (의 <xref:System.Windows.RoutedEventArgs.Handled%2A> 속성)의 <xref:System.Windows.UIElement.TextInput> 이벤트 데이터입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />, 항상 기본 구현을 호출 프로그램 <see cref="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" /> 구현 합니다. 기본 구현을 호출 하지 않으면 최종 클래스의 런타임 동작을 변경할 수는 클래스 처리기를 사용 하 여 이벤트 처리에서 기본 클래스를 방지 합니다. 요구 사항에 따라 앞 이나 뒤를 별도로 처리 하는 기본 구현을 호출할 수 있습니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.PrepareContainerForItemOverride : System.Windows.DependencyObject * obj -&gt; unit" Usage="menu.PrepareContainerForItemOverride (element, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">The element used to display the specified item.</param>
        <param name="item">The item to display.</param>
        <summary>Prepares the specified element to display the specified item.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 요소를 준비할 때는 수 바인딩 설정 스타일 적용을 포함 등에입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>