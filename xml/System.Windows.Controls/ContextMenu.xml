<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ContextMenu.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53fc8d1b2ad864f2300bdb424f7167e6b800e7c96.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3fc8d1b2ad864f2300bdb424f7167e6b800e7c96</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Controls.ContextMenu">
          <source>Represents a pop-up menu that enables a control to expose functionality that is specific to the context of the control.</source>
          <target state="translated">컨트롤에서 해당 컨트롤의 컨텍스트에 고유한 기능을 노출할 수 있도록 하는 팝업 메뉴를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ContextMenu">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> is an <ph id="ph2">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, which means it can contain a collection of objects of any type (such as string, image, or panel).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> 이 <ph id="ph2">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>합니다 (예: 문자열, 이미지 또는 패널) 모든 형식의 개체의 컬렉션을 포함할 수 있다는 의미입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ContextMenu">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> class.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> 클래스를 참조하세요.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ContextMenu">
          <source>The properties of the <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> class are used to define the position and behavior of the <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph>.</source>
          <target state="translated">속성은 <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> 클래스는 위치와의 동작을 정의 하는 데 사용 되는 <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ContextMenu">
          <source>A <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> can have a <ph id="ph3">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> 가질 수 있습니다는 <ph id="ph3">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ContextMenu">
          <source>If you assign a <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> to the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType&gt;</ph> property, the <ph id="ph4">&lt;xref:System.Windows.Controls.ContextMenuService&gt;</ph> class handles context menu operations in response to user interaction.</source>
          <target state="translated">할당 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType&gt;</ph> 속성에는 <ph id="ph4">&lt;xref:System.Windows.Controls.ContextMenuService&gt;</ph> 클래스 사용자 상호 작용에 대 한 응답으로 상황에 맞는 메뉴 작업을 처리 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ContextMenu">
          <source>Part of the work the <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenuService&gt;</ph> does is opening the <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> when the user clicks the right mouse button over the control.</source>
          <target state="translated">작업의 일부는 <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenuService&gt;</ph> 않습니다을 여는 <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> 컨트롤 위에 마우스 오른쪽 단추를 클릭할 때입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ContextMenu">
          <source>The following properties are defined by the <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenuService&gt;</ph> classes.</source>
          <target state="translated">다음 속성을 정의한는 <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenuService&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ContextMenu">
          <source>If any of these properties are set on both <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> and the <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenuService&gt;</ph>, the property value from the <ph id="ph3">&lt;xref:System.Windows.Controls.ContextMenuService&gt;</ph> is used.</source>
          <target state="translated">둘 다에서 이러한 속성 중 하나라도 설정 <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenuService&gt;</ph>, 속성 값을는 <ph id="ph3">&lt;xref:System.Windows.Controls.ContextMenuService&gt;</ph> 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ContextMenu">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> is automatically placed inside a <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> control.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> 안에 자동으로 배치 되는 <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ContextMenu">
          <source>This behavior cannot be changed.</source>
          <target state="translated">이 동작을 변경할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ContextMenu">
          <source>Customizing the ContextMenu Control</source>
          <target state="translated">ContextMenu 컨트롤 사용자 지정</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ContextMenu">
          <source>To apply the same property settings to multiple <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> controls, use the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Style%2A&gt;</ph> property.</source>
          <target state="translated">여러 동일한 속성 설정을 적용 하려면 <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> 컨트롤을 사용 하 여는 <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Style%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ContextMenu">
          <source>You can modify the default <ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> to give the control a unique appearance.</source>
          <target state="translated">기본값을 수정할 수 <ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> 고유한 모양을 제어할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ContextMenu">
          <source>For more information about creating a <ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>, see <bpt id="p1">[</bpt>Customizing the Appearance of an Existing Control by Creating a ControlTemplate<ept id="p1">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>.</source>
          <target state="translated">만들기에 대 한 자세한 내용은 <ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>, 참조 <bpt id="p1">[</bpt>는 ControlTemplate을 만들어 기존 컨트롤의 모양 사용자 지정<ept id="p1">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ContextMenu">
          <source>To see the parts and states that are specific to the <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph>, see <bpt id="p1">[</bpt>ContextMenu Styles and Templates<ept id="p1">](~/docs/framework/wpf/controls/contextmenu-styles-and-templates.md)</ept>.</source>
          <target state="translated">부분 및 관련 된 상태를 보려면는 <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph>, 참조 <bpt id="p1">[</bpt>ContextMenu 스타일 및 템플릿<ept id="p1">](~/docs/framework/wpf/controls/contextmenu-styles-and-templates.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ContextMenu">
          <source>Dependency properties for this control might be set by the control’s default style.</source>
          <target state="translated">종속성 속성을이 컨트롤은 컨트롤의 기본 스타일으로 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ContextMenu">
          <source>If a property is set by a default style, the property might change from its default value when the control appears in the application.</source>
          <target state="translated">기본 스타일 속성은 응용 프로그램에이 컨트롤이 표시 하는 경우 속성이 기본값에서 변경 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ContextMenu">
          <source>The default style is determined by which desktop theme is used when the application is running.</source>
          <target state="translated">기본 스타일 응용 프로그램이 실행 중인 때 사용 되는 데스크톱 테마에 따라 결정 됩니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ContextMenu">
          <source>For more information, see <bpt id="p1">[</bpt>Default WPF Themes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=158252)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>기본 WPF 테마<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=158252)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ContextMenu">
          <source>Setting a visual property will only have an effect if that property is both present in <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> control's default template and is set by using a .</source>
          <target state="translated">시각적 속성을 설정만 영향을 미칠 경우 해당 속성을 둘 다에 <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> 컨트롤의 기본 템플릿에 하 고 사용 하 여 설정 됩니다는 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ContextMenu">
          <source>You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in <bpt id="p1">[</bpt>Customizing the Appearance of an Existing Control by Creating a ControlTemplate<ept id="p1">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>.</source>
          <target state="translated">"변경의 시각적 구조의 정도 제어" 섹션의 시각적 속성 목록을 찾을 수 있습니다 <bpt id="p1">[</bpt>는 ControlTemplate을 만들어 기존 컨트롤의 모양 사용자 지정<ept id="p1">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ContextMenu">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> that manipulates the text of a <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> 의 텍스트를 조작 하는 <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.ContextMenu">
          <source>The example demonstrates how to subscribe to and handle the events of <ph id="ph1">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph> objects in a <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph>.</source>
          <target state="translated">구독 하 고의 이벤트를 처리 하는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph> 개체에 <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ContextMenu.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ContextMenu" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.ContextMenu" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="E:System.Windows.Controls.ContextMenu.Closed">
          <source>Occurs when a particular instance of a <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ContextMenu" /&gt;</ph> closes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.ContextMenu" /&gt;</ph>의 특정 인스턴스가 닫힐 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.ContextMenu.Closed">
          <source>Routed Event Information</source>
          <target state="translated">라우팅 이벤트 정보</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.ContextMenu.Closed">
          <source>Identifier field</source>
          <target state="translated">식별자 필드</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.ContextMenu.Closed">
          <source>Routing strategy</source>
          <target state="translated">라우팅 전략</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.ContextMenu.Closed">
          <source>Bubbling</source>
          <target state="translated">버블링</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.ContextMenu.Closed">
          <source>Delegate</source>
          <target state="translated">대리자</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.ContextMenu.Closed">
          <source>The following example shows how use the <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> events: <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu.Opened&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Controls.ContextMenu.Closed&gt;</ph>.</source>
          <target state="translated">다음 방법을 보여 주는 예제는 <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> 이벤트: <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu.Opened&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Controls.ContextMenu.Closed&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.ContextMenu.ClosedEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Controls.ContextMenu.Closed" /&gt;</ph> routed event.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="E:System.Windows.Controls.ContextMenu.Closed" /&gt;</ph> 라우트된 이벤트를 식별합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback">
          <source>Gets or sets a callback that indicates where a <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ContextMenu" /&gt;</ph> should be placed on the screen.</source>
          <target state="translated">화면에서 <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ContextMenu" /&gt;</ph>가 배치되는 위치를 나타내는 콜백을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback">
          <source>A callback that specifies the location of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ContextMenu" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.ContextMenu" /&gt;</ph>의 위치를 지정하는 콜백입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu.Placement%2A&gt;</ph> property must be set to <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.PlacementMode.Custom&gt;</ph> for the callback delegate to be used.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu.Placement%2A&gt;</ph> 속성으로 설정 되어 있어야 <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.PlacementMode.Custom&gt;</ph> 사용할 콜백 대리자에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.CustomPopupPlacementCallback&gt;</ph> delegate returns an array of possible points that are defined with respect to the <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.CustomPopupPlacementCallback&gt;</ph> 대리자와 관련 하 여 정의 된 가능한 포인트의 배열을 반환 된 <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback">
          <source>When the context menu is displayed, a point is chosen that maximizes the amount of the <ph id="ph1">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph> window that is visible.</source>
          <target state="translated">크기를 최대화는 지점이 선택은 상황에 맞는 메뉴를 표시할 때는 <ph id="ph1">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph> 표시 되는 창입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback">
          <source>The behavior is the same as it is for the popup.</source>
          <target state="translated">동작 팝업의 경우와 같습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Specify a Custom Popup Position<ept id="p1">](~/docs/framework/wpf/controls/how-to-specify-a-custom-popup-position.md)</ept> and <bpt id="p2">[</bpt>Popup Placement Sample<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=160032)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: 사용자 지정 팝업 위치 지정<ept id="p1">](~/docs/framework/wpf/controls/how-to-specify-a-custom-popup-position.md)</ept> 및 <bpt id="p2">[</bpt>팝업 배치 샘플<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=160032)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback">
          <source>Dependency Property Information</source>
          <target state="translated">종속성 속성 정보</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback">
          <source>Identifier field</source>
          <target state="translated">식별자 필드</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">로 메타 데이터 속성 설정 <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback">
          <source>None</source>
          <target state="translated">없음</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallbackProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback" /&gt;</ph> dependency property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback" /&gt;</ph> 종속성 속성을 식별합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.ContextMenu.HandlesScrolling">
          <source>Gets a value that indicates whether the control supports scrolling.</source>
          <target state="translated">컨트롤에서 스크롤을 지원하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.HandlesScrolling">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">항상 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.HandlesScrolling">
          <source>If the control has a <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> in its style and has a custom keyboard scrolling behavior, <ph id="ph2">&lt;xref:System.Windows.Controls.ListBox.HandlesScrolling%2A&gt;</ph> should return <ph id="ph3">`true`</ph>.</source>
          <target state="translated">컨트롤에 있는 경우는 <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> 의 스타일에 스크롤 동작을 사용자 지정 키보드 있으며 <ph id="ph2">&lt;xref:System.Windows.Controls.ListBox.HandlesScrolling%2A&gt;</ph> 반환할지 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.ContextMenu.HasDropShadow">
          <source>Gets or sets a value that indicates whether the context menu appears with a dropped shadow.</source>
          <target state="translated">상황에 맞는 메뉴가 그림자와 함께 표시되는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.HasDropShadow">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the context menu appears with a dropped shadow; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">상황에 맞는 메뉴가 끌어 놓은 그림자와 함께 나타나면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.HasDropShadow">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.HasDropShadow">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> opens, the value is set to the value of <ph id="ph2">&lt;xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> 가 열립니다. 그러면 값의 값으로 설정 되어 <ph id="ph2">&lt;xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.HasDropShadow">
          <source>Setting this property to <ph id="ph1">`true`</ph> has no effect if the <ph id="ph2">&lt;xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType&gt;</ph> property is <ph id="ph3">`false`</ph>.</source>
          <target state="translated">이 속성을 설정 <ph id="ph1">`true`</ph> 경우 아무 효과가 <ph id="ph2">&lt;xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType&gt;</ph> 속성은 <ph id="ph3">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.HasDropShadow">
          <source>Dependency Property Information</source>
          <target state="translated">종속성 속성 정보</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.HasDropShadow">
          <source>Identifier field</source>
          <target state="translated">식별자 필드</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.HasDropShadow">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">로 메타 데이터 속성 설정 <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.HasDropShadow">
          <source>None</source>
          <target state="translated">없음</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.HasDropShadow">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu.HasDropShadow%2A&gt;</ph> property.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu.HasDropShadow%2A&gt;</ph> 속성을 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.ContextMenu.HasDropShadowProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ContextMenu.HasDropShadow" /&gt;</ph> dependency property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Controls.ContextMenu.HasDropShadow" /&gt;</ph> 종속성 속성을 식별합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.ContextMenu.HorizontalOffset">
          <source>Get or sets the horizontal distance between the target origin and the popup alignment point.</source>
          <target state="translated">대상 원점과 팝업 맞춤 지점 간의 가로 거리를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.HorizontalOffset">
          <source>The horizontal distance between the target origin and the popup alignment point.</source>
          <target state="translated">대상 원점과 팝업 맞춤 지점 간의 가로 거리입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.HorizontalOffset">
          <source>For information about the target origin and popup alignment point, see <bpt id="p1">[</bpt>Popup Placement Behavior<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>.</source>
          <target state="translated">대상 원점 및 팝업 맞춤 지점에 대 한 정보를 참조 하십시오. <bpt id="p1">[</bpt>팝업 배치 동작<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.HorizontalOffset">
          <source>The default is 0.</source>
          <target state="translated">기본값은 0입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.HorizontalOffset">
          <source>You can position a <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> by setting the <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.ContextMenu.Placement%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty&gt;</ph> properties.</source>
          <target state="translated">위치를 지정할 수는 <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> 설정 하 여는 <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.ContextMenu.Placement%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A&gt;</ph>, 및 <ph id="ph6">&lt;xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.HorizontalOffset">
          <source>These properties behave the same as they do for a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</source>
          <target state="translated">에 대 한 것과 동일 하 게 이러한 속성 동작는 <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.HorizontalOffset">
          <source>For more information, see <bpt id="p1">[</bpt>Popup Placement Behavior<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>Popup 배치 동작<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.HorizontalOffset">
          <source>Dependency Property Information</source>
          <target state="translated">종속성 속성 정보</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.HorizontalOffset">
          <source>Identifier field</source>
          <target state="translated">식별자 필드</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.HorizontalOffset">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">로 메타 데이터 속성 설정 <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.HorizontalOffset">
          <source>None</source>
          <target state="translated">없음</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.HorizontalOffset">
          <source>XAML Attribute Usage</source>
          <target state="translated">XAML 특성 사용</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.HorizontalOffset">
          <source>XAML Values</source>
          <target state="translated">XAML 값</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.HorizontalOffset">
          <source><bpt id="p1">*</bpt>double<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>double<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.HorizontalOffset">
          <source>String representation of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> value.</source>
          <target state="translated">문자열 표현은 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.HorizontalOffset">
          <source>This is interpreted as a <ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]</ph> measurement.</source>
          <target state="translated">이 값으로 해석 되는 <ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]</ph> 측정 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.HorizontalOffset">
          <source>Strings need not explicitly include decimal points.</source>
          <target state="translated">문자열은 소수점이 하를 명시적으로 포함 하지 않아야 합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.HorizontalOffset">
          <source>For instance a value of <ph id="ph1">`1`</ph> is acceptable.</source>
          <target state="translated">예를 들어 값의 <ph id="ph1">`1`</ph> 허용 됩니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.HorizontalOffset">
          <source>The same <ph id="ph1">&lt;xref:System.Double&gt;</ph> range restrictions as mentioned in the Property Value section apply.</source>
          <target state="translated">동일한 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 속성 값 섹션에서 설명한 것 처럼 범위 제한 사항이 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.HorizontalOffset">
          <source><bpt id="p1">*</bpt>qualifiedDouble<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>qualifiedDouble<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.HorizontalOffset">
          <source>A <bpt id="p1">*</bpt>double<ept id="p1">*</ept> value as described above, followed by one of the following unit declaration strings: <ph id="ph1">`px`</ph>, <ph id="ph2">`in`</ph>, <ph id="ph3">`cm`</ph>, <ph id="ph4">`pt`</ph>.</source>
          <target state="translated">A <bpt id="p1">*</bpt>double<ept id="p1">*</ept> 단위 선언 문자열 중 하나에 의해 다음 위에서 설명한 대로 값: <ph id="ph1">`px`</ph>, <ph id="ph2">`in`</ph>, <ph id="ph3">`cm`</ph>, <ph id="ph4">`pt`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.HorizontalOffset">
          <source><ph id="ph1">`px`</ph> (default) is <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph></source>
          <target state="translated"><ph id="ph1">`px`</ph> (기본값)은 <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph></target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.HorizontalOffset">
          <source><ph id="ph1">`in`</ph> is inches; 1in==96px</source>
          <target state="translated"><ph id="ph1">`in`</ph> is inches; 1in==96px</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.HorizontalOffset">
          <source><ph id="ph1">`cm`</ph> is centimeters; 1cm==(96/2.54) px</source>
          <target state="translated"><ph id="ph1">`cm`</ph> 센티미터; 1cm==(96/2.54) px</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.HorizontalOffset">
          <source><ph id="ph1">`pt`</ph> is points; 1pt==(96/72) px</source>
          <target state="translated"><ph id="ph1">`pt`</ph> is points; 1pt==(96/72) px</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.HorizontalOffset">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> In many cases a double may be set to Auto but a <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> will not appear if the offsets are set to Auto.</source>
          <target state="translated"><bpt id="p1">**</bpt>참고<ept id="p1">**</ept> 대부분의 경우 double을 Auto로 설정할 수 있습니다 하지만 <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> 오프셋을 Auto로 설정 된 경우 표시 되지 것입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.HorizontalOffset">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A&gt;</ph> property to cause a <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> to open at a specified location in relation to its button parent.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A&gt;</ph> 속성을 한 <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> 단추 부모와 관련 하 여 지정된 된 위치에서 열려는 합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.ContextMenu.HorizontalOffsetProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ContextMenu.HorizontalOffset" /&gt;</ph> dependency property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Controls.ContextMenu.HorizontalOffset" /&gt;</ph> 종속성 속성을 식별합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.ContextMenu.IsOpen">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ContextMenu" /&gt;</ph> is visible.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.ContextMenu" /&gt;</ph>의 표시 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.IsOpen">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.ContextMenu" /&gt;</ph> is visible; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Controls.ContextMenu" /&gt;</ph>가 표시되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그러지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.IsOpen">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.IsOpen">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu.IsOpen%2A&gt;</ph> is set to <ph id="ph2">`true`</ph>, mouse capture is set to the <ph id="ph3">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> and its subtree.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu.IsOpen%2A&gt;</ph> 로 설정 된 <ph id="ph2">`true`</ph>, 마우스 캡처로 설정 되어는 <ph id="ph3">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> 및 해당 하위 트리 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.IsOpen">
          <source>Dependency Property Information</source>
          <target state="translated">종속성 속성 정보</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.IsOpen">
          <source>Identifier field</source>
          <target state="translated">식별자 필드</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.IsOpen">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">로 메타 데이터 속성 설정 <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.IsOpen">
          <source>This example shows how to check to determine whether the <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu.IsOpen%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 예제를 확인 하는 방법을 보여 줍니다 여부는 <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu.IsOpen%2A&gt;</ph> 속성이로 설정 된 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.ContextMenu.IsOpenProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /&gt;</ph> dependency property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /&gt;</ph> 종속성 속성을 식별합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ContextMenu.OnClosed(System.Windows.RoutedEventArgs)">
          <source>The event data for the <ph id="ph1">&lt;see cref="E:System.Windows.Controls.ContextMenu.Closed" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Controls.ContextMenu.Closed" /&gt;</ph> 이벤트에 대한 이벤트 데이터입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ContextMenu.OnClosed(System.Windows.RoutedEventArgs)">
          <source>Called when the <ph id="ph1">&lt;see cref="E:System.Windows.Controls.ContextMenu.Closed" /&gt;</ph> event occurs.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Controls.ContextMenu.Closed" /&gt;</ph> 이벤트가 발생할 때 호출됩니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ContextMenu.OnCreateAutomationPeer">
          <source>Creates and returns a <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /&gt;</ph> object for this <ph id="ph2">&lt;see cref="T:System.Windows.Controls.ContextMenu" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /&gt;</ph>에 대한 <ph id="ph2">&lt;see cref="T:System.Windows.Controls.ContextMenu" /&gt;</ph> 개체를 만들어 반환합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ContextMenu.OnCreateAutomationPeer">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /&gt;</ph> object for this <ph id="ph2">&lt;see cref="T:System.Windows.Controls.ContextMenu" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /&gt;</ph>에 대한 <ph id="ph2">&lt;see cref="T:System.Windows.Controls.ContextMenu" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ContextMenu.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <source>The event data for the <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /&gt;</ph> 이벤트에 대한 이벤트 데이터입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ContextMenu.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <source>Reports that the <ph id="ph1">&lt;see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /&gt;</ph> property changed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /&gt;</ph> 속성이 변경되었음을 보고합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ContextMenu.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <source>The event data for the <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.KeyDown" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.UIElement.KeyDown" /&gt;</ph> 이벤트에 대한 이벤트 데이터입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ContextMenu.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <source>Called when a <ph id="ph1">&lt;see cref="E:System.Windows.ContentElement.KeyDown" /&gt;</ph> event is raised by an object inside the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.ContextMenu" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.ContentElement.KeyDown" /&gt;</ph> 내의 개체에 의해 <ph id="ph2">&lt;see cref="T:System.Windows.Controls.ContextMenu" /&gt;</ph> 이벤트가 발생될 때 호출됩니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ContextMenu.OnKeyUp(System.Windows.Input.KeyEventArgs)">
          <source>The event data for the <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.KeyUp" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.UIElement.KeyUp" /&gt;</ph> 이벤트에 대한 이벤트 데이터입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ContextMenu.OnKeyUp(System.Windows.Input.KeyEventArgs)">
          <source>Responds to the <ph id="ph1">&lt;see cref="E:System.Windows.ContentElement.KeyUp" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.ContentElement.KeyUp" /&gt;</ph> 이벤트에 응답합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ContextMenu.OnOpened(System.Windows.RoutedEventArgs)">
          <source>The event data for the <ph id="ph1">&lt;see cref="E:System.Windows.Controls.ContextMenu.Opened" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Controls.ContextMenu.Opened" /&gt;</ph> 이벤트에 대한 이벤트 데이터입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ContextMenu.OnOpened(System.Windows.RoutedEventArgs)">
          <source>Called when the <ph id="ph1">&lt;see cref="E:System.Windows.Controls.ContextMenu.Opened" /&gt;</ph> event occurs.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Controls.ContextMenu.Opened" /&gt;</ph> 이벤트가 발생할 때 호출됩니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ContextMenu.OnVisualParentChanged(System.Windows.DependencyObject)">
          <source>The object that the context menu was previously attached to.</source>
          <target state="translated">상황에 맞는 메뉴가 이전에 연결되어 있던 개체입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ContextMenu.OnVisualParentChanged(System.Windows.DependencyObject)">
          <source>Called when a context menu's visual parent changes.</source>
          <target state="translated">상황에 맞는 메뉴의 표시 부모가 변경될 때 호출됩니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="E:System.Windows.Controls.ContextMenu.Opened">
          <source>Occurs when a particular instance of a context menu opens.</source>
          <target state="translated">상황에 맞는 메뉴의 특정 인스턴스가 열리면 발생합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.ContextMenu.Opened">
          <source>Routed Event Information</source>
          <target state="translated">라우팅 이벤트 정보</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.ContextMenu.Opened">
          <source>Identifier field</source>
          <target state="translated">식별자 필드</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.ContextMenu.Opened">
          <source>Routing strategy</source>
          <target state="translated">라우팅 전략</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.ContextMenu.Opened">
          <source>Bubbling</source>
          <target state="translated">버블링</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.ContextMenu.Opened">
          <source>Delegate</source>
          <target state="translated">대리자</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Controls.ContextMenu.Opened">
          <source>The following example shows how use the <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> events: <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu.Opened&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Controls.ContextMenu.Closed&gt;</ph>.</source>
          <target state="translated">다음 방법을 보여 주는 예제는 <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> 이벤트: <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu.Opened&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Controls.ContextMenu.Closed&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.ContextMenu.OpenedEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Controls.ContextMenu.Opened" /&gt;</ph> routed event.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="E:System.Windows.Controls.ContextMenu.Opened" /&gt;</ph> 라우트된 이벤트를 식별합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.ContextMenu.Placement">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ContextMenu.Placement" /&gt;</ph> property of a <ph id="ph2">&lt;see cref="T:System.Windows.Controls.ContextMenu" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Controls.ContextMenu.Placement" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Windows.Controls.ContextMenu" /&gt;</ph> 속성을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.Placement">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.PlacementMode" /&gt;</ph> enumeration.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.Primitives.PlacementMode" /&gt;</ph> 열거형 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.Placement">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Controls.Primitives.PlacementMode.MousePoint" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Windows.Controls.Primitives.PlacementMode.MousePoint" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.Placement">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> is assigned to the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType&gt;</ph> property, the <ph id="ph4">&lt;xref:System.Windows.Controls.ContextMenuService&gt;</ph> changes this value of this property when the <ph id="ph5">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> opens.</source>
          <target state="translated">때는 <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> 에 할당 되는 <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType&gt;</ph> 속성은 <ph id="ph4">&lt;xref:System.Windows.Controls.ContextMenuService&gt;</ph> 이 속성의이 값을 변경 때는 <ph id="ph5">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> 열립니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.Placement">
          <source>If the user opens the <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> by using the mouse, <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu.Placement%2A&gt;</ph> is set to <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.PlacementMode.MousePoint&gt;</ph>.</source>
          <target state="translated">사용자가 열면는 <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> 마우스를 사용 하 여 <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu.Placement%2A&gt;</ph> 로 설정 된 <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.PlacementMode.MousePoint&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.Placement">
          <source>If the user opens the <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> by using the keyboard, <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu.Placement%2A&gt;</ph> is set to <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.PlacementMode.Center&gt;</ph>.</source>
          <target state="translated">사용자가 열면는 <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> 키보드를 사용 하 여 <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu.Placement%2A&gt;</ph> 로 설정 된 <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.PlacementMode.Center&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.Placement">
          <source>If you want to change the position of the <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph>, set the <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenuService.Placement%2A?displayProperty=nameWithType&gt;</ph> property on the <ph id="ph3">&lt;xref:System.Windows.FrameworkElement&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>.</source>
          <target state="translated">위치를 변경 하려는 경우는 <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph>로 설정 된 <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenuService.Placement%2A?displayProperty=nameWithType&gt;</ph> 속성에는 <ph id="ph3">&lt;xref:System.Windows.FrameworkElement&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.Placement">
          <source>You can position a <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> by setting the <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.ContextMenu.Placement%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty&gt;</ph> properties.</source>
          <target state="translated">위치를 지정할 수는 <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> 설정 하 여는 <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.ContextMenu.Placement%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A&gt;</ph>, 및 <ph id="ph6">&lt;xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.Placement">
          <source>These properties behave the same as they do for a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</source>
          <target state="translated">에 대 한 것과 동일 하 게 이러한 속성 동작는 <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.Placement">
          <source>For more information, see <bpt id="p1">[</bpt>Popup Placement Behavior<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>Popup 배치 동작<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.Placement">
          <source>Dependency Property Information</source>
          <target state="translated">종속성 속성 정보</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.Placement">
          <source>Identifier field</source>
          <target state="translated">식별자 필드</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.Placement">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">로 메타 데이터 속성 설정 <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.Placement">
          <source>None</source>
          <target state="translated">없음</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.Placement">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu.Placement%2A&gt;</ph> property and a placement mode to specify where the <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> is placed.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu.Placement%2A&gt;</ph> 속성 및 위치를 지정 하는 배치 모드는 <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> 배치 됩니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.ContextMenu.PlacementProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ContextMenu.Placement" /&gt;</ph> dependency property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Controls.ContextMenu.Placement" /&gt;</ph> 종속성 속성을 식별합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.ContextMenu.PlacementRectangle">
          <source>Gets or sets the area relative to which the context menu is positioned when it opens.</source>
          <target state="translated">상황에 맞는 메뉴가 열리는 위치의 기준이 되는 영역을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.PlacementRectangle">
          <source>The area that defines the rectangle that is used to position the context menu.</source>
          <target state="translated">상황에 맞는 메뉴를 배치하는 데 사용되는 사각형을 정의하는 영역입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.PlacementRectangle">
          <source>The default is <ph id="ph1">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="P:System.Windows.Rect.Empty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.PlacementRectangle">
          <source>You can position a <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> by setting the <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.ContextMenu.Placement%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty&gt;</ph> properties.</source>
          <target state="translated">위치를 지정할 수는 <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> 설정 하 여는 <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.ContextMenu.Placement%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A&gt;</ph>, 및 <ph id="ph6">&lt;xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.PlacementRectangle">
          <source>These properties behave the same as they do for a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</source>
          <target state="translated">에 대 한 것과 동일 하 게 이러한 속성 동작는 <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.PlacementRectangle">
          <source>For more information, see <bpt id="p1">[</bpt>Popup Placement Behavior<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>Popup 배치 동작<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.PlacementRectangle">
          <source>Dependency Property Information</source>
          <target state="translated">종속성 속성 정보</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.PlacementRectangle">
          <source>Identifier field</source>
          <target state="translated">식별자 필드</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.PlacementRectangle">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">로 메타 데이터 속성 설정 <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.PlacementRectangle">
          <source>None</source>
          <target state="translated">없음</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.PlacementRectangle">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A&gt;</ph> property and specify where the <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> is placed.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A&gt;</ph> 속성 위치를 지정 하 고는 <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> 배치 됩니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.ContextMenu.PlacementRectangleProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ContextMenu.PlacementRectangle" /&gt;</ph> dependency property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Controls.ContextMenu.PlacementRectangle" /&gt;</ph> 종속성 속성을 식별합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.ContextMenu.PlacementTarget">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> relative to which the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.ContextMenu" /&gt;</ph> is positioned when it opens.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph>이 열리는 위치의 기준이 되는 <ph id="ph2">&lt;see cref="T:System.Windows.Controls.ContextMenu" /&gt;</ph>를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.PlacementTarget">
          <source>The element relative to which the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ContextMenu" /&gt;</ph> is positioned when it opens.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.ContextMenu" /&gt;</ph>가 열리는 위치의 기준이 되는 요소입니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.PlacementTarget">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.PlacementTarget">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> is assigned to the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType&gt;</ph> property, the <ph id="ph4">&lt;xref:System.Windows.Controls.ContextMenuService&gt;</ph> changes this value of this property to the owning <ph id="ph5">&lt;xref:System.Windows.FrameworkElement&gt;</ph> or <ph id="ph6">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> when the <ph id="ph7">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> opens.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> 에 할당 되는 <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType&gt;</ph> 속성을는 <ph id="ph4">&lt;xref:System.Windows.Controls.ContextMenuService&gt;</ph> 소유 하 고 있는로이 속성의이 값이 변경 <ph id="ph5">&lt;xref:System.Windows.FrameworkElement&gt;</ph> 또는 <ph id="ph6">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> 때는 <ph id="ph7">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> 열립니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.PlacementTarget">
          <source>To use a different <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph>, set the <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenuService.PlacementTarget%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">다른 사용 하려면 <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph>설정는 <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenuService.PlacementTarget%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.PlacementTarget">
          <source>Dependency Property Information</source>
          <target state="translated">종속성 속성 정보</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.PlacementTarget">
          <source>Identifier field</source>
          <target state="translated">식별자 필드</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.PlacementTarget">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">로 메타 데이터 속성 설정 <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.PlacementTarget">
          <source>None</source>
          <target state="translated">없음</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.PlacementTarget">
          <source>The target of a <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> is its parent.</source>
          <target state="translated">대상은 <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> 부모 도메인입니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.PlacementTarget">
          <source>The following examples show how to use the <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A&gt;</ph> property to find the parent of a <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph>.</source>
          <target state="translated">다음 예제를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A&gt;</ph> 속성의 부모를 찾습니다는 <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.ContextMenu.PlacementTargetProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ContextMenu.PlacementTarget" /&gt;</ph> dependency property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Controls.ContextMenu.PlacementTarget" /&gt;</ph> 종속성 속성을 식별합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ContextMenu.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
          <source>Element used to display the specified item.</source>
          <target state="translated">지정된 항목을 표시하는 데 사용되는 요소입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ContextMenu.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
          <source>Specified item.</source>
          <target state="translated">지정한 항목입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.ContextMenu.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
          <source>Prepares the specified element to display the specified item.</source>
          <target state="translated">지정한 항목을 표시하기 위해 지정한 요소를 준비합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.ContextMenu.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
          <source>Preparing the element may involve applying styles, setting bindings, and so on.</source>
          <target state="translated">요소를 준비할 때는 바인딩 설정 스타일 적용을 포함 하 고 등 수 있습니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.ContextMenu.StaysOpen">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ContextMenu" /&gt;</ph> should close automatically.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.ContextMenu" /&gt;</ph>를 자동으로 닫을지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.StaysOpen">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the menu should stay open until the <ph id="ph2">&lt;see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /&gt;</ph> property changes to <ph id="ph3">&lt;see langword="false" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /&gt;</ph> 속성이 <ph id="ph1">&lt;see langword="true" /&gt;</ph>로 변경될 때까지 메뉴가 열려 있으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.StaysOpen">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.StaysOpen">
          <source>Dependency Property Information</source>
          <target state="translated">종속성 속성 정보</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.StaysOpen">
          <source>Identifier field</source>
          <target state="translated">식별자 필드</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.StaysOpen">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">로 메타 데이터 속성 설정 <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.StaysOpen">
          <source>None</source>
          <target state="translated">없음</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.StaysOpen">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu.StaysOpen%2A&gt;</ph> property to make a context menu that will stay open until an event occurs that changes the <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu.IsOpen%2A&gt;</ph> property to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu.StaysOpen%2A&gt;</ph> 속성을 변경 하는 열려 있는 이벤트가 발생할 때까지 다음과 같은 상황에 맞는 메뉴는 <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu.IsOpen%2A&gt;</ph> 속성을 <ph id="ph3">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.ContextMenu.StaysOpenProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ContextMenu.StaysOpen" /&gt;</ph> dependency property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Controls.ContextMenu.StaysOpen" /&gt;</ph> 종속성 속성을 식별합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.ContextMenu.VerticalOffset">
          <source>Get or sets the vertical distance between the target origin and the popup alignment point.</source>
          <target state="translated">대상 원점과 팝업 맞춤 지점 간의 세로 거리를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.VerticalOffset">
          <source>The vertical distance between the target origin and the popup alignment point.</source>
          <target state="translated">대상 원점과 팝업 맞춤 지점 간의 세로 거리입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.VerticalOffset">
          <source>For information about the target origin and popup alignment point, see <bpt id="p1">[</bpt>Popup Placement Behavior<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>.</source>
          <target state="translated">대상 원점 및 팝업 맞춤 지점에 대 한 정보를 참조 하십시오. <bpt id="p1">[</bpt>팝업 배치 동작<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.VerticalOffset">
          <source>The default is 0.</source>
          <target state="translated">기본값은 0입니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.VerticalOffset">
          <source>You can position a <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> by setting the <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.ContextMenu.Placement%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty&gt;</ph> properties.</source>
          <target state="translated">위치를 지정할 수는 <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> 설정 하 여는 <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.ContextMenu.Placement%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A&gt;</ph>, 및 <ph id="ph6">&lt;xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.VerticalOffset">
          <source>These properties behave the same as they do for a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</source>
          <target state="translated">에 대 한 것과 동일 하 게 이러한 속성 동작는 <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.VerticalOffset">
          <source>For more information, see <bpt id="p1">[</bpt>Popup Placement Behavior<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>Popup 배치 동작<ept id="p1">](~/docs/framework/wpf/controls/popup-placement-behavior.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.VerticalOffset">
          <source>Dependency Property Information</source>
          <target state="translated">종속성 속성 정보</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.VerticalOffset">
          <source>Identifier field</source>
          <target state="translated">식별자 필드</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.VerticalOffset">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">로 메타 데이터 속성 설정 <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.VerticalOffset">
          <source>None</source>
          <target state="translated">없음</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.VerticalOffset">
          <source>XAML Attribute Usage</source>
          <target state="translated">XAML 특성 사용</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.VerticalOffset">
          <source>XAML Values</source>
          <target state="translated">XAML 값</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.VerticalOffset">
          <source><bpt id="p1">*</bpt>double<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>double<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.VerticalOffset">
          <source>String representation of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> value.</source>
          <target state="translated">문자열 표현은 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.VerticalOffset">
          <source>This is interpreted as a <ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]</ph> measurement.</source>
          <target state="translated">이 값으로 해석 되는 <ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]</ph> 측정 합니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.VerticalOffset">
          <source>Strings need not explicitly include decimal points.</source>
          <target state="translated">문자열은 소수점이 하를 명시적으로 포함 하지 않아야 합니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.VerticalOffset">
          <source>For instance, a value of <ph id="ph1">`1`</ph> is acceptable.</source>
          <target state="translated">예를 들어, 값 <ph id="ph1">`1`</ph> 허용 됩니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.VerticalOffset">
          <source>The same <ph id="ph1">&lt;xref:System.Double&gt;</ph> range restrictions as mentioned in the Property Value section apply.</source>
          <target state="translated">동일한 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 속성 값 섹션에서 설명한 것 처럼 범위 제한 사항이 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.VerticalOffset">
          <source><bpt id="p1">*</bpt>qualifiedDouble<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>qualifiedDouble<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.VerticalOffset">
          <source>A <bpt id="p1">*</bpt>double<ept id="p1">*</ept> value as described above, followed by one of the following unit declaration strings: <ph id="ph1">`px`</ph>, <ph id="ph2">`in`</ph>, <ph id="ph3">`cm`</ph>, <ph id="ph4">`pt`</ph>.</source>
          <target state="translated">A <bpt id="p1">*</bpt>double<ept id="p1">*</ept> 단위 선언 문자열 중 하나에 의해 다음 위에서 설명한 대로 값: <ph id="ph1">`px`</ph>, <ph id="ph2">`in`</ph>, <ph id="ph3">`cm`</ph>, <ph id="ph4">`pt`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.VerticalOffset">
          <source><ph id="ph1">`px`</ph> (default) is <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph></source>
          <target state="translated"><ph id="ph1">`px`</ph> (기본값)은 <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph></target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.VerticalOffset">
          <source><ph id="ph1">`in`</ph> is inches; 1in==96px</source>
          <target state="translated"><ph id="ph1">`in`</ph> is inches; 1in==96px</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.VerticalOffset">
          <source><ph id="ph1">`cm`</ph> is centimeters; 1cm==(96/2.54) px</source>
          <target state="translated"><ph id="ph1">`cm`</ph> 센티미터; 1cm==(96/2.54) px</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.VerticalOffset">
          <source><ph id="ph1">`pt`</ph> is points; 1pt==(96/72) px</source>
          <target state="translated"><ph id="ph1">`pt`</ph> is points; 1pt==(96/72) px</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.VerticalOffset">
          <source>In many cases a double may be set to Auto, but a <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> does not appear if the offsets are set to Auto.</source>
          <target state="translated">대부분의 경우 double을 Auto로 설정할 수 있습니다 하지만 <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> 오프셋을 Auto로 설정 된 경우 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.ContextMenu.VerticalOffset">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu.VerticalOffset%2A&gt;</ph> property to cause a <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> to open at a specified location in relation to its button parent.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu.VerticalOffset%2A&gt;</ph> 속성을 한 <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> 단추 부모와 관련 하 여 지정된 된 위치에서 열려는 합니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.ContextMenu.VerticalOffsetProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ContextMenu.VerticalOffset" /&gt;</ph> dependency property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Controls.ContextMenu.VerticalOffset" /&gt;</ph> 종속성 속성을 식별합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>