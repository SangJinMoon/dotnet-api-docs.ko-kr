<Type Name="StickyNoteControl" FullName="System.Windows.Controls.StickyNoteControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f772b88ddd0dfd2ed871022702de1de70c0bf8c7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30619747" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class StickyNoteControl : System.Windows.Controls.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed StickyNoteControl extends System.Windows.Controls.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.StickyNoteControl" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class StickyNoteControl&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class StickyNoteControl sealed : System::Windows::Controls::Control" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_CloseButton", Type=typeof(System.Windows.Controls.Button))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_TitleThumb", Type=typeof(System.Windows.Controls.Primitives.Thumb))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_ResizeBottomRightThumb", Type=typeof(System.Windows.Controls.Primitives.Thumb))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_ContentControl", Type=typeof(System.Windows.Controls.ContentControl))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_IconButton", Type=typeof(System.Windows.Controls.Button))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_CopyMenuItem", Type=typeof(System.Windows.Controls.MenuItem))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_PasteMenuItem", Type=typeof(System.Windows.Controls.MenuItem))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_InkMenuItem", Type=typeof(System.Windows.Controls.MenuItem))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_SelectMenuItem", Type=typeof(System.Windows.Controls.MenuItem))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_EraseMenuItem", Type=typeof(System.Windows.Controls.MenuItem))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>사용자가 문서에 입력 텍스트나 필기 주석을 첨부할 수 있는 컨트롤을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 스티커 메모 내용이 텍스트, 이미지 또는 메모 고정 된 기타 자료와 별개인 사각형 영역을 제공 합니다.  
  
 <xref:System.Windows.Controls.StickyNoteControl> 클래스 및 해당 멤버는 공용를 스타일을 지정할 수 있습니다 하지만 공용 생성자는 없습니다.  인스턴스를 사용 하 여 만들어진는 <xref:System.Windows.Annotations.AnnotationService.CreateTextStickyNoteCommand> 및 <xref:System.Windows.Annotations.AnnotationService.CreateInkStickyNoteCommand> 의 <xref:System.Windows.Annotations.AnnotationService> 클래스입니다.  
  
 스티커 메모를 만들면 두 가지 형식 중 하나로 지정 됩니다.  
  
-   **텍스트** 스티커 메모는 <xref:System.Windows.Controls.RichTextBox> 콘텐츠 영역을 작성 하 고 다른 서식 있는 텍스트 영역 처럼 편집할 수 있습니다. 사용자가 입력할 수 있습니다 잘라내기, 및 붙여 넣기 메모 및 기타 응용 프로그램 간 및 메모 내에서. 이미지를 메모에 붙여넣을 수도 있습니다. 일반적인 서식 있는 텍스트의 바로 가기 키를 사용할 수 있습니다.  
  
-   **잉크** 스티커 메모는 <xref:System.Windows.Controls.InkCanvas> 콘텐츠 영역 이므로 다른 잉크 캔버스 처럼 편집할 수 있습니다. 예를 들어 스트로크를 지울 수 있습니다. Tablet PC 또는 기타 적합 한 하드웨어를 사용자가 필기 입력할 수 있습니다.  
  
 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 의 <xref:System.Windows.Controls.StickyNoteControl> 하드 카피에 표시 하거나 실제 필기 메모를 사용 하 여 보다 자료에 주석을 추가할 더 강력한 방법을 사용 하면 됩니다.  단순히에 추가 하거나 문서의 텍스트를 눈에 띄는 보다 좀 더 융통적 이기도 합니다.  
  
-   스티커 메모를 조정할 수 있습니다.  
  
-   스티커 메모를 아이콘으로 최소화 하 고 확장할 수 있습니다.  
  
-   최대화 하는 경우 앵커의 위치를 변경 하지 않고 창에서 새 위치로 스티커 메모를 끌 수 있습니다.  
  
-   스티커 메모 적용 되는 정확한 콘텐츠는 강조 표시 하 고 대괄호로 표시 됩니다.  
  
-   두 개 이상의 스티커 메모 겹치는 내용 동일한 내용에 적용 될 수 있습니다.  
  
-   스티커 메모 고정 된 문서 내용이 변경이 발생 하는 경우 연결 된 콘텐츠를 기준으로 하는 위치에 스티커 메모의 위치 이동 합니다.  
  
-   텍스트 스티커 메모 줄 자동으로 래핑됩니다. 메모의 크기를 조정 하는 경우 필요에 따라 줄 다시 배치 됩니다. 콘텐츠 메모 맨 아래쪽으로 확장, 세로 스크롤 막대가 표시 됩니다.  
  
-   잉크 스티커 메모 콘텐츠 메모의 경계를 벗어나 확장 될 때마다 세로 및 가로 스크롤 막대가 표시 됩니다.  
  
   
  
## Examples  
 다음 예제에서 메뉴 명령을 하는 방법을 보여 줍니다.는 <xref:System.Windows.Controls.DocumentViewer> 실행 하도록 구성할 수 있습니다는 <xref:System.Windows.Annotations.AnnotationService.CreateTextStickyNoteCommand> 및 <xref:System.Windows.Annotations.AnnotationService.CreateInkStickyNoteCommand> 의 <xref:System.Windows.Annotations.AnnotationService> 클래스입니다. 이 예제에서는 읽는 방법을 보여 줍니다.는 [!INCLUDE[TLA#tla_metro](~/includes/tlasharptla-metro-md.md)] 에 문서는 <xref:System.Windows.Controls.DocumentViewer> 제어 하 고 사용자가 만든 스티커 메모를 추가 하는 것에 대 한 지원을 사용 하도록 설정 합니다.  
  
 [!code-xaml[DocViewerAnnotationsXps#CreateDeleteAnnotations](~/samples/snippets/csharp/VS_Snippets_Wpf/DocViewerAnnotationsXps/CSharp/Window1.xaml#createdeleteannotations)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Annotations.AnnotationService" />
  </Docs>
  <Members>
    <Member MemberName="AnchorInfo">
      <MemberSignature Language="C#" Value="public System.Windows.Annotations.IAnchorInfo AnchorInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Annotations.IAnchorInfo AnchorInfo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StickyNoteControl.AnchorInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AnchorInfo As IAnchorInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Annotations::IAnchorInfo ^ AnchorInfo { System::Windows::Annotations::IAnchorInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Annotations.IAnchorInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>주석이 달린 개체에 대한 정보를 제공하는 개체를 가져옵니다.</summary>
        <value>주석이 달린 개체에 대한 정보를 제공하는 <see cref="T:System.Windows.Annotations.IAnchorInfo" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하면 해당 하는 주석이 추가 된 개체와 스티커 메모를 맞출 수 있습니다.  
  
 <xref:System.Windows.Controls.StickyNoteControl.AnchorInfo%2A> .NET Framework 버전 3.5에서에서 도입 되었습니다.  자세한 내용은 [버전 및 종속성](~/docs/framework/migration-guide/versions-and-dependencies.md)을 참조하세요.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Author">
      <MemberSignature Language="C#" Value="public string Author { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Author" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StickyNoteControl.Author" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Author As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Author { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>스티커 메모를 만든 작성자의 이름을 가져옵니다.</summary>
        <value>스티커 메모를 만든 작성자의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Author"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Controls.StickyNoteControl.AuthorProperty>|  
|로 메타 데이터 속성 설정 `true`|없음|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AuthorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AuthorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.StickyNoteControl.AuthorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AuthorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AuthorProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.StickyNoteControl.Author" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptionFontFamily">
      <MemberSignature Language="C#" Value="public System.Windows.Media.FontFamily CaptionFontFamily { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.FontFamily CaptionFontFamily" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StickyNoteControl.CaptionFontFamily" />
      <MemberSignature Language="VB.NET" Value="Public Property CaptionFontFamily As FontFamily" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::FontFamily ^ CaptionFontFamily { System::Windows::Media::FontFamily ^ get(); void set(System::Windows::Media::FontFamily ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.FontFamily</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.StickyNoteControl" />에 대한 캡션의 글꼴 패밀리를 가져오거나 설정합니다.</summary>
        <value>컨트롤의 캡션에 대한 <see cref="T:System.Drawing.FontFamily" />입니다. 기본값은 <see cref="P:System.Windows.SystemFonts.MessageFontFamily" />의 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 인스턴스에 대 한 참조를 가져오려면 하려고 하지 않는 것이 좋습니다 <xref:System.Windows.Controls.StickyNoteControl> ,를 읽거나이 속성을 직접 작성 합니다. 스타일 지정에만이 속성을 사용 해야 <xref:System.Windows.Controls.StickyNoteControl>s입니다.  
  
<a name="dependencyPropertyInfo_CaptionFontFamily"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Controls.StickyNoteControl.CaptionFontFamilyProperty>|  
|로 메타 데이터 속성 설정 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptionFontFamilyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CaptionFontFamilyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CaptionFontFamilyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.StickyNoteControl.CaptionFontFamilyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CaptionFontFamilyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CaptionFontFamilyProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontFamily" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptionFontSize">
      <MemberSignature Language="C#" Value="public double CaptionFontSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 CaptionFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StickyNoteControl.CaptionFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Property CaptionFontSize As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double CaptionFontSize { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.StickyNoteControl" />의 캡션에 사용되는 글꼴의 크기를 가져오거나 설정합니다.</summary>
        <value>글꼴 크기를 나타내는 <see cref="T:System.Double" />입니다. 기본값은 <see cref="P:System.Windows.SystemFonts.MessageFontSize" />의 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 인스턴스에 대 한 참조를 가져오려면 하려고 하지 않는 것이 좋습니다 <xref:System.Windows.Controls.StickyNoteControl> ,를 읽거나이 속성을 직접 작성 합니다. 스타일 지정에만이 속성을 사용 해야 <xref:System.Windows.Controls.StickyNoteControl>s입니다.  
  
<a name="dependencyPropertyInfo_CaptionFontSize"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Controls.StickyNoteControl.CaptionFontSizeProperty>|  
|로 메타 데이터 속성 설정 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptionFontSizeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CaptionFontSizeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CaptionFontSizeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.StickyNoteControl.CaptionFontSizeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CaptionFontSizeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CaptionFontSizeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontSize" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptionFontStretch">
      <MemberSignature Language="C#" Value="public System.Windows.FontStretch CaptionFontStretch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontStretch CaptionFontStretch" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StickyNoteControl.CaptionFontStretch" />
      <MemberSignature Language="VB.NET" Value="Public Property CaptionFontStretch As FontStretch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FontStretch CaptionFontStretch { System::Windows::FontStretch get(); void set(System::Windows::FontStretch value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontStretch</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.StickyNoteControl" />의 캡션에 사용되는 글꼴이 늘어나는 정도를 가져오거나 설정합니다.</summary>
        <value>글꼴의 일반 가로 세로 비율과 비교하여 늘어나는 정도를 나타내는 <see cref="T:System.Windows.FontStretch" /> 구조체입니다. 기본값은 <see cref="P:System.Windows.FontStretches.Normal" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 인스턴스에 대 한 참조를 가져오려면 하려고 하지 않는 것이 좋습니다 <xref:System.Windows.Controls.StickyNoteControl> ,를 읽거나이 속성을 직접 작성 합니다. 스타일 지정에만이 속성을 사용 해야 <xref:System.Windows.Controls.StickyNoteControl>s입니다.  
  
<a name="dependencyPropertyInfo_CaptionFontStretch"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Controls.StickyNoteControl.CaptionFontStretchProperty>|  
|로 메타 데이터 속성 설정 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptionFontStretchProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CaptionFontStretchProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CaptionFontStretchProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.StickyNoteControl.CaptionFontStretchProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CaptionFontStretchProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CaptionFontStretchProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontStretch" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptionFontStyle">
      <MemberSignature Language="C#" Value="public System.Windows.FontStyle CaptionFontStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontStyle CaptionFontStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StickyNoteControl.CaptionFontStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property CaptionFontStyle As FontStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FontStyle CaptionFontStyle { System::Windows::FontStyle get(); void set(System::Windows::FontStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.StickyNoteControl" />의 캡션에 사용되는 글꼴의 스타일을 가져오거나 설정합니다.</summary>
        <value>캡션 스타일을 보통, 기울임꼴 또는 오블리크로 나타내는 <see cref="T:System.Windows.FontStyle" /> 구조체입니다. 기본값은 <see cref="P:System.Windows.SystemFonts.MessageFontStyle" />의 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 인스턴스에 대 한 참조를 가져오려면 하려고 하지 않는 것이 좋습니다 <xref:System.Windows.Controls.StickyNoteControl> ,를 읽거나이 속성을 직접 작성 합니다. 스타일 지정에만이 속성을 사용 해야 <xref:System.Windows.Controls.StickyNoteControl>s입니다.  
  
<a name="dependencyPropertyInfo_CaptionFontStyle"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Controls.StickyNoteControl.CaptionFontStyleProperty>|  
|로 메타 데이터 속성 설정 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptionFontStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CaptionFontStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CaptionFontStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.StickyNoteControl.CaptionFontStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CaptionFontStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CaptionFontStyleProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontStyle" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptionFontWeight">
      <MemberSignature Language="C#" Value="public System.Windows.FontWeight CaptionFontWeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontWeight CaptionFontWeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StickyNoteControl.CaptionFontWeight" />
      <MemberSignature Language="VB.NET" Value="Public Property CaptionFontWeight As FontWeight" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FontWeight CaptionFontWeight { System::Windows::FontWeight get(); void set(System::Windows::FontWeight value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontWeight</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.StickyNoteControl" />의 캡션에 사용되는 글꼴의 두께를 가져오거나 설정합니다.</summary>
        <value>글꼴의 두께(예: bold, ultrabold 또는 extralight)를 나타내는 <see cref="T:System.Windows.FontWeight" /> 구조체입니다. 기본값은 <see cref="P:System.Windows.SystemFonts.MessageFontWeight" />의 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 인스턴스에 대 한 참조를 가져오려면 하려고 하지 않는 것이 좋습니다 <xref:System.Windows.Controls.StickyNoteControl> ,를 읽거나이 속성을 직접 작성 합니다. 스타일 지정에만이 속성을 사용 해야 <xref:System.Windows.Controls.StickyNoteControl>s입니다.  
  
<a name="dependencyPropertyInfo_CaptionFontWeight"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Controls.StickyNoteControl.CaptionFontWeightProperty>|  
|로 메타 데이터 속성 설정 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptionFontWeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CaptionFontWeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CaptionFontWeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.StickyNoteControl.CaptionFontWeightProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CaptionFontWeightProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CaptionFontWeightProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontWeight" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteNoteCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.RoutedCommand DeleteNoteCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.RoutedCommand DeleteNoteCommand" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.StickyNoteControl.DeleteNoteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DeleteNoteCommand As RoutedCommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::RoutedCommand ^ DeleteNoteCommand;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="M:System.Windows.Input.RoutedCommand.Execute(System.Object,System.Windows.IInputElement)" /> 메서드를 사용하여 <see cref="T:System.Windows.Controls.StickyNoteControl" />을 삭제하는 명령을 나타냅니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InkCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.RoutedCommand InkCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.RoutedCommand InkCommand" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.StickyNoteControl.InkCommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InkCommand As RoutedCommand " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Input::RoutedCommand ^ InkCommand;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="M:System.Windows.Input.RoutedCommand.Execute(System.Object,System.Windows.IInputElement)" /> 메서드를 사용하여 잉크 스티커 메모의 커서를 그리기 및 지우기 등의 몇 가지 가능한 모드 중 하나로 전환하는 명령을 나타냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 을 사용 하는 경우는 <xref:System.Windows.Controls.StickyNoteControl.InkCommand> 형식의 매개 변수 사용 <xref:System.Windows.Controls.InkCanvasEditingMode>합니다. 명령의 <xref:System.Windows.Input.RoutedCommand.Execute%2A> 메서드는 매개 변수로 지정 된 모드에서 커서를 놓거나 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InkSchemaName">
      <MemberSignature Language="C#" Value="public static readonly System.Xml.XmlQualifiedName InkSchemaName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Xml.XmlQualifiedName InkSchemaName" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.StickyNoteControl.InkSchemaName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InkSchemaName As XmlQualifiedName " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Xml::XmlQualifiedName ^ InkSchemaName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>잉크 스티커 메모 주석의 Xml 형식을 가져옵니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsActive">
      <MemberSignature Language="C#" Value="public bool IsActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsActive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StickyNoteControl.IsActive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsActive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsActive { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.StickyNoteControl" />이 활성 상태인지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          컨트롤이 활성 상태이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 인스턴스에 대 한 참조를 가져오려면 하려고 하지 않는 것이 좋습니다 <xref:System.Windows.Controls.StickyNoteControl> ,이 속성을 직접 읽을 있습니다.  
  
<a name="dependencyPropertyInfo_IsActive"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Controls.StickyNoteControl.IsActiveProperty>|  
|로 메타 데이터 속성 설정 `true`|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsActiveProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsActiveProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsActiveProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.StickyNoteControl.IsActiveProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsActiveProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsActiveProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.StickyNoteControl.IsActive" /> 종속성 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.StickyNoteControl.IsActive%2A> 종속성 속성의 식별자입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExpanded">
      <MemberSignature Language="C#" Value="public bool IsExpanded { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExpanded" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StickyNoteControl.IsExpanded" />
      <MemberSignature Language="VB.NET" Value="Public Property IsExpanded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsExpanded { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.StickyNoteControl" />이 확장되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          컨트롤이 확장되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 인스턴스에 대 한 참조를 가져오려면 하려고 하지 않는 것이 좋습니다 <xref:System.Windows.Controls.StickyNoteControl> ,를 읽거나이 속성을 직접 작성 합니다.  
  
<a name="dependencyPropertyInfo_IsExpanded"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Controls.StickyNoteControl.IsExpandedProperty>|  
|로 메타 데이터 속성 설정 `true`|없음|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExpandedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsExpandedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsExpandedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.StickyNoteControl.IsExpandedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsExpandedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsExpandedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.StickyNoteControl.IsExpanded" /> 종속성 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한 식별자는 <xref:System.Windows.Controls.StickyNoteControl.IsExpanded%2A> 종속성 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseOverAnchor">
      <MemberSignature Language="C#" Value="public bool IsMouseOverAnchor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseOverAnchor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StickyNoteControl.IsMouseOverAnchor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseOverAnchor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseOverAnchor { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>마우스 커서가 <see cref="T:System.Windows.Controls.StickyNoteControl" />의 앵커 위에 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          마우스 커서가 앵커 위에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 인스턴스에 대 한 참조를 가져오려면 하려고 하지 않는 것이 좋습니다 <xref:System.Windows.Controls.StickyNoteControl> ,이 속성을 직접 읽을 있습니다.  
  
<a name="dependencyPropertyInfo_IsMouseOverAnchor"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Controls.StickyNoteControl.IsMouseOverAnchorProperty>|  
|로 메타 데이터 속성 설정 `true`|없음|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseOverAnchorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseOverAnchorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseOverAnchorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.StickyNoteControl.IsMouseOverAnchorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseOverAnchorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseOverAnchorProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.StickyNoteControl.IsMouseOverAnchor" /> 종속성 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.StickyNoteControl.IsMouseOverAnchor%2A> 종속성 속성의 식별자입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StickyNoteControl.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>템플릿의 모든 자식 요소에 대한 이벤트 처리기를 등록합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.StickyNoteControl.OnApplyTemplate%2A> 컨트롤 컨트롤에 텍스트 또는 잉크 스티커 메모 서식 파일을 적용 한 후 자동으로 수행 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StickyNoteControl.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotKeyboardFocus (args As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected override void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StickyNoteControl.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnIsKeyboardFocusWithinChanged (args As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTemplateChanged">
      <MemberSignature Language="C#" Value="protected override void OnTemplateChanged (System.Windows.Controls.ControlTemplate oldTemplate, System.Windows.Controls.ControlTemplate newTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTemplateChanged(class System.Windows.Controls.ControlTemplate oldTemplate, class System.Windows.Controls.ControlTemplate newTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StickyNoteControl.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTemplateChanged (oldTemplate As ControlTemplate, newTemplate As ControlTemplate)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTemplateChanged(System::Windows::Controls::ControlTemplate ^ oldTemplate, System::Windows::Controls::ControlTemplate ^ newTemplate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldTemplate" Type="System.Windows.Controls.ControlTemplate" />
        <Parameter Name="newTemplate" Type="System.Windows.Controls.ControlTemplate" />
      </Parameters>
      <Docs>
        <param name="oldTemplate">To be added.</param>
        <param name="newTemplate">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PenWidth">
      <MemberSignature Language="C#" Value="public double PenWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PenWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StickyNoteControl.PenWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property PenWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double PenWidth { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>잉크 <see cref="T:System.Windows.Controls.StickyNoteControl" />의 펜 너비를 가져오거나 설정합니다.</summary>
        <value>펜의 너비를 나타내는 <see cref="T:System.Double" />입니다. 기본값은 <see cref="P:System.Windows.Ink.DrawingAttributes.Width" />의 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 인스턴스에 대 한 참조를 가져오려면 하려고 하지 않는 것이 좋습니다 <xref:System.Windows.Controls.StickyNoteControl> ,를 읽거나이 속성을 직접 작성 합니다. 스타일 지정에만이 속성을 사용 해야 <xref:System.Windows.Controls.StickyNoteControl>s입니다.  
  
<a name="dependencyPropertyInfo_PenWidth"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Controls.StickyNoteControl.PenWidthProperty>|  
|로 메타 데이터 속성 설정 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>,<br /><br /> <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PenWidthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PenWidthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PenWidthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.StickyNoteControl.PenWidthProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PenWidthProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PenWidthProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.StickyNoteControl.PenWidth" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StickyNoteType">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.StickyNoteType StickyNoteType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.StickyNoteType StickyNoteType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StickyNoteControl.StickyNoteType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StickyNoteType As StickyNoteType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::StickyNoteType StickyNoteType { System::Windows::Controls::StickyNoteType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.StickyNoteType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>스티커 메모가 텍스트인지 또는 잉크인지를 나타내는 값을 가져옵니다.</summary>
        <value>메모 형식을 나타내는 <see cref="T:System.Windows.Controls.StickyNoteType" /> 값입니다. 기본값은 <see cref="F:System.Windows.Controls.StickyNoteType.Text" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 잉크 <xref:System.Windows.Controls.StickyNoteControl> 필기 tablet PC 또는 필기 입력을 지 원하는 기타 하드웨어에 사용할 수 있습니다.  
  
 인스턴스에 대 한 참조를 가져오려면 하려고 하지 않는 것이 좋습니다 <xref:System.Windows.Controls.StickyNoteControl> ,이 속성을 직접 읽을 있습니다. 스타일 지정에만이 속성을 사용 해야 <xref:System.Windows.Controls.StickyNoteControl>s입니다.  
  
<a name="dependencyPropertyInfo_StickyNoteType"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Controls.StickyNoteControl.StickyNoteTypeProperty>|  
|로 메타 데이터 속성 설정 `true`|없음|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StickyNoteTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StickyNoteTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StickyNoteTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.StickyNoteControl.StickyNoteTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StickyNoteTypeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ StickyNoteTypeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.StickyNoteControl.StickyNoteType" /> 종속성 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.StickyNoteControl.StickyNoteType%2A> 종속성 속성의 식별자입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextSchemaName">
      <MemberSignature Language="C#" Value="public static readonly System.Xml.XmlQualifiedName TextSchemaName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Xml.XmlQualifiedName TextSchemaName" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.StickyNoteControl.TextSchemaName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextSchemaName As XmlQualifiedName " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Xml::XmlQualifiedName ^ TextSchemaName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>텍스트 스티커 메모 주석의 Xml 형식을 가져옵니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>