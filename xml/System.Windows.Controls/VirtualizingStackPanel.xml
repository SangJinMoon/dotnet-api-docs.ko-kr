<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="VirtualizingStackPanel.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59ef6d1cfd3e8ed64425a5eb77929d73ecb0637bc.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9ef6d1cfd3e8ed64425a5eb77929d73ecb0637bc</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Controls.VirtualizingStackPanel">
          <source>Arranges and virtualizes content on a single line that is oriented either horizontally or vertically.</source>
          <target state="translated">가로 또는 세로 방향으로 한 줄로 콘텐츠를 정렬하고 가상화합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.VirtualizingStackPanel">
          <source>The standard layout system creates item containers and computes layout for each item associated with a list control.</source>
          <target state="translated">표준 레이아웃 시스템 항목 컨테이너를 만들고 목록 컨트롤과 관련 된 각 항목에 대 한 레이아웃을 계산 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.VirtualizingStackPanel">
          <source>The word "virtualize" refers to a technique by which a subset of <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> elements are generated from a larger number of data items based on which items are visible on-screen.</source>
          <target state="translated">되는 기술을 나타냅니다 "가상화" 단어의 하위 집합 <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> 요소가 화면에 표시 되는 항목에 따라 데이터 항목의 많은 수에서 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.VirtualizingStackPanel">
          <source>Generating many <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> elements when only a few elements might be on the screen can adversely affect the performance of your application.</source>
          <target state="translated">많이 생성 <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> 화면에 몇 개의 요소만 있을 수 있습니다 하는 경우 요소 응용 프로그램의 성능이 저하 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.VirtualizingStackPanel">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> calculates the number of visible items and works with the <ph id="ph2">&lt;xref:System.Windows.Controls.ItemContainerGenerator&gt;</ph> from an <ph id="ph3">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> (such as <ph id="ph4">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> or <ph id="ph5">&lt;xref:System.Windows.Controls.ListView&gt;</ph>) to create <ph id="ph6">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> elements only for visible items.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> 표시 되는 항목 수를 계산 하며와 함께 작동는 <ph id="ph2">&lt;xref:System.Windows.Controls.ItemContainerGenerator&gt;</ph> 에서 <ph id="ph3">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> (같은 <ph id="ph4">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> 또는 <ph id="ph5">&lt;xref:System.Windows.Controls.ListView&gt;</ph>)를 만드는 <ph id="ph6">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> 표시 되는 항목에 대 한 요소입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.VirtualizingStackPanel">
          <source>Virtualization in a <ph id="ph1">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> only occurs when the items control contained in the panel creates its own item containers.</source>
          <target state="translated">가상화에는 <ph id="ph1">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> 패널에 포함 된 항목 컨트롤 자체 항목 컨테이너를 만들 때에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.VirtualizingStackPanel">
          <source>You can ensure this happens by using data binding.</source>
          <target state="translated">데이터 바인딩을 사용 하 여 발생 하는이 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.VirtualizingStackPanel">
          <source>In scenarios where item containers are created and added to the items control, a <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> offers no performance advantage over a <ph id="ph2">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph>.</source>
          <target state="translated">항목 컨테이너가 생성 되 고 항목 컨트롤에 추가 하는 경우에는 <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> 비해 성능 이점이 제공는 <ph id="ph2">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.VirtualizingStackPanel">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> is the default items host for the <ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> 기본 항목 호스트 되는 <ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.VirtualizingStackPanel">
          <source>By default, the <ph id="ph1">`VirtualizingStackPanel.IsVirtualizing`</ph> attached property is set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">기본적으로는 <ph id="ph1">`VirtualizingStackPanel.IsVirtualizing`</ph> 연결된 속성이로 설정 된 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.VirtualizingStackPanel">
          <source>When the <ph id="ph1">`VirtualizingStackPanel.IsVirtualizing`</ph> attached property is set to <ph id="ph2">`false`</ph>, a <ph id="ph3">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> behaves the same as an ordinary <ph id="ph4">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">`VirtualizingStackPanel.IsVirtualizing`</ph> 연결된 속성이로 설정 되어 <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> 일반 동일 하 게 동작 <ph id="ph4">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.VirtualizingStackPanel">
          <source>The following example shows how to bind to an XML data source and virtualize the items displayed in a <ph id="ph1">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> element using <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">XML 데이터 소스에 바인딩하고에 표시 된 항목을 가상화 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> 요소를 사용 하 여 <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.VirtualizingStackPanel">
          <source>Notice that the <ph id="ph1">`VirtualizingStackPanel.IsVirtualizing`</ph> attached property is explicitly set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">에 <ph id="ph1">`VirtualizingStackPanel.IsVirtualizing`</ph> 연결 된 속성을 명시적으로로 설정 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.VirtualizingStackPanel">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> and sets the <ph id="ph2">`VirtualizingStackPanel.VirtualizationMode`</ph> attached property to <ph id="ph3">&lt;xref:System.Windows.Controls.VirtualizationMode.Recycling&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> 설정 하 고는 <ph id="ph2">`VirtualizingStackPanel.VirtualizationMode`</ph> 연결 된 속성을 <ph id="ph3">&lt;xref:System.Windows.Controls.VirtualizationMode.Recycling&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.VirtualizingStackPanel">
          <source>The following example shows the data used in the previous example.</source>
          <target state="translated">다음 예제에서는 이전 예제에서 사용 되는 데이터를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizingStackPanel" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizingStackPanel" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.AddCleanUpVirtualizedItemHandler(System.Windows.DependencyObject,System.Windows.Controls.CleanUpVirtualizedItemEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> that is listening for this event.</source>
          <target state="translated">이 이벤트를 수신 대기 중인 <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.AddCleanUpVirtualizedItemHandler(System.Windows.DependencyObject,System.Windows.Controls.CleanUpVirtualizedItemEventHandler)">
          <source>The event handler that is to be added.</source>
          <target state="translated">추가할 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.AddCleanUpVirtualizedItemHandler(System.Windows.DependencyObject,System.Windows.Controls.CleanUpVirtualizedItemEventHandler)">
          <source>Adds an event handler for the <ph id="ph1">&lt;see langword="VirtualizingStackPanel.CleanUpVirtualizedItem" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="VirtualizingStackPanel.CleanUpVirtualizedItem" /&gt;</ph> 연결된 이벤트에 대한 이벤트 처리기를 추가합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.AddCleanUpVirtualizedItemHandler(System.Windows.DependencyObject,System.Windows.Controls.CleanUpVirtualizedItemEventHandler)">
          <source>The standard layout system creates item containers and computes layout for each item associated with a list control.</source>
          <target state="translated">표준 레이아웃 시스템 항목 컨테이너를 만들고 목록 컨트롤과 관련 된 각 항목에 대 한 레이아웃을 계산 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.AddCleanUpVirtualizedItemHandler(System.Windows.DependencyObject,System.Windows.Controls.CleanUpVirtualizedItemEventHandler)">
          <source>The word "virtualize" refers to a technique by which a subset of <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> elements are generated from a larger number of data items based on which items are visible on-screen.</source>
          <target state="translated">되는 기술을 나타냅니다 "가상화" 단어의 하위 집합 <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> 요소가 화면에 표시 되는 항목에 따라 데이터 항목의 많은 수에서 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.AddCleanUpVirtualizedItemHandler(System.Windows.DependencyObject,System.Windows.Controls.CleanUpVirtualizedItemEventHandler)">
          <source>Generating many <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> elements when only a few elements might be on the screen can adversely affect the performance of your application.</source>
          <target state="translated">많이 생성 <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> 화면에 몇 개의 요소만 있을 수 있습니다 하는 경우 요소 응용 프로그램의 성능이 저하 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.AddCleanUpVirtualizedItemHandler(System.Windows.DependencyObject,System.Windows.Controls.CleanUpVirtualizedItemEventHandler)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> calculates the number of visible items and works with the <ph id="ph2">&lt;xref:System.Windows.Controls.ItemContainerGenerator&gt;</ph> from an <ph id="ph3">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> (such as <ph id="ph4">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> or <ph id="ph5">&lt;xref:System.Windows.Controls.ListView&gt;</ph>) to create <ph id="ph6">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> elements only for visible items.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> 표시 되는 항목 수를 계산 하며와 함께 작동는 <ph id="ph2">&lt;xref:System.Windows.Controls.ItemContainerGenerator&gt;</ph> 에서 <ph id="ph3">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> (같은 <ph id="ph4">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> 또는 <ph id="ph5">&lt;xref:System.Windows.Controls.ListView&gt;</ph>)를 만드는 <ph id="ph6">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> 표시 되는 항목에 대 한 요소입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride(System.Windows.Size)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> that this element should use to arrange its child elements.</source>
          <target state="translated">이 요소에서 자식 요소를 정렬하는 데 사용할 <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride(System.Windows.Size)">
          <source>Arranges the content of a <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizingStackPanel" /&gt;</ph> element.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizingStackPanel" /&gt;</ph> 요소의 콘텐츠를 정렬합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride(System.Windows.Size)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> that represents the arranged size of this <ph id="ph2">&lt;see cref="T:System.Windows.Controls.VirtualizingStackPanel" /&gt;</ph> element and its child elements.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> 요소 및 자식 요소의 정렬된 크기를 나타내는 <ph id="ph2">&lt;see cref="T:System.Windows.Controls.VirtualizingStackPanel" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride(System.Windows.Size)">
          <source>You can override the <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Controls.VirtualizingStackPanel.MeasureOverride%2A&gt;</ph> methods in a derived class for custom layout behavior.</source>
          <target state="translated">재정의할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Controls.VirtualizingStackPanel.MeasureOverride%2A&gt;</ph> 메서드는 파생된 클래스에서 사용자 지정 레이아웃 동작에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.BringIndexIntoView(System.Int32)">
          <source>The position of the item to generate and make visible.</source>
          <target state="translated">생성하여 표시할 항목의 위치입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.BringIndexIntoView(System.Int32)">
          <source>Generates the item at the specified index position and brings it into view.</source>
          <target state="translated">지정된 인덱스 위치에서 항목을 생성하고 뷰로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.BringIndexIntoView(System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="index" /&gt;</ph> position does not exist in the child collection.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 위치가 자식 컬렉션에 없는 경우</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.VirtualizingStackPanel.CanHierarchicallyScrollAndVirtualizeCore">
          <source>Gets value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizingStackPanel" /&gt;</ph> can virtualize items that are grouped or organized in a hierarchy.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizingStackPanel" /&gt;</ph>이 계층 구조에서 그룹화되거나 구성된 항목을 가상화할 수 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.VirtualizingStackPanel.CanHierarchicallyScrollAndVirtualizeCore">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> in all cases.</source>
          <target state="translated">모든 경우에 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.VirtualizingStackPanel.CanHorizontallyScroll">
          <source>Gets or sets a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizingStackPanel" /&gt;</ph> can scroll in the horizontal dimension.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizingStackPanel" /&gt;</ph>을 가로 방향으로 스크롤할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.VirtualizingStackPanel.CanHorizontallyScroll">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if content can scroll in the horizontal dimension; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">콘텐츠를 가로 방향으로 스크롤할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.VirtualizingStackPanel.CanHorizontallyScroll">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.VirtualizingStackPanel.CanVerticallyScroll">
          <source>Gets or sets a value that indicates whether content can scroll in the vertical dimension.</source>
          <target state="translated">콘텐츠를 세로 방향으로 스크롤할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.VirtualizingStackPanel.CanVerticallyScroll">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if content can scroll in the vertical dimension; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">콘텐츠를 세로 방향으로 스크롤할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.VirtualizingStackPanel.CanVerticallyScroll">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItemEvent">
          <source>Identifies the <ph id="ph1">&lt;see langword="VirtualizingStackPanel.CleanUpVirtualizedItem" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="VirtualizingStackPanel.CleanUpVirtualizedItem" /&gt;</ph> 연결된 이벤트를 식별합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.VirtualizingStackPanel.ExtentHeight">
          <source>Gets a value that contains the vertical size of the extent.</source>
          <target state="translated">범위의 세로 크기가 포함된 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.VirtualizingStackPanel.ExtentHeight">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that represents the vertical size of the extent.</source>
          <target state="translated">범위의 세로 크기를 나타내는 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.VirtualizingStackPanel.ExtentHeight">
          <source>The default is 0.0.</source>
          <target state="translated">기본값은 0.0입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.VirtualizingStackPanel.ExtentWidth">
          <source>Gets a value that contains the horizontal size of the extent.</source>
          <target state="translated">범위의 가로 크기가 포함된 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.VirtualizingStackPanel.ExtentWidth">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that represents the horizontal size of the extent.</source>
          <target state="translated">범위의 가로 크기를 나타내는 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.VirtualizingStackPanel.ExtentWidth">
          <source>The default is 0.0.</source>
          <target state="translated">기본값은 0.0입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.GetItemOffsetCore(System.Windows.UIElement)">
          <source>The element whose position to find.</source>
          <target state="translated">위치를 찾을 요소입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.GetItemOffsetCore(System.Windows.UIElement)">
          <source>Returns the position of the specified item, relative to the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizingStackPanel" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizingStackPanel" /&gt;</ph>을 기준으로 하는 지정된 항목의 위치를 반환합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.GetItemOffsetCore(System.Windows.UIElement)">
          <source>The position of the specified item, relative to the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizingStackPanel" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizingStackPanel" /&gt;</ph>을 기준으로 하는 지정된 항목의 위치입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.VirtualizingStackPanel.HasLogicalOrientation">
          <source>Gets a value that indicates if this <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizingStackPanel" /&gt;</ph> has a vertical or horizontal orientation.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizingStackPanel" /&gt;</ph>의 방향이 가로 또는 세로인지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.VirtualizingStackPanel.HasLogicalOrientation">
          <source>This property always returns <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">이 속성은 항상 <ph id="ph1">&lt;see langword="true" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.VirtualizingStackPanel.HasLogicalOrientation">
          <source>This property always returns <ph id="ph1">`true`</ph> because a <ph id="ph2">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> must have either a vertical or horizontal orientation.</source>
          <target state="translated">이 속성은 항상 반환 <ph id="ph1">`true`</ph> 때문에 <ph id="ph2">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> 세로 또는 가로 방향 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset">
          <source>Gets a value that contains the horizontal offset of the scrolled content.</source>
          <target state="translated">스크롤된 콘텐츠의 가로 오프셋을 포함하는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset">
          <source><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that represents the horizontal offset of the scrolled content.</source>
          <target state="translated">스크롤된 콘텐츠의 가로 오프셋을 나타내는 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset">
          <source>The default is 0.0.</source>
          <target state="translated">기본값은 0.0입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizingProperty">
          <source>Identifies the <ph id="ph1">&lt;see langword="VirtualizingPanel.IsVirtualizing" /&gt;</ph> attached property.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="VirtualizingPanel.IsVirtualizing" /&gt;</ph> 연결된 속성을 식별합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.LineDown">
          <source>Scrolls content downward by one logical unit.</source>
          <target state="translated">콘텐츠를 논리 단위 하나만큼 아래쪽으로 스크롤합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.LineDown">
          <source>You can override this method in a derived class to change how the stack panel scrolls content downward.</source>
          <target state="translated">스택 패널 콘텐츠를 아래로 스크롤 하는 방법을 변경할 수는 파생된 클래스에서이 메서드를 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.LineDown">
          <source>For example, you can scroll content down by two units instead of one.</source>
          <target state="translated">예를 들어 한 개가 아닌 두 단위씩 콘텐츠 아래로 스크롤할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.LineDown">
          <source>If you require physical scrolling instead of logical scrolling, wrap the <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> in a <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> and set its <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> property to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">논리적 스크롤 하는 대신 실제 스크롤이 필요한 경우 래핑하는 <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> 설정 하 고 해당 <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> 속성을 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.LineDown">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> provides scrolling, and virtualization is disabled.</source>
          <target state="translated">이 경우에 <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> 스크롤 및 가상화 되지 않는지를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.LineLeft">
          <source>Scrolls content to the left by one logical unit.</source>
          <target state="translated">콘텐츠를 논리 단위 하나만큼 왼쪽으로 스크롤합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.LineLeft">
          <source>You can override this method in a derived class to change how the stack panel scrolls content downward.</source>
          <target state="translated">스택 패널 콘텐츠를 아래로 스크롤 하는 방법을 변경할 수는 파생된 클래스에서이 메서드를 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.LineLeft">
          <source>For example, you can scroll content down by two units instead of one.</source>
          <target state="translated">예를 들어 한 개가 아닌 두 단위씩 콘텐츠 아래로 스크롤할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.LineLeft">
          <source>If you require physical scrolling instead of logical scrolling, wrap the <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> in a <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> and set its <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> property to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">논리적 스크롤 하는 대신 실제 스크롤이 필요한 경우 래핑하는 <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> 설정 하 고 해당 <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> 속성을 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.LineLeft">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> provides scrolling, and virtualization is disabled.</source>
          <target state="translated">이 경우에 <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> 스크롤 및 가상화 되지 않는지를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.LineRight">
          <source>Scrolls content to the right by one logical unit.</source>
          <target state="translated">콘텐츠를 논리 단위 하나만큼 오른쪽으로 스크롤합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.LineRight">
          <source>You can override this method in a derived class to change how the stack panel scrolls content to the right.</source>
          <target state="translated">스택 패널 오른쪽에 콘텐츠를 스크롤 하는 방법을 변경 하려면 파생된 클래스에서이 메서드를 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.LineRight">
          <source>For example, you can scroll content right by two units instead of one.</source>
          <target state="translated">콘텐츠를 스크롤할 수는 예를 들어 한 개가 아닌 두 명의 단위 오른쪽으로 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.LineRight">
          <source>If you require physical scrolling instead of logical scrolling, wrap the <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> in a <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> and set its <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> property to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">논리적 스크롤 하는 대신 실제 스크롤이 필요한 경우 래핑하는 <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> 설정 하 고 해당 <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> 속성을 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.LineRight">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> provides scrolling, and virtualization is disabled.</source>
          <target state="translated">이 경우에 <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> 스크롤 및 가상화 되지 않는지를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.LineUp">
          <source>Scrolls content upward by one logical unit.</source>
          <target state="translated">콘텐츠를 논리 단위 하나만큼 위쪽으로 스크롤합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.LineUp">
          <source>You can override this method in a derived class to change how the stack panel scrolls content upward.</source>
          <target state="translated">스택 패널 콘텐츠를 위로 스크롤 하는 방법을 변경할 수는 파생된 클래스에서이 메서드를 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.LineUp">
          <source>For example, you can scroll up two units instead of one.</source>
          <target state="translated">예를 들어 한 개가 아닌 두 명의 단위를 스크롤할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.LineUp">
          <source>If you require physical scrolling instead of logical scrolling, wrap the <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> in a <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> and set its <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> property to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">논리적 스크롤 하는 대신 실제 스크롤이 필요한 경우 래핑하는 <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> 설정 하 고 해당 <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> 속성을 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.LineUp">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> provides scrolling, and virtualization is disabled.</source>
          <target state="translated">이 경우에 <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> 스크롤 및 가상화 되지 않는지를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.VirtualizingStackPanel.LogicalOrientation">
          <source>Gets a value that represents the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Orientation" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.VirtualizingStackPanel" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.Orientation" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Windows.Controls.VirtualizingStackPanel" /&gt;</ph>을 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.VirtualizingStackPanel.LogicalOrientation">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Orientation" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.Orientation" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> that becomes visible.</source>
          <target state="translated">표시할 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> that represents the coordinate space within a <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> 내의 좌표 공간을 나타내는 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)">
          <source>Scrolls to the specified coordinates and makes that portion of a <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> visible.</source>
          <target state="translated">지정된 좌표로 스크롤하여 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>의 해당 부분이 표시되도록 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> that is visible.</source>
          <target state="translated">표시되는 <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.MeasureOverride(System.Windows.Size)">
          <source>An upper limit <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> that should not be exceeded.</source>
          <target state="translated">초과할 수 없는 상한 <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.MeasureOverride(System.Windows.Size)">
          <source>Measures the child elements of a <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizingStackPanel" /&gt;</ph> in anticipation of arranging them during the <ph id="ph2">&lt;see cref="M:System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride(System.Windows.Size)" /&gt;</ph> pass.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizingStackPanel" /&gt;</ph> 실행 도중 자식 요소를 정렬하기 위해 <ph id="ph2">&lt;see cref="M:System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride(System.Windows.Size)" /&gt;</ph>의 자식 요소를 측정합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.MeasureOverride(System.Windows.Size)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> that represents the desired size of the element.</source>
          <target state="translated">원하는 요소 크기를 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.MeasureOverride(System.Windows.Size)">
          <source>When scrolling, <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> does not grow in layout size, but effectively adds its descendants on a z-plane, which is normally clipped by a parent element (typically a <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollContentPresenter&gt;</ph>) to the size of the stack.</source>
          <target state="translated">스크롤할 때 <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> 레이아웃 크기를 늘리지 않습니다 하지만 효과적으로 z 평면의 부모 요소에 의해 일반적으로 클리핑는 해당 하위 항목을 추가 (일반적으로 <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollContentPresenter&gt;</ph>) 스택 크기를 합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelDown">
          <source>Scrolls content logically downward in response to a downward click of the mouse wheel button.</source>
          <target state="translated">마우스 휠 단추를 아래쪽 클릭하는 동작에 대한 응답으로 콘텐츠를 논리적으로 아래쪽으로 스크롤합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelDown">
          <source>You can override <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel.MouseWheelDown%2A&gt;</ph> in a derived class to change how the stack panel responds to the mouse wheel down action.</source>
          <target state="translated">재정의할 수 <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel.MouseWheelDown%2A&gt;</ph> 스택 패널 마우스 휠 아래로 작업에 응답 하는 방법을 변경 하려면 파생된 클래스에서 합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelDown">
          <source>If you require physical scrolling instead of logical scrolling, wrap the <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> in a <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> and set its <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> property to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">논리적 스크롤 하는 대신 실제 스크롤이 필요한 경우 래핑하는 <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> 설정 하 고 해당 <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> 속성을 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelDown">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> provides scrolling, and virtualization is disabled.</source>
          <target state="translated">이 경우에 <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> 스크롤 및 가상화 되지 않는지를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelLeft">
          <source>Scrolls content logically to the left in response to a left click of the mouse wheel button.</source>
          <target state="translated">마우스 휠 단추를 왼쪽 클릭하는 동작에 대한 응답으로 콘텐츠를 논리적으로 왼쪽으로 스크롤합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelLeft">
          <source>You can override <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel.MouseWheelLeft%2A&gt;</ph> in a derived class to change how the stack panel responds to the mouse wheel left action.</source>
          <target state="translated">재정의할 수 <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel.MouseWheelLeft%2A&gt;</ph> 스택 패널 마우스 휠 왼쪽된 작업에 응답 하는 방법을 변경 하려면 파생된 클래스에서 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelLeft">
          <source>If you require physical scrolling instead of logical scrolling, wrap the <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> in a <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> and set its <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> property to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">논리적 스크롤 하는 대신 실제 스크롤이 필요한 경우 래핑하는 <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> 설정 하 고 해당 <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> 속성을 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelLeft">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> provides scrolling, and virtualization is disabled.</source>
          <target state="translated">이 경우에 <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> 스크롤 및 가상화 되지 않는지를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelRight">
          <source>Scrolls content logically to the right in response to a right click of the mouse wheel button.</source>
          <target state="translated">마우스 휠 단추를 오른쪽 클릭하는 동작에 대한 응답으로 콘텐츠를 논리적으로 오른쪽으로 스크롤합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelRight">
          <source>You can override <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel.MouseWheelRight%2A&gt;</ph> in a derived class to change how the stack panel responds to the mouse wheel right action.</source>
          <target state="translated">재정의할 수 <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel.MouseWheelRight%2A&gt;</ph> 스택 패널 마우스 휠 오른쪽 작업에 응답 하는 방법을 변경 하려면 파생된 클래스에서 합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelRight">
          <source>If you require physical scrolling instead of logical scrolling, wrap the <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> in a <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> and set its <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> property to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">논리적 스크롤 하는 대신 실제 스크롤이 필요한 경우 래핑하는 <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> 설정 하 고 해당 <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> 속성을 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelRight">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> provides scrolling, and virtualization is disabled.</source>
          <target state="translated">이 경우에 <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> 스크롤 및 가상화 되지 않는지를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelUp">
          <source>Scrolls content logically upward in response to an upward click of the mouse wheel button.</source>
          <target state="translated">마우스 휠 단추를 위쪽 클릭하는 동작에 대한 응답으로 콘텐츠를 논리적으로 위쪽으로 스크롤합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelUp">
          <source>You can override <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel.MouseWheelUp%2A&gt;</ph> in a derived class to change how the stack panel responds to the mouse wheel up action.</source>
          <target state="translated">재정의할 수 <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel.MouseWheelUp%2A&gt;</ph> 스택 패널 마우스 휠 위로 작업에 응답 하는 방법을 변경 하려면 파생된 클래스에서 합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelUp">
          <source>If you require physical scrolling instead of logical scrolling, wrap the <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> in a <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> and set its <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> property to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">논리적 스크롤 하는 대신 실제 스크롤이 필요한 경우 래핑하는 <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> 설정 하 고 해당 <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> 속성을 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelUp">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> provides scrolling, and virtualization is disabled.</source>
          <target state="translated">이 경우에 <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> 스크롤 및 가상화 되지 않는지를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.OnCleanUpVirtualizedItem(System.Windows.Controls.CleanUpVirtualizedItemEventArgs)">
          <source>Data about the event.</source>
          <target state="translated">이벤트에 대한 데이터입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.OnCleanUpVirtualizedItem(System.Windows.Controls.CleanUpVirtualizedItemEventArgs)">
          <source>Called when an item that is hosted by the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizingStackPanel" /&gt;</ph> is re-virtualized.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizingStackPanel" /&gt;</ph>에 의해 호스팅되는 항목이 다시 가상화될 때 호출됩니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.OnCleanUpVirtualizedItem(System.Windows.Controls.CleanUpVirtualizedItemEventArgs)">
          <source>The standard layout system creates item containers and computes layout for each item associated with a list control.</source>
          <target state="translated">표준 레이아웃 시스템 항목 컨테이너를 만들고 목록 컨트롤과 관련 된 각 항목에 대 한 레이아웃을 계산 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.OnCleanUpVirtualizedItem(System.Windows.Controls.CleanUpVirtualizedItemEventArgs)">
          <source>The word "virtualize" refers to a technique by which a subset of <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> elements are generated from a larger number of data items based on which items are visible on-screen.</source>
          <target state="translated">되는 기술을 나타냅니다 "가상화" 단어의 하위 집합 <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> 요소가 화면에 표시 되는 항목에 따라 데이터 항목의 많은 수에서 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.OnCleanUpVirtualizedItem(System.Windows.Controls.CleanUpVirtualizedItemEventArgs)">
          <source>Generating many <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> elements when only a few elements might be on the screen can adversely affect the performance of your application.</source>
          <target state="translated">많이 생성 <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> 화면에 몇 개의 요소만 있을 수 있습니다 하는 경우 요소 응용 프로그램의 성능이 저하 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.OnCleanUpVirtualizedItem(System.Windows.Controls.CleanUpVirtualizedItemEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> calculates the number of visible items and works with the <ph id="ph2">&lt;xref:System.Windows.Controls.ItemContainerGenerator&gt;</ph> from an <ph id="ph3">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> (such as <ph id="ph4">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> or <ph id="ph5">&lt;xref:System.Windows.Controls.ListView&gt;</ph>) to create <ph id="ph6">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> elements only for visible items.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> 표시 되는 항목 수를 계산 하며와 함께 작동는 <ph id="ph2">&lt;xref:System.Windows.Controls.ItemContainerGenerator&gt;</ph> 에서 <ph id="ph3">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> (같은 <ph id="ph4">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> 또는 <ph id="ph5">&lt;xref:System.Windows.Controls.ListView&gt;</ph>)를 만드는 <ph id="ph6">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> 표시 되는 항목에 대 한 요소입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.OnClearChildren">
          <source>Called when the collection of child elements is cleared by the base <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Panel" /&gt;</ph> class.</source>
          <target state="translated">기본 <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Panel" /&gt;</ph> 클래스에 의해 자식 요소 컬렉션이 지워질 때 호출됩니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that raised the event.</source>
          <target state="translated">이벤트를 발생시킨 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
          <source>Provides data for the <ph id="ph1">&lt;see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /&gt;</ph> 이벤트에 대한 데이터를 제공합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
          <source>Called when the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ItemsControl.Items" /&gt;</ph> collection that is associated with the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.ItemsControl" /&gt;</ph> for this <ph id="ph3">&lt;see cref="T:System.Windows.Controls.Panel" /&gt;</ph> changes.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ItemsControl.Items" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Windows.Controls.ItemsControl" /&gt;</ph>에 연결된 <ph id="ph3">&lt;see cref="T:System.Windows.Controls.Panel" /&gt;</ph> 컬렉션이 변경될 때 호출됩니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.OnViewportOffsetChanged(System.Windows.Vector,System.Windows.Vector)">
          <source>The old offset of the viewport.</source>
          <target state="translated">뷰포트의 이전 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.OnViewportOffsetChanged(System.Windows.Vector,System.Windows.Vector)">
          <source>The new offset of the viewport</source>
          <target state="translated">뷰포트의 새 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.OnViewportOffsetChanged(System.Windows.Vector,System.Windows.Vector)">
          <source>Called when the offset of the viewport changes as a user scrolls through content.</source>
          <target state="translated">사용자가 콘텐츠를 스크롤하면서 뷰포트의 오프셋이 변경될 때 호출됩니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.OnViewportOffsetChanged(System.Windows.Vector,System.Windows.Vector)">
          <source>Use this method, in a derived class, to detect and respond to changes in the viewport location.</source>
          <target state="translated">파생된 클래스에서이 메서드를 사용 하 여를 감지 하 여 뷰포트 위치에 변경 내용에 응답 합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.OnViewportSizeChanged(System.Windows.Size,System.Windows.Size)">
          <source>The old size of the viewport.</source>
          <target state="translated">뷰포트의 이전 크기입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.OnViewportSizeChanged(System.Windows.Size,System.Windows.Size)">
          <source>The new size of the viewport.</source>
          <target state="translated">뷰포트의 새 크기입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.OnViewportSizeChanged(System.Windows.Size,System.Windows.Size)">
          <source>Called when the size of the viewport changes.</source>
          <target state="translated">뷰포트의 크기를 변경할 때 호출됩니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.OnViewportSizeChanged(System.Windows.Size,System.Windows.Size)">
          <source>Use this method, in a derived class, to detect and respond to changes in the viewport size.</source>
          <target state="translated">파생된 클래스에서이 메서드를 사용 하 여를 감지 하 여 뷰포트 크기의 변경에 대응 합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.VirtualizingStackPanel.Orientation">
          <source>Gets or sets a value that describes the horizontal or vertical orientation of stacked content.</source>
          <target state="translated">누적된 콘텐츠가 가로 방향인지 아니면 세로 방향인지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.VirtualizingStackPanel.Orientation">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Orientation" /&gt;</ph> of child content.</source>
          <target state="translated">자식 콘텐츠의 <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Orientation" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.VirtualizingStackPanel.Orientation">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Controls.Orientation.Vertical" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Windows.Controls.Orientation.Vertical" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.VirtualizingStackPanel.Orientation">
          <source>Dependency Property Information</source>
          <target state="translated">종속성 속성 정보</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.VirtualizingStackPanel.Orientation">
          <source>Identifier field</source>
          <target state="translated">식별자 필드</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.VirtualizingStackPanel.Orientation">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">로 메타 데이터 속성 설정 <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.VirtualizingStackPanel.OrientationProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.VirtualizingStackPanel.Orientation" /&gt;</ph> dependency property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Controls.VirtualizingStackPanel.Orientation" /&gt;</ph> 종속성 속성을 식별합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.PageDown">
          <source>Scrolls content downward by one page.</source>
          <target state="translated">콘텐츠를 한 페이지 아래쪽으로 스크롤합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.PageDown">
          <source>You can override <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel.PageDown%2A&gt;</ph> in a derived class to change how the stack panel responds to the page down action.</source>
          <target state="translated">재정의할 수 <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel.PageDown%2A&gt;</ph> 스택 패널이 page down 동작에 반응 하는 방법을 변경 하려면 파생된 클래스에서 합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.PageDown">
          <source>If you require physical scrolling instead of logical scrolling, wrap the <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> in a <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> and set its <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> property to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">논리적 스크롤 하는 대신 실제 스크롤이 필요한 경우 래핑하는 <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> 설정 하 고 해당 <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> 속성을 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.PageDown">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> provides scrolling, and virtualization is disabled.</source>
          <target state="translated">이 경우에 <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> 스크롤 및 가상화 되지 않는지를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.PageLeft">
          <source>Scrolls content to the left by one page.</source>
          <target state="translated">콘텐츠를 한 페이지 왼쪽으로 스크롤합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.PageLeft">
          <source>You can override <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel.PageLeft%2A&gt;</ph> in a derived class to change how the stack panel responds to the page left action.</source>
          <target state="translated">재정의할 수 <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel.PageLeft%2A&gt;</ph> 스택 패널 응답 페이지 왼쪽으로 작업 하는 방식을 변경 하려면 파생된 클래스에서 합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.PageLeft">
          <source>If you require physical scrolling instead of logical scrolling, wrap the <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> in a <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> and set its <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> property to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">논리적 스크롤 하는 대신 실제 스크롤이 필요한 경우 래핑하는 <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> 설정 하 고 해당 <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> 속성을 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.PageLeft">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> provides scrolling, and virtualization is disabled.</source>
          <target state="translated">이 경우에 <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> 스크롤 및 가상화 되지 않는지를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.PageRight">
          <source>Scrolls content to the right by one page.</source>
          <target state="translated">콘텐츠를 한 페이지 오른쪽으로 스크롤합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.PageRight">
          <source>You can override <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel.PageRight%2A&gt;</ph> in a derived class to change how the stack panel responds to the page right action.</source>
          <target state="translated">재정의할 수 <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel.PageRight%2A&gt;</ph> 스택 패널 페이지 오른쪽 액션에 응답 하는 방법을 변경 하려면 파생된 클래스에서 합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.PageRight">
          <source>If you require physical scrolling instead of logical scrolling, wrap the <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> in a <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> and set its <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> property to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">논리적 스크롤 하는 대신 실제 스크롤이 필요한 경우 래핑하는 <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> 설정 하 고 해당 <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> 속성을 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.PageRight">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> provides scrolling, and virtualization is disabled.</source>
          <target state="translated">이 경우에 <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> 스크롤 및 가상화 되지 않는지를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.PageUp">
          <source>Scrolls content upward by one page.</source>
          <target state="translated">콘텐츠를 한 페이지 위쪽으로 스크롤합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.PageUp">
          <source>You can override <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel.PageUp%2A&gt;</ph> in a derived class to change how the stack panel responds to the page up action.</source>
          <target state="translated">재정의할 수 <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel.PageUp%2A&gt;</ph> 스택 패널 위로 작업 페이지에 반응 하는 방법을 변경할 수는 있습니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.PageUp">
          <source>If you require physical scrolling instead of logical scrolling, wrap the <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> in a <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> and set its <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> property to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">논리적 스크롤 하는 대신 실제 스크롤이 필요한 경우 래핑하는 <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> 설정 하 고 해당 <ph id="ph3">&lt;xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A&gt;</ph> 속성을 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.PageUp">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> provides scrolling, and virtualization is disabled.</source>
          <target state="translated">이 경우에 <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> 스크롤 및 가상화 되지 않는지를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.RemoveCleanUpVirtualizedItemHandler(System.Windows.DependencyObject,System.Windows.Controls.CleanUpVirtualizedItemEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> from which the handler is being removed.</source>
          <target state="translated">처리기가 제거되는 <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.RemoveCleanUpVirtualizedItemHandler(System.Windows.DependencyObject,System.Windows.Controls.CleanUpVirtualizedItemEventHandler)">
          <source>Specifies the event handler that is to be removed.</source>
          <target state="translated">제거할 이벤트 처리기를 지정합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.RemoveCleanUpVirtualizedItemHandler(System.Windows.DependencyObject,System.Windows.Controls.CleanUpVirtualizedItemEventHandler)">
          <source>Removes an event handler for the <ph id="ph1">&lt;see langword="VirtualizingStackPanel.CleanUpVirtualizedItem" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="VirtualizingStackPanel.CleanUpVirtualizedItem" /&gt;</ph> 연결된 이벤트에 대한 이벤트 처리기를 제거합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.RemoveCleanUpVirtualizedItemHandler(System.Windows.DependencyObject,System.Windows.Controls.CleanUpVirtualizedItemEventHandler)">
          <source>The standard layout system creates item containers and computes layout for each item associated with a list control.</source>
          <target state="translated">표준 레이아웃 시스템 항목 컨테이너를 만들고 목록 컨트롤과 관련 된 각 항목에 대 한 레이아웃을 계산 합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.RemoveCleanUpVirtualizedItemHandler(System.Windows.DependencyObject,System.Windows.Controls.CleanUpVirtualizedItemEventHandler)">
          <source>The word "virtualize" refers to a technique by which a subset of <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> elements are generated from a larger number of data items based on which items are visible on-screen.</source>
          <target state="translated">되는 기술을 나타냅니다 "가상화" 단어의 하위 집합 <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> 요소가 화면에 표시 되는 항목에 따라 데이터 항목의 많은 수에서 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.RemoveCleanUpVirtualizedItemHandler(System.Windows.DependencyObject,System.Windows.Controls.CleanUpVirtualizedItemEventHandler)">
          <source>Generating many <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> elements when only a few elements might be on the screen can adversely affect the performance of your application.</source>
          <target state="translated">많이 생성 <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> 화면에 몇 개의 요소만 있을 수 있습니다 하는 경우 요소 응용 프로그램의 성능이 저하 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.VirtualizingStackPanel.RemoveCleanUpVirtualizedItemHandler(System.Windows.DependencyObject,System.Windows.Controls.CleanUpVirtualizedItemEventHandler)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> calculates the number of visible items and works with the <ph id="ph2">&lt;xref:System.Windows.Controls.ItemContainerGenerator&gt;</ph> from an <ph id="ph3">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> (such as <ph id="ph4">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> or <ph id="ph5">&lt;xref:System.Windows.Controls.ListView&gt;</ph>) to create <ph id="ph6">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> elements only for visible items.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> 표시 되는 항목 수를 계산 하며와 함께 작동는 <ph id="ph2">&lt;xref:System.Windows.Controls.ItemContainerGenerator&gt;</ph> 에서 <ph id="ph3">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> (같은 <ph id="ph4">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> 또는 <ph id="ph5">&lt;xref:System.Windows.Controls.ListView&gt;</ph>)를 만드는 <ph id="ph6">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> 표시 되는 항목에 대 한 요소입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.VirtualizingStackPanel.ScrollOwner">
          <source>Gets or sets a value that identifies the container that controls scrolling behavior in this <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizingStackPanel" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Controls.VirtualizingStackPanel" /&gt;</ph>의 스크롤 동작을 제어하는 컨테이너를 식별하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.VirtualizingStackPanel.ScrollOwner">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ScrollViewer" /&gt;</ph> that owns scrolling for this <ph id="ph2">&lt;see cref="T:System.Windows.Controls.VirtualizingStackPanel" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ScrollViewer" /&gt;</ph>의 스크롤을 제어하는 <ph id="ph2">&lt;see cref="T:System.Windows.Controls.VirtualizingStackPanel" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.VirtualizingStackPanel.ScrollOwner">
          <source>If a <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> control is the <ph id="ph2">&lt;xref:System.Windows.Controls.VirtualizingStackPanel.ScrollOwner%2A&gt;</ph>, physical scrolling is enabled.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> 컨트롤은는 <ph id="ph2">&lt;xref:System.Windows.Controls.VirtualizingStackPanel.ScrollOwner%2A&gt;</ph>, 물리적 스크롤을 사용 하도록 설정 합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.VirtualizingStackPanel.ScrollOwner">
          <source>If a <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> is the <ph id="ph2">&lt;xref:System.Windows.Controls.VirtualizingStackPanel.ScrollOwner%2A&gt;</ph>, scrolling is logical by child element.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> 는 <ph id="ph2">&lt;xref:System.Windows.Controls.VirtualizingStackPanel.ScrollOwner%2A&gt;</ph>, 스크롤 효과 자식 요소로 논리입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.SetHorizontalOffset(System.Double)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset" /&gt;</ph> 속성 값</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.SetHorizontalOffset(System.Double)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset" /&gt;</ph> 속성의 값을 설정합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.SetVerticalOffset(System.Double)">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset" /&gt;</ph> 속성 값</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.SetVerticalOffset(System.Double)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset" /&gt;</ph> 속성의 값을 설정합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.ShouldItemsChangeAffectLayoutCore(System.Boolean,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the changed item is a direct child of this <ph id="ph2">&lt;see cref="T:System.Windows.Controls.VirtualizingPanel" /&gt;</ph>; <ph id="ph3">&lt;see langword="false" /&gt;</ph> if the changed item is an indirect descendant of the <ph id="ph4">&lt;see cref="T:System.Windows.Controls.VirtualizingPanel" /&gt;</ph>.</source>
          <target state="translated">변경된 항목이 이 <ph id="ph2">&lt;see cref="T:System.Windows.Controls.VirtualizingPanel" /&gt;</ph>의 직접 자식이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 변경된 항목이 <ph id="ph4">&lt;see cref="T:System.Windows.Controls.VirtualizingPanel" /&gt;</ph>의 간접 하위 항목이면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.ShouldItemsChangeAffectLayoutCore(System.Boolean,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
          <source>Contains data regarding the changed item.</source>
          <target state="translated">변경된 항목에 대한 데이터를 포함합니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.ShouldItemsChangeAffectLayoutCore(System.Boolean,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
          <source>Returns a value that indicates whether a changed item in an <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ItemsControl" /&gt;</ph> affects the layout for this panel.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.ItemsControl" /&gt;</ph>에서 변경된 항목이 이 패널의 레이아웃에 영향을 주는지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.VirtualizingStackPanel.ShouldItemsChangeAffectLayoutCore(System.Boolean,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the changed item in an <ph id="ph2">&lt;see cref="T:System.Windows.Controls.ItemsControl" /&gt;</ph> affects the layout for this panel; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Controls.ItemsControl" /&gt;</ph>의 변경된 항목이 이 패널의 레이아웃에 영향을 미치면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset">
          <source>Gets a value that contains the vertical offset of the scrolled content.</source>
          <target state="translated">스크롤된 콘텐츠의 세로 오프셋을 포함하는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that represents the vertical offset of the scrolled content.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 스크롤 된 콘텐츠의 세로 오프셋을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset">
          <source>The default is 0.0.</source>
          <target state="translated">기본값은 0.0입니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.VirtualizingStackPanel.ViewportHeight">
          <source>Gets a value that contains the vertical size of the viewport of the content.</source>
          <target state="translated">콘텐츠의 뷰포트에 대한 세로 크기를 포함하는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.VirtualizingStackPanel.ViewportHeight">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that represents the vertical size of the viewport of the content.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 콘텐츠의 뷰포트에 대 한 세로 크기를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.VirtualizingStackPanel.ViewportHeight">
          <source>The default is 0.0.</source>
          <target state="translated">기본값은 0.0입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.VirtualizingStackPanel.ViewportWidth">
          <source>Gets a value that contains the horizontal size of the viewport of the content.</source>
          <target state="translated">콘텐츠의 뷰포트에 대한 가로 크기를 포함하는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.VirtualizingStackPanel.ViewportWidth">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that represents the vertical size of the viewport of the content.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 콘텐츠의 뷰포트에 대 한 세로 크기를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.VirtualizingStackPanel.ViewportWidth">
          <source>The default is 0.0.</source>
          <target state="translated">기본값은 0.0입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.VirtualizingStackPanel.VirtualizationModeProperty">
          <source>Identifies the <ph id="ph1">&lt;see langword="VirtualizingStackPanel.VirtualizationMode" /&gt;</ph> attached property.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="VirtualizingStackPanel.VirtualizationMode" /&gt;</ph> 연결된 속성을 식별합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>