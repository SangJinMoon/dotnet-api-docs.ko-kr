<Type Name="GroupStyle" FullName="System.Windows.Controls.GroupStyle">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5632ce8acd9e2b3f133f542b27d5a1e11582fa18" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30619597" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class GroupStyle : System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi GroupStyle extends System.Object implements class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.GroupStyle" />
  <TypeSignature Language="VB.NET" Value="Public Class GroupStyle&#xA;Implements INotifyPropertyChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class GroupStyle : System::ComponentModel::INotifyPropertyChanged" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>각 수준에서 그룹을 확인하는 방법을 정의합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에 나온은 <xref:System.Windows.Controls.ItemsControl> 에 바인딩된는 <xref:System.Windows.Data.XmlDataProvider> 및 추가 하 고 그룹화 제거 논리를 포함 하는 코드 숨김 콘텐츠입니다. 확인란을 선택 하면,의 콘텐츠는 <xref:System.Windows.Controls.ItemsControl> 그룹화 되어 있는 `Type` 특성입니다.  
  
 형식의 각 그룹은 <xref:System.Windows.Data.CollectionViewGroup>합니다. <xref:System.Windows.Controls.GroupStyle> <xref:System.Windows.Controls.GroupStyle.HeaderTemplate%2A> 로 표시 되도록 지정는 <xref:System.Windows.Controls.TextBlock> 표시 하는 <xref:System.Windows.Data.CollectionViewGroup.Name%2A> 각각의 그룹입니다. 이 경우에 <xref:System.Windows.Data.CollectionViewGroup.Name%2A> 있거나 `Work` 또는 `Home`합니다.  
  
 [!code-xaml[GroupingSample#XAML](~/samples/snippets/csharp/VS_Snippets_Wpf/GroupingSample/CSharp/Window1.xaml#xaml)]  
  
 [!code-csharp[GroupingSample#Code](~/samples/snippets/csharp/VS_Snippets_Wpf/GroupingSample/CSharp/Window1.xaml.cs#code)]
 [!code-vb[GroupingSample#Code](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GroupingSample/visualbasic/window1.xaml.vb#code)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.Controls.ItemsControl.GroupStyle" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GroupStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.GroupStyle.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GroupStyle();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.GroupStyle" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternationCount">
      <MemberSignature Language="C#" Value="public int AlternationCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AlternationCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.AlternationCount" />
      <MemberSignature Language="VB.NET" Value="Public Property AlternationCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AlternationCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>교대로 반복되는 <see cref="T:System.Windows.Controls.GroupItem" /> 개체의 수를 가져오거나 설정합니다.</summary>
        <value>교대로 반복되는 <see cref="T:System.Windows.Controls.GroupItem" /> 개체 수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.GroupStyle.AlternationCount%2A> 속성 및 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> 연결 된 속성을 사용 하면 두 개 이상의 대체에 대 한 모양을 지정할 수 있도록 <xref:System.Windows.Controls.GroupItem> 개체입니다. 예를 들어 모든 제 3에 대 한 대체 배경 색을 지정할 수 있습니다 <xref:System.Windows.Controls.GroupItem> 에 <xref:System.Windows.Controls.ItemsControl>합니다.  <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> 각각에 할당 <xref:System.Windows.Controls.GroupItem> 에 <xref:System.Windows.Controls.ItemsControl>합니다.  <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> 0에서 시작 될 때까지 증가, <xref:System.Windows.Controls.GroupStyle.AlternationCount%2A> 1와 다음 다시 0에서 뺀 값입니다. 예를 들어 경우 <xref:System.Windows.Controls.GroupStyle.AlternationCount%2A> 은 3 이며 일곱 개의 <xref:System.Windows.Controls.GroupItem> 개체에 <xref:System.Windows.Controls.ItemsControl>, 다음 표에 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> 각 항목에 대 한 합니다.  
  
|위치 <xref:System.Windows.Controls.GroupItem> 에 <xref:System.Windows.Controls.ItemsControl>|<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>|  
|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|1|0|  
|2|1|  
|3|2|  
|4|0|  
|5|1|  
|6|2|  
|7|0|  
  
 여러 가지 방법을에 교대로 반복 되는 다른 모양을 지정 하는 데 <xref:System.Windows.Controls.GroupItem> 개체입니다. 속성에 바인딩하는 한 가지 방법은 <xref:System.Windows.Controls.GroupStyle.HeaderTemplate%2A> 또는 <xref:System.Windows.Controls.GroupStyle.ContainerStyle%2A> 의 <xref:System.Windows.Controls.GroupStyle> 에 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>합니다. 사용할 수 있습니다는 <xref:System.Windows.Controls.AlternationConverter> 에 적용 해야 하는 값을 지정 하는 <xref:System.Windows.Controls.GroupItem> 특정 있는 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> 값입니다. 값에 따라 속성의 값을 변경 하려면 트리거를 사용할 수도 있습니다는 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>합니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Windows.Controls.ListBox> 에 바인딩된는 <xref:System.Windows.Data.CollectionViewSource> 컬렉션에 항목을 그룹화 하 합니다. 이 예제에서는 각각의 헤더에 대 한 배경색을 교대로 반복 <xref:System.Windows.Controls.GroupItem> 두 색으로 다음을 수행 하 여 사이의:  
  
-   집합 <xref:System.Windows.Controls.GroupStyle.AlternationCount%2A> 2입니다.  
  
-   만듭니다는 <xref:System.Windows.Controls.AlternationConverter> 반환 하는 <xref:System.Windows.Media.SolidColorBrush>의 값에 따라 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>합니다.  
  
-   바인딩하는 <xref:System.Windows.Controls.TextBlock.Background%2A> 의 <xref:System.Windows.Controls.TextBlock> 에 <xref:System.Windows.Controls.GroupStyle.HeaderTemplate%2A> 에 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> 속성 제공는 <xref:System.Windows.Controls.AlternationConverter>합니다. 사항에 유의 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A> 연결 된 속성에 설정 되어는 <xref:System.Windows.Controls.GroupItem>, 바인딩 사용 하 여 <xref:System.Windows.Data.RelativeSourceMode.FindAncestor> 해당 값을 가져올 수 있습니다.  
  
 이 예제에서는 또한에 있는 항목의 배경색을 교대로 반복는 <xref:System.Windows.Controls.ListBox> 세 색을 설정 하 여 사이 <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> 에 <xref:System.Windows.Controls.ListBox> 및 바인딩을 <xref:System.Windows.Controls.Control.Background%2A> 각 <xref:System.Windows.Controls.ListBox> 에 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>합니다. 이 경우 백그라운드 사이 번갈아 전환 세 가지 색입니다.  
  
 <xref:System.Windows.Data.CollectionViewSource> 그룹 항목은 표시 되지 않도록 합니다.  참조 항목을 그룹화 하는 방법에 대 한 내용은 [하는 방법: 정렬 및 그룹 사용 하 여 데이터를 보려면](~/docs/framework/wpf/data/how-to-sort-and-group-data-using-a-view-in-xaml.md)합니다.  
  
 [!code-xaml[AlternationIndexSnippets#3](~/samples/snippets/csharp/VS_Snippets_Wpf/AlternationIndexSnippets/CS/Window1.xaml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style ContainerStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style ContainerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.ContainerStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ContainerStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ ContainerStyle { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>각 항목에 대해 생성된 <see cref="T:System.Windows.Controls.GroupItem" />에 적용되는 스타일을 가져오거나 설정합니다.</summary>
        <value>각 항목에 대해 생성된 <see cref="T:System.Windows.Controls.GroupItem" />에 적용되는 스타일입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 한 드문 만드는 <xref:System.Windows.Style> 리소스로 바운딩되어야 스타일을 만드는 대신 속성 요소 구문에 인라인은 좋은 대체 방법입니다.  
  
<a name="xamlAttributeUsage_ContainerStyle"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object ContainerStyle="{ResourceExtension StyleResourceKey}"/>  
```  
  
<a name="xamlValues_ColumnHeaderContainerStyle"></a>   
## <a name="xaml-values"></a>XAML 값  
 *ResourceExtension*  
 다음 중 하나: `StaticResource`, 또는 `DynamicResource`합니다. 참조 [XAML 리소스](~/docs/framework/wpf/advanced/xaml-resources.md)합니다.  
  
 *StyleResourceKey*  
 요청 되는 스타일을 식별 하는 키입니다. 기존 리소스를이 키는 한 <xref:System.Windows.ResourceDictionary>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.GroupStyle.ContainerStyleSelector" />
      </Docs>
    </Member>
    <Member MemberName="ContainerStyleSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.StyleSelector ContainerStyleSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.StyleSelector ContainerStyleSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.ContainerStyleSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property ContainerStyleSelector As StyleSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::StyleSelector ^ ContainerStyleSelector { System::Windows::Controls::StyleSelector ^ get(); void set(System::Windows::Controls::StyleSelector ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.StyleSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>응용 프로그램 작성자가 스타일에 대한 사용자 지정 선택 논리를 제공하여 생성된 각 <see cref="T:System.Windows.Controls.GroupItem" />에 적용할 수 있도록 합니다.</summary>
        <value>
          <see cref="T:System.Windows.Controls.StyleSelector" />에서 파생되는 개체입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Controls.DataTemplateSelector" />
        <altmember cref="P:System.Windows.Controls.GroupStyle.ContainerStyle" />
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Windows.Controls.GroupStyle Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Controls.GroupStyle Default" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As GroupStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Controls::GroupStyle ^ Default { System::Windows::Controls::GroupStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.GroupStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>그룹의 기본 스타일을 가져옵니다.</summary>
        <value>그룹의 기본 스타일입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Default"></a>   
## <a name="xaml-property-element-usage"></a>XAML 속성 요소 사용  
  
```  
<object>  
  <object.property>  
    <x:Static Member="GroupStyle.Default" …/>  
  </object.property>  
</object>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultGroupPanel">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Controls.ItemsPanelTemplate DefaultGroupPanel;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Controls.ItemsPanelTemplate DefaultGroupPanel" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.GroupStyle.DefaultGroupPanel" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultGroupPanel As ItemsPanelTemplate " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Controls::ItemsPanelTemplate ^ DefaultGroupPanel;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ItemsPanelTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>항목의 레이아웃에 사용되는 패널을 만드는 기본 <see cref="T:System.Windows.Controls.ItemsPanelTemplate" />을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 패널 필요할 때 제공 되는 패널입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderStringFormat">
      <MemberSignature Language="C#" Value="public string HeaderStringFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderStringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.HeaderStringFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderStringFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HeaderStringFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>헤더가 문자열로 표시되는 경우 헤더의 형식을 지정하는 방법을 지정하는 합성 문자열을 가져오거나 설정합니다.</summary>
        <value>헤더가 문자열로 표시되는 경우 이 헤더의 형식을 지정하는 방법을 지정하는 합성 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.GroupStyle.HeaderStringFormat%2A> 미리 정의 된 복합, 또는 사용자 지정 문자열 형식이 될 수 있습니다. 문자열 형식에 대 한 자세한 내용은 참조 [형식 지정](~/docs/standard/base-types/formatting-types.md)합니다. 설정 하는 경우는 <xref:System.Windows.Controls.GroupStyle.HeaderTemplate%2A> 또는 <xref:System.Windows.Controls.GroupStyle.HeaderTemplateSelector%2A> 속성은 <xref:System.Windows.Controls.GroupStyle>, <xref:System.Windows.Controls.GroupStyle.HeaderStringFormat%2A> 속성은 무시 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Windows.Controls.ListBox> 가격 범위 내에서 항목의 컬렉션을 그룹화 하 합니다.  변환기 `GroupByPrice`, 각 항목 가격 위쪽에 있는 정수 값을 반환 합니다. 예를 들어 항목의 가격이 0에서 100 사이 있으면 변환기 100을 반환 합니다. 이 예제에서는 사용 된 <xref:System.Windows.Controls.GroupStyle.HeaderStringFormat%2A> 각 가격 범위에 대 한 상한값을 포함 하는 문자열을 만듭니다. 예를 들어 미국 100 달러 아래의 항목 "항목을 100 달러" 이라는 제목 아래에 그룹화 됩니다.  
  
 [!code-xaml[ContentStringSnippets#GroupStyleHeaderStringFormat](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentStringSnippets/CSharp/Window1.xaml#groupstyleheaderstringformat)]  
  
 다음 예제와 `GroupByPrice` 클래스는 `PurchaseItem` 클래스 및 컬렉션 하는 <xref:System.Windows.Controls.ListBox> 에 바인딩된 합니다.  
  
 [!code-csharp[ContentStringSnippets#GroupStyleData](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentStringSnippets/CSharp/Window1.xaml.cs#groupstyledata)]
 [!code-vb[ContentStringSnippets#GroupStyleData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentStringSnippets/visualbasic/window1.xaml.vb#groupstyledata)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.HeaderTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderTemplate As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DataTemplate ^ HeaderTemplate { System::Windows::DataTemplate ^ get(); void set(System::Windows::DataTemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>그룹 머리글을 표시하는 데 사용되는 템플릿을 가져오거나 설정합니다.</summary>
        <value>그룹 머리글을 표시하는 데 사용되는 <see cref="T:System.Windows.DataTemplate" /> 개체입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에 나온은 <xref:System.Windows.Controls.ItemsControl> 에 바인딩된는 <xref:System.Windows.Data.XmlDataProvider> 및 추가 하 고 그룹화 제거 논리를 포함 하는 코드 숨김 콘텐츠입니다. 확인란을 선택 하면,의 콘텐츠는 <xref:System.Windows.Controls.ItemsControl> 그룹화 되어 있는 `Type` 특성입니다.  
  
 형식의 각 그룹은 <xref:System.Windows.Data.CollectionViewGroup>합니다. <xref:System.Windows.Controls.GroupStyle> <xref:System.Windows.Controls.GroupStyle.HeaderTemplate%2A> 로 표시 되도록 지정는 <xref:System.Windows.Controls.TextBlock> 표시 하는 <xref:System.Windows.Data.CollectionViewGroup.Name%2A> 각각의 그룹입니다. 이 경우에 <xref:System.Windows.Data.CollectionViewGroup.Name%2A> 있거나 `Work` 또는 `Home`합니다.  
  
 [!code-xaml[GroupingSample#XAML](~/samples/snippets/csharp/VS_Snippets_Wpf/GroupingSample/CSharp/Window1.xaml#xaml)]  
  
 [!code-csharp[GroupingSample#Code](~/samples/snippets/csharp/VS_Snippets_Wpf/GroupingSample/CSharp/Window1.xaml.cs#code)]
 [!code-vb[GroupingSample#Code](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GroupingSample/visualbasic/window1.xaml.vb#code)]  
  
 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Controls.GroupStyle.HeaderTemplate%2A> 속성:  
  
 [!code-xaml[DataBindingLab#GroupStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/MainWindow.xaml#groupstyle)]  
  
 다음은의 정의 `groupingHeaderTemplate` <xref:System.Windows.DataTemplate>:  
  
 [!code-xaml[DataBindingLab#HeaderTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/MainWindow.xaml#headertemplate)]  
  
 전체 샘플을 참조 하십시오. [데이터 바인딩 데모](http://go.microsoft.com/fwlink/?LinkID=163703)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.GroupStyle.HeaderTemplateSelector" />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataTemplateSelector HeaderTemplateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.DataTemplateSelector HeaderTemplateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.HeaderTemplateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderTemplateSelector As DataTemplateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::DataTemplateSelector ^ HeaderTemplateSelector { System::Windows::Controls::DataTemplateSelector ^ get(); void set(System::Windows::Controls::DataTemplateSelector ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>응용 프로그램 작성자가 그룹 머리글을 표시하는 데 사용되는 템플릿에 대한 사용자 지정 선택 논리를 제공할 수 있도록 합니다.</summary>
        <value>
          <see cref="T:System.Windows.Controls.DataTemplateSelector" />에서 파생되는 개체입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.GroupStyle.HeaderTemplate" />
      </Docs>
    </Member>
    <Member MemberName="HidesIfEmpty">
      <MemberSignature Language="C#" Value="public bool HidesIfEmpty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HidesIfEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.HidesIfEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Property HidesIfEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HidesIfEmpty { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>빈 그룹에 해당하는 항목을 표시해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          빈 그룹을 표시하지 않으려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (System.ComponentModel.PropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(class System.ComponentModel.PropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.GroupStyle.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanged (e As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanged(System::ComponentModel::PropertyChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">발생하는 이벤트의 인수입니다.</param>
        <summary>제공된 인수를 사용하여 <see cref="E:System.Windows.Controls.GroupStyle.PropertyChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Panel">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ItemsPanelTemplate Panel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ItemsPanelTemplate Panel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.Panel" />
      <MemberSignature Language="VB.NET" Value="Public Property Panel As ItemsPanelTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ItemsPanelTemplate ^ Panel { System::Windows::Controls::ItemsPanelTemplate ^ get(); void set(System::Windows::Controls::ItemsPanelTemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ItemsPanelTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>항목의 레이아웃에 사용되는 패널을 만드는 템플릿을 가져오거나 설정합니다.</summary>
        <value>항목의 레이아웃에 사용되는 패널을 만드는 <see cref="T:System.Windows.Controls.ItemsPanelTemplate" /> 개체입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.GroupStyle.PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Event PropertyChanged As PropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual event System::ComponentModel::PropertyChangedEventHandler ^ PropertyChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>속성 값이 변경될 때 발생합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />
      </Docs>
    </Member>
  </Members>
</Type>