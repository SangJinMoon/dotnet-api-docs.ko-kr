<Type Name="ContentPresenter" FullName="System.Windows.Controls.ContentPresenter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5eddee2605ff686703c634596398d953b53310cc" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36567379" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ContentPresenter : System.Windows.FrameworkElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ContentPresenter extends System.Windows.FrameworkElement" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ContentPresenter" />
  <TypeSignature Language="VB.NET" Value="Public Class ContentPresenter&#xA;Inherits FrameworkElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContentPresenter : System::Windows::FrameworkElement" />
  <TypeSignature Language="F#" Value="type ContentPresenter = class&#xA;    inherit FrameworkElement" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.FrameworkElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Displays the content of a <see cref="T:System.Windows.Controls.ContentControl" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반적으로 사용는 <xref:System.Windows.Controls.ContentPresenter> 에 <xref:System.Windows.Controls.ControlTemplate> 의 <xref:System.Windows.Controls.ContentControl> 콘텐츠를 추가 해야 하는 위치를 지정할 수 있습니다. 모든 <xref:System.Windows.Controls.ContentControl> 형식에는 <xref:System.Windows.Controls.ContentPresenter> 기본에서 <xref:System.Windows.Controls.ControlTemplate>합니다.  
  
 경우는 <xref:System.Windows.Controls.ContentPresenter> 개체가 <xref:System.Windows.Controls.ControlTemplate> 의 <xref:System.Windows.Controls.ContentControl>, <xref:System.Windows.Controls.ContentPresenter.Content%2A>, <xref:System.Windows.Controls.ContentPresenter.ContentTemplate%2A>, 및 <xref:System.Windows.Controls.ContentPresenter.ContentTemplateSelector%2A> 속성의 동일한 이름의 속성에서 값을 가져오는 <xref:System.Windows.Controls.ContentControl>합니다. 사용할 수 있습니다는 <xref:System.Windows.Controls.ContentPresenter> 속성은 템플릿 기반 부모의 다른 속성에서 설정 하 여 이러한 속성의 값을 가져올는 <xref:System.Windows.Controls.ContentPresenter.ContentSource%2A> 속성 또는 바인딩하여 합니다.  
  
 <xref:System.Windows.Controls.ContentPresenter> 다음 논리를 사용 하 여 표시 된 <xref:System.Windows.Controls.ContentPresenter.Content%2A>:  
  
-   경우는 <xref:System.Windows.Controls.ContentPresenter.ContentTemplate%2A> 속성에는 <xref:System.Windows.Controls.ContentPresenter> 설정 되 면는 <xref:System.Windows.Controls.ContentPresenter> 적용 하는 <xref:System.Windows.DataTemplate> 에 <xref:System.Windows.Controls.ContentPresenter.Content%2A> 속성 및 그 결과 <xref:System.Windows.UIElement> 및 해당 자식 요소가 있는 경우 표시 됩니다. 에 대 한 자세한 내용은 <xref:System.Windows.DataTemplate> 개체 참조 [데이터 템플릿 개요](~/docs/framework/wpf/data/data-templating-overview.md)합니다.  
  
-   경우는 <xref:System.Windows.Controls.ContentPresenter.ContentTemplateSelector%2A> 속성에는 <xref:System.Windows.Controls.ContentPresenter> 설정 되어는 <xref:System.Windows.Controls.ContentPresenter> 적절 한 적용 <xref:System.Windows.DataTemplate> 에 <xref:System.Windows.Controls.ContentPresenter.Content%2A> 속성과 결과 <xref:System.Windows.UIElement> 및 해당 자식 요소가 있는 경우 표시 됩니다.  
  
-   없을 경우는 <xref:System.Windows.DataTemplate> 형식에 연결 된 <xref:System.Windows.Controls.ContentPresenter.Content%2A>, <xref:System.Windows.Controls.ContentPresenter> 적용 <xref:System.Windows.DataTemplate> 에 <xref:System.Windows.Controls.ContentPresenter.Content%2A> 속성 및 그 결과 <xref:System.Windows.UIElement> 및 해당 자식 요소가 있는 경우 표시 됩니다.  
  
-   경우 <xref:System.Windows.Controls.ContentPresenter.Content%2A> 는 <xref:System.Windows.UIElement> 개체는 <xref:System.Windows.UIElement> 표시 됩니다. 경우는 <xref:System.Windows.UIElement> 에 이미 부모가, 예외가 발생 합니다.  
  
-   없는 경우는 <xref:System.ComponentModel.TypeConverter> 의 형식을 변환 하는 <xref:System.Windows.Controls.ContentPresenter.Content%2A> 에 <xref:System.Windows.UIElement>, <xref:System.Windows.Controls.ContentPresenter> 이 사용 하 여 <xref:System.ComponentModel.TypeConverter> 결과 <xref:System.Windows.UIElement> 표시 됩니다.  
  
-   없을 경우는 <xref:System.ComponentModel.TypeConverter> 의 형식을 변환 하는 <xref:System.Windows.Controls.ContentPresenter.Content%2A> 문자열로 <xref:System.Windows.Controls.ContentPresenter> 이 사용 하 여 <xref:System.ComponentModel.TypeConverter> 만듭니다는 <xref:System.Windows.Controls.TextBlock> 해당 문자열을 포함할 수 있습니다. <xref:System.Windows.Controls.TextBlock>가 표시됩니다.  
  
-   콘텐츠가 경우는 <xref:System.Xml.XmlElement>의 값은 <xref:System.Xml.XmlElement.InnerText%2A> 에 속성이 표시 됩니다는 <xref:System.Windows.Controls.TextBlock>합니다.  
  
-   <xref:System.Windows.Controls.ContentPresenter> 호출은 <xref:System.Object.ToString%2A> 에서 메서드는 <xref:System.Windows.Controls.ContentPresenter.Content%2A> 만듭니다는 <xref:System.Windows.Controls.TextBlock> 에서 반환 된 문자열을 포함할 <xref:System.Object.ToString%2A>합니다. <xref:System.Windows.Controls.TextBlock>가 표시됩니다.  
  
   
  
## Examples  
 다음 한 <xref:System.Windows.Controls.Button> <xref:System.Windows.Style> 로 설정 하는 <xref:System.Windows.Controls.ControlTemplate> 의 <xref:System.Windows.Controls.Button>합니다. <xref:System.Windows.Controls.ControlTemplate> 보냄을 정의 <xref:System.Windows.Controls.Button> 으로 표시는 <xref:System.Windows.Shapes.Ellipse> 내에서 한 <xref:System.Windows.Controls.Grid> 요소입니다. <xref:System.Windows.Controls.ContentPresenter> 표시 하는 <xref:System.Windows.Controls.ContentControl.Content%2A> 의 <xref:System.Windows.Controls.Button> 표시 및 내에서 가로 및 세로로 가운데 맞춤은 <xref:System.Windows.Controls.Grid>합니다.  
  
 [!code-xaml[StylingIntroSample_snippet#ButtonCT](~/samples/snippets/csharp/VS_Snippets_Wpf/StylingIntroSample_snippet/CSharp/Window1.xaml#buttonct)]   
  
 다음 이미지의 모양을 표시는 <xref:System.Windows.Controls.Button> 이 가져옵니다 적용 하는 경우:  
  
 ![단추 ControlTemplate 샘플](~/add/media/stylingintro-buttoncontroltemplate.png "단추 ControlTemplate 샘플")  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.TemplateBindingExtension" />
    <altmember cref="T:System.Windows.Controls.ItemsPresenter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentPresenter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentPresenter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContentPresenter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ContentPresenter" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size ArrangeOverride (System.Windows.Size arrangeSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size ArrangeOverride(valuetype System.Windows.Size arrangeSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentPresenter.ArrangeOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ArrangeOverride (arrangeSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size ArrangeOverride(System::Windows::Size arrangeSize);" />
      <MemberSignature Language="F#" Value="override this.ArrangeOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="contentPresenter.ArrangeOverride arrangeSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrangeSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="arrangeSize">The size that this <see cref="T:System.Windows.Controls.ContentPresenter" /> object should use to arrange its child element.</param>
        <summary>Positions the single child element and determines the content of a <see cref="T:System.Windows.Controls.ContentPresenter" /> object.</summary>
        <returns>The actual size needed by the element.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="ChooseTemplate">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.DataTemplate ChooseTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.DataTemplate ChooseTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentPresenter.ChooseTemplate" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ChooseTemplate () As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::DataTemplate ^ ChooseTemplate();" />
      <MemberSignature Language="F#" Value="abstract member ChooseTemplate : unit -&gt; System.Windows.DataTemplate&#xA;override this.ChooseTemplate : unit -&gt; System.Windows.DataTemplate" Usage="contentPresenter.ChooseTemplate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the template to use. This may depend on the content or other properties.</summary>
        <returns>The <see cref="T:System.Windows.DataTemplate" /> to use.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 클래스는 다음 규칙을 구현합니다.  
  
1.  경우 <xref:System.Windows.Controls.ContentPresenter.ContentTemplate%2A> 사용을 설정 합니다.  
  
2.  경우 <xref:System.Windows.Controls.ContentPresenter.ContentTemplateSelector%2A> 설정 되 면 호출 해당 <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> 메서드. 결과가 없으면 `null`를 사용 합니다.  
  
3.  검색할는 <xref:System.Windows.DataTemplate> 인 <xref:System.Windows.DataTemplate.DataType%2A> 에 알려진 리소스 간의 콘텐츠와 일치는 <xref:System.Windows.Controls.ContentPresenter> (응용 프로그램, 테마 및 시스템 리소스 포함). 이 개체를 찾은 경우이 사용 합니다.  
  
4.  경우 유형의 <xref:System.Windows.Controls.ContentPresenter.Content%2A> "일반적" 표준 서식 파일을 사용 합니다. 일반적인 유형은 `String`, <xref:System.Xml.XmlNode>, 및 <xref:System.Windows.UIElement>합니다.  
  
5.  그렇지 않은 경우 기본적으로 변환 하는 기본 템플릿을 사용 하 여 <xref:System.Windows.Controls.ContentPresenter.Content%2A> 문자열로 표시 된 <xref:System.Windows.Controls.TextBlock>합니다.  
  
 파생된 클래스는 이러한 규칙을 재정의 하 고 자신의 구현할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public object Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Content" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContentPresenter.Content" />
      <MemberSignature Language="VB.NET" Value="Public Property Content As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Content { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Content : obj with get, set" Usage="System.Windows.Controls.ContentPresenter.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the data used to generate the child elements of a <see cref="T:System.Windows.Controls.ContentPresenter" />.</summary>
        <value>자식 요소를 생성 하는 데 사용 하는 데이터입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 배치 하는 경우는 <xref:System.Windows.Controls.ContentPresenter> 에 <xref:System.Windows.Controls.ControlTemplate> 의 <xref:System.Windows.Controls.ContentControl>, 자동으로 표시 됩니다는 <xref:System.Windows.Controls.ContentControl.Content%2A> 템플릿 기반 컨트롤입니다. 즉, 설정 하는 경우는 <xref:System.Windows.Controls.ControlTemplate.TargetType%2A> 의 프로그램 <xref:System.Windows.Controls.ControlTemplate> 되도록 <xref:System.Windows.Controls.Button>, <xref:System.Windows.Controls.ContentPresenter.Content%2A> 속성의는 <xref:System.Windows.Controls.ContentPresenter> 에 암시적으로 바인딩된는 <xref:System.Windows.Controls.ContentControl.Content%2A> 의 <xref:System.Windows.Controls.Button> 을 사용 하 <xref:System.Windows.Controls.ControlTemplate>합니다.  
  
 에 대 한 바인딩을 설정 하는 <xref:System.Windows.Controls.ContentPresenter> 속성을 만들려는 경우 사용 하는 것이 좋습니다는 <xref:System.Windows.Controls.ContentPresenter.ContentSource%2A> 속성입니다. <xref:System.Windows.Controls.ContentPresenter.ContentSource%2A> 속성이 가리키는 속성 별칭: 템플릿 부모에 연결 된 템플릿과 템플릿 선택기 속성 자동으로 합니다.  
  
<a name="xamlTextUsage_Content"></a>   
## <a name="xaml-text-usage"></a>XAML 텍스트 사용  
 일반적으로 사용 `TemplateBinding` 에 템플릿 기반 컨트롤에 대해서만 값이 속성 값을 바인딩할 합니다. 에 대 한 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 정보 참조 [TemplateBinding 태그 확장](~/docs/framework/wpf/advanced/templatebinding-markup-extension.md)합니다.  
  
<a name="dependencyPropertyInfo_Content"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Controls.ContentPresenter.ContentProperty>|  
|로 메타 데이터 속성 설정 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContentPresenter.ContentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ContentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ContentProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContentPresenter.ContentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Controls.ContentPresenter.Content" /> dependency property.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentSource">
      <MemberSignature Language="C#" Value="public string ContentSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContentPresenter.ContentSource" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentSource { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentSource : string with get, set" Usage="System.Windows.Controls.ContentPresenter.ContentSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the base name to use during automatic aliasing.</summary>
        <value>자동 별칭을 지정할 때 사용할 기본 이름입니다. 기본값은 "콘텐츠".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에만 해야 때 사용 되는 <xref:System.Windows.Controls.ContentPresenter> 서식 파일에 있습니다. 템플릿을 포함 되어 있는 경우는 <xref:System.Windows.Controls.ContentPresenter> 와 <xref:System.Windows.Controls.ContentPresenter.ContentSource%2A> 로 설정 "`Abc`", <xref:System.Windows.Controls.ContentPresenter.Content%2A>, <xref:System.Windows.Controls.ContentPresenter.ContentTemplate%2A>, 및 <xref:System.Windows.Controls.ContentPresenter.ContentTemplateSelector%2A> 의 속성은 <xref:System.Windows.Controls.ContentPresenter> 별칭으로는 자동으로 `Abc`, `AbcTemplate`, 및 `AbcTemplateSelector`각각.  부터는 [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]설정 <xref:System.Windows.Controls.ContentPresenter.ContentSource%2A> 를 "`Abc`"로 인해는 <xref:System.Windows.Controls.ContentPresenter.ContentStringFormat%2A> 속성을 별칭으로 사용 될 `AbcStringFormat`합니다.  
  
 이 속성에 대 한 두 개의 가장 유용한 값은 "콘텐츠" 및 "헤더"입니다.  
  
<a name="dependencyPropertyInfo_ContentSource"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Controls.ContentPresenter.ContentSourceProperty>|  
|로 메타 데이터 속성 설정 `true`|없음|  
  
   
  
## Examples  
 다음 예제에 대 한 스타일을 <xref:System.Windows.Controls.HeaderedContentControl> 의 사용법을 보여 주는 <xref:System.Windows.Controls.ContentPresenter.ContentSource%2A> 속성:  
  
 [!code-xaml[HeaderedContentControl#HeaderedContentControlStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/HeaderedContentControl/CSharp/Page1.xaml#headeredcontentcontrolstyle)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentSourceProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContentSourceProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContentSourceProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContentPresenter.ContentSourceProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContentSourceProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ContentSourceProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ContentSourceProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContentPresenter.ContentSourceProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Controls.ContentPresenter.ContentSource" /> dependency property.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentStringFormat">
      <MemberSignature Language="C#" Value="public string ContentStringFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentStringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContentPresenter.ContentStringFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentStringFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentStringFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentStringFormat : string with get, set" Usage="System.Windows.Controls.ContentPresenter.ContentStringFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a composite string that specifies how to format the <see cref="P:System.Windows.Controls.ContentPresenter.Content" /> property if it is displayed as a string.</summary>
        <value>서식을 지정 하는 방법을 지정 하는 복합 문자열은 <see cref="P:System.Windows.Controls.ContentPresenter.Content" /> 문자열로 표시 되는 경우 속성을 사용 합니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.ContentPresenter.ContentStringFormat%2A> 미리 정의 된 복합, 또는 사용자 지정 문자열 형식이 될 수 있습니다. 문자열 형식에 대 한 자세한 내용은 참조 [형식 지정](~/docs/standard/base-types/formatting-types.md)합니다. 설정 하는 경우는 <xref:System.Windows.Controls.ContentPresenter.ContentTemplate%2A> 또는 <xref:System.Windows.Controls.ContentPresenter.ContentTemplateSelector%2A> 속성은 <xref:System.Windows.Controls.ContentPresenter>, <xref:System.Windows.Controls.ContentPresenter.ContentStringFormat%2A> 속성은 무시 됩니다.  
  
<a name="dependencyPropertyInfo_ContentStringFormat"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Controls.ContentPresenter.ContentStringFormatProperty>|  
|메타 데이터 속성이 **true**|없음|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentStringFormatProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContentStringFormatProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContentStringFormatProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContentPresenter.ContentStringFormatProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContentStringFormatProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ContentStringFormatProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ContentStringFormatProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContentPresenter.ContentStringFormatProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Controls.ContentPresenter.ContentStringFormat" /> dependency property.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate ContentTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate ContentTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContentPresenter.ContentTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentTemplate As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DataTemplate ^ ContentTemplate { System::Windows::DataTemplate ^ get(); void set(System::Windows::DataTemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentTemplate : System.Windows.DataTemplate with get, set" Usage="System.Windows.Controls.ContentPresenter.ContentTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the template used to display the content of the control.</summary>
        <value>A <see cref="T:System.Windows.DataTemplate" /> 콘텐츠의 시각화를 정의 하는입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_ContentTemplate"></a>   
## <a name="xaml-text-usage"></a>XAML 텍스트 사용  
 에 대 한 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 정보 참조 [TemplateBinding 태그 확장](~/docs/framework/wpf/advanced/templatebinding-markup-extension.md)합니다.  
  
<a name="dependencyPropertyInfo_ContentTemplate"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Controls.ContentPresenter.ContentTemplateProperty>|  
|로 메타 데이터 속성 설정 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 다음 예제에 대 한 스타일의 <xref:System.Windows.Controls.ComboBox> 제어:  
  
 [!code-xaml[ControlTemplateExamples#ComboBoxStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples/CS/resources/combobox.xaml#comboboxstyle)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContentTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContentTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContentPresenter.ContentTemplateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContentTemplateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ContentTemplateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ContentTemplateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContentPresenter.ContentTemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate" /> dependency property.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataTemplateSelector ContentTemplateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.DataTemplateSelector ContentTemplateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentTemplateSelector As DataTemplateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::DataTemplateSelector ^ ContentTemplateSelector { System::Windows::Controls::DataTemplateSelector ^ get(); void set(System::Windows::Controls::DataTemplateSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentTemplateSelector : System.Windows.Controls.DataTemplateSelector with get, set" Usage="System.Windows.Controls.ContentPresenter.ContentTemplateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:System.Windows.Controls.DataTemplateSelector" />, which allows the application writer to provide custom logic for choosing the template that is used to display the content of the control.</summary>
        <value>A <see cref="T:System.Windows.Controls.DataTemplateSelector" /> 반환 하는 논리를 제공 하는 개체는 <see cref="T:System.Windows.DataTemplate" /> 적용할 수 있습니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 무시는 <xref:System.Windows.Controls.ContentPresenter.ContentTemplate%2A> 속성을 설정 합니다. 자세한 내용은 <xref:System.Windows.Controls.ContentPresenter.ChooseTemplate%2A>을 참조하세요.  
  
<a name="xamlTextUsage_ContentTemplateSelector"></a>   
## <a name="xaml-text-usage"></a>XAML 텍스트 사용  
 에 대 한 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 정보 참조 [TemplateBinding 태그 확장](~/docs/framework/wpf/advanced/templatebinding-markup-extension.md)합니다.  
  
<a name="dependencyPropertyInfo_ContentTemplateSelector"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Controls.ContentPresenter.ContentTemplateSelectorProperty>|  
|로 메타 데이터 속성 설정 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.DataTemplateSelector" />
      </Docs>
    </Member>
    <Member MemberName="ContentTemplateSelectorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContentTemplateSelectorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContentTemplateSelectorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContentPresenter.ContentTemplateSelectorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContentTemplateSelectorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ContentTemplateSelectorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ContentTemplateSelectorProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContentPresenter.ContentTemplateSelectorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> dependency property.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size constraint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentPresenter.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (constraint As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size constraint);" />
      <MemberSignature Language="F#" Value="override this.MeasureOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="contentPresenter.MeasureOverride constraint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="constraint">An upper limit value that the return value should not exceed.</param>
        <summary>Determines the size of the <see cref="T:System.Windows.Controls.ContentPresenter" /> object based on the sizing properties, margin, and requested size of the child content.</summary>
        <returns>The size that is required to arrange child content.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="OnContentStringFormatChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnContentStringFormatChanged (string oldContentStringFormat, string newContentStringFormat);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContentStringFormatChanged(string oldContentStringFormat, string newContentStringFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentPresenter.OnContentStringFormatChanged(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContentStringFormatChanged (oldContentStringFormat As String, newContentStringFormat As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContentStringFormatChanged(System::String ^ oldContentStringFormat, System::String ^ newContentStringFormat);" />
      <MemberSignature Language="F#" Value="abstract member OnContentStringFormatChanged : string * string -&gt; unit&#xA;override this.OnContentStringFormatChanged : string * string -&gt; unit" Usage="contentPresenter.OnContentStringFormatChanged (oldContentStringFormat, newContentStringFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldContentStringFormat" Type="System.String" />
        <Parameter Name="newContentStringFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="oldContentStringFormat">The old value of the <see cref="P:System.Windows.Controls.ContentPresenter.ContentStringFormat" /> property.</param>
        <param name="newContentStringFormat">The new value of the <see cref="P:System.Windows.Controls.ContentPresenter.ContentStringFormat" /> property.</param>
        <summary>Invoked when the <see cref="P:System.Windows.Controls.ContentPresenter.ContentStringFormat" /> property changes.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContentTemplateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnContentTemplateChanged (System.Windows.DataTemplate oldContentTemplate, System.Windows.DataTemplate newContentTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContentTemplateChanged(class System.Windows.DataTemplate oldContentTemplate, class System.Windows.DataTemplate newContentTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentPresenter.OnContentTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContentTemplateChanged (oldContentTemplate As DataTemplate, newContentTemplate As DataTemplate)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContentTemplateChanged(System::Windows::DataTemplate ^ oldContentTemplate, System::Windows::DataTemplate ^ newContentTemplate);" />
      <MemberSignature Language="F#" Value="abstract member OnContentTemplateChanged : System.Windows.DataTemplate * System.Windows.DataTemplate -&gt; unit&#xA;override this.OnContentTemplateChanged : System.Windows.DataTemplate * System.Windows.DataTemplate -&gt; unit" Usage="contentPresenter.OnContentTemplateChanged (oldContentTemplate, newContentTemplate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldContentTemplate" Type="System.Windows.DataTemplate" />
        <Parameter Name="newContentTemplate" Type="System.Windows.DataTemplate" />
      </Parameters>
      <Docs>
        <param name="oldContentTemplate">The old value of the <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate" /> property.</param>
        <param name="newContentTemplate">The new value of the <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate" /> property.</param>
        <summary>Invoked when the <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate" /> changes.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContentTemplateSelectorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnContentTemplateSelectorChanged (System.Windows.Controls.DataTemplateSelector oldContentTemplateSelector, System.Windows.Controls.DataTemplateSelector newContentTemplateSelector);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContentTemplateSelectorChanged(class System.Windows.Controls.DataTemplateSelector oldContentTemplateSelector, class System.Windows.Controls.DataTemplateSelector newContentTemplateSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentPresenter.OnContentTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContentTemplateSelectorChanged (oldContentTemplateSelector As DataTemplateSelector, newContentTemplateSelector As DataTemplateSelector)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContentTemplateSelectorChanged(System::Windows::Controls::DataTemplateSelector ^ oldContentTemplateSelector, System::Windows::Controls::DataTemplateSelector ^ newContentTemplateSelector);" />
      <MemberSignature Language="F#" Value="abstract member OnContentTemplateSelectorChanged : System.Windows.Controls.DataTemplateSelector * System.Windows.Controls.DataTemplateSelector -&gt; unit&#xA;override this.OnContentTemplateSelectorChanged : System.Windows.Controls.DataTemplateSelector * System.Windows.Controls.DataTemplateSelector -&gt; unit" Usage="contentPresenter.OnContentTemplateSelectorChanged (oldContentTemplateSelector, newContentTemplateSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldContentTemplateSelector" Type="System.Windows.Controls.DataTemplateSelector" />
        <Parameter Name="newContentTemplateSelector" Type="System.Windows.Controls.DataTemplateSelector" />
      </Parameters>
      <Docs>
        <param name="oldContentTemplateSelector">The old value of the <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> property.</param>
        <param name="newContentTemplateSelector">The new value of the <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> property.</param>
        <summary>Invoked when the <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> property changes.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTemplateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTemplateChanged (System.Windows.DataTemplate oldTemplate, System.Windows.DataTemplate newTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTemplateChanged(class System.Windows.DataTemplate oldTemplate, class System.Windows.DataTemplate newTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentPresenter.OnTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTemplateChanged (oldTemplate As DataTemplate, newTemplate As DataTemplate)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTemplateChanged(System::Windows::DataTemplate ^ oldTemplate, System::Windows::DataTemplate ^ newTemplate);" />
      <MemberSignature Language="F#" Value="abstract member OnTemplateChanged : System.Windows.DataTemplate * System.Windows.DataTemplate -&gt; unit&#xA;override this.OnTemplateChanged : System.Windows.DataTemplate * System.Windows.DataTemplate -&gt; unit" Usage="contentPresenter.OnTemplateChanged (oldTemplate, newTemplate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldTemplate" Type="System.Windows.DataTemplate" />
        <Parameter Name="newTemplate" Type="System.Windows.DataTemplate" />
      </Parameters>
      <Docs>
        <param name="oldTemplate">The old <see cref="T:System.Windows.DataTemplate" /> object value.</param>
        <param name="newTemplate">The new <see cref="T:System.Windows.DataTemplate" /> object value.</param>
        <summary>Invoked when the <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate" /> changes</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecognizesAccessKey">
      <MemberSignature Language="C#" Value="public bool RecognizesAccessKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RecognizesAccessKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContentPresenter.RecognizesAccessKey" />
      <MemberSignature Language="VB.NET" Value="Public Property RecognizesAccessKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RecognizesAccessKey { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RecognizesAccessKey : bool with get, set" Usage="System.Windows.Controls.ContentPresenter.RecognizesAccessKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ContentPresenter" /> should use <see cref="T:System.Windows.Controls.AccessText" /> in its style.</summary>
        <value>
          <see langword="true" /> 경우는 <see cref="T:System.Windows.Controls.ContentPresenter" /> 사용할지 <see cref="T:System.Windows.Controls.AccessText" /> 의 스타일;에 그렇지 <see langword="false" />합니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_RecognizesAccessKey"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Controls.ContentPresenter.RecognizesAccessKeyProperty>|  
|로 메타 데이터 속성 설정 `true`|없음|  
  
   
  
## Examples  
 다음 예제에 대 한 스타일의 <xref:System.Windows.Controls.CheckBox> 제어:  
  
  
  
 이 예제에 대 한 자세한 내용은 참조 [확인란 스타일 및 템플릿](~/docs/framework/wpf/controls/checkbox-styles-and-templates.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.AccessText" />
      </Docs>
    </Member>
    <Member MemberName="RecognizesAccessKeyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RecognizesAccessKeyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RecognizesAccessKeyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContentPresenter.RecognizesAccessKeyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RecognizesAccessKeyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RecognizesAccessKeyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RecognizesAccessKeyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContentPresenter.RecognizesAccessKeyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:System.Windows.Controls.ContentPresenter.RecognizesAccessKey" /> dependency property.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeContentTemplateSelector">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeContentTemplateSelector ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeContentTemplateSelector() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentPresenter.ShouldSerializeContentTemplateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeContentTemplateSelector () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeContentTemplateSelector();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeContentTemplateSelector : unit -&gt; bool" Usage="contentPresenter.ShouldSerializeContentTemplateSelector " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a value that indicates whether serialization processes should serialize the effective value of the <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> property on instances of this class.</summary>
        <returns>
          <see langword="true" /> if the <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> property value should be serialized; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>