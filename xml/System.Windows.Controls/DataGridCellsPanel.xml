<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DataGridCellsPanel.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ec2925a67136214ad056e22b0026c86534c313b5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ec2925a67136214ad056e22b0026c86534c313b5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Controls.DataGridCellsPanel">
          <source>Represents a panel that lays out cells and column headers in a data grid.</source>
          <target state="translated">데이터 표에서 셀과 열 머리글을 레이아웃하는 패널을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.DataGridCellsPanel">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.DataGridCellsPanel&gt;</ph> is used as the <ph id="ph2">&lt;xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A&gt;</ph> of the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.DataGridCellsPresenter&gt;</ph> to lay out cells in a row.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.DataGridCellsPanel&gt;</ph> 로 사용 되는 <ph id="ph2">&lt;xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A&gt;</ph> 의 <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.DataGridCellsPresenter&gt;</ph> 행에에서 있는 셀의 레이아웃에 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.DataGridCellsPanel">
          <source>It is used as the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter&gt;</ph> to lay out column headers.</source>
          <target state="translated">사용 되는 <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A&gt;</ph> 의 <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter&gt;</ph> 열 머리글의 레이아웃에 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.DataGridCellsPanel">
          <source>The panel arranges cells horizontally and uses each cell's column information to determine the correct size for each cell.</source>
          <target state="translated">패널의 셀을 가로로 정렬 하 고 각 셀의 열 정보를 사용 하 여 각 셀에 대 한 올바른 크기를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.DataGridCellsPanel.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.DataGridCellsPanel" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.DataGridCellsPanel" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.DataGridCellsPanel.ArrangeOverride(System.Windows.Size)">
          <source>The maximum size that the panel can occupy.</source>
          <target state="translated">패널이 차지할 수 있는 최대 크기입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.DataGridCellsPanel.ArrangeOverride(System.Windows.Size)">
          <source>Determines the final size and placement of the panel.</source>
          <target state="translated">패널의 최종 크기 및 배치를 결정합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.DataGridCellsPanel.ArrangeOverride(System.Windows.Size)">
          <source>The final size and placement of the panel.</source>
          <target state="translated">패널의 최종 크기 및 배치입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataGridCellsPanel.ArrangeOverride(System.Windows.Size)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.DataGridCellsPanel&gt;</ph> class uses the <ph id="ph2">&lt;xref:System.Windows.Controls.DataGridCellsPanel.ArrangeOverride%2A&gt;</ph> method to lay out the cells that are visible.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.DataGridCellsPanel&gt;</ph> 클래스에서 사용 하 여 <ph id="ph2">&lt;xref:System.Windows.Controls.DataGridCellsPanel.ArrangeOverride%2A&gt;</ph> 표시 되는 셀의 레이아웃에 메서드.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataGridCellsPanel.ArrangeOverride(System.Windows.Size)">
          <source>Cells that are not visible are virtualized.</source>
          <target state="translated">보이지 않는 셀 가상화 됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.DataGridCellsPanel.BringIndexIntoView(System.Int32)">
          <source>The index of the item that should become visible.</source>
          <target state="translated">볼 수 있어야 하는 항목의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.DataGridCellsPanel.BringIndexIntoView(System.Int32)">
          <source>Scrolls the viewport to the item at the specified index.</source>
          <target state="translated">뷰포트를 지정한 인덱스의 항목으로 스크롤합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.DataGridCellsPanel.BringIndexIntoView(System.Int32)">
          <source>The index is out of range.</source>
          <target state="translated">인덱스가 범위에서 벗어난 경우</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataGridCellsPanel.BringIndexIntoView(System.Int32)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Controls.DataGridCellsPanel.BringIndexIntoView(System.Int32)" /&gt;</ph> in a derived class, make sure that you call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Controls.DataGridCellsPanel.BringIndexIntoView(System.Int32)" /&gt;</ph> method; otherwise, important functionality will be disabled.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Controls.DataGridCellsPanel.BringIndexIntoView(System.Int32)" /&gt;</ph> 파생된 클래스에서 기본 클래스를 호출 하 고 있는지 확인 <ph id="ph2">&lt;see cref="M:System.Windows.Controls.DataGridCellsPanel.BringIndexIntoView(System.Int32)" /&gt;</ph> 메서드 하므로 그 외, 중요 한 기능에서 사용할 수 없게 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.DataGridCellsPanel.MeasureOverride(System.Windows.Size)">
          <source>The maximum size that the panel can occupy.</source>
          <target state="translated">패널이 차지할 수 있는 최대 크기입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.DataGridCellsPanel.MeasureOverride(System.Windows.Size)">
          <source>Determines the desired size of the panel.</source>
          <target state="translated">패널에 사용하려는 크기를 결정합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.DataGridCellsPanel.MeasureOverride(System.Windows.Size)">
          <source>The desired size of the panel.</source>
          <target state="translated">원하는 패널 크기입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataGridCellsPanel.MeasureOverride(System.Windows.Size)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.DataGridCellsPanel&gt;</ph> class uses the <ph id="ph2">&lt;xref:System.Windows.Controls.DataGridCellsPanel.MeasureOverride%2A&gt;</ph> method to determine which cells are visible and which cells are virtualized.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.DataGridCellsPanel&gt;</ph> 클래스에서 사용 하는 <ph id="ph2">&lt;xref:System.Windows.Controls.DataGridCellsPanel.MeasureOverride%2A&gt;</ph> 셀 표시 되 고 있는 셀 가상화 되었는지 확인 하는 메서드.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.DataGridCellsPanel.OnClearChildren">
          <source>Called when the collection of children in the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.DataGrid" /&gt;</ph> is cleared.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.DataGrid" /&gt;</ph>의 자식 요소 컬렉션이 지워질 때 호출됩니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataGridCellsPanel.OnClearChildren">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Controls.DataGridCellsPanel.OnClearChildren" /&gt;</ph> in a derived class, make sure that you call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Controls.DataGridCellsPanel.OnClearChildren" /&gt;</ph> method; otherwise, important functionality will be disabled.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Controls.DataGridCellsPanel.OnClearChildren" /&gt;</ph> 파생된 클래스에서 기본 클래스를 호출 하 고 있는지 확인 <ph id="ph2">&lt;see cref="M:System.Windows.Controls.DataGridCellsPanel.OnClearChildren" /&gt;</ph> 메서드 하므로 그 외, 중요 한 기능에서 사용할 수 없게 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.DataGridCellsPanel.OnIsItemsHostChanged(System.Boolean,System.Boolean)">
          <source>The old value of the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Panel.IsItemsHost" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Controls.Panel.IsItemsHost" /&gt;</ph> 속성의 이전 값입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.DataGridCellsPanel.OnIsItemsHostChanged(System.Boolean,System.Boolean)">
          <source>The new value of the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Panel.IsItemsHost" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Controls.Panel.IsItemsHost" /&gt;</ph> 속성의 새 값입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.DataGridCellsPanel.OnIsItemsHostChanged(System.Boolean,System.Boolean)">
          <source>Indicates that the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Panel.IsItemsHost" /&gt;</ph> property value has changed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Controls.Panel.IsItemsHost" /&gt;</ph> 속성 값이 변경되었음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataGridCellsPanel.OnIsItemsHostChanged(System.Boolean,System.Boolean)">
          <source>You can override this method and use it as a notification that the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Panel.IsItemsHost" /&gt;</ph> property has changed.</source>
          <target state="translated">이 메서드를 재정의 하 고 한 알림으로 사용 하는 <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Panel.IsItemsHost" /&gt;</ph> 속성이 변경 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataGridCellsPanel.OnIsItemsHostChanged(System.Boolean,System.Boolean)">
          <source>Then perform your own logic based on the old and new values.</source>
          <target state="translated">그런 다음 이전 및 새 값에 따라 고유한 논리를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataGridCellsPanel.OnIsItemsHostChanged(System.Boolean,System.Boolean)">
          <source>Be sure to call the base class’s <ph id="ph1">&lt;see cref="M:System.Windows.Controls.DataGridCellsPanel.OnIsItemsHostChanged(System.Boolean,System.Boolean)" /&gt;</ph> method; otherwise, important functionality will be disabled.</source>
          <target state="translated">기본 클래스를 호출 해야 <ph id="ph1">&lt;see cref="M:System.Windows.Controls.DataGridCellsPanel.OnIsItemsHostChanged(System.Boolean,System.Boolean)" /&gt;</ph> 메서드 하므로 그 외, 중요 한 기능에서 사용할 수 없게 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataGridCellsPanel.OnIsItemsHostChanged(System.Boolean,System.Boolean)">
          <source>The base implementation synchronizes the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.DataGridCellsPanel" /&gt;</ph> with the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.DataGridCellsPresenter" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter" /&gt;</ph> that it is associated with.</source>
          <target state="translated">기본 구현은 동기화는 <ph id="ph1">&lt;see cref="T:System.Windows.Controls.DataGridCellsPanel" /&gt;</ph> 와 <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Primitives.DataGridCellsPresenter" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter" /&gt;</ph> 연관 된 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.DataGridCellsPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
          <source>The object that raised the <ph id="ph1">&lt;see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /&gt;</ph> 이벤트를 발생시킨 개체입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.DataGridCellsPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
          <source>The data for the event.</source>
          <target state="translated">이벤트 데이터입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.DataGridCellsPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
          <source>Updates the visible cells when an item in the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ItemsControl.Items" /&gt;</ph> collection has changed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Controls.ItemsControl.Items" /&gt;</ph> 컬렉션에 있는 항목이 변경되면 표시되는 셀을 업데이트합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataGridCellsPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataGridCellsPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataGridCellsPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.DataGridCellsPanel.OnItemsChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Controls.DataGridCellsPanel.OnItemsChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataGridCellsPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataGridCellsPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Controls.DataGridCellsPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)" /&gt;</ph> in a derived class, make sure that you call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Controls.DataGridCellsPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Controls.DataGridCellsPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)" /&gt;</ph> 파생된 클래스에서 기본 클래스를 호출 하 고 있는지 확인 <ph id="ph2">&lt;see cref="M:System.Windows.Controls.DataGridCellsPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>