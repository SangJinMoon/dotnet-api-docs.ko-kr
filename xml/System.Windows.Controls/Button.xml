<Type Name="Button" FullName="System.Windows.Controls.Button">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2934fb77bbba770673eeb4bdc2276dfe8310dda2" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37581184" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Button : System.Windows.Controls.Primitives.ButtonBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Button extends System.Windows.Controls.Primitives.ButtonBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Button" />
  <TypeSignature Language="VB.NET" Value="Public Class Button&#xA;Inherits ButtonBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class Button : System::Windows::Controls::Primitives::ButtonBase" />
  <TypeSignature Language="F#" Value="type Button = class&#xA;    inherit ButtonBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.ButtonBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="fde8f-101">Represents a Windows button control, which reacts to the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fde8f-101">Represents a Windows button control, which reacts to the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fde8f-102">합니다 <xref:System.Windows.Controls.Button> 클래스에서 직접 상속 된 <xref:System.Windows.Controls.Primitives.ButtonBase?displayProperty=nameWithType> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="fde8f-102">The <xref:System.Windows.Controls.Button> class inherits directly from the <xref:System.Windows.Controls.Primitives.ButtonBase?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="fde8f-103">**콘텐츠 모델:** <xref:System.Windows.Controls.Button> 되는 <xref:System.Windows.Controls.ContentControl>합니다.</span><span class="sxs-lookup"><span data-stu-id="fde8f-103">**Content Model:** <xref:System.Windows.Controls.Button> is a <xref:System.Windows.Controls.ContentControl>.</span></span> <span data-ttu-id="fde8f-104">해당 콘텐츠 속성은 <xref:System.Windows.Controls.ContentControl.Content%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="fde8f-104">Its content property is <xref:System.Windows.Controls.ContentControl.Content%2A>.</span></span>  
  
 <span data-ttu-id="fde8f-105">처리를 <xref:System.Windows.Controls.Primitives.ButtonBase.Click?displayProperty=nameWithType> 를 클릭할 때 응답할 이벤트는 <xref:System.Windows.Controls.Button>합니다.</span><span class="sxs-lookup"><span data-stu-id="fde8f-105">Handle the <xref:System.Windows.Controls.Primitives.ButtonBase.Click?displayProperty=nameWithType> event to respond when the user clicks a <xref:System.Windows.Controls.Button>.</span></span>  
  
 <span data-ttu-id="fde8f-106">합니다 <xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A> 메서드 표시는 <xref:System.Windows.UIElement.MouseLeftButtonDown> 이벤트를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="fde8f-106">The <xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A> method marks the <xref:System.Windows.UIElement.MouseLeftButtonDown> event as handled.</span></span> <span data-ttu-id="fde8f-107">에 응답 하는 <xref:System.Windows.UIElement.MouseLeftButtonDown> 이벤트를 이벤트 처리기를 연결할를 <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> 이벤트 또는 호출 <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> 사용 하 여 `handledEventsToo` 로 `true`.</span><span class="sxs-lookup"><span data-stu-id="fde8f-107">To respond to the <xref:System.Windows.UIElement.MouseLeftButtonDown> event, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
## <a name="customizing-the-button-control"></a><span data-ttu-id="fde8f-108">단추 컨트롤 사용자 지정</span><span class="sxs-lookup"><span data-stu-id="fde8f-108">Customizing the Button Control</span></span>  
 <span data-ttu-id="fde8f-109">여러 동일한 속성 설정에 적용할 <xref:System.Windows.Controls.Button> 컨트롤을 사용 하 여는 <xref:System.Windows.FrameworkElement.Style%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fde8f-109">To apply the same property settings to multiple <xref:System.Windows.Controls.Button> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="fde8f-110">기본값을 수정할 수 있습니다 <xref:System.Windows.Controls.ControlTemplate> 고유한 모양을 제어할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fde8f-110">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="fde8f-111">만들기에 대 한 자세한 내용은 <xref:System.Windows.Controls.ControlTemplate>를 참조 하세요 [ControlTemplate을 만들어 기존 컨트롤의 모양 사용자 지정](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fde8f-111">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="fde8f-112">부분과 관련 된 상태를 확인 하려면 합니다 <xref:System.Windows.Controls.Button>를 참조 하세요 [Button 스타일 및 템플릿](~/docs/framework/wpf/controls/button-styles-and-templates.md).</span><span class="sxs-lookup"><span data-stu-id="fde8f-112">To see the parts and states that are specific to the <xref:System.Windows.Controls.Button>, see [Button Styles and Templates](~/docs/framework/wpf/controls/button-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="fde8f-113">이 컨트롤에 대 한 종속성 속성은 컨트롤의 기본 스타일으로 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fde8f-113">Dependency properties for this control might be set by the control’s default style.</span></span>  <span data-ttu-id="fde8f-114">속성이 설정 된 기본 스타일을 컨트롤 응용 프로그램에 표시 되 면 속성 값이 기본값에서 변경 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fde8f-114">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="fde8f-115">기본 스타일은 응용 프로그램 실행 중일 때 사용 되는 바탕 화면 테마에서 결정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fde8f-115">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="fde8f-116">자세한 내용은 [기본 WPF 테마](http://go.microsoft.com/fwlink/?LinkID=158252)합니다.</span><span class="sxs-lookup"><span data-stu-id="fde8f-116">For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fde8f-117">Visual 속성을 설정만 영향을 줄 수는 속성이 둘 다에 있는 경우 <xref:System.Windows.Controls.Button> 컨트롤의 기본 템플릿 및 사용 하 여 설정 됩니다는 합니다.</span><span class="sxs-lookup"><span data-stu-id="fde8f-117">Setting a visual property will only have an effect if that property is both present in <xref:System.Windows.Controls.Button> control's default template and is set by using a .</span></span> <span data-ttu-id="fde8f-118">"변경의 시각적 구조 컨트롤의" 단원의 visual 속성의 목록을 찾을 수 있습니다 [ControlTemplate을 만들어 기존 컨트롤의 모양 사용자 지정](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fde8f-118">You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fde8f-119">다음 예제에서는 세 가지 방법으로 클릭에 응답 하는 세 개의 단추를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fde8f-119">The following example shows three buttons that respond to clicks in three different ways.</span></span>  
  
-   <span data-ttu-id="fde8f-120">Hover: 첫 번째 단추를 단추 위로 마우스를 사용 하 여 사용자를 가져갈 때 색을 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="fde8f-120">Hover: the first button changes colors when the user hovers with the mouse over the button.</span></span>  
  
-   <span data-ttu-id="fde8f-121">키를 누릅니다: 두 번째 단추를 사용 하려면 마우스 포인터가 단추 위에 있는 동안 마우스를 눌러야 합니다.</span><span class="sxs-lookup"><span data-stu-id="fde8f-121">Press: the second button requires that the mouse be pressed while the mouse pointer is over the button.</span></span>  
  
-   <span data-ttu-id="fde8f-122">릴리스: 마우스를 누른 단추에 출시 될 때까지 세 번째가 단추의 배경색을 설정 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fde8f-122">Release: the third does not reset the background color of the buttons until the mouse is pressed and released on the button.</span></span>  
  
 [!code-xaml[ClickModes_snip#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ClickModes_snip/CSharp/Pane1.xaml#1)]  
  
 [!code-csharp[ClickModes_snip#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ClickModes_snip/CSharp/Pane1.xaml.cs#2)]
 [!code-vb[ClickModes_snip#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClickModes_snip/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Button ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Button.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Button();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fde8f-123">Initializes a new instance of the <see cref="T:System.Windows.Controls.Button" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fde8f-123">Initializes a new instance of the <see cref="T:System.Windows.Controls.Button" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCancel">
      <MemberSignature Language="C#" Value="public bool IsCancel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCancel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Button.IsCancel" />
      <MemberSignature Language="VB.NET" Value="Public Property IsCancel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCancel { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsCancel : bool with get, set" Usage="System.Windows.Controls.Button.IsCancel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fde8f-124">Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.Button" /> is a Cancel button.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fde8f-124">Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.Button" /> is a Cancel button.</span>
          </span>
          <span data-ttu-id="fde8f-125">A user can activate the Cancel button by pressing the ESC key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fde8f-125">A user can activate the Cancel button by pressing the ESC key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fde8f-126">
            <see langword="true" /> 경우는 <see cref="T:System.Windows.Controls.Button" /> 취소 단추 인지 고, 그렇지 않으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fde8f-126">
              <see langword="true" /> if the <see cref="T:System.Windows.Controls.Button" /> is a Cancel button; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="fde8f-127">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fde8f-127">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fde8f-128">설정한 경우는 <xref:System.Windows.Controls.Button.IsCancel%2A> 속성을 단추 `true`, 만든를 <xref:System.Windows.Controls.Button> 등록 된는 <xref:System.Windows.Input.AccessKeyManager>.</span><span class="sxs-lookup"><span data-stu-id="fde8f-128">When you set the <xref:System.Windows.Controls.Button.IsCancel%2A> property of a button to `true`, you create a <xref:System.Windows.Controls.Button> that is registered with the <xref:System.Windows.Input.AccessKeyManager>.</span></span> <span data-ttu-id="fde8f-129">사용자가 ESC 키를 누를 때에 다음 단추가 활성화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fde8f-129">The button is then activated when a user presses the ESC key.</span></span>  
  
<a name="dependencyPropertyInfo_IsCancel"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fde8f-130">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="fde8f-130">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fde8f-131">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="fde8f-131">Identifier field</span></span>|<xref:System.Windows.Controls.Button.IsCancelProperty>|  
|<span data-ttu-id="fde8f-132">메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="fde8f-132">Metadata properties set to `true`</span></span>|<span data-ttu-id="fde8f-133">없음</span><span class="sxs-lookup"><span data-stu-id="fde8f-133">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="fde8f-134">다음 예제에서는 취소 단추를 만들려면이 속성을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fde8f-134">The following example shows how to use this property to create a Cancel button.</span></span>  
  
 [!code-xaml[ButtonProps_snip#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ButtonProps_snip/CSharp/Page1.xaml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCancelProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsCancelProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsCancelProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Button.IsCancelProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsCancelProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsCancelProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsCancelProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Button.IsCancelProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fde8f-135">Identifies the <see cref="P:System.Windows.Controls.Button.IsCancel" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fde8f-135">Identifies the <see cref="P:System.Windows.Controls.Button.IsCancel" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefault">
      <MemberSignature Language="C#" Value="public bool IsDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefault" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Button.IsDefault" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDefault { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsDefault : bool with get, set" Usage="System.Windows.Controls.Button.IsDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fde8f-136">Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.Button" /> is the default button.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fde8f-136">Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.Button" /> is the default button.</span>
          </span>
          <span data-ttu-id="fde8f-137">A user invokes the default button by pressing the ENTER key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fde8f-137">A user invokes the default button by pressing the ENTER key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fde8f-138">
            <see langword="true" /> 경우는 <see cref="T:System.Windows.Controls.Button" /> 는 기본 단추가 고, 그렇지 않으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fde8f-138">
              <see langword="true" /> if the <see cref="T:System.Windows.Controls.Button" /> is the default button; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="fde8f-139">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fde8f-139">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fde8f-140">설정한 경우는 <xref:System.Windows.Controls.Button.IsDefault%2A> 속성을 단추 `true`, 단추를 사용 하 여 등록할는 <xref:System.Windows.Input.AccessKeyManager> ENTER 키를 눌러 사용자가 단추를 호출할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="fde8f-140">When you set the <xref:System.Windows.Controls.Button.IsDefault%2A> property of a button to `true`, you register the button with the <xref:System.Windows.Input.AccessKeyManager> so that a user can invoke the button by pressing the ENTER key.</span></span>  
  
<a name="dependencyPropertyInfo_IsDefault"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fde8f-141">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="fde8f-141">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fde8f-142">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="fde8f-142">Identifier field</span></span>|<xref:System.Windows.Controls.Button.IsDefaultProperty>|  
|<span data-ttu-id="fde8f-143">메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="fde8f-143">Metadata properties set to `true`</span></span>|<span data-ttu-id="fde8f-144">없음</span><span class="sxs-lookup"><span data-stu-id="fde8f-144">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="fde8f-145">다음 예제에서는 기본 단추로 단추를 지정 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fde8f-145">The following example shows how to specify a button as the default button.</span></span>  
  
 [!code-xaml[ButtonProps_snip#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ButtonProps_snip/CSharp/Page1.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaulted">
      <MemberSignature Language="C#" Value="public bool IsDefaulted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefaulted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Button.IsDefaulted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDefaulted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDefaulted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDefaulted : bool" Usage="System.Windows.Controls.Button.IsDefaulted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fde8f-146">Gets a value that indicates whether a <see cref="T:System.Windows.Controls.Button" /> is the button that is activated when a user presses ENTER.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fde8f-146">Gets a value that indicates whether a <see cref="T:System.Windows.Controls.Button" /> is the button that is activated when a user presses ENTER.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fde8f-147">
            <see langword="true" /> 사용자가 ENTER를 누를 때 단추가 활성화 되는 경우 그렇지 않으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fde8f-147">
              <see langword="true" /> if the button is activated when the user presses ENTER; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="fde8f-148">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fde8f-148">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fde8f-149"><xref:System.Windows.Controls.Button.IsDefaulted%2A> 속성은 `true` 때 합니다 <xref:System.Windows.Controls.Button.IsDefault%2A> 속성이 `true` 이며 포커스가 있는 컨트롤은 입력으로 입력을 수락 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fde8f-149">The <xref:System.Windows.Controls.Button.IsDefaulted%2A> property is `true` when the <xref:System.Windows.Controls.Button.IsDefault%2A> property is set to `true` and the control that has focus does not accept ENTER as input.</span></span>  <span data-ttu-id="fde8f-150">예를 들어, 합니다 **실행** 대화 상자를 **확인** 단추가 기본 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="fde8f-150">For example, in the **Run** dialog box, the **OK** button is the default button.</span></span> <span data-ttu-id="fde8f-151">텍스트 상자에 포커스가 있을 때 <xref:System.Windows.Controls.Button.IsDefaulted%2A> 에 **확인** 단추를 `true` 있으므로 ENTER 키를 누르거나 단추를 활성화할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fde8f-151">When focus is on the text box, <xref:System.Windows.Controls.Button.IsDefaulted%2A> on the **OK** button is `true` because a user can activate the button by pressing ENTER.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fde8f-152">기본 단추에 포커스가 있으면 <xref:System.Windows.Controls.Button.IsDefaulted%2A> 는 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="fde8f-152">If the default button has focus, <xref:System.Windows.Controls.Button.IsDefaulted%2A> is `false`.</span></span> <span data-ttu-id="fde8f-153">때문에 이것이 합니다 <xref:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown%2A> 메서드는 입력을 처리 하 고 필요 없는 <xref:System.Windows.Controls.Button.IsDefaulted%2A> 로 설정 해야 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="fde8f-153">This is because the <xref:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown%2A> method handles ENTER, and it is not necessary for <xref:System.Windows.Controls.Button.IsDefaulted%2A> to be set to `true`.</span></span>  
  
<a name="dependencyPropertyInfo_IsDefaulted"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fde8f-154">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="fde8f-154">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fde8f-155">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="fde8f-155">Identifier field</span></span>|<xref:System.Windows.Controls.Button.IsDefaultedProperty>|  
|<span data-ttu-id="fde8f-156">메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="fde8f-156">Metadata properties set to `true`</span></span>|<span data-ttu-id="fde8f-157">없음</span><span class="sxs-lookup"><span data-stu-id="fde8f-157">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="fde8f-158">다음 예제에서는 확인 하는 방법을 보여 줍니다 여부를 합니다 <xref:System.Windows.Controls.Button.IsDefaulted%2A> 속성은 `true` 기본 단추에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="fde8f-158">The following example shows how to determine whether the <xref:System.Windows.Controls.Button.IsDefaulted%2A> property is `true` for a default button.</span></span>  
  
 [!code-csharp[ButtonProps_snip#3](~/samples/snippets/csharp/VS_Snippets_Wpf/ButtonProps_snip/CSharp/Page1.xaml.cs#3)]
 [!code-vb[ButtonProps_snip#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ButtonProps_snip/VisualBasic/Window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsDefaultedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsDefaultedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Button.IsDefaultedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsDefaultedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsDefaultedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsDefaultedProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Button.IsDefaultedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fde8f-159">Identifies the <see cref="P:System.Windows.Controls.Button.IsDefaulted" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fde8f-159">Identifies the <see cref="P:System.Windows.Controls.Button.IsDefaulted" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsDefaultProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsDefaultProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Button.IsDefaultProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsDefaultProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsDefaultProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsDefaultProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Button.IsDefaultProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fde8f-160">Identifies the <see cref="P:System.Windows.Controls.Button.IsDefault" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fde8f-160">Identifies the <see cref="P:System.Windows.Controls.Button.IsDefault" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected override void OnClick ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Button.OnClick" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClick ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClick();" />
      <MemberSignature Language="F#" Value="override this.OnClick : unit -&gt; unit" Usage="button.OnClick " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fde8f-161">Called when a <see cref="T:System.Windows.Controls.Button" /> is clicked.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fde8f-161">Called when a <see cref="T:System.Windows.Controls.Button" /> is clicked.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Button.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="button.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fde8f-162">Creates an appropriate <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" /> for this control as part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fde8f-162">Creates an appropriate <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" /> for this control as part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fde8f-163">A <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" /> for this control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fde8f-163">A <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" /> for this control.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>