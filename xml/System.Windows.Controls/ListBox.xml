<Type Name="ListBox" FullName="System.Windows.Controls.ListBox">
  <Metadata><Meta Name="ms.openlocfilehash" Value="85fe70d0637af4ec2e6e9fae1bce38c2ffbbab61" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52596434" /></Metadata><TypeSignature Language="C#" Value="public class ListBox : System.Windows.Controls.Primitives.Selector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ListBox extends System.Windows.Controls.Primitives.Selector" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ListBox" />
  <TypeSignature Language="VB.NET" Value="Public Class ListBox&#xA;Inherits Selector" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListBox : System::Windows::Controls::Primitives::Selector" />
  <TypeSignature Language="F#" Value="type ListBox = class&#xA;    inherit Selector" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.Selector</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.ListBox)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.StyleTypedProperty(Property="ItemContainerStyle", StyleTargetType=typeof(System.Windows.Controls.ListBoxItem))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="eba7c-101">선택 가능한 항목 목록이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-101">Contains a list of selectable items.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eba7c-102"><xref:System.Windows.Controls.ListBox> 가 <xref:System.Windows.Controls.ItemsControl>, 즉 모든 형식 (예: 문자열, 이미지 또는 패널) 개체의 컬렉션을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-102"><xref:System.Windows.Controls.ListBox> is an <xref:System.Windows.Controls.ItemsControl>, which means it can contain a collection of objects of any type (such as string, image, or panel).</span></span> <span data-ttu-id="eba7c-103">자세한 내용은 <xref:System.Windows.Controls.ItemsControl> 클래스를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="eba7c-103">For more information, see the <xref:System.Windows.Controls.ItemsControl> class.</span></span>  
  
 <span data-ttu-id="eba7c-104">둘 이상의 항목을 <xref:System.Windows.Controls.ListBox> 달리 표시 되는 <xref:System.Windows.Controls.ComboBox>만 선택한 항목을 볼 수 있는 경우가 아니면를 <xref:System.Windows.Controls.ComboBox.IsDropDownOpen%2A> 속성은 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-104">More than one item in a <xref:System.Windows.Controls.ListBox> is visible, unlike the <xref:System.Windows.Controls.ComboBox>, which has only the selected item visible unless the <xref:System.Windows.Controls.ComboBox.IsDropDownOpen%2A> property is `true`.</span></span>  <span data-ttu-id="eba7c-105">합니다 <xref:System.Windows.Controls.ListBox.SelectionMode%2A> 속성의 항목이 하나 이상 있는지 여부를 결정 합니다 <xref:System.Windows.Controls.ListBox> 은 한 번에 선택할 수 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-105">The <xref:System.Windows.Controls.ListBox.SelectionMode%2A> property determines whether more than one item in the <xref:System.Windows.Controls.ListBox> is selectable at a time.</span></span>  
  
 <span data-ttu-id="eba7c-106"><xref:System.Windows.Controls.ListBox.SelectionMode%2A> 속성 항목의 사용자 수가 한 번에 선택할 수를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-106">The <xref:System.Windows.Controls.ListBox.SelectionMode%2A> property determines how many items a user can select at one time.</span></span> <span data-ttu-id="eba7c-107">속성 설정할 수 있습니다 <xref:System.Windows.Controls.SelectionMode.Single> (기본값) <xref:System.Windows.Controls.SelectionMode.Multiple>, 또는 <xref:System.Windows.Controls.SelectionMode.Extended>합니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-107">You can set the property to <xref:System.Windows.Controls.SelectionMode.Single> (the default), <xref:System.Windows.Controls.SelectionMode.Multiple>, or <xref:System.Windows.Controls.SelectionMode.Extended>.</span></span> <span data-ttu-id="eba7c-108">다음 표에서 이러한 열거형 값의 동작에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-108">The following table described the behavior of these enumeration values.</span></span>  
  
|<span data-ttu-id="eba7c-109">값</span><span class="sxs-lookup"><span data-stu-id="eba7c-109">Value</span></span>|<span data-ttu-id="eba7c-110">설명</span><span class="sxs-lookup"><span data-stu-id="eba7c-110">Description</span></span>|  
|-----------|-----------------|  
|<xref:System.Windows.Controls.SelectionMode.Single>|<span data-ttu-id="eba7c-111">사용자가 항목을 한 번에 하나만 선택할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-111">The user can select only one item at a time.</span></span>|  
|<xref:System.Windows.Controls.SelectionMode.Multiple>|<span data-ttu-id="eba7c-112">사용자가 한정자 키를 누르지 않고도 여러 항목을 선택할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-112">The user can select multiple items without holding down a modifier key.</span></span>|  
|<xref:System.Windows.Controls.SelectionMode.Extended>|<span data-ttu-id="eba7c-113">CTRL 키를 누른 채 항목을 클릭 하 여 연속 되지 않은 항목을 SHIFT 키를 누른 채 여러 연속 항목을 선택할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-113">The user can select multiple consecutive items while holding down the SHIFT key or non-consecutive items by holding down the CTRL key and clicking the items.</span></span>|  
  
 <span data-ttu-id="eba7c-114"><xref:System.Windows.Controls.ListBox> 컨트롤은 데이터 바인딩을 사용 하 여 자주 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-114"><xref:System.Windows.Controls.ListBox> controls are often used with data binding.</span></span>  <span data-ttu-id="eba7c-115">자세한 내용은 [데이터 바인딩 개요](~/docs/framework/wpf/data/data-binding-overview.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="eba7c-115">For more information, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 <span data-ttu-id="eba7c-116">많은 수의 항목을 표시 하면 성능 문제가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-116">Displaying a large number of items may cause performance issues.</span></span>  <span data-ttu-id="eba7c-117">참조 [성능 최적화: 컨트롤](~/docs/framework/wpf/advanced/optimizing-performance-controls.md) 자세한 내용은 합니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-117">See [Optimizing Performance: Controls](~/docs/framework/wpf/advanced/optimizing-performance-controls.md) for more information.</span></span>  
  
## <a name="customizing-the-listbox-control"></a><span data-ttu-id="eba7c-118">ListBox 컨트롤을 사용자 지정</span><span class="sxs-lookup"><span data-stu-id="eba7c-118">Customizing the ListBox Control</span></span>  
 <span data-ttu-id="eba7c-119">여러 동일한 속성 설정에 적용할 <xref:System.Windows.Controls.ListBox> 컨트롤을 사용 하 여는 <xref:System.Windows.FrameworkElement.Style%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-119">To apply the same property settings to multiple <xref:System.Windows.Controls.ListBox> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="eba7c-120">기본값을 수정할 수 있습니다 <xref:System.Windows.Controls.ControlTemplate> 고유한 모양을 제어할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-120">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="eba7c-121">만들기에 대 한 자세한 내용은 <xref:System.Windows.Controls.ControlTemplate>를 참조 하세요 [ControlTemplate을 만들어 기존 컨트롤의 모양 사용자 지정](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-121">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="eba7c-122">부분과 관련 된 상태를 확인 하려면 합니다 <xref:System.Windows.Controls.ListBox>를 참조 하세요 [ListBox 스타일 및 템플릿](~/docs/framework/wpf/controls/listbox-styles-and-templates.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-122">To see the parts and states that are specific to the <xref:System.Windows.Controls.ListBox>, see [ListBox Styles and Templates](~/docs/framework/wpf/controls/listbox-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="eba7c-123">이 컨트롤에 대 한 종속성 속성은 컨트롤의 기본 스타일으로 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-123">Dependency properties for this control might be set by the control's default style.</span></span>  <span data-ttu-id="eba7c-124">속성이 설정 된 기본 스타일을 컨트롤 응용 프로그램에 표시 되 면 속성 값이 기본값에서 변경 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-124">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="eba7c-125">기본 스타일은 응용 프로그램 실행 중일 때 사용 되는 바탕 화면 테마에서 결정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-125">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="eba7c-126">자세한 내용은 [기본 WPF 테마](https://go.microsoft.com/fwlink/?LinkID=158252)합니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-126">For more information, see [Default WPF Themes](https://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eba7c-127">Visual 속성을 설정만 영향을 줄 수는 속성이 둘 다에 있는 경우 <xref:System.Windows.Controls.ListBox> 컨트롤의 기본 템플릿 및 사용 하 여 설정 됩니다는 합니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-127">Setting a visual property will only have an effect if that property is both present in <xref:System.Windows.Controls.ListBox> control's default template and is set by using a .</span></span> <span data-ttu-id="eba7c-128">"변경의 시각적 구조 컨트롤의" 단원의 visual 속성의 목록을 찾을 수 있습니다 [ControlTemplate을 만들어 기존 컨트롤의 모양 사용자 지정](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-128">You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eba7c-129">다음 예에서는 <xref:System.Windows.Controls.ListBox> 하 고 구독을 <xref:System.Windows.Controls.Primitives.Selector.SelectionChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-129">The following example creates a <xref:System.Windows.Controls.ListBox> and subscribes to the <xref:System.Windows.Controls.Primitives.Selector.SelectionChanged> event.</span></span>  
  
 [!code-xaml[ListBoxEvent#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ListBoxEvent/CSharp/Pane1.xaml#1)]  
  
 [!code-csharp[ListBoxEvent#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ListBoxEvent/CSharp/Pane1.xaml.cs#2)]
 [!code-vb[ListBoxEvent#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListBoxEvent/VisualBasic/Pane1.xaml.vb#2)]  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160053"><span data-ttu-id="eba7c-130">WPF 컨트롤 갤러리 샘플</span><span class="sxs-lookup"><span data-stu-id="eba7c-130">WPF Controls Gallery Sample</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eba7c-131"><see cref="T:System.Windows.Controls.ListBox" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-131">Initializes a new instance of the <see cref="T:System.Windows.Controls.ListBox" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnchorItem">
      <MemberSignature Language="C#" Value="protected object AnchorItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AnchorItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ListBox.AnchorItem" />
      <MemberSignature Language="VB.NET" Value="Protected Property AnchorItem As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Object ^ AnchorItem { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AnchorItem : obj with get, set" Usage="System.Windows.Controls.ListBox.AnchorItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eba7c-132"><see cref="P:System.Windows.Controls.ListBox.SelectionMode" />가 <see cref="F:System.Windows.Controls.SelectionMode.Extended" />인 경우 처음에 선택되는 항목을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-132">Gets or sets the item that is initially selected when <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> is <see cref="F:System.Windows.Controls.SelectionMode.Extended" />.</span></span></summary>
        <value><span data-ttu-id="eba7c-133"><see cref="P:System.Windows.Controls.ListBox.SelectionMode" />이  <see cref="F:System.Windows.Controls.SelectionMode.Extended" />인 경우 처음에 선택되는 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-133">The item that is initially selected when <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> is <see cref="F:System.Windows.Controls.SelectionMode.Extended" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.DependencyObject GetContainerForItemOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.DependencyObject GetContainerForItemOverride() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListBox.GetContainerForItemOverride" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetContainerForItemOverride () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::DependencyObject ^ GetContainerForItemOverride();" />
      <MemberSignature Language="F#" Value="override this.GetContainerForItemOverride : unit -&gt; System.Windows.DependencyObject" Usage="listBox.GetContainerForItemOverride " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eba7c-134">지정된 항목을 표시하는 데 사용되는 요소를 만들거나 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-134">Creates or identifies the element used to display a specified item.</span></span></summary>
        <returns><span data-ttu-id="eba7c-135">지정된 항목을 표시하는 데 사용되는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-135">The element used to display a specified item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandlesScrolling">
      <MemberSignature Language="C#" Value="protected internal override bool HandlesScrolling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HandlesScrolling" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ListBox.HandlesScrolling" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property HandlesScrolling As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HandlesScrolling { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HandlesScrolling : bool" Usage="System.Windows.Controls.ListBox.HandlesScrolling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eba7c-136"><see cref="T:System.Windows.Controls.ListBox" />가 스크롤을 지원하는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-136">Gets a value that indicates whether the <see cref="T:System.Windows.Controls.ListBox" /> supports scrolling.</span></span></summary>
        <value><span data-ttu-id="eba7c-137"><see cref="T:System.Windows.Controls.ListBox" />에서 스크롤을 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-137"><see langword="true" /> if the <see cref="T:System.Windows.Controls.ListBox" /> supports scrolling; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eba7c-138">컨트롤에 있으면를 <xref:System.Windows.Controls.ScrollViewer> 의 스타일에 있고 사용자 지정 키보드 스크롤 동작이 <xref:System.Windows.Controls.ListBox.HandlesScrolling%2A> 반환할지 `true`.</span><span class="sxs-lookup"><span data-stu-id="eba7c-138">If the control has a <xref:System.Windows.Controls.ScrollViewer> in its style and has a custom keyboard scrolling behavior, <xref:System.Windows.Controls.ListBox.HandlesScrolling%2A> should return `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItemItsOwnContainerOverride">
      <MemberSignature Language="C#" Value="protected override bool IsItemItsOwnContainerOverride (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsItemItsOwnContainerOverride(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListBox.IsItemItsOwnContainerOverride(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsItemItsOwnContainerOverride (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsItemItsOwnContainerOverride(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.IsItemItsOwnContainerOverride : obj -&gt; bool" Usage="listBox.IsItemItsOwnContainerOverride item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="eba7c-139">지정한 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-139">Specified item.</span></span></param>
        <summary><span data-ttu-id="eba7c-140">지정된 항목이 고유한 <c>ItemContainer</c>인지(또는 해당 자격이 있는지) 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-140">Determines if the specified item is (or is eligible to be) its own <c>ItemContainer</c>.</span></span></summary>
        <returns><span data-ttu-id="eba7c-141">항목이 자신의 <see langword="ItemContainer" />이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-141"><see langword="true" /> if the item is its own <see langword="ItemContainer" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListBox.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="listBox.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eba7c-142">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 자동화 인프라의 일부로 이 컨트롤에 대한 적절한 <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer" /> 구현을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-142">Provides an appropriate <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer" /> implementation for this control, as part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] automation infrastructure.</span></span></summary>
        <returns><span data-ttu-id="eba7c-143">형식별 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 구현입니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-143">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="protected override void OnIsMouseCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnIsMouseCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListBox.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnIsMouseCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnIsMouseCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="override this.OnIsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="listBox.OnIsMouseCapturedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="eba7c-144"><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />에 대한 데이터를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-144">Provides data for the <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span></span></param>
        <summary><span data-ttu-id="eba7c-145"><see cref="P:System.Windows.UIElement.IsMouseCaptured" /> 속성이 변경되면 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-145">Called when the <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> property changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListBox.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="listBox.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="eba7c-146"><see cref="T:System.Windows.Input.KeyEventArgs" />에 대한 데이터를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-146">Provides data for <see cref="T:System.Windows.Input.KeyEventArgs" />.</span></span></param>
        <summary><span data-ttu-id="eba7c-147"><see cref="E:System.Windows.UIElement.KeyDown" /> 이벤트에 응답합니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-147">Responds to the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListBox.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="listBox.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="eba7c-148"><see cref="T:System.Windows.Input.MouseEventArgs" />에 대한 데이터를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-148">Provides data for <see cref="T:System.Windows.Input.MouseEventArgs" />.</span></span></param>
        <summary><span data-ttu-id="eba7c-149"><see cref="T:System.Windows.Controls.ListBox" />가 마우스 이동을 보고하면 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-149">Called when a <see cref="T:System.Windows.Controls.ListBox" /> reports a mouse move.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChanged">
      <MemberSignature Language="C#" Value="protected override void OnSelectionChanged (System.Windows.Controls.SelectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSelectionChanged(class System.Windows.Controls.SelectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListBox.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSelectionChanged (e As SelectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSelectionChanged(System::Windows::Controls::SelectionChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnSelectionChanged : System.Windows.Controls.SelectionChangedEventArgs -&gt; unit" Usage="listBox.OnSelectionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.SelectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="eba7c-150"><see cref="T:System.Windows.Controls.SelectionChangedEventArgs" />에 대한 데이터를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-150">Provides data for <see cref="T:System.Windows.Controls.SelectionChangedEventArgs" />.</span></span></param>
        <summary><span data-ttu-id="eba7c-151"><see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> 이벤트를 발생시켜 목록 상자 선택 변경에 응답합니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-151">Responds to a list box selection change by raising a <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListBox.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.PrepareContainerForItemOverride : System.Windows.DependencyObject * obj -&gt; unit" Usage="listBox.PrepareContainerForItemOverride (element, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="eba7c-152">지정된 항목을 표시하는 데 사용되는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-152">Element used to display the specified item.</span></span></param>
        <param name="item"><span data-ttu-id="eba7c-153">지정한 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-153">Specified item.</span></span></param>
        <summary><span data-ttu-id="eba7c-154">지정한 항목을 표시하기 위해 지정한 요소를 준비합니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-154">Prepares the specified element to display the specified item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eba7c-155">요소를 준비 하 고 스타일, 바인딩 설정 적용을 포함 하 고 등 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-155">Preparing the element may involve applying styles, setting bindings, and so on.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollIntoView">
      <MemberSignature Language="C#" Value="public void ScrollIntoView (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollIntoView(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListBox.ScrollIntoView(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollIntoView (item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollIntoView(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="member this.ScrollIntoView : obj -&gt; unit" Usage="listBox.ScrollIntoView item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="eba7c-156">스크롤할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-156">Object to scroll.</span></span></param>
        <summary><span data-ttu-id="eba7c-157">개체를 스크롤하여 표시되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-157">Causes the object to scroll into view.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eba7c-158">개체를 표시 하지 뷰포트 맨 위나 맨 아래에 맞춥니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-158">If the object is not visible, it is aligned at the top or bottom of the viewport.</span></span>  
  
  
## Examples  
 <span data-ttu-id="eba7c-159">다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Controls.ListBox.ScrollIntoView%2A> 뷰포트를 목록 상자에서 항목 스크롤 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-159">The following example shows how to use the <xref:System.Windows.Controls.ListBox.ScrollIntoView%2A> method to scroll an item in the list box into the viewport.</span></span>
  
 [!code-csharp[ListBox_snip#ListBoxScrollIntoView](~/samples/snippets/csharp/VS_Snippets_Wpf/ListBox_snip/CSharp/Window1.xaml.cs#listboxscrollintoview)]
 [!code-vb[ListBox_snip#ListBoxScrollIntoView](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListBox_snip/visualbasic/window1.xaml.vb#listboxscrollintoview)]  
 
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public void SelectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListBox.SelectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectAll();" />
      <MemberSignature Language="F#" Value="member this.SelectAll : unit -&gt; unit" Usage="listBox.SelectAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eba7c-160"><see cref="T:System.Windows.Controls.ListBox" />의 모든 항목을 선택합니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-160">Selects all the items in a <see cref="T:System.Windows.Controls.ListBox" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eba7c-161">다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Controls.ListBox.SelectAll%2A> 메서드를 선택 하 고 목록 상자에 있는 모든 항목을 강조 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-161">The following example shows how to use the <xref:System.Windows.Controls.ListBox.SelectAll%2A> method to select and highlight all the items in a list box.</span></span>  
  
 [!code-csharp[ListBox_snip#ListBoxSelectAll](~/samples/snippets/csharp/VS_Snippets_Wpf/ListBox_snip/CSharp/Window1.xaml.cs#listboxselectall)]
 [!code-vb[ListBox_snip#ListBoxSelectAll](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListBox_snip/visualbasic/window1.xaml.vb#listboxselectall)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="eba7c-162"><see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> 속성은 <see cref="F:System.Windows.Controls.SelectionMode.Single" />로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-162">The <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> property is set to <see cref="F:System.Windows.Controls.SelectionMode.Single" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SelectedItems">
      <MemberSignature Language="C#" Value="public System.Collections.IList SelectedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList SelectedItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ListBox.SelectedItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedItems As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ SelectedItems { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItems : System.Collections.IList" Usage="System.Windows.Controls.ListBox.SelectedItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eba7c-163">현재 선택한 항목을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-163">Gets the currently selected items.</span></span></summary>
        <value><span data-ttu-id="eba7c-164">현재 선택한 항목의 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-164">Returns a collection of the currently selected items.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eba7c-165">이 속성은 작성 때 사용 되는 <xref:System.Windows.Controls.ListBox.SelectionMode%2A> 같지 않음 <xref:System.Windows.Controls.SelectionMode.Single>합니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-165">This property is meant to be used when <xref:System.Windows.Controls.ListBox.SelectionMode%2A> does not equal <xref:System.Windows.Controls.SelectionMode.Single>.</span></span> <span data-ttu-id="eba7c-166">선택 모드 이면 <xref:System.Windows.Controls.SelectionMode.Single> 를 사용 하 여 올바른 속성이 <xref:System.Windows.Controls.Primitives.Selector.SelectedItem%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-166">If the selection mode is <xref:System.Windows.Controls.SelectionMode.Single> the correct property to use is <xref:System.Windows.Controls.Primitives.Selector.SelectedItem%2A>.</span></span>  
  
<a name="dependencyPropertyInfo_SelectedItems"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="eba7c-167">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="eba7c-167">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="eba7c-168">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="eba7c-168">Identifier field</span></span>|<xref:System.Windows.Controls.ListBox.SelectedItemsProperty>|  
|<span data-ttu-id="eba7c-169">메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="eba7c-169">Metadata properties set to `true`</span></span>|<span data-ttu-id="eba7c-170">없음</span><span class="sxs-lookup"><span data-stu-id="eba7c-170">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="eba7c-171">다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.ListBox.SelectedItems%2A> 속성 목록 상자에 있는지 여부를 확인 하는 항목을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-171">The following example shows how to use the <xref:System.Windows.Controls.ListBox.SelectedItems%2A> property to determine whether a list box has any selected items.</span></span>  
  
 [!code-csharp[ListBox_snip#ListBoxSelectedItems](~/samples/snippets/csharp/VS_Snippets_Wpf/ListBox_snip/CSharp/Window1.xaml.cs#listboxselecteditems)]
 [!code-vb[ListBox_snip#ListBoxSelectedItems](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListBox_snip/visualbasic/window1.xaml.vb#listboxselecteditems)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eba7c-172"><see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> 속성은 <see cref="F:System.Windows.Controls.SelectionMode.Single" />로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-172">The <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> property is set to <see cref="F:System.Windows.Controls.SelectionMode.Single" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SelectedItemsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectedItemsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectedItemsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ListBox.SelectedItemsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectedItemsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectedItemsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectedItemsProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ListBox.SelectedItemsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eba7c-173"><see cref="P:System.Windows.Controls.ListBox.SelectedItems" /> 종속성 속성을 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-173">Identifies the <see cref="P:System.Windows.Controls.ListBox.SelectedItems" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionMode">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.SelectionMode SelectionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.SelectionMode SelectionMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ListBox.SelectionMode" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionMode As SelectionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::SelectionMode SelectionMode { System::Windows::Controls::SelectionMode get(); void set(System::Windows::Controls::SelectionMode value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionMode : System.Windows.Controls.SelectionMode with get, set" Usage="System.Windows.Controls.ListBox.SelectionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.SelectionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eba7c-174"><see cref="T:System.Windows.Controls.ListBox" />에 대한 선택 동작을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-174">Gets or sets the selection behavior for a <see cref="T:System.Windows.Controls.ListBox" />.</span></span></summary>
        <value><span data-ttu-id="eba7c-175"><see cref="T:System.Windows.Controls.SelectionMode" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-175">One of the <see cref="T:System.Windows.Controls.SelectionMode" /> values.</span></span> <span data-ttu-id="eba7c-176">기본값은 <see cref="F:System.Windows.Controls.SelectionMode.Single" /> 선택입니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-176">The default is <see cref="F:System.Windows.Controls.SelectionMode.Single" /> selection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_SelectionMode"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="eba7c-177">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="eba7c-177">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="eba7c-178">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="eba7c-178">Identifier field</span></span>|<xref:System.Windows.Controls.ListBox.SelectionModeProperty>|  
|<span data-ttu-id="eba7c-179">메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="eba7c-179">Metadata properties set to `true`</span></span>|<span data-ttu-id="eba7c-180">없음</span><span class="sxs-lookup"><span data-stu-id="eba7c-180">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="eba7c-181">다음 예제에서는 합니다 <xref:System.Windows.Controls.ListBox.SelectionMode%2A> 속성을 <xref:System.Windows.Controls.SelectionMode.Multiple>입니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-181">The following example sets the <xref:System.Windows.Controls.ListBox.SelectionMode%2A> property to <xref:System.Windows.Controls.SelectionMode.Multiple>.</span></span>  
  
 [!code-xaml[ListBoxEvent#4](~/samples/snippets/csharp/VS_Snippets_Wpf/ListBoxEvent/CSharp/Pane1.xaml#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ListBox.SelectionModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionModeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectionModeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ListBox.SelectionModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eba7c-182"><see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> 종속성 속성을 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-182">Identifies the <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSelectedItems">
      <MemberSignature Language="C#" Value="protected bool SetSelectedItems (System.Collections.IEnumerable selectedItems);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool SetSelectedItems(class System.Collections.IEnumerable selectedItems) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListBox.SetSelectedItems(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Protected Function SetSelectedItems (selectedItems As IEnumerable) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool SetSelectedItems(System::Collections::IEnumerable ^ selectedItems);" />
      <MemberSignature Language="F#" Value="member this.SetSelectedItems : System.Collections.IEnumerable -&gt; bool" Usage="listBox.SetSelectedItems selectedItems" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedItems" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="selectedItems"><span data-ttu-id="eba7c-183">선택할 항목의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-183">Collection of items to be selected.</span></span></param>
        <summary><span data-ttu-id="eba7c-184">선택된 항목의 컬렉션을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-184">Sets a collection of selected items.</span></span></summary>
        <returns><span data-ttu-id="eba7c-185">모든 항목이 선택되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-185"><see langword="true" /> if all items have been selected; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnselectAll">
      <MemberSignature Language="C#" Value="public void UnselectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnselectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListBox.UnselectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnselectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnselectAll();" />
      <MemberSignature Language="F#" Value="member this.UnselectAll : unit -&gt; unit" Usage="listBox.UnselectAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eba7c-186"><see cref="T:System.Windows.Controls.ListBox" />의 모든 선택 영역을 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-186">Clears all the selection in a <see cref="T:System.Windows.Controls.ListBox" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eba7c-187">다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Controls.ListBox.UnselectAll%2A> 목록 상자에 있는 모든 항목을 선택 취소 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="eba7c-187">The following example shows how to use the <xref:System.Windows.Controls.ListBox.UnselectAll%2A> method to unselect all the items in a list box.</span></span>  
  
 [!code-csharp[ListBox_snip#ListBoxUnselectAll](~/samples/snippets/csharp/VS_Snippets_Wpf/ListBox_snip/CSharp/Window1.xaml.cs#listboxunselectall)]
 [!code-vb[ListBox_snip#ListBoxUnselectAll](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListBox_snip/visualbasic/window1.xaml.vb#listboxunselectall)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>