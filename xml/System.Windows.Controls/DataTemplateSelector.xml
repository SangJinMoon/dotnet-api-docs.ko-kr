<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DataTemplateSelector.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57cf6ef824251b65f85296296a1a43a3ae2db5d26.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7cf6ef824251b65f85296296a1a43a3ae2db5d26</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Controls.DataTemplateSelector">
          <source>Provides a way to choose a <ph id="ph1">&lt;see cref="T:System.Windows.DataTemplate" /&gt;</ph> based on the data object and the data-bound element.</source>
          <target state="translated">데이터 개체와 데이터 바인딩된 요소를 기반으로 하여 <ph id="ph1">&lt;see cref="T:System.Windows.DataTemplate" /&gt;</ph>을 선택하는 방법을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.DataTemplateSelector">
          <source>Typically, you create a <ph id="ph1">&lt;xref:System.Windows.Controls.DataTemplateSelector&gt;</ph> when you have more than one <ph id="ph2">&lt;xref:System.Windows.DataTemplate&gt;</ph> for the same type of objects and you want to supply your own logic to choose a <ph id="ph3">&lt;xref:System.Windows.DataTemplate&gt;</ph> to apply based on the properties of each data object.</source>
          <target state="translated">만들 때는 일반적으로 <ph id="ph1">&lt;xref:System.Windows.Controls.DataTemplateSelector&gt;</ph> 여러 개 설치한 경우 <ph id="ph2">&lt;xref:System.Windows.DataTemplate&gt;</ph> 동일한 유형의 개체에 대 한 원하는 선택 하기 위한 자체 논리를 제공 하는 <ph id="ph3">&lt;xref:System.Windows.DataTemplate&gt;</ph> 각 데이터 개체의 속성을 기준으로 적용 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.DataTemplateSelector">
          <source>Note that if you have objects of different types you can set the <ph id="ph1">&lt;xref:System.Windows.DataTemplate.DataType%2A&gt;</ph> property on the <ph id="ph2">&lt;xref:System.Windows.DataTemplate&gt;</ph>.</source>
          <target state="translated">다른 개체가 여러 개 있는 경우 형식를 설정할 수는 <ph id="ph1">&lt;xref:System.Windows.DataTemplate.DataType%2A&gt;</ph> 속성에는 <ph id="ph2">&lt;xref:System.Windows.DataTemplate&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.DataTemplateSelector">
          <source>If you do that then there is no need to create a <ph id="ph1">&lt;xref:System.Windows.Controls.DataTemplateSelector&gt;</ph>.</source>
          <target state="translated">이렇게 하면를 만들 필요 없이 경우는 <ph id="ph1">&lt;xref:System.Windows.Controls.DataTemplateSelector&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.DataTemplateSelector">
          <source>Furthermore, if you have objects of the same type but with different properties, you can also consider using a <ph id="ph1">&lt;xref:System.Windows.DataTrigger&gt;</ph> or a data converter.</source>
          <target state="translated">또한 서로 다른 속성과 같지만 동일한 유형의 개체를 사용 하도록 설정한 경우을 고려해볼 수도 있습니다를 사용 하는 <ph id="ph1">&lt;xref:System.Windows.DataTrigger&gt;</ph> 또는 데이터 변환기입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.DataTemplateSelector">
          <source>For more information, see <bpt id="p1">[</bpt>Data Templating Overview<ept id="p1">](~/docs/framework/wpf/data/data-templating-overview.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>데이터 템플릿 개요<ept id="p1">](~/docs/framework/wpf/data/data-templating-overview.md)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.DataTemplateSelector">
          <source>To create a template selector, create a class that inherits from <ph id="ph1">&lt;xref:System.Windows.Controls.DataTemplateSelector&gt;</ph> and override the <ph id="ph2">&lt;xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A&gt;</ph> method.</source>
          <target state="translated">템플릿 선택기를 만들려면에서 상속 되는 클래스를 만듭니다 <ph id="ph1">&lt;xref:System.Windows.Controls.DataTemplateSelector&gt;</ph> 재정의 <ph id="ph2">&lt;xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.DataTemplateSelector">
          <source>Once your class is defined you can assign an instance of the class to the template selector property of your element.</source>
          <target state="translated">클래스에 정의 되 면 요소의 템플릿 선택기 속성에는 클래스의 인스턴스를 할당할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.DataTemplateSelector">
          <source>In this example, the binding source is a list of <ph id="ph1">`Task`</ph> objects.</source>
          <target state="translated">이 예제에서는 바인딩 소스는 목록이 <ph id="ph1">`Task`</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.DataTemplateSelector">
          <source>One of the properties of a <ph id="ph1">`Task`</ph> object is <ph id="ph2">`Priority`</ph>.</source>
          <target state="translated">속성 중 하나는 <ph id="ph1">`Task`</ph> 개체가 <ph id="ph2">`Priority`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.DataTemplateSelector">
          <source>There are two data templates defined, <ph id="ph1">`myTaskTemplate`</ph> and <ph id="ph2">`importantTaskTemplate`</ph>.</source>
          <target state="translated">정의 하는 두 개의 데이터 템플릿이 <ph id="ph1">`myTaskTemplate`</ph> 및 <ph id="ph2">`importantTaskTemplate`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.DataTemplateSelector">
          <source>To supply logic to choose which <ph id="ph1">&lt;xref:System.Windows.DataTemplate&gt;</ph> to use based on the <ph id="ph2">`Priority`</ph> value of the data object, create a subclass of <ph id="ph3">&lt;xref:System.Windows.Controls.DataTemplateSelector&gt;</ph> and override the <ph id="ph4">&lt;xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A&gt;</ph> method.</source>
          <target state="translated">선택할 수는 논리를 제공 <ph id="ph1">&lt;xref:System.Windows.DataTemplate&gt;</ph> 에 따라 사용 하는 <ph id="ph2">`Priority`</ph> 값 데이터 개체의 서브 클래스를 만든 <ph id="ph3">&lt;xref:System.Windows.Controls.DataTemplateSelector&gt;</ph> 재정의 <ph id="ph4">&lt;xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.DataTemplateSelector">
          <source>In the following example, the <ph id="ph1">&lt;xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A&gt;</ph> method provides logic to return the appropriate template based on the value of the <ph id="ph2">`Priority`</ph> property.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A&gt;</ph> 의 값에 따라 적절 한 템플릿을 반환 하는 논리를 제공 하는 메서드는 <ph id="ph2">`Priority`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.DataTemplateSelector">
          <source>The template to return is found in the resources of the enveloping <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> element.</source>
          <target state="translated">반환할 템플릿의 상위 리소스 참조는 <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.DataTemplateSelector">
          <source>We can then declare the <ph id="ph1">`TaskListDataTemplateSelector`</ph> as a resource:</source>
          <target state="translated">그런 다음 <ph id="ph1">`TaskListDataTemplateSelector`</ph>를 리소스로 선언할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.DataTemplateSelector">
          <source>To use the template selector resource, assign it to the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>.</source>
          <target state="translated">템플릿 선택기 리소스를 사용 하려면에 할당 된 <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A&gt;</ph> 속성은 <ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.DataTemplateSelector">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> calls the <ph id="ph2">&lt;xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A&gt;</ph> method of the <ph id="ph3">`TaskListDataTemplateSelector`</ph> for each of the items in the underlying collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> 호출은 <ph id="ph2">&lt;xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A&gt;</ph> 의 메서드는 <ph id="ph3">`TaskListDataTemplateSelector`</ph> 기본 컬렉션의 항목에는 각각에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.DataTemplateSelector">
          <source>The call passes the data object as the item parameter.</source>
          <target state="translated">이 호출은 데이터 개체를 항목 매개 변수로 전달합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.DataTemplateSelector">
          <source>The <ph id="ph1">&lt;xref:System.Windows.DataTemplate&gt;</ph> that is returned by the method is then applied to that data object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.DataTemplate&gt;</ph> 에서 반환 하는 메서드를 해당 데이터 개체에 적용 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.DataTemplateSelector">
          <source>For the complete sample, see <bpt id="p1">[</bpt>Introduction to Data Templating Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160009)</ept>.</source>
          <target state="translated">전체 샘플을 보려면 <bpt id="p1">[</bpt>Introduction to Data Templating Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160009)</ept>(데이터 템플릿 샘플 소개)을 참조하세요.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.DataTemplateSelector.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.DataTemplateSelector" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.DataTemplateSelector" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>The data object for which to select the template.</source>
          <target state="translated">템플릿을 선택할 데이터 개체입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>The data-bound object.</source>
          <target state="translated">데이터 바인딩된 개체입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>When overridden in a derived class, returns a <ph id="ph1">&lt;see cref="T:System.Windows.DataTemplate" /&gt;</ph> based on custom logic.</source>
          <target state="translated">파생 클래스에서 재정의되는 경우 사용자 지정 논리에 따라 <ph id="ph1">&lt;see cref="T:System.Windows.DataTemplate" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Windows.DataTemplate" /&gt;</ph> or <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.DataTemplate" /&gt;</ph> 또는 <ph id="ph2">&lt;see langword="null" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>Typically, you use a template selector when you have more than one data template defined for the same type of objects.</source>
          <target state="translated">일반적으로 동일한 유형의 개체에 대해 정의 된 데이터 템플릿을 둘 이상 있는 경우는 템플릿 선택기를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>For example, if your binding source is list a list of student objects and you want to apply a particular template to the part-time students.</source>
          <target state="translated">예를 들어 바인딩 소스 목록에 있으면 학생 개체 목록이 시간제 학생에는 특정 템플릿을 적용 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>You can do this by creating a class that inherits from <ph id="ph1">&lt;xref:System.Windows.Controls.DataTemplateSelector&gt;</ph> and overriding the <ph id="ph2">&lt;xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A&gt;</ph> method.</source>
          <target state="translated">상속 되는 클래스를 만들어 이렇게 하려면 <ph id="ph1">&lt;xref:System.Windows.Controls.DataTemplateSelector&gt;</ph> 재정의 <ph id="ph2">&lt;xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>Once your class is defined you can assign an instance of the class to the template selector property of your element.</source>
          <target state="translated">클래스에 정의 되 면 요소의 템플릿 선택기 속성에는 클래스의 인스턴스를 할당할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>In this example, the binding source is a list of <ph id="ph1">`Task`</ph> objects.</source>
          <target state="translated">이 예제에서는 바인딩 소스는 목록이 <ph id="ph1">`Task`</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>One of the properties of a <ph id="ph1">`Task`</ph> object is <ph id="ph2">`Priority`</ph>.</source>
          <target state="translated">속성 중 하나는 <ph id="ph1">`Task`</ph> 개체가 <ph id="ph2">`Priority`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>There are two data templates defined, <ph id="ph1">`myTaskTemplate`</ph> and <ph id="ph2">`importantTaskTemplate`</ph>.</source>
          <target state="translated">정의 하는 두 개의 데이터 템플릿이 <ph id="ph1">`myTaskTemplate`</ph> 및 <ph id="ph2">`importantTaskTemplate`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>To supply logic to choose which <ph id="ph1">&lt;xref:System.Windows.DataTemplate&gt;</ph> to use based on the <ph id="ph2">`Priority`</ph> value of the data object, create a subclass of <ph id="ph3">&lt;xref:System.Windows.Controls.DataTemplateSelector&gt;</ph> and override the <ph id="ph4">&lt;xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A&gt;</ph> method.</source>
          <target state="translated">선택할 수는 논리를 제공 <ph id="ph1">&lt;xref:System.Windows.DataTemplate&gt;</ph> 에 따라 사용 하는 <ph id="ph2">`Priority`</ph> 값 데이터 개체의 서브 클래스를 만든 <ph id="ph3">&lt;xref:System.Windows.Controls.DataTemplateSelector&gt;</ph> 재정의 <ph id="ph4">&lt;xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>In the following example, the <ph id="ph1">&lt;xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A&gt;</ph> method provides logic to return the appropriate template based on the value of the <ph id="ph2">`Priority`</ph> property.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A&gt;</ph> 의 값에 따라 적절 한 템플릿을 반환 하는 논리를 제공 하는 메서드는 <ph id="ph2">`Priority`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>The template to return is found in the resources of the enveloping <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> element.</source>
          <target state="translated">반환할 템플릿의 상위 리소스 참조는 <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>We can then declare the <ph id="ph1">`TaskListDataTemplateSelector`</ph> as a resource:</source>
          <target state="translated">그런 다음 <ph id="ph1">`TaskListDataTemplateSelector`</ph>를 리소스로 선언할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>To use the template selector resource, assign it to the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>.</source>
          <target state="translated">템플릿 선택기 리소스를 사용 하려면에 할당 된 <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A&gt;</ph> 속성은 <ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> calls the <ph id="ph2">&lt;xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A&gt;</ph> method of the <ph id="ph3">`TaskListDataTemplateSelector`</ph> for each of the items in the underlying collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> 호출은 <ph id="ph2">&lt;xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A&gt;</ph> 의 메서드는 <ph id="ph3">`TaskListDataTemplateSelector`</ph> 기본 컬렉션의 항목에는 각각에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>The call passes the data object as the item parameter.</source>
          <target state="translated">이 호출은 데이터 개체를 항목 매개 변수로 전달합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.DataTemplate&gt;</ph> that is returned by the method is then applied to that data object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.DataTemplate&gt;</ph> 에서 반환 하는 메서드를 해당 데이터 개체에 적용 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>For the complete sample, see <bpt id="p1">[</bpt>Introduction to Data Templating Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160009)</ept>.</source>
          <target state="translated">전체 샘플을 보려면 <bpt id="p1">[</bpt>Introduction to Data Templating Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160009)</ept>(데이터 템플릿 샘플 소개)을 참조하세요.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>