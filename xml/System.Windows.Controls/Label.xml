<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Label.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58e2c2703d49f4ce15e4bbc5a90c2dc8ca5b87073.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8e2c2703d49f4ce15e4bbc5a90c2dc8ca5b87073</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Controls.Label">
          <source>Represents the text label for a control and provides support for access keys.</source>
          <target state="translated">컨트롤에 대한 텍스트 레이블을 나타내며 선택키에 대한 지원을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Label">
          <source>This class provides both functional and visual support for access keys (also known as mnemonics).</source>
          <target state="translated">이 클래스는 선택 키 (니모닉 라고도 함)에 대 한 기능 및 시각적 지원을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Label">
          <source>It is frequently used to enable quick keyboard access to controls such as a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>.</source>
          <target state="translated">와 같은 빠른 키보드로 컨트롤에 액세스할 수 있도록 자주 사용 되는 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Label">
          <source>To assign a <ph id="ph1">&lt;xref:System.Windows.Controls.Label&gt;</ph> to a <ph id="ph2">&lt;xref:System.Windows.Controls.Control&gt;</ph>, set the <ph id="ph3">&lt;xref:System.Windows.Controls.Label.Target%2A&gt;</ph> property to the control that should get focus when the user presses the access key.</source>
          <target state="translated">할당 하는 <ph id="ph1">&lt;xref:System.Windows.Controls.Label&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Windows.Controls.Control&gt;</ph>설정는 <ph id="ph3">&lt;xref:System.Windows.Controls.Label.Target%2A&gt;</ph> 속성 선택 키를 누를 때 포커스를 받아야 하는 컨트롤을 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Label">
          <source>Setting the target also causes <ph id="ph1">[!INCLUDE[TLA#tla_uiautomation](~/includes/tlasharptla-uiautomation-md.md)]</ph> to use the text of the label as the name of the targeted control.</source>
          <target state="translated">대상도 설정 하면 <ph id="ph1">[!INCLUDE[TLA#tla_uiautomation](~/includes/tlasharptla-uiautomation-md.md)]</ph> 레이블의 텍스트 대상된 컨트롤의 이름으로 사용 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Label">
          <source>For more information, see <bpt id="p1">[</bpt>Accessibility<ept id="p1">](~/docs/framework/ui-automation/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>내게 필요한 옵션<ept id="p1">](~/docs/framework/ui-automation/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Label">
          <source>To set the access key, add an underscore before the character that should be the access key.</source>
          <target state="translated">액세스 키를 설정 하려면 액세스 키 여야 하는 문자 앞에 밑줄을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Label">
          <source>If your content has multiple underscore characters, only the first one is converted into an access key; the other underscores appear as normal text.</source>
          <target state="translated">첫 번째 것만 선택 키; 변환할 내용을 여러 개의 밑줄 문자가 있으면 다른 밑줄 일반 텍스트로 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Label">
          <source>If the underscore that you want converted to the access key is not the first underscore, use two consecutive underscores for any underscores that precede the one that you want to convert.</source>
          <target state="translated">액세스 키로 변환 하는 것이 원하는 밑줄 첫 번째 밑줄이 없는 경우 변환 하려는 것을 앞에 오는 밑줄에 대 한 두 개의 밑줄을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Label">
          <source>For example, the following code contains an access key and displays as _Hello<bpt id="p1">**</bpt>W<ept id="p1">**</ept>orld:</source>
          <target state="translated">다음 코드 선택 키를 포함 하 고 _Hello로 표시 하는 예를 들어<bpt id="p1">**</bpt>W<ept id="p1">**</ept>됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Label">
          <source>Because the underscore that precedes H is a double, the W key registers as the access key.</source>
          <target state="translated">H 앞에 밑줄 double 이기 때문에 W 키 선택 키로 등록 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Label">
          <source>A label is not focusable, and it is not a tab stop.</source>
          <target state="translated">레이블을 포커스를 받을 수, 이며 탭 정지를 사용 하는 않습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Label">
          <source>For details, see <bpt id="p1">[</bpt>Focus Overview<ept id="p1">](~/docs/framework/wpf/advanced/focus-overview.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>포커스 개요<ept id="p1">](~/docs/framework/wpf/advanced/focus-overview.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Label">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.Label&gt;</ph> is a <ph id="ph2">&lt;xref:System.Windows.Controls.ContentControl&gt;</ph>, which means that it can contain a single object of any type (such as a string, an image, or a panel).</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Controls.Label&gt;</ph> 는 <ph id="ph2">&lt;xref:System.Windows.Controls.ContentControl&gt;</ph>, 즉, 모든 형식 (예: 문자열, 이미지 또는 패널)의 단일 개체가 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Label">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Windows.Controls.ContentControl&gt;</ph> class.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Windows.Controls.ContentControl&gt;</ph> 클래스를 참조하세요.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Label">
          <source>Customizing the Label Control</source>
          <target state="translated">레이블 컨트롤을 사용자 지정</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Label">
          <source>To apply the same property settings to multiple <ph id="ph1">&lt;xref:System.Windows.Controls.Label&gt;</ph> controls, use the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Style%2A&gt;</ph> property.</source>
          <target state="translated">여러 동일한 속성 설정을 적용 하려면 <ph id="ph1">&lt;xref:System.Windows.Controls.Label&gt;</ph> 컨트롤을 사용 하 여는 <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Style%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Label">
          <source>You can modify the default <ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> to give the control a unique appearance.</source>
          <target state="translated">기본값을 수정할 수 <ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> 고유한 모양을 제어할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Label">
          <source>For more information about creating a <ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>, see <bpt id="p1">[</bpt>Customizing the Appearance of an Existing Control by Creating a ControlTemplate<ept id="p1">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>.</source>
          <target state="translated">만들기에 대 한 자세한 내용은 <ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>, 참조 <bpt id="p1">[</bpt>는 ControlTemplate을 만들어 기존 컨트롤의 모양 사용자 지정<ept id="p1">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Label">
          <source>To see the parts and states that are specific to the <ph id="ph1">&lt;xref:System.Windows.Controls.Label&gt;</ph>, see <bpt id="p1">[</bpt>Label Styles and Templates<ept id="p1">](~/docs/framework/wpf/controls/label-styles-and-templates.md)</ept>.</source>
          <target state="translated">부분 및 관련 된 상태를 보려면는 <ph id="ph1">&lt;xref:System.Windows.Controls.Label&gt;</ph>, 참조 <bpt id="p1">[</bpt>레이블 스타일 및 템플릿<ept id="p1">](~/docs/framework/wpf/controls/label-styles-and-templates.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Label">
          <source>Dependency properties for this control might be set by the control’s default style.</source>
          <target state="translated">종속성 속성을이 컨트롤은 컨트롤의 기본 스타일으로 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Label">
          <source>If a property is set by a default style, the property might change from its default value when the control appears in the application.</source>
          <target state="translated">기본 스타일 속성은 응용 프로그램에이 컨트롤이 표시 하는 경우 속성이 기본값에서 변경 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Label">
          <source>The default style is determined by which desktop theme is used when the application is running.</source>
          <target state="translated">기본 스타일 응용 프로그램이 실행 중인 때 사용 되는 데스크톱 테마에 따라 결정 됩니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Label">
          <source>For more information, see <bpt id="p1">[</bpt>Default WPF Themes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=158252)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>기본 WPF 테마<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=158252)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Label">
          <source>Setting a visual property will only have an effect if that property is both present in <ph id="ph1">&lt;xref:System.Windows.Controls.Label&gt;</ph> control's default template and is set by using a .</source>
          <target state="translated">시각적 속성을 설정만 영향을 미칠 경우 해당 속성을 둘 다에 <ph id="ph1">&lt;xref:System.Windows.Controls.Label&gt;</ph> 컨트롤의 기본 템플릿에 하 고 사용 하 여 설정 됩니다는 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Label">
          <source>You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in <bpt id="p1">[</bpt>Customizing the Appearance of an Existing Control by Creating a ControlTemplate<ept id="p1">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>.</source>
          <target state="translated">"변경의 시각적 구조의 정도 제어" 섹션의 시각적 속성 목록을 찾을 수 있습니다 <bpt id="p1">[</bpt>는 ControlTemplate을 만들어 기존 컨트롤의 모양 사용자 지정<ept id="p1">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Label">
          <source>The following example shows how to create a <ph id="ph1">&lt;xref:System.Windows.Controls.Label&gt;</ph> that uses a binding to set the target.</source>
          <target state="translated">만드는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Controls.Label&gt;</ph> 대상을 설정 하는 바인딩을 사용 하 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Label">
          <source>The following example shows how to create a <ph id="ph1">&lt;xref:System.Windows.Controls.Label&gt;</ph> that has an access key and supports text wrapping.</source>
          <target state="translated">만드는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Controls.Label&gt;</ph> 선택 키가 있는 및 텍스트 줄 바꿈을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Label.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Label" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.Label" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Label.OnCreateAutomationPeer">
          <source>Provides an appropriate <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /&gt;</ph> implementation for this control, as part of the <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> infrastructure.</source>
          <target state="translated"><ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> 인프라의 일부로 이 컨트롤에 대한 적절한 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /&gt;</ph> 구현을 제공합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Label.OnCreateAutomationPeer">
          <source>The type-specific <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> implementation.</source>
          <target state="translated">형식별 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> 구현입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Label.Target">
          <source>Gets or sets the element that receives focus when the user presses the label's access key.</source>
          <target state="translated">사용자가 레이블의 선택키를 누를 때 포커스를 받는 요소를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Label.Target">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> that receives focus when the user presses the access key.</source>
          <target state="translated">사용자가 선택키를 누를 때 포커스를 받는 <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Label.Target">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Label.Target">
          <source>You can provide keyboard shortcuts to elements that don't support access keys by giving a <ph id="ph1">&lt;xref:System.Windows.Controls.Label&gt;</ph> an access key and setting this property.</source>
          <target state="translated">바로 가기 키를 제공 하 여 액세스 키를 지원 하지 않는 요소에 제공할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Controls.Label&gt;</ph> 선택 키 및이 속성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Label.Target">
          <source>Assign an access key to a label by placing an underscore immediately before the character that acts as the access key.</source>
          <target state="translated">선택 키로 사용 되는 문자의 바로 앞에 밑줄을 배치 하 여 레이블로 선택 키를 할당 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Label.Target">
          <source>An access key can be specified in the <ph id="ph1">&lt;xref:System.Windows.Controls.ContentControl.Content%2A&gt;</ph> property or by setting <ph id="ph2">&lt;xref:System.Windows.Controls.ContentControl.Content%2A&gt;</ph> to an <ph id="ph3">&lt;xref:System.Windows.Controls.AccessText&gt;</ph> object.</source>
          <target state="translated">선택 키에 지정할 수는 <ph id="ph1">&lt;xref:System.Windows.Controls.ContentControl.Content%2A&gt;</ph> 속성 또는 설정 하 여 <ph id="ph2">&lt;xref:System.Windows.Controls.ContentControl.Content%2A&gt;</ph> 에 <ph id="ph3">&lt;xref:System.Windows.Controls.AccessText&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Label.Target">
          <source>You cannot use this property to define a <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph>.</source>
          <target state="translated">이 속성을 사용 하 여 정의할 수 없습니다는 <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Label.Target">
          <source>For example, the following compiles but is not functional: <ph id="ph1">`&lt;object.Target&gt;&lt;UIElement../&gt;&lt;/object.Target&gt;`</ph>.</source>
          <target state="translated">예를 들어 컴파일되지만 작동 하지 않습니다: <ph id="ph1">`&lt;object.Target&gt;&lt;UIElement../&gt;&lt;/object.Target&gt;`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Label.Target">
          <source>This property provides a reference to an element that is already defined in your application.</source>
          <target state="translated">이 속성은 응용 프로그램에 이미 정의 되어 있는 요소에 대 한 참조를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Label.Target">
          <source>Dependency Property Information</source>
          <target state="translated">종속성 속성 정보</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Label.Target">
          <source>Identifier field</source>
          <target state="translated">식별자 필드</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Label.Target">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">로 메타 데이터 속성 설정 <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Label.Target">
          <source>None</source>
          <target state="translated">없음</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Label.Target">
          <source>XAML Attribute Usage</source>
          <target state="translated">XAML 특성 사용</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Label.Target">
          <source>XAML Property Element Usage</source>
          <target state="translated">XAML 속성 요소 사용</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Label.Target">
          <source>XAML Values</source>
          <target state="translated">XAML 값</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Label.Target">
          <source>The name of <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> that receives focus when the access key is pressed.</source>
          <target state="translated">이름을 <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> 선택 키를 누를 때 포커스를 받을입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Label.Target">
          <source>The following example shows how to set the <ph id="ph1">&lt;xref:System.Windows.Controls.Label.Target%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Controls.Label&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Controls.Label.Target%2A&gt;</ph>의 <ph id="ph2">&lt;xref:System.Windows.Controls.Label&gt;</ph> 속성을 설정하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.Label.TargetProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Label.Target" /&gt;</ph> dependency property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Controls.Label.Target" /&gt;</ph> 종속성 속성을 식별합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>