<Type Name="ComboBoxItem" FullName="System.Windows.Controls.ComboBoxItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b9e7b8fbd73ddacf100619408e5f4b72e5c08afe" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36567430" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ComboBoxItem : System.Windows.Controls.ListBoxItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ComboBoxItem extends System.Windows.Controls.ListBoxItem" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ComboBoxItem" />
  <TypeSignature Language="VB.NET" Value="Public Class ComboBoxItem&#xA;Inherits ListBoxItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComboBoxItem : System::Windows::Controls::ListBoxItem" />
  <TypeSignature Language="F#" Value="type ComboBoxItem = class&#xA;    inherit ListBoxItem" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ListBoxItem</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.ComboBox)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c0948-101">
        <see cref="T:System.Windows.Controls.ComboBox" /> 안에 선택 가능한 항목을 구현합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c0948-101">Implements a selectable item inside a <see cref="T:System.Windows.Controls.ComboBox" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c0948-102">기본적으로는 <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> 의 <xref:System.Windows.Controls.ComboBoxItem> 로 설정 된 <xref:System.Windows.HorizontalAlignment.Stretch>합니다.</span><span class="sxs-lookup"><span data-stu-id="c0948-102">By default, the <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> of a <xref:System.Windows.Controls.ComboBoxItem> is set to <xref:System.Windows.HorizontalAlignment.Stretch>.</span></span> <span data-ttu-id="c0948-103">기본 가로 위치는 <xref:System.Windows.Controls.StackPanel> 은 <xref:System.Windows.HorizontalAlignment.Center>합니다.</span><span class="sxs-lookup"><span data-stu-id="c0948-103">The default horizontal position of a <xref:System.Windows.Controls.StackPanel> is <xref:System.Windows.HorizontalAlignment.Center>.</span></span> <span data-ttu-id="c0948-104">설정 하는 경우는 <xref:System.Windows.FrameworkElement.Width%2A> 속성은 <xref:System.Windows.Controls.ComboBoxItem> 통해는 <xref:System.Windows.Controls.StackPanel>, 패널의 기본값이 적용 되 고 항목 가운데에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c0948-104">If you set the <xref:System.Windows.FrameworkElement.Width%2A> property of a <xref:System.Windows.Controls.ComboBoxItem> through a <xref:System.Windows.Controls.StackPanel>, the panel's default is applied and the item will be centered.</span></span>  
  
 <span data-ttu-id="c0948-105">A <xref:System.Windows.Controls.ComboBoxItem> 는 <xref:System.Windows.Controls.ContentControl>, 즉, 모든 형식 (예: 문자열, 이미지 또는 패널)의 단일 개체가 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0948-105">A <xref:System.Windows.Controls.ComboBoxItem> is a <xref:System.Windows.Controls.ContentControl>, which means that it can contain a single object of any type (such as a string, an image, or a panel).</span></span> <span data-ttu-id="c0948-106">자세한 내용은 <xref:System.Windows.Controls.ContentControl> 클래스를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="c0948-106">For more information, see the <xref:System.Windows.Controls.ContentControl> class.</span></span>  
  
## <a name="customizing-the-comboboxitem-control"></a><span data-ttu-id="c0948-107">ComboBoxItem 컨트롤 사용자 지정</span><span class="sxs-lookup"><span data-stu-id="c0948-107">Customizing the ComboBoxItem Control</span></span>  
 <span data-ttu-id="c0948-108">여러 동일한 속성 설정을 적용 하려면 <xref:System.Windows.Controls.ComboBoxItem> 컨트롤을 사용 하 여는 <xref:System.Windows.FrameworkElement.Style%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c0948-108">To apply the same property settings to multiple <xref:System.Windows.Controls.ComboBoxItem> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="c0948-109">기본값을 수정할 수 <xref:System.Windows.Controls.ControlTemplate> 고유한 모양을 제어할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0948-109">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="c0948-110">만들기에 대 한 자세한 내용은 <xref:System.Windows.Controls.ControlTemplate>, 참조 [는 ControlTemplate을 만들어 기존 컨트롤의 모양 사용자 지정](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c0948-110">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="c0948-111">부분 및 관련 된 상태를 보려면는 <xref:System.Windows.Controls.ComboBoxItem>, 참조 [콤보 상자 스타일 및 템플릿](~/docs/framework/wpf/controls/combobox-styles-and-templates.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c0948-111">To see the parts and states that are specific to the <xref:System.Windows.Controls.ComboBoxItem>, see [ComboBox Styles and Templates](~/docs/framework/wpf/controls/combobox-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="c0948-112">종속성 속성을이 컨트롤은 컨트롤의 기본 스타일으로 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0948-112">Dependency properties for this control might be set by the control’s default style.</span></span>  <span data-ttu-id="c0948-113">기본 스타일 속성은 응용 프로그램에이 컨트롤이 표시 하는 경우 속성이 기본값에서 변경 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0948-113">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="c0948-114">기본 스타일 응용 프로그램이 실행 중인 때 사용 되는 데스크톱 테마에 따라 결정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c0948-114">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="c0948-115">자세한 내용은 참조 [기본 WPF 테마](http://go.microsoft.com/fwlink/?LinkID=158252)합니다.</span><span class="sxs-lookup"><span data-stu-id="c0948-115">For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0948-116">시각적 속성을 설정만 영향을 미칠 경우 해당 속성을 둘 다에 <xref:System.Windows.Controls.ComboBoxItem> 컨트롤의 기본 템플릿에 하 고 사용 하 여 설정 됩니다는 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0948-116">Setting a visual property will only have an effect if that property is both present in <xref:System.Windows.Controls.ComboBoxItem> control's default template and is set by using a .</span></span> <span data-ttu-id="c0948-117">"변경의 시각적 구조의 정도 제어" 섹션의 시각적 속성 목록을 찾을 수 있습니다 [는 ControlTemplate을 만들어 기존 컨트롤의 모양 사용자 지정](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c0948-117">You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.ComboBox" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComboBoxItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBoxItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComboBoxItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0948-118">
            <see cref="T:System.Windows.Controls.ComboBoxItem" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0948-118">Initializes a new instance of the <see cref="T:System.Windows.Controls.ComboBoxItem" /> class</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHighlighted">
      <MemberSignature Language="C#" Value="public bool IsHighlighted { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHighlighted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBoxItem.IsHighlighted" />
      <MemberSignature Language="VB.NET" Value="Public Property IsHighlighted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:  property bool IsHighlighted {  public:&#xA;bool get(); protected:&#xA; void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsHighlighted : bool with get, set" Usage="System.Windows.Controls.ComboBoxItem.IsHighlighted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0948-119">항목이 강조 표시되는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0948-119">Gets a value that indicates whether the item is highlighted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0948-120">
            <see cref="T:System.Windows.Controls.ComboBoxItem" />이 강조 표시되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0948-120">
              <see langword="true" /> if a <see cref="T:System.Windows.Controls.ComboBoxItem" /> is highlighted; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c0948-121">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0948-121">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0948-122">이 속성을 필요한 선택을 나타냅니다에 강조 스타일에 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0948-122">This property can be used by styles that need a highlight to indicate selection.</span></span>  
  
 <span data-ttu-id="c0948-123">.NET Framework 버전 3.0 서비스 팩 1부터 <xref:System.Windows.Controls.ComboBoxItem.IsHighlighted%2A> 보호 setter가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c0948-123">Starting with the .NET Framework version 3.0 Service Pack 1, <xref:System.Windows.Controls.ComboBoxItem.IsHighlighted%2A> has a protected setter.</span></span> <span data-ttu-id="c0948-124">이 기능을 사용 하려면 응용 프로그램은.NET Framework 버전 3.5 대상으로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c0948-124">To use this functionality, your application should target the .NET Framework version 3.5.</span></span>  <span data-ttu-id="c0948-125">자세한 내용은 [버전 및 종속성](~/docs/framework/migration-guide/versions-and-dependencies.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="c0948-125">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsHighlighted"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c0948-126">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="c0948-126">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c0948-127">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="c0948-127">Identifier Field</span></span>|<xref:System.Windows.Controls.ComboBoxItem.IsHighlightedProperty>|  
|<span data-ttu-id="c0948-128">로 메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="c0948-128">Metadata properties set to `true`</span></span>|<span data-ttu-id="c0948-129">없음</span><span class="sxs-lookup"><span data-stu-id="c0948-129">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c0948-130">다음 예에서는 변경의 모양을 <xref:System.Windows.Controls.ComboBoxItem> 때 <xref:System.Windows.Controls.ComboBoxItem.IsHighlighted%2A> 은 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="c0948-130">The following example changes the appearance of a <xref:System.Windows.Controls.ComboBoxItem> when <xref:System.Windows.Controls.ComboBoxItem.IsHighlighted%2A> is `true`.</span></span>  
  
 [!code-xaml[ComboBoxSimple#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxSimple/CSharp/Pane1.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHighlightedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsHighlightedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsHighlightedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBoxItem.IsHighlightedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsHighlightedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsHighlightedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsHighlightedProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ComboBoxItem.IsHighlightedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0948-131">
            <see cref="P:System.Windows.Controls.ComboBoxItem.IsHighlighted" /> 종속성 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0948-131">Identifies the <see cref="P:System.Windows.Controls.ComboBoxItem.IsHighlighted" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContentChanged">
      <MemberSignature Language="C#" Value="protected override void OnContentChanged (object oldContent, object newContent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnContentChanged(object oldContent, object newContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBoxItem.OnContentChanged(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnContentChanged (oldContent As Object, newContent As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnContentChanged(System::Object ^ oldContent, System::Object ^ newContent);" />
      <MemberSignature Language="F#" Value="override this.OnContentChanged : obj * obj -&gt; unit" Usage="comboBoxItem.OnContentChanged (oldContent, newContent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldContent" Type="System.Object" />
        <Parameter Name="newContent" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="oldContent">
          <span data-ttu-id="c0948-132">이전 콘텐츠</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0948-132">Old content.</span>
          </span>
        </param>
        <param name="newContent">
          <span data-ttu-id="c0948-133">새 콘텐츠</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0948-133">New content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0948-134">
            <see cref="P:System.Windows.Controls.ContentControl.Content" /> 속성이 변경되면 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0948-134">Called when the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBoxItem.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="comboBoxItem.OnGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c0948-135">키보드 입력 이벤트 인수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0948-135">Keyboard input event arguments.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0948-136">이 요소에 키보드 포커스가 설정되어 있음을 알립니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0948-136">Announces that the keyboard is focused on this element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected override void OnMouseEnter (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseEnter(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBoxItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseEnter (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseEnter(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseEnter : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="comboBoxItem.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c0948-137">
            <see cref="T:System.Windows.Input.MouseEventArgs" />에 대한 데이터를 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0948-137">Provides data for <see cref="T:System.Windows.Input.MouseEventArgs" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0948-138">
            <see cref="E:System.Windows.UIElement.MouseEnter" /> 이벤트에 응답합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0948-138">Responds to a <see cref="E:System.Windows.UIElement.MouseEnter" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBoxItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="comboBoxItem.OnMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c0948-139">
            <see cref="T:System.Windows.Input.MouseButtonEventArgs" />에 대한 데이터를 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0948-139">Provides data for <see cref="T:System.Windows.Input.MouseButtonEventArgs" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0948-140">
            <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> 이벤트에 응답합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0948-140">Responds to the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBoxItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="comboBoxItem.OnMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c0948-141">
            <see cref="T:System.Windows.Input.MouseButtonEventArgs" />에 대한 데이터를 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0948-141">Provides data for <see cref="T:System.Windows.Input.MouseButtonEventArgs" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0948-142">
            <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> 이벤트에 응답합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0948-142">Responds to the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>