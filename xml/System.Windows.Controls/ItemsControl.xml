<Type Name="ItemsControl" FullName="System.Windows.Controls.ItemsControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4ec67c9a8be2c1c71ed72d39b83b3aefaa9db0fa" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39807409" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ItemsControl : System.Windows.Controls.Control, System.Windows.Controls.Primitives.IContainItemStorage, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ItemsControl extends System.Windows.Controls.Control implements class System.Windows.Controls.Primitives.IContainItemStorage, class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ItemsControl" />
  <TypeSignature Language="VB.NET" Value="Public Class ItemsControl&#xA;Inherits Control&#xA;Implements IAddChild, IContainItemStorage" />
  <TypeSignature Language="C++ CLI" Value="public ref class ItemsControl : System::Windows::Controls::Control, System::Windows::Controls::Primitives::IContainItemStorage, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type ItemsControl = class&#xA;    inherit Control&#xA;    interface IAddChild&#xA;    interface IContainItemStorage" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Controls.Primitives.IContainItemStorage</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.DefaultEvent("OnItemsChanged")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.DefaultProperty("Items")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Windows.Markup.ContentProperty("Items")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Windows.StyleTypedProperty(Property="ItemContainerStyle", StyleTargetType=typeof(System.Windows.FrameworkElement))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="9c0e7-101">항목의 컬렉션을 표시하는 데 사용할 수 있는 컨트롤을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9c0e7-101">Represents a control that can be used to present a collection of items.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c0e7-102"><xref:System.Windows.Controls.ItemsControl> 유형의 <xref:System.Windows.Controls.Control> 문자열, 개체 또는 다른 요소와 같은 여러 항목을 포함할 수 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-102">An <xref:System.Windows.Controls.ItemsControl> is a type of <xref:System.Windows.Controls.Control> that can contain multiple items, such as strings, objects, or other elements.</span></span> <span data-ttu-id="9c0e7-103">다음 그림에 표시 된 <xref:System.Windows.Controls.ListBox> 다음 다양 한 유형의 항목을 포함 하는 컨트롤:</span><span class="sxs-lookup"><span data-stu-id="9c0e7-103">The following illustration shows a <xref:System.Windows.Controls.ListBox> control that contains the following different types of items:</span></span>  
  
-   <span data-ttu-id="9c0e7-104">문자열</span><span class="sxs-lookup"><span data-stu-id="9c0e7-104">A string.</span></span>  
  
-   <span data-ttu-id="9c0e7-105"><xref:System.DateTime> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-105">A <xref:System.DateTime> object.</span></span>  
  
-   <span data-ttu-id="9c0e7-106"><xref:System.Windows.UIElement> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-106">A <xref:System.Windows.UIElement> object.</span></span>  
  
-   <span data-ttu-id="9c0e7-107">A <xref:System.Windows.Controls.Panel> 포함 된 컨트롤을 <xref:System.Windows.Shapes.Ellipse> 및 <xref:System.Windows.Controls.TextBlock>합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-107">A <xref:System.Windows.Controls.Panel> control that contains an <xref:System.Windows.Shapes.Ellipse> and a <xref:System.Windows.Controls.TextBlock>.</span></span>  
  
 <span data-ttu-id="9c0e7-108">![네 형식의 콘텐츠가 있는 ListBox](~/add/media/controlcontentmodellistbox2.PNG "네 형식의 콘텐츠가 있는 ListBox")</span><span class="sxs-lookup"><span data-stu-id="9c0e7-108">![ListBox with four types of content](~/add/media/controlcontentmodellistbox2.PNG "ListBox with four types of content")</span></span>  
<span data-ttu-id="9c0e7-109">여러 개체 형식이 들어 있는 ListBox</span><span class="sxs-lookup"><span data-stu-id="9c0e7-109">ListBox that contains multiple types of objects</span></span>  
  
 <span data-ttu-id="9c0e7-110">하나를 사용 합니다 <xref:System.Windows.Controls.ItemsControl.Items%2A> 또는 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> 의 콘텐츠를 생성 하는 데 컬렉션을 지정 하는 속성에 <xref:System.Windows.Controls.ItemsControl>입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-110">Use either the <xref:System.Windows.Controls.ItemsControl.Items%2A> or the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> property to specify the collection to use to generate the content of your <xref:System.Windows.Controls.ItemsControl>.</span></span> <span data-ttu-id="9c0e7-111">설정할 수 있습니다 합니다 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> 속성을 구현 하는 모든 형식 <xref:System.Collections.IEnumerable>합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-111">You can set the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> property to any type that implements <xref:System.Collections.IEnumerable>.</span></span> <span data-ttu-id="9c0e7-112"><xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> 일반적으로 데이터 컬렉션을 표시 하는 데 사용 됩니다 바인딩하는 <xref:System.Windows.Controls.ItemsControl> 컬렉션 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-112"><xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> is typically used to display a data collection or to bind an <xref:System.Windows.Controls.ItemsControl> to a collection object.</span></span>  
  
 <span data-ttu-id="9c0e7-113">경우 원하지 않는 구현 하는 개체를 사용 하 <xref:System.Collections.IEnumerable> 채우는 데는 <xref:System.Windows.Controls.ItemsControl>를 사용 하 여 항목을 추가할 수 있습니다는 <xref:System.Windows.Controls.ItemsControl.Items%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-113">If you do not want to use an object that implements <xref:System.Collections.IEnumerable> to populate the <xref:System.Windows.Controls.ItemsControl>, you can add items by using the <xref:System.Windows.Controls.ItemsControl.Items%2A> property.</span></span> <span data-ttu-id="9c0e7-114">항목을 <xref:System.Windows.Controls.ItemsControl> 다양 한 형식이 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-114">The items in an <xref:System.Windows.Controls.ItemsControl> can have different types.</span></span> <span data-ttu-id="9c0e7-115">예를 들어, 한 <xref:System.Windows.Controls.ListBox> 문자열인 한 항목과 다른 항목을 포함할 수 있습니다는 <xref:System.Windows.Controls.Image>합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-115">For example, a <xref:System.Windows.Controls.ListBox> can contain one item that is a string and another item that is an <xref:System.Windows.Controls.Image>.</span></span>  
  
 <span data-ttu-id="9c0e7-116">경우는 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> 속성이 설정 되어를 <xref:System.Windows.Controls.ItemsControl.Items%2A> 컬렉션에 읽기 전용 및 고정 크기로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-116">When the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> property is set, the <xref:System.Windows.Controls.ItemsControl.Items%2A> collection is set to read-only and fixed-size.</span></span> <span data-ttu-id="9c0e7-117">이 추가할 수 없습니다 항목 컬렉션에 직접 것을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-117">This means that you cannot add items to the collection directly.</span></span> <span data-ttu-id="9c0e7-118">때 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> 속성을 설정 하는 사용 중인 `null` 컬렉션을 제거 하 고 사용량을 복원 <xref:System.Windows.Controls.ItemsControl.Items%2A>, 되 고 빈 <xref:System.Windows.Controls.ItemCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-118">When <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> is in use, setting the property to `null` removes the collection and restores usage to <xref:System.Windows.Controls.ItemsControl.Items%2A>, which will be an empty <xref:System.Windows.Controls.ItemCollection>.</span></span>  
  
 <span data-ttu-id="9c0e7-119">각 <xref:System.Windows.Controls.ItemsControl> 형식에는 해당 항목 컨테이너 형식이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-119">Each <xref:System.Windows.Controls.ItemsControl> type has a corresponding item container type.</span></span> <span data-ttu-id="9c0e7-120">각각의 해당 항목 컨테이너 <xref:System.Windows.Controls.ItemsControl> 추가 `Item` 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-120">The corresponding item container for each <xref:System.Windows.Controls.ItemsControl> appends `Item` to its name.</span></span> <span data-ttu-id="9c0e7-121">예를 들어 <xref:System.Windows.Controls.ListBox>, 항목 컨테이너는 <xref:System.Windows.Controls.ListBoxItem> 제어;에 대 한 <xref:System.Windows.Controls.ComboBox>, 이들은 <xref:System.Windows.Controls.ComboBoxItem> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-121">For example, for <xref:System.Windows.Controls.ListBox>, the item containers are <xref:System.Windows.Controls.ListBoxItem> controls; for <xref:System.Windows.Controls.ComboBox>, they are <xref:System.Windows.Controls.ComboBoxItem> controls.</span></span> <span data-ttu-id="9c0e7-122">각 항목에 대 한 컨테이너 형식을 명시적으로 만들 수 있습니다는 <xref:System.Windows.Controls.ItemsControl>, 이지만 필요 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-122">You can explicitly create a container type for each item in the <xref:System.Windows.Controls.ItemsControl>, but it is not necessary.</span></span> <span data-ttu-id="9c0e7-123">컨테이너 형식을 명시적으로 만들지 않는 경우 항목 컬렉션의 데이터 항목을 포함 하는 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-123">When you do not explicitly create the container type, one is generated that contains a data item in the item collection.</span></span> <span data-ttu-id="9c0e7-124">예를 들어 있는 string 개체의 컬렉션을 바인딩하는 경우는 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> 의 속성을 <xref:System.Windows.Controls.ListBox>를 명시적으로 만들지 마세요 <xref:System.Windows.Controls.ListBoxItem> 개체 하지만 <xref:System.Windows.Controls.ListBox> 각 문자열에 대해 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-124">For example, if you bind a collection of string objects to the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> property of a <xref:System.Windows.Controls.ListBox>, you do not explicitly create <xref:System.Windows.Controls.ListBoxItem> objects, but the <xref:System.Windows.Controls.ListBox> will generate one for each string.</span></span> <span data-ttu-id="9c0e7-125">생성 된 항목 컨테이너를 사용 하 여 액세스할 수 있습니다는 <xref:System.Windows.Controls.ItemsControl.ItemContainerGenerator%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-125">You can access a generated item container by using the <xref:System.Windows.Controls.ItemsControl.ItemContainerGenerator%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9c0e7-126">UI 자동화의 특정 기능이 올바르게 작동 하지 않는 경우는 <xref:System.Windows.Controls.ItemsControl> 중복 개체를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-126">Certain features of UI Automation do not work correctly when an <xref:System.Windows.Controls.ItemsControl> contains duplicate objects.</span></span>   <span data-ttu-id="9c0e7-127">개체에 여러 번 나타나는 경우 첫 번째 인스턴스만 자동화 트리에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-127">If an object appears multiple times, only the first instance appears in the automation tree.</span></span>   <span data-ttu-id="9c0e7-128">(두 개체 **x** 하 고 **y** 하는 경우 중복 된 것으로 간주 됩니다 `Object.Equals(x, y)` 반환 `true`.)</span><span class="sxs-lookup"><span data-stu-id="9c0e7-128">(Two objects **x** and **y** are considered to be duplicates if `Object.Equals(x, y)` returns `true`.)</span></span>  
>   
>  <span data-ttu-id="9c0e7-129">개체를 while **x** 에서 사용 되는 <xref:System.Windows.Controls.ItemsControl> 반환한 값 **x입니다.**`GetHashCode()`</span><span class="sxs-lookup"><span data-stu-id="9c0e7-129">While an object **x** is in use by an <xref:System.Windows.Controls.ItemsControl> the value returned by **x.**`GetHashCode()`</span></span> <span data-ttu-id="9c0e7-130">변경 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-130">must not change.</span></span>  <span data-ttu-id="9c0e7-131">이 값으로 변경은 지원 되지 않음, 및 잠재 고객을 예측할 수 없는 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-131">Changes to this value are unsupported, and lead to unpredictable behavior.</span></span>  
  
 <span data-ttu-id="9c0e7-132">이 컨트롤에 대 한 종속성 속성은 컨트롤의 기본 스타일으로 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-132">Dependency properties for this control might be set by the control’s default style.</span></span> <span data-ttu-id="9c0e7-133">속성이 설정 된 기본 스타일을 컨트롤 응용 프로그램에 표시 되 면 속성 값이 기본값에서 변경 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-133">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="9c0e7-134">기본 스타일은 응용 프로그램 실행 중일 때 사용 되는 바탕 화면 테마에서 결정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-134">The default style is determined by which desktop theme is used when the application is running.</span></span> <span data-ttu-id="9c0e7-135">자세한 내용은 [기본 WPF 테마](http://go.microsoft.com/fwlink/?LinkID=158252)합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-135">For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c0e7-136">다음 예에서는 설명 데이터를 바인딩하는 <xref:System.Windows.Controls.ItemsControl>합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-136">The following examples demonstrate binding data to an <xref:System.Windows.Controls.ItemsControl>.</span></span> <span data-ttu-id="9c0e7-137">첫 번째 예제에서는 라는 클래스를 만듭니다 `MyData` 간단한 문자열 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-137">The first example creates a class called `MyData` that is a simple string collection.</span></span>  
  
 [!code-csharp[ControlContentOverviewSnippets#8](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlContentOverviewSnippets/CSharp/Window1.xaml.cs#8)]
 [!code-vb[ControlContentOverviewSnippets#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ControlContentOverviewSnippets/VisualBasic/Window1.xaml.vb#8)]  
  
 <span data-ttu-id="9c0e7-138">다음 예제에서는 합니다 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> 의 개체는 <xref:System.Windows.Controls.ItemsControl> 에 `MyData`입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-138">The following example binds the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> object of an <xref:System.Windows.Controls.ItemsControl> to `MyData`.</span></span>  
  
 [!code-xaml[ControlContentOverviewSnippets#7](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlContentOverviewSnippets/CSharp/Window1.xaml#7)]  
[!code-xaml[ControlContentOverviewSnippets#6](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlContentOverviewSnippets/CSharp/Window1.xaml#6)]  
  
 [!code-csharp[ControlContentOverviewSnippets#9](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlContentOverviewSnippets/CSharp/Window1.xaml.cs#9)]
 [!code-vb[ControlContentOverviewSnippets#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ControlContentOverviewSnippets/VisualBasic/Window1.xaml.vb#9)]  
  
 <span data-ttu-id="9c0e7-139">다음 그림에 표시 된 <xref:System.Windows.Controls.ListBox> 이전 예에서 만든 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-139">The following illustration shows the <xref:System.Windows.Controls.ListBox> control created in the previous example.</span></span>  
  
 <span data-ttu-id="9c0e7-140">![ListBox](~/add/media/controlcontentmodellistbox1.PNG "ListBox")</span><span class="sxs-lookup"><span data-stu-id="9c0e7-140">![ListBox](~/add/media/controlcontentmodellistbox1.PNG "ListBox")</span></span>  
  
 <span data-ttu-id="9c0e7-141">다음 예제에서는 채우는 방법을 보여 줍니다.는 <xref:System.Windows.Controls.ItemsControl> 를 사용 하 여는 <xref:System.Windows.Controls.ItemsControl.Items%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-141">The following example demonstrates how to populate an <xref:System.Windows.Controls.ItemsControl> by using the <xref:System.Windows.Controls.ItemsControl.Items%2A> property.</span></span> <span data-ttu-id="9c0e7-142">이 예제에서는 다음과 같은 다양 한 유형의 항목을 추가 합니다 <xref:System.Windows.Controls.ListBox>:</span><span class="sxs-lookup"><span data-stu-id="9c0e7-142">The example adds the following different types of items to the <xref:System.Windows.Controls.ListBox>:</span></span>  
  
-   <span data-ttu-id="9c0e7-143">문자열</span><span class="sxs-lookup"><span data-stu-id="9c0e7-143">A string.</span></span>  
  
-   <span data-ttu-id="9c0e7-144"><xref:System.DateTime> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-144">A <xref:System.DateTime> object.</span></span>  
  
-   <span data-ttu-id="9c0e7-145"><xref:System.Windows.UIElement> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-145">A <xref:System.Windows.UIElement> object.</span></span>  
  
-   <span data-ttu-id="9c0e7-146">A <xref:System.Windows.Controls.Panel> 기타를 포함 하는 컨트롤 <xref:System.Windows.UIElement> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-146">A <xref:System.Windows.Controls.Panel> control that contains other <xref:System.Windows.UIElement> objects.</span></span>  
  
 [!code-xaml[ControlContentOverviewSnippets#3](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlContentOverviewSnippets/CSharp/Window1.xaml#3)]  
  
 [!code-csharp[ControlContentOverviewSnippets#4](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlContentOverviewSnippets/CSharp/Window1.xaml.cs#4)]
 [!code-vb[ControlContentOverviewSnippets#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ControlContentOverviewSnippets/VisualBasic/Window1.xaml.vb#4)]  
  
 <span data-ttu-id="9c0e7-147">다음 그림에 표시 된 <xref:System.Windows.Controls.ListBox> 이전 예에서 만든 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-147">The following illustration shows the <xref:System.Windows.Controls.ListBox> created in the previous example.</span></span>  
  
 <span data-ttu-id="9c0e7-148">![네 형식의 콘텐츠가 있는 ListBox](~/add/media/controlcontentmodellistbox2.PNG "네 형식의 콘텐츠가 있는 ListBox")</span><span class="sxs-lookup"><span data-stu-id="9c0e7-148">![ListBox with four types of content](~/add/media/controlcontentmodellistbox2.PNG "ListBox with four types of content")</span></span>  
  
 <span data-ttu-id="9c0e7-149">다음 예제에서는 다양 한 스타일 지정 및에서 제공 하는 템플릿 관련 속성을 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.ItemsControl>합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-149">The following example illustrates how to use the different styling and templating-related properties that are provided by the <xref:System.Windows.Controls.ItemsControl>.</span></span> <span data-ttu-id="9c0e7-150">합니다 <xref:System.Windows.Controls.ItemsControl> 이 예제에서 컬렉션에 바인딩된 `Task` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-150">The <xref:System.Windows.Controls.ItemsControl> in this example is bound to a collection of `Task` objects.</span></span> <span data-ttu-id="9c0e7-151">설명을 위해 이 예제의 스타일 및 템플릿은 모두 인라인으로 선언됩니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-151">For demonstration purposes, the styles and templates in this example are all declared inline.</span></span>  
  
 [!code-xaml[DataTemplatingIntro_snip#ItemsControlProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#itemscontrolproperties)]  
  
 <span data-ttu-id="9c0e7-152">다음 그림은 렌더링 될 때 예제의 스크린샷입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-152">The following illustration is a screenshot of the example when it is rendered.</span></span>  
  
 <span data-ttu-id="9c0e7-153">![ItemsControl 예제 스크린 샷](~/add/media/databinding-itemscontrolproperties.png "ItemsControl 예제 스크린 샷")</span><span class="sxs-lookup"><span data-stu-id="9c0e7-153">![ItemsControl example screenshot](~/add/media/databinding-itemscontrolproperties.png "ItemsControl example screenshot")</span></span>  
  
 <span data-ttu-id="9c0e7-154">다른 두 스타일 관련 속성을 <xref:System.Windows.Controls.ItemsControl> 다음은 표시 되지 않습니다 하 <xref:System.Windows.Controls.ItemsControl.GroupStyle%2A> 및 <xref:System.Windows.Controls.ItemsControl.GroupStyleSelector%2A>.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-154">Two other style-related properties of the <xref:System.Windows.Controls.ItemsControl> that are not shown here are <xref:System.Windows.Controls.ItemsControl.GroupStyle%2A> and <xref:System.Windows.Controls.ItemsControl.GroupStyleSelector%2A>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.ItemCollection" />
    <altmember cref="T:System.Windows.Controls.ItemContainerGenerator" />
    <altmember cref="T:System.Windows.Controls.ItemsPresenter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ItemsControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ItemsControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-155">
            <see cref="T:System.Windows.Controls.ItemsControl" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-155">Initializes a new instance of the <see cref="T:System.Windows.Controls.ItemsControl" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.FrameworkElement.EndInit" />
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="protected virtual void AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddChild (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddChild(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddChild : obj -&gt; unit&#xA;override this.AddChild : obj -&gt; unit" Usage="itemsControl.AddChild value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9c0e7-156">자식으로 추가할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-156">The object to add as a child.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0e7-157">지정된 개체를 <see cref="T:System.Windows.Controls.ItemsControl" /> 개체의 자식으로 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-157">Adds the specified object as the child of the <see cref="T:System.Windows.Controls.ItemsControl" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddText">
      <MemberSignature Language="C#" Value="protected virtual void AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member AddText : string -&gt; unit&#xA;override this.AddText : string -&gt; unit" Usage="itemsControl.AddText text" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="9c0e7-158">추가할 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-158">The string to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0e7-159">지정된 텍스트 문자열을 <see cref="T:System.Windows.Controls.ItemsControl" /> 개체에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-159">Adds the specified text string to the <see cref="T:System.Windows.Controls.ItemsControl" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternationCount">
      <MemberSignature Language="C#" Value="public int AlternationCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AlternationCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemsControl.AlternationCount" />
      <MemberSignature Language="VB.NET" Value="Public Property AlternationCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AlternationCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AlternationCount : int with get, set" Usage="System.Windows.Controls.ItemsControl.AlternationCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-160">교대로 반복되는 컨테이너가 고유한 모양을 갖도록 하는 <see cref="T:System.Windows.Controls.ItemsControl" />에 있는 교대로 반복되는 항목 컨테이너의 수를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-160">Gets or sets the number of alternating item containers in the <see cref="T:System.Windows.Controls.ItemsControl" />, which enables alternating containers to have a unique appearance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0e7-161">
            <see cref="T:System.Windows.Controls.ItemsControl" />에 있는 교대로 반복되는 항목 컨테이너의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-161">The number of alternating item containers in the <see cref="T:System.Windows.Controls.ItemsControl" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c0e7-162">합니다 <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> 및 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> 속성을 사용 하면 두 개 이상의 교대로 반복 되는 항목 컨테이너에 대 한 모양을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-162">The <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> and <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> properties enable you to specify the appearance for two or more alternating item containers.</span></span> <span data-ttu-id="9c0e7-163">예를 들어, 모든 세 번째 항목에 대해 교대로 반복 되는 배경 색을 지정할 수 있습니다는 <xref:System.Windows.Controls.ItemsControl>합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-163">For example, you can specify alternating background colors for every third item in an <xref:System.Windows.Controls.ItemsControl>.</span></span>  <span data-ttu-id="9c0e7-164"><xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> 각 항목 컨테이너에 할당 되는 <xref:System.Windows.Controls.ItemsControl>합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-164">The <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> is assigned to each item container in the <xref:System.Windows.Controls.ItemsControl>.</span></span>  <span data-ttu-id="9c0e7-165"><xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> 0에서 시작 될 때까지 증가, <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> 1이 고, 한 다음 다시 0에서 뺀 값입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-165"><xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> begins at 0, increments until it is <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> minus 1, and then restarts at 0.</span></span> <span data-ttu-id="9c0e7-166">예를 들어, 경우 <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> 이 3이 고에 7 개의 항목이 있는 <xref:System.Windows.Controls.ItemsControl>, 다음 표에서 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> 각 항목에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-166">For example, if <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> is 3 and there are seven items in the <xref:System.Windows.Controls.ItemsControl>, the following table lists the <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> for each item.</span></span>  
  
|<span data-ttu-id="9c0e7-167">항목의 위치는 <xref:System.Windows.Controls.ItemsControl></span><span class="sxs-lookup"><span data-stu-id="9c0e7-167">Position of Item in the <xref:System.Windows.Controls.ItemsControl></span></span>|<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>|  
|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|<span data-ttu-id="9c0e7-168">1</span><span class="sxs-lookup"><span data-stu-id="9c0e7-168">1</span></span>|<span data-ttu-id="9c0e7-169">0</span><span class="sxs-lookup"><span data-stu-id="9c0e7-169">0</span></span>|  
|<span data-ttu-id="9c0e7-170">2</span><span class="sxs-lookup"><span data-stu-id="9c0e7-170">2</span></span>|<span data-ttu-id="9c0e7-171">1</span><span class="sxs-lookup"><span data-stu-id="9c0e7-171">1</span></span>|  
|<span data-ttu-id="9c0e7-172">3</span><span class="sxs-lookup"><span data-stu-id="9c0e7-172">3</span></span>|<span data-ttu-id="9c0e7-173">2</span><span class="sxs-lookup"><span data-stu-id="9c0e7-173">2</span></span>|  
|<span data-ttu-id="9c0e7-174">4</span><span class="sxs-lookup"><span data-stu-id="9c0e7-174">4</span></span>|<span data-ttu-id="9c0e7-175">0</span><span class="sxs-lookup"><span data-stu-id="9c0e7-175">0</span></span>|  
|<span data-ttu-id="9c0e7-176">5</span><span class="sxs-lookup"><span data-stu-id="9c0e7-176">5</span></span>|<span data-ttu-id="9c0e7-177">1</span><span class="sxs-lookup"><span data-stu-id="9c0e7-177">1</span></span>|  
|<span data-ttu-id="9c0e7-178">6</span><span class="sxs-lookup"><span data-stu-id="9c0e7-178">6</span></span>|<span data-ttu-id="9c0e7-179">2</span><span class="sxs-lookup"><span data-stu-id="9c0e7-179">2</span></span>|  
|<span data-ttu-id="9c0e7-180">7</span><span class="sxs-lookup"><span data-stu-id="9c0e7-180">7</span></span>|<span data-ttu-id="9c0e7-181">0</span><span class="sxs-lookup"><span data-stu-id="9c0e7-181">0</span></span>|  
  
 <span data-ttu-id="9c0e7-182">교대로 반복 되는 항목 컨테이너에 대해 다른 모양을 지정 하 여 여러 가지가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-182">There are several methods you can use to specify different appearances for the alternating item containers.</span></span> <span data-ttu-id="9c0e7-183">한 가지 방법은 항목 컨테이너의 속성에 바인딩하는 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-183">One method is to bind properties of the items container to the <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="9c0e7-184">사용할 수 있습니다는 <xref:System.Windows.Controls.AlternationConverter> 특정 된 항목 컨테이너에 적용 되어야 하는 값을 지정 하려면 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-184">You can then use an <xref:System.Windows.Controls.AlternationConverter> to specify which value should be applied to the item container that has a certain <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> value.</span></span> <span data-ttu-id="9c0e7-185">값에 따라 항목 컨테이너의 속성의 값을 변경 하려면 트리거를 사용할 수도 있습니다는 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-185">You can also use triggers to change the value of an item container's property depending on the value of its <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c0e7-186">다음 예제에서는 지정 된 <xref:System.Windows.Controls.ListBox> (에서 상속 하는 <xref:System.Windows.Controls.ItemsControl>) 교대로 반복 되는 항목 컨테이너에 (유형을 <xref:System.Windows.Controls.ListBoxItem>) 다른 배경 및 전경 각각에 대해 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-186">The following example specifies that the <xref:System.Windows.Controls.ListBox> (which inherits from <xref:System.Windows.Controls.ItemsControl>) has alternating item containers (which are of type <xref:System.Windows.Controls.ListBoxItem>) and specifies a different background and foreground for each one.</span></span>  <span data-ttu-id="9c0e7-187">예제는 <xref:System.Windows.Controls.Control.Background%2A> 및 <xref:System.Windows.Controls.Control.Foreground%2A> 속성을 합니다 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> 제공는 <xref:System.Windows.Controls.AlternationConverter> 각 속성에 대 한.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-187">The example binds the <xref:System.Windows.Controls.Control.Background%2A> and <xref:System.Windows.Controls.Control.Foreground%2A> properties to the <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> and provides an <xref:System.Windows.Controls.AlternationConverter> for each property.</span></span>  
  
 [!code-xaml[AlternationIndexSnippets#2](~/samples/snippets/csharp/VS_Snippets_Wpf/AlternationIndexSnippets/CS/Window1.xaml#2)]  
  
 <span data-ttu-id="9c0e7-188">다음 예제에서는 이전 예와 동일한 작업을 사용 하 여 수행 <xref:System.Windows.Trigger> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-188">The following example does the same as the previous example by using <xref:System.Windows.Trigger> objects.</span></span>  
  
 [!code-xaml[AlternationIndexSnippets#1](~/samples/snippets/csharp/VS_Snippets_Wpf/AlternationIndexSnippets/CS/Window1.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternationCountProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AlternationCountProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AlternationCountProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ItemsControl.AlternationCountProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AlternationCountProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AlternationCountProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AlternationCountProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ItemsControl.AlternationCountProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-189">
            <see cref="P:System.Windows.Controls.ItemsControl.AlternationCount" /> 종속성 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-189">Identifies the <see cref="P:System.Windows.Controls.ItemsControl.AlternationCount" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternationIndex">
      <MemberSignature Language="C#" Value="see GetAlternationIndex, and SetAlternationIndex" />
      <MemberSignature Language="ILAsm" Value="see GetAlternationIndex, and SetAlternationIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemsControl.AlternationIndex" />
      <MemberSignature Language="VB.NET" Value="see GetAlternationIndex, and SetAlternationIndex" />
      <MemberSignature Language="F#" Value="see GetAlternationIndex, and SetAlternationIndex" Usage="see GetAlternationIndex, and SetAlternationIndex" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-190">교대로 반복되는 항목 컨테이너가 사용되는 경우 항목 컨테이너의 할당된 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-190">Gets the assigned value of the item container when alternating item containers are used.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c0e7-191">합니다 <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> 및 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> 속성을 사용 하면 두 개 이상의 교대로 반복 되는 항목 컨테이너에 대 한 모양을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-191">The <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> and <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> properties enable you to specify the appearance for two or more alternating item containers.</span></span> <span data-ttu-id="9c0e7-192">예를 들어, 모든 세 번째 항목에 대해 교대로 반복 되는 배경 색을 지정할 수 있습니다는 <xref:System.Windows.Controls.ItemsControl>합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-192">For example, you can specify alternating background colors for every third item in an <xref:System.Windows.Controls.ItemsControl>.</span></span>  <span data-ttu-id="9c0e7-193"><xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> 각 항목 컨테이너에 할당 되는 <xref:System.Windows.Controls.ItemsControl>합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-193">The <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> is assigned to each item container in the <xref:System.Windows.Controls.ItemsControl>.</span></span>  <span data-ttu-id="9c0e7-194"><xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> 0에서 시작 될 때까지 증가, <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> 1이 고, 한 다음 다시 0에서 뺀 값입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-194"><xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> begins at 0, increments until it is <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> minus 1, and then restarts at 0.</span></span> <span data-ttu-id="9c0e7-195">예를 들어, 경우 <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> 이 3이 고에 7 개의 항목이 있는 <xref:System.Windows.Controls.ItemsControl>, 다음 표에서 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> 각 항목에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-195">For example, if <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> is 3 and there are seven items in the <xref:System.Windows.Controls.ItemsControl>, the following table lists the <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> for each item.</span></span>  
  
|<span data-ttu-id="9c0e7-196">항목의 위치는 <xref:System.Windows.Controls.ItemsControl></span><span class="sxs-lookup"><span data-stu-id="9c0e7-196">Position of Item in the <xref:System.Windows.Controls.ItemsControl></span></span>|<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>|  
|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|<span data-ttu-id="9c0e7-197">1</span><span class="sxs-lookup"><span data-stu-id="9c0e7-197">1</span></span>|<span data-ttu-id="9c0e7-198">0</span><span class="sxs-lookup"><span data-stu-id="9c0e7-198">0</span></span>|  
|<span data-ttu-id="9c0e7-199">2</span><span class="sxs-lookup"><span data-stu-id="9c0e7-199">2</span></span>|<span data-ttu-id="9c0e7-200">1</span><span class="sxs-lookup"><span data-stu-id="9c0e7-200">1</span></span>|  
|<span data-ttu-id="9c0e7-201">3</span><span class="sxs-lookup"><span data-stu-id="9c0e7-201">3</span></span>|<span data-ttu-id="9c0e7-202">2</span><span class="sxs-lookup"><span data-stu-id="9c0e7-202">2</span></span>|  
|<span data-ttu-id="9c0e7-203">4</span><span class="sxs-lookup"><span data-stu-id="9c0e7-203">4</span></span>|<span data-ttu-id="9c0e7-204">0</span><span class="sxs-lookup"><span data-stu-id="9c0e7-204">0</span></span>|  
|<span data-ttu-id="9c0e7-205">5</span><span class="sxs-lookup"><span data-stu-id="9c0e7-205">5</span></span>|<span data-ttu-id="9c0e7-206">1</span><span class="sxs-lookup"><span data-stu-id="9c0e7-206">1</span></span>|  
|<span data-ttu-id="9c0e7-207">6</span><span class="sxs-lookup"><span data-stu-id="9c0e7-207">6</span></span>|<span data-ttu-id="9c0e7-208">2</span><span class="sxs-lookup"><span data-stu-id="9c0e7-208">2</span></span>|  
|<span data-ttu-id="9c0e7-209">7</span><span class="sxs-lookup"><span data-stu-id="9c0e7-209">7</span></span>|<span data-ttu-id="9c0e7-210">0</span><span class="sxs-lookup"><span data-stu-id="9c0e7-210">0</span></span>|  
  
 <span data-ttu-id="9c0e7-211">교대로 반복 되는 항목 컨테이너에 대해 다른 모양을 지정 하 여 여러 가지가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-211">There are several methods you can use to specify different appearances for the alternating item containers.</span></span> <span data-ttu-id="9c0e7-212">한 가지 방법은 항목 컨테이너의 속성에 바인딩하는 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-212">One method is to bind properties of the items container to the <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="9c0e7-213">사용할 수 있습니다는 <xref:System.Windows.Controls.AlternationConverter> 특정 된 항목 컨테이너에 적용 되어야 하는 값을 지정 하려면 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-213">You can then use an <xref:System.Windows.Controls.AlternationConverter> to specify which value should be applied to the item container that has a certain <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> value.</span></span> <span data-ttu-id="9c0e7-214">값에 따라 항목 컨테이너의 속성의 값을 변경 하려면 트리거를 사용할 수도 있습니다는 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-214">You can also use triggers to change the value of an item container's property depending on the value of its <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c0e7-215">다음 예제에서는 지정 된 <xref:System.Windows.Controls.ListBox> (에서 상속 하는 <xref:System.Windows.Controls.ItemsControl>) 교대로 반복 되는 항목 컨테이너에 (유형을 <xref:System.Windows.Controls.ListBoxItem>) 다른 배경 및 전경 각각에 대해 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-215">The following example specifies that the <xref:System.Windows.Controls.ListBox> (which inherits from <xref:System.Windows.Controls.ItemsControl>) has alternating item containers (which are of type <xref:System.Windows.Controls.ListBoxItem>) and specifies a different background and foreground for each one.</span></span>  <span data-ttu-id="9c0e7-216">예제는 <xref:System.Windows.Controls.Control.Background%2A> 및 <xref:System.Windows.Controls.Control.Foreground%2A> 속성을 합니다 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> 제공는 <xref:System.Windows.Controls.AlternationConverter> 각 속성에 대 한.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-216">The example binds the <xref:System.Windows.Controls.Control.Background%2A> and <xref:System.Windows.Controls.Control.Foreground%2A> properties to the <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> and provides an <xref:System.Windows.Controls.AlternationConverter> for each property.</span></span>  
  
 [!code-xml[AlternationIndexSnippets#2](~/samples/snippets/csharp/VS_Snippets_Wpf/AlternationIndexSnippets/CS/Window1.xaml#2)]  
  
 <span data-ttu-id="9c0e7-217">다음 예제에서는 이전 예와 동일한 작업을 사용 하 여 수행 <xref:System.Windows.Trigger> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-217">The following example does the same as the previous example by using <xref:System.Windows.Trigger> objects.</span></span>  
  
 [!code-xml[AlternationIndexSnippets#1](~/samples/snippets/csharp/VS_Snippets_Wpf/AlternationIndexSnippets/CS/Window1.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternationIndexProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AlternationIndexProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AlternationIndexProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ItemsControl.AlternationIndexProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AlternationIndexProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AlternationIndexProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AlternationIndexProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ItemsControl.AlternationIndexProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-218">
            <see cref="P:System.Windows.Controls.ItemsControl.AlternationIndex" /> 종속성 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-218">Identifies the <see cref="P:System.Windows.Controls.ItemsControl.AlternationIndex" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public override void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void BeginInit();" />
      <MemberSignature Language="F#" Value="override this.BeginInit : unit -&gt; unit" Usage="itemsControl.BeginInit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-219">
            <see cref="T:System.Windows.Controls.ItemsControl" /> 개체의 초기화가 시작됨을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-219">Indicates that the initialization of the <see cref="T:System.Windows.Controls.ItemsControl" /> object is about to start.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.FrameworkElement.BeginInit" />
      </Docs>
    </Member>
    <Member MemberName="ClearContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected virtual void ClearContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ClearContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ClearContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member ClearContainerForItemOverride : System.Windows.DependencyObject * obj -&gt; unit&#xA;override this.ClearContainerForItemOverride : System.Windows.DependencyObject * obj -&gt; unit" Usage="itemsControl.ClearContainerForItemOverride (element, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="9c0e7-220">컨테이너 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-220">The container element.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="9c0e7-221">항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-221">The item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0e7-222">파생 클래스에서 재정의되는 경우 실행 취소가 <see cref="M:System.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" /> 메서드에 영향을 줍니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-222">When overridden in a derived class, undoes the effects of the <see cref="M:System.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c0e7-223">기본 구현에서는 아무 작업도 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-223">The base implementation does nothing.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.ItemsControl.ItemContainerGenerator" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ContainerFromElement">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-224">지정된 컨테이너 요소를 소유하는 현재 <see cref="T:System.Windows.Controls.ItemsControl" />에 속하는 컨테이너를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-224">Returns the container that belongs to the current <see cref="T:System.Windows.Controls.ItemsControl" /> that owns the given container element.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ContainerFromElement">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject ContainerFromElement (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.DependencyObject ContainerFromElement(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.ContainerFromElement(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainerFromElement (element As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::DependencyObject ^ ContainerFromElement(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="member this.ContainerFromElement : System.Windows.DependencyObject -&gt; System.Windows.DependencyObject" Usage="itemsControl.ContainerFromElement element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="9c0e7-225">컨테이너를 반환할 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-225">The element to return the container for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0e7-226">지정된 요소를 소유하는 현재 <see cref="T:System.Windows.Controls.ItemsControl" />에 속하는 컨테이너를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-226">Returns the container that belongs to the current <see cref="T:System.Windows.Controls.ItemsControl" /> that owns the given element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9c0e7-227">지정된 요소를 소유하는 <see cref="T:System.Windows.Controls.ItemsControl" />에 속하는 컨테이너이거나, 이러한 컨테이너가 없으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-227">The container that belongs to the current <see cref="T:System.Windows.Controls.ItemsControl" /> that owns the given element or <see langword="null" /> if no such container exists.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.ItemsControl.ItemContainerGenerator" />
      </Docs>
    </Member>
    <Member MemberName="ContainerFromElement">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject ContainerFromElement (System.Windows.Controls.ItemsControl itemsControl, System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject ContainerFromElement(class System.Windows.Controls.ItemsControl itemsControl, class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.ContainerFromElement(System.Windows.Controls.ItemsControl,System.Windows.DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ ContainerFromElement(System::Windows::Controls::ItemsControl ^ itemsControl, System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member ContainerFromElement : System.Windows.Controls.ItemsControl * System.Windows.DependencyObject -&gt; System.Windows.DependencyObject" Usage="System.Windows.Controls.ItemsControl.ContainerFromElement (itemsControl, element)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemsControl" Type="System.Windows.Controls.ItemsControl" />
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="itemsControl">
          <span data-ttu-id="9c0e7-228">컨테이너를 반환할 <see cref="T:System.Windows.Controls.ItemsControl" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-228">The <see cref="T:System.Windows.Controls.ItemsControl" /> to return the container for.</span>
          </span>
        </param>
        <param name="element">
          <span data-ttu-id="9c0e7-229">컨테이너를 반환할 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-229">The element to return the container for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0e7-230">지정된 컨테이너 요소를 소유하는 지정된 <see cref="T:System.Windows.Controls.ItemsControl" />에 속하는 컨테이너를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-230">Returns the container that belongs to the specified <see cref="T:System.Windows.Controls.ItemsControl" /> that owns the given container element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9c0e7-231">
            <paramref name="itemsControl" />이(가) <see langword="null" />이 아닌 경우, 지정된 요소를 소유하는 지정된 <see cref="T:System.Windows.Controls.ItemsControl" />에 속하는 컨테이너입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-231">The container that belongs to the specified <see cref="T:System.Windows.Controls.ItemsControl" /> that owns the given element, if <paramref name="itemsControl" /> is not <see langword="null" />.</span>
          </span>
          <span data-ttu-id="9c0e7-232">
            <paramref name="itemsControl" />이(가) <see langword="null" />인 경우, 모든 <see cref="T:System.Windows.Controls.ItemsControl" />에 속하는 가장 가까운 컨테이너를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-232">If <paramref name="itemsControl" /> is <see langword="null" />, returns the closest container that belongs to any <see cref="T:System.Windows.Controls.ItemsControl" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.ItemsControl.ItemContainerGenerator" />
      </Docs>
    </Member>
    <Member MemberName="DisplayMemberPath">
      <MemberSignature Language="C#" Value="public string DisplayMemberPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayMemberPath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemsControl.DisplayMemberPath" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayMemberPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayMemberPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayMemberPath : string with get, set" Usage="System.Windows.Controls.ItemsControl.DisplayMemberPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-233">개체의 시각적 표시로 사용할 소스 개체의 값에 대한 경로를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-233">Gets or sets a path to a value on the source object to serve as the visual representation of the object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0e7-234">소스 개체의 값에 대한 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-234">The path to a value on the source object.</span>
          </span>
          <span data-ttu-id="9c0e7-235">이 수 모든 경로 또는 XPath와 같은 "@Name"입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-235">This can be any path, or an XPath such as "@Name".</span>
          </span>
          <span data-ttu-id="9c0e7-236">기본값은 빈 문자열("")입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-236">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c0e7-237">이 속성은 데이터 개체를 표시 하는 방법에 설명 하는 기본 템플릿을 정의 하는 간단한 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-237">This property is a simple way to define a default template that describes how to display the data objects.</span></span>  
  
<a name="dependencyPropertyInfo_DisplayMemberPath"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="9c0e7-238">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="9c0e7-238">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9c0e7-239">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="9c0e7-239">Identifier field</span></span>|<xref:System.Windows.Controls.ItemsControl.DisplayMemberPathProperty>|  
|<span data-ttu-id="9c0e7-240">메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="9c0e7-240">Metadata properties set to `true`</span></span>|<span data-ttu-id="9c0e7-241">없음</span><span class="sxs-lookup"><span data-stu-id="9c0e7-241">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="9c0e7-242">다음 예제에서는 정적 리소스 이름이 `places` 컬렉션으로 정의 됩니다 `Place` 개체의 각 `Place` 개체에는 `CityName` 속성 및 `State` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-242">In the following example, the static resource named `places` is defined as a collection of `Place` objects, in which each `Place` object has a `CityName` property and a `State` property.</span></span> <span data-ttu-id="9c0e7-243">접두사 `src` 네임 스페이스에 매핑되는 데이터 원본 `Places` 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-243">The prefix `src` is mapped to the namespace where the data source `Places` is defined.</span></span> <span data-ttu-id="9c0e7-244">접두사 `scm` 하 고 `dat` 에 매핑되는 <xref:System.ComponentModel> 및 <xref:System.Windows.Data> 네임 스페이스를 각각.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-244">The prefixes `scm` and `dat` are mapped to the <xref:System.ComponentModel> and <xref:System.Windows.Data> namespaces, respectively.</span></span>  
  
 <span data-ttu-id="9c0e7-245">다음 예제에서는 도시 이름별으로 정렬 되 고 상태별으로 그룹화 된 데이터 컬렉션의 뷰를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-245">The following example creates a view of the data collection that is sorted by the city name and grouped by the state.</span></span>  
  
 [!code-xaml[CollectionViewSource#1](~/samples/snippets/csharp/VS_Snippets_Wpf/CollectionViewSource/CS/window1.xaml#1)]  
  
 <span data-ttu-id="9c0e7-246">뷰는 다음 예제와 같이 바인딩 소스를 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-246">The view can be a binding source, as in the following example.</span></span> <span data-ttu-id="9c0e7-247">지정 된 때문 <xref:System.Windows.Controls.ItemsControl.DisplayMemberPath%2A>각각`Place` 개체와 함께 표시 됩니다 해당 `CityName` 값입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-247">Because of the specified <xref:System.Windows.Controls.ItemsControl.DisplayMemberPath%2A>, each`Place` object is shown with its `CityName` value.</span></span> <span data-ttu-id="9c0e7-248">하는 경우 <xref:System.Windows.Controls.ItemsControl.DisplayMemberPath%2A> 지정 하지 않으면 되며 없습니다 <xref:System.Windows.DataTemplate>, 그런 다음 <xref:System.Windows.Controls.ListBox> (이 예제의 경우 않고) 기본 컬렉션의 각 개체의 문자열 표현을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-248">If <xref:System.Windows.Controls.ItemsControl.DisplayMemberPath%2A> is not specified and there is no <xref:System.Windows.DataTemplate>, then the <xref:System.Windows.Controls.ListBox> displays a string representation of each object in the underlying collection (in this case, "SDKSample.Place").</span></span>  
  
 [!code-xaml[CollectionViewSource#2](~/samples/snippets/csharp/VS_Snippets_Wpf/CollectionViewSource/CS/window1.xaml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="DisplayMemberPathProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DisplayMemberPathProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DisplayMemberPathProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ItemsControl.DisplayMemberPathProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DisplayMemberPathProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DisplayMemberPathProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DisplayMemberPathProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ItemsControl.DisplayMemberPathProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-249">
            <see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath" /> 종속성 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-249">Identifies the <see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public override void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndInit();" />
      <MemberSignature Language="F#" Value="override this.EndInit : unit -&gt; unit" Usage="itemsControl.EndInit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-250">
            <see cref="T:System.Windows.Controls.ItemsControl" /> 개체의 초기화가 완료되었음을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-250">Indicates that the initialization of the <see cref="T:System.Windows.Controls.ItemsControl" /> object is complete.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAlternationIndex">
      <MemberSignature Language="C#" Value="public static int GetAlternationIndex (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetAlternationIndex(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.GetAlternationIndex(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAlternationIndex (element As DependencyObject) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetAlternationIndex(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetAlternationIndex : System.Windows.DependencyObject -&gt; int" Usage="System.Windows.Controls.ItemsControl.GetAlternationIndex element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="9c0e7-251">
            <see cref="P:System.Windows.Controls.ItemsControl.AlternationIndex" />를 가져올 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-251">The object from which to get the <see cref="P:System.Windows.Controls.ItemsControl.AlternationIndex" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0e7-252">지정된 개체의 <see cref="P:System.Windows.Controls.ItemsControl.AlternationIndex" />를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-252">Gets the <see cref="P:System.Windows.Controls.ItemsControl.AlternationIndex" /> for the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9c0e7-253">
            <see cref="P:System.Windows.Controls.ItemsControl.AlternationIndex" />의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-253">The value of the <see cref="P:System.Windows.Controls.ItemsControl.AlternationIndex" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.DependencyObject GetContainerForItemOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.DependencyObject GetContainerForItemOverride() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.GetContainerForItemOverride" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetContainerForItemOverride () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::DependencyObject ^ GetContainerForItemOverride();" />
      <MemberSignature Language="F#" Value="abstract member GetContainerForItemOverride : unit -&gt; System.Windows.DependencyObject&#xA;override this.GetContainerForItemOverride : unit -&gt; System.Windows.DependencyObject" Usage="itemsControl.GetContainerForItemOverride " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-254">지정된 항목을 표시하는 데 사용되는 요소를 만들거나 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-254">Creates or identifies the element that is used to display the given item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9c0e7-255">지정된 항목을 표시하는 데 사용되는 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-255">The element that is used to display the given item.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.ItemsControl.ItemContainerGenerator" />
      </Docs>
    </Member>
    <Member MemberName="GetItemsOwner">
      <MemberSignature Language="C#" Value="public static System.Windows.Controls.ItemsControl GetItemsOwner (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Controls.ItemsControl GetItemsOwner(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.GetItemsOwner(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetItemsOwner (element As DependencyObject) As ItemsControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Controls::ItemsControl ^ GetItemsOwner(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetItemsOwner : System.Windows.DependencyObject -&gt; System.Windows.Controls.ItemsControl" Usage="System.Windows.Controls.ItemsControl.GetItemsOwner element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ItemsControl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="9c0e7-256">호스트 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-256">The host element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0e7-257">지정된 요소가 항목을 호스팅하는 <see cref="T:System.Windows.Controls.ItemsControl" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-257">Returns the <see cref="T:System.Windows.Controls.ItemsControl" /> that the specified element hosts items for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9c0e7-258">지정된 요소가 항목을 호스팅하는 <see cref="T:System.Windows.Controls.ItemsControl" />이거나 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-258">The <see cref="T:System.Windows.Controls.ItemsControl" /> that the specified element hosts items for, or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c0e7-259">경우 <xref:System.Windows.Controls.Panel.IsItemsHost%2A> 로 설정 되어 `true` 에 `element` 스타일의 경우 `element` 에서 만든 패널를 <xref:System.Windows.Controls.ItemsPresenter> 에 대 한는 <xref:System.Windows.Controls.ItemsControl>, <xref:System.Windows.Controls.ItemsControl> 반환 되 고, 그렇지 않으면 `null`.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-259">If <xref:System.Windows.Controls.Panel.IsItemsHost%2A> is set to `true` on `element` in a style or if `element` is a panel created by the <xref:System.Windows.Controls.ItemsPresenter> for an <xref:System.Windows.Controls.ItemsControl>, the <xref:System.Windows.Controls.ItemsControl> is returned; otherwise, `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupStyle">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ObservableCollection&lt;System.Windows.Controls.GroupStyle&gt; GroupStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ObservableCollection`1&lt;class System.Windows.Controls.GroupStyle&gt; GroupStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemsControl.GroupStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GroupStyle As ObservableCollection(Of GroupStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ObservableCollection&lt;System::Windows::Controls::GroupStyle ^&gt; ^ GroupStyle { System::Collections::ObjectModel::ObservableCollection&lt;System::Windows::Controls::GroupStyle ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GroupStyle : System.Collections.ObjectModel.ObservableCollection&lt;System.Windows.Controls.GroupStyle&gt;" Usage="System.Windows.Controls.ItemsControl.GroupStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ObservableCollection&lt;System.Windows.Controls.GroupStyle&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-260">각 그룹 수준의 모양을 정의하는 <see cref="T:System.Windows.Controls.GroupStyle" /> 개체의 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-260">Gets a collection of <see cref="T:System.Windows.Controls.GroupStyle" /> objects that define the appearance of each level of groups.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0e7-261">각 그룹 수준의 모양을 정의하는 <see cref="T:System.Windows.Controls.GroupStyle" /> 개체의 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-261">A collection of <see cref="T:System.Windows.Controls.GroupStyle" /> objects that define the appearance of each level of groups.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c0e7-262">인덱스 1에 있는 항목 다음에 설명 수준 등, 인덱스 0에 있는 엔트리 최상위 그룹을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-262">The entry at index 0 describes the top-level groups, the entry at index 1 describes the next level, and so on.</span></span> <span data-ttu-id="9c0e7-263">컬렉션에 있는 항목 보다 더 많은 수준의 그룹화의 경우 마지막 항목 추가 수준에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-263">If there are more levels of grouping than entries in the collection, the last entry is used for the extra levels.</span></span>  
  
<a name="xamlPropertyElementUsage_GroupStyle"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="9c0e7-264">XAML 속성 요소 사용</span><span class="sxs-lookup"><span data-stu-id="9c0e7-264">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.GroupStyle>  
    OneOrMoreGroupStyleObjects  
  </object.GroupStyle>  
</object>  
  
```  
  
<a name="xamlValues_GroupStyle"></a>   
## <a name="xaml-values"></a><span data-ttu-id="9c0e7-265">XAML 값</span><span class="sxs-lookup"><span data-stu-id="9c0e7-265">XAML Values</span></span>  
 <span data-ttu-id="9c0e7-266">*OneOrMoreGroupStyleObjects*</span><span class="sxs-lookup"><span data-stu-id="9c0e7-266">*OneOrMoreGroupStyleObjects*</span></span>  
 <span data-ttu-id="9c0e7-267">하나 이상의 <xref:System.Windows.Controls.GroupStyle> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-267">One or more <xref:System.Windows.Controls.GroupStyle> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c0e7-268">다음 예제에 나온을 <xref:System.Windows.Controls.ItemsControl> 에 바인딩되는 <xref:System.Windows.Data.XmlDataProvider> 콘텐츠와 코드 숨김 논리를 추가 하 고 그룹화 제거를 포함 하는.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-268">The following examples show an <xref:System.Windows.Controls.ItemsControl> that is bound to an <xref:System.Windows.Data.XmlDataProvider> and the code-behind content that contains the logic to add and remove grouping.</span></span> <span data-ttu-id="9c0e7-269">확인란은 확인 하는 경우,의 콘텐츠를 <xref:System.Windows.Controls.ItemsControl> 그룹화 됩니다는 `Type` 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-269">When the check box is checked, the content of the <xref:System.Windows.Controls.ItemsControl> is grouped by the `Type` attribute.</span></span>  
  
 <span data-ttu-id="9c0e7-270">형식의 각 그룹은 <xref:System.Windows.Data.CollectionViewGroup>합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-270">Each group is of type <xref:System.Windows.Data.CollectionViewGroup>.</span></span> <span data-ttu-id="9c0e7-271"><xref:System.Windows.Controls.GroupStyle> <xref:System.Windows.Controls.GroupStyle.HeaderTemplate%2A> 으로 표시 되도록 지정을 <xref:System.Windows.Controls.TextBlock> 표시 하는 <xref:System.Windows.Data.CollectionViewGroup.Name%2A> 각 그룹입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-271">The <xref:System.Windows.Controls.GroupStyle> <xref:System.Windows.Controls.GroupStyle.HeaderTemplate%2A> is specified so that it appears as a <xref:System.Windows.Controls.TextBlock> that displays the <xref:System.Windows.Data.CollectionViewGroup.Name%2A> of each the group.</span></span> <span data-ttu-id="9c0e7-272">이 경우에 <xref:System.Windows.Data.CollectionViewGroup.Name%2A> 중 하나는 `Work` 또는 `Home`합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-272">In this case, the <xref:System.Windows.Data.CollectionViewGroup.Name%2A> is either `Work` or `Home`.</span></span>  
  
 [!code-xaml[GroupingSample#XAML](~/samples/snippets/csharp/VS_Snippets_Wpf/GroupingSample/CSharp/Window1.xaml#xaml)]  
  
 [!code-csharp[GroupingSample#Code](~/samples/snippets/csharp/VS_Snippets_Wpf/GroupingSample/CSharp/Window1.xaml.cs#code)]
 [!code-vb[GroupingSample#Code](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GroupingSample/visualbasic/window1.xaml.vb#code)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.ItemsControl.GroupStyleSelector" />
      </Docs>
    </Member>
    <Member MemberName="GroupStyleSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.GroupStyleSelector GroupStyleSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.GroupStyleSelector GroupStyleSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemsControl.GroupStyleSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property GroupStyleSelector As GroupStyleSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::GroupStyleSelector ^ GroupStyleSelector { System::Windows::Controls::GroupStyleSelector ^ get(); void set(System::Windows::Controls::GroupStyleSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GroupStyleSelector : System.Windows.Controls.GroupStyleSelector with get, set" Usage="System.Windows.Controls.ItemsControl.GroupStyleSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.GroupStyleSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-273">컬렉션의 각 그룹에 적용할 <see cref="T:System.Windows.Controls.GroupStyle" />을 선택하는 사용자 지정 논리를 제공하는 메서드를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-273">Gets or sets a method that enables you to provide custom selection logic for a <see cref="T:System.Windows.Controls.GroupStyle" /> to apply to each group in a collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0e7-274">컬렉션의 각 그룹에 적용할 <see cref="T:System.Windows.Controls.GroupStyle" />을 선택하는 사용자 지정 논리를 제공하는 메서드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-274">A method that enables you to provide custom selection logic for a <see cref="T:System.Windows.Controls.GroupStyle" /> to apply to each group in a collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_GroupStyleSelector"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="9c0e7-275">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="9c0e7-275">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9c0e7-276">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="9c0e7-276">Identifier field</span></span>|<xref:System.Windows.Controls.ItemsControl.GroupStyleSelectorProperty>|  
|<span data-ttu-id="9c0e7-277">메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="9c0e7-277">Metadata properties set to `true`</span></span>|<span data-ttu-id="9c0e7-278">없음</span><span class="sxs-lookup"><span data-stu-id="9c0e7-278">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.PropertyGroupDescription" />
      </Docs>
    </Member>
    <Member MemberName="GroupStyleSelectorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty GroupStyleSelectorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty GroupStyleSelectorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ItemsControl.GroupStyleSelectorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GroupStyleSelectorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ GroupStyleSelectorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable GroupStyleSelectorProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ItemsControl.GroupStyleSelectorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-279">
            <see cref="P:System.Windows.Controls.ItemsControl.GroupStyleSelector" /> 종속성 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-279">Identifies the <see cref="P:System.Windows.Controls.ItemsControl.GroupStyleSelector" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasItems">
      <MemberSignature Language="C#" Value="public bool HasItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemsControl.HasItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasItems As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasItems { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasItems : bool" Usage="System.Windows.Controls.ItemsControl.HasItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-280">
            <see cref="T:System.Windows.Controls.ItemsControl" />에 항목이 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-280">Gets a value that indicates whether the <see cref="T:System.Windows.Controls.ItemsControl" /> contains items.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0e7-281">항목 수가 0보다 크면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-281">
              <see langword="true" /> if the items count is greater than 0; otherwise, <see langword="false" />.The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_HasItems"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="9c0e7-282">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="9c0e7-282">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9c0e7-283">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="9c0e7-283">Identifier field</span></span>|<xref:System.Windows.Controls.ItemsControl.HasItemsProperty>|  
|<span data-ttu-id="9c0e7-284">메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="9c0e7-284">Metadata properties set to `true`</span></span>|<span data-ttu-id="9c0e7-285">없음</span><span class="sxs-lookup"><span data-stu-id="9c0e7-285">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasItemsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HasItemsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HasItemsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ItemsControl.HasItemsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HasItemsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HasItemsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HasItemsProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ItemsControl.HasItemsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-286">
            <see cref="P:System.Windows.Controls.ItemsControl.HasItems" /> 종속성 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-286">Identifies the <see cref="P:System.Windows.Controls.ItemsControl.HasItems" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGrouping">
      <MemberSignature Language="C#" Value="public bool IsGrouping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGrouping" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemsControl.IsGrouping" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsGrouping As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsGrouping { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsGrouping : bool" Usage="System.Windows.Controls.ItemsControl.IsGrouping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-287">컨트롤이 그룹화를 사용하는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-287">Gets a value that indicates whether the control is using grouping.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0e7-288">컨트롤에 그룹이 사용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-288">
              <see langword="true" /> if a control is using grouping; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsGrouping"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="9c0e7-289">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="9c0e7-289">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9c0e7-290">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="9c0e7-290">Identifier field</span></span>|<xref:System.Windows.Controls.ItemsControl.IsGroupingProperty>|  
|<span data-ttu-id="9c0e7-291">메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="9c0e7-291">Metadata properties set to `true`</span></span>|<span data-ttu-id="9c0e7-292">없음</span><span class="sxs-lookup"><span data-stu-id="9c0e7-292">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGroupingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsGroupingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsGroupingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ItemsControl.IsGroupingProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsGroupingProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsGroupingProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsGroupingProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ItemsControl.IsGroupingProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-293">
            <see cref="P:System.Windows.Controls.ItemsControl.IsGrouping" /> 종속성 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-293">Identifies the <see cref="P:System.Windows.Controls.ItemsControl.IsGrouping" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItemItsOwnContainer">
      <MemberSignature Language="C#" Value="public bool IsItemItsOwnContainer (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsItemItsOwnContainer(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.IsItemItsOwnContainer(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsItemItsOwnContainer (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsItemItsOwnContainer(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="member this.IsItemItsOwnContainer : obj -&gt; bool" Usage="itemsControl.IsItemItsOwnContainer item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:MS.Internal.Controls.IGeneratorHost.IsItemItsOwnContainer(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="9c0e7-294">확인할 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-294">The item to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0e7-295">지정된 항목이 자체 컨테이너인지(또는 해당 자격이 있는지) 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-295">Determines if the specified item is (or is eligible to be) its own container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9c0e7-296">항목이 자신의 컨테이너이거나 컨테이너가 될 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-296">
              <see langword="true" /> if the item is (or is eligible to be) its own container; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c0e7-297">이 메서드는 <xref:System.Windows.Controls.ItemsControl.IsItemItsOwnContainerOverride%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-297">This method calls the <xref:System.Windows.Controls.ItemsControl.IsItemItsOwnContainerOverride%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItemItsOwnContainerOverride">
      <MemberSignature Language="C#" Value="protected virtual bool IsItemItsOwnContainerOverride (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsItemItsOwnContainerOverride(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.IsItemItsOwnContainerOverride(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsItemItsOwnContainerOverride (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsItemItsOwnContainerOverride(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member IsItemItsOwnContainerOverride : obj -&gt; bool&#xA;override this.IsItemItsOwnContainerOverride : obj -&gt; bool" Usage="itemsControl.IsItemItsOwnContainerOverride item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="9c0e7-298">확인할 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-298">The item to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0e7-299">지정된 항목이 자체 컨테이너인지(또는 해당 자격이 있는지) 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-299">Determines if the specified item is (or is eligible to be) its own container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9c0e7-300">항목이 자신의 컨테이너이거나 컨테이너가 될 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-300">
              <see langword="true" /> if the item is (or is eligible to be) its own container; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.ItemsControl.ItemContainerGenerator" />
      </Docs>
    </Member>
    <Member MemberName="IsTextSearchCaseSensitive">
      <MemberSignature Language="C#" Value="public bool IsTextSearchCaseSensitive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTextSearchCaseSensitive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemsControl.IsTextSearchCaseSensitive" />
      <MemberSignature Language="VB.NET" Value="Public Property IsTextSearchCaseSensitive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTextSearchCaseSensitive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsTextSearchCaseSensitive : bool with get, set" Usage="System.Windows.Controls.ItemsControl.IsTextSearchCaseSensitive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-301">항목을 검색할 때 대/소문자 구문이 조건인지 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-301">Gets or sets a value that indicates whether case is a condition when searching for items.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0e7-302">대/소문자를 구분하여 텍스트를 검색하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-302">
              <see langword="true" /> if text searches are case-sensitive; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c0e7-303">경우는 <xref:System.Windows.Controls.ItemsControl.IsTextSearchEnabled%2A> 속성이 `true`의 <xref:System.Windows.Controls.ItemsControl.IsTextSearchCaseSensitive%2A> 속성 경우 항목에서 선택 되었는지 여부를 결정 하는지 여부를 지정는 <xref:System.Windows.Controls.ItemsControl>합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-303">When the <xref:System.Windows.Controls.ItemsControl.IsTextSearchEnabled%2A> property is set to `true`, the <xref:System.Windows.Controls.ItemsControl.IsTextSearchCaseSensitive%2A> property specifies whether the case determines whether an item is selected in an <xref:System.Windows.Controls.ItemsControl>.</span></span> <span data-ttu-id="9c0e7-304">예를 들어 경우는 <xref:System.Windows.Controls.ItemsControl> 소문자만 다른, "ITEM" 및 "item"와 같은 첫 번째 문자열은 항상 선택, 입력의 대/소문자에 관계 없이 두 문자열을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-304">For example, if an <xref:System.Windows.Controls.ItemsControl> contain two strings that differ only in case, such as "ITEM" and "item", the first string will always be selected, regardless of the case of the input.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c0e7-305">다음 예제에서는 <xref:System.Windows.Controls.ComboBox> 문자열, "DOG", "CAT", "dog" 및 "고양이"를 포함 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-305">The following example creates a <xref:System.Windows.Controls.ComboBox> that contains the strings, "DOG", "CAT", "dog", and "cat".</span></span> <span data-ttu-id="9c0e7-306">예제는 <xref:System.Windows.Controls.ItemsControl.IsTextSearchCaseSensitive%2A> 속성을를 <xref:System.Windows.Controls.Primitives.ToggleButton.IsChecked%2A> 의 속성을 <xref:System.Windows.Controls.CheckBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-306">The example binds the <xref:System.Windows.Controls.ItemsControl.IsTextSearchCaseSensitive%2A> property to the <xref:System.Windows.Controls.Primitives.ToggleButton.IsChecked%2A> property of a <xref:System.Windows.Controls.CheckBox>.</span></span> <span data-ttu-id="9c0e7-307">확인란을 선택 하 고 사용자가 세 번째 항목에서 "dog" 하는 경우는 <xref:System.Windows.Controls.ItemsControl> 을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-307">If the check box is selected and the user types "dog", the third item in the <xref:System.Windows.Controls.ItemsControl> is selected.</span></span> <span data-ttu-id="9c0e7-308">사용자 형식 "dog" 고 확인란을 선택 취소, 대/소문자 검색 조건 없기 때문에 첫 번째 항목 선택 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-308">If the user unselects the check box and types "dog", the first item is selected because case is not a condition of the search.</span></span>  
  
 [!code-xaml[ComboBoxProps_snip#4](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxProps_snip/CS/pane1.xaml#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTextSearchCaseSensitiveProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsTextSearchCaseSensitiveProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsTextSearchCaseSensitiveProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ItemsControl.IsTextSearchCaseSensitiveProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTextSearchCaseSensitiveProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsTextSearchCaseSensitiveProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTextSearchCaseSensitiveProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ItemsControl.IsTextSearchCaseSensitiveProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-309">
            <see cref="P:System.Windows.Controls.ItemsControl.IsTextSearchCaseSensitive" /> 종속성 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-309">Identifies the <see cref="P:System.Windows.Controls.ItemsControl.IsTextSearchCaseSensitive" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTextSearchEnabled">
      <MemberSignature Language="C#" Value="public bool IsTextSearchEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTextSearchEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemsControl.IsTextSearchEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsTextSearchEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTextSearchEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsTextSearchEnabled : bool with get, set" Usage="System.Windows.Controls.ItemsControl.IsTextSearchEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-310">
            <see cref="T:System.Windows.Controls.TextSearch" /> 인스턴스에서 <see cref="T:System.Windows.Controls.ItemsControl" />가 사용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-310">Gets or sets a value that indicates whether <see cref="T:System.Windows.Controls.TextSearch" /> is enabled on the <see cref="T:System.Windows.Controls.ItemsControl" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0e7-311">
            <see langword="true" />이 사용하도록 설정되어 있으면 <see cref="T:System.Windows.Controls.TextSearch" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-311">
              <see langword="true" /> if <see cref="T:System.Windows.Controls.TextSearch" /> is enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="9c0e7-312">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-312">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsTextSearchEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="9c0e7-313">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="9c0e7-313">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9c0e7-314">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="9c0e7-314">Identifier field</span></span>|<xref:System.Windows.Controls.ItemsControl.IsTextSearchEnabledProperty>|  
|<span data-ttu-id="9c0e7-315">메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="9c0e7-315">Metadata properties set to `true`</span></span>|<span data-ttu-id="9c0e7-316">없음</span><span class="sxs-lookup"><span data-stu-id="9c0e7-316">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTextSearchEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsTextSearchEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsTextSearchEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ItemsControl.IsTextSearchEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTextSearchEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsTextSearchEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTextSearchEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ItemsControl.IsTextSearchEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-317">
            <see cref="P:System.Windows.Controls.ItemsControl.IsTextSearchEnabled" /> 종속성 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-317">Identifies the <see cref="P:System.Windows.Controls.ItemsControl.IsTextSearchEnabled" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemBindingGroup">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingGroup ItemBindingGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingGroup ItemBindingGroup" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemsControl.ItemBindingGroup" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemBindingGroup As BindingGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingGroup ^ ItemBindingGroup { System::Windows::Data::BindingGroup ^ get(); void set(System::Windows::Data::BindingGroup ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemBindingGroup : System.Windows.Data.BindingGroup with get, set" Usage="System.Windows.Controls.ItemsControl.ItemBindingGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-318">
            <see cref="T:System.Windows.Data.BindingGroup" />의 각 항목에 복사되는 <see cref="T:System.Windows.Controls.ItemsControl" />을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-318">Gets or sets the <see cref="T:System.Windows.Data.BindingGroup" /> that is copied to each item in the <see cref="T:System.Windows.Controls.ItemsControl" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0e7-319">
            <see cref="T:System.Windows.Data.BindingGroup" />의 각 항목에 복사되는 <see cref="T:System.Windows.Controls.ItemsControl" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-319">The <see cref="T:System.Windows.Data.BindingGroup" /> that is copied to each item in the <see cref="T:System.Windows.Controls.ItemsControl" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c0e7-320">설정 하는 경우는 <xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A> 속성인 각 항목 컨테이너를 가져옵니다을 <xref:System.Windows.Data.BindingGroup> 는 동일 <xref:System.Windows.Controls.ValidationRule> 개체로 <xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A>, 하지만 같은 바인딩에 데이터를 설명 하는 속성 <xref:System.Windows.Data.BindingGroup.Items%2A> 및 <xref:System.Windows.Data.BindingGroup.BindingExpressions%2A>는 각 항목에 대 한 데이터에 특정 된 <xref:System.Windows.Controls.ItemsControl>합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-320">When you set the <xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A> property, each item container gets a <xref:System.Windows.Data.BindingGroup> that has the same <xref:System.Windows.Controls.ValidationRule> objects as the <xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A>, but the properties that describe the data in the bindings, such as <xref:System.Windows.Data.BindingGroup.Items%2A> and <xref:System.Windows.Data.BindingGroup.BindingExpressions%2A>, are specific to the data for each item in the <xref:System.Windows.Controls.ItemsControl>.</span></span>  <span data-ttu-id="9c0e7-321">항목 컨테이너의 액세스 해야 <xref:System.Windows.FrameworkContentElement.BindingGroup%2A> 수행 하려면 작업 유효성 검사와 같은 데이터 및 항목에서 오류를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-321">You must access the item container's <xref:System.Windows.FrameworkContentElement.BindingGroup%2A> to perform operations such as validate the data and check for errors on an item.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c0e7-322">다음 예제에서는 여러 고객을 입력 하 고 각 고객에 게는 영업 담당자를 할당 하 라는 메시지는 응용 프로그램의 일부 이며 그런 다음 영업 담당자와 고객 동일한 지역에 속해 있는지를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-322">The following example is part of an application that prompts the user to enter multiple customers and assign a sales representative to each customer, and then checks that the sales representative and the customer belong to the same region.</span></span> <span data-ttu-id="9c0e7-323">예제에서는 합니다 <xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A> 의 <xref:System.Windows.Controls.ItemsControl> 하므로 <xref:System.Windows.Controls.ValidationRule>, `AreasMatch`, 각 항목의 유효성을 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-323">The example sets the <xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A> of the <xref:System.Windows.Controls.ItemsControl> so the <xref:System.Windows.Controls.ValidationRule>, `AreasMatch`, will validate each item.</span></span> <span data-ttu-id="9c0e7-324">예제에서는 <xref:System.Windows.Controls.Label> 유효성 검사 오류를 표시 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-324">The example also creates a <xref:System.Windows.Controls.Label> that displays validation errors.</span></span> <span data-ttu-id="9c0e7-325">있음을 합니다 <xref:System.Windows.Controls.ContentControl.Content%2A> 의 <xref:System.Windows.Controls.Label> 바인딩되는 <xref:System.Windows.Controls.ValidationError> 에서 가져오는 <xref:System.Windows.Controls.Validation.ValidationAdornerSiteForProperty?displayProperty=nameWithType> 속성.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-325">Notice that the <xref:System.Windows.Controls.ContentControl.Content%2A> of the <xref:System.Windows.Controls.Label> is bound to a <xref:System.Windows.Controls.ValidationError> that it gets from the <xref:System.Windows.Controls.Validation.ValidationAdornerSiteForProperty?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="9c0e7-326">변수의 <xref:System.Windows.Controls.Validation.ValidationAdornerSiteForProperty?displayProperty=nameWithType> 오류가 있는 항목 컨테이너입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-326">The value of <xref:System.Windows.Controls.Validation.ValidationAdornerSiteForProperty?displayProperty=nameWithType> is the item container that has the error.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#ItemBindingGroup](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml#itembindinggroup)]  
[!code-xaml[BindingGroupSnippets#ValidationAdornerSiteFor](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml#validationadornersitefor)]  
  
 <span data-ttu-id="9c0e7-327">다음 예제에서는 항목 컨테이너 및 호출을 가져옵니다 <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> 컨테이너의에서 <xref:System.Windows.Data.BindingGroup> 에서 데이터 유효성 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-327">The following example gets the item container and calls <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> on the container's <xref:System.Windows.Data.BindingGroup> to validate the data.</span></span> <span data-ttu-id="9c0e7-328">항목 컨테이너의 메서드를 호출 하 여 데이터의 유효성을 검사 해야 합니다 <xref:System.Windows.FrameworkContentElement.BindingGroup%2A>이 아니라 합니다 <xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A> 의 <xref:System.Windows.Controls.ItemsControl>합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-328">You must validate the data by calling a method on the item container's <xref:System.Windows.FrameworkContentElement.BindingGroup%2A>, not on the <xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A> of the <xref:System.Windows.Controls.ItemsControl>.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#UpdateSources](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml.cs#updatesources)]
 [!code-vb[BindingGroupSnippets#UpdateSources](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window2.xaml.vb#updatesources)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemBindingGroupProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ItemBindingGroupProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ItemBindingGroupProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ItemsControl.ItemBindingGroupProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ItemBindingGroupProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ItemBindingGroupProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ItemBindingGroupProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ItemsControl.ItemBindingGroupProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-329">
            <see cref="P:System.Windows.Controls.ItemsControl.ItemBindingGroup" /> 종속성 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-329">Identifies the <see cref="P:System.Windows.Controls.ItemsControl.ItemBindingGroup" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerGenerator">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ItemContainerGenerator ItemContainerGenerator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ItemContainerGenerator ItemContainerGenerator" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemsControl.ItemContainerGenerator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemContainerGenerator As ItemContainerGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ItemContainerGenerator ^ ItemContainerGenerator { System::Windows::Controls::ItemContainerGenerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemContainerGenerator : System.Windows.Controls.ItemContainerGenerator" Usage="System.Windows.Controls.ItemsControl.ItemContainerGenerator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ItemContainerGenerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-330">이 컨트롤에 연결된 <see cref="T:System.Windows.Controls.ItemContainerGenerator" />를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-330">Gets the <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> that is associated with the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0e7-331">컨트롤에 연결된 <see cref="T:System.Windows.Controls.ItemContainerGenerator" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-331">The <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> that is associated with the control.</span>
          </span>
          <span data-ttu-id="9c0e7-332">기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-332">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c0e7-333"><xref:System.Windows.Controls.ItemsControl.ItemContainerGenerator%2A> 생성을 담당 합니다 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 해당 호스트에 대 한 같은 <xref:System.Windows.Controls.ItemsControl>합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-333">An <xref:System.Windows.Controls.ItemsControl.ItemContainerGenerator%2A> is responsible for generating the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] for its host, such as an <xref:System.Windows.Controls.ItemsControl>.</span></span> <span data-ttu-id="9c0e7-334">컨트롤의 데이터 뷰에서 항목과 해당 항목 간의 연결을 유지 <xref:System.Windows.UIElement> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-334">It maintains the association between the items in the data view of the control and the corresponding <xref:System.Windows.UIElement> objects.</span></span> <span data-ttu-id="9c0e7-335">모든 <xref:System.Windows.Controls.ItemsControl> 항목 컬렉션의 데이터 항목을 포함 하는 연결 된 항목 컨테이너에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-335">Every <xref:System.Windows.Controls.ItemsControl> has an associated item container that contains a data item in the item collection.</span></span> <span data-ttu-id="9c0e7-336">사용할 수는 <xref:System.Windows.Controls.ItemsControl.ItemContainerGenerator%2A> 연관 된 항목 컨테이너에 액세스 하는 속성에 <xref:System.Windows.Controls.ItemsControl>입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-336">You can use the <xref:System.Windows.Controls.ItemsControl.ItemContainerGenerator%2A> property to access the item container that is associated with your <xref:System.Windows.Controls.ItemsControl>.</span></span> <span data-ttu-id="9c0e7-337">예를 들어, 데이터 바인딩된 경우 <xref:System.Windows.Controls.TreeView> 제어 하려는 가져오기는 <xref:System.Windows.Controls.TreeViewItem> 해당 항목이 있는 인덱스 또는 해당 연결 된 데이터 항목에 따라 사용할 수는 <xref:System.Windows.Controls.ItemContainerGenerator.ContainerFromIndex%2A?displayProperty=nameWithType> 또는 <xref:System.Windows.Controls.ItemContainerGenerator.ContainerFromItem%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-337">For example, if you have a data-bound <xref:System.Windows.Controls.TreeView> control and you want to get a <xref:System.Windows.Controls.TreeViewItem> based on its index or its associated data item, you can use the <xref:System.Windows.Controls.ItemContainerGenerator.ContainerFromIndex%2A?displayProperty=nameWithType> or the <xref:System.Windows.Controls.ItemContainerGenerator.ContainerFromItem%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="9c0e7-338">사용할 수 있습니다는 <xref:System.Windows.Controls.ItemContainerGenerator.IndexFromContainer%2A?displayProperty=nameWithType> 또는 <xref:System.Windows.Controls.ItemContainerGenerator.ItemFromContainer%2A?displayProperty=nameWithType> 메서드를 지정 된 생성 된 컨테이너 요소와 연결 된 인덱스 또는 데이터 항목을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-338">Alternatively, you can use the <xref:System.Windows.Controls.ItemContainerGenerator.IndexFromContainer%2A?displayProperty=nameWithType> or the <xref:System.Windows.Controls.ItemContainerGenerator.ItemFromContainer%2A?displayProperty=nameWithType> method to get the index or data item that is associated with a given generated container element.</span></span>  
  
 <span data-ttu-id="9c0e7-339"><xref:System.Windows.Controls.Primitives.IItemContainerGenerator> 인터페이스는 고급 시나리오에도 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-339">The <xref:System.Windows.Controls.Primitives.IItemContainerGenerator> interface is also used in advanced scenarios.</span></span> <span data-ttu-id="9c0e7-340">일반적으로 가상화 패널을 직접 구현 하는 고급 응용 프로그램 인터페이스의 멤버를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-340">Typically, advanced applications that have their own implementation of a virtualizing panel call members of the interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style ItemContainerStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style ItemContainerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemContainerStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ ItemContainerStyle { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemContainerStyle : System.Windows.Style with get, set" Usage="System.Windows.Controls.ItemsControl.ItemContainerStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Category("Content")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-341">각 항목에 대해 생성된 컨테이너 요소에 적용되는 <see cref="T:System.Windows.Style" />을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-341">Gets or sets the <see cref="T:System.Windows.Style" /> that is applied to the container element generated for each item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0e7-342">각 항목에 대해 생성된 컨테이너 요소에 적용되는 <see cref="T:System.Windows.Style" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-342">The <see cref="T:System.Windows.Style" /> that is applied to the container element generated for each item.</span>
          </span>
          <span data-ttu-id="9c0e7-343">기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-343">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c0e7-344">이 속성을 사용 또는 <xref:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector%2A> 데이터 항목을 포함 하는 요소의 모양을 적용할 스타일을 설정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-344">You use this property or the <xref:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector%2A> property to set a style to affect the appearance of the elements that contain the data items.</span></span> <span data-ttu-id="9c0e7-345">예를 들어 <xref:System.Windows.Controls.ListBox>, 생성 된 컨테이너는 <xref:System.Windows.Controls.ListBoxItem> 제어;에 대 한 <xref:System.Windows.Controls.ComboBox>, 이들은 <xref:System.Windows.Controls.ComboBoxItem> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-345">For example, for <xref:System.Windows.Controls.ListBox>, the generated containers are <xref:System.Windows.Controls.ListBoxItem> controls; for <xref:System.Windows.Controls.ComboBox>, they are <xref:System.Windows.Controls.ComboBoxItem> controls.</span></span>  
  
 <span data-ttu-id="9c0e7-346"><xref:System.Windows.Controls.ItemsControl> 시각적으로 사용자 지정에 대 한 뛰어난 유연성을 제공 하 고 대부분의 스타일 지정 및 템플릿 속성을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-346">The <xref:System.Windows.Controls.ItemsControl> provides great flexibility for visual customization and provides many styling and templating properties.</span></span> <span data-ttu-id="9c0e7-347">항목의 레이아웃에 영향을 주는 사용 된 <xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-347">To affect the layout of the items, use the <xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A> property.</span></span> <span data-ttu-id="9c0e7-348">그룹화에 컨트롤을 사용 하는 경우 사용할 수 있습니다 합니다 <xref:System.Windows.Controls.ItemsControl.GroupStyle%2A> 또는 <xref:System.Windows.Controls.ItemsControl.GroupStyleSelector%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-348">If you are using grouping on your control, you can use the <xref:System.Windows.Controls.ItemsControl.GroupStyle%2A> or <xref:System.Windows.Controls.ItemsControl.GroupStyleSelector%2A> property.</span></span> <span data-ttu-id="9c0e7-349">데이터 개체의 시각화를 지정 하려면 사용 합니다 <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A> 또는 <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-349">To specify the visualization of data objects, use the <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A> or <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> property.</span></span> <span data-ttu-id="9c0e7-350">지정 하는 시기에 대 한 자세한 내용은 <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A>를 참조 하세요 [데이터 템플릿 개요](~/docs/framework/wpf/data/data-templating-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-350">For more information about when to specify an <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A>, see [Data Templating Overview](~/docs/framework/wpf/data/data-templating-overview.md).</span></span>  
  
<a name="xamlAttributeUsage_ItemContainerStyle"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9c0e7-351">XAML 특성 사용</span><span class="sxs-lookup"><span data-stu-id="9c0e7-351">XAML Attribute Usage</span></span>  
  
```  
<object ItemContainerStyle="ResourceExtension StyleResourceKey"/>  
```  
  
<a name="xamlValues_ItemContainerStyle"></a>   
## <a name="xaml-values"></a><span data-ttu-id="9c0e7-352">XAML 값</span><span class="sxs-lookup"><span data-stu-id="9c0e7-352">XAML Values</span></span>  
 <span data-ttu-id="9c0e7-353">*ResourceExtension*</span><span class="sxs-lookup"><span data-stu-id="9c0e7-353">*ResourceExtension*</span></span>  
 <span data-ttu-id="9c0e7-354">다음 중 하나: `StaticResource`, 또는 `DynamicResource`합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-354">One of the following: `StaticResource`, or `DynamicResource`.</span></span> <span data-ttu-id="9c0e7-355">스타일 자체 시스템 리소스 또는 사용자 기본 설정 등의 잠재적인 런타임 참조가 포함 되어 있지 않으면 `StaticResource` 스타일에 대 한 참조는 일반적으로 성능을 위해 권장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-355">Unless the styles themselves contain references to potential run-time references such as system resources or user preferences, `StaticResource` reference to a style is usually recommended for performance.</span></span>  
  
 <span data-ttu-id="9c0e7-356">*StyleResourceKey*</span><span class="sxs-lookup"><span data-stu-id="9c0e7-356">*StyleResourceKey*</span></span>  
 <span data-ttu-id="9c0e7-357">`x:Key` 리소스로 요청 되는 스타일을 참조 하는 문자열 값입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-357">`x:Key` string value referring to the style being requested as a resource.</span></span>  
  
<a name="dependencyPropertyInfo_ItemContainerStyle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="9c0e7-358">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="9c0e7-358">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9c0e7-359">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="9c0e7-359">Identifier field</span></span>|<xref:System.Windows.Controls.ItemsControl.ItemContainerStyleProperty>|  
|<span data-ttu-id="9c0e7-360">메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="9c0e7-360">Metadata properties set to `true`</span></span>|<span data-ttu-id="9c0e7-361">없음</span><span class="sxs-lookup"><span data-stu-id="9c0e7-361">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="9c0e7-362">다음 예제에서는이 속성을 사용 하는 방법에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-362">The following example demonstrates how to use this property.</span></span> <span data-ttu-id="9c0e7-363">다음은 데이터 바인딩된 <xref:System.Windows.Controls.ListBox>:</span><span class="sxs-lookup"><span data-stu-id="9c0e7-363">Consider the following data-bound <xref:System.Windows.Controls.ListBox>:</span></span>  
  
 [!code-xaml[StylingIntroSnippet#UIListBox](~/samples/snippets/csharp/VS_Snippets_Wpf/StylingIntroSnippet/CS/window1.xaml#uilistbox)]   
  
 <span data-ttu-id="9c0e7-364">데이터 항목을 포함 하는 요소에 대 한 스타일을 만들려면을 <xref:System.Windows.Controls.ListBoxItem> 스타일을 다음과 같이 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-364">To create a style for the elements that contain the data items, create a <xref:System.Windows.Controls.ListBoxItem> style, as shown in the following example.</span></span> <span data-ttu-id="9c0e7-365">모든 스타일이 <xref:System.Windows.Controls.ListBoxItem> 스타일에 정의 된 범위 내에서 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-365">The style is applied to all <xref:System.Windows.Controls.ListBoxItem> elements within the scope the style is defined in.</span></span>  
  
 [!code-xaml[StylingIntroSnippet#ListBoxItemStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/StylingIntroSnippet/CS/window1.xaml#listboxitemstyle)]   
  
 <span data-ttu-id="9c0e7-366"><xref:System.Windows.Controls.ListBoxItem> 에 대 한 컨테이너 요소를 <xref:System.Windows.Controls.ListBox> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-366">The <xref:System.Windows.Controls.ListBoxItem> is the container element for the <xref:System.Windows.Controls.ListBox> control.</span></span> <span data-ttu-id="9c0e7-367">따라서 앞의 대 안으로 설정 하는 것을 <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> 의 속성은 <xref:System.Windows.Controls.ListBox> 정의 된 스타일으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-367">Therefore, an alternative to the preceding is to set the <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> property of the <xref:System.Windows.Controls.ListBox> to the defined style.</span></span> <span data-ttu-id="9c0e7-368">이렇게 하려면 다음을 제공 합니다 <xref:System.Windows.Controls.ListBoxItem> 스타일을 `x:Key` 리소스로 사용할 수 있도록:</span><span class="sxs-lookup"><span data-stu-id="9c0e7-368">To do that, give the <xref:System.Windows.Controls.ListBoxItem> style an `x:Key` so it is available as a resource:</span></span>  
  
 [!code-xaml[StylingIntroSample_snippet#ContainerStyle1](~/samples/snippets/csharp/VS_Snippets_Wpf/StylingIntroSample_snippet/CSharp/Window1.xaml#containerstyle1)]   
  
 <span data-ttu-id="9c0e7-369">다음으로 설정 된 <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> 다음 예제와 같이 리소스에 대 한 속성:</span><span class="sxs-lookup"><span data-stu-id="9c0e7-369">Next, set the <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> property to the resource, as in the following example:</span></span>  
  
 [!code-xaml[StylingIntroSample_snippet#ListBox](~/samples/snippets/csharp/VS_Snippets_Wpf/StylingIntroSample_snippet/CSharp/Window1.xaml#listbox)]   
  
 <span data-ttu-id="9c0e7-370">이전 시나리오의 동일한 결과 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-370">Both of the preceding scenarios produce the same result.</span></span> <span data-ttu-id="9c0e7-371">그러나 스타일을 리소스로 사용할 수 있도록의 장점 중 하나는 스타일 다시 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-371">However, one of the advantages of making the style available as a resource is that you can reuse the style.</span></span> <span data-ttu-id="9c0e7-372">설정 된 <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> 속성 가독성을 높이기를 명시적으로 제공할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-372">Setting the <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> property explicitly can also provide greater readability.</span></span>  
  
 <span data-ttu-id="9c0e7-373">전체 예제를 참조 하세요 [스타일 및 템플릿 샘플 소개](http://go.microsoft.com/fwlink/?LinkID=160010)합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-373">For the complete example, see [Introduction to Styling and Templating Sample](http://go.microsoft.com/fwlink/?LinkID=160010).</span></span>  
  
 <span data-ttu-id="9c0e7-374">다음 예제에서는 다양 한 기능을 설명 하도록 디자인 되어 스타일 및 템플릿 관련 하 여 제공 하는 속성을 <xref:System.Windows.Controls.ItemsControl>입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-374">The following example is designed to illustrate the function of the different styling and templating related properties provided by the <xref:System.Windows.Controls.ItemsControl>.</span></span> <span data-ttu-id="9c0e7-375">합니다 <xref:System.Windows.Controls.ItemsControl> 이 예제에서 컬렉션에 바인딩된 `Task` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-375">The <xref:System.Windows.Controls.ItemsControl> in this example is bound to a collection of `Task` objects.</span></span> <span data-ttu-id="9c0e7-376">설명을 위해 이 예제의 스타일 및 템플릿은 모두 인라인으로 선언됩니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-376">For demonstration purposes, the styles and templates in this example are all declared inline.</span></span>  
  
 [!code-xaml[DataTemplatingIntro_snip#ItemsControlProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#itemscontrolproperties)]  
  
 <span data-ttu-id="9c0e7-377">렌더링될 때 예제의 스크린샷은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-377">The following is a screenshot of the example when it is rendered:</span></span>  
  
 <span data-ttu-id="9c0e7-378">![ItemsControl 예제 스크린 샷](~/add/media/databinding-itemscontrolproperties.png "ItemsControl 예제 스크린 샷")</span><span class="sxs-lookup"><span data-stu-id="9c0e7-378">![ItemsControl example screenshot](~/add/media/databinding-itemscontrolproperties.png "ItemsControl example screenshot")</span></span>  
  
 <span data-ttu-id="9c0e7-379">다른 두 스타일 관련 속성을 <xref:System.Windows.Controls.ItemsControl> 다음은 표시 되지 않습니다 하 <xref:System.Windows.Controls.ItemsControl.GroupStyle%2A> 및 <xref:System.Windows.Controls.ItemsControl.GroupStyleSelector%2A>.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-379">Two other style-related properties of the <xref:System.Windows.Controls.ItemsControl> that are not shown here are <xref:System.Windows.Controls.ItemsControl.GroupStyle%2A> and <xref:System.Windows.Controls.ItemsControl.GroupStyleSelector%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ItemContainerStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ItemContainerStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ItemsControl.ItemContainerStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ItemContainerStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ItemContainerStyleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ItemContainerStyleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ItemsControl.ItemContainerStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-380">
            <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> 종속성 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-380">Identifies the <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerStyleSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.StyleSelector ItemContainerStyleSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.StyleSelector ItemContainerStyleSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemContainerStyleSelector As StyleSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::StyleSelector ^ ItemContainerStyleSelector { System::Windows::Controls::StyleSelector ^ get(); void set(System::Windows::Controls::StyleSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemContainerStyleSelector : System.Windows.Controls.StyleSelector with get, set" Usage="System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Category("Content")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.StyleSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-381">생성된 각 컨테이너 요소에 적용할 수 있는 스타일에 대한 사용자 지정 스타일 선택 논리를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-381">Gets or sets custom style-selection logic for a style that can be applied to each generated container element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0e7-382">
            <see cref="T:System.Windows.Controls.StyleSelector" />로 사용할 스타일을 선택하는 논리가 들어 있는 <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-382">A <see cref="T:System.Windows.Controls.StyleSelector" /> object that contains logic that chooses the style to use as the <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" />.</span>
          </span>
          <span data-ttu-id="9c0e7-383">기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-383">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c0e7-384">사용 된 <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> 데이터 항목을 포함 하는 요소의 모양을 적용할 스타일을 설정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-384">You use the <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> property to set a style to affect the appearance of the elements that contain the data items.</span></span> <span data-ttu-id="9c0e7-385">예를 들어 <xref:System.Windows.Controls.ListBox>, 생성 된 컨테이너는 <xref:System.Windows.Controls.ListBoxItem> 제어;에 대 한 <xref:System.Windows.Controls.ComboBox>, 이들은 <xref:System.Windows.Controls.ComboBoxItem> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-385">For example, for <xref:System.Windows.Controls.ListBox>, the generated containers are <xref:System.Windows.Controls.ListBoxItem> controls; for <xref:System.Windows.Controls.ComboBox>, they are <xref:System.Windows.Controls.ComboBoxItem> controls.</span></span> <span data-ttu-id="9c0e7-386">사용 하는 경우 정의 된 둘 이상의 스타일을 적용 하려면 하나를 선택 하는 논리를 제공 해야 하는 <xref:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector%2A> 속성 대신는 <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-386">If you have more than one style defined and need to supply logic to choose which one to apply, then you use the <xref:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector%2A> property instead of the <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> property.</span></span> <span data-ttu-id="9c0e7-387">있으면이 속성은 무시 됩니다는 <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-387">Note that this property is ignored if the <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> property is set.</span></span>  
  
 <span data-ttu-id="9c0e7-388"><xref:System.Windows.Controls.ItemsControl> 시각적으로 사용자 지정에 대 한 뛰어난 유연성을 제공 하 고 대부분의 스타일 지정 및 템플릿 속성을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-388">The <xref:System.Windows.Controls.ItemsControl> provides great flexibility for visual customization and provides many styling and templating properties.</span></span> <span data-ttu-id="9c0e7-389">항목의 레이아웃에 영향을 주는 사용 된 <xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-389">To affect the layout of the items, use the <xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A> property.</span></span> <span data-ttu-id="9c0e7-390">그룹화에 컨트롤을 사용 하는 경우 사용할 수 있습니다 합니다 <xref:System.Windows.Controls.ItemsControl.GroupStyle%2A> 또는 <xref:System.Windows.Controls.ItemsControl.GroupStyleSelector%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-390">If you are using grouping on your control, you can use the <xref:System.Windows.Controls.ItemsControl.GroupStyle%2A> or <xref:System.Windows.Controls.ItemsControl.GroupStyleSelector%2A> property.</span></span> <span data-ttu-id="9c0e7-391">데이터 개체의 시각화를 지정 하려면 사용 합니다 <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A> 또는 <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-391">To specify the visualization of data objects, use the <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A> or <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> property.</span></span> <span data-ttu-id="9c0e7-392">지정 하는 시기에 대 한 자세한 내용은 <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A>를 참조 하세요 [데이터 템플릿 개요](~/docs/framework/wpf/data/data-templating-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-392">For more information about when to specify an <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A>, see [Data Templating Overview](~/docs/framework/wpf/data/data-templating-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_ItemContainerStyleSelector"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="9c0e7-393">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="9c0e7-393">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9c0e7-394">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="9c0e7-394">Identifier field</span></span>|<xref:System.Windows.Controls.ItemsControl.ItemContainerStyleSelectorProperty>|  
|<span data-ttu-id="9c0e7-395">메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="9c0e7-395">Metadata properties set to `true`</span></span>|<span data-ttu-id="9c0e7-396">없음</span><span class="sxs-lookup"><span data-stu-id="9c0e7-396">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerStyleSelectorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ItemContainerStyleSelectorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ItemContainerStyleSelectorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ItemsControl.ItemContainerStyleSelectorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ItemContainerStyleSelectorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ItemContainerStyleSelectorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ItemContainerStyleSelectorProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ItemsControl.ItemContainerStyleSelectorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-397">
            <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> 종속성 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-397">Identifies the <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemsControl.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ItemCollection ^ Items { System::Windows::Controls::ItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Windows.Controls.ItemCollection" Usage="System.Windows.Controls.ItemsControl.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-398">
            <see cref="T:System.Windows.Controls.ItemsControl" />의 내용을 생성하는 데 사용된 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-398">Gets the collection used to generate the content of the <see cref="T:System.Windows.Controls.ItemsControl" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0e7-399">
            <see cref="T:System.Windows.Controls.ItemsControl" />의 내용을 생성하는 데 사용된 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-399">The collection that is used to generate the content of the <see cref="T:System.Windows.Controls.ItemsControl" />.</span>
          </span>
          <span data-ttu-id="9c0e7-400">기본값은 빈 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-400">The default is an empty collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c0e7-401">항목을 추가 하려면이 속성을 사용할 수는 <xref:System.Windows.Controls.ItemsControl>합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-401">This property may be used to add items to an <xref:System.Windows.Controls.ItemsControl>.</span></span> <span data-ttu-id="9c0e7-402">자식으로 추가 <xref:System.Windows.Controls.ItemsControl> 개체가 암시적으로 추가 합니다 <xref:System.Windows.Controls.ItemCollection> 에 대 한는 <xref:System.Windows.Controls.ItemsControl> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-402">Adding a child to an <xref:System.Windows.Controls.ItemsControl> object implicitly adds it to the <xref:System.Windows.Controls.ItemCollection> for the <xref:System.Windows.Controls.ItemsControl> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9c0e7-403">이 속성 설정할 수 있습니다 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 컬렉션 개체에 액세스 하 고 같은 다양 한 메서드를 사용 하 여 또는 표시 된 컬렉션 구문을 통해 `Add`합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-403">This property can only be set in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] via the collection syntax shown, or by accessing the collection object and using its various methods such as `Add`.</span></span> <span data-ttu-id="9c0e7-404">컬렉션 개체 자체를 액세스 하는 속성은 읽기 전용 및 컬렉션 자체는 읽기 / 쓰기입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-404">The property to access the collection object itself is read-only, and the collection itself is read-write.</span></span>  
  
 <span data-ttu-id="9c0e7-405">중 하나를 사용 하는 <xref:System.Windows.Controls.ItemsControl.Items%2A> 또는 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> 속성의 콘텐츠를 생성 하는 데 사용 해야 하는 컬렉션을 지정 하 여 <xref:System.Windows.Controls.ItemsControl>.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-405">Note that you use either the <xref:System.Windows.Controls.ItemsControl.Items%2A> or the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> property to specify the collection that should be used to generate the content of your <xref:System.Windows.Controls.ItemsControl>.</span></span> <span data-ttu-id="9c0e7-406">경우는 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> 속성을 설정 합니다 <xref:System.Windows.Controls.ItemsControl.Items%2A> 컬렉션은 읽기 전용 및 고정 크기 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-406">When the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> property is set, the <xref:System.Windows.Controls.ItemsControl.Items%2A> collection is made read-only and fixed-size.</span></span>  
  
 <span data-ttu-id="9c0e7-407">때 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> 설정, 사용 되는 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> 속성을 `null` 컬렉션을 제거 하 고 사용량을 복원 <xref:System.Windows.Controls.ItemsControl.Items%2A>, 되 고 빈 <xref:System.Windows.Controls.ItemCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-407">When <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> is in use, setting the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> property to `null` removes the collection and restores usage to <xref:System.Windows.Controls.ItemsControl.Items%2A>, which will be an empty <xref:System.Windows.Controls.ItemCollection>.</span></span>  
  
<a name="xamlPropertyElementUsage_Items"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="9c0e7-408">XAML 속성 요소 사용</span><span class="sxs-lookup"><span data-stu-id="9c0e7-408">XAML Property Element Usage</span></span>  
  
```  
<object>  
  OneOrMoreElements  
</object>  
```  
  
<a name="xamlValues_Items"></a>   
## <a name="xaml-values"></a><span data-ttu-id="9c0e7-409">XAML 값</span><span class="sxs-lookup"><span data-stu-id="9c0e7-409">XAML Values</span></span>  
 <span data-ttu-id="9c0e7-410">*OneOrMoreElements*</span><span class="sxs-lookup"><span data-stu-id="9c0e7-410">*OneOrMoreElements*</span></span>  
 <span data-ttu-id="9c0e7-411">하나 이상의 <xref:System.Windows.UIElement> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-411">One or more <xref:System.Windows.UIElement> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c0e7-412">다음 예에서는 설명 데이터를 바인딩하는 <xref:System.Windows.Controls.ItemsControl>합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-412">The following examples demonstrate binding data to an <xref:System.Windows.Controls.ItemsControl>.</span></span> <span data-ttu-id="9c0e7-413">첫 번째 예제에서는 라는 클래스를 만듭니다 `MyData` 간단한 문자열 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-413">The first example creates a class called `MyData` that is a simple string collection.</span></span>  
  
 [!code-csharp[ControlContentOverviewSnippets#8](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlContentOverviewSnippets/CSharp/Window1.xaml.cs#8)]
 [!code-vb[ControlContentOverviewSnippets#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ControlContentOverviewSnippets/VisualBasic/Window1.xaml.vb#8)]  
  
 <span data-ttu-id="9c0e7-414">다음 예제에서는 합니다 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> 의 개체는 <xref:System.Windows.Controls.ItemsControl> 에 `MyData`입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-414">The following example binds the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> object of an <xref:System.Windows.Controls.ItemsControl> to `MyData`.</span></span>  
  
 [!code-xaml[ControlContentOverviewSnippets#7](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlContentOverviewSnippets/CSharp/Window1.xaml#7)]  
[!code-xaml[ControlContentOverviewSnippets#6](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlContentOverviewSnippets/CSharp/Window1.xaml#6)]  
  
 [!code-csharp[ControlContentOverviewSnippets#9](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlContentOverviewSnippets/CSharp/Window1.xaml.cs#9)]
 [!code-vb[ControlContentOverviewSnippets#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ControlContentOverviewSnippets/VisualBasic/Window1.xaml.vb#9)]  
  
 <span data-ttu-id="9c0e7-415">다음 그림에 표시 된 <xref:System.Windows.Controls.ListBox> 이전 예에서 만든 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-415">The following illustration shows the <xref:System.Windows.Controls.ListBox> control created in the previous example.</span></span>  
  
 <span data-ttu-id="9c0e7-416">![ListBox](~/add/media/controlcontentmodellistbox1.PNG "ListBox")</span><span class="sxs-lookup"><span data-stu-id="9c0e7-416">![ListBox](~/add/media/controlcontentmodellistbox1.PNG "ListBox")</span></span>  
  
 <span data-ttu-id="9c0e7-417">다음 예제에서는 채우는 방법을 보여 줍니다.는 <xref:System.Windows.Controls.ItemsControl> 를 사용 하 여는 <xref:System.Windows.Controls.ItemsControl.Items%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-417">The following example demonstrates how to populate an <xref:System.Windows.Controls.ItemsControl> by using the <xref:System.Windows.Controls.ItemsControl.Items%2A> property.</span></span> <span data-ttu-id="9c0e7-418">이 예제에서는 다음과 같은 다양 한 유형의 항목을 추가 합니다 <xref:System.Windows.Controls.ListBox>:</span><span class="sxs-lookup"><span data-stu-id="9c0e7-418">The example adds the following different types of items to the <xref:System.Windows.Controls.ListBox>:</span></span>  
  
-   <span data-ttu-id="9c0e7-419">문자열</span><span class="sxs-lookup"><span data-stu-id="9c0e7-419">A string.</span></span>  
  
-   <span data-ttu-id="9c0e7-420"><xref:System.DateTime> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-420">A <xref:System.DateTime> object.</span></span>  
  
-   <span data-ttu-id="9c0e7-421"><xref:System.Windows.UIElement> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-421">A <xref:System.Windows.UIElement> object.</span></span>  
  
-   <span data-ttu-id="9c0e7-422">A <xref:System.Windows.Controls.Panel> 기타를 포함 하는 컨트롤 <xref:System.Windows.UIElement> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-422">A <xref:System.Windows.Controls.Panel> control that contains other <xref:System.Windows.UIElement> objects.</span></span>  
  
 [!code-xaml[ControlContentOverviewSnippets#3](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlContentOverviewSnippets/CSharp/Window1.xaml#3)]  
  
 [!code-csharp[ControlContentOverviewSnippets#4](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlContentOverviewSnippets/CSharp/Window1.xaml.cs#4)]
 [!code-vb[ControlContentOverviewSnippets#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ControlContentOverviewSnippets/VisualBasic/Window1.xaml.vb#4)]  
  
 <span data-ttu-id="9c0e7-423">다음 그림에 표시 된 <xref:System.Windows.Controls.ListBox> 이전 예에서 만든 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-423">The following illustration shows the <xref:System.Windows.Controls.ListBox> created in the previous example.</span></span>  
  
 <span data-ttu-id="9c0e7-424">![네 형식의 콘텐츠가 있는 ListBox](~/add/media/controlcontentmodellistbox2.PNG "네 형식의 콘텐츠가 있는 ListBox")</span><span class="sxs-lookup"><span data-stu-id="9c0e7-424">![ListBox with four types of content](~/add/media/controlcontentmodellistbox2.PNG "ListBox with four types of content")</span></span>  
  
 <span data-ttu-id="9c0e7-425"><xref:System.Windows.Controls.ItemCollection> 뷰입니다, 정렬, 필터링 및 그룹화와 같은 보기 관련 기능을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-425">Note that the <xref:System.Windows.Controls.ItemCollection> is a view, so you can use the view-related functionalities such as sorting, filtering, and grouping.</span></span>  
  
 <span data-ttu-id="9c0e7-426">예를 들어, 인스턴스에 있는 경우는 <xref:System.Windows.Controls.ListBox>, `myListBox`의 콘텐츠를 정렬 하려면 다음을 수행할 수는 <xref:System.Windows.Controls.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-426">For example, if you have an instance of a <xref:System.Windows.Controls.ListBox>, `myListBox`, you can do the following to sort the content of the <xref:System.Windows.Controls.ListBox>.</span></span> <span data-ttu-id="9c0e7-427">이 예제에서는 `Content` 정렬할 속성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-427">In this example, `Content` is the name of the property to sort by.</span></span>  
  
 [!code-csharp[ListBoxSort_snip#Sort](~/samples/snippets/csharp/VS_Snippets_Wpf/ListBoxSort_snip/CSharp/Window1.xaml.cs#sort)]
 [!code-vb[ListBoxSort_snip#Sort](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListBoxSort_snip/visualbasic/window1.xaml.vb#sort)]  
  
 <span data-ttu-id="9c0e7-428">이렇게 하면, 컨트롤이 컬렉션에 직접 바인딩된 경우, 기본 컬렉션 뷰는 사용, 및 정렬 기준 동일한 컬렉션에 직접 바인딩된 다른 모든 컨트롤에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-428">Note that when you do this, if the control is bound to a collection directly, the default collection view is used, and the sort criteria are applied to all other controls bound to the same collection directly.</span></span> <span data-ttu-id="9c0e7-429">뷰를 기본 보기로 됩니다 하는 경우는 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> 속성이 바인딩되는 <xref:System.Windows.Data.CollectionViewSource>합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-429">The view will not be the default view if  the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> property is bound to a <xref:System.Windows.Data.CollectionViewSource>.</span></span>  
  
 <span data-ttu-id="9c0e7-430">경우에 <xref:System.Windows.Controls.ItemsControl> 바인딩되 직접 컬렉션을 기본 보기를 가져오기 위해 다음을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-430">If your <xref:System.Windows.Controls.ItemsControl> is bound directly to a collection, then you can do the following to get the default view:</span></span>  
  
 [!code-csharp[GroupingSample#MyView](~/samples/snippets/csharp/VS_Snippets_Wpf/GroupingSample/CSharp/Window1.xaml.cs#myview)]
 [!code-vb[GroupingSample#MyView](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GroupingSample/visualbasic/window1.xaml.vb#myview)]  
[!code-csharp[GroupingSample#GetView](~/samples/snippets/csharp/VS_Snippets_Wpf/GroupingSample/CSharp/Window1.xaml.cs#getview)]
[!code-vb[GroupingSample#GetView](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GroupingSample/visualbasic/window1.xaml.vb#getview)]  
  
 <span data-ttu-id="9c0e7-431">또는 필터링, 정렬 및 그룹화 기준을 지정할 수 있습니다 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 또는 사용 하 여 코드를 <xref:System.Windows.Data.CollectionViewSource>입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-431">Alternately, you can specify filtering, sorting, and grouping criteria in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] or code by using a <xref:System.Windows.Data.CollectionViewSource>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemsControlFromItemContainer">
      <MemberSignature Language="C#" Value="public static System.Windows.Controls.ItemsControl ItemsControlFromItemContainer (System.Windows.DependencyObject container);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Controls.ItemsControl ItemsControlFromItemContainer(class System.Windows.DependencyObject container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.ItemsControlFromItemContainer(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ItemsControlFromItemContainer (container As DependencyObject) As ItemsControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Controls::ItemsControl ^ ItemsControlFromItemContainer(System::Windows::DependencyObject ^ container);" />
      <MemberSignature Language="F#" Value="static member ItemsControlFromItemContainer : System.Windows.DependencyObject -&gt; System.Windows.Controls.ItemsControl" Usage="System.Windows.Controls.ItemsControl.ItemsControlFromItemContainer container" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ItemsControl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="container">
          <span data-ttu-id="9c0e7-432">
            <see cref="T:System.Windows.Controls.ItemsControl" />을 반환할 해당 컨테이너 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-432">The container element to return the <see cref="T:System.Windows.Controls.ItemsControl" /> for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0e7-433">지정된 컨테이너 요소를 소유하는 <see cref="T:System.Windows.Controls.ItemsControl" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-433">Returns the <see cref="T:System.Windows.Controls.ItemsControl" /> that owns the specified container element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9c0e7-434">지정된 컨테이너 요소를 소유하는 <see cref="T:System.Windows.Controls.ItemsControl" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-434">The <see cref="T:System.Windows.Controls.ItemsControl" /> that owns the specified container element.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.ItemsControl.ItemContainerGenerator" />
      </Docs>
    </Member>
    <Member MemberName="ItemsPanel">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ItemsPanelTemplate ItemsPanel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ItemsPanelTemplate ItemsPanel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemsControl.ItemsPanel" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemsPanel As ItemsPanelTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ItemsPanelTemplate ^ ItemsPanel { System::Windows::Controls::ItemsPanelTemplate ^ get(); void set(System::Windows::Controls::ItemsPanelTemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemsPanel : System.Windows.Controls.ItemsPanelTemplate with get, set" Usage="System.Windows.Controls.ItemsControl.ItemsPanel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ItemsPanelTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-435">항목의 레이아웃을 제어하는 패널을 정의하는 템플릿을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-435">Gets or sets the template that defines the panel that controls the layout of items.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0e7-436">항목 레이아웃에 사용할 패널을 정의하는 <see cref="T:System.Windows.Controls.ItemsPanelTemplate" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-436">An <see cref="T:System.Windows.Controls.ItemsPanelTemplate" /> that defines the panel to use for the layout of the items.</span>
          </span>
          <span data-ttu-id="9c0e7-437">
            <see cref="T:System.Windows.Controls.ItemsControl" />의 기본값은 <see cref="T:System.Windows.Controls.ItemsPanelTemplate" />을 지정하는 <see cref="T:System.Windows.Controls.StackPanel" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-437">The default value for the <see cref="T:System.Windows.Controls.ItemsControl" /> is an <see cref="T:System.Windows.Controls.ItemsPanelTemplate" /> that specifies a <see cref="T:System.Windows.Controls.StackPanel" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c0e7-438">에 대 한 합니다 <xref:System.Windows.Controls.ListBox>, 기본값 <xref:System.Windows.Controls.ItemsPanelTemplate> 지정을 <xref:System.Windows.Controls.VirtualizingStackPanel>입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-438">For the <xref:System.Windows.Controls.ListBox>, the default <xref:System.Windows.Controls.ItemsPanelTemplate> specifies the <xref:System.Windows.Controls.VirtualizingStackPanel>.</span></span> <span data-ttu-id="9c0e7-439">에 대 한 <xref:System.Windows.Controls.MenuItem>를 사용 하 여 기본 <xref:System.Windows.Controls.WrapPanel>입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-439">For <xref:System.Windows.Controls.MenuItem>, the default uses <xref:System.Windows.Controls.WrapPanel>.</span></span> <span data-ttu-id="9c0e7-440">에 대 한 <xref:System.Windows.Controls.Primitives.StatusBar>를 사용 하 여 기본 <xref:System.Windows.Controls.DockPanel>입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-440">For <xref:System.Windows.Controls.Primitives.StatusBar>, the default uses <xref:System.Windows.Controls.DockPanel>.</span></span>  
  
 <span data-ttu-id="9c0e7-441">에 있는 항목의 레이아웃에 영향을 <xref:System.Windows.Controls.ItemsControl>를 지정 하려면이 속성을 사용 하면를 <xref:System.Windows.Controls.ItemsPanelTemplate>합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-441">To affect the layout of the items in an <xref:System.Windows.Controls.ItemsControl>, you use this property to specify a <xref:System.Windows.Controls.ItemsPanelTemplate>.</span></span>  
  
 <span data-ttu-id="9c0e7-442"><xref:System.Windows.Controls.ItemsControl> 시각적으로 사용자 지정에 대 한 뛰어난 유연성을 제공 하 고 대부분의 스타일 지정 및 템플릿 속성을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-442">The <xref:System.Windows.Controls.ItemsControl> provides great flexibility for visual customization and provides many styling and templating properties.</span></span> <span data-ttu-id="9c0e7-443">사용 된 <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> 속성 또는 <xref:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector%2A> 데이터 항목을 포함 하는 요소의 모양을 적용할 스타일을 설정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-443">You use the <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> property or the <xref:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector%2A> property to set a style to affect the appearance of the elements that contain the data items.</span></span> <span data-ttu-id="9c0e7-444">예를 들어 <xref:System.Windows.Controls.ListBox>, 생성 된 컨테이너는 <xref:System.Windows.Controls.ListBoxItem> 제어;에 대 한 <xref:System.Windows.Controls.ComboBox>, 이들은 <xref:System.Windows.Controls.ComboBoxItem> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-444">For example, for <xref:System.Windows.Controls.ListBox>, the generated containers are <xref:System.Windows.Controls.ListBoxItem> controls; for <xref:System.Windows.Controls.ComboBox>, they are <xref:System.Windows.Controls.ComboBoxItem> controls.</span></span> <span data-ttu-id="9c0e7-445">그룹화에 컨트롤을 사용 하는 경우 사용할 수 있습니다 합니다 <xref:System.Windows.Controls.ItemsControl.GroupStyle%2A> 또는 <xref:System.Windows.Controls.ItemsControl.GroupStyleSelector%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-445">If you are using grouping on your control, you can use the <xref:System.Windows.Controls.ItemsControl.GroupStyle%2A> or <xref:System.Windows.Controls.ItemsControl.GroupStyleSelector%2A> property.</span></span> <span data-ttu-id="9c0e7-446">데이터 개체의 시각화를 지정 하려면 사용 합니다 <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A> 또는 <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-446">To specify the visualization of the data objects, use the <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A> or the <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> property.</span></span> <span data-ttu-id="9c0e7-447">자세한 내용은 [데이터 템플릿 개요](~/docs/framework/wpf/data/data-templating-overview.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-447">For more information, see [Data Templating Overview](~/docs/framework/wpf/data/data-templating-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_ItemsPanel"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="9c0e7-448">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="9c0e7-448">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9c0e7-449">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="9c0e7-449">Identifier field</span></span>|<xref:System.Windows.Controls.ItemsControl.ItemsPanelProperty>|  
|<span data-ttu-id="9c0e7-450">메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="9c0e7-450">Metadata properties set to `true`</span></span>|<span data-ttu-id="9c0e7-451">없음</span><span class="sxs-lookup"><span data-stu-id="9c0e7-451">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="9c0e7-452">가로 만들려는 <xref:System.Windows.Controls.ListBox>, 가로 지정 하는 템플릿을 만들 수 있습니다 <xref:System.Windows.Controls.StackPanel> 으로 설정 하는 <xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-452">To create a horizontal <xref:System.Windows.Controls.ListBox>, you can create a template that specifies a horizontal <xref:System.Windows.Controls.StackPanel> and set it as the <xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A> property.</span></span> <span data-ttu-id="9c0e7-453">에서는 다음 예제는 <xref:System.Windows.Controls.ListBox> <xref:System.Windows.Style> 만들어지는 가로 <xref:System.Windows.Controls.ListBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-453">The following example shows a <xref:System.Windows.Controls.ListBox> <xref:System.Windows.Style> that creates a horizontal <xref:System.Windows.Controls.ListBox>.</span></span>  
  
 [!code-xaml[StylingIntroSample_snippet#ItemsPanel](~/samples/snippets/csharp/VS_Snippets_Wpf/StylingIntroSample_snippet/CSharp/Window1.xaml#itemspanel)] 
  
 <span data-ttu-id="9c0e7-454">다음 예제에서는 <xref:System.Windows.Controls.ControlTemplate> 가로 만들려면 <xref:System.Windows.Controls.ListBox> 모서리가 둥근입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-454">The following example uses a <xref:System.Windows.Controls.ControlTemplate> to create a horizontal <xref:System.Windows.Controls.ListBox> that has rounded corners.</span></span> <span data-ttu-id="9c0e7-455">설정 하는 대신이 예제에서는 합니다 <xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A> 이전 예제와 같이, 가로 <xref:System.Windows.Controls.StackPanel> 내에서 지정 된는 <xref:System.Windows.Controls.ControlTemplate>합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-455">In this example, instead of setting the <xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A> property as in previous example, the horizontal <xref:System.Windows.Controls.StackPanel> is specified within the <xref:System.Windows.Controls.ControlTemplate>.</span></span> <span data-ttu-id="9c0e7-456"><xref:System.Windows.Controls.Panel.IsItemsHost%2A> 속성이로 설정 되어 `true` 에 <xref:System.Windows.Controls.StackPanel>를 나타내는 생성된 된 항목 패널에서 이동 해야 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-456">The <xref:System.Windows.Controls.Panel.IsItemsHost%2A> property is set to `true` on the <xref:System.Windows.Controls.StackPanel>, indicating that the generated items should go in the panel.</span></span> <span data-ttu-id="9c0e7-457">이러한 방식으로 지정 하는 경우는 <xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A> 를 사용 하지 않고 컨트롤의 사용자가 바꿀 수 없습니다는 <xref:System.Windows.Controls.ControlTemplate>합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-457">When you specify it this way, the <xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A> cannot be replaced by the user of the control without using a <xref:System.Windows.Controls.ControlTemplate>.</span></span> <span data-ttu-id="9c0e7-458">따라서만 수행이 패널 템플릿 사용 하지 않고 교체 하려고 하지 않는 것이 알고 있는 경우.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-458">Therefore, only do this if you know you would not want the panel to be replaced without the use of a template.</span></span>  
  
 [!code-xaml[StylingIntroSnippet#ListBoxCT](~/samples/snippets/csharp/VS_Snippets_Wpf/StylingIntroSnippet/CS/window1.xaml#listboxct)]   
  
 <span data-ttu-id="9c0e7-459">또는 동일한 결과 얻으려면 다음을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-459">Alternatively, you can do the following to achieve the same results.</span></span> <span data-ttu-id="9c0e7-460">이 경우에 <xref:System.Windows.Controls.ItemsPresenter> 된 내용에 따라 항목의 레이아웃에 대 한 패널을 만드는 <xref:System.Windows.Controls.ItemsPanelTemplate>합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-460">In this case, the <xref:System.Windows.Controls.ItemsPresenter> creates the panel for the layout of the items based on what is specified by the <xref:System.Windows.Controls.ItemsPanelTemplate>.</span></span>  
  
 [!code-xaml[StyleOvw01#ItemsPanelTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleOvw01/CS/Page1.xaml#itemspaneltemplate)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemsPanelProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ItemsPanelProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ItemsPanelProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ItemsControl.ItemsPanelProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ItemsPanelProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ItemsPanelProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ItemsPanelProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ItemsControl.ItemsPanelProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-461">
            <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel" /> 종속성 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-461">Identifies the <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemsSource">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable ItemsSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable ItemsSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemsControl.ItemsSource" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemsSource As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IEnumerable ^ ItemsSource { System::Collections::IEnumerable ^ get(); void set(System::Collections::IEnumerable ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemsSource : System.Collections.IEnumerable with get, set" Usage="System.Windows.Controls.ItemsControl.ItemsSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-462">
            <see cref="T:System.Windows.Controls.ItemsControl" />의 내용을 생성하는 데 사용된 컬렉션을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-462">Gets or sets a collection used to generate the content of the <see cref="T:System.Windows.Controls.ItemsControl" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0e7-463">
            <see cref="T:System.Windows.Controls.ItemsControl" />의 내용을 생성하는 데 사용된 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-463">A collection that is used to generate the content of the <see cref="T:System.Windows.Controls.ItemsControl" />.</span>
          </span>
          <span data-ttu-id="9c0e7-464">기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-464">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c0e7-465">**콘텐츠 모델:** 항목을 추가 하려면이 속성을 사용할 수는 <xref:System.Windows.Controls.ItemsControl>합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-465">**Content Model:** This property may be used to add items to an <xref:System.Windows.Controls.ItemsControl>.</span></span>  
  
 <span data-ttu-id="9c0e7-466">일반적인 시나리오를 사용 하는 것을 <xref:System.Windows.Controls.ItemsControl> 와 같은 <xref:System.Windows.Controls.ListBox>, <xref:System.Windows.Controls.ListView>, 또는 <xref:System.Windows.Controls.TreeView> 데이터 컬렉션을 표시 하거나 바인딩할는 <xref:System.Windows.Controls.ItemsControl> 컬렉션 개체에 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-466">A common scenario is to use an <xref:System.Windows.Controls.ItemsControl> such as a <xref:System.Windows.Controls.ListBox>, <xref:System.Windows.Controls.ListView>, or <xref:System.Windows.Controls.TreeView> to display a data collection, or to bind an <xref:System.Windows.Controls.ItemsControl> to a collection object.</span></span> <span data-ttu-id="9c0e7-467">바인딩하는 <xref:System.Windows.Controls.ItemsControl> 컬렉션 개체를 사용 합니다 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-467">To bind an <xref:System.Windows.Controls.ItemsControl> to a collection object, use the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> property.</span></span> <span data-ttu-id="9c0e7-468">유의 합니다 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> 속성은 지원 <xref:System.Windows.Data.BindingMode.OneWay> 기본적으로 바인딩.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-468">Note that the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> property supports <xref:System.Windows.Data.BindingMode.OneWay> binding by default.</span></span>  
  
 <span data-ttu-id="9c0e7-469">경우는 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> 속성을 설정 합니다 <xref:System.Windows.Controls.ItemsControl.Items%2A> 컬렉션은 읽기 전용 및 고정 크기 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-469">When the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> property is set, the <xref:System.Windows.Controls.ItemsControl.Items%2A> collection is made read-only and fixed-size.</span></span>  
  
 <span data-ttu-id="9c0e7-470">때 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> 속성을 설정 하는 사용 중인 `null` 컬렉션을 제거 하 고 사용량을 복원 <xref:System.Windows.Controls.ItemsControl.Items%2A>, 되 고 빈 <xref:System.Windows.Controls.ItemCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-470">When <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> is in use, setting the property to `null` removes the collection and restores usage to <xref:System.Windows.Controls.ItemsControl.Items%2A>, which will be an empty <xref:System.Windows.Controls.ItemCollection>.</span></span> <span data-ttu-id="9c0e7-471">때 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> 는이 속성의 값은 사용에 없는 `null`로 설정 하 고 `null` 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-471">When <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> is not in use, the value of this property is `null`, and setting it to `null` has no effect.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9c0e7-472">대부분의 경우 사용자 지정 컬렉션을 구현할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-472">In most cases you do not need to implement your own collections.</span></span> <span data-ttu-id="9c0e7-473">대신 사용 하는 것이 좋습니다 <xref:System.Collections.ObjectModel.ObservableCollection%601> 또는 다른 기존 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-473">Instead, consider using <xref:System.Collections.ObjectModel.ObservableCollection%601> or other existing collections.</span></span> <span data-ttu-id="9c0e7-474">자세한 내용은는 "컬렉션 개체 소스로 사용 되는 바인딩"를 참조 하세요 [바인딩 소스 개요](~/docs/framework/wpf/data/binding-sources-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-474">For more information, see the "Collection Objects Used as Binding Source" in [Binding Sources Overview](~/docs/framework/wpf/data/binding-sources-overview.md).</span></span>  
  
<a name="xamlAttributeUsage_ItemsSource"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9c0e7-475">XAML 특성 사용</span><span class="sxs-lookup"><span data-stu-id="9c0e7-475">XAML Attribute Usage</span></span>  
  
```  
<object ItemsSource="bindingDeclaration"/>  
```  
  
<a name="xamlValues_ItemsSource"></a>   
## <a name="xaml-values"></a><span data-ttu-id="9c0e7-476">XAML 값</span><span class="sxs-lookup"><span data-stu-id="9c0e7-476">XAML Values</span></span>  
 <span data-ttu-id="9c0e7-477">*bindingDeclaration*</span><span class="sxs-lookup"><span data-stu-id="9c0e7-477">*bindingDeclaration*</span></span>  
 <span data-ttu-id="9c0e7-478"><xref:System.Windows.Data.Binding> 선언 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-478">A <xref:System.Windows.Data.Binding> declaration.</span></span> <span data-ttu-id="9c0e7-479">참조 [Binding 태그 확장](~/docs/framework/wpf/advanced/binding-markup-extension.md) 자세한 내용은 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-479">See [Binding Markup Extension](~/docs/framework/wpf/advanced/binding-markup-extension.md) for more information.</span></span>  
  
<a name="dependencyPropertyInfo_ItemsSource"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="9c0e7-480">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="9c0e7-480">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9c0e7-481">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="9c0e7-481">Identifier field</span></span>|<xref:System.Windows.Controls.ItemsControl.ItemsSourceProperty>|  
|<span data-ttu-id="9c0e7-482">메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="9c0e7-482">Metadata properties set to `true`</span></span>|<span data-ttu-id="9c0e7-483">없음</span><span class="sxs-lookup"><span data-stu-id="9c0e7-483">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemsSourceProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ItemsSourceProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ItemsSourceProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ItemsControl.ItemsSourceProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ItemsSourceProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ItemsSourceProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ItemsSourceProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ItemsControl.ItemsSourceProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-484">
            <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> 종속성 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-484">Identifies the <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemStringFormat">
      <MemberSignature Language="C#" Value="public string ItemStringFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemStringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemsControl.ItemStringFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemStringFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ItemStringFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemStringFormat : string with get, set" Usage="System.Windows.Controls.ItemsControl.ItemStringFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-485">
            <see cref="T:System.Windows.Controls.ItemsControl" />의 항목이 문자열로 표시되는 경우 이 항목의 형식 지정 방법을 지정하는 복합 문자열을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-485">Gets or sets a composite string that specifies how to format the items in the <see cref="T:System.Windows.Controls.ItemsControl" /> if they are displayed as strings.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0e7-486">
            <see cref="T:System.Windows.Controls.ItemsControl" />의 항목이 문자열로 표시되는 경우 이 항목의 형식 지정 방법을 지정하는 복합 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-486">A composite string that specifies how to format the items in the <see cref="T:System.Windows.Controls.ItemsControl" /> if they are displayed as strings.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c0e7-487"><xref:System.Windows.Controls.ItemsControl.ItemStringFormat%2A> 미리 정의 된, 복합 또는 사용자 지정 문자열 형식의 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-487"><xref:System.Windows.Controls.ItemsControl.ItemStringFormat%2A> can be a predefined, composite, or custom string format.</span></span> <span data-ttu-id="9c0e7-488">문자열 형식에 대 한 자세한 내용은 참조 하세요. [형식](~/docs/standard/base-types/formatting-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-488">For more information about string formats, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span> <span data-ttu-id="9c0e7-489">설정 하는 경우는 <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A> 또는 <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> 의 한 <xref:System.Windows.Controls.ItemsControl>, <xref:System.Windows.Controls.ItemsControl.ItemStringFormat%2A> 속성은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-489">If you set the <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A> or <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> of a <xref:System.Windows.Controls.ItemsControl>, the <xref:System.Windows.Controls.ItemsControl.ItemStringFormat%2A> property is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c0e7-490">다음 예제에서는 합니다 <xref:System.Windows.Controls.ItemsControl.ItemStringFormat%2A> 목록으로 형식을 지정 하려면 <xref:System.DateTime> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-490">The following example uses the <xref:System.Windows.Controls.ItemsControl.ItemStringFormat%2A> to specify the format of a list of <xref:System.DateTime> objects.</span></span>  
  
 [!code-xaml[ContentStringSnippets#ItemsControl](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentStringSnippets/CSharp/Window1.xaml#itemscontrol)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemStringFormatProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ItemStringFormatProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ItemStringFormatProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ItemsControl.ItemStringFormatProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ItemStringFormatProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ItemStringFormatProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ItemStringFormatProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ItemsControl.ItemStringFormatProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-491">
            <see cref="P:System.Windows.Controls.ItemsControl.ItemStringFormat" /> 종속성 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-491">Identifies the <see cref="P:System.Windows.Controls.ItemsControl.ItemStringFormat" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemsControl.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemTemplate As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DataTemplate ^ ItemTemplate { System::Windows::DataTemplate ^ get(); void set(System::Windows::DataTemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemTemplate : System.Windows.DataTemplate with get, set" Usage="System.Windows.Controls.ItemsControl.ItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-492">각 항목을 표시하는 데 사용되는 <see cref="T:System.Windows.DataTemplate" />을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-492">Gets or sets the <see cref="T:System.Windows.DataTemplate" /> used to display each item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0e7-493">데이터 개체의 시각화를 지정하는 <see cref="T:System.Windows.DataTemplate" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-493">A <see cref="T:System.Windows.DataTemplate" /> that specifies the visualization of the data objects.</span>
          </span>
          <span data-ttu-id="9c0e7-494">기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-494">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c0e7-495">사용할는 <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A> 데이터 개체의 시각화를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-495">You use the <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A> to specify the visualization of the data objects.</span></span> <span data-ttu-id="9c0e7-496">경우에 <xref:System.Windows.Controls.ItemsControl> 바인딩된 컬렉션에 개체 할 수 없으며 특정 표시 명령을 사용 하 여는 <xref:System.Windows.DataTemplate>, 결과 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 각 항목의 내부 컬렉션에서 각 개체의 문자열 표현 이라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-496">If your <xref:System.Windows.Controls.ItemsControl> is bound to a collection object and you do not provide specific display instructions using a <xref:System.Windows.DataTemplate>, the resulting [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] of each item is a string representation of each object in the underlying collection.</span></span>  
  
 <span data-ttu-id="9c0e7-497">설정 하는 경우는 <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A> 에 <xref:System.Windows.Controls.ItemsControl>의 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 같이 생성 됩니다 (사용 하 여를 <xref:System.Windows.Controls.ListBox> 예를 들어):</span><span class="sxs-lookup"><span data-stu-id="9c0e7-497">When you set an <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A> on an <xref:System.Windows.Controls.ItemsControl>, the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] is generated as follows (using the <xref:System.Windows.Controls.ListBox> as an example):</span></span>  
  
1.  <span data-ttu-id="9c0e7-498">콘텐츠 생성 하는 동안 합니다 <xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A> 에 대 한 요청을 시작 합니다 <xref:System.Windows.Controls.ItemsControl.ItemContainerGenerator%2A> 각 데이터 항목에 대 한 컨테이너를 만들려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-498">During content generation, the <xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A> initiates a request for the <xref:System.Windows.Controls.ItemsControl.ItemContainerGenerator%2A> to create a container for each data item.</span></span> <span data-ttu-id="9c0e7-499">에 대 한 <xref:System.Windows.Controls.ListBox>, 컨테이너는 <xref:System.Windows.Controls.ListBoxItem>합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-499">For <xref:System.Windows.Controls.ListBox>, the container is a <xref:System.Windows.Controls.ListBoxItem>.</span></span> <span data-ttu-id="9c0e7-500">생성기를 다시 호출 합니다 <xref:System.Windows.Controls.ItemsControl> 컨테이너를 준비 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-500">The generator calls back into the <xref:System.Windows.Controls.ItemsControl> to prepare the container.</span></span>  
  
2.  <span data-ttu-id="9c0e7-501">준비 과정의 복사를 포함 합니다 <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A> 의 <xref:System.Windows.Controls.ListBox> 되도록를 <xref:System.Windows.Controls.ContentControl.ContentTemplate%2A> 의 <xref:System.Windows.Controls.ListBoxItem>.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-501">Part of the preparation involves the copying of the <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A> of the <xref:System.Windows.Controls.ListBox> to be the <xref:System.Windows.Controls.ContentControl.ContentTemplate%2A> of the <xref:System.Windows.Controls.ListBoxItem>.</span></span>  
  
3.  <span data-ttu-id="9c0e7-502">모든 비슷합니다 <xref:System.Windows.Controls.ContentControl> 형식에는 <xref:System.Windows.Controls.ControlTemplate> 의 <xref:System.Windows.Controls.ListBoxItem> 포함를 <xref:System.Windows.Controls.ContentPresenter>.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-502">Similar to all <xref:System.Windows.Controls.ContentControl> types, the <xref:System.Windows.Controls.ControlTemplate> of a <xref:System.Windows.Controls.ListBoxItem> contains a <xref:System.Windows.Controls.ContentPresenter>.</span></span> <span data-ttu-id="9c0e7-503">템플릿이 적용 된 경우 생성을 <xref:System.Windows.Controls.ContentPresenter> 해당 <xref:System.Windows.Controls.ContentPresenter.ContentTemplate%2A> 바인딩되는 <xref:System.Windows.Controls.ContentControl.ContentTemplate%2A> 의 <xref:System.Windows.Controls.ListBoxItem>합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-503">When the template is applied, it creates a <xref:System.Windows.Controls.ContentPresenter> whose <xref:System.Windows.Controls.ContentPresenter.ContentTemplate%2A> is bound to the <xref:System.Windows.Controls.ContentControl.ContentTemplate%2A> of the <xref:System.Windows.Controls.ListBoxItem>.</span></span>  
  
4.  <span data-ttu-id="9c0e7-504">마지막으로, 합니다 <xref:System.Windows.Controls.ContentPresenter> 적용 하는 <xref:System.Windows.Controls.ContentControl.ContentTemplate%2A> 자신에 만드는 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-504">Finally, the <xref:System.Windows.Controls.ContentPresenter> applies that <xref:System.Windows.Controls.ContentControl.ContentTemplate%2A> to itself, and that creates the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span>  
  
 <span data-ttu-id="9c0e7-505">둘 이상 있는 경우 <xref:System.Windows.DataTemplate> 정의 프로그래밍 방식으로 선택 하 고 적용 하는 논리를 제공 하려는 <xref:System.Windows.DataTemplate>를 사용 하 여는 <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-505">If you have more than one <xref:System.Windows.DataTemplate> defined and you want to supply logic to programmatically choose and apply a <xref:System.Windows.DataTemplate>, use the <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> property.</span></span>  
  
 <span data-ttu-id="9c0e7-506"><xref:System.Windows.Controls.ItemsControl> 시각적으로 사용자 지정에 대 한 뛰어난 유연성을 제공 하 고 대부분의 스타일 지정 및 템플릿 속성을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-506">The <xref:System.Windows.Controls.ItemsControl> provides great flexibility for visual customization and provides many styling and templating properties.</span></span> <span data-ttu-id="9c0e7-507">사용 된 <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> 속성 또는 <xref:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector%2A> 데이터 항목을 포함 하는 요소의 모양을 적용할 스타일을 설정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-507">Use the <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> property or the <xref:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector%2A> property to set a style to affect the appearance of the elements that contain the data items.</span></span> <span data-ttu-id="9c0e7-508">예를 들어 <xref:System.Windows.Controls.ListBox>, 생성 된 컨테이너는 <xref:System.Windows.Controls.ListBoxItem> 제어;에 대 한 <xref:System.Windows.Controls.ComboBox>, 이들은 <xref:System.Windows.Controls.ComboBoxItem> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-508">For example, for <xref:System.Windows.Controls.ListBox>, the generated containers are <xref:System.Windows.Controls.ListBoxItem> controls; for <xref:System.Windows.Controls.ComboBox>, they are <xref:System.Windows.Controls.ComboBoxItem> controls.</span></span> <span data-ttu-id="9c0e7-509">항목의 레이아웃에 영향을 주는 사용 된 <xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-509">To affect the layout of the items, use the <xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A> property.</span></span> <span data-ttu-id="9c0e7-510">그룹화에 컨트롤을 사용 하는 경우 사용할 수 있습니다 합니다 <xref:System.Windows.Controls.ItemsControl.GroupStyle%2A> 또는 <xref:System.Windows.Controls.ItemsControl.GroupStyleSelector%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-510">If you are using grouping on your control, you can use the <xref:System.Windows.Controls.ItemsControl.GroupStyle%2A> or <xref:System.Windows.Controls.ItemsControl.GroupStyleSelector%2A> property.</span></span>  
  
 <span data-ttu-id="9c0e7-511">자세한 내용은 [데이터 템플릿 개요](~/docs/framework/wpf/data/data-templating-overview.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-511">For more information, see [Data Templating Overview](~/docs/framework/wpf/data/data-templating-overview.md).</span></span>  
  
<a name="xamlAttributeUsage_ItemTemplate"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9c0e7-512">XAML 특성 사용</span><span class="sxs-lookup"><span data-stu-id="9c0e7-512">XAML Attribute Usage</span></span>  
  
```  
<object ItemTemplate=" ResourceExtension TemplateResourceKey"/>  
```  
  
<a name="xamlValues_ItemTemplate"></a>   
## <a name="xaml-values"></a><span data-ttu-id="9c0e7-513">XAML 값</span><span class="sxs-lookup"><span data-stu-id="9c0e7-513">XAML Values</span></span>  
 <span data-ttu-id="9c0e7-514">*ResourceExtension*</span><span class="sxs-lookup"><span data-stu-id="9c0e7-514">*ResourceExtension*</span></span>  
 <span data-ttu-id="9c0e7-515">다음 중 하나: [StaticResource 태그 확장](~/docs/framework/wpf/advanced/staticresource-markup-extension.md), 또는 [DynamicResource 태그 확장](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-515">One of the following: [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md), or [DynamicResource Markup Extension](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md).</span></span> <span data-ttu-id="9c0e7-516">스타일 자체 시스템 리소스 또는 사용자 기본 설정 등의 잠재적인 런타임 참조가 포함 되어 있지 않으면 [StaticResource 태그 확장](~/docs/framework/wpf/advanced/staticresource-markup-extension.md) 스타일에 대 한 참조는 일반적으로 성능을 위해 권장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-516">Unless the styles themselves contain references to potential run-time references such as system resources or user preferences, [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md) reference to a style is usually recommended for performance.</span></span>  
  
 <span data-ttu-id="9c0e7-517">*TemplateResourceKey*</span><span class="sxs-lookup"><span data-stu-id="9c0e7-517">*TemplateResourceKey*</span></span>  
 <span data-ttu-id="9c0e7-518">[X:key 지시문](~/docs/framework/xaml-services/x-key-directive.md) 리소스로 요청 되는 템플릿을 참조 하는 문자열 값입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-518">[x:Key Directive](~/docs/framework/xaml-services/x-key-directive.md) string value referring to the template being requested as a resource.</span></span>  
  
<a name="dependencyPropertyInfo_ItemTemplate"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="9c0e7-519">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="9c0e7-519">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9c0e7-520">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="9c0e7-520">Identifier field</span></span>|<xref:System.Windows.Controls.ItemsControl.ItemTemplateProperty>|  
|<span data-ttu-id="9c0e7-521">메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="9c0e7-521">Metadata properties set to `true`</span></span>|<span data-ttu-id="9c0e7-522">없음</span><span class="sxs-lookup"><span data-stu-id="9c0e7-522">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="9c0e7-523">다음 예제에서는 만드는 방법을 보여 줍니다는 <xref:System.Windows.DataTemplate> 인라인 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-523">The following example shows how to create a <xref:System.Windows.DataTemplate> inline.</span></span> <span data-ttu-id="9c0e7-524">합니다 <xref:System.Windows.DataTemplate> 각 데이터 항목 3으로 나타나도록 지정 <xref:System.Windows.Controls.TextBlock> 내의 요소는 <xref:System.Windows.Controls.StackPanel>합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-524">The <xref:System.Windows.DataTemplate> specifies that each data item appears as three <xref:System.Windows.Controls.TextBlock> elements within a <xref:System.Windows.Controls.StackPanel>.</span></span> <span data-ttu-id="9c0e7-525">이 예제에서는 데이터 개체는 라는 클래스 `Task`합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-525">In this example, the data object is a class called `Task`.</span></span> <span data-ttu-id="9c0e7-526">각 <xref:System.Windows.Controls.TextBlock> 의 속성에이 템플릿의 바인딩되는 `Task` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-526">Note that each <xref:System.Windows.Controls.TextBlock> element in this template is bound to a property of the `Task` class.</span></span>  
  
 [!code-xaml[DataTemplatingIntro_snip#Inline](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#inline)]  
  
 <span data-ttu-id="9c0e7-527">보다 일반적인 정의 하는 것을 <xref:System.Windows.DataTemplate> 다음 예제와 같이 개체를 다시 사용할 수 있도록 리소스 섹션에서:</span><span class="sxs-lookup"><span data-stu-id="9c0e7-527">It is more common to define a <xref:System.Windows.DataTemplate> in the resources section so it can be a reusable object, as in the following example:</span></span>  
  
 [!code-xaml[DataTemplatingIntro_snip#R1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#r1)]  
[!code-xaml[DataTemplatingIntro_snip#AsResource](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#asresource)]  
[!code-xaml[DataTemplatingIntro_snip#R2](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#r2)]  
  
 <span data-ttu-id="9c0e7-528">이제 다음 예제와 같이 `myTaskTemplate`을 리소스로 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-528">Now you can use `myTaskTemplate` as a resource, as in the following example:</span></span>  
  
 [!code-xaml[DataTemplatingIntro_snip#MyTaskTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#mytasktemplate)]  
  
 <span data-ttu-id="9c0e7-529">전체 샘플을 보려면 [Introduction to Data Templating Sample](http://go.microsoft.com/fwlink/?LinkID=160009)(데이터 템플릿 샘플 소개)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-529">For the complete sample, see [Introduction to Data Templating Sample](http://go.microsoft.com/fwlink/?LinkID=160009).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath" />
        <altmember cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" />
      </Docs>
    </Member>
    <Member MemberName="ItemTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ItemTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ItemTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ItemsControl.ItemTemplateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ItemTemplateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ItemTemplateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ItemTemplateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ItemsControl.ItemTemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-530">
            <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> 종속성 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-530">Identifies the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataTemplateSelector ItemTemplateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.DataTemplateSelector ItemTemplateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemTemplateSelector As DataTemplateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::DataTemplateSelector ^ ItemTemplateSelector { System::Windows::Controls::DataTemplateSelector ^ get(); void set(System::Windows::Controls::DataTemplateSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemTemplateSelector : System.Windows.Controls.DataTemplateSelector with get, set" Usage="System.Windows.Controls.ItemsControl.ItemTemplateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-531">각 항목을 표시하는 데 사용되는 템플릿을 선택하기 위한 사용자 지정 논리를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-531">Gets or sets the custom logic for choosing a template used to display each item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0e7-532">논리를 제공하며 <see cref="T:System.Windows.Controls.DataTemplateSelector" />을 반환하는 사용자 지정 <see cref="T:System.Windows.DataTemplate" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-532">A custom <see cref="T:System.Windows.Controls.DataTemplateSelector" /> object that provides logic and returns a <see cref="T:System.Windows.DataTemplate" />.</span>
          </span>
          <span data-ttu-id="9c0e7-533">기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-533">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c0e7-534">사용할는 <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A> 데이터 개체의 시각화를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-534">You use the <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A> to specify the visualization of the data objects.</span></span> <span data-ttu-id="9c0e7-535">정의 된 둘 이상의 템플릿을 있고 사용할 템플릿을 반환 하는 논리를 제공 하려는 경우이 속성을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-535">If you have more than one template defined and want to supply logic to return a template to use, then you use this property.</span></span> <span data-ttu-id="9c0e7-536">있으면이 속성은 무시 됩니다 <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A> 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-536">Note that this property is ignored if <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A> is set.</span></span>  
  
 <span data-ttu-id="9c0e7-537"><xref:System.Windows.Controls.ItemsControl> 시각적으로 사용자 지정에 대 한 뛰어난 유연성을 제공 하 고 대부분의 스타일 지정 및 템플릿 속성을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-537">The <xref:System.Windows.Controls.ItemsControl> provides great flexibility for visual customization and provides many styling and templating properties.</span></span> <span data-ttu-id="9c0e7-538">사용 된 <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> 속성 또는 <xref:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector%2A> 데이터 항목을 포함 하는 요소의 모양을 적용할 스타일을 설정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-538">Use the <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> property or the <xref:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector%2A> property to set a style to affect the appearance of the elements that contain the data items.</span></span> <span data-ttu-id="9c0e7-539">예를 들어 <xref:System.Windows.Controls.ListBox>, 생성 된 컨테이너는 <xref:System.Windows.Controls.ListBoxItem> 제어;에 대 한 <xref:System.Windows.Controls.ComboBox>, 이들은 <xref:System.Windows.Controls.ComboBoxItem> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-539">For example, for <xref:System.Windows.Controls.ListBox>, the generated containers are <xref:System.Windows.Controls.ListBoxItem> controls; for <xref:System.Windows.Controls.ComboBox>, they are <xref:System.Windows.Controls.ComboBoxItem> controls.</span></span> <span data-ttu-id="9c0e7-540">항목의 레이아웃에 영향을 주는 사용 된 <xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-540">To affect the layout of the items, use the <xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A> property.</span></span> <span data-ttu-id="9c0e7-541">그룹화에 컨트롤을 사용 하는 경우 사용할 수 있습니다 합니다 <xref:System.Windows.Controls.ItemsControl.GroupStyle%2A> 또는 <xref:System.Windows.Controls.ItemsControl.GroupStyleSelector%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-541">If you are using grouping on your control, you can use the <xref:System.Windows.Controls.ItemsControl.GroupStyle%2A> or <xref:System.Windows.Controls.ItemsControl.GroupStyleSelector%2A> property.</span></span>  
  
 <span data-ttu-id="9c0e7-542">자세한 내용은 [데이터 템플릿 개요](~/docs/framework/wpf/data/data-templating-overview.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-542">For more information, see [Data Templating Overview](~/docs/framework/wpf/data/data-templating-overview.md).</span></span>  
  
<a name="xamlAttributeUsage_ItemTemplateSelector"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9c0e7-543">XAML 특성 사용</span><span class="sxs-lookup"><span data-stu-id="9c0e7-543">XAML Attribute Usage</span></span>  
  
```  
<object ItemTemplateSelector="ResourceExtension SelectorResourceKey"/>  
```  
  
<a name="xamlValues_ItemTemplateSelector"></a>   
## <a name="xaml-values"></a><span data-ttu-id="9c0e7-544">XAML 값</span><span class="sxs-lookup"><span data-stu-id="9c0e7-544">XAML Values</span></span>  
 <span data-ttu-id="9c0e7-545">*ResourceExtension*</span><span class="sxs-lookup"><span data-stu-id="9c0e7-545">*ResourceExtension*</span></span>  
 <span data-ttu-id="9c0e7-546">다음 중 하나: `StaticResource`, 또는 `DynamicResource`합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-546">One of the following: `StaticResource`, or `DynamicResource`.</span></span> <span data-ttu-id="9c0e7-547">스타일 자체 시스템 리소스 또는 사용자 기본 설정 등의 잠재적인 런타임 참조가 포함 되어 있지 않으면 `StaticResource` 스타일에 대 한 참조는 일반적으로 성능을 위해 권장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-547">Unless the styles themselves contain references to potential run-time references such as system resources or user preferences, `StaticResource` reference to a style is usually recommended for performance.</span></span>  
  
 <span data-ttu-id="9c0e7-548">*SelectorResourceKey*</span><span class="sxs-lookup"><span data-stu-id="9c0e7-548">*SelectorResourceKey*</span></span>  
 <span data-ttu-id="9c0e7-549">`x:Key` 리소스로 요청 중인 선택기를 참조 하는 문자열 값입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-549">`x:Key` string value referring to the selector being requested as a resource.</span></span>  
  
<a name="dependencyPropertyInfo_ItemTemplateSelector"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="9c0e7-550">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="9c0e7-550">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9c0e7-551">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="9c0e7-551">Identifier field</span></span>|<xref:System.Windows.Controls.ItemsControl.ItemTemplateSelectorProperty>|  
|<span data-ttu-id="9c0e7-552">메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="9c0e7-552">Metadata properties set to `true`</span></span>|<span data-ttu-id="9c0e7-553">없음</span><span class="sxs-lookup"><span data-stu-id="9c0e7-553">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="9c0e7-554">다음 예에서 `auctionItemDataTemplateSelector` 리소스 이름 (해당 하는 `AuctionItemDataTemplateSelector` 클래스)에 할당 된를 <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> 의 속성은 <xref:System.Windows.Controls.ItemsControl>합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-554">In the following example, the `auctionItemDataTemplateSelector` resource name (corresponding to an `AuctionItemDataTemplateSelector` class) is assigned to the <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> property of the <xref:System.Windows.Controls.ItemsControl>.</span></span>  
  
 [!code-xaml[DataTemplateSelector#ItemTemplateSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplateSelector/CSharp/Window1.xaml#itemtemplateselector)]  
  
 <span data-ttu-id="9c0e7-555">다음 예제에서는 구현의 합니다 `AuctionItemDataTemplateSelector` 재정의 사용 하 여 클래스를 <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> 메서드:</span><span class="sxs-lookup"><span data-stu-id="9c0e7-555">The following example shows the implementation of the `AuctionItemDataTemplateSelector` class with an override of the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method:</span></span>  
  
 [!code-csharp[DataTemplateSelector#DataTemplateSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplateSelector/CSharp/AuctionItemDataTemplateSelector.cs#datatemplateselector)]
 [!code-vb[DataTemplateSelector#DataTemplateSelector](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataTemplateSelector/visualbasic/auctionitemdatatemplateselector.vb#datatemplateselector)]  
  
 <span data-ttu-id="9c0e7-556">내에서 예제의 경우는 <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> 메서드 클래스는 값에 따라 적절 한 템플릿을 반환 하는 논리를 `SpecialFeatures` 의 속성을 `item` 전달 되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-556">In this case, within the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method of the class, there is logic to return the appropriate template based on the value of the `SpecialFeatures` property of the `item` object passed.</span></span> <span data-ttu-id="9c0e7-557">반환할 템플릿은 상위의 리소스에 위치한 <xref:System.Windows.Window> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-557">The template to return is found in the resources of the enveloping <xref:System.Windows.Window> element.</span></span>  
  
 <span data-ttu-id="9c0e7-558">설정한 경우는 <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> 속성을는 <xref:System.Windows.Controls.ItemsControl> 자동으로 호출에 전달 되는 <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> 메서드의 `AuctionItemDataTemplateSelector` 각는 컬렉션의 항목에 대 한는 <xref:System.Windows.Controls.ItemsControl> 바인딩된.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-558">When you set the <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> property, the <xref:System.Windows.Controls.ItemsControl> is directed to automatically call the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method of `AuctionItemDataTemplateSelector` for each of the items in the collection to which the <xref:System.Windows.Controls.ItemsControl> is bound.</span></span> <span data-ttu-id="9c0e7-559">호출 개체와 데이터 항목을 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-559">The call passes the data item as an object.</span></span> <span data-ttu-id="9c0e7-560"><xref:System.Windows.DataTemplate> 에서 반환 하는 메서드는 다음 해당 데이터 항목을 표시 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-560">The <xref:System.Windows.DataTemplate> that is returned by the method is then used to display that data item.</span></span>  
  
 <span data-ttu-id="9c0e7-561">다른 예제를 보려면 [데이터 템플릿 개요](~/docs/framework/wpf/data/data-templating-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-561">For another example, see [Data Templating Overview](~/docs/framework/wpf/data/data-templating-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTemplateSelectorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ItemTemplateSelectorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ItemTemplateSelectorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ItemsControl.ItemTemplateSelectorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ItemTemplateSelectorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ItemTemplateSelectorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ItemTemplateSelectorProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ItemsControl.ItemTemplateSelectorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-562">
            <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> 종속성 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-562">Identifies the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemsControl.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalChildren : System.Collections.IEnumerator" Usage="System.Windows.Controls.ItemsControl.LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-563">
            <see cref="T:System.Windows.Controls.ItemsControl" /> 개체의 논리적 자식 개체에 대한 열거자를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-563">Gets an enumerator for the logical child objects of the <see cref="T:System.Windows.Controls.ItemsControl" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0e7-564">
            <see cref="T:System.Windows.Controls.ItemsControl" /> 개체의 논리적 자식 개체에 대한 열거자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-564">An enumerator for the logical child objects of the <see cref="T:System.Windows.Controls.ItemsControl" /> object.</span>
          </span>
          <span data-ttu-id="9c0e7-565">기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-565">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAlternationCountChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAlternationCountChanged (int oldAlternationCount, int newAlternationCount);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAlternationCountChanged(int32 oldAlternationCount, int32 newAlternationCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.OnAlternationCountChanged(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAlternationCountChanged (oldAlternationCount As Integer, newAlternationCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAlternationCountChanged(int oldAlternationCount, int newAlternationCount);" />
      <MemberSignature Language="F#" Value="abstract member OnAlternationCountChanged : int * int -&gt; unit&#xA;override this.OnAlternationCountChanged : int * int -&gt; unit" Usage="itemsControl.OnAlternationCountChanged (oldAlternationCount, newAlternationCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldAlternationCount" Type="System.Int32" />
        <Parameter Name="newAlternationCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="oldAlternationCount">
          <span data-ttu-id="9c0e7-566">
            <see cref="P:System.Windows.Controls.ItemsControl.AlternationCount" />의 이전 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-566">The old value of <see cref="P:System.Windows.Controls.ItemsControl.AlternationCount" />.</span>
          </span>
        </param>
        <param name="newAlternationCount">
          <span data-ttu-id="9c0e7-567">
            <see cref="P:System.Windows.Controls.ItemsControl.AlternationCount" />의 새 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-567">The new value of <see cref="P:System.Windows.Controls.ItemsControl.AlternationCount" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0e7-568">
            <see cref="P:System.Windows.Controls.ItemsControl.AlternationCount" /> 속성이 변경되면 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-568">Invoked when the <see cref="P:System.Windows.Controls.ItemsControl.AlternationCount" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDisplayMemberPathChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDisplayMemberPathChanged (string oldDisplayMemberPath, string newDisplayMemberPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDisplayMemberPathChanged(string oldDisplayMemberPath, string newDisplayMemberPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.OnDisplayMemberPathChanged(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDisplayMemberPathChanged (oldDisplayMemberPath As String, newDisplayMemberPath As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDisplayMemberPathChanged(System::String ^ oldDisplayMemberPath, System::String ^ newDisplayMemberPath);" />
      <MemberSignature Language="F#" Value="abstract member OnDisplayMemberPathChanged : string * string -&gt; unit&#xA;override this.OnDisplayMemberPathChanged : string * string -&gt; unit" Usage="itemsControl.OnDisplayMemberPathChanged (oldDisplayMemberPath, newDisplayMemberPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldDisplayMemberPath" Type="System.String" />
        <Parameter Name="newDisplayMemberPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="oldDisplayMemberPath">
          <span data-ttu-id="9c0e7-569">
            <see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath" /> 속성의 이전 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-569">The old value of the <see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath" /> property.</span>
          </span>
        </param>
        <param name="newDisplayMemberPath">
          <span data-ttu-id="9c0e7-570">
            <see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath" /> 속성의 새 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-570">New value of the <see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0e7-571">
            <see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath" /> 속성이 변경되면 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-571">Invoked when the <see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGroupStyleSelectorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnGroupStyleSelectorChanged (System.Windows.Controls.GroupStyleSelector oldGroupStyleSelector, System.Windows.Controls.GroupStyleSelector newGroupStyleSelector);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGroupStyleSelectorChanged(class System.Windows.Controls.GroupStyleSelector oldGroupStyleSelector, class System.Windows.Controls.GroupStyleSelector newGroupStyleSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.OnGroupStyleSelectorChanged(System.Windows.Controls.GroupStyleSelector,System.Windows.Controls.GroupStyleSelector)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGroupStyleSelectorChanged (oldGroupStyleSelector As GroupStyleSelector, newGroupStyleSelector As GroupStyleSelector)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGroupStyleSelectorChanged(System::Windows::Controls::GroupStyleSelector ^ oldGroupStyleSelector, System::Windows::Controls::GroupStyleSelector ^ newGroupStyleSelector);" />
      <MemberSignature Language="F#" Value="abstract member OnGroupStyleSelectorChanged : System.Windows.Controls.GroupStyleSelector * System.Windows.Controls.GroupStyleSelector -&gt; unit&#xA;override this.OnGroupStyleSelectorChanged : System.Windows.Controls.GroupStyleSelector * System.Windows.Controls.GroupStyleSelector -&gt; unit" Usage="itemsControl.OnGroupStyleSelectorChanged (oldGroupStyleSelector, newGroupStyleSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldGroupStyleSelector" Type="System.Windows.Controls.GroupStyleSelector" />
        <Parameter Name="newGroupStyleSelector" Type="System.Windows.Controls.GroupStyleSelector" />
      </Parameters>
      <Docs>
        <param name="oldGroupStyleSelector">
          <span data-ttu-id="9c0e7-572">
            <see cref="P:System.Windows.Controls.ItemsControl.GroupStyleSelector" /> 속성의 이전 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-572">Old value of the <see cref="P:System.Windows.Controls.ItemsControl.GroupStyleSelector" /> property.</span>
          </span>
        </param>
        <param name="newGroupStyleSelector">
          <span data-ttu-id="9c0e7-573">
            <see cref="P:System.Windows.Controls.ItemsControl.GroupStyleSelector" /> 속성의 새 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-573">New value of the <see cref="P:System.Windows.Controls.ItemsControl.GroupStyleSelector" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0e7-574">
            <see cref="P:System.Windows.Controls.ItemsControl.GroupStyleSelector" /> 속성이 변경되면 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-574">Invoked when the <see cref="P:System.Windows.Controls.ItemsControl.GroupStyleSelector" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemBindingGroupChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemBindingGroupChanged (System.Windows.Data.BindingGroup oldItemBindingGroup, System.Windows.Data.BindingGroup newItemBindingGroup);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemBindingGroupChanged(class System.Windows.Data.BindingGroup oldItemBindingGroup, class System.Windows.Data.BindingGroup newItemBindingGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.OnItemBindingGroupChanged(System.Windows.Data.BindingGroup,System.Windows.Data.BindingGroup)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemBindingGroupChanged (oldItemBindingGroup As BindingGroup, newItemBindingGroup As BindingGroup)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemBindingGroupChanged(System::Windows::Data::BindingGroup ^ oldItemBindingGroup, System::Windows::Data::BindingGroup ^ newItemBindingGroup);" />
      <MemberSignature Language="F#" Value="abstract member OnItemBindingGroupChanged : System.Windows.Data.BindingGroup * System.Windows.Data.BindingGroup -&gt; unit&#xA;override this.OnItemBindingGroupChanged : System.Windows.Data.BindingGroup * System.Windows.Data.BindingGroup -&gt; unit" Usage="itemsControl.OnItemBindingGroupChanged (oldItemBindingGroup, newItemBindingGroup)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldItemBindingGroup" Type="System.Windows.Data.BindingGroup" />
        <Parameter Name="newItemBindingGroup" Type="System.Windows.Data.BindingGroup" />
      </Parameters>
      <Docs>
        <param name="oldItemBindingGroup">
          <span data-ttu-id="9c0e7-575">
            <see cref="P:System.Windows.Controls.ItemsControl.ItemBindingGroup" />의 이전 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-575">The old value of the <see cref="P:System.Windows.Controls.ItemsControl.ItemBindingGroup" />.</span>
          </span>
        </param>
        <param name="newItemBindingGroup">
          <span data-ttu-id="9c0e7-576">
            <see cref="P:System.Windows.Controls.ItemsControl.ItemBindingGroup" />의 새 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-576">The new value of the <see cref="P:System.Windows.Controls.ItemsControl.ItemBindingGroup" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0e7-577">
            <see cref="P:System.Windows.Controls.ItemsControl.ItemBindingGroup" /> 속성이 변경되면 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-577">Invoked when the <see cref="P:System.Windows.Controls.ItemsControl.ItemBindingGroup" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemContainerStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemContainerStyleChanged (System.Windows.Style oldItemContainerStyle, System.Windows.Style newItemContainerStyle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemContainerStyleChanged(class System.Windows.Style oldItemContainerStyle, class System.Windows.Style newItemContainerStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.OnItemContainerStyleChanged(System.Windows.Style,System.Windows.Style)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemContainerStyleChanged (oldItemContainerStyle As Style, newItemContainerStyle As Style)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemContainerStyleChanged(System::Windows::Style ^ oldItemContainerStyle, System::Windows::Style ^ newItemContainerStyle);" />
      <MemberSignature Language="F#" Value="abstract member OnItemContainerStyleChanged : System.Windows.Style * System.Windows.Style -&gt; unit&#xA;override this.OnItemContainerStyleChanged : System.Windows.Style * System.Windows.Style -&gt; unit" Usage="itemsControl.OnItemContainerStyleChanged (oldItemContainerStyle, newItemContainerStyle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldItemContainerStyle" Type="System.Windows.Style" />
        <Parameter Name="newItemContainerStyle" Type="System.Windows.Style" />
      </Parameters>
      <Docs>
        <param name="oldItemContainerStyle">
          <span data-ttu-id="9c0e7-578">
            <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> 속성의 이전 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-578">Old value of the <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> property.</span>
          </span>
        </param>
        <param name="newItemContainerStyle">
          <span data-ttu-id="9c0e7-579">
            <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> 속성의 새 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-579">New value of the <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0e7-580">
            <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> 속성이 변경되면 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-580">Invoked when the <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemContainerStyleSelectorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemContainerStyleSelectorChanged (System.Windows.Controls.StyleSelector oldItemContainerStyleSelector, System.Windows.Controls.StyleSelector newItemContainerStyleSelector);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemContainerStyleSelectorChanged(class System.Windows.Controls.StyleSelector oldItemContainerStyleSelector, class System.Windows.Controls.StyleSelector newItemContainerStyleSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.OnItemContainerStyleSelectorChanged(System.Windows.Controls.StyleSelector,System.Windows.Controls.StyleSelector)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemContainerStyleSelectorChanged (oldItemContainerStyleSelector As StyleSelector, newItemContainerStyleSelector As StyleSelector)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemContainerStyleSelectorChanged(System::Windows::Controls::StyleSelector ^ oldItemContainerStyleSelector, System::Windows::Controls::StyleSelector ^ newItemContainerStyleSelector);" />
      <MemberSignature Language="F#" Value="abstract member OnItemContainerStyleSelectorChanged : System.Windows.Controls.StyleSelector * System.Windows.Controls.StyleSelector -&gt; unit&#xA;override this.OnItemContainerStyleSelectorChanged : System.Windows.Controls.StyleSelector * System.Windows.Controls.StyleSelector -&gt; unit" Usage="itemsControl.OnItemContainerStyleSelectorChanged (oldItemContainerStyleSelector, newItemContainerStyleSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldItemContainerStyleSelector" Type="System.Windows.Controls.StyleSelector" />
        <Parameter Name="newItemContainerStyleSelector" Type="System.Windows.Controls.StyleSelector" />
      </Parameters>
      <Docs>
        <param name="oldItemContainerStyleSelector">
          <span data-ttu-id="9c0e7-581">
            <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> 속성의 이전 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-581">Old value of the <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> property.</span>
          </span>
        </param>
        <param name="newItemContainerStyleSelector">
          <span data-ttu-id="9c0e7-582">
            <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> 속성의 새 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-582">New value of the <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0e7-583">
            <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> 속성이 변경되면 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-583">Invoked when the <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemsChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemsChanged(class System.Collections.Specialized.NotifyCollectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemsChanged (e As NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemsChanged(System::Collections::Specialized::NotifyCollectionChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemsChanged : System.Collections.Specialized.NotifyCollectionChangedEventArgs -&gt; unit&#xA;override this.OnItemsChanged : System.Collections.Specialized.NotifyCollectionChangedEventArgs -&gt; unit" Usage="itemsControl.OnItemsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Collections.Specialized.NotifyCollectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="9c0e7-584">변경에 대한 정보입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-584">Information about the change.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0e7-585">
            <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 속성이 변경되면 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-585">Invoked when the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemsPanelChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemsPanelChanged (System.Windows.Controls.ItemsPanelTemplate oldItemsPanel, System.Windows.Controls.ItemsPanelTemplate newItemsPanel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemsPanelChanged(class System.Windows.Controls.ItemsPanelTemplate oldItemsPanel, class System.Windows.Controls.ItemsPanelTemplate newItemsPanel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.OnItemsPanelChanged(System.Windows.Controls.ItemsPanelTemplate,System.Windows.Controls.ItemsPanelTemplate)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemsPanelChanged (oldItemsPanel As ItemsPanelTemplate, newItemsPanel As ItemsPanelTemplate)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemsPanelChanged(System::Windows::Controls::ItemsPanelTemplate ^ oldItemsPanel, System::Windows::Controls::ItemsPanelTemplate ^ newItemsPanel);" />
      <MemberSignature Language="F#" Value="abstract member OnItemsPanelChanged : System.Windows.Controls.ItemsPanelTemplate * System.Windows.Controls.ItemsPanelTemplate -&gt; unit&#xA;override this.OnItemsPanelChanged : System.Windows.Controls.ItemsPanelTemplate * System.Windows.Controls.ItemsPanelTemplate -&gt; unit" Usage="itemsControl.OnItemsPanelChanged (oldItemsPanel, newItemsPanel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldItemsPanel" Type="System.Windows.Controls.ItemsPanelTemplate" />
        <Parameter Name="newItemsPanel" Type="System.Windows.Controls.ItemsPanelTemplate" />
      </Parameters>
      <Docs>
        <param name="oldItemsPanel">
          <span data-ttu-id="9c0e7-586">
            <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel" /> 속성의 이전 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-586">Old value of the <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel" /> property.</span>
          </span>
        </param>
        <param name="newItemsPanel">
          <span data-ttu-id="9c0e7-587">
            <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel" /> 속성의 새 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-587">New value of the <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0e7-588">
            <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel" /> 속성이 변경되면 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-588">Invoked when the <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemsSourceChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemsSourceChanged (System.Collections.IEnumerable oldValue, System.Collections.IEnumerable newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemsSourceChanged(class System.Collections.IEnumerable oldValue, class System.Collections.IEnumerable newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemsSourceChanged (oldValue As IEnumerable, newValue As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemsSourceChanged(System::Collections::IEnumerable ^ oldValue, System::Collections::IEnumerable ^ newValue);" />
      <MemberSignature Language="F#" Value="abstract member OnItemsSourceChanged : System.Collections.IEnumerable * System.Collections.IEnumerable -&gt; unit&#xA;override this.OnItemsSourceChanged : System.Collections.IEnumerable * System.Collections.IEnumerable -&gt; unit" Usage="itemsControl.OnItemsSourceChanged (oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="System.Collections.IEnumerable" />
        <Parameter Name="newValue" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="oldValue">
          <span data-ttu-id="9c0e7-589">
            <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> 속성의 이전 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-589">Old value of the <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> property.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="9c0e7-590">
            <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> 속성의 새 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-590">New value of the <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0e7-591">
            <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> 속성이 변경되면 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-591">Called when the <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemStringFormatChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemStringFormatChanged (string oldItemStringFormat, string newItemStringFormat);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemStringFormatChanged(string oldItemStringFormat, string newItemStringFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.OnItemStringFormatChanged(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemStringFormatChanged (oldItemStringFormat As String, newItemStringFormat As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemStringFormatChanged(System::String ^ oldItemStringFormat, System::String ^ newItemStringFormat);" />
      <MemberSignature Language="F#" Value="abstract member OnItemStringFormatChanged : string * string -&gt; unit&#xA;override this.OnItemStringFormatChanged : string * string -&gt; unit" Usage="itemsControl.OnItemStringFormatChanged (oldItemStringFormat, newItemStringFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldItemStringFormat" Type="System.String" />
        <Parameter Name="newItemStringFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="oldItemStringFormat">
          <span data-ttu-id="9c0e7-592">
            <see cref="P:System.Windows.Controls.ItemsControl.ItemStringFormat" /> 속성의 이전 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-592">The old value of the <see cref="P:System.Windows.Controls.ItemsControl.ItemStringFormat" /> property.</span>
          </span>
        </param>
        <param name="newItemStringFormat">
          <span data-ttu-id="9c0e7-593">
            <see cref="P:System.Windows.Controls.ItemsControl.ItemStringFormat" /> 속성의 새 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-593">The new value of the <see cref="P:System.Windows.Controls.ItemsControl.ItemStringFormat" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0e7-594">
            <see cref="P:System.Windows.Controls.ItemsControl.ItemStringFormat" /> 속성이 변경되면 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-594">Invoked when the <see cref="P:System.Windows.Controls.ItemsControl.ItemStringFormat" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemTemplateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemTemplateChanged (System.Windows.DataTemplate oldItemTemplate, System.Windows.DataTemplate newItemTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemTemplateChanged(class System.Windows.DataTemplate oldItemTemplate, class System.Windows.DataTemplate newItemTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.OnItemTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemTemplateChanged (oldItemTemplate As DataTemplate, newItemTemplate As DataTemplate)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemTemplateChanged(System::Windows::DataTemplate ^ oldItemTemplate, System::Windows::DataTemplate ^ newItemTemplate);" />
      <MemberSignature Language="F#" Value="abstract member OnItemTemplateChanged : System.Windows.DataTemplate * System.Windows.DataTemplate -&gt; unit&#xA;override this.OnItemTemplateChanged : System.Windows.DataTemplate * System.Windows.DataTemplate -&gt; unit" Usage="itemsControl.OnItemTemplateChanged (oldItemTemplate, newItemTemplate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldItemTemplate" Type="System.Windows.DataTemplate" />
        <Parameter Name="newItemTemplate" Type="System.Windows.DataTemplate" />
      </Parameters>
      <Docs>
        <param name="oldItemTemplate">
          <span data-ttu-id="9c0e7-595">이전 <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> 속성 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-595">The old <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> property value.</span>
          </span>
        </param>
        <param name="newItemTemplate">
          <span data-ttu-id="9c0e7-596">새 <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> 속성 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-596">The new <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> property value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0e7-597">
            <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> 속성이 변경되면 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-597">Invoked when the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemTemplateSelectorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemTemplateSelectorChanged (System.Windows.Controls.DataTemplateSelector oldItemTemplateSelector, System.Windows.Controls.DataTemplateSelector newItemTemplateSelector);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemTemplateSelectorChanged(class System.Windows.Controls.DataTemplateSelector oldItemTemplateSelector, class System.Windows.Controls.DataTemplateSelector newItemTemplateSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.OnItemTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemTemplateSelectorChanged (oldItemTemplateSelector As DataTemplateSelector, newItemTemplateSelector As DataTemplateSelector)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemTemplateSelectorChanged(System::Windows::Controls::DataTemplateSelector ^ oldItemTemplateSelector, System::Windows::Controls::DataTemplateSelector ^ newItemTemplateSelector);" />
      <MemberSignature Language="F#" Value="abstract member OnItemTemplateSelectorChanged : System.Windows.Controls.DataTemplateSelector * System.Windows.Controls.DataTemplateSelector -&gt; unit&#xA;override this.OnItemTemplateSelectorChanged : System.Windows.Controls.DataTemplateSelector * System.Windows.Controls.DataTemplateSelector -&gt; unit" Usage="itemsControl.OnItemTemplateSelectorChanged (oldItemTemplateSelector, newItemTemplateSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldItemTemplateSelector" Type="System.Windows.Controls.DataTemplateSelector" />
        <Parameter Name="newItemTemplateSelector" Type="System.Windows.Controls.DataTemplateSelector" />
      </Parameters>
      <Docs>
        <param name="oldItemTemplateSelector">
          <span data-ttu-id="9c0e7-598">
            <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> 속성의 이전 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-598">Old value of the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> property.</span>
          </span>
        </param>
        <param name="newItemTemplateSelector">
          <span data-ttu-id="9c0e7-599">
            <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> 속성의 새 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-599">New value of the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0e7-600">
            <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> 속성이 변경되면 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-600">Invoked when the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="itemsControl.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="9c0e7-601">이벤트 정보입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-601">Information about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0e7-602">
            <see cref="E:System.Windows.UIElement.KeyDown" /> 이벤트가 수신될 때 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-602">Invoked when the <see cref="E:System.Windows.UIElement.KeyDown" /> event is received.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected override void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit" Usage="itemsControl.OnTextInput e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="9c0e7-603">이벤트 정보입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-603">Information about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0e7-604">
            <see cref="E:System.Windows.UIElement.TextInput" /> 이벤트가 수신될 때 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-604">Invoked when the <see cref="E:System.Windows.UIElement.TextInput" /> event is received.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected virtual void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member PrepareContainerForItemOverride : System.Windows.DependencyObject * obj -&gt; unit&#xA;override this.PrepareContainerForItemOverride : System.Windows.DependencyObject * obj -&gt; unit" Usage="itemsControl.PrepareContainerForItemOverride (element, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="9c0e7-605">지정된 항목을 표시하는 데 사용되는 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-605">Element used to display the specified item.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="9c0e7-606">지정한 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-606">Specified item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0e7-607">지정한 항목을 표시하기 위해 지정한 요소를 준비합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-607">Prepares the specified element to display the specified item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c0e7-608">요소를 준비 하 고 스타일, 바인딩 설정 적용을 포함 하 고 등 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9c0e7-608">Preparing the element may involve applying styles, setting bindings, and so on.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldApplyItemContainerStyle">
      <MemberSignature Language="C#" Value="protected virtual bool ShouldApplyItemContainerStyle (System.Windows.DependencyObject container, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ShouldApplyItemContainerStyle(class System.Windows.DependencyObject container, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.ShouldApplyItemContainerStyle(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ShouldApplyItemContainerStyle (container As DependencyObject, item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ShouldApplyItemContainerStyle(System::Windows::DependencyObject ^ container, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member ShouldApplyItemContainerStyle : System.Windows.DependencyObject * obj -&gt; bool&#xA;override this.ShouldApplyItemContainerStyle : System.Windows.DependencyObject * obj -&gt; bool" Usage="itemsControl.ShouldApplyItemContainerStyle (container, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="container">
          <span data-ttu-id="9c0e7-609">컨테이너 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-609">The container element.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="9c0e7-610">관심 있는 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-610">The item of interest.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0e7-611">
            <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> 또는 <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> 속성의 스타일을 지정된 항목의 컨테이너 요소에 적용할지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-611">Returns a value that indicates whether to apply the style from the <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> or <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> property to the container element of the specified item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9c0e7-612">기본 구현에서는 항상 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-612">Always <see langword="true" /> for the base implementation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeGroupStyle">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeGroupStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeGroupStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.ShouldSerializeGroupStyle" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeGroupStyle () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeGroupStyle();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeGroupStyle : unit -&gt; bool" Usage="itemsControl.ShouldSerializeGroupStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-613">serialization 프로세스를 통해 <see cref="P:System.Windows.Controls.ItemsControl.GroupStyle" /> 속성의 유효 값을 serialize해야 하는지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-613">Returns a value that indicates whether serialization processes should serialize the effective value of the <see cref="P:System.Windows.Controls.ItemsControl.GroupStyle" /> property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9c0e7-614">
            <see cref="P:System.Windows.Controls.ItemsControl.GroupStyle" /> 속성 값을 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-614">
              <see langword="true" /> if the <see cref="P:System.Windows.Controls.ItemsControl.GroupStyle" /> property value should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeItems">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeItems ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.ShouldSerializeItems" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeItems () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeItems();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeItems : unit -&gt; bool" Usage="itemsControl.ShouldSerializeItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-615">serialization 프로세스를 통해 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 속성의 유효 값을 serialize해야 하는지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-615">Returns a value that indicates whether serialization processes should serialize the effective value of the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9c0e7-616">
            <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 속성 값을 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-616">
              <see langword="true" /> if the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> property value should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Controls.Primitives.IContainItemStorage.Clear">
      <MemberSignature Language="C#" Value="void IContainItemStorage.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Controls.Primitives.IContainItemStorage.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.System#Windows#Controls#Primitives#IContainItemStorage#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IContainItemStorage.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Controls.Primitives.IContainItemStorage.Clear() = System::Windows::Controls::Primitives::IContainItemStorage::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IContainItemStorage.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-617">연결 속성을 모두 지웁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-617">Clears all property associations.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Controls.Primitives.IContainItemStorage.ClearItemValue">
      <MemberSignature Language="C#" Value="void IContainItemStorage.ClearItemValue (object item, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Controls.Primitives.IContainItemStorage.ClearItemValue(object item, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.System#Windows#Controls#Primitives#IContainItemStorage#ClearItemValue(System.Object,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Sub ClearItemValue (item As Object, dp As DependencyProperty) Implements IContainItemStorage.ClearItemValue" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Controls.Primitives.IContainItemStorage.ClearItemValue(System::Object ^ item, System::Windows::DependencyProperty ^ dp) = System::Windows::Controls::Primitives::IContainItemStorage::ClearItemValue;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IContainItemStorage.ClearItemValue(System.Object,System.Windows.DependencyProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="9c0e7-618">연결된 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-618">The associated item.</span>
          </span>
        </param>
        <param name="dp">
          <span data-ttu-id="9c0e7-619">연결된 속성입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-619">The associated property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0e7-620">지정된 항목 및 속성 간의 연결을 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-620">Removes the association between the specified item and property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Controls.Primitives.IContainItemStorage.ClearValue">
      <MemberSignature Language="C#" Value="void IContainItemStorage.ClearValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Controls.Primitives.IContainItemStorage.ClearValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.System#Windows#Controls#Primitives#IContainItemStorage#ClearValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Sub ClearValue (dp As DependencyProperty) Implements IContainItemStorage.ClearValue" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Controls.Primitives.IContainItemStorage.ClearValue(System::Windows::DependencyProperty ^ dp) = System::Windows::Controls::Primitives::IContainItemStorage::ClearValue;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IContainItemStorage.ClearValue(System.Windows.DependencyProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="9c0e7-621">제거할 속성입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-621">The property to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0e7-622">모든 속성 목록에서 지정된 속성을 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-622">Removes the specified property from all property lists.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Controls.Primitives.IContainItemStorage.ReadItemValue">
      <MemberSignature Language="C#" Value="object IContainItemStorage.ReadItemValue (object item, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Windows.Controls.Primitives.IContainItemStorage.ReadItemValue(object item, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.System#Windows#Controls#Primitives#IContainItemStorage#ReadItemValue(System.Object,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Function ReadItemValue (item As Object, dp As DependencyProperty) As Object Implements IContainItemStorage.ReadItemValue" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Windows.Controls.Primitives.IContainItemStorage.ReadItemValue(System::Object ^ item, System::Windows::DependencyProperty ^ dp) = System::Windows::Controls::Primitives::IContainItemStorage::ReadItemValue;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IContainItemStorage.ReadItemValue(System.Object,System.Windows.DependencyProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="9c0e7-623">지정된 속성과 연결된 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-623">The item that has the specified property associated with it.</span>
          </span>
        </param>
        <param name="dp">
          <span data-ttu-id="9c0e7-624">값을 반환할 속성입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-624">The property whose value to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0e7-625">지정된 항목과 연결된 지정된 속성의 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-625">Returns the value of the specified property that is associated with the specified item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9c0e7-626">지정된 항목과 연결된 지정된 속성의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-626">The value of the specified property that is associated with the specified item.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Controls.Primitives.IContainItemStorage.StoreItemValue">
      <MemberSignature Language="C#" Value="void IContainItemStorage.StoreItemValue (object item, System.Windows.DependencyProperty dp, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Controls.Primitives.IContainItemStorage.StoreItemValue(object item, class System.Windows.DependencyProperty dp, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.System#Windows#Controls#Primitives#IContainItemStorage#StoreItemValue(System.Object,System.Windows.DependencyProperty,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub StoreItemValue (item As Object, dp As DependencyProperty, value As Object) Implements IContainItemStorage.StoreItemValue" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Controls.Primitives.IContainItemStorage.StoreItemValue(System::Object ^ item, System::Windows::DependencyProperty ^ dp, System::Object ^ value) = System::Windows::Controls::Primitives::IContainItemStorage::StoreItemValue;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IContainItemStorage.StoreItemValue(System.Object,System.Windows.DependencyProperty,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="9c0e7-627">값 및 속성을 연결할 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-627">The item to associate the value and property with.</span>
          </span>
        </param>
        <param name="dp">
          <span data-ttu-id="9c0e7-628">지정된 항목에 연결된 속성입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-628">The property that is associated with the specified item.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="9c0e7-629">연결된 속성의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-629">The value of the associated property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0e7-630">지정한 속성 및 값을 저장하고 지정된 항목에 연결합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-630">Stores the specified property and value and associates them with the specified item.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9c0e7-631">자식으로 추가할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-631">The object to add as a child.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0e7-632">이 멤버는 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 인프라를 지원하며 코드에서 직접 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-632">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="9c0e7-633">추가할 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-633">The text to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0e7-634">이 멤버는 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 인프라를 지원하며 코드에서 직접 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-634">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="itemsControl.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c0e7-635">
            <see cref="T:System.Windows.Controls.ItemsControl" /> 개체의 문자열 표현을 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-635">Provides a string representation of the <see cref="T:System.Windows.Controls.ItemsControl" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9c0e7-636">개체의 문자열 표현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0e7-636">The string representation of the object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>