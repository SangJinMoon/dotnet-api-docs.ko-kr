<Type Name="SchemaImporterExtension" FullName="System.Xml.Serialization.Advanced.SchemaImporterExtension">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dabcceaa84acc91858069e8be6a546269220dbad" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55404169" /></Metadata><TypeSignature Language="C#" Value="public abstract class SchemaImporterExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SchemaImporterExtension extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.Advanced.SchemaImporterExtension" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SchemaImporterExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class SchemaImporterExtension abstract" />
  <TypeSignature Language="F#" Value="type SchemaImporterExtension = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8dfa5-101">자동화된 쿼리 도구를 사용할 때 WSDL(Web Service Description Language) 문서에서 생성되는 코드를 사용자 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-101">Allows you to customize the code generated from a Web Services Description Language (WSDL) document when using automated query tools.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8dfa5-102">스키마 가져오기에서 웹 참조 추가 대화 상자와 같은 도구를 통해 웹 서비스 프록시 생성 될 때마다 발생 상자를 사용 하 여 Visual Studio에서 발견 된 [웹 서비스 기술 언어 도구 (Wsdl.exe)](https://msdn.microsoft.com/library/b9210348-8bc2-4367-8c91-d1a04b403e88)합니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-102">Schema importation occurs whenever a Web service proxy is produced through a tool such as the Add Web Reference dialog box found in Visual Studio, or by using the [Web Services Description Language Tool (Wsdl.exe)](https://msdn.microsoft.com/library/b9210348-8bc2-4367-8c91-d1a04b403e88).</span></span> <span data-ttu-id="8dfa5-103">스키마 가져오기를 사용 하는 경우에 발생 합니다 [XML 스키마 정의 도구 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) 특정 XSD 문서에서 코드를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-103">Schema importation also occurs when using the [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) to generate code from a specific XSD document.</span></span>  
  
 <span data-ttu-id="8dfa5-104"><xref:System.Xml.Serialization.Advanced.SchemaImporterExtension> 클래스를 사용 하면 이러한 도구 중 하나를 사용 하는 경우 생성 된 코드를 수정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-104">The <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension> class allows you to modify the code generated when using any of these tools.</span></span> <span data-ttu-id="8dfa5-105">예를 들어 기존 클래스는 시스템에서 책 주문을 처리 하 고 주문을 제공 하는 기존 XSD 문서를 해야 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-105">For example, you may have an existing class that processes book orders on a system and you have an existing XSD document that supplies your orders.</span></span> <span data-ttu-id="8dfa5-106">사용 하는 <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension> 클래스를 설정할 수 있습니다. 클래스를 사용 하는 코드를 생성할 수 있는 도구 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-106">Using the <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension> class, you can enable one of the tools to generate code that uses your class.</span></span>  
  
 <span data-ttu-id="8dfa5-107">코드 생성을 제어 하기 위해에서 클래스를 사용 해야 합니다는 <xref:System.CodeDom> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-107">In order to control the generation of the code, you must use the classes found in the <xref:System.CodeDom> namespace.</span></span> <span data-ttu-id="8dfa5-108">자세한 내용은 [CodeDOM을 사용 하 여](~/docs/framework/reflection-and-codedom/using-the-codedom.md) 하 고 [CodeDOM 빠른 참조](https://msdn.microsoft.com/library/c77b8bfd-0a32-4e36-b59a-4f687f32c524(v=vs.100).aspx)합니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-108">For more information, see [Using the CodeDOM](~/docs/framework/reflection-and-codedom/using-the-codedom.md) and [CodeDOM Quick Reference](https://msdn.microsoft.com/library/c77b8bfd-0a32-4e36-b59a-4f687f32c524(v=vs.100).aspx).</span></span>  
  
 <span data-ttu-id="8dfa5-109">확장을 사용 하는 WSDL.exe 도구 (사용 되는 웹 참조 추가 대화 상자와 같은 다른 도구에서)를 사용 하도록 설정 하는 단계는:</span><span class="sxs-lookup"><span data-stu-id="8dfa5-109">The steps to enabling the WSDL.exe tool (which in turn is used by other tools such as the Add Web Reference dialog box) to use your extension are:</span></span>  
  
1.  <span data-ttu-id="8dfa5-110">구현을 만드는 <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-110">Create an implementation of the <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension> class.</span></span>  
  
2.  <span data-ttu-id="8dfa5-111">사용 된 <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportSchemaType%2A> 코드 생성기에 대 한 코드를 작성 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-111">Use the <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportSchemaType%2A> method to write code for the code generator.</span></span> <span data-ttu-id="8dfa5-112">메서드는 가로챈된 XSD 형식을 검사 하 고 새 CLR 코드를 생성 하는 데 사용 되는 CodeDOM 개체를 만들 수 있도록 하는 매개 변수를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-112">The method contains parameters that allow you to examine the intercepted XSD type and create CodeDOM objects that are used to generate the new CLR code.</span></span>  
  
3.  <span data-ttu-id="8dfa5-113">필요한 경우 사용 합니다 <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportAnyElement%2A> 처리 하는 메서드 \<xsd: 모든 > XSD 문서에서 찾은 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-113">If required, use the <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportAnyElement%2A> method to handle \<xsd:any> elements found in the XSD document.</span></span>  
  
4.  <span data-ttu-id="8dfa5-114">필요한 경우 사용 된 <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportDefaultValue%2A> 기본 값을 검사 하는 방법 XSD 문서에서 찾은 다른 기본값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-114">If required, use the <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportDefaultValue%2A> method to examine default values found in the XSD document and return a different default value.</span></span>  
  
5.  <span data-ttu-id="8dfa5-115">확장을 프로그램 라이브러리를 컴파일하십시오.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-115">Compile your extension into a library.</span></span>  
  
6.  <span data-ttu-id="8dfa5-116">어셈블리에 서명 합니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-116">Sign the assembly.</span></span>  
  
7.  <span data-ttu-id="8dfa5-117">전역 어셈블리 캐시 (GAC)에 어셈블리를 설치 합니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-117">Install the assembly in the Global Assembly Cache (GAC).</span></span>  
  
8.  <span data-ttu-id="8dfa5-118">확장명을 포함 합니다 machine.config 파일을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-118">Modify the machine.config file to include the extension.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8dfa5-119">참조 된 [SchemaImporterExtension 기술 샘플](~/docs/standard/serialization/schemaimporterextension-technology-sample.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-119">See the [SchemaImporterExtension Technology Sample](~/docs/standard/serialization/schemaimporterextension-technology-sample.md).</span></span> <span data-ttu-id="8dfa5-120">참고가이 예제에서는 서명된 된 어셈블리에 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-120">Note that this example does not include a signed assembly.</span></span> <span data-ttu-id="8dfa5-121">대신 사용 하는 방법을 보여 줍니다는 <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension> 명령 창을 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-121">Instead, it demonstrates how to use the <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension> with a command window.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SchemaImporterExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SchemaImporterExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8dfa5-122"><see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtension" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-122">Initializes a new instance of the <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtension" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportAnyElement">
      <MemberSignature Language="C#" Value="public virtual string ImportAnyElement (System.Xml.Schema.XmlSchemaAny any, bool mixed, System.Xml.Serialization.XmlSchemas schemas, System.Xml.Serialization.XmlSchemaImporter importer, System.CodeDom.CodeCompileUnit compileUnit, System.CodeDom.CodeNamespace mainNamespace, System.Xml.Serialization.CodeGenerationOptions options, System.CodeDom.Compiler.CodeDomProvider codeProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImportAnyElement(class System.Xml.Schema.XmlSchemaAny any, bool mixed, class System.Xml.Serialization.XmlSchemas schemas, class System.Xml.Serialization.XmlSchemaImporter importer, class System.CodeDom.CodeCompileUnit compileUnit, class System.CodeDom.CodeNamespace mainNamespace, valuetype System.Xml.Serialization.CodeGenerationOptions options, class System.CodeDom.Compiler.CodeDomProvider codeProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportAnyElement(System.Xml.Schema.XmlSchemaAny,System.Boolean,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportAnyElement (any As XmlSchemaAny, mixed As Boolean, schemas As XmlSchemas, importer As XmlSchemaImporter, compileUnit As CodeCompileUnit, mainNamespace As CodeNamespace, options As CodeGenerationOptions, codeProvider As CodeDomProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ImportAnyElement(System::Xml::Schema::XmlSchemaAny ^ any, bool mixed, System::Xml::Serialization::XmlSchemas ^ schemas, System::Xml::Serialization::XmlSchemaImporter ^ importer, System::CodeDom::CodeCompileUnit ^ compileUnit, System::CodeDom::CodeNamespace ^ mainNamespace, System::Xml::Serialization::CodeGenerationOptions options, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider);" />
      <MemberSignature Language="F#" Value="abstract member ImportAnyElement : System.Xml.Schema.XmlSchemaAny * bool * System.Xml.Serialization.XmlSchemas * System.Xml.Serialization.XmlSchemaImporter * System.CodeDom.CodeCompileUnit * System.CodeDom.CodeNamespace * System.Xml.Serialization.CodeGenerationOptions * System.CodeDom.Compiler.CodeDomProvider -&gt; string&#xA;override this.ImportAnyElement : System.Xml.Schema.XmlSchemaAny * bool * System.Xml.Serialization.XmlSchemas * System.Xml.Serialization.XmlSchemaImporter * System.CodeDom.CodeCompileUnit * System.CodeDom.CodeNamespace * System.Xml.Serialization.CodeGenerationOptions * System.CodeDom.Compiler.CodeDomProvider -&gt; string" Usage="schemaImporterExtension.ImportAnyElement (any, mixed, schemas, importer, compileUnit, mainNamespace, options, codeProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="any" Type="System.Xml.Schema.XmlSchemaAny" />
        <Parameter Name="mixed" Type="System.Boolean" />
        <Parameter Name="schemas" Type="System.Xml.Serialization.XmlSchemas" />
        <Parameter Name="importer" Type="System.Xml.Serialization.XmlSchemaImporter" />
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="mainNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="options" Type="System.Xml.Serialization.CodeGenerationOptions" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" />
      </Parameters>
      <Docs>
        <param name="any"><span data-ttu-id="8dfa5-123">XML 스키마 문서(XSD)에 있는 <see langword="xsd:any" /> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-123">The <see langword="xsd:any" /> element found in the XML Schema Document (XSD).</span></span></param>
        <param name="mixed"><span data-ttu-id="8dfa5-124">XSD <see langword="complex" /> 특성을 “혼합”으로 설정했음을 나타내면 <see langword="true" />이고, 그러지 않으면 <see langword="false" /> 입니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-124"><see langword="true" /> to indicate the XSD <see langword="complex" /> attribute has been set to "mixed"; otherwise, <see langword="false" />.</span></span></param>
        <param name="schemas"><span data-ttu-id="8dfa5-125">XSD에서 있는 스키마의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-125">The collection of schemas found in the XSD.</span></span></param>
        <param name="importer"><span data-ttu-id="8dfa5-126">사용 중인 가져오기입니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-126">The importer being used.</span></span></param>
        <param name="compileUnit"><span data-ttu-id="8dfa5-127">XSD에 대한 대체 코드를 생성하기 위해 CodeDOM 구조를 추가할 수 있는 <see cref="T:System.CodeDom.CodeCompileUnit" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-127">A <see cref="T:System.CodeDom.CodeCompileUnit" /> to which you can add CodeDOM structures to generate alternative code for the XSD.</span></span></param>
        <param name="mainNamespace"><span data-ttu-id="8dfa5-128">요소의 현재 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-128">The current namespace for the element.</span></span></param>
        <param name="options"><span data-ttu-id="8dfa5-129">코드 컴파일러의 설정 옵션을 지정하는 열거형 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-129">A bitwise combination of the enumeration values that specify the setting options on the code compiler.</span></span></param>
        <param name="codeProvider"><span data-ttu-id="8dfa5-130">새 코드를 생성하는 데 사용되는 CodeDOM 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-130">The CodeDOM provider used to generate the new code.</span></span></param>
        <summary><span data-ttu-id="8dfa5-131">스키마의 &lt;xsd:any&gt; 요소의 중요 내용을 처리합니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-131">Handles the importation of the &lt;xsd:any&gt; elements in the schema.</span></span></summary>
        <returns><span data-ttu-id="8dfa5-132">요소가 매핑되는 CLR 형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-132">The name of the CLR type that the element maps to.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8dfa5-133">코드 생성을 제어 하기 위해에서 클래스를 사용 해야 합니다는 <xref:System.CodeDom> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-133">In order to control the generation of the code, you must use the classes found in the <xref:System.CodeDom> namespace.</span></span> <span data-ttu-id="8dfa5-134">자세한 내용은 [CodeDOM을 사용 하 여](~/docs/framework/reflection-and-codedom/using-the-codedom.md) 하 고 [CodeDOM 빠른 참조](https://msdn.microsoft.com/library/c77b8bfd-0a32-4e36-b59a-4f687f32c524(v=vs.100).aspx)합니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-134">For more information, see [Using the CodeDOM](~/docs/framework/reflection-and-codedom/using-the-codedom.md) and [CodeDOM Quick Reference](https://msdn.microsoft.com/library/c77b8bfd-0a32-4e36-b59a-4f687f32c524(v=vs.100).aspx).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportDefaultValue">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.CodeExpression ImportDefaultValue (string value, string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeExpression ImportDefaultValue(string value, string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportDefaultValue(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportDefaultValue (value As String, type As String) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::CodeExpression ^ ImportDefaultValue(System::String ^ value, System::String ^ type);" />
      <MemberSignature Language="F#" Value="abstract member ImportDefaultValue : string * string -&gt; System.CodeDom.CodeExpression&#xA;override this.ImportDefaultValue : string * string -&gt; System.CodeDom.CodeExpression" Usage="schemaImporterExtension.ImportDefaultValue (value, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8dfa5-135">원래의 XSD에 있는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-135">The value found in the original XSD.</span></span></param>
        <param name="type"><span data-ttu-id="8dfa5-136">XSD 형식 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-136">The XSD type name.</span></span></param>
        <summary><span data-ttu-id="8dfa5-137">가져오려는 XSD 형식에 대한 기본값을 지정할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-137">Allows you to specify the default value for the XSD type being imported.</span></span></summary>
        <returns><span data-ttu-id="8dfa5-138">새 기본값을 설정하는 <see cref="T:System.CodeDom.CodeExpression" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-138">A <see cref="T:System.CodeDom.CodeExpression" /> setting the new default value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8dfa5-139">코드 생성을 제어 하기 위해에서 클래스를 사용 해야 합니다는 <xref:System.CodeDom> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-139">In order to control the generation of the code, you must use the classes found in the <xref:System.CodeDom> namespace.</span></span> <span data-ttu-id="8dfa5-140">자세한 내용은 [CodeDOM을 사용 하 여](~/docs/framework/reflection-and-codedom/using-the-codedom.md) 하 고 [CodeDOM 빠른 참조](https://msdn.microsoft.com/library/c77b8bfd-0a32-4e36-b59a-4f687f32c524(v=vs.100).aspx)합니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-140">For more information, see [Using the CodeDOM](~/docs/framework/reflection-and-codedom/using-the-codedom.md) and [CodeDOM Quick Reference](https://msdn.microsoft.com/library/c77b8bfd-0a32-4e36-b59a-4f687f32c524(v=vs.100).aspx).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ImportSchemaType">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8dfa5-141">가져온 스키마를 검사하고 매핑 대상 CLR 형식을 지정하는 방법으로 생성되는 코드를 조작할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-141">Allows you to manipulate the code generated by examining the imported schema and specifying the CLR type that it maps to.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8dfa5-142">아래 예제에서는의 간단한 구현을 보여 줍니다는 <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportSchemaType%28System.String%2CSystem.String%2CSystem.Xml.Schema.XmlSchemaObject%2CSystem.Xml.Serialization.XmlSchemas%2CSystem.Xml.Serialization.XmlSchemaImporter%2CSystem.CodeDom.CodeCompileUnit%2CSystem.CodeDom.CodeNamespace%2CSystem.Xml.Serialization.CodeGenerationOptions%2CSystem.CodeDom.Compiler.CodeDomProvider%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-142">The example below shows a simple implementation of the <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportSchemaType%28System.String%2CSystem.String%2CSystem.Xml.Schema.XmlSchemaObject%2CSystem.Xml.Serialization.XmlSchemas%2CSystem.Xml.Serialization.XmlSchemaImporter%2CSystem.CodeDom.CodeCompileUnit%2CSystem.CodeDom.CodeNamespace%2CSystem.Xml.Serialization.CodeGenerationOptions%2CSystem.CodeDom.Compiler.CodeDomProvider%29> method.</span></span> <span data-ttu-id="8dfa5-143">코드 네임 스페이스와 이름을 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-143">The code checks the namespace and name.</span></span> <span data-ttu-id="8dfa5-144">올바른 값이 발견 될 때 생성된 된 코드에서 참조 해야 하는 사용자 지정 어셈블리 ("Order.dll")의 이름을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-144">When the right values are found, it adds the name of a custom assembly ("Order.dll") that must be referenced in the generated code.</span></span> <span data-ttu-id="8dfa5-145">다음 코드에서 생성 된 새 네임 스페이스 ("Microsoft.Samples")을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-145">It then adds a new namespace ("Microsoft.Samples") that is generated in the code.</span></span>  
  
 [!code-csharp[SchemaImporterExtensionExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SchemaImporterExtensionExample/CS/SchemaImporterExtensionExample.cs#1)]
 [!code-vb[SchemaImporterExtensionExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SchemaImporterExtensionExample/VB/SchemaImporterExtensionExample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ImportSchemaType">
      <MemberSignature Language="C#" Value="public virtual string ImportSchemaType (System.Xml.Schema.XmlSchemaType type, System.Xml.Schema.XmlSchemaObject context, System.Xml.Serialization.XmlSchemas schemas, System.Xml.Serialization.XmlSchemaImporter importer, System.CodeDom.CodeCompileUnit compileUnit, System.CodeDom.CodeNamespace mainNamespace, System.Xml.Serialization.CodeGenerationOptions options, System.CodeDom.Compiler.CodeDomProvider codeProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImportSchemaType(class System.Xml.Schema.XmlSchemaType type, class System.Xml.Schema.XmlSchemaObject context, class System.Xml.Serialization.XmlSchemas schemas, class System.Xml.Serialization.XmlSchemaImporter importer, class System.CodeDom.CodeCompileUnit compileUnit, class System.CodeDom.CodeNamespace mainNamespace, valuetype System.Xml.Serialization.CodeGenerationOptions options, class System.CodeDom.Compiler.CodeDomProvider codeProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportSchemaType(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportSchemaType (type As XmlSchemaType, context As XmlSchemaObject, schemas As XmlSchemas, importer As XmlSchemaImporter, compileUnit As CodeCompileUnit, mainNamespace As CodeNamespace, options As CodeGenerationOptions, codeProvider As CodeDomProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ImportSchemaType(System::Xml::Schema::XmlSchemaType ^ type, System::Xml::Schema::XmlSchemaObject ^ context, System::Xml::Serialization::XmlSchemas ^ schemas, System::Xml::Serialization::XmlSchemaImporter ^ importer, System::CodeDom::CodeCompileUnit ^ compileUnit, System::CodeDom::CodeNamespace ^ mainNamespace, System::Xml::Serialization::CodeGenerationOptions options, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider);" />
      <MemberSignature Language="F#" Value="abstract member ImportSchemaType : System.Xml.Schema.XmlSchemaType * System.Xml.Schema.XmlSchemaObject * System.Xml.Serialization.XmlSchemas * System.Xml.Serialization.XmlSchemaImporter * System.CodeDom.CodeCompileUnit * System.CodeDom.CodeNamespace * System.Xml.Serialization.CodeGenerationOptions * System.CodeDom.Compiler.CodeDomProvider -&gt; string&#xA;override this.ImportSchemaType : System.Xml.Schema.XmlSchemaType * System.Xml.Schema.XmlSchemaObject * System.Xml.Serialization.XmlSchemas * System.Xml.Serialization.XmlSchemaImporter * System.CodeDom.CodeCompileUnit * System.CodeDom.CodeNamespace * System.Xml.Serialization.CodeGenerationOptions * System.CodeDom.Compiler.CodeDomProvider -&gt; string" Usage="schemaImporterExtension.ImportSchemaType (type, context, schemas, importer, compileUnit, mainNamespace, options, codeProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.Schema.XmlSchemaType" />
        <Parameter Name="context" Type="System.Xml.Schema.XmlSchemaObject" />
        <Parameter Name="schemas" Type="System.Xml.Serialization.XmlSchemas" />
        <Parameter Name="importer" Type="System.Xml.Serialization.XmlSchemaImporter" />
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="mainNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="options" Type="System.Xml.Serialization.CodeGenerationOptions" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="8dfa5-146">XSD 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-146">The XSD type.</span></span></param>
        <param name="context"><span data-ttu-id="8dfa5-147">XML 요소의 줄 번호와 같은 스키마 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-147">The schema information, such as the line number of the XML element.</span></span></param>
        <param name="schemas"><span data-ttu-id="8dfa5-148">문서에 있는 스키마의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-148">The collection of schemas in the document.</span></span></param>
        <param name="importer"><span data-ttu-id="8dfa5-149">사용 중인 가져오기입니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-149">The importer being used.</span></span></param>
        <param name="compileUnit"><span data-ttu-id="8dfa5-150">XSD에 대한 대체 코드를 생성하기 위해 CodeDOM 구조를 추가할 수 있는 <see cref="T:System.CodeDom.CodeCompileUnit" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-150">A <see cref="T:System.CodeDom.CodeCompileUnit" /> to which you can add CodeDOM structures to generate alternative code for the XSD.</span></span></param>
        <param name="mainNamespace"><span data-ttu-id="8dfa5-151">요소의 현재 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-151">The current namespace for the element.</span></span></param>
        <param name="options"><span data-ttu-id="8dfa5-152">코드 컴파일러의 설정 옵션을 지정하는 열거형 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-152">A bitwise combination of the enumeration values that specify the setting options on the code compiler.</span></span></param>
        <param name="codeProvider"><span data-ttu-id="8dfa5-153">새 코드를 생성하는 데 사용되는 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-153">A <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> that is used to generate the new code.</span></span></param>
        <summary><span data-ttu-id="8dfa5-154">가져온 스키마를 검사하고 매핑 대상 CLR 형식을 지정하는 방법으로 생성되는 코드를 조작할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-154">Allows you to manipulate the code generated by examining the imported schema and specifying the CLR type that it maps to.</span></span></summary>
        <returns><span data-ttu-id="8dfa5-155">매핑되는 CLR 형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-155">The name of the CLR type that this maps to.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8dfa5-156">아래 예제에서는의 간단한 구현을 보여 줍니다는 <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportSchemaType%28System.String%2CSystem.String%2CSystem.Xml.Schema.XmlSchemaObject%2CSystem.Xml.Serialization.XmlSchemas%2CSystem.Xml.Serialization.XmlSchemaImporter%2CSystem.CodeDom.CodeCompileUnit%2CSystem.CodeDom.CodeNamespace%2CSystem.Xml.Serialization.CodeGenerationOptions%2CSystem.CodeDom.Compiler.CodeDomProvider%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-156">The example below shows a simple implementation of the <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportSchemaType%28System.String%2CSystem.String%2CSystem.Xml.Schema.XmlSchemaObject%2CSystem.Xml.Serialization.XmlSchemas%2CSystem.Xml.Serialization.XmlSchemaImporter%2CSystem.CodeDom.CodeCompileUnit%2CSystem.CodeDom.CodeNamespace%2CSystem.Xml.Serialization.CodeGenerationOptions%2CSystem.CodeDom.Compiler.CodeDomProvider%29> method.</span></span> <span data-ttu-id="8dfa5-157">코드 네임 스페이스와 이름을 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-157">The code checks the namespace and name.</span></span> <span data-ttu-id="8dfa5-158">올바른 값이 발견 될 때 생성된 된 코드에서 참조 해야 하는 사용자 지정 어셈블리 ("Order.dll")의 이름을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-158">When the right values are found, it adds the name of a custom assembly ("Order.dll") that must be referenced in the generated code.</span></span> <span data-ttu-id="8dfa5-159">다음 코드에서 생성 된 새 네임 스페이스 ("Microsoft.Samples")을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-159">It then adds a new namespace ("Microsoft.Samples") that is generated in the code.</span></span>  
  
 [!code-csharp[SchemaImporterExtensionExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SchemaImporterExtensionExample/CS/SchemaImporterExtensionExample.cs#1)]
 [!code-vb[SchemaImporterExtensionExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SchemaImporterExtensionExample/VB/SchemaImporterExtensionExample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportSchemaType">
      <MemberSignature Language="C#" Value="public virtual string ImportSchemaType (string name, string ns, System.Xml.Schema.XmlSchemaObject context, System.Xml.Serialization.XmlSchemas schemas, System.Xml.Serialization.XmlSchemaImporter importer, System.CodeDom.CodeCompileUnit compileUnit, System.CodeDom.CodeNamespace mainNamespace, System.Xml.Serialization.CodeGenerationOptions options, System.CodeDom.Compiler.CodeDomProvider codeProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImportSchemaType(string name, string ns, class System.Xml.Schema.XmlSchemaObject context, class System.Xml.Serialization.XmlSchemas schemas, class System.Xml.Serialization.XmlSchemaImporter importer, class System.CodeDom.CodeCompileUnit compileUnit, class System.CodeDom.CodeNamespace mainNamespace, valuetype System.Xml.Serialization.CodeGenerationOptions options, class System.CodeDom.Compiler.CodeDomProvider codeProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportSchemaType(System.String,System.String,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportSchemaType (name As String, ns As String, context As XmlSchemaObject, schemas As XmlSchemas, importer As XmlSchemaImporter, compileUnit As CodeCompileUnit, mainNamespace As CodeNamespace, options As CodeGenerationOptions, codeProvider As CodeDomProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ImportSchemaType(System::String ^ name, System::String ^ ns, System::Xml::Schema::XmlSchemaObject ^ context, System::Xml::Serialization::XmlSchemas ^ schemas, System::Xml::Serialization::XmlSchemaImporter ^ importer, System::CodeDom::CodeCompileUnit ^ compileUnit, System::CodeDom::CodeNamespace ^ mainNamespace, System::Xml::Serialization::CodeGenerationOptions options, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider);" />
      <MemberSignature Language="F#" Value="abstract member ImportSchemaType : string * string * System.Xml.Schema.XmlSchemaObject * System.Xml.Serialization.XmlSchemas * System.Xml.Serialization.XmlSchemaImporter * System.CodeDom.CodeCompileUnit * System.CodeDom.CodeNamespace * System.Xml.Serialization.CodeGenerationOptions * System.CodeDom.Compiler.CodeDomProvider -&gt; string&#xA;override this.ImportSchemaType : string * string * System.Xml.Schema.XmlSchemaObject * System.Xml.Serialization.XmlSchemas * System.Xml.Serialization.XmlSchemaImporter * System.CodeDom.CodeCompileUnit * System.CodeDom.CodeNamespace * System.Xml.Serialization.CodeGenerationOptions * System.CodeDom.Compiler.CodeDomProvider -&gt; string" Usage="schemaImporterExtension.ImportSchemaType (name, ns, context, schemas, importer, compileUnit, mainNamespace, options, codeProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="context" Type="System.Xml.Schema.XmlSchemaObject" />
        <Parameter Name="schemas" Type="System.Xml.Serialization.XmlSchemas" />
        <Parameter Name="importer" Type="System.Xml.Serialization.XmlSchemaImporter" />
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="mainNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="options" Type="System.Xml.Serialization.CodeGenerationOptions" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="8dfa5-160">요소의 이름을 나타내며</span><span class="sxs-lookup"><span data-stu-id="8dfa5-160">The name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="8dfa5-161">요소의 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-161">The namespace of the element.</span></span></param>
        <param name="context"><span data-ttu-id="8dfa5-162">XML 요소의 줄 번호와 같은 스키마 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-162">The schema information, such as the line number of the XML element.</span></span></param>
        <param name="schemas"><span data-ttu-id="8dfa5-163">문서에 있는 스키마의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-163">The collection of schemas in the document.</span></span></param>
        <param name="importer"><span data-ttu-id="8dfa5-164">사용 중인 가져오기입니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-164">The importer being used.</span></span></param>
        <param name="compileUnit"><span data-ttu-id="8dfa5-165">XSD에 대한 대체 코드를 생성하기 위해 CodeDOM 구조를 추가할 수 있는 <see cref="T:System.CodeDom.CodeCompileUnit" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-165">A <see cref="T:System.CodeDom.CodeCompileUnit" /> to which you can add CodeDOM structures to generate alternative code for the XSD.</span></span></param>
        <param name="mainNamespace"><span data-ttu-id="8dfa5-166">요소의 현재 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-166">The current namespace for the element.</span></span></param>
        <param name="options"><span data-ttu-id="8dfa5-167">코드 컴파일러의 설정 옵션을 지정하는 열거형 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-167">A bitwise combination of the enumeration values that specify the setting options on the code compiler.</span></span></param>
        <param name="codeProvider"><span data-ttu-id="8dfa5-168">새 코드를 생성하는 데 사용되는 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-168">A <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> that is used to generate the new code.</span></span></param>
        <summary><span data-ttu-id="8dfa5-169">가져온 스키마를 검사하고 매핑 대상 CLR 형식을 지정하는 방법으로 생성되는 코드를 조작할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-169">Allows you to manipulate the code generated by examining the imported schema and specifying the CLR type that it maps to.</span></span></summary>
        <returns><span data-ttu-id="8dfa5-170">매핑되는 CLR 형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-170">The name of the CLR type that this maps to.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8dfa5-171">코드 생성을 제어 하기 위해에서 클래스를 사용 해야 합니다는 <xref:System.CodeDom> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-171">In order to control the generation of the code, you must use the classes found in the <xref:System.CodeDom> namespace.</span></span> <span data-ttu-id="8dfa5-172">자세한 내용은 [CodeDOM을 사용 하 여](~/docs/framework/reflection-and-codedom/using-the-codedom.md) 하 고 [CodeDOM 빠른 참조](https://msdn.microsoft.com/library/c77b8bfd-0a32-4e36-b59a-4f687f32c524(v=vs.100).aspx)합니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-172">For more information, see [Using the CodeDOM](~/docs/framework/reflection-and-codedom/using-the-codedom.md) and [CodeDOM Quick Reference](https://msdn.microsoft.com/library/c77b8bfd-0a32-4e36-b59a-4f687f32c524(v=vs.100).aspx).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8dfa5-173">아래 예제에서는의 간단한 구현을 보여 줍니다는 <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportSchemaType%28System.String%2CSystem.String%2CSystem.Xml.Schema.XmlSchemaObject%2CSystem.Xml.Serialization.XmlSchemas%2CSystem.Xml.Serialization.XmlSchemaImporter%2CSystem.CodeDom.CodeCompileUnit%2CSystem.CodeDom.CodeNamespace%2CSystem.Xml.Serialization.CodeGenerationOptions%2CSystem.CodeDom.Compiler.CodeDomProvider%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-173">The example below shows a simple implementation of the <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportSchemaType%28System.String%2CSystem.String%2CSystem.Xml.Schema.XmlSchemaObject%2CSystem.Xml.Serialization.XmlSchemas%2CSystem.Xml.Serialization.XmlSchemaImporter%2CSystem.CodeDom.CodeCompileUnit%2CSystem.CodeDom.CodeNamespace%2CSystem.Xml.Serialization.CodeGenerationOptions%2CSystem.CodeDom.Compiler.CodeDomProvider%29> method.</span></span> <span data-ttu-id="8dfa5-174">코드 네임 스페이스와 이름을 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-174">The code checks the namespace and name.</span></span> <span data-ttu-id="8dfa5-175">올바른 값이 발견 될 때 생성된 된 코드에서 참조 해야 하는 사용자 지정 어셈블리 ("Order.dll")의 이름을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-175">When the right values are found, it adds the name of a custom assembly ("Order.dll") that must be referenced in the generated code.</span></span> <span data-ttu-id="8dfa5-176">다음 코드에서 생성 된 새 네임 스페이스 ("Microsoft.Samples")을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="8dfa5-176">It then adds a new namespace ("Microsoft.Samples") that is generated in the code.</span></span>  
  
 [!code-csharp[SchemaImporterExtensionExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SchemaImporterExtensionExample/CS/SchemaImporterExtensionExample.cs#1)]
 [!code-vb[SchemaImporterExtensionExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SchemaImporterExtensionExample/VB/SchemaImporterExtensionExample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>