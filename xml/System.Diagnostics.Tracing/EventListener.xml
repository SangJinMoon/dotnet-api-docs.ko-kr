<Type Name="EventListener" FullName="System.Diagnostics.Tracing.EventListener">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b0f5f023f5aa0b9964a1514f6c165b36dea0bb02" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36675260" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class EventListener : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EventListener extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Tracing.EventListener" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EventListener&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventListener abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type EventListener = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>이벤트 소스에서 이벤트를 활성화 및 비활성화하기 위한 메서드를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트 수신기 이벤트 원본에 의해 생성 된 모든 이벤트에 대 한 대상을 나타냅니다 (<xref:System.Diagnostics.Tracing.EventSource> 개체)은 현재 어플리케이션 도메인에 구현 합니다. 새 이벤트 수신기를 만들면 해당 응용 프로그램 도메인의 모든 이벤트 소스에 논리적으로 연결 됩니다.  
  
> [!NOTE]
>  이 형식이 구현 하는 <xref:System.IDisposable> 인터페이스입니다. 형식을 사용 하 여 마쳤으면 직접 또는 간접적으로를 삭제 해야 합니다. 직접 형식의 dispose를 호출 해당 <xref:System.IDisposable.Dispose%2A> 에서 메서드는 `try` / `catch` 블록입니다. 작업을 삭제할 하지 직접,를 사용 하 여 언어 구문와 같은 `using` (C#에서) 또는 `Using` (Visual Basic)에서는 합니다. 자세한 내용은의 "를 사용 하는 개체는 구현 IDisposable" 섹션을 참조 하십시오.는 <xref:System.IDisposable> 인터페이스 항목입니다.  
  
 이벤트 수신기 설정 하거나 해제할 수-현재 이벤트 소스 별로 이벤트 수준을 사용 하 여 (<xref:System.Diagnostics.Tracing.EventLevel>) 및 이벤트 키워드 (<xref:System.Diagnostics.Tracing.EventKeywords>) 수신기에 보내야 하는 이벤트 집합을 제한할 수 있습니다. 수신기를 보낼 수도 임의의 명령이 특정 현재 이벤트 소스를 사용 하 여는 <xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A> 메서드. 명령의 의미 이벤트 소스 구현에 적용 됩니다.  
  
 경우는 <xref:System.Diagnostics.Tracing.EventSource.Guid%2A> 속성에는 <xref:System.Diagnostics.Tracing.EventSource> 이벤트 설정 또는 해제 하는 데 사용 되는 개체는 <xref:System.Guid.Empty>, 응용 프로그램 도메인에서 모든 이벤트 소스에 영향을 받습니다.  
  
 단일 응용 프로그램 도메인에 여러 명의 이벤트 처리기를 정의할 수 있습니다. 각 수신기는를 하나의 수신기에서 사용 하는 이벤트에 해당 수신기에만 영향을 논리적으로 독립적 다른 수신기입니다. 함께 전송 되는 명령에 대 한 수의 <xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A> 메서드 영향을 줌 다른 수신기 하지만이 규칙 것이 아니라 예외 (예: 가비지 수집 또는 데이터 플러시) 의미 체계 작업을 수행 합니다.  
  
 각 이벤트 소스에 이벤트를 보내는 이벤트 수신기의 목록을 유지 합니다. 필터링 조건의 집합을 각 이벤트 소스 수신기 쌍 연관 되어 있습니다. 이벤트를 결정 하는 이러한 조건을 현재 이벤트 소스에 대 한 해당 수신기 받게 됩니다. 수신기에서 이벤트를 받고 해당 <xref:System.Diagnostics.Tracing.EventListener.OnEventWritten%2A> 메서드. 따라서 하위 클래스의 <xref:System.Diagnostics.Tracing.EventListener> 데이터와 필요한 작업을 수행 하려면이 메서드를 재정의 해야 합니다.  
  
 새 이벤트 원본을 만들면는 <xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A> 메서드를 호출 합니다. 모든 현재 이벤트 수신기 가져옵니다 정확히 하나의 <xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A> 보낼 수 있는 모든 현재 이벤트 소스에 대 한 호출 메시지를 기록 합니다. 이벤트 수신기를 만들 때 일련의 <xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A> 수신기를 만들기 전에 존재 하는 모든 이벤트 소스에 대 한 새 수신기에 알리기 위해 호출 합니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventListener ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Diagnostics.Tracing.EventListener" /> 클래스의 새 인스턴스를 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 새 인스턴스를 만들 때에 모든 이벤트는 사용할 수 없습니다. 사용 된 <xref:System.Diagnostics.Tracing.EventListener.EnableEvents%2A> 메서드 이벤트를 사용 하도록 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableEvents">
      <MemberSignature Language="C#" Value="public void DisableEvents (System.Diagnostics.Tracing.EventSource eventSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DisableEvents(class System.Diagnostics.Tracing.EventSource eventSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventListener.DisableEvents(System.Diagnostics.Tracing.EventSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DisableEvents(System::Diagnostics::Tracing::EventSource ^ eventSource);" />
      <MemberSignature Language="F#" Value="member this.DisableEvents : System.Diagnostics.Tracing.EventSource -&gt; unit" Usage="eventListener.DisableEvents eventSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="System.Diagnostics.Tracing.EventSource" />
      </Parameters>
      <Docs>
        <param name="eventSource">이벤트를 사용하지 않도록 설정하는 이벤트 소스입니다.</param>
        <summary>지정된 이벤트 소스에 대한 모든 이벤트를 사용하지 않도록 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Diagnostics.Tracing.EventSource.Guid%2A> 속성에 대 한 `eventSource` 은 <xref:System.Guid.Empty>, 응용 프로그램 도메인에서 모든 이벤트 소스에 대 한 이벤트가이 이벤트 수신기에 대해 사용할 수 없습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventListener.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="eventListener.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Diagnostics.Tracing.EventListener" /> 클래스의 현재 인스턴스에서 사용하는 리소스를 해제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Dispose` 사용을 마치면 <xref:System.Diagnostics.Tracing.EventListener>를 호출합니다. `Dispose` 메서드를 사용하면 <xref:System.Diagnostics.Tracing.EventListener>를 사용할 수 없게 됩니다. 호출한 후 `Dispose`에 대 한 모든 참조를 해제 해야는 <xref:System.Diagnostics.Tracing.EventListener> 가비지 수집기는 메모리를 회수할 수 있도록 하는 <xref:System.Diagnostics.Tracing.EventListener> 차지한 합니다.  
  
 자세한 내용은 참조 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Dispose 메서드를 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnableEvents">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 이벤트 소스에 대한 이벤트를 사용하도록 설정합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnableEvents">
      <MemberSignature Language="C#" Value="public void EnableEvents (System.Diagnostics.Tracing.EventSource eventSource, System.Diagnostics.Tracing.EventLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnableEvents(class System.Diagnostics.Tracing.EventSource eventSource, valuetype System.Diagnostics.Tracing.EventLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnableEvents(System::Diagnostics::Tracing::EventSource ^ eventSource, System::Diagnostics::Tracing::EventLevel level);" />
      <MemberSignature Language="F#" Value="member this.EnableEvents : System.Diagnostics.Tracing.EventSource * System.Diagnostics.Tracing.EventLevel -&gt; unit" Usage="eventListener.EnableEvents (eventSource, level)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="System.Diagnostics.Tracing.EventSource" />
        <Parameter Name="level" Type="System.Diagnostics.Tracing.EventLevel" />
      </Parameters>
      <Docs>
        <param name="eventSource">이벤트를 사용하도록 설정하는 이벤트 소스입니다.</param>
        <param name="level">사용할 수 있는 이벤트 수준입니다.</param>
        <summary>지정된 자세한 정도 수준 이하인 지정된 이벤트 소스에 대한 이벤트를 사용하도록 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Diagnostics.Tracing.EventSource.Guid%2A> 속성에 지정 된 `eventSource` 은 <xref:System.Guid.Empty>, 응용 프로그램 도메인에서 모든 이벤트 소스에 영향을 받습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableEvents">
      <MemberSignature Language="C#" Value="public void EnableEvents (System.Diagnostics.Tracing.EventSource eventSource, System.Diagnostics.Tracing.EventLevel level, System.Diagnostics.Tracing.EventKeywords matchAnyKeyword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnableEvents(class System.Diagnostics.Tracing.EventSource eventSource, valuetype System.Diagnostics.Tracing.EventLevel level, valuetype System.Diagnostics.Tracing.EventKeywords matchAnyKeyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnableEvents(System::Diagnostics::Tracing::EventSource ^ eventSource, System::Diagnostics::Tracing::EventLevel level, System::Diagnostics::Tracing::EventKeywords matchAnyKeyword);" />
      <MemberSignature Language="F#" Value="member this.EnableEvents : System.Diagnostics.Tracing.EventSource * System.Diagnostics.Tracing.EventLevel * System.Diagnostics.Tracing.EventKeywords -&gt; unit" Usage="eventListener.EnableEvents (eventSource, level, matchAnyKeyword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="System.Diagnostics.Tracing.EventSource" />
        <Parameter Name="level" Type="System.Diagnostics.Tracing.EventLevel" />
        <Parameter Name="matchAnyKeyword" Type="System.Diagnostics.Tracing.EventKeywords" />
      </Parameters>
      <Docs>
        <param name="eventSource">이벤트를 사용하도록 설정하는 이벤트 소스입니다.</param>
        <param name="level">사용할 수 있는 이벤트 수준입니다.</param>
        <param name="matchAnyKeyword">이벤트를 사용하는 데 필요한 키워드 플래그입니다.</param>
        <summary>지정된 자세한 정도 수준 이하이고 일치하는 키워드 플래그가 있는 지정된 이벤트 소스에 대한 이벤트를 사용하도록 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Diagnostics.Tracing.EventSource.Guid%2A> 속성에 지정 된 `eventSource` 은 <xref:System.Guid.Empty>, 응용 프로그램 도메인에서 모든 이벤트 소스에 영향을 받습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableEvents">
      <MemberSignature Language="C#" Value="public void EnableEvents (System.Diagnostics.Tracing.EventSource eventSource, System.Diagnostics.Tracing.EventLevel level, System.Diagnostics.Tracing.EventKeywords matchAnyKeyword, System.Collections.Generic.IDictionary&lt;string,string&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnableEvents(class System.Diagnostics.Tracing.EventSource eventSource, valuetype System.Diagnostics.Tracing.EventLevel level, valuetype System.Diagnostics.Tracing.EventKeywords matchAnyKeyword, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnableEvents(System::Diagnostics::Tracing::EventSource ^ eventSource, System::Diagnostics::Tracing::EventLevel level, System::Diagnostics::Tracing::EventKeywords matchAnyKeyword, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="member this.EnableEvents : System.Diagnostics.Tracing.EventSource * System.Diagnostics.Tracing.EventLevel * System.Diagnostics.Tracing.EventKeywords * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; unit" Usage="eventListener.EnableEvents (eventSource, level, matchAnyKeyword, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="System.Diagnostics.Tracing.EventSource" />
        <Parameter Name="level" Type="System.Diagnostics.Tracing.EventLevel" />
        <Parameter Name="matchAnyKeyword" Type="System.Diagnostics.Tracing.EventKeywords" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="eventSource">이벤트를 사용하도록 설정하는 이벤트 소스입니다.</param>
        <param name="level">사용할 수 있는 이벤트 수준입니다.</param>
        <param name="matchAnyKeyword">이벤트를 사용하는 데 필요한 키워드 플래그입니다.</param>
        <param name="arguments">이벤트를 사용하기 위해 일치해야 하는 인수입니다.</param>
        <summary>지정된 세부 정보 표시 수준 이하이고 일치하는 이벤트 키워드 플래그 및 일치하는 인수가 있는 지정된 이벤트 소스에 대한 이벤트를 사용하도록 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Diagnostics.Tracing.EventSource.Guid%2A> 속성에 지정 된 `eventSource` 은 <xref:System.Guid.Empty>, 응용 프로그램 도메인에서 모든 이벤트 소스에 영향을 받습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventSourceCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Diagnostics.Tracing.EventSourceCreatedEventArgs&gt; EventSourceCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Diagnostics.Tracing.EventSourceCreatedEventArgs&gt; EventSourceCreated" />
      <MemberSignature Language="DocId" Value="E:System.Diagnostics.Tracing.EventListener.EventSourceCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EventSourceCreated As EventHandler(Of EventSourceCreatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Diagnostics::Tracing::EventSourceCreatedEventArgs ^&gt; ^ EventSourceCreated;" />
      <MemberSignature Language="F#" Value="member this.EventSourceCreated : EventHandler&lt;System.Diagnostics.Tracing.EventSourceCreatedEventArgs&gt; " Usage="member this.EventSourceCreated : System.EventHandler&lt;System.Diagnostics.Tracing.EventSourceCreatedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Diagnostics.Tracing.EventSourceCreatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이벤트 소스(<see cref="T:System.Diagnostics.Tracing.EventSource" /> 개체)가 발송자에 연결되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.Tracing.EventListener.EventSourceCreated> 이벤트 수신기를 만들면도 이벤트 수신기를 만든 후 생성 된 이벤트 소스와 모든 기존 이벤트 소스에 대 한 발생 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventSourceIndex">
      <MemberSignature Language="C#" Value="public static int EventSourceIndex (System.Diagnostics.Tracing.EventSource eventSource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 EventSourceIndex(class System.Diagnostics.Tracing.EventSource eventSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventListener.EventSourceIndex(System.Diagnostics.Tracing.EventSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int EventSourceIndex(System::Diagnostics::Tracing::EventSource ^ eventSource);" />
      <MemberSignature Language="F#" Value="static member EventSourceIndex : System.Diagnostics.Tracing.EventSource -&gt; int" Usage="System.Diagnostics.Tracing.EventListener.EventSourceIndex eventSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="System.Diagnostics.Tracing.EventSource" />
      </Parameters>
      <Docs>
        <param name="eventSource">인덱스를 찾을 이벤트 소스입니다.</param>
        <summary>지정된 이벤트 소스를 나타내는 음수가 아닌 작은 숫자를 가져옵니다.</summary>
        <returns>지정된 이벤트 소스를 나타내는 음수가 아닌 작은 숫자입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 반환한 값 <xref:System.Diagnostics.Tracing.EventListener.EventSourceIndex%2A> 배열 인덱싱에 적합 한 이벤트 소스를 식별 합니다. 이 정수는 응용 프로그램 도메인 내에서 고유 합니다. 이벤트 수신기를 연결 된 각 이벤트 소스에 대 한 추가 정보를 저장 하는 데 유용 찾을 수 있습니다. 반환한 값 <xref:System.Diagnostics.Tracing.EventListener.EventSourceIndex%2A> 허용이 추가 정보를 효율적으로 저장 된 확장 가능한 배열에 같은 `List<T>`합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventWritten">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Diagnostics.Tracing.EventWrittenEventArgs&gt; EventWritten;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Diagnostics.Tracing.EventWrittenEventArgs&gt; EventWritten" />
      <MemberSignature Language="DocId" Value="E:System.Diagnostics.Tracing.EventListener.EventWritten" />
      <MemberSignature Language="VB.NET" Value="Public Event EventWritten As EventHandler(Of EventWrittenEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Diagnostics::Tracing::EventWrittenEventArgs ^&gt; ^ EventWritten;" />
      <MemberSignature Language="F#" Value="member this.EventWritten : EventHandler&lt;System.Diagnostics.Tracing.EventWrittenEventArgs&gt; " Usage="member this.EventWritten : System.EventHandler&lt;System.Diagnostics.Tracing.EventWrittenEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Diagnostics.Tracing.EventWrittenEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이벤트 수신기가 이벤트를 설정한 이벤트 소스(<see cref="T:System.Diagnostics.Tracing.EventSource" /> 개체)에 의해 이벤트가 작성될 때 호출됩니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEventSourceCreated">
      <MemberSignature Language="C#" Value="protected internal virtual void OnEventSourceCreated (System.Diagnostics.Tracing.EventSource eventSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnEventSourceCreated(class System.Diagnostics.Tracing.EventSource eventSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated(System.Diagnostics.Tracing.EventSource)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnEventSourceCreated(System::Diagnostics::Tracing::EventSource ^ eventSource);" />
      <MemberSignature Language="F#" Value="abstract member OnEventSourceCreated : System.Diagnostics.Tracing.EventSource -&gt; unit&#xA;override this.OnEventSourceCreated : System.Diagnostics.Tracing.EventSource -&gt; unit" Usage="eventListener.OnEventSourceCreated eventSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="System.Diagnostics.Tracing.EventSource" />
      </Parameters>
      <Docs>
        <param name="eventSource">이벤트 소스입니다.</param>
        <summary>이벤트 수신기가 만들어질 때와 새 이벤트 소스가 수신기에 연결될 때 모든 기존 이벤트 소스에 대해 호출됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트 소스 구현 이벤트 수신기를 인스턴스화할 때 이러한 콜백은 기존 이벤트 소스에 대해 실행 되는 잘 알고 있어야 합니다.  
  
 다중 스레드 환경에서 수 있기 <xref:System.Diagnostics.Tracing.EventListener.OnEventWritten%2A> 콜백이 되기 전에 <xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A> 콜백 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEventWritten">
      <MemberSignature Language="C#" Value="protected internal abstract void OnEventWritten (System.Diagnostics.Tracing.EventWrittenEventArgs eventData);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnEventWritten(class System.Diagnostics.Tracing.EventWrittenEventArgs eventData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventListener.OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub OnEventWritten (eventData As EventWrittenEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void OnEventWritten(System::Diagnostics::Tracing::EventWrittenEventArgs ^ eventData);" />
      <MemberSignature Language="F#" Value="abstract member OnEventWritten : System.Diagnostics.Tracing.EventWrittenEventArgs -&gt; unit" Usage="eventListener.OnEventWritten eventData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventData" Type="System.Diagnostics.Tracing.EventWrittenEventArgs" />
      </Parameters>
      <Docs>
        <param name="eventData">이벤트를 설명하는 이벤트 인수입니다.</param>
        <summary>이벤트 수신기가 이벤트를 설정한 이벤트 소스에 의해 이벤트가 작성될 때마다 호출됩니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>