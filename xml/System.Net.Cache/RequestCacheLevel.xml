<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="RequestCacheLevel.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e796a43904cb146b90c774fed9c70dab8bf81777.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e796a43904cb146b90c774fed9c70dab8bf81777</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.Cache.RequestCacheLevel">
          <source>Specifies caching behavior for resources obtained using <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> and its derived classes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> 클래스와 이 클래스의 파생 클래스를 사용하여 가져온 리소스의 캐싱 동작을 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Cache.RequestCacheLevel">
          <source>Members of this enumeration are used to initialize <ph id="ph1">&lt;xref:System.Net.Cache.RequestCachePolicy&gt;</ph> objects.</source>
          <target state="translated">이 열거형의 멤버는 초기화 하는 데 사용 된 <ph id="ph1">&lt;xref:System.Net.Cache.RequestCachePolicy&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Cache.RequestCacheLevel">
          <source>The current setting for a <ph id="ph1">&lt;xref:System.Net.Cache.RequestCachePolicy&gt;</ph> object is available in the <ph id="ph2">&lt;xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">에 대 한 현재 설정 된 <ph id="ph1">&lt;xref:System.Net.Cache.RequestCachePolicy&gt;</ph> 개체는에서 사용할 수는 <ph id="ph2">&lt;xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A?displayProperty=nameWithType&gt;</ph> 속성.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Cache.RequestCacheLevel">
          <source>This <ph id="ph1">&lt;xref:System.Net.Cache.HttpRequestCacheLevel.BypassCache&gt;</ph> value is the default cache behavior specified in the machine configuration file that ships with the .NET Framework.</source>
          <target state="translated">이 <ph id="ph1">&lt;xref:System.Net.Cache.HttpRequestCacheLevel.BypassCache&gt;</ph> 값은.NET Framework와 함께 제공 되는 컴퓨터 구성 파일에 지정 된 기본 캐시 동작 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Cache.RequestCacheLevel">
          <source>No entries are taken from caches, added to caches, or removed from caches between the client and server.</source>
          <target state="translated">클라이언트와 서버 사이의 캐시에서 어떤 항목도 가져가거나, 추가하거나, 제거하지 않습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Cache.RequestCacheLevel">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A?displayProperty=nameWithType&gt;</ph> property is used to get or set the default cache policy for <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> instances.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A?displayProperty=nameWithType&gt;</ph> 속성은 가져오기 또는 설정에 대 한 기본 캐시 정책을 사용 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Cache.RequestCacheLevel">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=nameWithType&gt;</ph> property is used to get or set the default cache policy for a <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> instances.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=nameWithType&gt;</ph> 속성은에 대 한 기본 캐시 정책을 가져오거나 설정 하는 데 사용 되는 <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Cache.RequestCacheLevel">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=nameWithType&gt;</ph> property is used to get or set the cache policy for a specific request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=nameWithType&gt;</ph> 속성은 특정 요청에 대 한 캐시 정책을 가져오거나 설정 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Cache.RequestCacheLevel">
          <source>A copy of a resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream.</source>
          <target state="translated">리소스에 대 한 응답 스트림을 검색 하는 스트림의 끝에 대 한 읽기 경우에 리소스의 복사본을 캐시에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Cache.RequestCacheLevel">
          <source>So another request for the same resource could use a cached copy, depending on the default cache policy level for this request.</source>
          <target state="translated">이므로 동일한 리소스에 대 한 다른 요청에는이 요청에 대 한 기본 캐시 정책 수준에 따라 캐시 된 복사본을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Cache.RequestCacheLevel">
          <source>The following code example creates policy that returns a resource only if it is in the cache.</source>
          <target state="translated">다음 코드 예제에서는 캐시에 있는 경우에 리소스를 반환 하는 정책을 만듭니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="F:System.Net.Cache.RequestCacheLevel.BypassCache">
          <source>Satisfies a request by using the server.</source>
          <target state="translated">서버를 사용하여 요청을 만족시킵니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="F:System.Net.Cache.RequestCacheLevel.BypassCache">
          <source>No entries are taken from caches, added to caches, or removed from caches between the client and server.</source>
          <target state="translated">클라이언트와 서버 사이의 캐시에서 어떤 항목도 가져가거나, 추가하거나, 제거하지 않습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="F:System.Net.Cache.RequestCacheLevel.BypassCache">
          <source>This is the default cache behavior specified in the machine configuration file that ships with the .NET Framework.</source>
          <target state="translated">이 동작은 .NET Framework에서 제공하는 시스템 구성 파일에 기본적으로 지정된 캐시 동작입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="F:System.Net.Cache.RequestCacheLevel.CacheIfAvailable">
          <source>Satisfies a request for a resource from the cache, if the resource is available; otherwise, sends a request for a resource to the server.</source>
          <target state="translated">캐시의 리소스를 사용할 수 있는 경우 캐시에서 리소스 요청을 만족시키고, 그렇지 않으면 리소스 요청을 서버로 보냅니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="F:System.Net.Cache.RequestCacheLevel.CacheIfAvailable">
          <source>If the requested item is available in any cache between the client and the server, the request might be satisfied by the intermediate cache.</source>
          <target state="translated">요청된 항목을 클라이언트와 서버 사이의 캐시에서 사용할 수 있으면 중간 캐시에서 요청을 만족시킬 수 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Net.Cache.RequestCacheLevel.CacheIfAvailable">
          <source>A copy of a requested resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream.</source>
          <target state="translated">리소스에 대 한 응답 스트림을 검색 하는 스트림의 끝에 대 한 읽기 경우에 요청된 된 리소스의 복사본을 캐시에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Net.Cache.RequestCacheLevel.CacheIfAvailable">
          <source>So subsequent requests for the same resource would use a cached copy.</source>
          <target state="translated">따라서 후속 요청 동일한 리소스에 대 한 캐시 된 복사본을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="F:System.Net.Cache.RequestCacheLevel.CacheOnly">
          <source>Satisfies a request using the locally cached resource; does not send a request for an item that is not in the cache.</source>
          <target state="translated">로컬로 캐시된 리소스를 사용하여 요청을 만족시키며, 캐시에 해당 항목이 없더라도 요청을 서버로 보내지는 않습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="F:System.Net.Cache.RequestCacheLevel.CacheOnly">
          <source>When this cache policy level is specified, a <ph id="ph1">&lt;see cref="T:System.Net.WebException" /&gt;</ph> exception is thrown if the item is not in the client cache.</source>
          <target state="translated">이 캐시 정책 수준이 지정된 경우 클라이언트 캐시에 항목이 없으면 <ph id="ph1">&lt;see cref="T:System.Net.WebException" /&gt;</ph> 예외가 throw됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="F:System.Net.Cache.RequestCacheLevel.Default">
          <source>Satisfies a request for a resource either by using the cached copy of the resource or by sending a request for the resource to the server.</source>
          <target state="translated">캐시된 리소스 복사본을 사용하거나 서버로 리소스 요청을 보냄으로써 리소스 요청을 만족시킵니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="F:System.Net.Cache.RequestCacheLevel.Default">
          <source>The action taken is determined by the current cache policy and the age of the content in the cache.</source>
          <target state="translated">현재 캐시 정책과 콘텐츠가 캐시에 보관된 기간에 따라 수행할 작업이 결정됩니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="F:System.Net.Cache.RequestCacheLevel.Default">
          <source>This is the cache level that should be used by most applications.</source>
          <target state="translated">대부분의 응용 프로그램에서는 이 캐시 수준을 사용해야 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="F:System.Net.Cache.RequestCacheLevel.NoCacheNoStore">
          <source>Never satisfies a request by using resources from the cache and does not cache resources.</source>
          <target state="translated">캐시의 리소스를 사용하여 요청을 만족시키지 않고 리소스를 캐시하지 않습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="F:System.Net.Cache.RequestCacheLevel.NoCacheNoStore">
          <source>If the resource is present in the local cache, it is removed.</source>
          <target state="translated">리소스가 로컬 캐시에 있으면 제거됩니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="F:System.Net.Cache.RequestCacheLevel.NoCacheNoStore">
          <source>This policy level indicates to intermediate caches that they should remove the resource.</source>
          <target state="translated">이 정책 수준은 중간 캐시에서 리소스를 제거해야 함을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="F:System.Net.Cache.RequestCacheLevel.NoCacheNoStore">
          <source>In the HTTP caching protocol, this is achieved using the <ph id="ph1">&lt;see langword="no-cache" /&gt;</ph> cache control directive.</source>
          <target state="translated">HTTP 캐싱 프로토콜에서 이 작업은 <ph id="ph1">&lt;see langword="no-cache" /&gt;</ph> 캐시 제어 지시문을 사용하여 수행됩니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="F:System.Net.Cache.RequestCacheLevel.Reload">
          <source>Satisfies a request by using the server.</source>
          <target state="translated">서버를 사용하여 요청을 만족시킵니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="F:System.Net.Cache.RequestCacheLevel.Reload">
          <source>The response might be saved in the cache.</source>
          <target state="translated">응답은 캐시에 저장될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="F:System.Net.Cache.RequestCacheLevel.Reload">
          <source>In the HTTP caching protocol, this is achieved using the <ph id="ph1">&lt;see langword="no-cache" /&gt;</ph> cache control directive and the no-cache <ph id="ph2">&lt;see langword="Pragma" /&gt;</ph> header.</source>
          <target state="translated">HTTP 캐싱 프로토콜에서 이 작업은 <ph id="ph1">&lt;see langword="no-cache" /&gt;</ph> 캐시 제어 지시문과 no-cache <ph id="ph2">&lt;see langword="Pragma" /&gt;</ph> 헤더를 사용하여 수행됩니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="F:System.Net.Cache.RequestCacheLevel.Revalidate">
          <source>Satisfies a request by using the cached copy of the resource if the timestamp is the same as the timestamp of the resource on the server; otherwise, the resource is downloaded from the server, presented to the caller, and stored in the cache.</source>
          <target state="translated">캐시된 리소스 복사본의 타임스탬프가 서버에 있는 리소스의 타임스탬프와 동일하면 캐시된 리소스 복사본을 사용하여 요청을 만족시키고, 그렇지 않으면 서버에서 리소스를 다운로드하여 호출자에게 제공한 다음 캐시에 저장합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Net.Cache.RequestCacheLevel.Revalidate">
          <source>A copy of a resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream.</source>
          <target state="translated">리소스에 대 한 응답 스트림을 검색 하는 스트림의 끝에 대 한 읽기 경우에 리소스의 복사본을 캐시에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Net.Cache.RequestCacheLevel.Revalidate">
          <source>So subsequent requests for the same resource would use a cached copy if the timestamp for the cached resource is the same as the timestamp of the resource on the server.</source>
          <target state="translated">따라서 후속 요청 동일한 리소스에 대 한 캐시 된 리소스에 대 한 타임 스탬프 서버에서 리소스의 타임 스탬프와 동일한 경우 캐시 된 복사본을 사용 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>