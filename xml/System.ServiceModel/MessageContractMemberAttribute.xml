<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MessageContractMemberAttribute.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59212fc608637a253f5a16676534255eb3e980570.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9212fc608637a253f5a16676534255eb3e980570</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.MessageContractMemberAttribute">
          <source>Declares the base members for <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageBodyMemberAttribute" /&gt;</ph> and <ph id="ph2">&lt;see cref="T:System.ServiceModel.MessageHeaderAttribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageBodyMemberAttribute" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="T:System.ServiceModel.MessageHeaderAttribute" /&gt;</ph>에 대한 기본 멤버를 선언합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.MessageContractMemberAttribute">
          <source>This class contains properties common to all parts of a SOAP message.</source>
          <target state="translated">이 클래스는 SOAP 메시지의 모든 부분에 공통인 속성을 포함합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.MessageContractMemberAttribute">
          <source>For example, all parts have a name and a namespace, and potentially a level of security applied.</source>
          <target state="translated">예를 들어 모든 부분에 이름과 네임스페이스가 있으며, 보안 수준이 적용되었을 가능성이 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.MessageContractMemberAttribute">
          <source>For information on controlling the serialization of the contents of a SOAP body without modifying the default SOAP envelope itself, see <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=nameWithType&gt;</ph>, <bpt id="p1">[</bpt>Specifying Data Transfer in Service Contracts<ept id="p1">](~/docs/framework/wcf/feature-details/specifying-data-transfer-in-service-contracts.md)</ept>, and <bpt id="p2">[</bpt>Using Data Contracts<ept id="p2">](~/docs/framework/wcf/feature-details/using-data-contracts.md)</ept>.</source>
          <target state="translated">기본 SOAP 봉투 자체를 수정 하지 않고 SOAP 본문 내용의 serialization을 제어 하는 방법은 참조 하십시오. <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=nameWithType&gt;</ph>, <bpt id="p1">[</bpt>서비스 계약에 데이터 전송 지정<ept id="p1">](~/docs/framework/wcf/feature-details/specifying-data-transfer-in-service-contracts.md)</ept>, 및 <bpt id="p2">[</bpt>데이터 사용 계약<ept id="p2">](~/docs/framework/wcf/feature-details/using-data-contracts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.MessageContractMemberAttribute">
          <source>For more information about creating message contracts, see <bpt id="p1">[</bpt>Using Message Contracts<ept id="p1">](~/docs/framework/wcf/feature-details/using-message-contracts.md)</ept>.</source>
          <target state="translated">메시지 계약을 만드는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>메시지 계약을 사용 하 여<ept id="p1">](~/docs/framework/wcf/feature-details/using-message-contracts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.MessageContractMemberAttribute">
          <source>The following code examples demonstrate a custom message contract that uses the <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractAttribute&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.MessageHeaderAttribute&gt;</ph>, and <ph id="ph3">&lt;xref:System.ServiceModel.MessageBodyMemberAttribute&gt;</ph> attributes (which all inherit from <ph id="ph4">&lt;xref:System.ServiceModel.MessageContractMemberAttribute&gt;</ph>)to create custom typed messages to use in operations.</source>
          <target state="translated">다음 코드 예제에서는 작업에서 사용할 사용자 지정 형식의 메시지를 만들기 위해 <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractAttribute&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.MessageHeaderAttribute&gt;</ph> 및 <ph id="ph3">&lt;xref:System.ServiceModel.MessageBodyMemberAttribute&gt;</ph> 특성(모두 <ph id="ph4">&lt;xref:System.ServiceModel.MessageContractMemberAttribute&gt;</ph>에서 상속)을 사용하는 사용자 지정 메시지 계약을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.MessageContractMemberAttribute">
          <source>In this case, there are three members that are serialized into the body element of the SOAP message: <ph id="ph1">`sourceAccount`</ph>, <ph id="ph2">`targetAccount`</ph>, and the <ph id="ph3">`amount`</ph> value, (which is serialized into an element with the name <ph id="ph4">`transactionAmount`</ph>).</source>
          <target state="translated">이 경우 <ph id="ph1">`sourceAccount`</ph>, <ph id="ph2">`targetAccount`</ph>, 이름이 <ph id="ph3">`amount`</ph>인 요소로 serialize되는 <ph id="ph4">`transactionAmount`</ph> 값 등 세 개의 멤버가 SOAP 메시지의 본문 요소에 serialize됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.MessageContractMemberAttribute">
          <source>In addition, the <ph id="ph1">`IsAudited`</ph> SOAP header element resides in the <ph id="ph2">`http://schemas.contosobank.com/auditing/2005`</ph> namespace, and <ph id="ph3">`sourceAccount`</ph> is encrypted and digitally signed.</source>
          <target state="translated">또한 <ph id="ph1">`IsAudited`</ph> SOAP 헤더 요소는 <ph id="ph2">`http://schemas.contosobank.com/auditing/2005`</ph> 네임스페이스에 있고, <ph id="ph3">`sourceAccount`</ph>에 대해 암호화 및 디지털 서명이 수행됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.MessageContractMemberAttribute">
          <source>The <ph id="ph1">`Operation`</ph> and <ph id="ph2">`Account`</ph> types must have a data contract.</source>
          <target state="translated"><ph id="ph1">`Operation`</ph> 및 <ph id="ph2">`Account`</ph> 형식에는 데이터 계약이 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageContractMemberAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageContractMemberAttribute" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageContractMemberAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.MessageContractMemberAttribute.HasProtectionLevel">
          <source>When overridden in a derived class, gets a value that indicates whether the member has a protection level assigned.</source>
          <target state="translated">파생 클래스에서 재정의되면 멤버에 할당된 보호 수준이 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.HasProtectionLevel">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the member has a protection level; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">멤버에 보호 수준이 지정되어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.MessageContractMemberAttribute.Name">
          <source>Specifies the name of the element that corresponds to this member.</source>
          <target state="translated">이 멤버에 해당하는 요소의 이름을 지정합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.Name">
          <source>The name of the element that corresponds to this member.</source>
          <target state="translated">이 멤버에 해당하는 요소의 이름입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.Name">
          <source>This string must be a valid XML element name.</source>
          <target state="translated">이 문자열은 올바른 XML 요소 이름이어야 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.Name">
          <source>The following code examples demonstrate a custom message contract that uses the <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractAttribute&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.MessageHeaderAttribute&gt;</ph>, and <ph id="ph3">&lt;xref:System.ServiceModel.MessageBodyMemberAttribute&gt;</ph> attributes to create custom, strongly-typed messages to use as parameters.</source>
          <target state="translated">다음 코드 예제에서는 매개 변수로 사용할 강력한 형식의 사용자 지정 메시지를 만들기 위해 <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractAttribute&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.MessageHeaderAttribute&gt;</ph> 및 <ph id="ph3">&lt;xref:System.ServiceModel.MessageBodyMemberAttribute&gt;</ph> 특성을 사용하는 사용자 지정 메시지 계약을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.Name">
          <source>In this case, there are three data members that are serialized into the body element of the SOAP message: <ph id="ph1">`sourceAccount`</ph>, <ph id="ph2">`targetAccount`</ph>, and the <ph id="ph3">`amount`</ph> value, (which is serialized into an element with the name <ph id="ph4">`transactionAmount`</ph>).</source>
          <target state="translated">이 경우 <ph id="ph1">`sourceAccount`</ph>, <ph id="ph2">`targetAccount`</ph> 및 이름이 <ph id="ph3">`amount`</ph>인 요소로 serialize되는 <ph id="ph4">`transactionAmount`</ph> 값 등 SOAP 메시지의 본문 요소로 serialize되는 세 개의 데이터 멤버가 있습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.Name">
          <source>In addition, the <ph id="ph1">`IsAudited`</ph> SOAP header element resides in the <ph id="ph2">`http://schemas.contosobank.com/auditing/2005`</ph> namespace.</source>
          <target state="translated">또한 <ph id="ph1">`IsAudited`</ph> SOAP 헤더 요소가 <ph id="ph2">`http://schemas.contosobank.com/auditing/2005`</ph> 네임스페이스에 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.Name">
          <source>The <ph id="ph1">`Operation`</ph> and <ph id="ph2">`Account`</ph> types must also have a data contract.</source>
          <target state="translated"><ph id="ph1">`Operation`</ph> 및 <ph id="ph2">`Account`</ph> 형식에는 데이터 계약도 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.MessageContractMemberAttribute.Namespace">
          <source>Specifies the namespace of the element that corresponds to this member.</source>
          <target state="translated">이 멤버에 해당하는 요소의 네임스페이스를 지정합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.Namespace">
          <source>A namespace URI of the element that corresponds to this member.</source>
          <target state="translated">이 멤버에 해당하는 요소의 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.Namespace">
          <source>The following code examples demonstrate a custom message contract that uses the <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractAttribute&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.MessageHeaderAttribute&gt;</ph>, and <ph id="ph3">&lt;xref:System.ServiceModel.MessageBodyMemberAttribute&gt;</ph> attributes (which all inherit from <ph id="ph4">&lt;xref:System.ServiceModel.MessageContractMemberAttribute&gt;</ph>)to create custom typed messages to use in operations.</source>
          <target state="translated">다음 코드 예제에서는 작업에서 사용할 사용자 지정 형식의 메시지를 만들기 위해 <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractAttribute&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.MessageHeaderAttribute&gt;</ph> 및 <ph id="ph3">&lt;xref:System.ServiceModel.MessageBodyMemberAttribute&gt;</ph> 특성(모두 <ph id="ph4">&lt;xref:System.ServiceModel.MessageContractMemberAttribute&gt;</ph>에서 상속)을 사용하는 사용자 지정 메시지 계약을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.Namespace">
          <source>In this case, there are three members that are serialized into the body element of the SOAP message: <ph id="ph1">`sourceAccount`</ph>, <ph id="ph2">`targetAccount`</ph>, and the <ph id="ph3">`amount`</ph> value, (which is serialized into an element with the name <ph id="ph4">`transactionAmount`</ph>).</source>
          <target state="translated">이 경우 <ph id="ph1">`sourceAccount`</ph>, <ph id="ph2">`targetAccount`</ph>, 이름이 <ph id="ph3">`amount`</ph>인 요소로 serialize되는 <ph id="ph4">`transactionAmount`</ph> 값 등 세 개의 멤버가 SOAP 메시지의 본문 요소에 serialize됩니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.Namespace">
          <source>In addition, the <ph id="ph1">`IsAudited`</ph> SOAP header element resides in the <ph id="ph2">`http://schemas.contosobank.com/auditing/2005`</ph> namespace, and <ph id="ph3">`sourceAccount`</ph> is encrypted and digitally signed.</source>
          <target state="translated">또한 <ph id="ph1">`IsAudited`</ph> SOAP 헤더 요소는 <ph id="ph2">`http://schemas.contosobank.com/auditing/2005`</ph> 네임스페이스에 있고, <ph id="ph3">`sourceAccount`</ph>에 대해 암호화 및 디지털 서명이 수행됩니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.Namespace">
          <source>The <ph id="ph1">`Operation`</ph> and <ph id="ph2">`Account`</ph> types must have a data contract.</source>
          <target state="translated"><ph id="ph1">`Operation`</ph> 및 <ph id="ph2">`Account`</ph> 형식에는 데이터 계약이 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>Specifies whether the member is to be transmitted as-is, signed, or signed and encrypted.</source>
          <target state="translated">멤버를 현재 상태로 전송할지, 서명한 상태로 전송할지, 서명하고 암호화한 상태로 전송할지 여부를 지정합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Net.Security.ProtectionLevel.None" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Net.Security.ProtectionLevel.None" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>To make use of the <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A&gt;</ph> property in either the <ph id="ph2">&lt;xref:System.ServiceModel.MessageHeaderAttribute&gt;</ph> or <ph id="ph3">&lt;xref:System.ServiceModel.MessageBodyMemberAttribute&gt;</ph> attributes you must properly configure the binding and behaviors.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.ServiceModel.MessageHeaderAttribute&gt;</ph> 특성에서 <ph id="ph3">&lt;xref:System.ServiceModel.MessageBodyMemberAttribute&gt;</ph> 속성을 사용하려면 바인딩 및 동작을 제대로 구성해야 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>If these security features are used without a proper configuration (for example, using <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType&gt;</ph> with a message part without supplying security credentials) an exception is thrown at run time.</source>
          <target state="translated">예를 들어 보안 자격 증명을 제공하지 않고 메시지 부분과 함께 <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType&gt;</ph>을 사용하는 등 이러한 보안 기능을 제대로 구성하지 않고 사용하면 런타임에 예외가 throw됩니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>In addition, the protection level is determined for each header individually.</source>
          <target state="translated">또한 각 헤더에 대해 개별적으로 보호 수준이 결정됩니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>However, the SOAP body has only one protection level, regardless of the number of body parts.</source>
          <target state="translated">그러나 SOAP 본문에는 본문 부분의 수에 상관없이 하나의 보호 수준만 있습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>The protection level of the body is determined by the highest <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A&gt;</ph> property value of all the body parts.</source>
          <target state="translated">본문의 보호 수준은 모든 본문 부분 중 가장 큰 <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A&gt;</ph> 속성 값에 따라 결정됩니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>For example, consider the following class:</source>
          <target state="translated">예를 들어 다음 클래스를 예로 들어 볼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>In this example, the <ph id="ph1">`recordID`</ph> header is not protected, <ph id="ph2">`patientName`</ph> is signed, and <ph id="ph3">`SSN`</ph> is encrypted and signed.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">`recordID`</ph> 헤더가 보호되지 않고, <ph id="ph2">`patientName`</ph>에 서명이 수행되고, <ph id="ph3">`SSN`</ph>에 대해 암호화 및 서명이 수행됩니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>There is at least one body part, <ph id="ph1">`medicalHistory`</ph>, with <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph> and thus the entire message body is encrypted and signed, even though the <ph id="ph3">`comments`</ph> and <ph id="ph4">`diagnosis`</ph> body parts specify lower protection levels.</source>
          <target state="translated"><ph id="ph1">`medicalHistory`</ph> 및 <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph> 본문 부분에서 보호 수준을 더 낮게 지정하더라도 <ph id="ph3">`comments`</ph>이 있는 본문 부분인 <ph id="ph4">`diagnosis`</ph>가 적어도 하나는 있으므로 전체 메시지 본문에 대해 암호화 및 서명이 수행됩니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>The protection behavior at runtime is the combination of the protection-level values set on the following properties.</source>
          <target state="translated">런타임의 보호 동작은 다음 속성에서 설정한 보호 수준 값의 조합입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>These properties have a hierarchical structure.</source>
          <target state="translated">이러한 속성은 계층 구조로 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>Setting the outermost value establishes the default setting for all narrower scopes unless a different value for a narrower scope is explicitly set.</source>
          <target state="translated">가장 바깥쪽 값을 설정하면 더 좁은 범위에 명시적으로 다른 값을 설정하지 않는 한 모든 더 좁은 범위에 이 값이 기본 설정으로 지정됩니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>In this case, the outer value remains the default for all narrower scopes with the exception of that specifically set.</source>
          <target state="translated">이 경우 특별히 설정된 범위를 제외하고 바깥쪽 값은 모든 더 좁은 범위의 기본값으로 유지됩니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>For example, if <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed.</source>
          <target state="translated">예를 들어 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph>을 <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph>으로 설정한 경우 더 좁은 다른 범위에는 보호 수준 설정이 없다면 작업 계약의 모든 메시지에 대해 암호화 및 서명이 수행됩니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>If, however, one of those operations has the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> set to <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType&gt;</ph>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed.</source>
          <target state="translated">이러한 작업 중 하나에 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph>으로 설정된 <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType&gt;</ph>이 있으면 해당 작업의 메시지에 대해서는 서명이 수행되지만, 계약의 다른 모든 메시지의 경우 암호화 및 서명이 수행됩니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>For details about protection levels and their assumptions and scopes, see <bpt id="p1">[</bpt>Understanding Protection Level<ept id="p1">](~/docs/framework/wcf/understanding-protection-level.md)</ept>.</source>
          <target state="translated">보호 수준의 가정 및 범위에 대 한 세부 정보를 참조 하십시오. <bpt id="p1">[</bpt>보호 수준 이해<ept id="p1">](~/docs/framework/wcf/understanding-protection-level.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>The scopes at which these values are set are:</source>
          <target state="translated">이러한 값이 설정된 범위는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> property on <ph id="ph2">&lt;xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph>의 <ph id="ph2">&lt;xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType&gt;</ph> 속성</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> property on <ph id="ph2">&lt;xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph>의 <ph id="ph2">&lt;xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType&gt;</ph> 속성</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">계약에 명시적으로 지정된 보호 수준이 없고 기본 바인딩이 전송 수준이나 메시지 수준에서 보안을 지원하는 경우 전체 계약에서 유효한 보호 수준은 <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>If the binding does not support security (such as <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph>), the effective <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType&gt;</ph> is <ph id="ph3">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph> for the whole contract.</source>
          <target state="translated">바인딩에서 보안을 지원하지 않는 경우(예: <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph>) 전체 계약에서 유효한 <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType&gt;</ph>은 <ph id="ph3">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
          <source>The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">결과는 끝점 바인딩에 따라 다르며, 계약에서 <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph>을 지정하더라도 클라이언트가 다른 메시지 수준이나 전송 수준의 보안 보호를 요청할 수 있습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>