<Type Name="NetPeerTcpBinding" FullName="System.ServiceModel.NetPeerTcpBinding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4f44b0725f0108de70cc208833f73242cc32bec6" /><Meta Name="ms.sourcegitcommit" Value="b0551d7828f015124aca601dbb64bd913cc5067d" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="12/13/2018" /><Meta Name="ms.locfileid" Value="53333562" /></Metadata><TypeSignature Language="C#" Value="public class NetPeerTcpBinding : System.ServiceModel.Channels.Binding, System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NetPeerTcpBinding extends System.ServiceModel.Channels.Binding implements class System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.NetPeerTcpBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class NetPeerTcpBinding&#xA;Inherits Binding&#xA;Implements IBindingRuntimePreferences" />
  <TypeSignature Language="C++ CLI" Value="public ref class NetPeerTcpBinding : System::ServiceModel::Channels::Binding, System::ServiceModel::Channels::IBindingRuntimePreferences" />
  <TypeSignature Language="F#" Value="type NetPeerTcpBinding = class&#xA;    inherit Binding&#xA;    interface IBindingRuntimePreferences" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.Binding</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IBindingRuntimePreferences</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("PeerChannel feature is obsolete and will be removed in the future.", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="bef87-101">피어-투-피어 네트워크 응용 프로그램을 위한 보안 바인딩을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-101">Provides a secure binding for peer-to-peer network applications.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef87-102"><xref:System.ServiceModel.NetPeerTcpBinding> 바인딩은 TCP 수준의 피어 투 피어 메시 인프라를 사용하는 피어 네트워킹 응용 프로그램을 만들 수 있도록 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-102">The <xref:System.ServiceModel.NetPeerTcpBinding> binding provides support for the creation of peer networking applications that use a TCP-level peer-to-peer mesh infrastructure.</span></span>  
  
 <span data-ttu-id="bef87-103">각 <xref:System.ServiceModel.PeerNode> 인스턴스는 이 바인딩 형식으로 정의된 여러 피어 채널을 호스팅할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-103">Each <xref:System.ServiceModel.PeerNode> instance can host multiple peer channels defined with this binding type.</span></span> <span data-ttu-id="bef87-104">이 형식으로 구성된 인스턴스를 사용하여 생성한 채널 팩터리는 피어 채널을 생성하는 데 사용될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-104">Channel factories produced using a configured instance of this type can be used to generate peer channels.</span></span> <span data-ttu-id="bef87-105">피어 채널 팩터리는 입력 전용(<xref:System.ServiceModel.Channels.IInputChannel> 구현), 출력 전용(<xref:System.ServiceModel.Channels.IOutputChannel> 구현) 및 양방향(<xref:System.ServiceModel.Channels.IDuplexChannel> 구현) 피어 채널을 생성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-105">A peer channel factory can produce peer channels that are input-only (implements <xref:System.ServiceModel.Channels.IInputChannel>), output-only (implements <xref:System.ServiceModel.Channels.IOutputChannel>), and duplex (implements <xref:System.ServiceModel.Channels.IDuplexChannel>).</span></span>  
  
 <span data-ttu-id="bef87-106">이 바인딩은 WCF(Windows Communication Framework)에서 제공하는 표준 바인딩 중 하나로서,</span><span class="sxs-lookup"><span data-stu-id="bef87-106">This is one of the standard bindings provided by the Windows Communication Framework (WCF).</span></span> <span data-ttu-id="bef87-107">명령 코드에서 사용하거나 응용 프로그램의 해당 XML 구성 파일에서 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-107">It can be used in imperative code or specified in the corresponding XML configuration file for the application.</span></span> <span data-ttu-id="bef87-108">서비스가 초기화될 때 구성 값이 설정되어야 하는 특정 고급 시나리오를 제외하고는, 구성 값을 사용하여 바인딩을 정의하고 코드 기반 접근 방식을 사용하지 않는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-108">The recommended procedure is to define the binding using configuration values and not to use a code-based approach, except in certain advanced scenarios where configuration values must be set as a service is initialized.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bef87-109"><see cref="T:System.ServiceModel.NetPeerTcpBinding" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-109">Initializes a new instance of the <see cref="T:System.ServiceModel.NetPeerTcpBinding" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetPeerTcpBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetPeerTcpBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetPeerTcpBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bef87-110"><see cref="T:System.ServiceModel.NetPeerTcpBinding" /> 클래스의 새로운 기본 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-110">Initializes a new default instance of the <see cref="T:System.ServiceModel.NetPeerTcpBinding" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetPeerTcpBinding (string configurationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string configurationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetPeerTcpBinding.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (configurationName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetPeerTcpBinding(System::String ^ configurationName);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.NetPeerTcpBinding : string -&gt; System.ServiceModel.NetPeerTcpBinding" Usage="new System.ServiceModel.NetPeerTcpBinding configurationName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="configurationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configurationName"><span data-ttu-id="bef87-111">바인딩을 초기화할 때 해당 설정이 사용되는 바인딩 요소를 식별하는 <see langword="configurationName" /> 특성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-111">The value of the <see langword="configurationName" /> attribute that identifies the binding element whose settings are used to initialize the binding.</span></span></param>
        <summary><span data-ttu-id="bef87-112">지정된 구성 이름을 사용하여 <see cref="T:System.ServiceModel.NetPeerTcpBinding" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-112">Initializes a new instance of the <see cref="T:System.ServiceModel.NetPeerTcpBinding" /> class with a specified configuration name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef87-113">이 생성자는 제공된 이름으로 새 <xref:System.ServiceModel.NetPeerTcpBinding>을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-113">This constructor creates a new <xref:System.ServiceModel.NetPeerTcpBinding> with the supplied name.</span></span> <span data-ttu-id="bef87-114">해당 이름의 구성이 이미 있는 경우 그 구성 파일의 설정이 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-114">If a configuration for that name already exists, the settings in the configuration file that contains that name are used.</span></span> <span data-ttu-id="bef87-115">해당 이름을 가진 기존 구성이 없는 경우에는 기본 구성 설정이 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-115">If the name does not already exist, the default configuration settings are used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException"><span data-ttu-id="bef87-116">구성이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="bef87-116">The configuration is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateBindingElements">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElementCollection CreateBindingElements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElementCollection CreateBindingElements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetPeerTcpBinding.CreateBindingElements" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateBindingElements () As BindingElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElementCollection ^ CreateBindingElements();" />
      <MemberSignature Language="F#" Value="override this.CreateBindingElements : unit -&gt; System.ServiceModel.Channels.BindingElementCollection" Usage="netPeerTcpBinding.CreateBindingElements " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElementCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bef87-117">바인딩에 대한 바인딩 요소를 포함하는 컬렉션을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-117">Creates a collection with the binding elements for the binding.</span></span></summary>
        <returns><span data-ttu-id="bef87-118">바인딩을 만드는 <see cref="T:System.Collections.Generic.ICollection`1" /> 형식의 <see cref="T:System.ServiceModel.Channels.BindingElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-118">The <see cref="T:System.Collections.Generic.ICollection`1" /> of type <see cref="T:System.ServiceModel.Channels.BindingElement" /> that makes up the binding.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvelopeVersion">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EnvelopeVersion EnvelopeVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EnvelopeVersion EnvelopeVersion" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetPeerTcpBinding.EnvelopeVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnvelopeVersion As EnvelopeVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EnvelopeVersion ^ EnvelopeVersion { System::ServiceModel::EnvelopeVersion ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnvelopeVersion : System.ServiceModel.EnvelopeVersion" Usage="System.ServiceModel.NetPeerTcpBinding.EnvelopeVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EnvelopeVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bef87-119">이 바인딩과 함께 사용되는 SOAP 버전을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-119">Gets the SOAP version used with this binding.</span></span></summary>
        <value><span data-ttu-id="bef87-120">이 바인딩과 함께 사용할 SOAP의 버전을 지정하는 <see cref="T:System.ServiceModel.EnvelopeVersion" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-120"><see cref="T:System.ServiceModel.EnvelopeVersion" /> that specifies the version of SOAP to use with this binding.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPnrpAvailable">
      <MemberSignature Language="C#" Value="public static bool IsPnrpAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsPnrpAvailable" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetPeerTcpBinding.IsPnrpAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsPnrpAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsPnrpAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPnrpAvailable : bool" Usage="System.ServiceModel.NetPeerTcpBinding.IsPnrpAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bef87-121">컴퓨터에 PNRP 서비스가 설치되었고 사용 가능한지 여부를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-121">Gets whether the PNRP service is installed and available on the computer.</span></span></summary>
        <value><span data-ttu-id="bef87-122">PNRP가 설치되고 구성되었으면 True이고, 그러지 않으면 False입니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-122">true if PNRP is installed and configured; false if it is not.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListenIPAddress">
      <MemberSignature Language="C#" Value="public System.Net.IPAddress ListenIPAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPAddress ListenIPAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetPeerTcpBinding.ListenIPAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property ListenIPAddress As IPAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPAddress ^ ListenIPAddress { System::Net::IPAddress ^ get(); void set(System::Net::IPAddress ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ListenIPAddress : System.Net.IPAddress with get, set" Usage="System.ServiceModel.NetPeerTcpBinding.ListenIPAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.PeerTransportListenAddressConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bef87-123">로컬 피어 노드의 수신 대기에 사용되는 IP 주소를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-123">Gets or sets the IP address used for listening by the local peer node.</span></span></summary>
        <value><span data-ttu-id="bef87-124">로컬 피어 노드가 수신 대기하는 올바른 형식의 IPv4 또는 IPv6 주소를 포함하는 <see cref="T:System.String" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-124">A <see cref="T:System.String" /> value that contains the well-formed IPv4 or IPv6 address upon which the local peer node is listening.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef87-125">이 속성이 설정되지 않거나 `null` 또는 <xref:System.String.Empty>로 설정되면, 연결된 <xref:System.ServiceModel.PeerNode>가 로컬 컴퓨터에 대해 구성된 모든 전역 주소(IPv4 및 IPv6 모두)를 수신 대기합니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-125">If this property is not set, or is set to `null` or <xref:System.String.Empty>, the associated <xref:System.ServiceModel.PeerNode> listens on all global addresses (both IPv4 and IPv6) configured for the local machine.</span></span>  
  
 <span data-ttu-id="bef87-126">이 속성에 유효한 유니캐스트 IP 주소가 지정된 경우에는 연결된 <xref:System.ServiceModel.PeerNode> 개체가 해당 주소를 수신 대기합니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-126">If a valid unicast IP address is specified for this property, then the associated <xref:System.ServiceModel.PeerNode> object listens on that address.</span></span> <span data-ttu-id="bef87-127">IPv4 및 IPv6 와일드카드 주소는 유효한 것으로 간주되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-127">IPv4 and IPv6 wildcard addresses are not considered valid.</span></span>  
  
 <span data-ttu-id="bef87-128">이 속성에 `null`이 아닌 IP 주소 문자열이 <xref:System.ServiceModel.Channels.PnrpPeerResolverBindingElement>와 함께 지정되면 이 IP 주소는 가상 인터페이스가 아니라 실제 인터페이스와 연결되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-128">If a non-`null` IP address string is specified for this property in conjunction with <xref:System.ServiceModel.Channels.PnrpPeerResolverBindingElement>, then the IP address must be associated with a physical interface rather than a virtual one.</span></span>  
  
 <span data-ttu-id="bef87-129">기본 PNRP(피어 확인자)를 등록하려면 ad-hoc 네트워크에 ListenIPAddress가 설정되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-129">ListenIPAddress must be set for ad-hoc networks in order to register with the default peer resolver (PNRP).</span></span> <span data-ttu-id="bef87-130">이 속성이 <xref:System.ServiceModel.Configuration.PnrpPeerResolverElement>(기본 피어 확인자)와 함께 지정되면 IP 주소는 터널링 인터페이스와 같은 가상 인터페이스가 아니라 물리적 네트워크 인터페이스에 속해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-130">If this property is specified in conjunction with <xref:System.ServiceModel.Configuration.PnrpPeerResolverElement> (the default peer resolver), then the IP address must belong to a physical network interface rather than a virtual one (such as a tunneling interface).</span></span> <span data-ttu-id="bef87-131">PNRP에만 실제 인터페이스에 해당 하는 PNRP 클라우드 내에서 게시 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-131">This is because PNRP only publishes within PNRP clouds corresponding to physical interfaces.</span></span> <span data-ttu-id="bef87-132">이 속성을 null로 설정하면 모든 전역 주소가 전역 PNRP 클라우드에 게시됩니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-132">By setting this property to null, all global addresses are published in the global PNRP cloud.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bef87-133">제공된 주소가 잘못되었거나 잘못된 형식인 경우</span><span class="sxs-lookup"><span data-stu-id="bef87-133">The provided address is invalid or incorrectly formed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaxBufferPoolSize">
      <MemberSignature Language="C#" Value="public long MaxBufferPoolSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxBufferPoolSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxBufferPoolSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxBufferPoolSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxBufferPoolSize : int64 with get, set" Usage="System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(524288)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bef87-134">피어 TCP 버퍼에 사용되는 메모리 풀의 최대 크기(바이트)를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-134">Gets or sets the maximum size, in bytes, of the memory pool used for the peer TCP buffer.</span></span></summary>
        <value><span data-ttu-id="bef87-135">메모리에서 들어오는 메시지를 버퍼링하는 데 사용되는 최대 바이트 수를 지정하는 <see cref="T:System.Int32" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-135">A <see cref="T:System.Int32" /> value that specifies the maximum number of bytes that are used to buffer incoming messages in memory.</span></span> <span data-ttu-id="bef87-136">기본값은 65,536바이트입니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-136">The default value is 65,536 bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef87-137"><xref:System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize%2A>의 값은 기본값이 65536바이트(64KB)인 <xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A>보다 작을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-137">The value of <xref:System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize%2A> cannot be less than <xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A> whose default value is 65536 bytes (64 KB).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxReceivedMessageSize">
      <MemberSignature Language="C#" Value="public long MaxReceivedMessageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxReceivedMessageSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxReceivedMessageSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxReceivedMessageSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxReceivedMessageSize : int64 with get, set" Usage="System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(65536)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bef87-138">이 바인딩으로 생성된 피어 채널에서 처리하는 TCP 메시지의 최대 크기(바이트)를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-138">Gets or sets the maximum size, in bytes, of TCP messages handled by peer channels created by this binding.</span></span></summary>
        <value><span data-ttu-id="bef87-139">이 바인딩에서 만든 피어 채널을 통해 전송된 TCP 메시지의 최대 크기(바이트)를 포함하는 <see cref="T:System.Int32" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-139"><see cref="T:System.Int32" /> that contains the maximum size in bytes of TCP messages sent over the peer channels created by this binding.</span></span> <span data-ttu-id="bef87-140">기본값은 65,536(64 KB)입니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-140">The default value is 65,536 (64 KB).</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetPeerTcpBinding.Port" />
      <MemberSignature Language="VB.NET" Value="Public Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Port : int with get, set" Usage="System.ServiceModel.NetPeerTcpBinding.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bef87-141">바인딩이 수행되는 네트워크 포트를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-141">Gets or sets the network port on which to bind.</span></span></summary>
        <value><span data-ttu-id="bef87-142">이 바인딩 인스턴스가 피어별 TCP 메시지를 처리하는 네트워크 포트를 나타내는 <see cref="T:System.Int32" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-142">A <see cref="T:System.Int32" /> value that represents the network port on which this binding instance will process peer-specific TCP messages.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef87-143">포트 값이 잘못된 경우 <xref:System.ArgumentException>이 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-143">If the port value is invalid, <xref:System.ArgumentException> is raised.</span></span> <span data-ttu-id="bef87-144">이 속성의 기본값은 0이며, 이는 수신기 포트가 예약되지 않은 모든 포트에서 임의로 선택됨을 의미합니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-144">The default value for this property is 0, which indicates that the listener port is randomly selected from all unreserved ports.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReaderQuotas">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDictionaryReaderQuotas ReaderQuotas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDictionaryReaderQuotas ReaderQuotas" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetPeerTcpBinding.ReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Property ReaderQuotas As XmlDictionaryReaderQuotas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlDictionaryReaderQuotas ^ ReaderQuotas { System::Xml::XmlDictionaryReaderQuotas ^ get(); void set(System::Xml::XmlDictionaryReaderQuotas ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ReaderQuotas : System.Xml.XmlDictionaryReaderQuotas with get, set" Usage="System.ServiceModel.NetPeerTcpBinding.ReaderQuotas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReaderQuotas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bef87-145">이 바인딩과 연결된 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-145">Gets or sets the <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that is associated with this binding.</span></span></summary>
        <value><span data-ttu-id="bef87-146">이 바인딩과 연결된 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-146">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that is associated with this binding.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bef87-147">응용 프로그램이 이 속성을 null로 설정하려고 시도한 경우</span><span class="sxs-lookup"><span data-stu-id="bef87-147">The application attempted to set this property to null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Resolver">
      <MemberSignature Language="C#" Value="public System.ServiceModel.PeerResolvers.PeerResolverSettings Resolver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.PeerResolvers.PeerResolverSettings Resolver" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetPeerTcpBinding.Resolver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Resolver As PeerResolverSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::PeerResolvers::PeerResolverSettings ^ Resolver { System::ServiceModel::PeerResolvers::PeerResolverSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Resolver : System.ServiceModel.PeerResolvers.PeerResolverSettings" Usage="System.ServiceModel.NetPeerTcpBinding.Resolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerResolvers.PeerResolverSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bef87-148">피어 메시 ID를 피어 메시 내 노드의 엔드포인트 IP 주소로 확인하기 위해 이 바인딩 인스턴스에서 사용하는 <see cref="T:System.ServiceModel.PeerResolver" />를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-148">Gets the <see cref="T:System.ServiceModel.PeerResolver" /> used by this binding instance to resolve a peer mesh ID to the endpoint IP addresses of nodes within the peer mesh.</span></span></summary>
        <value><span data-ttu-id="bef87-149">피어 메시 ID를, 메시에 참여하는 여러 노드를 나타내는 <see cref="T:System.ServiceModel.PeerResolver" /> 인스턴스 집합으로 확인하는 데 사용되는 <see cref="T:System.ServiceModel.PeerNodeAddress" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-149">A <see cref="T:System.ServiceModel.PeerResolver" /> used to resolve a peer mesh ID to a set of <see cref="T:System.ServiceModel.PeerNodeAddress" /> instances representing several nodes participating in the mesh.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scheme">
      <MemberSignature Language="C#" Value="public override string Scheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scheme" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetPeerTcpBinding.Scheme" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Scheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Scheme { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scheme : string" Usage="System.ServiceModel.NetPeerTcpBinding.Scheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bef87-150">이 바인딩과 연결된 전송 프로토콜에 사용되는 URI 체계를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-150">Gets the URI scheme used for the transport protocol associated with this binding.</span></span></summary>
        <value><span data-ttu-id="bef87-151">이 바인딩에 사용되는 특정 전송 프로토콜을 위한 URI 체계를 지정하는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-151">A <see cref="T:System.String" /> that specifies the URI scheme for the specific transport protocol used for this binding.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bef87-152">이 값은 "net.p2p"가 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-152">This value must be "net.p2p".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Security">
      <MemberSignature Language="C#" Value="public System.ServiceModel.PeerSecuritySettings Security { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.PeerSecuritySettings Security" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetPeerTcpBinding.Security" />
      <MemberSignature Language="VB.NET" Value="Public Property Security As PeerSecuritySettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::PeerSecuritySettings ^ Security { System::ServiceModel::PeerSecuritySettings ^ get(); void set(System::ServiceModel::PeerSecuritySettings ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Security : System.ServiceModel.PeerSecuritySettings with get, set" Usage="System.ServiceModel.NetPeerTcpBinding.Security" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerSecuritySettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bef87-153">이 바인딩에서 만든 피어 채널에 설정할 보안을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-153">Gets or sets the security to set on peer channels created by this binding.</span></span></summary>
        <value><span data-ttu-id="bef87-154">이 바인딩에서 만든 피어 채널에 설정할 보안을 나타내는 <see cref="T:System.ServiceModel.PeerSecuritySettings" /> 열거형 값입니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-154"><see cref="T:System.ServiceModel.PeerSecuritySettings" /> enumeration value that indicates the security to set on peer channels created by this binding.</span></span> <span data-ttu-id="bef87-155">보안은 메시지 또는 전송별로 고유할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-155">Security can be either message- or transport-specific.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeReaderQuotas">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeReaderQuotas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeReaderQuotas() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetPeerTcpBinding.ShouldSerializeReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeReaderQuotas () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeReaderQuotas();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeReaderQuotas : unit -&gt; bool" Usage="netPeerTcpBinding.ShouldSerializeReaderQuotas " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bef87-156">바인딩에 대한 판독기 할당량 데이터를 serialize해야 하는지 여부를 지정하는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-156">Gets a value that specifies whether reader quota data for the binding should be serialized.</span></span></summary>
        <returns><span data-ttu-id="bef87-157">판독기 할당량 데이터를 serialize해야 하면 <see langword="true" />를 지정하고, 그러지 않으면 <see langword="false" />를 지정하는 <see cref="T:System.Boolean" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-157">Returns <see cref="T:System.Boolean" /> that specifies <see langword="true" /> if reader quota data should be serialized, and <see langword="false" /> if it should not be serialized.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSecurity">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeSecurity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetPeerTcpBinding.ShouldSerializeSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeSecurity () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeSecurity();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeSecurity : unit -&gt; bool" Usage="netPeerTcpBinding.ShouldSerializeSecurity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bef87-158">바인딩에 대한 보안 정보를 serialize해야 하는지 여부를 지정하는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-158">Gets a value that specifies whether security information for the binding should be serialized.</span></span></summary>
        <returns><span data-ttu-id="bef87-159">바인딩에 대한 보안 정보를 작렬화해야 하면 <see langword="true" />를 지정하고, 그러지 않으면 <see langword="false" />를 지정하는 <see cref="T:System.Boolean" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-159">Returns <see cref="T:System.Boolean" /> that specifies <see langword="true" /> if the security information for the binding should be serialized, and <see langword="false" /> if it should not be serialized.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously">
      <MemberSignature Language="C#" Value="bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetPeerTcpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ReceiveSynchronously As Boolean Implements IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ServiceModel::Channels::IBindingRuntimePreferences::ReceiveSynchronously { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bef87-160">이 바인딩에서 만든 피어 채널을 통해 들어오는 요청이 동기적으로 처리되는지 아니면 비동기적으로 처리되는지를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-160">Gets whether incoming requests over peer channels created by this binding are handled synchronously or asynchronously.</span></span></summary>
        <value><span data-ttu-id="bef87-161">True이면 들어오는 요청이 동기적으로 처리되고, False이면 비동기적으로 처리됩니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-161">If true, incoming requests are handled synchronously; if false, they are handled asynchronously.</span></span> <span data-ttu-id="bef87-162">기본값은 False로, 요청이 비동기적으로 처리됩니다.</span><span class="sxs-lookup"><span data-stu-id="bef87-162">The default value is false, with requests handled asynchronously.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>