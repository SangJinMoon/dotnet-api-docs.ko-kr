<Type Name="NetNamedPipeBinding" FullName="System.ServiceModel.NetNamedPipeBinding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2fdfcba0d8fee9c1f2dbe4b4bc8409990f52bc1d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NetNamedPipeBinding : System.ServiceModel.Channels.Binding, System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NetNamedPipeBinding extends System.ServiceModel.Channels.Binding implements class System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.NetNamedPipeBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class NetNamedPipeBinding&#xA;Inherits Binding&#xA;Implements IBindingRuntimePreferences" />
  <TypeSignature Language="C++ CLI" Value="public ref class NetNamedPipeBinding : System::ServiceModel::Channels::Binding, System::ServiceModel::Channels::IBindingRuntimePreferences" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.Binding</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IBindingRuntimePreferences</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="0a3e5-101">시스템 통신에 적합한, 안전하고 신뢰할 수 있는 바인딩을 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0a3e5-101">Provides a secure and reliable binding that is optimized for on-machine communication.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a3e5-102"><xref:System.ServiceModel.NetNamedPipeBinding>에서는 기본적으로 런타임 통신 스택을 생성하며, 이 스택은 전송 보안, 메시지 배달을 위한 명명된 파이프 및 이진 메시지 인코딩을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="0a3e5-102">The <xref:System.ServiceModel.NetNamedPipeBinding> generates a run-time communication stack by default, which uses transport security, named pipes for message delivery, and a binary message encoding.</span></span> <span data-ttu-id="0a3e5-103">이 바인딩은 시스템 내 통신에 적합한 [!INCLUDE[indigo1](~/includes/indigo1-md.md)] 시스템 제공 기능입니다.</span><span class="sxs-lookup"><span data-stu-id="0a3e5-103">This binding is an appropriate [!INCLUDE[indigo1](~/includes/indigo1-md.md)] system-provided choice for on-machine communication.</span></span> <span data-ttu-id="0a3e5-104">트랜잭션도 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="0a3e5-104">It also supports transactions.</span></span>  
  
 <span data-ttu-id="0a3e5-105"><xref:System.ServiceModel.NetNamedPipeBinding>의 기본 구성은 <xref:System.ServiceModel.NetTcpBinding>에서 제공하는 구성과 비슷하지만, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] 구현이 시스템에서만 사용되므로 노출되는 기능이 더 적기 때문에 더 간단합니다.</span><span class="sxs-lookup"><span data-stu-id="0a3e5-105">The default configuration for the <xref:System.ServiceModel.NetNamedPipeBinding> is similar to the configuration provided by the <xref:System.ServiceModel.NetTcpBinding>, but it is simpler because the [!INCLUDE[indigo2](~/includes/indigo2-md.md)] implementation is only meant for on-machine use and consequently there are fewer exposed features.</span></span> <span data-ttu-id="0a3e5-106">가장 두드러진 차이점은 <xref:System.ServiceModel.SecurityMode> 설정에서는 <xref:System.ServiceModel.SecurityMode.None> 및 <xref:System.ServiceModel.SecurityMode.Transport> 옵션만 제공한다는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="0a3e5-106">The most notable difference is that the <xref:System.ServiceModel.SecurityMode> setting only offers the <xref:System.ServiceModel.SecurityMode.None> and <xref:System.ServiceModel.SecurityMode.Transport> options.</span></span> <span data-ttu-id="0a3e5-107">SOAP 보안 지원은 포함된 옵션이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="0a3e5-107">SOAP security support is not an included option.</span></span> <span data-ttu-id="0a3e5-108">보안 동작은 `securityMode` 생성자에서 선택적 <xref:System.ServiceModel.NetNamedPipeBinding.%23ctor%28System.ServiceModel.NetNamedPipeSecurityMode%29> 매개 변수를 사용하여 구성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a3e5-108">The security behavior is configurable using the optional `securityMode` parameter in <xref:System.ServiceModel.NetNamedPipeBinding.%23ctor%28System.ServiceModel.NetNamedPipeSecurityMode%29> the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a3e5-109">다음 예제에서는 기본값이 설정된 <xref:System.ServiceModel.NetNamedPipeBinding>의 섹션이 들어 있는 구성 파일 일부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0a3e5-109">The following example shows the part of the configuration file that contains the section for the <xref:System.ServiceModel.NetNamedPipeBinding> with values set to defaults.</span></span>  
  
  
  
 <span data-ttu-id="0a3e5-110">다음 예제에서는 <xref:System.ServiceModel.NetNamedPipeBinding> 클래스를 프로그래밍 방식으로 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0a3e5-110">The following example shows how to programmatically use the <xref:System.ServiceModel.NetNamedPipeBinding> class.</span></span>  
  
 [!code-csharp[S_UENetNamedPipe#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a3e5-111">
            <see cref="T:System.ServiceModel.NetNamedPipeBinding" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-111">Initializes a new instance of the <see cref="T:System.ServiceModel.NetNamedPipeBinding" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a3e5-112">보안 동작은 생성자에서 선택적 `securityMode` 매개 변수를 사용하여 구성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a3e5-112">The security behavior is configurable using the optional `securityMode` parameter in the constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetNamedPipeBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetNamedPipeBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetNamedPipeBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a3e5-113">
            <see cref="T:System.ServiceModel.NetNamedPipeBinding" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-113">Initializes a new instance of the <see cref="T:System.ServiceModel.NetNamedPipeBinding" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a3e5-114">사용된 기본 보안 모드는 <xref:System.ServiceModel.NetNamedPipeSecurityMode.Transport>입니다.</span><span class="sxs-lookup"><span data-stu-id="0a3e5-114">The default security mode used is <xref:System.ServiceModel.NetNamedPipeSecurityMode.Transport>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a3e5-115">다음 예제에서는 기본값이 설정된 <xref:System.ServiceModel.NetNamedPipeBinding>의 섹션이 들어 있는 구성 파일 일부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0a3e5-115">The following example shows the part of the configuration file that contains the section for the <xref:System.ServiceModel.NetNamedPipeBinding> with values set to defaults.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetNamedPipeBinding (System.ServiceModel.NetNamedPipeSecurityMode securityMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ServiceModel.NetNamedPipeSecurityMode securityMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetNamedPipeBinding.#ctor(System.ServiceModel.NetNamedPipeSecurityMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (securityMode As NetNamedPipeSecurityMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetNamedPipeBinding(System::ServiceModel::NetNamedPipeSecurityMode securityMode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="securityMode" Type="System.ServiceModel.NetNamedPipeSecurityMode" />
      </Parameters>
      <Docs>
        <param name="securityMode">
          <span data-ttu-id="0a3e5-116">Windows 보안이 명명된 파이프와 함께 사용되는지 여부를 지정하는 <see cref="T:System.ServiceModel.NetNamedPipeSecurityMode" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-116">The <see cref="T:System.ServiceModel.NetNamedPipeSecurityMode" /> value that specifies whether Windows security is used with named pipes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a3e5-117">지정된 보안 모드를 사용하여 <see cref="T:System.ServiceModel.NetNamedPipeBinding" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-117">Initializes a new instance of the <see cref="T:System.ServiceModel.NetNamedPipeBinding" /> class with a specified security mode.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a3e5-118">보안을 명시적으로 구성하려면 이 생성자를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="0a3e5-118">Use this constructor when you want to configure the security explicitly.</span></span> <span data-ttu-id="0a3e5-119">기본 생성자 사용 시 기본값은 <xref:System.ServiceModel.NetNamedPipeSecurityMode.Transport>입니다.</span><span class="sxs-lookup"><span data-stu-id="0a3e5-119">The default is <xref:System.ServiceModel.NetNamedPipeSecurityMode.Transport> when using the default constructor.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UENetNamedPipe#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/snippets.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetNamedPipeBinding (string configurationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string configurationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetNamedPipeBinding.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (configurationName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetNamedPipeBinding(System::String ^ configurationName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="configurationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configurationName">
          <span data-ttu-id="0a3e5-120">[netNamedPipeBinding 요소](~/docs/framework/configure-apps/file-schema/wcf/netnamedpipebinding.md)에 대한 바인딩 구성 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-120">The binding configuration name for the [netNamedPipeBinding Element](~/docs/framework/configure-apps/file-schema/wcf/netnamedpipebinding.md).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a3e5-121">지정된 구성 이름을 사용하여 <see cref="T:System.ServiceModel.NetNamedPipeBinding" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-121">Initializes a new instance of the <see cref="T:System.ServiceModel.NetNamedPipeBinding" /> class with a specified configuration name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a3e5-122">구성에서 바인딩 설정을 초기화하려면 이 생성자를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="0a3e5-122">Use this constructor when you want to initialize the binding settings from configuration.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UENetNamedPipe#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/snippets.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBindingElements">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElementCollection CreateBindingElements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElementCollection CreateBindingElements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetNamedPipeBinding.CreateBindingElements" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateBindingElements () As BindingElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElementCollection ^ CreateBindingElements();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElementCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a3e5-123">바인딩에 대한 바인딩 요소를 포함하는 컬렉션을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-123">Creates a collection with the binding elements for the binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a3e5-124">바인딩을 만드는 <see cref="T:System.Collections.Generic.ICollection`1" /> 형식의 <see cref="T:System.ServiceModel.Channels.BindingElement" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-124">The <see cref="T:System.Collections.Generic.ICollection`1" /> of type <see cref="T:System.ServiceModel.Channels.BindingElement" /> that makes up the binding.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UENetNamedPipe#12](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvelopeVersion">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EnvelopeVersion EnvelopeVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EnvelopeVersion EnvelopeVersion" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetNamedPipeBinding.EnvelopeVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnvelopeVersion As EnvelopeVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EnvelopeVersion ^ EnvelopeVersion { System::ServiceModel::EnvelopeVersion ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EnvelopeVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a3e5-125">이 바인딩에서 처리한 메시지에 사용되는 SOAP의 버전을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-125">Gets the version of SOAP that is used for messages processed by this binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a3e5-126">
            <see cref="P:System.ServiceModel.EnvelopeVersion.Soap12" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-126">
              <see cref="P:System.ServiceModel.EnvelopeVersion.Soap12" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a3e5-127">이 바인딩에 SOAP 1.2가 사용되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a3e5-127">SOAP 1.2 must be used with this binding.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a3e5-128">다음 예제에서는 SOAP 버전을 가져오는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0a3e5-128">The following example shows how to get the version of SOAP.</span></span>  
  
 [!code-csharp[S_UENetNamedPipe#16](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostNameComparisonMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.HostNameComparisonMode HostNameComparisonMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.HostNameComparisonMode HostNameComparisonMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetNamedPipeBinding.HostNameComparisonMode" />
      <MemberSignature Language="VB.NET" Value="Public Property HostNameComparisonMode As HostNameComparisonMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::HostNameComparisonMode HostNameComparisonMode { System::ServiceModel::HostNameComparisonMode get(); void set(System::ServiceModel::HostNameComparisonMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.HostNameComparisonMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a3e5-129">URI 비교 시 서비스에 액세스하는 데 호스트 이름이 사용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-129">Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a3e5-130">URI 비교 시 서비스에 액세스하는 데 호스트 이름이 사용되는지 여부를 나타내는 <see cref="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-130">The <see cref="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode" /> value that indicates whether the hostname is used to reach the service when matching the URI.</span>
          </span>
          <span data-ttu-id="0a3e5-131">기본값은 <see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" />이며 이 값은 비교 시 호스트 이름을 무시합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-131">The default value is <see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" />, which ignores the hostname in the match.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0a3e5-132">다음 예제에서는 <xref:System.ServiceModel.NetNamedPipeBinding.HostNameComparisonMode%2A> 속성을 가져오는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0a3e5-132">The following example shows how to get the <xref:System.ServiceModel.NetNamedPipeBinding.HostNameComparisonMode%2A> property.</span></span>  
  
 [!code-csharp[S_UENetNamedPipe#13](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBufferPoolSize">
      <MemberSignature Language="C#" Value="public long MaxBufferPoolSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxBufferPoolSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetNamedPipeBinding.MaxBufferPoolSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxBufferPoolSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxBufferPoolSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(524288)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a3e5-133">메모리에서 들어오는 메시지를 버퍼링하는 데 사용되는 최대 바이트 수를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-133">Gets or sets the maximum number of bytes that are used to buffer incoming messages in memory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a3e5-134">메모리에서 들어오는 메시지를 버퍼링하는 데 사용되는 최대 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-134">The maximum number of bytes that are used to buffer incoming messages in memory.</span>
          </span>
          <span data-ttu-id="0a3e5-135">기본값은 524, 288 바이트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-135">The default value is 524,288 bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a3e5-136">버퍼링 가능 한도보다 많은 데이터를 수신하는 경우 버퍼 크기를 초과하는 데이터는 버퍼에 나머지 데이터를 위한 공간이 생길 때까지 내부 소켓에 남아 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a3e5-136">If you receive more data than you can buffer, the data that exceeds the buffer size remains on the underlying socket until your buffer has room for the rest of the data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a3e5-137">다음 예제에서는 <xref:System.ServiceModel.NetNamedPipeBinding.MaxBufferPoolSize%2A> 값을 가져오는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0a3e5-137">The following example shows how to get the <xref:System.ServiceModel.NetNamedPipeBinding.MaxBufferPoolSize%2A> value.</span></span>  
  
 [!code-csharp[S_UENetNamedPipe#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBufferSize">
      <MemberSignature Language="C#" Value="public int MaxBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetNamedPipeBinding.MaxBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxBufferSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(65536)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a3e5-138">메모리에서 들어오는 메시지를 버퍼링하는 데 사용되는 최대 바이트 수를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-138">Gets or sets the maximum number of bytes used to buffer incoming messages in memory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a3e5-139">메모리에서 들어오는 메시지를 버퍼링하는 데 사용되는 최대 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-139">The maximum number of bytes that are used to buffer incoming messages in memory.</span>
          </span>
          <span data-ttu-id="0a3e5-140">기본값은 65,536바이트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-140">The default value is 65,536 bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a3e5-141">버퍼링 가능 한도보다 많은 데이터를 수신하는 경우 버퍼 크기를 초과하는 데이터는 버퍼에 나머지 데이터를 위한 공간이 생길 때까지 내부 소켓에 남아 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a3e5-141">If you receive more data than you can buffer, the data that exceeds the buffer size remains on the underlying socket until your buffer has room for the rest of the data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a3e5-142">다음 예제에서는 <xref:System.ServiceModel.NetNamedPipeBinding.MaxBufferSize%2A> 값을 가져오는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0a3e5-142">The following example shows how to get the <xref:System.ServiceModel.NetNamedPipeBinding.MaxBufferSize%2A> value.</span></span>  
  
 [!code-csharp[S_UENetNamedPipe#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a3e5-143">설정한 값이 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-143">The value set is less than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MaxConnections">
      <MemberSignature Language="C#" Value="public int MaxConnections { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxConnections" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetNamedPipeBinding.MaxConnections" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxConnections As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxConnections { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a3e5-144">명명된 파이프 바인딩으로 구성된 끝점에서 허용되는 최대 인바운드 및 아웃바운드 연결 수를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-144">Gets or sets the maximum number of connections, both inbound and outbound, that are allowed to endpoints configured with the named pipe binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a3e5-145">이 바인딩에서 허용되는 최대 명명된 파이프 연결 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-145">The maximum number of named pipe connections that are allowed with this binding.</span>
          </span>
          <span data-ttu-id="0a3e5-146">기본값은 10입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-146">The default value is 10.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a3e5-147">최대 인바운드 연결 수와 최대 아웃바운드 연결 수는 동일한 값으로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a3e5-147">The maximum number of inbound and the maximum number of outbound connections are set to the same value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a3e5-148">다음 예제에서는 <xref:System.ServiceModel.NetNamedPipeBinding.MaxConnections%2A> 값을 가져오는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0a3e5-148">The following example shows how to get the <xref:System.ServiceModel.NetNamedPipeBinding.MaxConnections%2A> values.</span></span>  
  
 [!code-csharp[S_UENetNamedPipe#7](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxReceivedMessageSize">
      <MemberSignature Language="C#" Value="public long MaxReceivedMessageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxReceivedMessageSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetNamedPipeBinding.MaxReceivedMessageSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxReceivedMessageSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxReceivedMessageSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(65536)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a3e5-149">이 바인딩에서 처리하는 받은 메시지의 최대 크기(바이트)를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-149">Gets or sets the maximum size, in bytes, for a received message that is processed by the binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a3e5-150">바인딩에서 처리하는 받은 메시지의 최대 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-150">The maximum size (in bytes) for a received message that is processed by the binding.</span>
          </span>
          <span data-ttu-id="0a3e5-151">기본값은 65,536바이트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-151">The default value is 65,536 bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0a3e5-152">다음 예제에서는 <xref:System.ServiceModel.NetNamedPipeBinding.MaxReceivedMessageSize%2A> 값을 가져오는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0a3e5-152">The following example shows how to get the <xref:System.ServiceModel.NetNamedPipeBinding.MaxReceivedMessageSize%2A> value.</span></span>  
  
 [!code-csharp[S_UENetNamedPipe#8](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReaderQuotas">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDictionaryReaderQuotas ReaderQuotas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDictionaryReaderQuotas ReaderQuotas" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetNamedPipeBinding.ReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Property ReaderQuotas As XmlDictionaryReaderQuotas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlDictionaryReaderQuotas ^ ReaderQuotas { System::Xml::XmlDictionaryReaderQuotas ^ get(); void set(System::Xml::XmlDictionaryReaderQuotas ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReaderQuotas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a3e5-153">이 바인딩으로 구성된 끝점에서 처리할 수 있는 SOAP 메시지의 복잡성에 대한 제약 조건을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-153">Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a3e5-154">교환된 SOAP 메시지에 대한 복잡성 제약 조건을 지정하는 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-154">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints on SOAP messages exchanged.</span>
          </span>
          <span data-ttu-id="0a3e5-155">이러한 제약 조건의 기본값은 다음 설명 부분에 나와 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-155">The default values for these constraints are provided in the following Remarks section.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a3e5-156">복잡성 제약 조건을 사용하면 메시지 복잡성을 이용하여 리소스를 처리하는 끝점에서 정체를 일으키려고 하는 DoS(서비스 거부) 공격을 방지할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a3e5-156">The complexity constraints protect against a class of denial of service (DOS) attacks that attempt to use message complexity to tie up endpoint processing resources.</span></span> <span data-ttu-id="0a3e5-157">이러한 제약 조건과 해당 기본값을 나타내는 속성은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="0a3e5-157">The properties that express these constraints and their default values are as follows:</span></span>  
  
-   <span data-ttu-id="0a3e5-158"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxDepth%2A> = 32</span><span class="sxs-lookup"><span data-stu-id="0a3e5-158"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxDepth%2A> = 32</span></span>  
  
-   <span data-ttu-id="0a3e5-159"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength%2A> = 8192</span><span class="sxs-lookup"><span data-stu-id="0a3e5-159"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength%2A> = 8192</span></span>  
  
-   <span data-ttu-id="0a3e5-160"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength%2A> = 16384</span><span class="sxs-lookup"><span data-stu-id="0a3e5-160"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength%2A> = 16384</span></span>  
  
-   <span data-ttu-id="0a3e5-161"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A> = 4096</span><span class="sxs-lookup"><span data-stu-id="0a3e5-161"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A> = 4096</span></span>  
  
-   <span data-ttu-id="0a3e5-162"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount%2A> = 16384</span><span class="sxs-lookup"><span data-stu-id="0a3e5-162"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount%2A> = 16384</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a3e5-163">다음 예제에서는 <xref:System.ServiceModel.NetNamedPipeBinding.ReaderQuotas%2A> 개체를 가져오는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0a3e5-163">The following example shows how to get the <xref:System.ServiceModel.NetNamedPipeBinding.ReaderQuotas%2A> object.</span></span>  
  
 [!code-csharp[S_UENetNamedPipe#11](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a3e5-164">설정된 값이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-164">The value set is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Scheme">
      <MemberSignature Language="C#" Value="public override string Scheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scheme" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetNamedPipeBinding.Scheme" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Scheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Scheme { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a3e5-165">이 바인딩으로 구성되는 채널과 수신기의 URI 전송 체계를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-165">Gets the URI transport scheme for the channels and listeners that are configured with this binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a3e5-166">"net.pipe"를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-166">Returns "net.pipe".</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0a3e5-167">다음 예제에서는 URI 전송 체계를 가져오는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0a3e5-167">The following example shows how to get the URI transport scheme.</span></span>  
  
 [!code-csharp[S_UENetNamedPipe#10](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Security">
      <MemberSignature Language="C#" Value="public System.ServiceModel.NetNamedPipeSecurity Security { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.NetNamedPipeSecurity Security" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetNamedPipeBinding.Security" />
      <MemberSignature Language="VB.NET" Value="Public Property Security As NetNamedPipeSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::NetNamedPipeSecurity ^ Security { System::ServiceModel::NetNamedPipeSecurity ^ get(); void set(System::ServiceModel::NetNamedPipeSecurity ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.NetNamedPipeSecurity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a3e5-168">이 바인딩으로 구성된 서비스에서 사용하는 보안 형식을 지정하는 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-168">Gets an object that specifies the type of security used with services configured with this binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a3e5-169">이 바인딩과 함께 사용되는 <see cref="T:System.ServiceModel.NetNamedPipeSecurity" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-169">The <see cref="T:System.ServiceModel.NetNamedPipeSecurity" /> that is used with this binding.</span>
          </span>
          <span data-ttu-id="0a3e5-170">기본값은 <see cref="F:System.ServiceModel.NetNamedPipeSecurityMode.Transport" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-170">The default value is <see cref="F:System.ServiceModel.NetNamedPipeSecurityMode.Transport" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a3e5-171"><xref:System.ServiceModel.NetNamedPipeSecurity>는 <xref:System.ServiceModel.NetNamedPipeBinding>에서 사용 가능한 보안 형식 및 설정을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="0a3e5-171">The <xref:System.ServiceModel.NetNamedPipeSecurity> provides the types of security and settings available to the <xref:System.ServiceModel.NetNamedPipeBinding>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a3e5-172">다음 예제에서는 이 바인딩에 사용할 보안 형식을 가져오는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0a3e5-172">The following example shows how to get the type of security to be used with this binding.</span></span>  
  
 [!code-csharp[S_UENetNamedPipe#9](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeMaxConnections">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeMaxConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeMaxConnections() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetNamedPipeBinding.ShouldSerializeMaxConnections" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeMaxConnections () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeMaxConnections();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a3e5-173">
            <see cref="P:System.ServiceModel.NetNamedPipeBinding.MaxConnections" /> 속성이 기본값에서 변경되었으며 이를 serialize해야 하는지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-173">Returns a value that indicates whether the <see cref="P:System.ServiceModel.NetNamedPipeBinding.MaxConnections" /> property has changed from its default value and should be serialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a3e5-174">
            <see cref="P:System.ServiceModel.NetNamedPipeBinding.MaxConnections" /> 속성 값을 serialize해야 하면 <see langword="True" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-174">
              <see langword="True" /> if the <see cref="P:System.ServiceModel.NetNamedPipeBinding.MaxConnections" /> property value should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeReaderQuotas">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeReaderQuotas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeReaderQuotas() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetNamedPipeBinding.ShouldSerializeReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeReaderQuotas () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeReaderQuotas();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a3e5-175">
            <see cref="P:System.ServiceModel.NetNamedPipeBinding.ReaderQuotas" /> 속성이 기본값에서 변경되었으며 이를 serialize해야 하는지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-175">Returns a value that indicates whether the <see cref="P:System.ServiceModel.NetNamedPipeBinding.ReaderQuotas" /> property has changed from its default value and should be serialized.</span>
          </span>
          <span data-ttu-id="0a3e5-176">이 메서드는 [!INCLUDE[indigo2](~/includes/indigo2-md.md)]에서 XAML 통합에 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-176">This is used by [!INCLUDE[indigo2](~/includes/indigo2-md.md)] for XAML integration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a3e5-177">
            <see cref="P:System.ServiceModel.NetNamedPipeBinding.ReaderQuotas" /> 속성 값을 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-177">
              <see langword="true" /> if the <see cref="P:System.ServiceModel.NetNamedPipeBinding.ReaderQuotas" /> property value should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSecurity">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeSecurity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetNamedPipeBinding.ShouldSerializeSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeSecurity () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeSecurity();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a3e5-178">
            <see cref="P:System.ServiceModel.NetNamedPipeBinding.Security" /> 속성이 기본값에서 변경되었으며 이를 serialize해야 하는지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-178">Returns a value that indicates whether the <see cref="P:System.ServiceModel.NetNamedPipeBinding.Security" /> property has changed from its default value and should be serialized.</span>
          </span>
          <span data-ttu-id="0a3e5-179">이 메서드는 [!INCLUDE[indigo2](~/includes/indigo2-md.md)]에서 XAML 통합에 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-179">This is used by [!INCLUDE[indigo2](~/includes/indigo2-md.md)] for XAML integration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a3e5-180">
            <see cref="P:System.ServiceModel.NetNamedPipeBinding.Security" /> 속성 값을 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-180">
              <see langword="true" /> if the <see cref="P:System.ServiceModel.NetNamedPipeBinding.Security" /> property value should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTransactionProtocol">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeTransactionProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeTransactionProtocol() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetNamedPipeBinding.ShouldSerializeTransactionProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeTransactionProtocol () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeTransactionProtocol();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a3e5-181">
            <see cref="P:System.ServiceModel.NetNamedPipeBinding.TransactionProtocol" /> 속성이 기본값에서 변경되었으며 이를 serialize해야 하는지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-181">Returns a value that indicates whether the <see cref="P:System.ServiceModel.NetNamedPipeBinding.TransactionProtocol" /> property has changed from its default value and should be serialized.</span>
          </span>
          <span data-ttu-id="0a3e5-182">이 메서드는 [!INCLUDE[indigo2](~/includes/indigo2-md.md)]에서 XAML 통합에 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-182">This is used by [!INCLUDE[indigo2](~/includes/indigo2-md.md)] for XAML integration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a3e5-183">
            <see cref="P:System.ServiceModel.NetNamedPipeBinding.TransactionProtocol" /> 속성 값을 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-183">
              <see langword="true" /> if the <see cref="P:System.ServiceModel.NetNamedPipeBinding.TransactionProtocol" /> property value should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously">
      <MemberSignature Language="C#" Value="bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetNamedPipeBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ReceiveSynchronously As Boolean Implements IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="C++ CLI" Value="property bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a3e5-184">들어오는 요청이 동기적으로 처리되는지 또는 비동기적으로 처리되는지를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-184">Gets a value that indicates whether incoming requests are handled synchronously or asynchronously.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a3e5-185">들어오는 요청이 비동기적으로 처리됨을 나타내려면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-185">
              <see langword="false" /> to indicate that the incoming requests are handled asynchronously.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0a3e5-186">다음 예제에서는 기본값이 설정된 <xref:System.ServiceModel.NetNamedPipeBinding>의 섹션이 들어 있는 구성 파일 일부를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0a3e5-186">The following example shows the part of the configuration file that contains the section for the <xref:System.ServiceModel.NetNamedPipeBinding> with values set to defaults.</span></span>  
  
 [!code-csharp[S_UENetNamedPipe#17](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionFlow">
      <MemberSignature Language="C#" Value="public bool TransactionFlow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransactionFlow" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetNamedPipeBinding.TransactionFlow" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionFlow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransactionFlow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a3e5-187">트랜잭션이 서비스로 이동해야 하는지 여부를 결정하는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-187">Gets or sets a value that determines whether transactions should be flowed to the service.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a3e5-188">클라이언트 트랜잭션이 서비스로 이동해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-188">
              <see langword="true" /> if the client’s transactions should be flowed to the service; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0a3e5-189">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-189">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a3e5-190"><xref:System.ServiceModel.NetNamedPipeBinding.TransactionFlow%2A> 속성을 사용하면 이 바인딩이 트랜잭션 흐름을 지원할지 여부를 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a3e5-190">The <xref:System.ServiceModel.NetNamedPipeBinding.TransactionFlow%2A> property enables you to specify whether this binding should support flowing transactions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a3e5-191">다음 예제에서는 바인딩의 <xref:System.ServiceModel.NetNamedPipeBinding.TransactionFlow%2A> 속성 값을 가져오는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0a3e5-191">The following example shows how to get the value of <xref:System.ServiceModel.NetNamedPipeBinding.TransactionFlow%2A> the binding.</span></span>  
  
 [!code-csharp[S_UENetNamedPipe#14](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionProtocol">
      <MemberSignature Language="C#" Value="public System.ServiceModel.TransactionProtocol TransactionProtocol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.TransactionProtocol TransactionProtocol" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetNamedPipeBinding.TransactionProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionProtocol As TransactionProtocol" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::TransactionProtocol ^ TransactionProtocol { System::ServiceModel::TransactionProtocol ^ get(); void set(System::ServiceModel::TransactionProtocol ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransactionProtocol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a3e5-192">서비스에서 트랜잭션을 이동하는 데 사용하는 트랜잭션 프로토콜을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-192">Gets or sets the transactions protocol used by the service to flow transactions.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a3e5-193">서비스에서 트랜잭션을 이동하는 데 사용하는 <see cref="T:System.ServiceModel.TransactionProtocol" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-193">The <see cref="T:System.ServiceModel.TransactionProtocol" /> used by the service to flow transactions.</span>
          </span>
          <span data-ttu-id="0a3e5-194">기본 프로토콜은 <see cref="P:System.ServiceModel.TransactionProtocol.OleTransactions" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-194">The default protocol is <see cref="P:System.ServiceModel.TransactionProtocol.OleTransactions" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a3e5-195"><xref:System.ServiceModel.TransactionProtocol.WSAtomicTransactionOctober2004%2A> 값을 설정하면 WS-Atomic Transaction 프로토콜도 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a3e5-195">The WS-Atomic Transaction protocol can also be used by setting the <xref:System.ServiceModel.TransactionProtocol.WSAtomicTransactionOctober2004%2A> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a3e5-196">다음 예제에서는 <xref:System.ServiceModel.NetNamedPipeBinding.TransactionProtocol%2A> 개체를 가져오는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0a3e5-196">The following example shows how to get the <xref:System.ServiceModel.NetNamedPipeBinding.TransactionProtocol%2A> object.</span></span>  
  
 [!code-csharp[S_UENetNamedPipe#15](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransferMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.TransferMode TransferMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.TransferMode TransferMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetNamedPipeBinding.TransferMode" />
      <MemberSignature Language="VB.NET" Value="Public Property TransferMode As TransferMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::TransferMode TransferMode { System::ServiceModel::TransferMode get(); void set(System::ServiceModel::TransferMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransferMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a3e5-197">바인딩으로 구성된 서비스가 메시지 전송에 스트리밍 모드(단방향 또는 양방향)를 사용할지 버퍼링 모드를 사용할지를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-197">Gets or sets a value that indicates whether the service configured with the binding uses streamed (in one or both directions) or buffered modes of message transfer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a3e5-198">바인딩으로 구성된 서비스가 메시지 전송에 스트리밍 모드(단방향 또는 양방향)를 사용할지 버퍼링 모드를 사용할지를 나타내는 <see cref="T:System.ServiceModel.TransferMode" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-198">The <see cref="T:System.ServiceModel.TransferMode" /> value that indicates whether the service configured with the binding uses streamed (in one or both directions) or buffered modes of message transfer.</span>
          </span>
          <span data-ttu-id="0a3e5-199">기본값은 <see cref="F:System.ServiceModel.TransferMode.Buffered" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a3e5-199">The default is <see cref="F:System.ServiceModel.TransferMode.Buffered" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a3e5-200"><xref:System.ServiceModel.TransferMode.StreamedRequest>를 지정하여 들어오는 메시지만 스트리밍하거나 <xref:System.ServiceModel.TransferMode.StreamedResponse>를 지정하여 보내는 메시지만 스트리밍할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a3e5-200">It is possible to stream only the incoming or the outgoing messages by specifying, respectively, <xref:System.ServiceModel.TransferMode.StreamedRequest> or <xref:System.ServiceModel.TransferMode.StreamedResponse>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a3e5-201">다음 예제에서는 <xref:System.ServiceModel.NetNamedPipeBinding.TransferMode%2A>를 가져오는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0a3e5-201">The following example shows how to get the <xref:System.ServiceModel.NetNamedPipeBinding.TransferMode%2A>.</span></span>  
  
 [!code-csharp[S_UENetNamedPipe#18](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenetnamedpipe/cs/service.cs#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>