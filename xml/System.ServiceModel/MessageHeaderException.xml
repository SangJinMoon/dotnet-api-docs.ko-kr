<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MessageHeaderException.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac552636a684489a9b2f3801f597fda6c95da186d3c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">52636a684489a9b2f3801f597fda6c95da186d3c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.MessageHeaderException">
          <source>The exception that is thrown when the expectations regarding headers of a SOAP message are not satisfied when the message is processed.</source>
          <target state="translated">메시지를 처리할 때 SOAP 메시지의 헤더와 관련된 예상이 맞지 않는 경우 throw되는 예외입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.MessageHeaderException">
          <source>This exception is typically thrown when there are too many headers or headers are missing from the message.</source>
          <target state="translated">일반적으로 이 예외는 헤더가 너무 많거나 메시지에 헤더가 없는 경우에 throw됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.MessageHeaderException">
          <source>This can include infrastructure headers such as the Action and Reliable Message headers.</source>
          <target state="translated">이러한 예외에는 Action 헤더와 Reliable Message 헤더 같은 인프라 헤더가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.MessageHeaderException">
          <source>This exception derives from <ph id="ph1">&lt;xref:System.ServiceModel.ProtocolException&gt;</ph>, which in turn derives from <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph>.</source>
          <target state="translated">이 예외는 <ph id="ph1">&lt;xref:System.ServiceModel.ProtocolException&gt;</ph>에서 파생되고, 이는 <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph>에서 파생됩니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.MessageHeaderException">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph> class represents a class of recoverable errors that may be thrown during communication between endpoints and that robust <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> client and service applications are expected to handle.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph> 클래스는 끝점 간 통신 중에 throw될 수 있으며 강력한 <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> 클라이언트 및 서비스 응용 프로그램에서 처리해야 하는 복구 가능 오류의 클래스를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.MessageHeaderException">
          <source>To prevent the more generic <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph> handler from catching the more specific <ph id="ph2">&lt;xref:System.ServiceModel.ProtocolException&gt;</ph>, catch this exception prior to handling <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph>.</source>
          <target state="translated">보다 일반적인 <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph> 처리기가 보다 구체적인 <ph id="ph2">&lt;xref:System.ServiceModel.ProtocolException&gt;</ph>을 catch하지 못하게 하기 위해서 <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph>을 처리하기 전에 이 예외를 catch합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.MessageHeaderException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.MessageHeaderException">
          <source>If you want to pass an error message to the user, use the <ph id="ph1">&lt;xref:System.ServiceModel.MessageHeaderException.%23ctor%28System.String%29&gt;</ph> constructor.</source>
          <target state="translated">사용자에게 오류 메시지를 전달하려면 <ph id="ph1">&lt;xref:System.ServiceModel.MessageHeaderException.%23ctor%28System.String%29&gt;</ph> 생성자를 사용합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.MessageHeaderException">
          <source>If you want to pass an error message and a reference to the inner exception that is the cause of the exception to the user, use the <ph id="ph1">&lt;xref:System.ServiceModel.MessageHeaderException.%23ctor%28System.String%2CSystem.Exception%29&gt;</ph> constructor.</source>
          <target state="translated">사용자에게 오류 메시지 및 예외의 원인인 내부 예외에 대한 참조를 전달하려면 <ph id="ph1">&lt;xref:System.ServiceModel.MessageHeaderException.%23ctor%28System.String%2CSystem.Exception%29&gt;</ph> 생성자를 사용합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.MessageHeaderException">
          <source>If you want to pass serialization information and streaming context, use the <ph id="ph1">&lt;xref:System.ServiceModel.MessageHeaderException.%23ctor%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29&gt;</ph> constructor.</source>
          <target state="translated">serialization 정보와 스트리밍 컨텍스트를 전달하려면 <ph id="ph1">&lt;xref:System.ServiceModel.MessageHeaderException.%23ctor%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29&gt;</ph> 생성자를 사용합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String)">
          <source>The message carried in the exception.</source>
          <target state="translated">예외에서 전달된 메시지입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> class with the specified message.</source>
          <target state="translated">지정된 메시지를 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String)">
          <source>Use this constructor when you want to pass an error message to the user.</source>
          <target state="translated">사용자에게 오류 메시지를 전달하려면 이 생성자를 사용합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String)">
          <source>The content of the message parameter should be understandable to the intended users.</source>
          <target state="translated">메시지 매개 변수의 내용은 사용자가 이해할 수 있는 것이어야 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> that holds the serialized object data about the exception being thrown.</source>
          <target state="translated">throw되는 예외에 대해 serialize된 개체 데이터를 보유하는 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that contains contextual information about the source or destination.</source>
          <target state="translated">소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> class used to deserialize data into a <ph id="ph2">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> object.</source>
          <target state="translated">데이터를 <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> 개체로 deserialize하는 데 사용되는 <ph id="ph2">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to restore the exception object transmitted over a stream.</source>
          <target state="translated">deserialization을 수행하는 동안 이 생성자를 호출하여 스트림을 통해 전송될 예외 개체를 복원합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Boolean)">
          <source>The exception message.</source>
          <target state="translated">예외 메시지입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the multiple message header is a duplicate; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if there are no message headers.</source>
          <target state="translated">여러 메시지 헤더가 중복되어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 메시지 헤더가 없으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> class using the specified message and a value that indicates whether the message header is a duplicate or is missing.</source>
          <target state="translated">지정된 메시지와 메시지 헤더가 중복되었는지 또는 누락되었는지를 나타내는 값을 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)">
          <source>The exception message.</source>
          <target state="translated">예외 메시지입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> that contains the inner exception that caused the exception.</source>
          <target state="translated">예외의 원인인 내부 예외가 포함된 <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> class using the specified message and the inner exception that caused the exception.</source>
          <target state="translated">지정된 메시지와 예외의 원인인 내부 예외를 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)">
          <source>Use this constructor when you want to pass an error message and information about an inner exception up to the user.</source>
          <target state="translated">사용자에게 내부 예외에 관한 정보 및 오류 메시지를 전달하려면 이 생성자를 사용합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)">
          <source>The content of the message parameter should be understandable to the intended users.</source>
          <target state="translated">메시지 매개 변수의 내용은 사용자가 이해할 수 있는 것이어야 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">이전 예외의 직접적인 결과로 throw되는 예외는 <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 속성에 이전 예외에 대한 참조를 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor or a <ph id="ph2">`null`</ph> reference (<ph id="ph3">`Nothing`</ph> in Visual Basic) if the <ph id="ph4">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 속성은 생성자에 전달된 것과 동일한 값을 반환하거나, <ph id="ph2">`null`</ph> 속성이 내부 예외 값을 생성자에 전달하지 않는 경우 <ph id="ph3">`Nothing`</ph> 참조(Visual Basic의 경우 <ph id="ph4">&lt;xref:System.Exception.InnerException%2A&gt;</ph>)를 반환합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String)">
          <source>The exception message.</source>
          <target state="translated">예외 메시지입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String)">
          <source>The name of the message header.</source>
          <target state="translated">메시지 헤더의 이름입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String)">
          <source>The namespace of the message header.</source>
          <target state="translated">메시지 헤더의 네임스페이스입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> class using the specified message, header name and namespace.</source>
          <target state="translated">지정된 메시지, 헤더 이름 및 네임스페이스를 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)">
          <source>The exception message.</source>
          <target state="translated">예외 메시지입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)">
          <source>The name of the message header.</source>
          <target state="translated">메시지 헤더의 이름입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)">
          <source>The namespace of the message header.</source>
          <target state="translated">메시지 헤더의 네임스페이스입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the multiple message header is a duplicate; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if there are no message headers.</source>
          <target state="translated">여러 메시지 헤더가 중복되어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 메시지 헤더가 없으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> class using the specified message, header name and namespace, and a value that indicates whether the message header is a duplicate or is missing.</source>
          <target state="translated">지정된 메시지, 헤더 이름 및 네임스페이스, 메시지 헤더가 중복되었는지 또는 누락되었는지를 나타내는 값을 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)">
          <source>The exception message.</source>
          <target state="translated">예외 메시지입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)">
          <source>The name of the message header.</source>
          <target state="translated">메시지 헤더의 이름입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)">
          <source>The namespace of the message header.</source>
          <target state="translated">메시지 헤더의 네임스페이스입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> that contains the inner exception that caused the exception.</source>
          <target state="translated">예외의 원인인 내부 예외가 포함된 <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> class using the specified message, header name and namespace, and the inner exception that caused the exception.</source>
          <target state="translated">지정된 메시지, 헤더 이름 및 네임스페이스, 예외의 원인인 내부 예외를 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)">
          <source>The exception message.</source>
          <target state="translated">예외 메시지입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)">
          <source>The name of the message header.</source>
          <target state="translated">메시지 헤더의 이름입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)">
          <source>The namespace of the message header.</source>
          <target state="translated">메시지 헤더의 네임스페이스입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the multiple message header is a duplicate; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if there are no message headers.</source>
          <target state="translated">여러 메시지 헤더가 중복되어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 메시지 헤더가 없으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> that contains the inner exception that caused the exception.</source>
          <target state="translated">예외의 원인인 내부 예외가 포함된 <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> class using the specified message, header name and namespace, a value that indicates whether the message header is a duplicate or is missing, and the inner exception that caused the exception.</source>
          <target state="translated">지정된 메시지, 헤더 이름 및 네임스페이스, 메시지 헤더가 중복되었는지 또는 누락되었는지를 나타내는 값, 예외의 원인인 내부 예외를 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.MessageHeaderException.HeaderName">
          <source>Gets the name of the SOAP header that caused the exception.</source>
          <target state="translated">예외를 일으킨 SOAP 헤더의 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageHeaderException.HeaderName">
          <source>The name of the SOAP header.</source>
          <target state="translated">SOAP 헤더의 이름입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.MessageHeaderException.HeaderNamespace">
          <source>Gets the namespace of the SOAP header that caused the exception.</source>
          <target state="translated">예외를 일으킨 SOAP 헤더의 네임스페이스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageHeaderException.HeaderNamespace">
          <source>The namespace of the SOAP header.</source>
          <target state="translated">SOAP 헤더의 네임스페이스입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.MessageHeaderException.IsDuplicate">
          <source>Gets a value that indicates whether there are multiple message headers or no message headers.</source>
          <target state="translated">메시지 헤더가 여러 개인지 또는 하나도 없는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageHeaderException.IsDuplicate">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the multiple message header is a duplicate; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if there are no message headers.</source>
          <target state="translated">여러 메시지 헤더가 중복되어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 메시지 헤더가 없으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>