<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BasicHttpBinding.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5aae40822da757b8bd432b1202da98ef0d138fd4a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aae40822da757b8bd432b1202da98ef0d138fd4a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.BasicHttpBinding">
          <source>Represents a binding that a Windows Communication Foundation (WCF) service can use to configure and expose endpoints that are able to communicate with ASMX-based Web services and clients and other services that conform to the WS-I Basic Profile 1.1.</source>
          <target state="translated">WCF(Windows Communication Foundation) 서비스가 ASMX 기반 웹 서비스 및 클라이언트, 그리고 WS-I Basic Profile 1.1을 따르는 기타 서비스와 통신할 수 있는 끝점을 구성 및 노출하는 데 사용할 수 있는 바인딩을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.BasicHttpBinding">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph> uses HTTP as the transport for sending SOAP 1.1 messages.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph>은 SOAP 1.1 메시지를 보내기 위한 전송으로 HTTP를 사용합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.BasicHttpBinding">
          <source>A service can use this binding to expose endpoints that conform to WS-I BP 1.1, such as those that ASMX clients access.</source>
          <target state="translated">서비스는 이 바인딩을 사용하여 ASMX 클라이언트가 액세스하는 끝점과 같이 WS-I BP 1.1을 따르는 끝점을 노출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.BasicHttpBinding">
          <source>Similarly, a client can use the <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph> to communicate with services exposing endpoints that conform to WS-I BP 1.1, such as ASMX Web services or <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> services configured with the <ph id="ph3">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph>.</source>
          <target state="translated">마찬가지로 클라이언트는 <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph>을 사용하여 ASMX 웹 서비스 또는 <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>으로 구성된 <ph id="ph3">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph> 서비스와 같이 WS-I BP 1.1을 따르는 끝점을 노출하는 서비스와 통신할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.BasicHttpBinding">
          <source>Security is turned off by default, but can be added setting the <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpSecurityMode&gt;</ph> to a value other than <ph id="ph2">&lt;xref:System.ServiceModel.BasicHttpSecurityMode.None&gt;</ph> in the <ph id="ph3">&lt;xref:System.ServiceModel.BasicHttpBinding.%23ctor%28System.ServiceModel.BasicHttpSecurityMode%29&gt;</ph> constructor.</source>
          <target state="translated">보안은 기본적으로 해제되지만 <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpSecurityMode&gt;</ph> 생성자에서 <ph id="ph2">&lt;xref:System.ServiceModel.BasicHttpSecurityMode.None&gt;</ph>를 <ph id="ph3">&lt;xref:System.ServiceModel.BasicHttpBinding.%23ctor%28System.ServiceModel.BasicHttpSecurityMode%29&gt;</ph> 이외의 값으로 설정하여 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.BasicHttpBinding">
          <source>It uses a "Text" message encoding and UTF-8 text encoding by default.</source>
          <target state="translated">이 요소는 기본적으로 "텍스트" 메시지 인코딩 및 UTF-8 텍스트 인코딩을 사용합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.BasicHttpBinding">
          <source>The following example shows how to configure the <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph> in an application configuration file.</source>
          <target state="translated">다음 예제에서는 응용 프로그램 구성 파일에서 <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph>을 구성하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.BasicHttpBinding">
          <source>The following example shows how to programmatically configure <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph>을 프로그래밍 방식으로 구성하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.BasicHttpBinding">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.BasicHttpBinding" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.BasicHttpBinding" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.BasicHttpBinding.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.BasicHttpBinding" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.BasicHttpBinding" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.BasicHttpBinding.#ctor">
          <source>The default value of <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpSecurityMode&gt;</ph> used is <ph id="ph2">&lt;xref:System.ServiceModel.BasicHttpSecurityMode.None&gt;</ph>, which specifies that the SOAP message is not secured and the client is not authenticated.</source>
          <target state="translated">사용된 <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpSecurityMode&gt;</ph>의 기본값은 SOAP 메시지가 보호되지 않고 클라이언트가 인증되지 않도록 지정하는 <ph id="ph2">&lt;xref:System.ServiceModel.BasicHttpSecurityMode.None&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.BasicHttpBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode)">
          <source>The value of <ph id="ph1">&lt;see cref="T:System.ServiceModel.BasicHttpSecurityMode" /&gt;</ph> that specifies the type of security that is used with the SOAP message and for the client.</source>
          <target state="translated">클라이언트 및 SOAP 메시지에 사용되는 보안 형식을 지정하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.BasicHttpSecurityMode" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.BasicHttpBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.BasicHttpBinding" /&gt;</ph> class with a specified type of security used by the binding.</source>
          <target state="translated">바인딩에서 사용하는 지정된 보안 형식을 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.BasicHttpBinding" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.BasicHttpBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode)">
          <source>The default value of <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpSecurityMode&gt;</ph> used is <ph id="ph2">&lt;xref:System.ServiceModel.BasicHttpSecurityMode.None&gt;</ph>, which specifies that the SOAP message is not secured and the client is not authenticated.</source>
          <target state="translated">사용된 <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpSecurityMode&gt;</ph>의 기본값은 SOAP 메시지가 보호되지 않고 클라이언트가 인증되지 않도록 지정하는 <ph id="ph2">&lt;xref:System.ServiceModel.BasicHttpSecurityMode.None&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.BasicHttpBinding.#ctor(System.String)">
          <source>The binding configuration name for the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Configuration.BasicHttpBindingElement" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Configuration.BasicHttpBindingElement" /&gt;</ph>의 바인딩 구성 이름입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.BasicHttpBinding.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.BasicHttpBinding" /&gt;</ph> class with a binding specified by its configuration name.</source>
          <target state="translated">구성 이름으로 지정된 바인딩을 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.BasicHttpBinding" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.BasicHttpBinding.#ctor(System.String)">
          <source>This example initializes a new <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph> class with a binding specified by the configuration name <ph id="ph2">`BasicBinding`</ph>.</source>
          <target state="translated">이 예제에서는 구성 이름 <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph>으로 지정된 바인딩을 사용하여 새 <ph id="ph2">`BasicBinding`</ph> 클래스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.BasicHttpBinding.#ctor(System.String)">
          <source>You must create a bindings section in the service's configuration file.</source>
          <target state="translated">서비스의 구성 파일에서 바인딩 섹션을 만들어야 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.BasicHttpBinding.#ctor(System.String)">
          <source>Then the name of the binding configuration is specified in the call to the <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph> constructor.</source>
          <target state="translated">그런 다음 <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph> 생성자에 대한 호출에 바인딩 구성의 이름을 지정합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.BasicHttpBinding.#ctor(System.String)">
          <source>The binding with the configuration name <ph id="ph1">&lt;paramref name="configurationName" /&gt;</ph> was not found.</source>
          <target state="translated">구성 이름이 <ph id="ph1">&lt;paramref name="configurationName" /&gt;</ph>인 바인딩을 찾을 수 없는 경우</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.BasicHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The type of channel the channel factory produces.</source>
          <target state="translated">채널 팩터리에서 생성하는 채널 형식입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.BasicHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Specifies the requirements for the channel factory built.</source>
          <target state="translated">생성되는 채널 팩터리에 대한 요구 사항을 지정합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.BasicHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Builds the channel factory stack on the client that creates a specified type of channel and that satisfies the features specified by a collection of binding parameters.</source>
          <target state="translated">지정된 유형의 채널을 만들고 바인딩 매개 변수 컬렉션에서 지정된 기능을 충족하는 채널 팩터리 스택을 클라이언트에 생성합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.BasicHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /&gt;</ph> of type <ph id="ph2">&lt;paramref name="TChannel" /&gt;</ph> that satisfies the features specified by the collection.</source>
          <target state="translated">컬렉션에서 지정된 기능을 충족하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /&gt;</ph> 형식의 <ph id="ph2">&lt;paramref name="TChannel" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.BasicHttpBinding.CreateBindingElements">
          <source>Creates and returns an ordered collection of binding elements contained in the current binding.</source>
          <target state="translated">현재 바인딩에 포함되어 있는 순서가 지정된 바인딩 요소 컬렉션을 만들고 반환합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.BasicHttpBinding.CreateBindingElements">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElementCollection" /&gt;</ph> that contains the ordered stack of binding elements described by the <ph id="ph2">&lt;see cref="T:System.ServiceModel.BasicHttpBinding" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElementCollection" /&gt;</ph>에서 설명하는 순서가 지정된 바인딩 요소 스택을 포함하는 <ph id="ph2">&lt;see cref="T:System.ServiceModel.BasicHttpBinding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.BasicHttpBinding.CreateBindingElements">
          <source>The order of the binding elements is important.</source>
          <target state="translated">바인딩 요소의 순서는 중요합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.BasicHttpBinding.CreateBindingElements">
          <source>It reflects the order in which the protocol and transport channels are constructed and stacked.</source>
          <target state="translated">바인딩 요소의 순서는 프로토콜 및 전송 채널이 생성되고 스택되는 순서를 반영합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.BasicHttpBinding.CreateBindingElements">
          <source>This collection of binding elements is a new collection and can be modified and then used to create a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CustomBinding&gt;</ph>.</source>
          <target state="translated">이 바인딩 요소 컬렉션은 새 컬렉션이며 수정 후 사용하여 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CustomBinding&gt;</ph>을 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.BasicHttpBinding.CreateBindingElements">
          <source>The following example creates an ordered collection of the binding elements in the current binding.</source>
          <target state="translated">다음 예제에서는 현재 바인딩의 바인딩 요소로 구성하여 순서가 지정된 컬렉션을 만듭니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.BasicHttpBinding.EnableHttpCookieContainer">
          <source>Gets or sets a value that indicates whether HTTP cookie container is enabled.</source>
          <target state="translated">HTTP 쿠키 컨테이너가 사용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.BasicHttpBinding.EnableHttpCookieContainer">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if HTTP cookie container is enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">HTTP 쿠키 컨테이너를 사용하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.BasicHttpBinding.MessageEncoding">
          <source>Gets or sets whether MTOM or Text is used to encode SOAP messages.</source>
          <target state="translated">SOAP 메시지 인코딩에 MTOM이 사용되는지 아니면 텍스트가 사용되는지를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.BasicHttpBinding.MessageEncoding">
          <source>The value of <ph id="ph1">&lt;see cref="T:System.ServiceModel.WSMessageEncoding" /&gt;</ph> that indicates whether MTOM or Text/XML is used to encode SOAP messages.</source>
          <target state="translated">SOAP 메시지 인코딩에 MTOM이 사용되는지 아니면 텍스트/XML이 사용되는지를 나타내는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.WSMessageEncoding" /&gt;</ph>의 값입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.BasicHttpBinding.MessageEncoding">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.ServiceModel.WSMessageEncoding.Text" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.ServiceModel.WSMessageEncoding.Text" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.BasicHttpBinding.MessageEncoding">
          <source>The following example sets MessageEncoding to Text.</source>
          <target state="translated">다음 예제에서는 MessageEncoding을 텍스트로 설정합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.BasicHttpBinding.MessageEncoding">
          <source>The value of this property can also be set in the configuration file.</source>
          <target state="translated">이 속성의 값은 구성 파일에서 설정할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.BasicHttpBinding.Security">
          <source>Gets the type of security used with this binding.</source>
          <target state="translated">이 바인딩과 함께 사용되는 보안 형식을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.BasicHttpBinding.Security">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.BasicHttpSecurity" /&gt;</ph> that is used with this binding.</source>
          <target state="translated">이 바인딩과 함께 사용되는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.BasicHttpSecurity" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.BasicHttpBinding.Security">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.ServiceModel.BasicHttpSecurityMode.None" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.ServiceModel.BasicHttpSecurityMode.None" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.BasicHttpBinding.Security">
          <source>By default, the SOAP message is not secured and the client is not authenticated.</source>
          <target state="translated">기본적으로 SOAP 메시지의 보안이 유지되지 않고 클라이언트가 인증되지 않습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.BasicHttpBinding.Security">
          <source>To use a non-default type of security, use the <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding.%23ctor%28System.ServiceModel.BasicHttpSecurityMode%29&gt;</ph> constructor.</source>
          <target state="translated">기본 형식이 아닌 보안을 사용하려면 <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding.%23ctor%28System.ServiceModel.BasicHttpSecurityMode%29&gt;</ph> 생성자를 사용합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.BasicHttpBinding.Security">
          <source>The following example gets the <ph id="ph1">`Security`</ph> property.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`Security`</ph> 속성을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.BasicHttpBinding.ShouldSerializeEnableHttpCookieContainer">
          <source>Indicates whether the http cookie container should enable the serialization.</source>
          <target state="translated">http 쿠키 컨테이너가 serialization을 활성화해야 하는지 알려줍니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.BasicHttpBinding.ShouldSerializeEnableHttpCookieContainer">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the http cookie container should enable the serialization; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">http 쿠키 컨테이너에서 serialization을 사용하도록 설정해야 하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.BasicHttpBinding.ShouldSerializeSecurity">
          <source>Returns whether security settings should be serialized based upon whether serialization already occurs, for example at the message or transport level.</source>
          <target state="translated">메시지 또는 전송 수준 등에서 serialization이 이미 발생했는지 여부에 따라 보안 설정을 serialize해야 하는지 여부를 반환합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.BasicHttpBinding.ShouldSerializeSecurity">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if security should be serialized; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">보안을 serialize해야 하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>