<Type Name="ServiceHost" FullName="System.ServiceModel.ServiceHost">
  <TypeSignature Language="C#" Value="public class ServiceHost : System.ServiceModel.ServiceHostBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceHost extends System.ServiceModel.ServiceHostBase" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ServiceHost" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceHost&#xA;Inherits ServiceHostBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceHost : System::ServiceModel::ServiceHostBase" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.ServiceHostBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6ebe9-101">서비스에 대한 호스트를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-101">Provides a host for services.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ebe9-102">[!INCLUDE[indigo1](~/includes/indigo1-md.md)] 서비스 모델 프로그래밍 모델에서 사용하는 호스트를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-102">Implements the host used by the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] service model programming model.</span></span>  
  
 <span data-ttu-id="6ebe9-103">서비스를 노출하는 데 IIS(인터넷 정보 서비스) 또는 WAS(Windows Activation Services)를 사용하지 않는 경우 클라이언트 응용 프로그램에서 사용할 수 있도록 서비스를 구성하고 노출하려면 <xref:System.ServiceModel.ServiceHost> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-103">Use the <xref:System.ServiceModel.ServiceHost> class to configure and expose a service for use by client applications when you are not using Internet Information Services (IIS) or Windows Activation Services (WAS) to expose a service.</span></span> <span data-ttu-id="6ebe9-104">IIS와 WAS 모두 사용자 대신 <xref:System.ServiceModel.ServiceHost> 개체와 상호 작용합니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-104">Both IIS and WAS interact with a <xref:System.ServiceModel.ServiceHost> object on your behalf.</span></span>  
  
 <span data-ttu-id="6ebe9-105">호출자가 사용할 서비스를 노출 하려면 WCF에 필요한 자세한 서비스 설명이 (나타내는 <xref:System.ServiceModel.Description.ServiceDescription> 클래스).</span><span class="sxs-lookup"><span data-stu-id="6ebe9-105">To expose a service for use by callers, WCF requires a complete service description (represented by the <xref:System.ServiceModel.Description.ServiceDescription> class).</span></span> <span data-ttu-id="6ebe9-106"><xref:System.ServiceModel.ServiceHost> 클래스는 서비스 형식 및 구성 정보로부터 <xref:System.ServiceModel.Description.ServiceDescription>을 만든 다음 해당 설명을 사용하여 설명의 각 끝점에 대한 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-106">The <xref:System.ServiceModel.ServiceHost> class creates a <xref:System.ServiceModel.Description.ServiceDescription> from the service type and configuration information and then uses that description to create <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects for each endpoint in the description.</span></span>  
  
 <span data-ttu-id="6ebe9-107">서비스를 로드하고, 끝점을 구성하며, 보안 설정을 적용하고, 수신기를 시작하여 들어오는 요청을 처리하려면 <xref:System.ServiceModel.ServiceHost> 개체를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-107">Use a <xref:System.ServiceModel.ServiceHost> object to load a service, configure endpoints, apply security settings, and start listeners to handle incoming requests.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_SelfHost#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_selfhost/cs/wholeenchilada.cs#1)]
 [!code-vb[S_SelfHost#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_selfhost/vb/wholeenchilada.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6ebe9-108"><see cref="T:System.ServiceModel.ServiceHost" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-108">Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceHost" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ServiceHost ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ServiceHost();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6ebe9-109"><see cref="T:System.ServiceModel.ServiceHost" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-109">Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceHost" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ebe9-110"><xref:System.ServiceModel.ServiceHost> 클래스의 인스턴스를 만드는 데 사용되는 두 개의 생성자가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-110">There are two constructors used to create an instance of the <xref:System.ServiceModel.ServiceHost> class.</span></span> <span data-ttu-id="6ebe9-111">대부분의 경우 서비스 형식을 입력 매개 변수로 사용하는 <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Type%2CSystem.Uri%5B%5D%29> 생성자를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-111">Use the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Type%2CSystem.Uri%5B%5D%29> constructor which takes the service type as an input parameter, most of the time.</span></span> <span data-ttu-id="6ebe9-112">호스트는 이 생성자를 사용하여 필요에 따라 새 서비스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-112">The host can use this to create new services as needed.</span></span> <span data-ttu-id="6ebe9-113">서비스 호스트에서 서비스의 특정 singleton 인스턴스를 사용하도록 하려는 경우에만 <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> 생성자를 대신 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-113">Use the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> constructor instead only when you want the service host to use a specific singleton instance of the service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceHost (object singletonInstance, params Uri[] baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object singletonInstance, class System.Uri[] baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (singletonInstance As Object, ParamArray baseAddresses As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceHost(System::Object ^ singletonInstance, ... cli::array &lt;Uri ^&gt; ^ baseAddresses);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="singletonInstance" Type="System.Object" />
        <Parameter Name="baseAddresses" Type="System.Uri[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="singletonInstance"><span data-ttu-id="6ebe9-114">호스팅된 서비스의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-114">The instance of the hosted service.</span></span></param>
        <param name="baseAddresses"><span data-ttu-id="6ebe9-115">호스팅된 서비스의 기본 주소를 포함하는 <see cref="T:System.Array" /> 형식의 <see cref="T:System.Uri" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-115">An <see cref="T:System.Array" /> of type <see cref="T:System.Uri" /> that contains the base addresses for the hosted service.</span></span></param>
        <summary><span data-ttu-id="6ebe9-116">서비스의 인스턴스와 지정된 기본 주소를 사용하여 <see cref="T:System.ServiceModel.ServiceHost" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-116">Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceHost" /> class with the instance of the service and its base addresses specified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ebe9-117">단일 서비스에서 사용할 특정 개체 인스턴스를 제공하려면 사용자 지정 <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=nameWithType>를 구현하는 대신 이 생성자를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-117">Use this constructor as an alternative to implementing a custom <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=nameWithType> when you want to provide a specific object instance for use by a singleton service.</span></span> <span data-ttu-id="6ebe9-118">매개 변수가 없는 기본 public 생성자를 구현하지 않는 경우와 같이 서비스 구현 형식을 생성하기 어려운 경우 이 오버로드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-118">You may want to use this overload when your service implementation type is difficult to construct (for example, if it does not implement a default public constructor that has no parameters).</span></span>  
  
 <span data-ttu-id="6ebe9-119">이 오버로드에 개체가 제공되면 [!INCLUDE[indigo1](~/includes/indigo1-md.md)] 인스턴스 만들기 동작과 관련된 일부 기능이 다르게 작동합니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-119">Note that when an object is provided to this overload, some features related to the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] instancing behavior work differently.</span></span> <span data-ttu-id="6ebe9-120">예를 들어 이 생성자 오버로드를 사용하여 잘 알려진 개체 인스턴스를 제공하면 <xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A?displayProperty=nameWithType>를 호출해도 아무런 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-120">For example, calling <xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A?displayProperty=nameWithType> have no effect when a well-known object instance is provided using this constructor overload.</span></span> <span data-ttu-id="6ebe9-121">마찬가지로 다른 인스턴스 해제 메커니즘도 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-121">Similarly, any other instance release mechanism is ignored.</span></span> <span data-ttu-id="6ebe9-122"><xref:System.ServiceModel.ServiceHost>는 항상 모든 작업에 대해 <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A?displayProperty=nameWithType> 속성이 <xref:System.ServiceModel.ReleaseInstanceMode.None?displayProperty=nameWithType>으로 설정된 것처럼 동작합니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-122">The <xref:System.ServiceModel.ServiceHost> always behaves as if the <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A?displayProperty=nameWithType> property is set to <xref:System.ServiceModel.ReleaseInstanceMode.None?displayProperty=nameWithType> for all operations.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEServiceHost2#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueservicehost2/cs/service.cs#1)]
 [!code-vb[S_UEServiceHost2#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ueservicehost2/vb/service.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6ebe9-123"><paramref name="singletonInstance" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="6ebe9-123"><paramref name="singletonInstance" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceHost (Type serviceType, params Uri[] baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type serviceType, class System.Uri[] baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serviceType As Type, ParamArray baseAddresses As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceHost(Type ^ serviceType, ... cli::array &lt;Uri ^&gt; ^ baseAddresses);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="baseAddresses" Type="System.Uri[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="6ebe9-124">호스팅된 서비스 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-124">The type of hosted service.</span></span></param>
        <param name="baseAddresses"><span data-ttu-id="6ebe9-125">호스팅된 서비스의 기본 주소를 포함하는 <see cref="T:System.Uri" /> 형식의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-125">An array of type <see cref="T:System.Uri" /> that contains the base addresses for the hosted service.</span></span></param>
        <summary><span data-ttu-id="6ebe9-126">서비스 형식과 지정된 기본 주소를 사용하여 <see cref="T:System.ServiceModel.ServiceHost" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-126">Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceHost" /> class with the type of service and its base addresses specified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ebe9-127">서비스 형식이 있으면 이 생성자를 사용합니다. 그러면 단일 인스턴스가 필요한 경우에도 필요할 때 새 인스턴스를 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-127">Use this constructor when you have the service type and you can create new instances of it when needed, even when you need a singleton instance.</span></span> <span data-ttu-id="6ebe9-128">서비스 호스트에서 서비스의 특정 singleton 인스턴스를 사용하도록 하려는 경우에만 <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> 생성자를 대신 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-128">Use the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> constructor instead only when you want the service host to use a specific singleton instance of the service.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ebe9-129">이 샘플에서는 <xref:System.ServiceModel.ServiceHost> 클래스를 사용하여 Windows Communication Foundation 서비스를 호스팅하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-129">This sample illustrates how to use the <xref:System.ServiceModel.ServiceHost> class to host a Windows Communication Foundation service:</span></span>  
  
 [!code-csharp[S_UEServiceHost#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueservicehost/cs/service.cs#1)]
 [!code-vb[S_UEServiceHost#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ueservicehost/vb/service.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6ebe9-130"><paramref name="serviceType" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="6ebe9-130"><paramref name="serviceType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddServiceEndpoint">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6ebe9-131">서비스 끝점을 호스팅된 서비스에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-131">Adds a service endpoint to the hosted service.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(class System.Type implementedContract, class System.ServiceModel.Channels.Binding binding, string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(Type ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, System::String ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="implementedContract"><span data-ttu-id="6ebe9-132">추가된 끝점에 대한 계약의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-132">The <see cref="T:System.Type" /> of contract for the endpoint added.</span></span></param>
        <param name="binding"><span data-ttu-id="6ebe9-133">추가된 끝점에 대한 <see cref="T:System.ServiceModel.Channels.Binding" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-133">The <see cref="T:System.ServiceModel.Channels.Binding" /> for the endpoint added.</span></span></param>
        <param name="address"><span data-ttu-id="6ebe9-134">추가된 끝점에 대한 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-134">The address for the endpoint added.</span></span></param>
        <summary><span data-ttu-id="6ebe9-135">지정된 계약, 바인딩, 끝점 주소를 사용하여 서비스 끝점을 호스팅된 서비스에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-135">Adds a service endpoint to the hosted service with a specified contract, binding, and endpoint address.</span></span></summary>
        <returns><span data-ttu-id="6ebe9-136">호스팅된 서비스에 추가된 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-136">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> added to the hosted service.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UEServiceHost#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueservicehost/cs/service.cs#3)]
 [!code-vb[S_UEServiceHost#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ueservicehost/vb/service.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6ebe9-137"><paramref name="implementedContract" />, <paramref name="binding" /> 또는 <paramref name="address" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="6ebe9-137"><paramref name="implementedContract" /> or <paramref name="binding" /> or <paramref name="address" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(class System.Type implementedContract, class System.ServiceModel.Channels.Binding binding, class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(Type ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, Uri ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="implementedContract"><span data-ttu-id="6ebe9-138">추가된 끝점에 대한 계약의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-138">The <see cref="T:System.Type" /> of contract for the endpoint added.</span></span></param>
        <param name="binding"><span data-ttu-id="6ebe9-139">추가된 끝점에 대한 <see cref="T:System.ServiceModel.Channels.Binding" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-139">The <see cref="T:System.ServiceModel.Channels.Binding" /> for the endpoint added.</span></span></param>
        <param name="address"><span data-ttu-id="6ebe9-140">추가된 끝점의 주소가 포함된 <see cref="T:System.Uri" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-140">The <see cref="T:System.Uri" /> that contains the address for the endpoint added.</span></span></param>
        <summary><span data-ttu-id="6ebe9-141">지정된 계약, 바인딩 및 끝점 주소가 포함된 URI를 사용하여 서비스 끝점을 호스팅된 서비스에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-141">Adds a service endpoint to the hosted service with a specified contract, binding, and URI that contains the endpoint address.</span></span></summary>
        <returns><span data-ttu-id="6ebe9-142">호스팅된 서비스에 추가된 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-142">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> added to the hosted service.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UEServiceHost#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueservicehost/cs/service.cs#4)]
 [!code-vb[S_UEServiceHost#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ueservicehost/vb/service.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6ebe9-143"><paramref name="implementedContract" />, <paramref name="binding" /> 또는 <paramref name="address" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="6ebe9-143"><paramref name="implementedContract" /> or <paramref name="binding" /> or <paramref name="address" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, string address, Uri listenUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(class System.Type implementedContract, class System.ServiceModel.Channels.Binding binding, string address, class System.Uri listenUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(Type ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, System::String ^ address, Uri ^ listenUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="listenUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="implementedContract"><span data-ttu-id="6ebe9-144">추가된 끝점에 대한 계약의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-144">The <see cref="T:System.Type" /> of contract for the endpoint added.</span></span></param>
        <param name="binding"><span data-ttu-id="6ebe9-145">추가된 끝점에 대한 <see cref="T:System.ServiceModel.Channels.Binding" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-145">The <see cref="T:System.ServiceModel.Channels.Binding" /> for the endpoint added.</span></span></param>
        <param name="address"><span data-ttu-id="6ebe9-146">서비스의 끝점 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-146">The endpoint address for the service.</span></span></param>
        <param name="listenUri"><span data-ttu-id="6ebe9-147">서비스 끝점에서 수신 대기할 수 있는 <see cref="T:System.Uri" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-147">The <see cref="T:System.Uri" /> on which the service endpoints can listen.</span></span></param>
        <summary><span data-ttu-id="6ebe9-148">지정된 계약, 바인딩, 끝점 주소 및 서비스가 수신 대기하는 URI를 사용하여 서비스 끝점을 호스팅된 서비스에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-148">Adds a service endpoint to the hosted service with a specified contract, binding, an endpoint address, and a URI on which the service listens.</span></span></summary>
        <returns><span data-ttu-id="6ebe9-149">호스팅된 서비스에 추가된 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-149">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> added to the hosted service.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ebe9-150">지정된 동일한 URI에서 수신 대기해야 하는 여러 개의 끝점이 있는 경우 이 버전의 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-150">Use this version of the method when you have multiple endpoints that need to listen on the same, specified URI.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEServiceHost#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueservicehost/cs/service.cs#5)]
 [!code-vb[S_UEServiceHost#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ueservicehost/vb/service.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6ebe9-151"><paramref name="implementedContract" />, <paramref name="binding" /> 또는 <paramref name="address" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="6ebe9-151"><paramref name="implementedContract" /> or <paramref name="binding" /> or <paramref name="address" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, Uri address, Uri listenUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(class System.Type implementedContract, class System.ServiceModel.Channels.Binding binding, class System.Uri address, class System.Uri listenUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(Type ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, Uri ^ address, Uri ^ listenUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="listenUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="implementedContract"><span data-ttu-id="6ebe9-152">추가된 끝점에 대한 계약의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-152">The <see cref="T:System.Type" /> of contract for the endpoint added.</span></span></param>
        <param name="binding"><span data-ttu-id="6ebe9-153">추가된 끝점에 대한 <see cref="T:System.ServiceModel.Channels.Binding" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-153">The <see cref="T:System.ServiceModel.Channels.Binding" /> for the endpoint added.</span></span></param>
        <param name="address"><span data-ttu-id="6ebe9-154">추가된 끝점의 주소가 포함된 <see cref="T:System.Uri" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-154">The <see cref="T:System.Uri" /> that contains the address for the endpoint added.</span></span></param>
        <param name="listenUri"><span data-ttu-id="6ebe9-155">서비스 끝점에서 수신 대기할 수 있는 <see cref="T:System.Uri" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-155">The <see cref="T:System.Uri" /> on which the service endpoints can listen.</span></span></param>
        <summary><span data-ttu-id="6ebe9-156">지정된 계약, 바인딩, 끝점 주소가 포함된 URI 및 서비스가 수신 대기하는 URI를 사용하여 서비스 끝점을 호스팅된 서비스에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-156">Adds a service endpoint to the hosted service with a specified contract, binding, a URI that contains the endpoint address, and a URI on which the service listens.</span></span></summary>
        <returns><span data-ttu-id="6ebe9-157">호스팅된 서비스에 추가된 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-157">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> added to the hosted service.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ebe9-158">지정된 동일한 URI에서 수신 대기해야 하는 여러 개의 끝점이 있는 경우 이 버전의 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-158">Use this version of the method when you have multiple endpoints that need to listen on the same, specified URI.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEServiceHost#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueservicehost/cs/service.cs#6)]
 [!code-vb[S_UEServiceHost#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ueservicehost/vb/service.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6ebe9-159"><paramref name="implementedContract" />, <paramref name="binding" /> 또는 <paramref name="address" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="6ebe9-159"><paramref name="implementedContract" /> or <paramref name="binding" /> or <paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6ebe9-160">계약이 초기화되지 않거나 계약 키를 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="6ebe9-160">The contracts are not initialized or the contract keys cannot be found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ApplyConfiguration">
      <MemberSignature Language="C#" Value="protected override void ApplyConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ApplyConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.ApplyConfiguration" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ApplyConfiguration ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ApplyConfiguration();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6ebe9-161">구성 파일에서 서비스 설명을 로드하고 이 설명을 생성 중인 런타임에 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-161">Loads the service description from the configuration file and applies it to the runtime being constructed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDescription">
      <MemberSignature Language="C#" Value="protected override System.ServiceModel.Description.ServiceDescription CreateDescription (out System.Collections.Generic.IDictionary&lt;string,System.ServiceModel.Description.ContractDescription&gt; implementedContracts);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.ServiceModel.Description.ServiceDescription CreateDescription([out] class System.Collections.Generic.IDictionary`2&lt;string, class System.ServiceModel.Description.ContractDescription&gt;&amp; implementedContracts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDescription (ByRef implementedContracts As IDictionary(Of String, ContractDescription)) As ServiceDescription" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::ServiceModel::Description::ServiceDescription ^ CreateDescription([Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::String ^, System::ServiceModel::Description::ContractDescription ^&gt; ^ % implementedContracts);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContracts" Type="System.Collections.Generic.IDictionary&lt;System.String,System.ServiceModel.Description.ContractDescription&gt;&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="implementedContracts"><span data-ttu-id="6ebe9-162">구현된 호스팅된 서비스의 키 계약을 포함하는 형식(<see cref="T:System.Collections.Generic.IDictionary`2" />, <see cref="T:System.String" />)의 키 쌍이 있는 <see cref="T:System.ServiceModel.Description.ContractDescription" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-162">The <see cref="T:System.Collections.Generic.IDictionary`2" /> with key pairs of type (<see cref="T:System.String" />, <see cref="T:System.ServiceModel.Description.ContractDescription" />) that contains the keyed-contracts of the hosted service that have been implemented.</span></span></param>
        <summary><span data-ttu-id="6ebe9-163">호스팅된 서비스에 대한 설명을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-163">Creates a description of the service hosted.</span></span></summary>
        <returns><span data-ttu-id="6ebe9-164">호스팅된 서비스의 <see cref="T:System.ServiceModel.Description.ServiceDescription" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-164">A <see cref="T:System.ServiceModel.Description.ServiceDescription" /> of the hosted service.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ebe9-165">이 메서드는 사용자 지정 프로그래밍 모델에서 계약 설명을 생성하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-165">This method is used to construct contract descriptions from customized programming models.</span></span> <span data-ttu-id="6ebe9-166">사용자 지정 모델을 구현하려면 해당하는 기본 클래스 메서드인 <xref:System.ServiceModel.ServiceHostBase.CreateDescription%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.ServiceModel.Description.ContractDescription%7D%40%29>을 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-166">Override the corresponding base class method, <xref:System.ServiceModel.ServiceHostBase.CreateDescription%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.ServiceModel.Description.ContractDescription%7D%40%29>, to implement the customized model.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6ebe9-167">호스팅된 서비스의 형식이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="6ebe9-167">The type of service hosted is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="InitializeDescription">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6ebe9-168">해당 형식 또는 인스턴스에 따라 호스팅된 서비스의 설명을 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-168">Initializes a description of the service hosted based on its type or instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ebe9-169">이 메서드는 기본 주소를 <xref:System.ServiceModel.ServiceHost.%23ctor%2A>의 일부로 전달하는 데 필요한 요구 사항을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-169">This method removes the requirement for passing base addresses as part of <xref:System.ServiceModel.ServiceHost.%23ctor%2A>.</span></span> <span data-ttu-id="6ebe9-170">기본 주소를 사용할 수 있는 경우 <xref:System.ServiceModel.ServiceHost>에서 상속되는 클래스는 <xref:System.ServiceModel.ServiceHost.%23ctor%2A>을 호출한 다음 <xref:System.ServiceModel.ServiceHost.InitializeDescription%2A> 중 하나를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-170">Classes that inherit from <xref:System.ServiceModel.ServiceHost> can call <xref:System.ServiceModel.ServiceHost.%23ctor%2A> and then can call one of the <xref:System.ServiceModel.ServiceHost.InitializeDescription%2A> when a base address is available.</span></span> <span data-ttu-id="6ebe9-171">이러한 방법으로 Service Model Metadata Utility Tool(Svcutil.exe)을 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-171">This is how the Service Model Metadata Utility Tool (Svcutil.exe) is implemented.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="InitializeDescription">
      <MemberSignature Language="C#" Value="protected void InitializeDescription (object singletonInstance, System.ServiceModel.UriSchemeKeyedCollection baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InitializeDescription(object singletonInstance, class System.ServiceModel.UriSchemeKeyedCollection baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InitializeDescription (singletonInstance As Object, baseAddresses As UriSchemeKeyedCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InitializeDescription(System::Object ^ singletonInstance, System::ServiceModel::UriSchemeKeyedCollection ^ baseAddresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="singletonInstance" Type="System.Object" />
        <Parameter Name="baseAddresses" Type="System.ServiceModel.UriSchemeKeyedCollection" />
      </Parameters>
      <Docs>
        <param name="singletonInstance"><span data-ttu-id="6ebe9-172">호스팅된 서비스의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-172">The instance of the hosted service.</span></span></param>
        <param name="baseAddresses"><span data-ttu-id="6ebe9-173">호스팅된 서비스의 기본 주소를 포함하는 <see cref="T:System.ServiceModel.UriSchemeKeyedCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-173">The <see cref="T:System.ServiceModel.UriSchemeKeyedCollection" /> that contains the base addresses for the hosted service.</span></span></param>
        <summary><span data-ttu-id="6ebe9-174">해당 인스턴스와 지정된 기본 주소에 따라 호스팅된 서비스의 설명을 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-174">Initializes a description of the service hosted based on its instance and specified base addresses.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6ebe9-175"><paramref name="singletonInstance" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="6ebe9-175"><paramref name="singletonInstance" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InitializeDescription">
      <MemberSignature Language="C#" Value="protected void InitializeDescription (Type serviceType, System.ServiceModel.UriSchemeKeyedCollection baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InitializeDescription(class System.Type serviceType, class System.ServiceModel.UriSchemeKeyedCollection baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InitializeDescription (serviceType As Type, baseAddresses As UriSchemeKeyedCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InitializeDescription(Type ^ serviceType, System::ServiceModel::UriSchemeKeyedCollection ^ baseAddresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="baseAddresses" Type="System.ServiceModel.UriSchemeKeyedCollection" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="6ebe9-176">호스팅된 서비스의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-176">The <see cref="T:System.Type" /> of service hosted.</span></span></param>
        <param name="baseAddresses"><span data-ttu-id="6ebe9-177">호스팅된 서비스의 기본 주소를 포함하는 <see cref="T:System.ServiceModel.UriSchemeKeyedCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-177">The <see cref="T:System.ServiceModel.UriSchemeKeyedCollection" /> that contains the base addresses for the hosted service.</span></span></param>
        <summary><span data-ttu-id="6ebe9-178">해당 형식과 지정된 기본 주소에 따라 호스팅된 서비스의 설명을 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-178">Initializes a description of the service hosted based on its type and specified base addresses.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6ebe9-179"><paramref name="serviceType" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="6ebe9-179"><paramref name="serviceType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected override void OnClosed ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClosed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.OnClosed" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClosed ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClosed();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6ebe9-180">서비스 호스트가 닫히면 호스팅 중인 삭제 가능한 서비스를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-180">Disposes of disposable services that are being hosted when the service host is closed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ebe9-181">재정의 하는 경우는 <xref:System.ServiceModel.ServiceHost.OnClosed%2A> 메서드는 기본 확인 해야 합니다. 예외가 발생 하는 경우에 OnClosed 메서드 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-181">When overriding the <xref:System.ServiceModel.ServiceHost.OnClosed%2A> method you must ensure the base.OnClosed method is called, even if an exception occurs.</span></span> <span data-ttu-id="6ebe9-182">다음 코드에는이 작업을 수행 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-182">The following code illustrates how to do this.</span></span>  
  
```  
protected override void OnClosed()  
{  
    try  
    {  
        if (FaultFlagService.faultFlag == ThrowDuring.OnClosed)  
        {  
            FaultFlagService.faultFlag = ThrowDuring.Never;  
            throw new ServiceActivationException("Faulting the service because FaultFlagService.faultFlag = ThrowDuring.OnClosed");  
        }  
    }  
    finally  
    {  
        base.OnClosed();  
    }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SingletonInstance">
      <MemberSignature Language="C#" Value="public object SingletonInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SingletonInstance" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceHost.SingletonInstance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SingletonInstance As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SingletonInstance { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6ebe9-183">호스팅된 서비스의 singleton 인스턴스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-183">Gets the singleton instance of the hosted service.</span></span></summary>
        <value><span data-ttu-id="6ebe9-184">호스팅된 서비스 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-184">The hosted service object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ebe9-185">사용되는 서비스의 인스턴스를 제어하려는 경우 호스팅할 서비스의 singleton 인스턴스를 초기화하려면 <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> 생성자를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="6ebe9-185">Use the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> constructor to initialize a singleton instance of the service to be hosted when you want to control the instance of the service that is used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>