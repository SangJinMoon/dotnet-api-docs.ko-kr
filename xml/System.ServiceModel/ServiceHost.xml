<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ServiceHost.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b721b30cd3d99351db0b76e3d69b70ac74a0894f6f9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b30cd3d99351db0b76e3d69b70ac74a0894f6f9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ServiceHost">
          <source>Provides a host for services.</source>
          <target state="translated">서비스에 대한 호스트를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceHost">
          <source>Implements the host used by the <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> service model programming model.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> 서비스 모델 프로그래밍 모델에서 사용하는 호스트를 구현합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceHost">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> class to configure and expose a service for use by client applications when you are not using Internet Information Services (IIS) or Windows Activation Services (WAS) to expose a service.</source>
          <target state="translated">서비스를 노출하는 데 IIS(인터넷 정보 서비스) 또는 WAS(Windows Activation Services)를 사용하지 않는 경우 클라이언트 응용 프로그램에서 사용할 수 있도록 서비스를 구성하고 노출하려면 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> 클래스를 사용합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceHost">
          <source>Both IIS and WAS interact with a <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> object on your behalf.</source>
          <target state="translated">IIS와 WAS 모두 사용자 대신 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> 개체와 상호 작용합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceHost">
          <source>To expose a service for use by callers, WCF requires a complete service description (represented by the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> class).</source>
          <target state="translated">호출자가 사용할 서비스를 노출 하려면 WCF에 필요한 자세한 서비스 설명이 (나타내는 <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> 클래스).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceHost">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> class creates a <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> from the service type and configuration information and then uses that description to create <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> objects for each endpoint in the description.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> 클래스는 서비스 형식 및 구성 정보로부터 <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph>을 만든 다음 해당 설명을 사용하여 설명의 각 끝점에 대한 <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceHost">
          <source>Use a <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> object to load a service, configure endpoints, apply security settings, and start listeners to handle incoming requests.</source>
          <target state="translated">서비스를 로드하고, 끝점을 구성하며, 보안 설정을 적용하고, 수신기를 시작하여 들어오는 요청을 처리하려면 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> 개체를 사용합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ServiceHost">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.#ctor">
          <source>There are two constructors used to create an instance of the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> 클래스의 인스턴스를 만드는 데 사용되는 두 개의 생성자가 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.#ctor">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%28System.Type%2CSystem.Uri%5B%5D%29&gt;</ph> constructor which takes the service type as an input parameter, most of the time.</source>
          <target state="translated">대부분의 경우 서비스 형식을 입력 매개 변수로 사용하는 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%28System.Type%2CSystem.Uri%5B%5D%29&gt;</ph> 생성자를 사용합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.#ctor">
          <source>The host can use this to create new services as needed.</source>
          <target state="translated">호스트는 이 생성자를 사용하여 필요에 따라 새 서비스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.#ctor">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29&gt;</ph> constructor instead only when you want the service host to use a specific singleton instance of the service.</source>
          <target state="translated">서비스 호스트에서 서비스의 특정 singleton 인스턴스를 사용하도록 하려는 경우에만 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29&gt;</ph> 생성자를 대신 사용합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])">
          <source>The instance of the hosted service.</source>
          <target state="translated">호스팅된 서비스의 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> that contains the base addresses for the hosted service.</source>
          <target state="translated">호스팅된 서비스의 기본 주소를 포함하는 <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> 형식의 <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> class with the instance of the service and its base addresses specified.</source>
          <target state="translated">서비스의 인스턴스와 지정된 기본 주소를 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])">
          <source>Use this constructor as an alternative to implementing a custom <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=nameWithType&gt;</ph> when you want to provide a specific object instance for use by a singleton service.</source>
          <target state="translated">단일 서비스에서 사용할 특정 개체 인스턴스를 제공하려면 사용자 지정 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=nameWithType&gt;</ph>를 구현하는 대신 이 생성자를 사용합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])">
          <source>You may want to use this overload when your service implementation type is difficult to construct (for example, if it does not implement a default public constructor that has no parameters).</source>
          <target state="translated">매개 변수가 없는 기본 public 생성자를 구현하지 않는 경우와 같이 서비스 구현 형식을 생성하기 어려운 경우 이 오버로드를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])">
          <source>Note that when an object is provided to this overload, some features related to the <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> instancing behavior work differently.</source>
          <target state="translated">이 오버로드에 개체가 제공되면 <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> 인스턴스 만들기 동작과 관련된 일부 기능이 다르게 작동합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])">
          <source>For example, calling <ph id="ph1">&lt;xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A?displayProperty=nameWithType&gt;</ph> have no effect when a well-known object instance is provided using this constructor overload.</source>
          <target state="translated">예를 들어 이 생성자 오버로드를 사용하여 잘 알려진 개체 인스턴스를 제공하면 <ph id="ph1">&lt;xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A?displayProperty=nameWithType&gt;</ph>를 호출해도 아무런 영향을 주지 않습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])">
          <source>Similarly, any other instance release mechanism is ignored.</source>
          <target state="translated">마찬가지로 다른 인스턴스 해제 메커니즘도 무시됩니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> always behaves as if the <ph id="ph2">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A?displayProperty=nameWithType&gt;</ph> property is set to <ph id="ph3">&lt;xref:System.ServiceModel.ReleaseInstanceMode.None?displayProperty=nameWithType&gt;</ph> for all operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>는 항상 모든 작업에 대해 <ph id="ph2">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A?displayProperty=nameWithType&gt;</ph> 속성이 <ph id="ph3">&lt;xref:System.ServiceModel.ReleaseInstanceMode.None?displayProperty=nameWithType&gt;</ph>으로 설정된 것처럼 동작합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])">
          <source><ph id="ph1">&lt;paramref name="singletonInstance" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="singletonInstance" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])">
          <source>The type of hosted service.</source>
          <target state="translated">호스팅된 서비스 형식입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that contains the base addresses for the hosted service.</source>
          <target state="translated">호스팅된 서비스의 기본 주소를 포함하는 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 형식의 배열입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> class with the type of service and its base addresses specified.</source>
          <target state="translated">서비스 형식과 지정된 기본 주소를 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])">
          <source>Use this constructor when you have the service type and you can create new instances of it when needed, even when you need a singleton instance.</source>
          <target state="translated">서비스 형식이 있으면 이 생성자를 사용합니다. 그러면 단일 인스턴스가 필요한 경우에도 필요할 때 새 인스턴스를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29&gt;</ph> constructor instead only when you want the service host to use a specific singleton instance of the service.</source>
          <target state="translated">서비스 호스트에서 서비스의 특정 singleton 인스턴스를 사용하도록 하려는 경우에만 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29&gt;</ph> 생성자를 대신 사용합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])">
          <source>This sample illustrates how to use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> class to host a Windows Communication Foundation service:</source>
          <target state="translated">이 샘플에서는 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> 클래스를 사용하여 Windows Communication Foundation 서비스를 호스팅하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])">
          <source><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ServiceHost">
          <source>Adds a service endpoint to the hosted service.</source>
          <target state="translated">서비스 끝점을 호스팅된 서비스에 추가합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of contract for the endpoint added.</source>
          <target state="translated">추가된 끝점에 대한 계약의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> for the endpoint added.</source>
          <target state="translated">추가된 끝점에 대한 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)">
          <source>The address for the endpoint added.</source>
          <target state="translated">추가된 끝점에 대한 주소입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)">
          <source>Adds a service endpoint to the hosted service with a specified contract, binding, and endpoint address.</source>
          <target state="translated">지정된 계약, 바인딩, 끝점 주소를 사용하여 서비스 끝점을 호스팅된 서비스에 추가합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> added to the hosted service.</source>
          <target state="translated">호스팅된 서비스에 추가된 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)">
          <source><ph id="ph1">&lt;paramref name="implementedContract" /&gt;</ph> or <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> or <ph id="ph3">&lt;paramref name="address" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="implementedContract" /&gt;</ph>, <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> 또는 <ph id="ph3">&lt;paramref name="address" /&gt;</ph>가 <ph id="ph4">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of contract for the endpoint added.</source>
          <target state="translated">추가된 끝점에 대한 계약의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> for the endpoint added.</source>
          <target state="translated">추가된 끝점에 대한 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that contains the address for the endpoint added.</source>
          <target state="translated">추가된 끝점의 주소가 포함된 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)">
          <source>Adds a service endpoint to the hosted service with a specified contract, binding, and URI that contains the endpoint address.</source>
          <target state="translated">지정된 계약, 바인딩 및 끝점 주소가 포함된 URI를 사용하여 서비스 끝점을 호스팅된 서비스에 추가합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> added to the hosted service.</source>
          <target state="translated">호스팅된 서비스에 추가된 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)">
          <source><ph id="ph1">&lt;paramref name="implementedContract" /&gt;</ph> or <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> or <ph id="ph3">&lt;paramref name="address" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="implementedContract" /&gt;</ph>, <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> 또는 <ph id="ph3">&lt;paramref name="address" /&gt;</ph>가 <ph id="ph4">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of contract for the endpoint added.</source>
          <target state="translated">추가된 끝점에 대한 계약의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> for the endpoint added.</source>
          <target state="translated">추가된 끝점에 대한 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
          <source>The endpoint address for the service.</source>
          <target state="translated">서비스의 끝점 주소입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> on which the service endpoints can listen.</source>
          <target state="translated">서비스 끝점에서 수신 대기할 수 있는 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
          <source>Adds a service endpoint to the hosted service with a specified contract, binding, an endpoint address, and a URI on which the service listens.</source>
          <target state="translated">지정된 계약, 바인딩, 끝점 주소 및 서비스가 수신 대기하는 URI를 사용하여 서비스 끝점을 호스팅된 서비스에 추가합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> added to the hosted service.</source>
          <target state="translated">호스팅된 서비스에 추가된 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
          <source>Use this version of the method when you have multiple endpoints that need to listen on the same, specified URI.</source>
          <target state="translated">지정된 동일한 URI에서 수신 대기해야 하는 여러 개의 끝점이 있는 경우 이 버전의 메서드를 사용합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
          <source><ph id="ph1">&lt;paramref name="implementedContract" /&gt;</ph> or <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> or <ph id="ph3">&lt;paramref name="address" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="implementedContract" /&gt;</ph>, <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> 또는 <ph id="ph3">&lt;paramref name="address" /&gt;</ph>가 <ph id="ph4">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of contract for the endpoint added.</source>
          <target state="translated">추가된 끝점에 대한 계약의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> for the endpoint added.</source>
          <target state="translated">추가된 끝점에 대한 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that contains the address for the endpoint added.</source>
          <target state="translated">추가된 끝점의 주소가 포함된 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> on which the service endpoints can listen.</source>
          <target state="translated">서비스 끝점에서 수신 대기할 수 있는 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
          <source>Adds a service endpoint to the hosted service with a specified contract, binding, a URI that contains the endpoint address, and a URI on which the service listens.</source>
          <target state="translated">지정된 계약, 바인딩, 끝점 주소가 포함된 URI 및 서비스가 수신 대기하는 URI를 사용하여 서비스 끝점을 호스팅된 서비스에 추가합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> added to the hosted service.</source>
          <target state="translated">호스팅된 서비스에 추가된 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
          <source>Use this version of the method when you have multiple endpoints that need to listen on the same, specified URI.</source>
          <target state="translated">지정된 동일한 URI에서 수신 대기해야 하는 여러 개의 끝점이 있는 경우 이 버전의 메서드를 사용합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
          <source><ph id="ph1">&lt;paramref name="implementedContract" /&gt;</ph> or <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> or <ph id="ph3">&lt;paramref name="address" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="implementedContract" /&gt;</ph>, <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> 또는 <ph id="ph3">&lt;paramref name="address" /&gt;</ph>가 <ph id="ph4">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
          <source>The contracts are not initialized or the contract keys cannot be found.</source>
          <target state="translated">계약이 초기화되지 않거나 계약 키를 찾을 수 없는 경우</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.ApplyConfiguration">
          <source>Loads the service description from the configuration file and applies it to the runtime being constructed.</source>
          <target state="translated">구성 파일에서 서비스 설명을 로드하고 이 설명을 생성 중인 런타임에 적용합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> with key pairs of type (<ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.ServiceModel.Description.ContractDescription" /&gt;</ph>) that contains the keyed-contracts of the hosted service that have been implemented.</source>
          <target state="translated">구현된 호스팅된 서비스의 키 계약을 포함하는 형식(<ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>)의 키 쌍이 있는 <ph id="ph3">&lt;see cref="T:System.ServiceModel.Description.ContractDescription" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)">
          <source>Creates a description of the service hosted.</source>
          <target state="translated">호스팅된 서비스에 대한 설명을 만듭니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceDescription" /&gt;</ph> of the hosted service.</source>
          <target state="translated">호스팅된 서비스의 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceDescription" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)">
          <source>This method is used to construct contract descriptions from customized programming models.</source>
          <target state="translated">이 메서드는 사용자 지정 프로그래밍 모델에서 계약 설명을 생성하는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)">
          <source>Override the corresponding base class method, <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase.CreateDescription%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.ServiceModel.Description.ContractDescription%7D%40%29&gt;</ph>, to implement the customized model.</source>
          <target state="translated">사용자 지정 모델을 구현하려면 해당하는 기본 클래스 메서드인 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase.CreateDescription%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.ServiceModel.Description.ContractDescription%7D%40%29&gt;</ph>을 재정의합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)">
          <source>The type of service hosted is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">호스팅된 서비스의 형식이 <ph id="ph1">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ServiceHost">
          <source>Initializes a description of the service hosted based on its type or instance.</source>
          <target state="translated">해당 형식 또는 인스턴스에 따라 호스팅된 서비스의 설명을 초기화합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceHost">
          <source>This method removes the requirement for passing base addresses as part of <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%2A&gt;</ph>.</source>
          <target state="translated">이 메서드는 기본 주소를 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%2A&gt;</ph>의 일부로 전달하는 데 필요한 요구 사항을 제거합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceHost">
          <source>Classes that inherit from <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> can call <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%2A&gt;</ph> and then can call one of the <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHost.InitializeDescription%2A&gt;</ph> when a base address is available.</source>
          <target state="translated">기본 주소를 사용할 수 있는 경우 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>에서 상속되는 클래스는 <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%2A&gt;</ph>을 호출한 다음 <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHost.InitializeDescription%2A&gt;</ph> 중 하나를 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceHost">
          <source>This is how the Service Model Metadata Utility Tool (Svcutil.exe) is implemented.</source>
          <target state="translated">이러한 방법으로 Service Model Metadata Utility Tool(Svcutil.exe)을 구현합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)">
          <source>The instance of the hosted service.</source>
          <target state="translated">호스팅된 서비스의 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.UriSchemeKeyedCollection" /&gt;</ph> that contains the base addresses for the hosted service.</source>
          <target state="translated">호스팅된 서비스의 기본 주소를 포함하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.UriSchemeKeyedCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)">
          <source>Initializes a description of the service hosted based on its instance and specified base addresses.</source>
          <target state="translated">해당 인스턴스와 지정된 기본 주소에 따라 호스팅된 서비스의 설명을 초기화합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)">
          <source><ph id="ph1">&lt;paramref name="singletonInstance" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="singletonInstance" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of service hosted.</source>
          <target state="translated">호스팅된 서비스의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.UriSchemeKeyedCollection" /&gt;</ph> that contains the base addresses for the hosted service.</source>
          <target state="translated">호스팅된 서비스의 기본 주소를 포함하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.UriSchemeKeyedCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)">
          <source>Initializes a description of the service hosted based on its type and specified base addresses.</source>
          <target state="translated">해당 형식과 지정된 기본 주소에 따라 호스팅된 서비스의 설명을 초기화합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)">
          <source><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHost.OnClosed">
          <source>Disposes of disposable services that are being hosted when the service host is closed.</source>
          <target state="translated">서비스 호스트가 닫히면 호스팅 중인 삭제 가능한 서비스를 삭제합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.OnClosed">
          <source>When overriding the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.OnClosed%2A&gt;</ph> method you must ensure the base.OnClosed method is called, even if an exception occurs.</source>
          <target state="translated">재정의 하는 경우는 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.OnClosed%2A&gt;</ph> 메서드는 기본 확인 해야 합니다. 예외가 발생 하는 경우에 OnClosed 메서드 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHost.OnClosed">
          <source>The following code illustrates how to do this.</source>
          <target state="translated">다음 코드에는이 작업을 수행 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceHost.SingletonInstance">
          <source>Gets the singleton instance of the hosted service.</source>
          <target state="translated">호스팅된 서비스의 singleton 인스턴스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceHost.SingletonInstance">
          <source>The hosted service object.</source>
          <target state="translated">호스팅된 서비스 개체입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceHost.SingletonInstance">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29&gt;</ph> constructor to initialize a singleton instance of the service to be hosted when you want to control the instance of the service that is used.</source>
          <target state="translated">사용되는 서비스의 인스턴스를 제어하려는 경우 호스팅할 서비스의 singleton 인스턴스를 초기화하려면 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29&gt;</ph> 생성자를 사용합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>