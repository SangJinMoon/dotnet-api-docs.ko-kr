<Type Name="OperationBehaviorAttribute" FullName="System.ServiceModel.OperationBehaviorAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="23088f4fe82f21689d2e45fe2d40abb094d45a38" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39758425" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OperationBehaviorAttribute : Attribute, System.ServiceModel.Description.IOperationBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OperationBehaviorAttribute extends System.Attribute implements class System.ServiceModel.Description.IOperationBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.OperationBehaviorAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OperationBehaviorAttribute&#xA;Inherits Attribute&#xA;Implements IOperationBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class OperationBehaviorAttribute sealed : Attribute, System::ServiceModel::Description::IOperationBehavior" />
  <TypeSignature Language="F#" Value="type OperationBehaviorAttribute = class&#xA;    inherit Attribute&#xA;    interface IOperationBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IOperationBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="42cd0-101">서비스 메서드의 로컬 실행 동작을 지정합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="42cd0-101">Specifies the local execution behavior of a service method.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42cd0-102">작업 실행 시 어떤 작업별 실행 동작이 있는지 나타내려면 <xref:System.ServiceModel.OperationBehaviorAttribute> 특성을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-102">Use the <xref:System.ServiceModel.OperationBehaviorAttribute> attribute to indicate what operation-specific execution behavior the operation has when executed.</span></span> <span data-ttu-id="42cd0-103">서비스 수준의 실행 동작을 지정하려면 <xref:System.ServiceModel.ServiceBehaviorAttribute> 특성을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-103">(To specify execution behavior at the service level, use the <xref:System.ServiceModel.ServiceBehaviorAttribute> attribute.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="42cd0-104">또한 <xref:System.ServiceModel.OperationBehaviorAttribute>를 사용하여 이중 클라이언트 응용 프로그램에서 콜백 계약 작업을 구성할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-104">You can also use <xref:System.ServiceModel.OperationBehaviorAttribute> to configure a callback contract operation in a duplex client application.</span></span> <span data-ttu-id="42cd0-105">콜백 작업에 사용하는 경우 <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> 속성이 <xref:System.ServiceModel.ReleaseInstanceMode.None>이어야 하며, 그렇지 않으면 런타임에 <xref:System.InvalidOperationException> 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-105">When used on a callback operation, the <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> property must be <xref:System.ServiceModel.ReleaseInstanceMode.None> or an <xref:System.InvalidOperationException> exception is thrown at runtime.</span></span>  
  
 <span data-ttu-id="42cd0-106"><xref:System.ServiceModel.OperationBehaviorAttribute> 특성은 개발자가 직접 구현 해야 하는 일반적인 기능을 사용 하는 Windows Communication Foundation (WCF) 프로그래밍 모델 기능입니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-106">The <xref:System.ServiceModel.OperationBehaviorAttribute> attribute is a Windows Communication Foundation (WCF) programming model feature that enables common features that developers otherwise must implement themselves.</span></span>  
  
-   <span data-ttu-id="42cd0-107"><xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A> 속성은 작업 완료 시 작업에 전달된 매개 변수 개체의 삭제 여부를 제어합니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-107">The <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A> property controls whether parameter objects passed to an operation are disposed when the operation completes.</span></span>  
  
-   <span data-ttu-id="42cd0-108"><xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> 속성은 처리되지 않은 예외가 발생하지 않는 경우 메서드가 실행되는 트랜잭션의 자동 커밋 여부를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-108">The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> property specifies whether the transaction in which the method executes is automatically committed if no unhandled exceptions occur.</span></span>  
  
-   <span data-ttu-id="42cd0-109"><xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> 속성은 트랜잭션 내에서 메서드를 실행해야 하는지 여부를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-109">The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> property specifies whether a method must execute within a transaction.</span></span>  
  
-   <span data-ttu-id="42cd0-110"><xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> 속성은 서비스 작업이 호출자의 ID를 가장할 수 있는지, 가장해야 하는지 또는 가장할 수 없는지를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-110">The <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> property specifies whether the service operation can, must, or cannot impersonate the caller's identity.</span></span>  
  
-   <span data-ttu-id="42cd0-111"><xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> 속성은 메서드 호출 프로세스 중에 서비스 개체를 재활용하는 시점을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-111">The <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> property specifies when service objects are recycled during the method invocation process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42cd0-112">다음 코드 예제에서는 필수 분산 트랜잭션 내에서 실행되는 작업을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-112">The following code example shows an operation that executes within a mandatory distributed transaction.</span></span> <span data-ttu-id="42cd0-113"><xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> 속성은 메서드가 호출자의 트랜잭션에서 실행됨을 나타내며, <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> 속성은 처리되지 않은 예외가 발생하지 않을 경우 트랜잭션이 자동으로 커밋됨을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-113">The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> property indicates that the method executes under the caller's transaction and the <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> property indicates that if no unhandled exceptions occur, the transaction commits automatically.</span></span> <span data-ttu-id="42cd0-114">처리되지 않은 예외가 발생하면 트랜잭션은 중단됩니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-114">If an unhandled exception does occur, the transaction is aborted.</span></span>  
  
 [!code-csharp[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_transaction/cs/services.cs#2)]
 [!code-vb[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_transaction/vb/services.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OperationBehaviorAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OperationBehaviorAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="42cd0-115">
            <see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42cd0-115">Initializes a new instance of the <see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42cd0-116">기본 생성자는 다음 기본값을 사용하여 클래스의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-116">The default constructor creates an instance of the class with the following defaults:</span></span>  
  
-   <span data-ttu-id="42cd0-117"><xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> 속성은 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-117">The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> property is `true`.</span></span>  
  
-   <span data-ttu-id="42cd0-118"><xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> 속성은 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-118">The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> property is `false`.</span></span>  
  
-   <span data-ttu-id="42cd0-119"><xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> 속성은 <xref:System.ServiceModel.ReleaseInstanceMode.None>입니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-119">The <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> property is <xref:System.ServiceModel.ReleaseInstanceMode.None>.</span></span>  
  
-   <span data-ttu-id="42cd0-120"><xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A>이 <xref:System.ServiceModel.ImpersonationOption.NotAllowed>인 경우</span><span class="sxs-lookup"><span data-stu-id="42cd0-120">The <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> is <xref:System.ServiceModel.ImpersonationOption.NotAllowed>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoDisposeParameters">
      <MemberSignature Language="C#" Value="public bool AutoDisposeParameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoDisposeParameters" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoDisposeParameters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoDisposeParameters { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoDisposeParameters : bool with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="42cd0-121">매개 변수의 자동 삭제 여부를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42cd0-121">Gets or sets whether parameters are to be automatically disposed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="42cd0-122">매개 변수가 자동으로 삭제되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42cd0-122">
              <see langword="true" /> if the parameters are to be automatically disposed; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42cd0-123">이 속성은 메시지를 처리하는 동안 생성된 모든 삭제 가능 매개 변수(입력, 출력, 참조 매개 변수)를 서비스에서 삭제할지 여부를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-123">This property determines whether the service disposes all disposable parameters (input, output or reference parameters) that were created while processing a message.</span></span> <span data-ttu-id="42cd0-124">기본값은 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-124">The default value is `true`.</span></span> <span data-ttu-id="42cd0-125">시스템의 리소스 삭제를 방지하고 필요한 경우 리소스를 캐시하려면 이 속성을 `false`로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-125">Set this property to `false` if you want to prevent the system from disposing of resources and cache them if required.</span></span>  
  
 <span data-ttu-id="42cd0-126">예를 들어 <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A>가 `false`이면 발신자가 발신측에서 스트림을 닫아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-126">For example, if <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A> is `false`, then the sender is responsible for closing the stream on the sending side.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Impersonation">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ImpersonationOption Impersonation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.ImpersonationOption Impersonation" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.Impersonation" />
      <MemberSignature Language="VB.NET" Value="Public Property Impersonation As ImpersonationOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ImpersonationOption Impersonation { System::ServiceModel::ImpersonationOption get(); void set(System::ServiceModel::ImpersonationOption value); };" />
      <MemberSignature Language="F#" Value="member this.Impersonation : System.ServiceModel.ImpersonationOption with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.Impersonation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ImpersonationOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="42cd0-127">작업에서 지원하는 호출자 가장 수준을 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42cd0-127">Gets or sets a value that indicates the level of caller impersonation that the operation supports.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="42cd0-128">
            <see cref="T:System.ServiceModel.ImpersonationOption" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42cd0-128">One of the <see cref="T:System.ServiceModel.ImpersonationOption" /> values.</span>
          </span>
          <span data-ttu-id="42cd0-129">기본값은 <see cref="F:System.ServiceModel.ImpersonationOption.NotAllowed" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42cd0-129">The default is <see cref="F:System.ServiceModel.ImpersonationOption.NotAllowed" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42cd0-130">지정된 메서드, 즉 <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> 속성이 <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> 또는 <xref:System.ServiceModel.ImpersonationOption.Allowed>로 설정되어 표시된 메서드가 호출자의 ID로 실행될 수 있게 하려면 가장을 지원하는 바인딩 구성과 함께 <xref:System.ServiceModel.ImpersonationOption.Required> 속성을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-130">Use the <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> property (together with a binding configuration that supports impersonation) to enable specified methods (those marked with the <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> property set to <xref:System.ServiceModel.ImpersonationOption.Allowed> or <xref:System.ServiceModel.ImpersonationOption.Required>) to execute under the caller's identity.</span></span> <span data-ttu-id="42cd0-131">세부 정보를 사용 하는 경우 가장이 수행 하는 방법을 비롯 한 <xref:System.ServiceModel.ImpersonationOption.Allowed> 와 함께 <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations%2A?displayProperty=nameWithType> 속성을 참조 하세요 [위임 및 가장](~/docs/framework/wcf/feature-details/delegation-and-impersonation-with-wcf.md) 및 [방법:서비스에서클라이언트가장](~/docs/framework/wcf/how-to-impersonate-a-client-on-a-service.md).</span><span class="sxs-lookup"><span data-stu-id="42cd0-131">For details, including how impersonation is performed when using <xref:System.ServiceModel.ImpersonationOption.Allowed> together with the <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations%2A?displayProperty=nameWithType> property, see [Delegation and Impersonation](~/docs/framework/wcf/feature-details/delegation-and-impersonation-with-wcf.md) and [How to: Impersonate a Client on a Service](~/docs/framework/wcf/how-to-impersonate-a-client-on-a-service.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="42cd0-132">가장을 수행하는 서비스 엔드포인트를 프로그래밍 방식으로 추가할 때는 <xref:System.ServiceModel.ServiceHost.AddServiceEndpoint%2A> 메서드나 <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A?displayProperty=nameWithType> 메서드 중 하나를 사용하여 계약을 새 <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> 개체에 제대로 로드해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-132">When programmatically adding a service endpoint that performs impersonation, you must either use one of the <xref:System.ServiceModel.ServiceHost.AddServiceEndpoint%2A> methods or the <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A?displayProperty=nameWithType> method to properly load the contract into a new <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> object.</span></span> <span data-ttu-id="42cd0-133">구성 파일을 사용하기 위해 추가로 필요한 단계는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-133">Using a configuration file requires no extra step.</span></span>  
  
 <span data-ttu-id="42cd0-134">특정 시나리오에서는 가장이 지원되지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-134">There may be specific scenarios when impersonation is not supported.</span></span> <span data-ttu-id="42cd0-135">자세한 내용은 [지원 되지 않는 시나리오](~/docs/framework/wcf/feature-details/unsupported-scenarios.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-135">For more information, see [Unsupported Scenarios](~/docs/framework/wcf/feature-details/unsupported-scenarios.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42cd0-136">다음 서비스 코드 예제에는 <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> 속성을 <xref:System.ServiceModel.ImpersonationOption.Required>로 설정하는 방식을 통한 가장이 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-136">The following service code example requires impersonation by setting the <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> property to <xref:System.ServiceModel.ImpersonationOption.Required>.</span></span>  
  
 [!code-csharp[OperationBehaviorAttribute_Impersonation#1](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_impersonation/cs/services.cs#1)]
 [!code-vb[OperationBehaviorAttribute_Impersonation#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_impersonation/vb/services.vb#1)]  
  
 <span data-ttu-id="42cd0-137">다음 코드 예제에서는 가장에 클라이언트 응용 프로그램 자격 증명이 필요한 작업에서 작업 호출에 앞서 자격 증명을 설정하기 위해 <xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A> 속성을 사용하는 것을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-137">The following code example shows using the <xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A> property to set the client application credentials prior to invoking the operation that requires those credentials for impersonation.</span></span>  
  
 [!code-csharp[OperationBehaviorAttribute_Impersonation#3](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_impersonation/cs/client.cs#3)]
 [!code-vb[OperationBehaviorAttribute_Impersonation#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_impersonation/vb/client.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseInstanceMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ReleaseInstanceMode ReleaseInstanceMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.ReleaseInstanceMode ReleaseInstanceMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ReleaseInstanceMode As ReleaseInstanceMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ReleaseInstanceMode ReleaseInstanceMode { System::ServiceModel::ReleaseInstanceMode get(); void set(System::ServiceModel::ReleaseInstanceMode value); };" />
      <MemberSignature Language="F#" Value="member this.ReleaseInstanceMode : System.ServiceModel.ReleaseInstanceMode with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ReleaseInstanceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="42cd0-138">작업 호출 과정에서 서비스 개체를 재활용할 시점을 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42cd0-138">Gets or sets a value that indicates when in the course of an operation invocation to recycle the service object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="42cd0-139">
            <see cref="T:System.ServiceModel.ReleaseInstanceMode" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42cd0-139">One of the <see cref="T:System.ServiceModel.ReleaseInstanceMode" /> values.</span>
          </span>
          <span data-ttu-id="42cd0-140">기본값은 <see cref="F:System.ServiceModel.ReleaseInstanceMode.None" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42cd0-140">The default is <see cref="F:System.ServiceModel.ReleaseInstanceMode.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42cd0-141">사용 된 <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> 속성을 통해 Windows Communication Foundation (WCF) 메서드를 실행 하는 과정에서 서비스 개체를 재활용 하는 경우를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-141">Use the <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> property to specify when Windows Communication Foundation (WCF) recycles a service object in the course of executing a method.</span></span> <span data-ttu-id="42cd0-142">기본 동작은 <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> 값에 따라 서비스 개체를 재활용하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-142">The default behavior is to recycle a service object according to the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> value.</span></span> <span data-ttu-id="42cd0-143"><xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> 속성을 설정하면 이 기본 동작이 변경됩니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-143">Setting the <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> property changes that default behavior.</span></span>  
  
 <span data-ttu-id="42cd0-144"><xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A>는 스레딩 수행을 보증하지는 않습니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-144">The <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> makes no threading guarantees.</span></span> <span data-ttu-id="42cd0-145">서비스 실행 시 수정되지 않은 새로운 개체가 필요한 경우 <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> 속성을 <xref:System.ServiceModel.InstanceContextMode.PerCall>로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-145">If you must have a new, unmodified object when your service runs, set the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> property to <xref:System.ServiceModel.InstanceContextMode.PerCall>.</span></span>  
  
 <span data-ttu-id="42cd0-146">트랜잭션 시나리오에서 <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> 속성은 메서드 호출을 처리하기 전에 서비스 개체와 연결된 기존 데이터를 정리하는 데 자주 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-146">In transaction scenarios, the <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> property is often used to ensure that old data associated with the service object is cleaned up prior to processing a method call.</span></span> <span data-ttu-id="42cd0-147">또한 <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> 속성을 `true`로 설정하면 트랜잭션이 성공적으로 완료된 후 트랜잭션과 연결된 서비스 개체를 재활용하도록 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-147">You can also ensure that service objects associated with transactions are recycled after the transaction successfully completes by setting the <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="42cd0-148">다음 동작 중에서 선택할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-148">You can choose the following behaviors:</span></span>  
  
-   <span data-ttu-id="42cd0-149">작업 호출 전에 서비스 개체 재활용</span><span class="sxs-lookup"><span data-stu-id="42cd0-149">Recycle a service object before an operation is called.</span></span>  
  
-   <span data-ttu-id="42cd0-150">작업 호출 후에 서비스 개체 재활용</span><span class="sxs-lookup"><span data-stu-id="42cd0-150">Recycle a service object after an operation is called.</span></span>  
  
-   <span data-ttu-id="42cd0-151">작업 호출 전후에 서비스 개체 재활용</span><span class="sxs-lookup"><span data-stu-id="42cd0-151">Recycle a service object both before and after an operation is called.</span></span>  
  
-   <span data-ttu-id="42cd0-152">재활용 동작 없음</span><span class="sxs-lookup"><span data-stu-id="42cd0-152">No recycling behavior.</span></span>  
  
 <span data-ttu-id="42cd0-153">또한 <xref:System.ServiceModel.OperationBehaviorAttribute>를 사용하여 이중 클라이언트 응용 프로그램에서 콜백 계약 작업을 구성할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-153">You can also use <xref:System.ServiceModel.OperationBehaviorAttribute> to configure a callback contract operation in a duplex client application.</span></span> <span data-ttu-id="42cd0-154">콜백 작업에 사용하는 경우 <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> 속성이 <xref:System.ServiceModel.ReleaseInstanceMode.None>이어야 하며, 그렇지 않으면 런타임에 <xref:System.InvalidOperationException> 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-154">When used on a callback operation, the <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> property must be <xref:System.ServiceModel.ReleaseInstanceMode.None> or an <xref:System.InvalidOperationException> exception is thrown at runtime.</span></span>  
  
 <span data-ttu-id="42cd0-155">또한 서비스 개체를 <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29?displayProperty=nameWithType> 생성자에 전달하는 방법으로 서비스를 생성한 경우 이 속성의 값은 <xref:System.ServiceModel.ReleaseInstanceMode.None>처럼 처리됩니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-155">In addition, it is important to realize that if the service is created by passing a service object to the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29?displayProperty=nameWithType> constructor, the value of this property is treated as if it were <xref:System.ServiceModel.ReleaseInstanceMode.None>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42cd0-156">다음 예제 코드에서는 호출 전후에 서비스 개체를 재활용하기 위해 <xref:System.ServiceModel.ReleaseInstanceMode>를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-156">The following example code shows the use of <xref:System.ServiceModel.ReleaseInstanceMode> to recycle service objects both before and after a call.</span></span>  
  
 [!code-csharp[OBA.ReleaseInstanceMode#1](~/samples/snippets/csharp/VS_Snippets_CFX/oba.releaseinstancemode/cs/services.cs#1)]
 [!code-vb[OBA.ReleaseInstanceMode#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/oba.releaseinstancemode/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="42cd0-157">값이 <see cref="T:System.ServiceModel.ReleaseInstanceMode" /> 값 중 하나가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="42cd0-157">The value is not one of the <see cref="T:System.ServiceModel.ReleaseInstanceMode" /> values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IOperationBehavior.AddBindingParameters (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(class System.ServiceModel.Description.OperationDescription description, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Sub AddBindingParameters (description As OperationDescription, parameters As BindingParameterCollection) Implements IOperationBehavior.AddBindingParameters" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System::ServiceModel::Description::OperationDescription ^ description, System::ServiceModel::Channels::BindingParameterCollection ^ parameters) = System::ServiceModel::Description::IOperationBehavior::AddBindingParameters;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="description">
          <span data-ttu-id="42cd0-158">
            <see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> 속성을 지원하도록 수정된 작업 설명입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42cd0-158">The operation description modified to support <see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> properties.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="42cd0-159">바인딩 동작을 지원하기 위해 전달된 바인딩 매개 변수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42cd0-159">Binding parameters passed to support binding behaviors.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42cd0-160">
            <see cref="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" /> 메서드를 구현합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42cd0-160">Implements the <see cref="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" /> method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior">
      <MemberSignature Language="C#" Value="void IOperationBehavior.ApplyClientBehavior (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Dispatcher.ClientOperation proxy);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(class System.ServiceModel.Description.OperationDescription description, class System.ServiceModel.Dispatcher.ClientOperation proxy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)" />
      <MemberSignature Language="VB.NET" Value="Sub ApplyClientBehavior (description As OperationDescription, proxy As ClientOperation) Implements IOperationBehavior.ApplyClientBehavior" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System::ServiceModel::Description::OperationDescription ^ description, System::ServiceModel::Dispatcher::ClientOperation ^ proxy) = System::ServiceModel::Description::IOperationBehavior::ApplyClientBehavior;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="proxy" Type="System.ServiceModel.Dispatcher.ClientOperation" />
      </Parameters>
      <Docs>
        <param name="description">
          <span data-ttu-id="42cd0-161">
            <see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> 속성을 지원하도록 수정된 작업 설명입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42cd0-161">The operation description modified to support <see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> properties.</span>
          </span>
        </param>
        <param name="proxy">
          <span data-ttu-id="42cd0-162">이 작업에 대한 사용자 지정 클라이언트 수정을 삽입하는 확장성 액세스 지점입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42cd0-162">The extensibility access point to insert custom client modifications for this operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42cd0-163">클라이언트 작업 동작을 구현합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42cd0-163">Implements the client operation behavior.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IOperationBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Dispatcher.DispatchOperation dispatch);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.OperationDescription description, class System.ServiceModel.Dispatcher.DispatchOperation dispatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)" />
      <MemberSignature Language="VB.NET" Value="Sub ApplyDispatchBehavior (description As OperationDescription, dispatch As DispatchOperation) Implements IOperationBehavior.ApplyDispatchBehavior" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System::ServiceModel::Description::OperationDescription ^ description, System::ServiceModel::Dispatcher::DispatchOperation ^ dispatch) = System::ServiceModel::Description::IOperationBehavior::ApplyDispatchBehavior;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="dispatch" Type="System.ServiceModel.Dispatcher.DispatchOperation" />
      </Parameters>
      <Docs>
        <param name="description">
          <span data-ttu-id="42cd0-164">
            <see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> 속성을 지원하도록 수정된 작업 설명입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42cd0-164">The operation description modified to support <see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> properties.</span>
          </span>
        </param>
        <param name="dispatch">
          <span data-ttu-id="42cd0-165">이 작업에 대한 사용자 지정 서비스 수정을 삽입하는 확장 지점입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42cd0-165">The extensibility point to insert custom service modifications for this operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42cd0-166">서비스 작업 동작을 구현합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42cd0-166">Implements the service operation behavior.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.Validate">
      <MemberSignature Language="C#" Value="void IOperationBehavior.Validate (System.ServiceModel.Description.OperationDescription description);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.Validate(class System.ServiceModel.Description.OperationDescription description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)" />
      <MemberSignature Language="VB.NET" Value="Sub Validate (description As OperationDescription) Implements IOperationBehavior.Validate" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.Validate(System::ServiceModel::Description::OperationDescription ^ description) = System::ServiceModel::Description::IOperationBehavior::Validate;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
      </Parameters>
      <Docs>
        <param name="description">
          <span data-ttu-id="42cd0-167">유효성을 검사할 작업 설명입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42cd0-167">The operation description to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42cd0-168">유효성 검사 동작을 구현합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42cd0-168">Implements the validation behavior.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionAutoComplete">
      <MemberSignature Language="C#" Value="public bool TransactionAutoComplete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransactionAutoComplete" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionAutoComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransactionAutoComplete { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionAutoComplete : bool with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="42cd0-169">처리되지 않은 예외가 발생하지 않을 때 현재 트랜잭션 범위를 자동으로 완료할지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42cd0-169">Gets or sets a value that indicates whether to automatically complete the current transaction scope if no unhandled exceptions occur.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="42cd0-170">작업을 성공적으로 실행했을 때 트랜잭션 범위를 자동으로 완료하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42cd0-170">
              <see langword="true" /> to complete the transaction scope automatically on successful execution of the operation; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="42cd0-171">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42cd0-171">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42cd0-172">작업 코드에서 직접 트랜잭션을 완료하거나 중단하려면 <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> 속성을 `false`로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-172">Set the <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> property to `false` to complete or abort transactions directly in the code for the operation.</span></span>  
  
 <span data-ttu-id="42cd0-173">처리된 예외는 작업 과정에서 트랜잭션 자동 중단 없이 throw할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-173">Handled exceptions can be thrown in the course of the operation without automatically aborting the transaction.</span></span> <span data-ttu-id="42cd0-174">처리되지 않은 예외가 있을 때만 자동 중단이 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-174">Only unhandled exceptions trigger an automatic abort.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42cd0-175">다음 코드 예제에서는 필수 분산 트랜잭션 내에서 실행되는 작업을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-175">The following code example shows an operation that executes within a mandatory distributed transaction.</span></span> <span data-ttu-id="42cd0-176"><xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> 속성은 작업이 트랜잭션 범위에서 실행됨을 나타내며, <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> 속성은 처리되지 않은 예외가 발생하지 않을 경우 트랜잭션 범위가 자동으로 완료됨을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-176">The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> property indicates that the operation executes under a transaction scope and the <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> property indicates that if no unhandled exceptions occur, the transaction scope is completed automatically.</span></span> <span data-ttu-id="42cd0-177">처리되지 않은 예외가 발생하면 트랜잭션은 중단됩니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-177">If an unhandled exception does occur, the transaction is aborted.</span></span>  
  
 [!code-csharp[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_transaction/cs/services.cs#2)]
 [!code-vb[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_transaction/vb/services.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionScopeRequired">
      <MemberSignature Language="C#" Value="public bool TransactionScopeRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransactionScopeRequired" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionScopeRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransactionScopeRequired { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionScopeRequired : bool with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="42cd0-178">메서드 실행에 트랜잭션 범위가 필요한지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42cd0-178">Gets or sets a value that indicates whether the method requires a transaction scope for its execution.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="42cd0-179">메서드 실행에 트랜잭션 범위가 필요하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42cd0-179">
              <see langword="true" /> if the method requires a transaction scope to execute; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="42cd0-180">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42cd0-180">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42cd0-181">작업이 트랜잭션 범위 내에서 실행되도록 하려면 <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A>를 `true`로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-181">Set the <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> to `true` to require your operation to execute within a transaction scope.</span></span> <span data-ttu-id="42cd0-182">흐름이 지정된 트랜잭션을 사용할 수 있는 경우 작업은 해당 트랜잭션 내에서 실행됩니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-182">If a flowed transaction is available, the operation executes within that transaction.</span></span> <span data-ttu-id="42cd0-183">그렇지 않으면 새 트랜잭션이 만들어져 작업 실행에 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-183">If one is not available, a new transaction is created and used for the operation execution.</span></span> <span data-ttu-id="42cd0-184">엔드포인트에서 지정된 바인딩이 흐름이 지정된 트랜잭션 지원 여부를 제어합니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-184">The binding specified in the endpoint controls whether flowed transactions are supported.</span></span> <span data-ttu-id="42cd0-185">따라서 적절한 동작을 얻기 위해서는 바인딩에서 트랜잭션 흐름을 허용하는지 여부와 <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> 속성 간의 상호 작용을 이해해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-185">Therefore, to obtain the proper behavior you must understand the interaction between whether transaction flow is permitted by the binding and the <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> property.</span></span> <span data-ttu-id="42cd0-186">다음 표에는 가능한 동작이 나와 있습니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-186">The following table shows the possible behavior.</span></span>  
  
|<span data-ttu-id="42cd0-187">TransactionScopeRequired</span><span class="sxs-lookup"><span data-stu-id="42cd0-187">TransactionScopeRequired</span></span>|<span data-ttu-id="42cd0-188">바인딩이 트랜잭션 흐름 허용</span><span class="sxs-lookup"><span data-stu-id="42cd0-188">Binding permits transaction flow</span></span>|<span data-ttu-id="42cd0-189">호출자가 트랜잭션 흐름 지정</span><span class="sxs-lookup"><span data-stu-id="42cd0-189">Caller flows transaction</span></span>|<span data-ttu-id="42cd0-190">결과</span><span class="sxs-lookup"><span data-stu-id="42cd0-190">Result</span></span>|  
|-|-|-|-|  
|<span data-ttu-id="42cd0-191">False</span><span class="sxs-lookup"><span data-stu-id="42cd0-191">False</span></span>|<span data-ttu-id="42cd0-192">False</span><span class="sxs-lookup"><span data-stu-id="42cd0-192">False</span></span>|<span data-ttu-id="42cd0-193">아니요</span><span class="sxs-lookup"><span data-stu-id="42cd0-193">No</span></span>|<span data-ttu-id="42cd0-194">메서드가 트랜잭션 없이 실행됩니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-194">Method executes without a transaction.</span></span>|  
|<span data-ttu-id="42cd0-195">True</span><span class="sxs-lookup"><span data-stu-id="42cd0-195">True</span></span>|<span data-ttu-id="42cd0-196">False</span><span class="sxs-lookup"><span data-stu-id="42cd0-196">False</span></span>|<span data-ttu-id="42cd0-197">아니요</span><span class="sxs-lookup"><span data-stu-id="42cd0-197">No</span></span>|<span data-ttu-id="42cd0-198">메서드가 새 트랜잭션 내에서 생성되고 실행됩니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-198">Method creates and executes within a new transaction.</span></span>|  
|<span data-ttu-id="42cd0-199">True 또는 False</span><span class="sxs-lookup"><span data-stu-id="42cd0-199">True or False</span></span>|<span data-ttu-id="42cd0-200">False</span><span class="sxs-lookup"><span data-stu-id="42cd0-200">False</span></span>|<span data-ttu-id="42cd0-201">예</span><span class="sxs-lookup"><span data-stu-id="42cd0-201">Yes</span></span>|<span data-ttu-id="42cd0-202">트랜잭션 헤더에 대해 SOAP 오류가 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-202">A SOAP fault is returned for the transaction header.</span></span>|  
|<span data-ttu-id="42cd0-203">False</span><span class="sxs-lookup"><span data-stu-id="42cd0-203">False</span></span>|<span data-ttu-id="42cd0-204">True</span><span class="sxs-lookup"><span data-stu-id="42cd0-204">True</span></span>|<span data-ttu-id="42cd0-205">예</span><span class="sxs-lookup"><span data-stu-id="42cd0-205">Yes</span></span>|<span data-ttu-id="42cd0-206">메서드가 트랜잭션 없이 실행됩니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-206">Method executes without a transaction.</span></span>|  
|<span data-ttu-id="42cd0-207">True</span><span class="sxs-lookup"><span data-stu-id="42cd0-207">True</span></span>|<span data-ttu-id="42cd0-208">True</span><span class="sxs-lookup"><span data-stu-id="42cd0-208">True</span></span>|<span data-ttu-id="42cd0-209">예</span><span class="sxs-lookup"><span data-stu-id="42cd0-209">Yes</span></span>|<span data-ttu-id="42cd0-210">메서드가 흐름이 지정된 트랜잭션에서 실행됩니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-210">Method executes under the flowed transaction.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="42cd0-211">다음 코드 예제에서는 필수 분산 트랜잭션 내에서 실행되는 작업을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-211">The following code example shows an operation that executes within a mandatory distributed transaction.</span></span> <span data-ttu-id="42cd0-212"><xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> 속성은 작업이 트랜잭션 범위에서 실행됨을 나타내며, <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> 속성은 처리되지 않은 예외가 발생하지 않을 경우 트랜잭션 범위가 자동으로 완료됨을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-212">The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> property indicates that the operation executes under a transaction scope and the <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> property indicates that if no unhandled exceptions occur, the transaction scope is completed automatically.</span></span> <span data-ttu-id="42cd0-213">처리되지 않은 예외가 발생하면 트랜잭션은 중단됩니다.</span><span class="sxs-lookup"><span data-stu-id="42cd0-213">If an unhandled exception does occur, the transaction is aborted.</span></span>  
  
 [!code-csharp[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_transaction/cs/services.cs#2)]
 [!code-vb[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_transaction/vb/services.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>