<Type Name="EndpointAddressAugust2004" FullName="System.ServiceModel.EndpointAddressAugust2004">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6cf3f055f6b300ce661ea5a2485ad1cfe1cae690" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34314770" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EndpointAddressAugust2004 : System.Xml.Serialization.IXmlSerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EndpointAddressAugust2004 extends System.Object implements class System.Xml.Serialization.IXmlSerializable" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.EndpointAddressAugust2004" />
  <TypeSignature Language="VB.NET" Value="Public Class EndpointAddressAugust2004&#xA;Implements IXmlSerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class EndpointAddressAugust2004 : System::Xml::Serialization::IXmlSerializable" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Xml.Serialization.IXmlSerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Xml.Serialization.XmlRoot("EndpointReference", Namespace="http://schemas.xmlsoap.org/ws/2004/08/addressing")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Xml.Serialization.XmlSchemaProvider("GetSchema")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c4ea0-101">2004년 8월 버전의 WS-Addressing을 준수하며 끝점 주소를 서비스 계약의 일부로 공개할 수 있는 serialize 가능한 형식을 가진 끝점 주소를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c4ea0-101">Provides a serializable type of endpoint address that is compliant with the version of WS-Addressing published in August 2004 and that enables it to be exposed as part of the service contract.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ea0-102"><xref:System.ServiceModel.EndpointAddress>는 serialize할 수 없으며 특정 버전의 WS-Addressing 사양과도 연관이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c4ea0-102">The <xref:System.ServiceModel.EndpointAddress> is not serializable nor is it tied to a particular version of the WS-Addressing specification.</span></span> <span data-ttu-id="c4ea0-103">직렬화 가능 형식에 제공 하는 클래스를 제공 하는 Windows Communication Foundation (WCF) <xref:System.ServiceModel.EndpointAddress10>, 즉 Ws-addressing v 1을 준수 합니다.</span><span class="sxs-lookup"><span data-stu-id="c4ea0-103">Windows Communication Foundation (WCF) supplies a class that provides a serializable type, <xref:System.ServiceModel.EndpointAddress10>, which is WS-Addressing V1 compliant.</span></span>  
  
 <span data-ttu-id="c4ea0-104">이 클래스는 레거시 용도로 serialize 가능하고 특정 통신 형식에 바인딩되는 <xref:System.ServiceModel.EndpointAddress>용 WS-Addressing August 2004 규격 래퍼를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="c4ea0-104">This class provides a WS-Addressing August 2004 compliant wrapper for the <xref:System.ServiceModel.EndpointAddress> that is serializable and bound to a particular wire format for legacy purposes.</span></span> <span data-ttu-id="c4ea0-105"><xref:System.ServiceModel.EndpointAddressAugust2004.FromEndpointAddress%28System.ServiceModel.EndpointAddress%29> 메서드가 래핑을 수행하고 <xref:System.ServiceModel.EndpointAddressAugust2004.ToEndpointAddress%2A> 메서드가 래핑 해제를 담당하므로 연결 중에 끝점 주소가 serialize된 후에도 끝점 주소 복구가 가능합니다.</span><span class="sxs-lookup"><span data-stu-id="c4ea0-105">The <xref:System.ServiceModel.EndpointAddressAugust2004.FromEndpointAddress%28System.ServiceModel.EndpointAddress%29> method does the wrapping and the <xref:System.ServiceModel.EndpointAddressAugust2004.ToEndpointAddress%2A> method does the unwrapping, allowing the recovery of the endpoint address after being serialized on the wire.</span></span>  
  
   
  
## Examples  
 [!code-csharp[EndpointAddressAugust2004#1](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddressaugust2004/cs/source.cs#1)]
 [!code-vb[EndpointAddressAugust2004#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/endpointaddressaugust2004/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FromEndpointAddress">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.EndpointAddressAugust2004 FromEndpointAddress (System.ServiceModel.EndpointAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.EndpointAddressAugust2004 FromEndpointAddress(class System.ServiceModel.EndpointAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddressAugust2004.FromEndpointAddress(System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromEndpointAddress (address As EndpointAddress) As EndpointAddressAugust2004" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::EndpointAddressAugust2004 ^ FromEndpointAddress(System::ServiceModel::EndpointAddress ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddressAugust2004</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="c4ea0-106">이 클래스의 인스턴스를 초기화하는 데 사용되는 <see cref="T:System.ServiceModel.EndpointAddress" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ea0-106">The <see cref="T:System.ServiceModel.EndpointAddress" /> used to initialize the instance of this class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4ea0-107">지정된 끝점 주소를 사용하여 <see cref="T:System.ServiceModel.EndpointAddress10" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ea0-107">Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddress10" /> class with a specified endpoint address.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4ea0-108">지정된 끝점 주소를 포함하는 <see cref="T:System.ServiceModel.EndpointAddressAugust2004" /> 클래스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ea0-108">The <see cref="T:System.ServiceModel.EndpointAddressAugust2004" /> class that contains the specified endpoint address.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ea0-109"><xref:System.ServiceModel.EndpointAddress>는 특정 버전의 WS-Addressing 사양과 연관이 없으며 특정 통신 형식에 바인딩되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c4ea0-109">The <xref:System.ServiceModel.EndpointAddress> is not tied to a particular version of the WS-Addressing specification or bound to a particular wire format.</span></span>  
  
   
  
## Examples  
 [!code-csharp[EndpointAddressAugust2004#1](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddressaugust2004/cs/source.cs#1)]
 [!code-vb[EndpointAddressAugust2004#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/endpointaddressaugust2004/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlQualifiedName GetSchema (System.Xml.Schema.XmlSchemaSet xmlSchemaSet);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlQualifiedName GetSchema(class System.Xml.Schema.XmlSchemaSet xmlSchemaSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddressAugust2004.GetSchema(System.Xml.Schema.XmlSchemaSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlQualifiedName ^ GetSchema(System::Xml::Schema::XmlSchemaSet ^ xmlSchemaSet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlSchemaSet" Type="System.Xml.Schema.XmlSchemaSet" />
      </Parameters>
      <Docs>
        <param name="xmlSchemaSet">
          <span data-ttu-id="c4ea0-110">끝점 주소에 대한 XSD(XML 스키마 정의 언어) 스키마의 캐시를 포함하는 <see cref="T:System.Xml.Schema.XmlSchema" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ea0-110">A <see cref="T:System.Xml.Schema.XmlSchema" /> that contains a cache of the XML schema definition language (XSD) schemas for the endpoint address.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4ea0-111">지정 캐시된 스키마로부터 버전 1 끝점 주소의 XML 표현을 나타내는 XML 정규화된 이름을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ea0-111">Returns an XML-qualified name that describes the XML representation of the version 1 endpoint address from a specified cached schema.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4ea0-112">끝점 주소의 XML 표현을 설명하는 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ea0-112">A <see cref="T:System.Xml.XmlQualifiedName" /> that describes the XML representation of the endpoint address.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ea0-113">이 메서드는 serialization 계약에 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="c4ea0-113">This method is required by the serialization contract.</span></span> <span data-ttu-id="c4ea0-114">XmlSerializer에서 인식할 수 있으려면 public이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c4ea0-114">It must be public to be seen by the XmlSerializer.</span></span> <span data-ttu-id="c4ea0-115">이 메서드는 개발자가 직접 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c4ea0-115">It is not intended to be called by developers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4ea0-116">
            <paramref name="xmlSchemaSet" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ea0-116">
              <paramref name="xmlSchemaSet" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.Serialization.IXmlSerializable.GetSchema">
      <MemberSignature Language="C#" Value="System.Xml.Schema.XmlSchema IXmlSerializable.GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Xml.Schema.XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddressAugust2004.System#Xml#Serialization#IXmlSerializable#GetSchema" />
      <MemberSignature Language="VB.NET" Value="Function GetSchema () As XmlSchema Implements IXmlSerializable.GetSchema" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Xml::Schema::XmlSchema ^ System.Xml.Serialization.IXmlSerializable.GetSchema() = System::Xml::Serialization::IXmlSerializable::GetSchema;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.GetSchema</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4ea0-117">
            <see langword="null" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ea0-117">Returns <see langword="null" />.</span>
          </span>
        </summary>
        <returns>
          <see langword="null" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.Serialization.IXmlSerializable.ReadXml">
      <MemberSignature Language="C#" Value="void IXmlSerializable.ReadXml (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Xml.Serialization.IXmlSerializable.ReadXml(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddressAugust2004.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Sub ReadXml (reader As XmlReader) Implements IXmlSerializable.ReadXml" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Xml.Serialization.IXmlSerializable.ReadXml(System::Xml::XmlReader ^ reader) = System::Xml::Serialization::IXmlSerializable::ReadXml;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="c4ea0-118">끝점 주소를 가져올 <see cref="T:System.Xml.XmlReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ea0-118">The <see cref="T:System.Xml.XmlReader" /> from which the endpoint address is obtained.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4ea0-119">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ea0-119">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.Serialization.IXmlSerializable.WriteXml">
      <MemberSignature Language="C#" Value="void IXmlSerializable.WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Xml.Serialization.IXmlSerializable.WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddressAugust2004.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Sub WriteXml (writer As XmlWriter) Implements IXmlSerializable.WriteXml" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Xml.Serialization.IXmlSerializable.WriteXml(System::Xml::XmlWriter ^ writer) = System::Xml::Serialization::IXmlSerializable::WriteXml;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="c4ea0-120">현재 끝점 주소를 저장할 대상 <see cref="T:System.Xml.XmlWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ea0-120">The <see cref="T:System.Xml.XmlWriter" /> to which the current endpoint address is saved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4ea0-121">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ea0-121">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToEndpointAddress">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress ToEndpointAddress ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.EndpointAddress ToEndpointAddress() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddressAugust2004.ToEndpointAddress" />
      <MemberSignature Language="VB.NET" Value="Public Function ToEndpointAddress () As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::EndpointAddress ^ ToEndpointAddress();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4ea0-122">serialize할 수 있는 이 형식에 포함된 끝점 주소를 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ea0-122">Retrieves the endpoint address contained in this serializable type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4ea0-123">이 <see cref="T:System.ServiceModel.EndpointAddress" />의 버전 중립적 끝점 주소를 포함하는 <see cref="T:System.ServiceModel.EndpointAddressAugust2004" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4ea0-123">The <see cref="T:System.ServiceModel.EndpointAddress" /> that contains a version-neutral endpoint address of this <see cref="T:System.ServiceModel.EndpointAddressAugust2004" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddressAugust2004#1](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddressaugust2004/cs/source.cs#1)]
 [!code-vb[EndpointAddressAugust2004#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/endpointaddressaugust2004/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>