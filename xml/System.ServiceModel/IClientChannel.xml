<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IClientChannel.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59037899c1b8cc7ed8fb49595e1bc5fc5db233ec7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9037899c1b8cc7ed8fb49595e1bc5fc5db233ec7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.IClientChannel">
          <source>Defines the behavior of outbound request and request/reply channels used by client applications.</source>
          <target state="translated">클라이언트 응용 프로그램에서 사용하는 아웃바운드 요청 및 요청/응답 채널의 동작을 정의합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.IClientChannel">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.IClientChannel&gt;</ph> interface defines the operations supported by all channels returned by a call to <ph id="ph2">&lt;xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.IClientChannel&gt;</ph> 인터페이스에서는 <ph id="ph2">&lt;xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType&gt;</ph>을 호출하여 반환되는 모든 채널에서 지원하는 작업을 정의합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.IClientChannel">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.IClientChannel&gt;</ph> methods and properties to inspect and modify the outbound typed channel.</source>
          <target state="translated">아웃바운드 형식의 채널을 검사하고 수정하려면 <ph id="ph1">&lt;xref:System.ServiceModel.IClientChannel&gt;</ph> 메서드 및 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.IClientChannel">
          <source>The <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> exports both a <ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> class and a service contract interface by creating a contract interface that inherits from both the target service contract and <ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel&gt;</ph>, enabling you to use the extended contract as both the proxy to the service and to access the client channel.</source>
          <target state="translated"><bpt id="p1">[</bpt>ServiceModel Metadata 유틸리티 도구 (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> 모두 내보냅니다는 <ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> 클래스와 대상 서비스 계약에 모두에서 상속 된 계약 인터페이스를 만들어 서비스 계약 인터페이스 및 <ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel&gt;</ph>, 확장 된 계약을 사용 하 여 서비스에 프록시와 클라이언트 채널을 액세스할 수 있습니다를 사용 하도록 설정 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.IClientChannel">
          <source>For more information, see <bpt id="p1">[</bpt>WCF Client Architecture<ept id="p1">](~/docs/framework/wcf/feature-details/client-architecture.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>WCF 클라이언트 아키텍처<ept id="p1">](~/docs/framework/wcf/feature-details/client-architecture.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.IClientChannel">
          <source>For examples of its appearance in generated client code files, see <bpt id="p1">[</bpt>Understanding Generated Client Code<ept id="p1">](~/docs/framework/wcf/feature-details/understanding-generated-client-code.md)</ept>.</source>
          <target state="translated">생성 된 클라이언트 코드 파일의 해당 모양의 예 참조 <bpt id="p1">[</bpt>생성 된 클라이언트 코드 이해<ept id="p1">](~/docs/framework/wcf/feature-details/understanding-generated-client-code.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.IClientChannel.AllowInitializationUI">
          <source>Gets or sets a value indicating whether <ph id="ph1">&lt;see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /&gt;</ph> attempts to call the <ph id="ph2">&lt;see cref="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" /&gt;</ph> objects in the <ph id="ph3">&lt;see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers" /&gt;</ph> property or throws if that collection is not empty.</source>
          <target state="translated">해당 컬렉션이 비어 있지 않은 경우 <ph id="ph1">&lt;see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /&gt;</ph>에서 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" /&gt;</ph> 속성의 <ph id="ph3">&lt;see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers" /&gt;</ph> 개체를 호출하려고 시도할지 또는 throw할지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.IClientChannel.AllowInitializationUI">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> is permitted to invoke interactive channel initializers; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>에서 대화형 채널 이니셜라이저를 호출할 수 있으면 <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.IClientChannel.AllowInitializationUI">
          <source>Set this to <ph id="ph1">`false`</ph> if you want to throw an exception rather than display an initialization dialog.</source>
          <target state="translated">초기화 대화 상자를 표시하는 대신 예외를 throw하려면 이 속성을 <ph id="ph1">`false`</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.IClientChannel.AllowInitializationUI">
          <source>This is useful in a middle-tier scenario in which you want to guarantee that no dialog appears even if the application is configured to display one.</source>
          <target state="translated">이 속성은 응용 프로그램이 대화 상자를 표시하도록 구성된 경우에도 대화 상자를 표시하지 않도록 하려는 중간 계층 시나리오에 유용합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.IClientChannel.AllowInitializationUI">
          <source>For details, see <bpt id="p1">[</bpt>Accessing Services Using a WCF Client<ept id="p1">](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md)</ept> and <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>WCF 클라이언트를 사용 하 여 액세스 서비스<ept id="p1">](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md)</ept> 및 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
          <source>The method that is called when this method completes.</source>
          <target state="translated">이 메서드가 완료될 때 호출되는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
          <source>Information about the state of the channel.</source>
          <target state="translated">채널 상태에 대한 정보입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
          <source>An asynchronous call to begin using a user interface to obtain credential information.</source>
          <target state="translated">자격 증명 정보를 얻기 위해 사용자 인터페이스를 사용하여 시작할 비동기 호출입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> to use to call back when processing has completed.</source>
          <target state="translated">처리가 완료되면 콜백하는 데 사용할 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
          <source>Call this method to cause any interactive channel initialization (for example, CardSpace card selection) to occur.</source>
          <target state="translated">대화형 채널 초기화(예: CardSpace 카드 선택)를 발생시키려면 이 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
          <source>This happens automatically if the channel is used without explicitly calling <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph>, so for many applications this call is optional.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph>을 명시적으로 호출하지 않고 채널을 사용하는 경우에는 자동으로 호출되므로 이 호출은 여러 응용 프로그램에서 선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
          <source>However, if the user takes a long time in the selection process, the operation that automatically called this may time out. To prevent this, call <ph id="ph1">&lt;xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.IClientChannel.EndDisplayInitializationUI%2A&gt;</ph> explicitly.</source>
          <target state="translated">그러나 선택 프로세스에서 시간이 오래 걸리는 경우 이 메서드를 자동으로 호출한 작업의 제한 시간이 초과될 수 있습니다. 이를 방지하려면 <ph id="ph1">&lt;xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI%2A&gt;</ph>와 <ph id="ph3">&lt;xref:System.ServiceModel.IClientChannel.EndDisplayInitializationUI%2A&gt;</ph>를 명시적으로 호출합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
          <source>These operations do not time out and allow you to control exactly where in your application this dialog comes up.</source>
          <target state="translated">이러한 작업에는 시간 제한이 없으므로 응용 프로그램에서 이 대화 상자가 나타나는 위치를 정확히 제어할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
          <source>This method only brings up a dialog if the application is configured to do so.</source>
          <target state="translated">응용 프로그램이 이러한 작업을 수행하도록 구성된 경우 이 메서드는 대화 상자만 표시합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
          <source>When the application is not configured to use CardSpace or another interactive channel initializer, this call returns without any action.</source>
          <target state="translated">응용 프로그램이 CardSpace 또는 다른 대화형 채널 이니셜라이저를 사용하도록 구성되지 않은 경우 아무런 동작도 없이 이 호출이 반환됩니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
          <source>If you call this method explicitly, you must also explicitly open the channel before using it.</source>
          <target state="translated">이 메서드를 명시적으로 호출하는 경우에는 또한 채널을 사용하기 전에 명시적으로 열어야 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.IClientChannel.DidInteractiveInitialization">
          <source>Gets a value indicating whether a call was done to a user interface to obtain credential information.</source>
          <target state="translated">자격 증명 정보를 얻기 위해 사용자 인터페이스를 호출했는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.IClientChannel.DidInteractiveInitialization">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /&gt;</ph> method was called (or the <ph id="ph3">&lt;see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /&gt;</ph> and <ph id="ph4">&lt;see cref="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)" /&gt;</ph> methods; otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 메서드를 호출했거나 <ph id="ph2">&lt;see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /&gt;</ph> 메서드를 호출했으면 <ph id="ph4">&lt;see cref="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph5">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.IClientChannel.DidInteractiveInitialization">
          <source>If operations are called on an <ph id="ph1">&lt;xref:System.ServiceModel.IClientChannel&gt;</ph> without calling <ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph>, these methods are called automatically.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.IClientChannel&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A&gt;</ph>을 호출하지 않고 <ph id="ph3">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph>에서 작업을 호출한 경우 이러한 메서드가 자동으로 호출됩니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.IClientChannel.DidInteractiveInitialization">
          <source>For details, see <bpt id="p1">[</bpt>Accessing Services Using a WCF Client<ept id="p1">](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md)</ept> and <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>WCF 클라이언트를 사용 하 여 액세스 서비스<ept id="p1">](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md)</ept> 및 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.IClientChannel.DisplayInitializationUI">
          <source>A call to a user interface to obtain credential information.</source>
          <target state="translated">자격 증명 정보를 얻기 위한 사용자 인터페이스 호출입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IClientChannel.DisplayInitializationUI">
          <source>Call this method to cause any interactive channel initialization (for example, CardSpace card selection) to occur.</source>
          <target state="translated">대화형 채널 초기화(예: CardSpace 카드 선택)를 발생시키려면 이 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IClientChannel.DisplayInitializationUI">
          <source>This happens automatically if the channel is used without explicitly calling <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph>, so for many applications this call is optional.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph>을 명시적으로 호출하지 않고 채널을 사용하는 경우에는 자동으로 호출되므로 이 호출은 여러 응용 프로그램에서 선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IClientChannel.DisplayInitializationUI">
          <source>However, if the user takes a long time in the selection process, the operation that automatically called this may time out. To prevent this, call <ph id="ph1">&lt;xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.IClientChannel.EndDisplayInitializationUI%2A&gt;</ph> explicitly.</source>
          <target state="translated">그러나 선택 프로세스에서 시간이 오래 걸리는 경우 이 메서드를 자동으로 호출한 작업의 제한 시간이 초과될 수 있습니다. 이를 방지하려면 <ph id="ph1">&lt;xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI%2A&gt;</ph>와 <ph id="ph3">&lt;xref:System.ServiceModel.IClientChannel.EndDisplayInitializationUI%2A&gt;</ph>를 명시적으로 호출합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IClientChannel.DisplayInitializationUI">
          <source>These operations do not time out and allow you to control exactly where in your application this dialog comes up.</source>
          <target state="translated">이러한 작업에는 시간 제한이 없으므로 응용 프로그램에서 이 대화 상자가 나타나는 위치를 정확히 제어할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IClientChannel.DisplayInitializationUI">
          <source>This method only brings up a dialog if the application is configured to do so.</source>
          <target state="translated">응용 프로그램이 이러한 작업을 수행하도록 구성된 경우 이 메서드는 대화 상자만 표시합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IClientChannel.DisplayInitializationUI">
          <source>When the application is not configured to use CardSpace or another interactive channel initializer, this call returns without any action.</source>
          <target state="translated">응용 프로그램이 CardSpace 또는 다른 대화형 채널 이니셜라이저를 사용하도록 구성되지 않은 경우 아무런 동작도 없이 이 호출이 반환됩니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IClientChannel.DisplayInitializationUI">
          <source>If you call this method explicitly, you must also explicitly open the channel before using it.</source>
          <target state="translated">이 메서드를 명시적으로 호출하는 경우에는 또한 채널을 사용하기 전에 명시적으로 열어야 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IClientChannel.DisplayInitializationUI">
          <source>For details, see <bpt id="p1">[</bpt>Accessing Services Using a WCF Client<ept id="p1">](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md)</ept> and <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>WCF 클라이언트를 사용 하 여 액세스 서비스<ept id="p1">](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md)</ept> 및 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)">
          <source>Called when the call to <ph id="ph1">&lt;see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /&gt;</ph> has finished.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /&gt;</ph> 호출이 끝나면 호출됩니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="E:System.ServiceModel.IClientChannel.UnknownMessageReceived">
          <source>This is a reserved event.</source>
          <target state="translated">예약된 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.IClientChannel.Via">
          <source>Gets the URI that contains the transport address to which messages are sent on the client channel.</source>
          <target state="translated">클라이언트 채널에서 보낸 메시지의 전송 주소가 포함된 URI를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.IClientChannel.Via">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that contains the transport address to which messages are sent on the channel.</source>
          <target state="translated">채널에서 보낸 메시지의 전송 주소가 포함된 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.IClientChannel.Via">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.EndpointAddress&gt;</ph> serves as both the ultimate destination and the physical address if a <ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel.Via%2A&gt;</ph> is not specified.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.EndpointAddress&gt;</ph>가 지정되지 않은 경우 <ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel.Via%2A&gt;</ph>가 최종 대상과 물리적 주소 둘 모두로 사용됩니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.IClientChannel.Via">
          <source>If the <ph id="ph1">&lt;xref:System.ServiceModel.IClientChannel.Via%2A&gt;</ph> is specified, then that is the actual physical address to which the message is sent and through which the message must go to arrive at its destination.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.IClientChannel.Via%2A&gt;</ph>가 지정된 경우 이 속성이 메시지를 보낸 실제 물리적 주소이고 이 주소를 통해 메시지가 대상에 도착해야 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.IClientChannel.Via">
          <source>This value can be set from a configuration file using the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientViaBehavior?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientViaBehavior?displayProperty=nameWithType&gt;</ph>를 사용하여 구성 파일에서 설정할 수 있습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>