<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="InvalidMessageContractException.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ce63eaf384b21aca6b33dc27267e6283a5e58e2a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ce63eaf384b21aca6b33dc27267e6283a5e58e2a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.InvalidMessageContractException">
          <source>Represents a message contract that is not valid.</source>
          <target state="translated">유효하지 않은 메시지 계약을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.InvalidMessageContractException">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.InvalidMessageContractException&gt;</ph> is thrown when custom attribute usage results in the generation of an invalid service description.</source>
          <target state="translated">사용자 지정 특성을 사용하여 잘못된 서비스 설명이 생성될 경우 <ph id="ph1">&lt;xref:System.ServiceModel.InvalidMessageContractException&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.InvalidMessageContractException">
          <source>For example, if a <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractAttribute?displayProperty=nameWithType&gt;</ph> type has multiple parts with the same name, or a method has multiple parameters with the same name.</source>
          <target state="translated">예를 들어 <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractAttribute?displayProperty=nameWithType&gt;</ph> 형식에 이름이 같은 여러 부분이 있거나 메서드에 이름이 같은 여러 매개 변수가 있는 경우가 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.InvalidMessageContractException">
          <source>The following code example shows a contract and service that throws an <ph id="ph1">&lt;xref:System.ServiceModel.InvalidMessageContractException&gt;</ph> that says <ph id="ph2">`operand`</ph> appears more than once in the message.</source>
          <target state="translated">다음 코드 예제에서는 메시지에 <ph id="ph1">&lt;xref:System.ServiceModel.InvalidMessageContractException&gt;</ph>가 두 번 이상 표시됨을 알리는 <ph id="ph2">`operand`</ph>을 throw하는 계약 및 서비스를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.InvalidMessageContractException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.InvalidMessageContractException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.InvalidMessageContractException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.InvalidMessageContractException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.InvalidMessageContractException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.InvalidMessageContractException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.InvalidMessageContractException.#ctor">
          <source>Creates a new <ph id="ph1">&lt;xref:System.ServiceModel.InvalidMessageContractException&gt;</ph> object.</source>
          <target state="translated">새 <ph id="ph1">&lt;xref:System.ServiceModel.InvalidMessageContractException&gt;</ph> 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String)">
          <source>The message for the exception.</source>
          <target state="translated">예외에 대한 메시지입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.InvalidMessageContractException" /&gt;</ph> class using the specified message.</source>
          <target state="translated">지정된 메시지를 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.InvalidMessageContractException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String)">
          <source>Creates a new <ph id="ph1">&lt;xref:System.ServiceModel.InvalidMessageContractException&gt;</ph> object using the <ph id="ph2">`message`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.InvalidMessageContractException&gt;</ph>를 사용하여 새 <ph id="ph2">`message`</ph> 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The serialization information.</source>
          <target state="translated">serialization 정보입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The stream from which to deserialize.</source>
          <target state="translated">deserialize할 스트림입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.InvalidMessageContractException" /&gt;</ph> class when deserializing from a stream into an object.</source>
          <target state="translated">스트림에서 개체로 deserialize할 때 <ph id="ph1">&lt;see cref="T:System.ServiceModel.InvalidMessageContractException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Creates a new <ph id="ph1">&lt;xref:System.ServiceModel.InvalidMessageContractException&gt;</ph> object from the stream on deserialization.</source>
          <target state="translated">deserialization의 스트림에서 새 <ph id="ph1">&lt;xref:System.ServiceModel.InvalidMessageContractException&gt;</ph> 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String,System.Exception)">
          <source>The exception message.</source>
          <target state="translated">예외 메시지입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String,System.Exception)">
          <source>The inner exception.</source>
          <target state="translated">내부 예외입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.InvalidMessageContractException" /&gt;</ph> class that uses the specified message and inner exception.</source>
          <target state="translated">지정된 메시지와 내부 예외를 사용하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.InvalidMessageContractException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String,System.Exception)">
          <source>Creates a new <ph id="ph1">&lt;xref:System.ServiceModel.InvalidMessageContractException&gt;</ph> object from the <ph id="ph2">`message`</ph> and <ph id="ph3">`innerException`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.InvalidMessageContractException&gt;</ph> 및 <ph id="ph2">`message`</ph>에서 새 <ph id="ph3">`innerException`</ph> 개체를 만듭니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>