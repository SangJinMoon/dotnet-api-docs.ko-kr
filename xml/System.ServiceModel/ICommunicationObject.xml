<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ICommunicationObject.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5864e880f75f69ec7b5b1eaad2fa2a42f3c1377ea.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">864e880f75f69ec7b5b1eaad2fa2a42f3c1377ea</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ICommunicationObject">
          <source>Defines the contract for the basic state machine for all communication-oriented objects in the system, including channels, the channel managers, factories, listeners, and dispatchers, and service hosts.</source>
          <target state="translated">시스템에서 채널, 채널 관리자, 팩터리, 수신기, 디스패처, 서비스 호스트 등 모든 통신 지향 개체의 기본 상태 시스템에 대한 계약을 정의합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ICommunicationObject">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> interface defines:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> 인터페이스에서는 다음 항목을 정의합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ICommunicationObject">
          <source>A set of open, close and abort methods for initiating state transitions:</source>
          <target state="translated">상태 전환을 시작하는 open, close 및 abort 메서드 집합</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ICommunicationObject">
          <source>Asynchronous versions of the open and close methods:</source>
          <target state="translated">비동기 버전의 open 및 close 메서드</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ICommunicationObject">
          <source>A set of events that provide notifications of state transitions:</source>
          <target state="translated">상태 전환에 대한 알림을 제공하는 이벤트 집합</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ICommunicationObject">
          <source>A common <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.State%2A&gt;</ph> property for inspecting the state of an object</source>
          <target state="translated">개체의 상태를 검사하는 공용 <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.State%2A&gt;</ph> 속성</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.Abort">
          <source>Causes a communication object to transition immediately from its current state into the closed state.</source>
          <target state="translated">통신 개체가 현재 상태에서 Closed 상태로 즉시 전환되도록 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.Abort">
          <source>This method indicates that any unfinished work should be ignored or ungracefully terminated before returning.</source>
          <target state="translated">이 메서드는 반환하기 전에 완료되지 않은 작업을 무시하거나 종료해야 함을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.Abort">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.Abort%2A&gt;</ph> method can be used to cancel any outstanding operations, including outstanding calls to <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject.Close%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.Abort%2A&gt;</ph>에 대한 처리 중인 호출 등 처리 중인 작업을 취소하기 위해 <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject.Close%2A&gt;</ph> 메서드를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.Abort">
          <source>To gracefully transition an <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> from the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state to the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state call <ph id="ph4">&lt;xref:System.ServiceModel.ICommunicationObject.Close%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph>를 <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> 상태에서 <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> 상태로 전환하려면 <ph id="ph4">&lt;xref:System.ServiceModel.ICommunicationObject.Close%2A&gt;</ph>를 호출합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ICommunicationObject">
          <source>Begins an asynchronous operation to close a communication object.</source>
          <target state="translated">통신 개체를 닫기 위한 비동기 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ICommunicationObject">
          <source>This method causes an <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> to gracefully transition from the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state to the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state.</source>
          <target state="translated">이 메서드를 사용하면 <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph>가 <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> 상태에서 <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> 상태로 전환됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ICommunicationObject">
          <source>Versions with and without an explicit timeout are provided.</source>
          <target state="translated">명시적 시간 제한이 있는 버전과 없는 버전이 제공됩니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives notification of the completion of the asynchronous close operation.</source>
          <target state="translated">비동기 닫기 작업의 완료에 대한 알림을 수신하는 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 대리자입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous close operation.</source>
          <target state="translated">응용 프로그램에 의해 지정되는 개체로, 비동기 닫기 작업과 연결된 상태 정보를 포함합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to close a communication object.</source>
          <target state="translated">통신 개체를 닫기 위한 비동기 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous close operation.</source>
          <target state="translated">비동기 닫기 작업을 참조하는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>This method causes an <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> to gracefully transition from any state, other than the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state to the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state.</source>
          <target state="translated">이 메서드를 사용하면 <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph>가 <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> 상태 이외의 모든 상태에서 <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> 상태로 전환됩니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.BeginClose%2A&gt;</ph> method allows any unfinished work to be completed before returning.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.BeginClose%2A&gt;</ph> 메서드를 사용하면 반환하기 전에 끝내지 않은 작업을 완료할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>For example, finish sending any buffered messages).</source>
          <target state="translated">예를 들어 버퍼링된 메시지의 전송을 완료할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /&gt;</ph> was called on an object in the <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /&gt;</ph> 상태인 개체에 대해 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph>를 호출한 경우</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>The default timeout elapsed before the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ICommunicationObject" /&gt;</ph> was able to close gracefully.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ICommunicationObject" /&gt;</ph>를 닫을 수 있기 전에 기본 제한 시간이 경과된 경우</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the send operation has to complete before timing out.</source>
          <target state="translated">시간 제한이 초과되기 전에 보내기 작업이 완료되어야 하는 기간을 지정하는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives notification of the completion of the asynchronous close operation.</source>
          <target state="translated">비동기 닫기 작업의 완료에 대한 알림을 수신하는 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 대리자입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous close operation.</source>
          <target state="translated">응용 프로그램에 의해 지정되는 개체로, 비동기 닫기 작업과 연결된 상태 정보를 포함합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to close a communication object with a specified timeout.</source>
          <target state="translated">지정된 제한 시간 내에서 통신 개체를 닫기 위한 비동기 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous close operation.</source>
          <target state="translated">비동기 닫기 작업을 참조하는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method causes an <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> to gracefully transition from any state, other than the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state to the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state with in a specified interval of time.</source>
          <target state="translated">이 메서드를 사용하면 지정된 시간 간격 내에서 <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph>가 <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> 상태 이외의 모든 상태에서 <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> 상태로 전환됩니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.BeginClose%2A&gt;</ph> method allows any unfinished work to be completed before returning.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.BeginClose%2A&gt;</ph> 메서드를 사용하면 반환하기 전에 끝내지 않은 작업을 완료할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>For example, finish sending any buffered messages).</source>
          <target state="translated">예를 들어 버퍼링된 메시지의 전송을 완료할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /&gt;</ph> was called on an object in the <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /&gt;</ph> 상태인 개체에 대해 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph>를 호출한 경우</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The specified timeout elapsed before the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ICommunicationObject" /&gt;</ph> was able to close gracefully.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ICommunicationObject" /&gt;</ph>를 닫을 수 있기 전에 지정된 제한 시간이 경과된 경우</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ICommunicationObject">
          <source>Begins an asynchronous operation to close a communication object.</source>
          <target state="translated">통신 개체를 닫기 위한 비동기 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ICommunicationObject">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A&gt;</ph> method causes an <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> to enter into the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph> state where it remains until its transition to the <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state is completed or fails.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A&gt;</ph> 메서드를 사용하면 <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph>는 <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph> 상태가 됩니다. <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> 상태로의 전환이 완료되거나 실패할 때까지 이 상태로 유지됩니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ICommunicationObject">
          <source>Versions with and without an explicit timeout are provided.</source>
          <target state="translated">명시적 시간 제한이 있는 버전과 없는 버전이 제공됩니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives notification of the completion of the asynchronous open operation.</source>
          <target state="translated">비동기 열기 작업의 완료에 대한 알림을 수신하는 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 대리자입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous open operation.</source>
          <target state="translated">응용 프로그램에서 지정하는 개체로, 비동기 열기 작업과 연결된 상태 정보를 포함합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to open a communication object.</source>
          <target state="translated">통신 개체를 열기 위한 비동기 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous open operation.</source>
          <target state="translated">비동기 열기 작업을 참조하는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <source>When an <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> is instantiated, it begins in the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph>가 인스턴스화되면 <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> 상태에서 시작합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <source>In the <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, the object can be configured (for example, properties can be set, or events can be registered), but it is not yet usable to send or receive messages.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> 상태에서는 속성을 설정하거나 이벤트를 등록하는 등 개체를 구성할 수는 있지만 아직 메시지를 보내거나 받을 수는 없습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A&gt;</ph> method causes an <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> to enter into the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph> state where it remains until the open operation succeeds, the open operation times out or fails and the object becomes faulted, or the <ph id="ph4">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> is aborted.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A&gt;</ph> 메서드를 사용하면 <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph>는 <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph> 상태가 됩니다. 열기 작업이 성공하거나, 열기 작업의 실패 또는 시간 초과로 개체에 오류가 발생하거나, <ph id="ph4">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph>가 중단될 때까지 이 상태로 유지됩니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <source>In the <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state, the <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> is usable (for example, messages can be received), but it is no longer configurable.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> 상태에서는 메시지를 수신하는 등 <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph>를 사용할 수는 있지만 더 이상 구성할 수는 없습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.ICommunicationObject" /&gt;</ph> was unable to be opened and has entered the <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ICommunicationObject" /&gt;</ph>를 열 수 없어 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 상태가 된 경우</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <source>The default open timeout elapsed before the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ICommunicationObject" /&gt;</ph> was able to enter the <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> state and has entered the <ph id="ph3">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ICommunicationObject" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 상태가 될 수 있고 <ph id="ph3">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 상태가 되기 전에 기본 열기 제한 시간이 경과된 경우</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the send operation has to complete before timing out.</source>
          <target state="translated">시간 제한이 초과되기 전에 보내기 작업이 완료되어야 하는 기간을 지정하는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives notification of the completion of the asynchronous open operation.</source>
          <target state="translated">비동기 열기 작업의 완료에 대한 알림을 수신하는 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 대리자입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous open operation.</source>
          <target state="translated">응용 프로그램에서 지정하는 개체로, 비동기 열기 작업과 연결된 상태 정보를 포함합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to open a communication object within a specified interval of time.</source>
          <target state="translated">지정된 시간 간격 내에서 통신 개체를 열기 위한 비동기 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous open operation.</source>
          <target state="translated">비동기 열기 작업을 참조하는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>When an <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> is instantiated, it begins in the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph>가 인스턴스화되면 <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> 상태에서 시작합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>In the <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, the object can be configured (for example, properties can be set, or events can be registered), but it is not yet usable to send or receive messages.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> 상태에서는 속성을 설정하거나 이벤트를 등록하는 등 개체를 구성할 수는 있지만 아직 메시지를 보내거나 받을 수는 없습니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A&gt;</ph> method causes an <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> to enter into the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph> state where it remains until the open operation succeeds, the open operation times out or fails and the object becomes faulted, or the <ph id="ph4">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> is aborted.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A&gt;</ph> 메서드를 사용하면 <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph>는 <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph> 상태가 됩니다. 열기 작업이 성공하거나, 열기 작업의 실패 또는 시간 초과로 개체에 오류가 발생하거나, <ph id="ph4">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph>가 중단될 때까지 이 상태로 유지됩니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>In the <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state, the <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> is usable (for example, messages can be received), but it is no longer configurable.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> 상태에서는 메시지를 수신하는 등 <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph>를 사용할 수는 있지만 더 이상 구성할 수는 없습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.ICommunicationObject" /&gt;</ph> was unable to be opened and has entered the <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ICommunicationObject" /&gt;</ph>를 열 수 없어 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 상태가 된 경우</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The specified timeout elapsed before the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ICommunicationObject" /&gt;</ph> was able to enter the <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> state and has entered the <ph id="ph3">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ICommunicationObject" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 상태가 될 수 있고 <ph id="ph3">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 상태가 되기 전에 지정된 제한 시간이 경과된 경우</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The operation must throw a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> if the specified <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> is exceeded.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph>을 초과한 경우 작업에서는 <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph>을 throw해야 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ICommunicationObject">
          <source>Causes a communication object to transition from its current state into the closed state.</source>
          <target state="translated">통신 개체가 현재 상태에서 Closed 상태로 전환되도록 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.Close">
          <source>Causes a communication object to transition from its current state into the closed state.</source>
          <target state="translated">통신 개체가 현재 상태에서 Closed 상태로 전환되도록 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.Close">
          <source>This method causes an <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> to gracefully transition from the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state to the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state.</source>
          <target state="translated">이 메서드를 사용하면 <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph>가 <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> 상태에서 <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> 상태로 전환됩니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.Close">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.Close%2A&gt;</ph> method allows any unfinished work to be completed before returning.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.Close%2A&gt;</ph> 메서드를 사용하면 반환하기 전에 끝내지 않은 작업을 완료할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.Close">
          <source>For example, finish sending any buffered messages).</source>
          <target state="translated">예를 들어 버퍼링된 메시지의 전송을 완료할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.Close">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> enters the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closing&gt;</ph> state and remains in it until the transition to the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state is completed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph>는 <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closing&gt;</ph> 상태가 되고, <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> 상태로의 전환이 완료될 때까지 이 상태로 유지됩니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.Close">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.Close%2A&gt;</ph> returns once the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state is reached.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.Close%2A&gt;</ph> 상태에 도달하면 <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph>가 반환됩니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.Close">
          <source>If the default close timeout elapses before the <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> is able to close gracefully, the <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> is aborted.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph>를 닫을 수 있기 전에 기본 닫기 제한 시간이 경과된 경우 <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph>가 중단됩니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.Close">
          <source>If <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.Close%2A&gt;</ph> is called on an <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> in the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph>, <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph>, or <ph id="ph5">&lt;xref:System.ServiceModel.CommunicationState.Faulted&gt;</ph> state, the <ph id="ph6">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> is aborted.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.Close%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> 상태의 <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph>에서 <ph id="ph5">&lt;xref:System.ServiceModel.CommunicationState.Faulted&gt;</ph>를 호출하면 <ph id="ph6">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph>가 중단됩니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.Close">
          <source>If <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.Close%2A&gt;</ph> is called on an <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> in the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closing&gt;</ph> or <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state, the call returns immediately.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.Close%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> 상태의 <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closing&gt;</ph>에서 <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph>를 호출하면 호출은 즉시 결과를 반환합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.Close">
          <source>There is also an asynchronous version of the close method that is initiated by calling <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.BeginClose%2A&gt;</ph> and completed by calling <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject.Close%2A&gt;</ph>.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.BeginClose%2A&gt;</ph>를 호출하면 시작되고 <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject.Close%2A&gt;</ph>를 호출하면 완료되는 비동기 버전의 close 메서드도 있습니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.Close">
          <source><ph id="ph1">&lt;see cref="M:System.ServiceModel.ICommunicationObject.Close" /&gt;</ph> was called on an object in the <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ServiceModel.ICommunicationObject.Close" /&gt;</ph> 상태인 개체에 대해 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph>를 호출한 경우</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.Close">
          <source>The default close timeout elapsed before the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ICommunicationObject" /&gt;</ph> was able to close gracefully.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ICommunicationObject" /&gt;</ph>를 닫을 수 있기 전에 기본 닫기 제한 시간이 경과된 경우</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the send operation has to complete before timing out.</source>
          <target state="translated">시간 제한이 초과되기 전에 보내기 작업이 완료되어야 하는 기간을 지정하는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
          <source>Causes a communication object to transition from its current state into the closed state.</source>
          <target state="translated">통신 개체가 현재 상태에서 Closed 상태로 전환되도록 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
          <source>This method causes an <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> to gracefully transition from the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state to the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state within a specified interval of time.</source>
          <target state="translated">이 메서드를 사용하면 지정된 시간 간격 내에서 <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph>가 <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> 상태에서 <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> 상태로 전환됩니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.Close%2A&gt;</ph> method allows any unfinished work to be completed before returning.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.Close%2A&gt;</ph> 메서드를 사용하면 반환하기 전에 끝내지 않은 작업을 완료할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
          <source>For example, finish sending any buffered messages).</source>
          <target state="translated">예를 들어 버퍼링된 메시지의 전송을 완료할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> enters the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closing&gt;</ph> state and remains in it until the transition to the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state is completed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph>는 <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closing&gt;</ph> 상태가 되고, <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> 상태로의 전환이 완료될 때까지 이 상태로 유지됩니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.Close%2A&gt;</ph> returns once the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state is reached.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.Close%2A&gt;</ph> 상태에 도달하면 <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph>가 반환됩니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
          <source>If the timeout elapses before the <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> is able to gracefully close, the <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> is aborted.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph>를 닫을 수 있기 전에 제한 시간이 경과된 경우 <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph>가 중단됩니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
          <source>If <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.Close%2A&gt;</ph> is called on an <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> in the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph>, <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph>, or <ph id="ph5">&lt;xref:System.ServiceModel.CommunicationState.Faulted&gt;</ph> state, the <ph id="ph6">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> is aborted.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.Close%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> 상태의 <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph>에서 <ph id="ph5">&lt;xref:System.ServiceModel.CommunicationState.Faulted&gt;</ph>를 호출하면 <ph id="ph6">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph>가 중단됩니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
          <source>If <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.Close%2A&gt;</ph> is called on an <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> in the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closing&gt;</ph> or <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state, the call returns immediately.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.Close%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> 상태의 <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closing&gt;</ph>에서 <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph>를 호출하면 호출은 즉시 결과를 반환합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
          <source>There is also an asynchronous version of the close method that is initiated by calling <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.BeginClose%2A&gt;</ph> and completed by calling <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject.Close%2A&gt;</ph>.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.BeginClose%2A&gt;</ph>를 호출하면 시작되고 <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject.Close%2A&gt;</ph>를 호출하면 완료되는 비동기 버전의 close 메서드도 있습니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
          <source><ph id="ph1">&lt;see cref="M:System.ServiceModel.ICommunicationObject.Close" /&gt;</ph> was called on an object in the <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ServiceModel.ICommunicationObject.Close" /&gt;</ph> 상태인 개체에 대해 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph>를 호출한 경우</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
          <source>The timeout elapsed before the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ICommunicationObject" /&gt;</ph> was able to close gracefully.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ICommunicationObject" /&gt;</ph>를 닫을 수 있기 전에 제한 시간이 경과된 경우</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
          <source>The operation must throw a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> if the specified <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> is exceeded.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph>을 초과한 경우 작업에서는 <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph>을 throw해야 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="E:System.ServiceModel.ICommunicationObject.Closed">
          <source>Occurs when the communication object completes its transition from the closing state into the closed state.</source>
          <target state="translated">통신 개체가 Closing 상태에서 Closed 상태로 전환을 완료할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="E:System.ServiceModel.ICommunicationObject.Closing">
          <source>Occurs when the communication object first enters the closing state.</source>
          <target state="translated">통신 개체가 처음 Closing 상태가 될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.ICommunicationObject.Closing">
          <source>This event occurs when the communication object first begins to transition from the <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state into the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state, immediately after either the <ph id="ph3">&lt;xref:System.ServiceModel.ICommunicationObject.Close%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.ServiceModel.ICommunicationObject.BeginClose%2A&gt;</ph> method is invoked.</source>
          <target state="translated">이 이벤트는 <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> 메서드를 호출한 직후에 통신 개체가 처음 <ph id="ph3">&lt;xref:System.ServiceModel.ICommunicationObject.Close%2A&gt;</ph> 상태에서 <ph id="ph4">&lt;xref:System.ServiceModel.ICommunicationObject.BeginClose%2A&gt;</ph> 상태로 전환하기 시작할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that is returned by a call to the <ph id="ph2">&lt;see cref="Overload:System.ServiceModel.ICommunicationObject.BeginClose" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 메서드를 호출할 때 반환되는 <ph id="ph2">&lt;see cref="Overload:System.ServiceModel.ICommunicationObject.BeginClose" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)">
          <source>Completes an asynchronous operation to close a communication object.</source>
          <target state="translated">통신 개체를 닫기 위한 비동기 작업을 완료합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)">
          <source><ph id="ph1">&lt;see cref="Overload:System.ServiceModel.ICommunicationObject.BeginClose" /&gt;</ph> was called on an object in the <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.ServiceModel.ICommunicationObject.BeginClose" /&gt;</ph> 상태인 개체에 대해 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph>를 호출한 경우</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)">
          <source>The timeout elapsed before the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ICommunicationObject" /&gt;</ph> was able to close gracefully.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ICommunicationObject" /&gt;</ph>를 닫을 수 있기 전에 제한 시간이 경과된 경우</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that is returned by a call to the <ph id="ph2">&lt;see cref="Overload:System.ServiceModel.ICommunicationObject.BeginOpen" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 메서드를 호출할 때 반환되는 <ph id="ph2">&lt;see cref="Overload:System.ServiceModel.ICommunicationObject.BeginOpen" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)">
          <source>Completes an asynchronous operation to open a communication object.</source>
          <target state="translated">통신 개체를 열기 위한 비동기 작업을 완료합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.ICommunicationObject" /&gt;</ph> was unable to be opened and has entered the <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ICommunicationObject" /&gt;</ph>를 열 수 없어 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 상태가 된 경우</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)">
          <source>The timeout elapsed before the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ICommunicationObject" /&gt;</ph> was able to enter the <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> state and has entered the <ph id="ph3">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ICommunicationObject" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 상태가 될 수 있고 <ph id="ph3">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 상태가 되기 전에 제한 시간이 경과된 경우</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="E:System.ServiceModel.ICommunicationObject.Faulted">
          <source>Occurs when the communication object first enters the faulted state.</source>
          <target state="translated">통신 개체가 처음 Faulted 상태가 될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ICommunicationObject">
          <source>Causes a communication object to transition from the created state into the opened state.</source>
          <target state="translated">통신 개체가 Created 상태에서 Opened 상태로 전환되도록 합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ICommunicationObject">
          <source>Versions with and without an explicit timeout are provided.</source>
          <target state="translated">명시적 시간 제한이 있는 버전과 없는 버전이 제공됩니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.Open">
          <source>Causes a communication object to transition from the created state into the opened state.</source>
          <target state="translated">통신 개체가 Created 상태에서 Opened 상태로 전환되도록 합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.Open">
          <source>When an <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> is instantiated, it begins in the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph>가 인스턴스화되면 <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> 상태에서 시작합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.Open">
          <source>In the <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, the object can be configured (for example, properties can be set, or events can be registered), but it is not yet usable to send or receive messages.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> 상태에서는 속성을 설정하거나 이벤트를 등록하는 등 개체를 구성할 수는 있지만 아직 메시지를 보내거나 받을 수는 없습니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.Open">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A&gt;</ph> method causes an <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> to enter into the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph> state where it remains until the open operation succeeds, the open operation times out or fails and the object becomes faulted, or the <ph id="ph4">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> is aborted.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A&gt;</ph> 메서드를 사용하면 <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph>는 <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph> 상태가 됩니다. 열기 작업이 성공하거나, 열기 작업의 실패 또는 시간 초과로 개체에 오류가 발생하거나, <ph id="ph4">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph>가 중단될 때까지 이 상태로 유지됩니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.Open">
          <source>In the <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state, the <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> is usable (for example, messages can be received), but it is no longer configurable.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> 상태에서는 메시지를 수신하는 등 <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph>를 사용할 수는 있지만 더 이상 구성할 수는 없습니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.Open">
          <source>There is also an asynchronous version of the open method that is initiated by calling <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A&gt;</ph> and completed by calling <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject.EndOpen%28System.IAsyncResult%29&gt;</ph>.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A&gt;</ph>을 호출하면 시작되고 <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject.EndOpen%28System.IAsyncResult%29&gt;</ph>을 호출하면 완료되는 비동기 버전의 open 메서드도 있습니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.Open">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.ICommunicationObject" /&gt;</ph> was unable to be opened and has entered the <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ICommunicationObject" /&gt;</ph>를 열 수 없어 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 상태가 된 경우</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.Open">
          <source>The default open timeout elapsed before the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ICommunicationObject" /&gt;</ph> was able to enter the <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> state and has entered the <ph id="ph3">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ICommunicationObject" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 상태가 될 수 있고 <ph id="ph3">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 상태가 되기 전에 기본 열기 제한 시간이 경과된 경우</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the send operation has to complete before timing out.</source>
          <target state="translated">시간 제한이 초과되기 전에 보내기 작업이 완료되어야 하는 기간을 지정하는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)">
          <source>Causes a communication object to transition from the created state into the opened state within a specified interval of time.</source>
          <target state="translated">통신 개체가 지정된 시간 간격 내에 Created 상태에서 Opened 상태로 전환되도록 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)">
          <source>When an <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> is instantiated, it begins in the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph>가 인스턴스화되면 <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> 상태에서 시작합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)">
          <source>In the <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, the object can be configured (for example, properties can be set, or events can be registered), but it is not yet usable to send or receive messages.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> 상태에서는 속성을 설정하거나 이벤트를 등록하는 등 개체를 구성할 수는 있지만 아직 메시지를 보내거나 받을 수는 없습니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A&gt;</ph> method causes an <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> to enter into the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph> state where it remains until the open operation succeeds, the open operation times out or fails and the object becomes faulted, or the <ph id="ph4">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> is aborted.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A&gt;</ph> 메서드를 사용하면 <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph>는 <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph> 상태가 됩니다. 열기 작업이 성공하거나, 열기 작업의 실패 또는 시간 초과로 개체에 오류가 발생하거나, <ph id="ph4">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph>가 중단될 때까지 이 상태로 유지됩니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)">
          <source>In the <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state, the <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> is usable (for example, messages can be received), but it is no longer configurable.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> 상태에서는 메시지를 수신하는 등 <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph>를 사용할 수는 있지만 더 이상 구성할 수는 없습니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)">
          <source>There is also an asynchronous version of the open method that is initiated by calling <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A&gt;</ph> and completed by calling <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject.EndOpen%28System.IAsyncResult%29&gt;</ph>.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A&gt;</ph>을 호출하면 시작되고 <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject.EndOpen%28System.IAsyncResult%29&gt;</ph>을 호출하면 완료되는 비동기 버전의 open 메서드도 있습니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.ICommunicationObject" /&gt;</ph> was unable to be opened and has entered the <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ICommunicationObject" /&gt;</ph>를 열 수 없어 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 상태가 된 경우</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)">
          <source>The specified timeout elapsed before the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ICommunicationObject" /&gt;</ph> was able to enter the <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> state and has entered the <ph id="ph3">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ICommunicationObject" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 상태가 될 수 있고 <ph id="ph3">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 상태가 되기 전에 지정된 제한 시간이 경과된 경우</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)">
          <source>The operation must throw a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> if the specified <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> is exceeded.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph>을 초과한 경우 작업에서는 <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph>을 throw해야 합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="E:System.ServiceModel.ICommunicationObject.Opened">
          <source>Occurs when the communication object completes its transition from the opening state into the opened state.</source>
          <target state="translated">통신 개체가 Opening 상태에서 Opened 상태로 전환을 완료할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="E:System.ServiceModel.ICommunicationObject.Opening">
          <source>Occurs when the communication object first enters the opening state.</source>
          <target state="translated">통신 개체가 처음 Opening 상태가 될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.ICommunicationObject.Opening">
          <source>This event occurs when the communication object first begins to transition from the <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state into the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state, immediately after either the <ph id="ph3">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A&gt;</ph> method is invoked.</source>
          <target state="translated">이 이벤트는 <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> 메서드를 호출한 직후에 통신 개체가 처음 <ph id="ph3">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A&gt;</ph> 상태에서 <ph id="ph4">&lt;xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A&gt;</ph> 상태로 전환하기 시작할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ICommunicationObject.State">
          <source>Gets the current state of the communication-oriented object.</source>
          <target state="translated">통신 지향 개체의 현재 상태를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ICommunicationObject.State">
          <source>The value of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.CommunicationState" /&gt;</ph> of the object.</source>
          <target state="translated">개체의 <ph id="ph1">&lt;see cref="T:System.ServiceModel.CommunicationState" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ICommunicationObject.State">
          <source>The main communication states available to an <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> are:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph>에 사용할 수 있는 기본 통신 상태는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ICommunicationObject.State">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph></target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ICommunicationObject.State">
          <source>There are also transitory states that such an object can occupy when transitioning between the first three main states:</source>
          <target state="translated">또한 처음 세 개의 기본 상태 간에 전환할 때 이러한 개체에서 차지할 수 있는 일시적인 상태도 있습니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ICommunicationObject.State">
          <source>This <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState&gt;</ph> defines the states that are valid for all communication-oriented objects in the system, including channels, listeners, the channel and listener factories, and the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> class.</source>
          <target state="translated">이 <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState&gt;</ph>에서는 시스템에서 채널, 수신기, 채널 팩터리, 수신기 팩터리 및 <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> 클래스 등 모든 통신 지향 개체에 대해 유효한 상태를 정의합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>