<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="OperationContractAttribute.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57c1f28fb8a14f8b80f71fd5be9ea08dd61b7ec57.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c1f28fb8a14f8b80f71fd5be9ea08dd61b7ec57</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>Indicates that a method defines an operation that is part of a service contract in a Windows Communication Foundation (WCF) application.</source>
          <target state="translated">메서드가 WCF(Windows Communication Foundation) 응용 프로그램에서 서비스 계약의 일부인 작업을 정의함을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>Apply the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> to a method to indicate that the method implements a service operation as part of a service contract (specified by a <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> attribute).</source>
          <target state="translated">메서드에서 서비스 작업을 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> 특성에서 지정한 서비스 계약의 일부로 구현함을 나타내려면 메서드에 <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph>를 적용합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> properties to control the structure of the operation and the values expressed in metadata:</source>
          <target state="translated">작업의 구조 및 메타데이터로 표현된 값을 제어하려면 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> property specifies the action that uniquely identifies this operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> 속성은 이 작업을 고유하게 식별하는 동작을 지정합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source><ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> dispatches request messages to methods based on their action.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph>에서는 해당 동작에 따라 요청 메시지를 메서드에 디스패치합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph> property indicates that the operation is implemented or can be called asynchronously using a Begin/End method pair.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph> 속성은 작업이 구현되어 있거나 Begin/End 메서드 쌍을 사용하여 비동기적으로 호출될 수 있음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.HasProtectionLevel%2A&gt;</ph> property indicates whether the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A&gt;</ph> property has been explicitly set.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.HasProtectionLevel%2A&gt;</ph> 속성은 <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A&gt;</ph> 속성이 명시적으로 설정되어 있는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> property indicates that the operation only consists of a single input message.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> 속성은 작업이 단일 입력 메시지로만 구성되어 있음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The operation has no associated output message.</source>
          <target state="translated">작업에 관련된 출력 메시지가 없습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> property specifies whether this operation can be the initial operation in a session.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> 속성은 이 작업이 세션의 초기 작업이 될 수 있는지 여부를 지정합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A&gt;</ph> property specifies whether <ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> attempts to terminate the current session after the operation completes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A&gt;</ph> 속성은 작업이 끝난 후에 <ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph>에서 현재 세션을 종료하도록 시도할지 여부를 지정합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A&gt;</ph> property specifies the message-level security that an operation requires at run time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A&gt;</ph> 속성은 런타임에 작업에 필요한 메시지 수준 보안을 지정합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A&gt;</ph> property specifies the action of the reply message for the operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A&gt;</ph> 속성은 작업에 대한 회신 메시지의 동작을 지정합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> attribute declares that a method is an operation in a service contract.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> 특성은 메서드가 서비스 계약의 작업임을 선언합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>Only methods attributed with the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> are exposed as service operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph>로 특성이 지정된 메서드만 서비스 작업으로 노출됩니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>A service contract without any methods marked with the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> exposes no operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph>로 표시된 메서드가 없는 서비스 계약은 작업을 노출하지 않습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph> property indicates that a pair of <ph id="ph2">`Begin`</ph><ph id="ph3">\&lt;</ph><bpt id="p1">*</bpt>methodName<ept id="p1">*</ept>&gt; and <ph id="ph4">`End`</ph><ph id="ph5">\&lt;</ph><bpt id="p2">*</bpt>methodName<ept id="p2">*</ept>&gt; methods form a single operation implemented asynchronously (whether on the client or the service).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph> 속성 나타냅니다 한 쌍의 <ph id="ph2">`Begin`</ph> <ph id="ph3">\&lt;</ph> <bpt id="p1">*</bpt>methodName<ept id="p1">*</ept>&gt; 및 <ph id="ph4">`End`</ph> <ph id="ph5">\&lt;</ph> <bpt id="p2">*</bpt>methodName<ept id="p2">*</ept>&gt; 메서드는 단일을 형성 합니다. 작업을 비동기적으로 구현 (클라이언트 또는 서비스에서 여부).</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The ability of a service to implement operations asynchronously is a service implementation detail and is not exposed in metadata (such as Web Services Description Language (WSDL)).</source>
          <target state="translated">작업을 비동기적으로 구현하는 서비스의 기능은 서비스 구현 정보이며 WSDL(웹 서비스 기술 언어)과 같은 메타데이터로 노출되지 않습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>Similarly, clients can choose to invoke operations asynchronously independent of how the service method is implemented.</source>
          <target state="translated">마찬가지로 클라이언트에서 서비스 메서드 구현 방법과 상관없이 작업을 비동기적으로 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>Calling service operations asynchronously in the client is recommended when a service method takes some time but must return information directly to the client.</source>
          <target state="translated">서비스 메서드를 구현하는 데 약간 시간이 걸리지만 클라이언트로 직접 정보를 반환해야 하는 경우 클라이언트에서 서비스 작업을 비동기적으로 호출하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>For details, see <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph>.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> property indicates that a method does not return any value at all, including an empty underlying response message.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> 속성은 메서드에서 빈 기본 응답 메시지를 비롯하여 어떠한 값도 반환하지 않음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>This type of method is useful for notifications or event-style communication.</source>
          <target state="translated">이 형식의 메서드는 알림 또는 이벤트 스타일 통신에 유용합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>Methods of this kind cannot return a reply message so the method's declaration must return <ph id="ph1">`void`</ph>.</source>
          <target state="translated">이러한 종류의 메서드는 회신 메시지를 반환할 수 없으므로 메서드의 선언에서 <ph id="ph1">`void`</ph>를 반환해야 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>When programmatically retrieving the information store in this attribute, use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription&gt;</ph> class instead of reflection.</source>
          <target state="translated">이 특성에 대 한 정보 저장소를 프로그래밍 방식으로 검색할 때 사용 하 여는 <ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription&gt;</ph> 리플렉션 대신 클래스입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>If the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, (the default), even methods that return <ph id="ph3">`void`</ph> are two-way methods at the underlying message level.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> 속성을 <ph id="ph2">`false`</ph>(기본값)로 설정하는 경우 <ph id="ph3">`void`</ph>를 반환하는 메서드도 기본 메시지 수준의 양방향 메서드가 됩니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>In this case, the infrastructure creates and sends an empty message to indicate to the caller that the method has returned.</source>
          <target state="translated">이 경우 인프라에서 빈 메시지를 만들어 보내 메서드가 반환되었음을 호출자에게 나타냅니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>Using this approach enables the application and the infrastructure to send error information (such as a SOAP fault) back to the client.</source>
          <target state="translated">이 방법을 사용하면 응용 프로그램 및 인프라에서 SOAP 오류와 같은 오류 정보를 다시 클라이언트로 보낼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>Setting <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> to <ph id="ph2">`true`</ph> is the only way to prevent the creation and dispatch of a reply message.</source>
          <target state="translated">회신 메시지를 만들어 디스패치하지 않도록 하려면 유일한 방법은 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph>를 <ph id="ph2">`true`</ph>로 설정하는 것입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>For more information, see <bpt id="p1">[</bpt>One-Way Services<ept id="p1">](~/docs/framework/wcf/feature-details/one-way-services.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>단방향 서비스<ept id="p1">](~/docs/framework/wcf/feature-details/one-way-services.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A&gt;</ph> properties can be used not only to modify the default action of SOAP messages but also to create handlers for unrecognized messages or to disable adding actions for direct message programming.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A&gt;</ph> 속성을 사용하여 SOAP 메시지의 기본 동작을 수정할 수 있을 뿐만 아니라 직접 메시지 프로그래밍을 위해 동작을 추가할 수 없도록 하거나 인식할 수 없는 메시지의 처리기를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> property to prevent clients from calling a particular service operation prior to other operations.</source>
          <target state="translated">클라이언트가 다른 작업 이전에 특정 서비스 작업을 호출할 수 없도록 하려면 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A&gt;</ph> property to have <ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> close the channel after clients call a particular service operation.</source>
          <target state="translated">클라이언트가 특정 서비스 작업을 호출한 후 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A&gt;</ph>에서 채널을 닫도록 하려면 <ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>For more information, see <bpt id="p1">[</bpt>Using Sessions<ept id="p1">](~/docs/framework/wcf/using-sessions.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>를 사용 하 여 세션<ept id="p1">](~/docs/framework/wcf/using-sessions.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A&gt;</ph> property enables you to specify on the operation contract whether the operation messages are signed, encrypted, or signed and encrypted.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A&gt;</ph> 속성을 사용하면 작업 계약에서 작업 메시지에 대해 서명, 암호화 또는 둘 모두를 수행할지 여부를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>If a binding cannot provide the security level required by the contract, an exception is thrown at run time.</source>
          <target state="translated">바인딩이 계약에 필요한 보안 수준을 제공할 수 없는 경우 런타임에 예외가 throw됩니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>For more information, see <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A&gt;</ph> and <bpt id="p1">[</bpt>Understanding Protection Level<ept id="p1">](~/docs/framework/wcf/understanding-protection-level.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A&gt;</ph> 및 <bpt id="p1">[</bpt>보호 수준 이해<ept id="p1">](~/docs/framework/wcf/understanding-protection-level.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The following code example shows a simple service contract with one operation.</source>
          <target state="translated">다음 코드 예제에서는 하나의 작업이 있는 간단한 서비스 계약을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The following example is a service that implements an implicit service contract that specifies three operations.</source>
          <target state="translated">다음은 세 가지 작업을 지정하는 암시적 서비스 계약을 구현하는 서비스에 대한 예제입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>Two of the operations are two-way operations, which return underlying response messages to the caller no matter what the return value is.</source>
          <target state="translated">두 작업은 반환 값에 관계없이 기본 응답 메시지를 호출자에게 반환하는 양방향 작업입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The third operation receives a call, an underlying inbound message, but returns no underlying response message.</source>
          <target state="translated">세 번째 작업은 호출, 기본 인바운드 메시지를 수신하지만 기본 응답 메시지를 반환하지는 않습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContractAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContractAttribute" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContractAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>Gets or sets the WS-Addressing action of the request message.</source>
          <target state="translated">요청 메시지의 WS-Addressing 동작을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>The action to use in generating the WS-Addressing Action header.</source>
          <target state="translated">WS-Addressing 동작 헤더를 생성하는 데 사용할 동작입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> property to control the action of the method's input message.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> 메서드의 동작을 제어 하려면 속성의 메시지를 입력 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>Because <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> uses this action to dispatch an incoming message to the appropriate method, messages used within a contract operation must have unique actions.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph>에서는 이 동작을 사용하여 들어오는 메시지를 해당 메서드에 디스패치하므로 계약 작업 내에서 사용되는 메시지에 고유한 동작이 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>The default action value is a combination of the contract namespace (the default value is "<ph id="ph1">http://tempuri.org/</ph>"), the contract name (interface name or the class name, if no explicit service interface is used), the operation name, and an additional string ("Response") if the message is a correlated response.</source>
          <target state="translated">기본 동작 값은 계약 네임 스페이스의 조합 (기본값은 "<ph id="ph1">http://tempuri.org/</ph>"), 계약 이름 (인터페이스 이름 또는 클래스 이름에 명시적 서비스 인터페이스가 사용 되는 경우), 작업 이름 및 추가 문자열 ("Response") 하는 경우 메시지에 상호 관련 된 응답입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>You can override this default with the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> property.</source>
          <target state="translated">이 기본값을 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> 속성으로 덮어쓸 수 있습니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>To indicate that a service operation handles all messages that the service receives but cannot be directed to a service operation, specify the value "*" (an asterisk).</source>
          <target state="translated">서비스 작업이 해당 서비스에서 받은 모든 메시지를 처리하지만 서비스 작업으로 보낼 수 없음을 나타내려면 "*"(별표) 값을 지정합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>This type of operation, called an unmatched message handler, must have one of following method signatures, or a <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown:</source>
          <target state="translated">일치하지 않는 메시지 처리기라고 하는 이 작업 형식에는 다음 메서드 서명 중 하나가 있어야 합니다. 그렇지 않으면 <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>The service operation can take only a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> object and return a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> object.</source>
          <target state="translated">서비스 작업은 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> 개체만 가져오고 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> 개체를 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>The service operation can take only a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> object and return nothing (that is, return <ph id="ph2">`void`</ph>).</source>
          <target state="translated">서비스 작업은 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> 개체만 가져오고 아무 것도 반환할 수 없습니다. 즉 <ph id="ph2">`void`</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>A service contract can have only one service operation with the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> property set to "*".</source>
          <target state="translated">서비스 계약에는 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> 속성이 "*"로 설정된 서비스 작업만 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>Any group of service contracts hosted at the same listenUri that a service class implements can have many service operations with the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> property set to "<ph id="ph2">\*</ph>" when the <ph id="ph3">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> property is set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">서비스 클래스가 구현 하는 동일한 listenUri에서 호스팅되는 서비스 계약 그룹에 있는 여러 개의 서비스 작업이 있을 수 있습니다는 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> 속성이로 설정 "<ph id="ph2">\*</ph>" 때는 <ph id="ph3">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> 속성이 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>However, only one of those service operations can have the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> property set to "<ph id="ph2">\*</ph>" and the <ph id="ph3">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> property set to true.</source>
          <target state="translated">그러나 해당 서비스 작업 중 하나만 있을 수는 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> 속성이로 설정 "<ph id="ph2">\*</ph>" 및 <ph id="ph3">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> 속성이 true로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>For more details, see <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph>.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph>을 참조하십시오.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>The following example is a service that uses the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A&gt;</ph> properties to explicitly control the SOAP actions of both the input and output (or reply) messages, and the <ph id="ph3">&lt;xref:System.ServiceModel.OperationContractAttribute.Name%2A&gt;</ph> property to control the name of the operation in metadata.</source>
          <target state="translated">다음은 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A&gt;</ph> 속성을 사용하여 입력 메시지 및 출력(또는 회신) 메시지 모두의 SOAP 동작을 명시적으로 제어하고 <ph id="ph3">&lt;xref:System.ServiceModel.OperationContractAttribute.Name%2A&gt;</ph> 속성을 사용하여 메타데이터로 작업 이름을 제어하는 서비스에 대한 예제입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>Finally, the application also uses an <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> value of "*" to indicate a method that handles unrecognized messages.</source>
          <target state="translated">또한 응용 프로그램에서는 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> 값으로 "*"를 사용하여 인식할 수 없는 메시지를 처리하는 메서드를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>A service that implements this contract sends messages that look like the following example:</source>
          <target state="translated">이 계약을 구현하는 서비스는 다음 예제와 비슷한 메시지를 보냅니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>The value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">값이 <ph id="ph1">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>Indicates that an operation is implemented asynchronously using a <ph id="ph1">&lt;see langword="Begin" /&gt;</ph><ph id="ph2">&amp;lt;</ph><bpt id="p1">*</bpt>methodName<ept id="p1">*</ept><ph id="ph3">&amp;gt;</ph> and <ph id="ph4">&lt;see langword="End" /&gt;</ph><ph id="ph5">&amp;lt;</ph><bpt id="p2">*</bpt>methodName<ept id="p2">*</ept><ph id="ph6">&amp;gt;</ph> method pair in a service contract.</source>
          <target state="translated">서비스 계약의 <ph id="ph1">&lt;see langword="Begin" /&gt;</ph><ph id="ph2">&amp;lt;</ph><bpt id="p1">*</bpt>methodName<ept id="p1">*</ept><ph id="ph3">&amp;gt;</ph> 및 <ph id="ph4">&lt;see langword="End" /&gt;</ph><ph id="ph5">&amp;lt;</ph><bpt id="p2">*</bpt>methodName<ept id="p2">*</ept><ph id="ph6">&amp;gt;</ph> 메서드 쌍을 사용하여 작업이 비동기적으로 구현됨을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see langword="Begin" /&gt;</ph><ph id="ph3">&amp;lt;</ph><bpt id="p1">*</bpt>methodName<ept id="p1">*</ept><ph id="ph4">&amp;gt;</ph>method is matched by an <ph id="ph5">&lt;see langword="End" /&gt;</ph><ph id="ph6">&amp;lt;</ph><bpt id="p2">*</bpt>methodName<ept id="p2">*</ept><ph id="ph7">&amp;gt;</ph> method and can be treated by the infrastructure as an operation that is implemented as an asynchronous method pair on the service interface; otherwise, <ph id="ph8">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 경우는 <ph id="ph2">&lt;see langword="Begin" /&gt;</ph> <ph id="ph3">&amp;lt;</ph> <bpt id="p1">*</bpt>methodName<ept id="p1">*</ept><ph id="ph4">&amp;gt;</ph>메서드는 일치 하는 <ph id="ph5">&lt;see langword="End" /&gt;</ph> <ph id="ph6">&amp;lt;</ph> <bpt id="p2">*</bpt>methodName<ept id="p2">*</ept> <ph id="ph7">&amp;gt;</ph> 메서드 및에서 처리 될 수는 인프라는 서비스 인터페이스에 비동기 메서드 쌍으로 구현 되는 작업으로 그렇지 않으면 <ph id="ph8">&lt;see langword="false" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph> property to build service operations that can be called asynchronously on the server, the client, or both.</source>
          <target state="translated">서버, 클라이언트 또는 둘 모두에서 비동기적으로 호출할 수 있는 서비스 작업을 작성하려면 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph> property informs the runtime that a <ph id="ph2">`Begin`</ph> method has a matched <ph id="ph3">`End`</ph> method that conforms to the .NET Framework asynchronous method design pattern.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph> 속성은 <ph id="ph2">`Begin`</ph> 메서드에 .NET Framework 비동기 메서드 디자인 패턴과 일치하는 <ph id="ph3">`End`</ph> 메서드가 있음을 런타임에 알립니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>Building server asynchronous methods that implement a service operation increases server scalability and performance without affecting the clients of the service, and is recommended when a service operation must return something to the client after performing a lengthy operation that can be performed asynchronously.</source>
          <target state="translated">서비스 작업을 구현하는 서버 비동기 메서드를 작성하면 서비스의 클라이언트에는 영향을 주지 않고 서버 확장성 및 성능이 향상됩니다. 이 방식은 비동기로 수행할 수 있는 긴 작업을 수행한 후 서비스 작업에서 클라이언트에 결과를 반환해야 하는 경우에 권장됩니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>Clients remain unaffected because the asynchronous method pair on the server is an implementation detail that does not affect the underlying Web Services Description Language (WSDL) description of the operation.</source>
          <target state="translated">서버의 비동기 메서드 쌍은 작업의 기본 WSDL(Web Services Description Language) 설명에 영향을 주지 않는 구현 정보이므로 클라이언트는 영향을 받지 않은 상태로 유지됩니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>Such methods appear to clients as a single operation with <ph id="ph1">`&lt;input&gt;`</ph> and correlated <ph id="ph2">`&lt;output&gt;`</ph> messages.</source>
          <target state="translated">이러한 메서드는 포함 된 단일 작업으로 클라이언트에 표시 <ph id="ph1">`&lt;input&gt;`</ph> 및 상관 관계가 지정 된 <ph id="ph2">`&lt;output&gt;`</ph> 메시지입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source><ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> automatically routes inbound messages to the <ph id="ph2">`Begin`</ph><ph id="ph3">\&lt;</ph><bpt id="p1">*</bpt>methodName<ept id="p1">*</ept>&gt; method and routes the results of the <ph id="ph4">`End`</ph><ph id="ph5">\&lt;</ph><bpt id="p2">*</bpt>methodName<ept id="p2">*</ept>&gt; call to the outbound message.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 인바운드 메시지를 자동으로 라우팅하는 <ph id="ph2">`Begin`</ph> <ph id="ph3">\&lt;</ph> <bpt id="p1">*</bpt>methodName<ept id="p1">*</ept>&gt; 메서드의 결과 라우팅합니다는 <ph id="ph4">`End`</ph> <ph id="ph5">\&lt;</ph> <bpt id="p2">*</bpt>methodName<ept id="p2">*</ept>&gt;에 대 한 호출 아웃 바운드 메시지입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>Client channels, therefore, can represent the method pair as either a single synchronous operation or as an asynchronous operation pair.</source>
          <target state="translated">그러므로 클라이언트 채널에서 메서드 쌍을 단일 비동기 작업이나 비동기 작업 쌍으로 나타낼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>In no case does the client representation affect the asynchronous implementation on the server in any way.</source>
          <target state="translated">어떠한 방식으로든 클라이언트 표시는 서버에서 비동기 구현에 영향을 주지 않습니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>Client contracts can use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph> property to indicate an asynchronous method pair that the client can use to invoke the operation asynchronously.</source>
          <target state="translated">클라이언트 계약은 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph> 속성을 사용하여 클라이언트에서 작업을 비동기적으로 호출하는 데 사용할 수 있는 비동기 메서드 쌍을 나타낼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>Typically, client applications use the <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> tool and the <ph id="ph1">`/async`</ph> option to generate a <ph id="ph2">`Begin`</ph><ph id="ph3">\&lt;</ph><bpt id="p2">*</bpt>methodName<ept id="p2">*</ept>&gt; and <ph id="ph4">`End`</ph><ph id="ph5">\&lt;</ph><bpt id="p3">*</bpt>methodName<ept id="p3">*</ept>&gt; method pair that the client can use to invoke the operation asynchronously.</source>
          <target state="translated">일반적으로 클라이언트 응용 프로그램 사용는 <bpt id="p1">[</bpt>ServiceModel Metadata 유틸리티 도구 (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> 도구 및 <ph id="ph1">`/async`</ph> 생성 하는 옵션을 <ph id="ph2">`Begin`</ph> <ph id="ph3">\&lt;</ph> <bpt id="p2">*</bpt>methodName<ept id="p2">*</ept>&gt; 및 <ph id="ph4">`End`</ph> <ph id="ph5">\&lt;</ph> <bpt id="p3">*</bpt>methodName<ept id="p3">*</ept>&gt; 클라이언트 작업을 비동기적으로 호출 하는 데 사용할 수 있는 메서드 쌍입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>If a service operation has both an asynchronous and a synchronous version, the default behavior on the service is to invoke the synchronous version.</source>
          <target state="translated">서비스 작업에 비동기 버전과 동기 버전이 모두 있는 경우 서비스의 기본 동작은 동기 버전을 호출하는 것입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>The following code example shows a client channel to a service contract that includes both a synchronous version of <ph id="ph1">`Add`</ph> and an asynchronous version.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">`Add`</ph>의 동기 버전과 비동기 버전이 모두 포함된 서비스 계약에 대한 클라이언트 채널을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>If the contract interface is used on the client, both the <ph id="ph1">`BeginAdd`</ph> and the <ph id="ph2">`Add`</ph> operation invoke a method on the server that may or may not be synchronous.</source>
          <target state="translated">클라이언트에서 계약 인터페이스를 사용하는 경우 <ph id="ph1">`BeginAdd`</ph> 작업과 <ph id="ph2">`Add`</ph> 작업 모두 동기적이거나 비동기적일 수 있는 서버에서 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>If the contract is used to implement the service, the default is that incoming requests are dispatched to the synchronous method.</source>
          <target state="translated">서비스를 구현하는 데 계약을 사용하는 경우 기본값은 동기 메서드로 디스패치되는 들어오는 요청입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.HasProtectionLevel">
          <source>Gets a value that indicates whether the messages for this operation must be encrypted, signed, or both.</source>
          <target state="translated">이 작업의 메시지에 대해 암호화, 서명 또는 둘 모두를 수행해야 할지 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.HasProtectionLevel">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel" /&gt;</ph> property is set to a value other than <ph id="ph3">&lt;see cref="F:System.Net.Security.ProtectionLevel.None" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 속성이 <ph id="ph2">&lt;see cref="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel" /&gt;</ph> 이외의 값으로 설정되면 <ph id="ph3">&lt;see cref="F:System.Net.Security.ProtectionLevel.None" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.HasProtectionLevel">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.HasProtectionLevel">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.HasProtectionLevel%2A&gt;</ph> property to determine whether a specific protection level is required by the messages of this operation.</source>
          <target state="translated">이 작업의 메시지에 특정 보호 수준이 필요한지 여부를 결정하려면 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.HasProtectionLevel%2A&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>Gets or sets a value that indicates whether the method implements an operation that can initiate a session on the server (if such a session exists).</source>
          <target state="translated">메서드가 서버의 세션(있는 경우)을 시작할 수 있는 작업을 구현할지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the operation is permitted to initiate a session on the server, otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">작업에서 서버의 세션을 시작할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> property controls whether an operation can be the first operation called when a session is created.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> 속성은 세션을 만들 때 작업이 첫 번째로 호출되는 작업이 될 수 있는지 여부를 제어합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>The value of <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=nameWithType&gt;</ph> must be either <ph id="ph2">&lt;xref:System.ServiceModel.SessionMode.Allowed&gt;</ph> or <ph id="ph3">&lt;xref:System.ServiceModel.SessionMode.Required&gt;</ph> and the binding used must require or allow sessions for the <ph id="ph4">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> property to work properly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=nameWithType&gt;</ph>의 값은 <ph id="ph2">&lt;xref:System.ServiceModel.SessionMode.Allowed&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.ServiceModel.SessionMode.Required&gt;</ph>여야 하고, <ph id="ph4">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> 속성이 제대로 작동하려면 사용되는 바인딩에서 세션을 요구하거나 허용해야 합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>The default is <ph id="ph1">`true`</ph>, which means that an operation can be the first one called on a channel.</source>
          <target state="translated">기본값은 <ph id="ph1">`true`</ph>로, 작업이 채널에서 첫 번째로 호출되는 작업이 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>Subsequent calls to the initiating method have no effect, other than to call the method.</source>
          <target state="translated">이후에는 시작 메서드를 호출해도 메서드를 호출하는 것 외에는 아무런 효과가 없으며,</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>No other sessions are created.</source>
          <target state="translated">다른 세션이 만들어지지 않습니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>If the contract does not make use of a session, setting <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> to <ph id="ph2">`false`</ph> is ignored.</source>
          <target state="translated">계약에서 세션을 사용하지 않는 경우 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph>을 <ph id="ph2">`false`</ph>로 설정하면 무시됩니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>Typically, you set <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> to <ph id="ph2">`false`</ph> to force clients to call another method on the service before they can invoke this one.</source>
          <target state="translated">일반적으로 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph>을 <ph id="ph2">`false`</ph>로 설정하여 클라이언트에서 이 메서드를 호출하기 전에 서비스의 다른 메서드를 호출하도록 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>For example, if your service has a series of operations that depend on an order ID number, you can set <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> to <ph id="ph2">`true`</ph> for a <ph id="ph3">`GetOrderId`</ph> service operation and set all remaining service operations to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">예를 들어 서비스에 주문 ID 번호에 종속되는 일련의 작업이 있는 경우 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> 서비스 작업에 대해 <ph id="ph2">`true`</ph>을 <ph id="ph3">`GetOrderId`</ph>로 설정하고 나머지 모든 서비스 작업을 <ph id="ph4">`false`</ph>로 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>This ensures that each new client obtains an order ID prior to using the other methods exposed by the service.</source>
          <target state="translated">이렇게 설정하면 각 새 클라이언트에서는 서비스가 노출하는 다른 메서드를 사용하기 전에 주문 ID를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>There is an interaction between <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> and the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph>과 <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> 속성 사이의 상호 작용이 있습니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>A service contract can have only one service operation with the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> property set to "*".</source>
          <target state="translated">서비스 계약에는 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> 속성이 "*"로 설정된 서비스 작업만 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>Any group of service contracts hosted at the same listen URI that a service class implements can have many service operations with the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> property set to "<ph id="ph2">\*</ph>" when the <ph id="ph3">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> property is set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">그룹을 같은 수신 대기 서비스 클래스가 구현 하는 URI에서 호스팅되는 서비스 계약으로 여러 개의 서비스 작업이 있을 수 있습니다는 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> 속성이로 설정 "<ph id="ph2">\*</ph>" 때는 <ph id="ph3">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> 속성이 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>However, only one of those service methods can have the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> property set to "<ph id="ph2">\*</ph>" and the <ph id="ph3">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> property set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">그러나 해당 서비스 메서드 중 하나만 있을 수는 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> 속성이로 설정 "<ph id="ph2">\*</ph>" 및 <ph id="ph3">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> 속성이로 설정 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>If a service receives a message for a non-initiating operation, the service returns an ActionNotSupported SOAP fault.</source>
          <target state="translated">서비스에서 초기화 작업이 아닌 작업에 대한 메시지를 수신하면 ActionNotSupported SOAP 오류를 반환합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>The client experiences this as an <ph id="ph1">&lt;xref:System.ServiceModel.FaultException&gt;</ph>.</source>
          <target state="translated">클라이언트에는 이 오류가 <ph id="ph1">&lt;xref:System.ServiceModel.FaultException&gt;</ph>으로 표시됩니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>If a client calls a non-initiating operation first, the client runtime throws an <ph id="ph1">&lt;xref:System.InvalidOperationException?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">클라이언트에서 초기화 작업이 아닌 작업을 먼저 호출하면 런타임에 <ph id="ph1">&lt;xref:System.InvalidOperationException?displayProperty=nameWithType&gt;</ph>을 throw합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>For more information, see <bpt id="p1">[</bpt>Using Sessions<ept id="p1">](~/docs/framework/wcf/using-sessions.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>를 사용 하 여 세션<ept id="p1">](~/docs/framework/wcf/using-sessions.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>The following example is a service that implements a service contract that specifies three methods.</source>
          <target state="translated">다음은 세 가지 메서드를 지정하는 서비스 계약을 구현하는 서비스에 대한 예제입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>The service requires a session.</source>
          <target state="translated">이 서비스에는 세션이 필요합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>If a caller's first call is to any operation other than <ph id="ph1">`MethodOne`</ph>, the channel is refused and an exception is thrown.</source>
          <target state="translated">호출자의 첫 번째 호출이 <ph id="ph1">`MethodOne`</ph> 이외의 작업에 대한 호출이면 채널이 거부되고 예외가 throw됩니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>When a caller initiates a session by calling <ph id="ph1">`MethodOne`</ph>, that caller can terminate the communication session at any time by calling <ph id="ph2">`MethodThree`</ph>.</source>
          <target state="translated">호출자가 <ph id="ph1">`MethodOne`</ph>을 호출하여 세션을 초기화하면 해당 호출자가 <ph id="ph2">`MethodThree`</ph>를 호출하여 언제든지 통신 세션을 종료할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source><ph id="ph1">`MethodTwo`</ph> can be called any number of times during a session.</source>
          <target state="translated"><ph id="ph1">`MethodTwo`</ph>는 세션 중에 여러 번 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>Gets or sets a value that indicates whether an operation returns a reply message.</source>
          <target state="translated">작업이 회신 메시지를 반환할지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this method receives a request message and returns no reply message; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 메서드가 요청 메시지를 수신하고 회신 메시지를 반환하지 않으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> property to indicate that an operation does not return a reply message.</source>
          <target state="translated">작업에서 회신 메시지를 반환하지 않음을 나타내려면 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>This type of operation is useful for notifications or event-style communication, especially in two-way communication.</source>
          <target state="translated">이 작업 형식은 알림 또는 이벤트 스타일 통신, 특히 양방향 통신에 유용합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>Without waiting for an underlying response message, callers of one-way operations have no direct way to detect a failure in processing the request message.</source>
          <target state="translated">단방향 작업의 호출자가 기본 응답 메시지를 기다리지 않고 요청 메시지 처리 오류를 직접 검색할 수 있는 방법은 없습니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>(Service applications that use reliable channels and one-way operations can detect a message delivery failure at the channel level.</source>
          <target state="translated">신뢰할 수 있는 채널을 사용하는 서비스 응용 프로그램 및 단방향 작업으로 채널 수준에서 메시지 배달 오류를 검색할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>For details, see <bpt id="p1">[</bpt>Reliable Sessions Overview<ept id="p1">](~/docs/framework/wcf/feature-details/reliable-sessions-overview.md)</ept>.)</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>신뢰할 수 있는 세션 개요<ept id="p1">](~/docs/framework/wcf/feature-details/reliable-sessions-overview.md)</ept>.)</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>In duplex (or two-way) service-oriented applications in which the client and server communicate with each other independently, a client channel can use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> property on its methods to indicate that the service can make one-way calls to the client that the client can treat as events.</source>
          <target state="translated">클라이언트와 서버가 서로 독립적으로 통신하는 이중(양방향) 서비스 기반 응용 프로그램에서 클라이언트 채널은 해당 메서드에 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> 속성을 사용하여 서비스에서 클라이언트에 대하여 클라이언트가 이벤트로 처리할 수 있는 단방향 호출을 클라이언트에 대해 만들 수 있음을 나타낼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>No return call or message is generated because the service does not expect any response message.</source>
          <target state="translated">서비스는 응답 메시지를 예상하지 않으므로 반환 호출이나 메시지가 생성되지 않습니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>If the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph> (the default), even methods that return <ph id="ph3">`void`</ph> result in a reply message.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> 속성을 <ph id="ph2">`false`</ph>(기본값)로 설정하는 경우 <ph id="ph3">`void`</ph>를 반환하는 메서드도 회신 메시지를 생성합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>In this case, the infrastructure creates and sends an empty message to indicate to the caller that the method has returned.</source>
          <target state="translated">이 경우 인프라에서 빈 메시지를 만들어 보내 메서드가 반환되었음을 호출자에게 나타냅니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>(Using this approach enables the infrastructure to send SOAP faults back to the client.) Setting <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> to <ph id="ph2">`true`</ph> is the only way to cancel the creation and dispatch of a response message.</source>
          <target state="translated">이 방법을 사용하면 인프라에서 SOAP 오류를 다시 클라이언트로 보낼 수 있습니다. 응답 메시지를 만들어 디스패치하는 작업을 취소하려면 유일한 방법은 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph>를 <ph id="ph2">`true`</ph>로 설정하는 것입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>One-way methods must not return a value or have <ph id="ph1">`ref`</ph> or <ph id="ph2">`out`</ph> parameters; otherwise a <ph id="ph3">&lt;xref:System.InvalidOperationException?displayProperty=nameWithType&gt;</ph> exception is thrown.</source>
          <target state="translated">단방향 메서드는 값을 반환하지 않아야 하거나 <ph id="ph1">`ref`</ph> 또는 <ph id="ph2">`out`</ph> 매개 변수가 있어야 합니다. 그렇지 않으면 <ph id="ph3">&lt;xref:System.InvalidOperationException?displayProperty=nameWithType&gt;</ph> 예외가 throw됩니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>Specifying that an operation is a one-way operation means only that there is no response message.</source>
          <target state="translated">작업을 단방향 작업이라고 지정하면 응답 메시지가 없다는 것만 의미합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>It is possible to block if a connection cannot be made, or the outbound message is very large, or if the service cannot read inbound information fast enough.</source>
          <target state="translated">연결할 수 없거나, 아웃바운드 메시지가 매우 크거나, 서비스에서 인바운드 정보를 충분히 빠르게 읽을 수 없는 경우에는 차단할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>If a client requires a non-blocking call, generate <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph> operations.</source>
          <target state="translated">클라이언트에서 비블로킹 호출을 요구하는 경우 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph> 작업을 생성합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>For more information, see <bpt id="p1">[</bpt>One-Way Services<ept id="p1">](~/docs/framework/wcf/feature-details/one-way-services.md)</ept> and <bpt id="p2">[</bpt>Accessing Services Using a WCF Client<ept id="p2">](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>단방향 서비스<ept id="p1">](~/docs/framework/wcf/feature-details/one-way-services.md)</ept> 및 <bpt id="p2">[</bpt>WCF 클라이언트를 사용 하 여 액세스 서비스<ept id="p2">](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>The following example is a service that implements a service contract that specifies three operations.</source>
          <target state="translated">다음은 세 가지 작업을 지정하는 서비스 계약을 구현하는 서비스에 대한 예제입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>Two of the methods implement two-way operations, which return underlying response messages to the caller no matter what the return value is.</source>
          <target state="translated">두 메서드는 반환 값에 관계없이 기본 응답 메시지를 호출자에게 반환하는 양방향 작업을 구현합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>The third method implements an operation that receives a call (an underlying inbound message) but returns no underlying response message.</source>
          <target state="translated">세 번째 메서드는 호출(기본 인바운드 메시지)을 수신하지만 기본 응답 메시지를 반환하지는 않는 작업을 구현합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source>Gets or sets a value that indicates whether the service operation causes the server to close the session after the reply message, if any, is sent.</source>
          <target state="translated">회신 메시지(있는 경우)를 보낸 후 서비스 작업의 결과로 서버에서 세션을 종료할지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the operation causes the server to close the session, otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">작업의 결과로 서버에서 세션을 종료하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A&gt;</ph> property to indicate that calling a service operation terminates the communication session.</source>
          <target state="translated">서비스 작업을 호출하면 통신 세션이 종료됨을 나타내려면 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source>In a client application, a value of <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A&gt;</ph> set to <ph id="ph2">`true`</ph> instructs <ph id="ph3">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> to close the channel after the reply arrives.</source>
          <target state="translated">클라이언트 응용 프로그램에서는 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A&gt;</ph> 값을 <ph id="ph2">`true`</ph>로 설정하면 회신이 도착한 후 <ph id="ph3">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph>에서 채널을 닫도록 지시합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source>In a service, a timer is set and the channel aborts if the client does not close the channel within that period.</source>
          <target state="translated">서비스에서는 클라이언트가 해당 기간 내에 채널을 닫지 않으면 타이머가 설정되고 채널이 중단됩니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source>For more information about using this property with sessions, see <bpt id="p1">[</bpt>Using Sessions<ept id="p1">](~/docs/framework/wcf/using-sessions.md)</ept>.</source>
          <target state="translated">이 속성을 사용 하 여 세션에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>를 사용 하 여 세션<ept id="p1">](~/docs/framework/wcf/using-sessions.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source>If a caller is listening for the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted?displayProperty=nameWithType&gt;</ph> event for an <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A?displayProperty=nameWithType&gt;</ph> operation, it is possible to block when the response is received.</source>
          <target state="translated">호출자가 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted?displayProperty=nameWithType&gt;</ph> 작업에 대한 <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A?displayProperty=nameWithType&gt;</ph> 이벤트를 수신 대기하고 있는 경우 응답을 수신할 때 차단할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source>The proper way to handle this is to schedule work on another thread when <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted&gt;</ph> is raised and then immediately return from that event handler.</source>
          <target state="translated">이 차단 작업을 처리하는 올바른 방법은 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted&gt;</ph>가 발생하면 다른 스레드에서 작업을 예약한 다음 해당 이벤트 처리기에서 이 이벤트를 즉시 반환하는 것입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source>The following example is a service that implements a service contract that specifies three operations.</source>
          <target state="translated">다음은 세 가지 작업을 지정하는 서비스 계약을 구현하는 서비스에 대한 예제입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source>The service requires a stateful connection.</source>
          <target state="translated">이 서비스에는 상태 저장 연결이 필요합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source>If a caller's first call is to any operation other than <ph id="ph1">`MethodOne`</ph>, the channel is refused and an exception is thrown.</source>
          <target state="translated">호출자의 첫 번째 호출이 <ph id="ph1">`MethodOne`</ph> 이외의 작업에 대한 호출이면 채널이 거부되고 예외가 throw됩니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source>When a caller initiates a session by calling <ph id="ph1">`MethodOne`</ph>, that caller can terminate the communication session at any time by calling <ph id="ph2">`MethodThree`</ph>.</source>
          <target state="translated">호출자가 <ph id="ph1">`MethodOne`</ph>을 호출하여 세션을 초기화하면 해당 호출자가 <ph id="ph2">`MethodThree`</ph>를 호출하여 언제든지 통신 세션을 종료할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source><ph id="ph1">`MethodTwo`</ph> can be called any number of times during a session.</source>
          <target state="translated"><ph id="ph1">`MethodTwo`</ph>는 세션 중에 여러 번 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.Name">
          <source>Gets or sets the name of the operation.</source>
          <target state="translated">작업의 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Name">
          <source>The name of the operation.</source>
          <target state="translated">작업의 이름입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Name">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Name%2A&gt;</ph> property to override the &lt;<ph id="ph2">`operation`</ph>&gt; element name in WSDL.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Name%2A&gt;</ph> 속성을 재정의 하는 &lt;<ph id="ph2">`operation`</ph>&gt; WSDL에서 요소 이름입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Name">
          <source>The default operation name is the name of the implementing method.</source>
          <target state="translated">기본 작업 이름은 구현 메서드의 이름입니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Name">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Name%2A&gt;</ph> property to declare the name of the operation as exposed in metadata.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Name%2A&gt;</ph> 속성을 사용하여 메타데이터로 노출되는 작업 이름을 선언합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.Name">
          <source><ph id="ph1">&lt;see cref="P:System.ServiceModel.OperationContractAttribute.Name" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ServiceModel.OperationContractAttribute.Name" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.Name">
          <source>The value is an empty string.</source>
          <target state="translated">값이 빈 문자열인 경우</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>Gets or sets a value that specifies whether the messages of an operation must be encrypted, signed, or both.</source>
          <target state="translated">작업의 메시지에 대해 암호화, 서명 또는 둘 모두를 수행해야 할지 지정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Net.Security.ProtectionLevel.None" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Net.Security.ProtectionLevel.None" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A&gt;</ph> property to control whether the messages of an operation must be encrypted, signed, or both.</source>
          <target state="translated">작업의 메시지에 대해 암호화, 서명 또는 둘 모두를 수행해야 할지 제어하려면 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>The value set here is the default value for all messages specified for this operation unless a narrower scope overrides this value.</source>
          <target state="translated">이 값이 더 좁은 범위로 재정의되지 않는 한 여기서 설정한 값은 이 작업에 지정된 모든 메시지의 기본값입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>It is important to remember that the protection behavior at runtime is the combination of the protection-level values set on the following properties.</source>
          <target state="translated">런타임의 보호 동작은 다음 속성에서 설정한 보호 수준 값의 조합입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>These properties have a hierarchical structure.</source>
          <target state="translated">이러한 속성은 계층 구조로 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>Setting the outermost value establishes the default setting for all narrower scopes unless a different value for a narrower scope is explicitly set.</source>
          <target state="translated">가장 바깥쪽 값을 설정하면 더 좁은 범위에 명시적으로 다른 값을 설정하지 않는 한 모든 더 좁은 범위에 이 값이 기본 설정으로 지정됩니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>In this case, the outer value remains the default for all narrower scopes with the exception of that specifically set.</source>
          <target state="translated">이 경우 특별히 설정된 범위를 제외하고 바깥쪽 값은 모든 더 좁은 범위의 기본값으로 유지됩니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>For example, if <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed.</source>
          <target state="translated">예를 들어 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph>을 <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph>으로 설정한 경우 더 좁은 다른 범위에는 보호 수준 설정이 없다면 작업 계약의 모든 메시지에 대해 암호화 및 서명이 수행됩니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>If, however, one of those operations has the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A&gt;</ph> set to <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType&gt;</ph>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed.</source>
          <target state="translated">이러한 작업 중 하나에 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A&gt;</ph>으로 설정된 <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType&gt;</ph>이 있으면 해당 작업의 메시지에 대해서는 서명이 수행되지만, 계약의 다른 모든 메시지의 경우 암호화 및 서명이 수행됩니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>For details about protection levels and their assumptions and scopes, see <bpt id="p1">[</bpt>Understanding Protection Level<ept id="p1">](~/docs/framework/wcf/understanding-protection-level.md)</ept>.</source>
          <target state="translated">보호 수준의 가정 및 범위에 대 한 세부 정보를 참조 하십시오. <bpt id="p1">[</bpt>보호 수준 이해<ept id="p1">](~/docs/framework/wcf/understanding-protection-level.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>The scopes at which these values are set are:</source>
          <target state="translated">이러한 값이 설정된 범위는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> property on <ph id="ph2">&lt;xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph>의 <ph id="ph2">&lt;xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType&gt;</ph> 속성</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> property on <ph id="ph2">&lt;xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph>의 <ph id="ph2">&lt;xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType&gt;</ph> 속성</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">계약에 명시적으로 지정된 보호 수준이 없고 기본 바인딩이 전송 수준이나 메시지 수준에서 보안을 지원하는 경우 전체 계약에서 유효한 보호 수준은 <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>If the binding does not support security (such as <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph>), the effective <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType&gt;</ph> is <ph id="ph3">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph> for the whole contract.</source>
          <target state="translated">바인딩에서 보안을 지원하지 않는 경우(예: <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph>) 전체 계약에서 유효한 <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType&gt;</ph>은 <ph id="ph3">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">결과는 끝점 바인딩에 따라 다르며, 계약에서 <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph>을 지정하더라도 클라이언트가 다른 메시지 수준이나 전송 수준의 보안 보호를 요청할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>The value is not one of the <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> values.</source>
          <target state="translated">값이 <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> 값 중 하나가 아닌 경우</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
          <source>Gets or sets the value of the SOAP action for the reply message of the operation.</source>
          <target state="translated">작업의 회신 메시지에 대한 SOAP 동작 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
          <source>The value of the SOAP action for the reply message.</source>
          <target state="translated">회신 메시지의 SOAP 동작 값입니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
          <source>In addition to specifying a particular value for the action header of the reply message, you can also specify the string "*" (an asterisk).</source>
          <target state="translated">회신 메시지의 동작 헤더에 대한 특정 값을 지정할 수 있을 뿐 아니라 "*"(별표) 문자열도 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
          <source>Specifying an asterisk in the service instructs <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> not to add a reply action to the message, which is useful if you are programming against messages directly.</source>
          <target state="translated">서비스에서 별표를 지정하면 메시지에 회신 동작을 추가하지 않도록 <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph>에 지시합니다. 이 방법은 메시지에 직접 프로그래밍한 경우에 유용합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
          <source>Specifying an asterisk in a client application instructs <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> not to validate the reply action.</source>
          <target state="translated">클라이언트 응용 프로그램에서 별표를 지정하면 회신 동작의 유효성을 검사하지 않도록 <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph>에 지시합니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
          <source>The following example is a service that uses the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A&gt;</ph> properties to explicitly control the SOAP actions of both the input and output (or reply) messages.</source>
          <target state="translated">다음은 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A&gt;</ph> 속성을 사용하여 입력 메시지 및 출력(또는 회신) 메시지 모두의 SOAP 동작을 명시적으로 제어하는 서비스에 대한 예제입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
          <source>It also uses the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Name%2A&gt;</ph> property to declare the name of the operation as exposed in metadata.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Name%2A&gt;</ph> 속성을 사용하여 메타데이터로 노출되는 작업 이름을 선언합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
          <source><ph id="ph1">&lt;see cref="P:System.ServiceModel.OperationContractAttribute.ReplyAction" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ServiceModel.OperationContractAttribute.ReplyAction" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>