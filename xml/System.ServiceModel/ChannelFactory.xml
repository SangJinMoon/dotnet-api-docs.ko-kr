<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ChannelFactory.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b0c019732636ba8d785451859fcce5953a995955.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b0c019732636ba8d785451859fcce5953a995955</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ChannelFactory">
          <source>Creates and manages the channels that are used by clients to send messages to service endpoints.</source>
          <target state="translated">클라이언트에서 서비스 끝점으로 메시지를 보낼 때 사용하는 채널을 만들고 관리합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>Channel factories that implement the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelFactory&gt;</ph> interface and their associated channels are generally used by the initiators of a communication pattern.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelFactory&gt;</ph> 인터페이스를 구현하는 채널 팩터리 및 관련 채널은 일반적으로 통신 패턴의 개시자에서 사용됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>Listener factories that implement the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> interface and their associated listeners provide the mechanisms with which channels are accepted for communications.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> 인터페이스를 구현하는 수신기 팩터리 및 관련 수신기는 통신을 위해 채널을 수락하는 메커니즘을 제공합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>This class is not part of the channel model, but of the service model.</source>
          <target state="translated">이 클래스는 채널 모델이 아니라 서비스 모델에 속해 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.CreateFactory%2A&gt;</ph> method provides the means to create an <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IChannelFactory&gt;</ph> for a service endpoint.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.CreateFactory%2A&gt;</ph> 메서드를 사용하면 서비스 끝점에 대한 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IChannelFactory&gt;</ph>를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>Use it to construct a client that hooks up to an interface contract on the service without using metadata or policy.</source>
          <target state="translated">메타데이터나 정책을 사용하지 않고 서비스에서 인터페이스 계약에 연결되는 클라이언트를 생성할 때 이 메서드를 사용합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>Setting <ph id="ph1">`ChannelFactory.Credentials.Windows.AllowedImpersonationLevel`</ph> to <ph id="ph2">`TokenImpersonationLevel.Anonymous`</ph> always results in an anonymous logon regardless of impersonation level.</source>
          <target state="translated"><ph id="ph1">`ChannelFactory.Credentials.Windows.AllowedImpersonationLevel`</ph>을 <ph id="ph2">`TokenImpersonationLevel.Anonymous`</ph>로 설정하면 가장 수준과 관계없이 항상 익명 로그온이 수행됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>Special note for Managed C++ users deriving from this class:</source>
          <target state="translated">이 클래스에서 파생된 Managed C++ 사용자 관련 참고 사항:</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>Put your cleanup code in (On)(Begin)Close (and/or OnAbort), not in a destructor.</source>
          <target state="translated">소멸자가 아니라 (On)(Begin)Close 및/또는 OnAbort에 정리 코드를 입력하십시오.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>Avoid destructors; they cause the compiler to auto-generate <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>.</source>
          <target state="translated">소멸자를 사용하지 마십시오. 소멸자를 사용하면 컴파일러에서 <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>을 자동으로 생성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>Avoid non-reference members; they can cause the compiler to auto-generate <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>.</source>
          <target state="translated">비참조 멤버를 사용하지 마십시오. 비참조 멤버를 사용하면 컴파일러에서 <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>을 자동으로 생성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>Avoid using a finalizer; but if you include one, you should suppress the build warning and call <ph id="ph1">&lt;xref:System.GC.SuppressFinalize%28System.Object%29&gt;</ph> and the finalizer itself from (On)(Begin)Close (and/or OnAbort) to emulate what would have been the auto-generated <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> behavior.</source>
          <target state="translated">종료자를 사용하지 마십시오. 그러나 종료자를 포함하는 경우 자동으로 생성되는 <ph id="ph1">&lt;xref:System.GC.SuppressFinalize%28System.Object%29&gt;</ph> 동작을 에뮬레이트하기 위해 빌드 경고를 표시하지 않고 (On)(Begin)Close 및/또는 OnAbort에서 <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> 및 해당 종료자를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>When adding behaviors programmatically, the behavior is added to the appropriate <ph id="ph1">`Behaviors`</ph> property on the <ph id="ph2">&lt;xref:System.ServiceModel.ChannelFactory&gt;</ph> prior to the creation of any channel.</source>
          <target state="translated">동작을 프로그래밍 방식으로 추가할 경우 동작은 채널이 만들어지기 이전에 <ph id="ph1">`Behaviors`</ph>의 적절한 <ph id="ph2">&lt;xref:System.ServiceModel.ChannelFactory&gt;</ph> 속성에 추가됩니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>See the example section for a code sample.</source>
          <target state="translated">코드 예제는 예제 단원을 참조하십시오.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>The following code example shows how to insert programmatically a client behavior prior to the creation of the channel object by the factory.</source>
          <target state="translated">다음 코드 예제에서는 팩터리에서 채널 개체를 만들기 전에 클라이언트 동작을 프로그래밍 방식으로 삽입하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ChannelFactory" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ChannelFactory" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
          <source>The name of the configuration file.</source>
          <target state="translated">구성 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
          <source>Initializes the channel factory with the behaviors provided by a specified configuration file and with those in the service endpoint of the channel factory.</source>
          <target state="translated">지정된 구성 파일에서 제공한 동작 및 채널 팩터리의 서비스 끝점에 있는 동작을 통해 채널 팩터리를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
          <source>If <ph id="ph1">`configurationName`</ph> is <ph id="ph2">`null`</ph>, only the behaviors specified in the service endpoint are loaded.</source>
          <target state="translated"><ph id="ph1">`configurationName`</ph>이 <ph id="ph2">`null`</ph>인 경우 서비스 끝점에 지정된 동작만 로드됩니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
          <source>If the wildcard, "*", is used, any endpoint configuration in the client configuration file is used, but only if there is precisely one.</source>
          <target state="translated">와일드카드 "*"가 사용되는 경우 클라이언트 구성 파일 내의 임의의 끝점 구성이 사용되지만, 이때 끝점 구성이 하나만 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
          <source>Otherwise an exception is thrown.</source>
          <target state="translated">그렇지 않으면 예외가 throw됩니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
          <source>Any other value for the <ph id="ph1">`configurationName`</ph>, including the empty string "", matches the endpoint configuration with the same name.</source>
          <target state="translated">빈 문자열 ""을 비롯한 그 밖의 <ph id="ph1">`configurationName`</ph> 값은 동일한 이름을 가진 끝점 구성에 일치시킵니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
          <source>See the <bpt id="p1">[</bpt>WCF Client Configuration<ept id="p1">](~/docs/framework/wcf/feature-details/client-configuration.md)</ept> topic for a discussion of the client configuration.</source>
          <target state="translated">참조는 <bpt id="p1">[</bpt>WCF 클라이언트 구성은<ept id="p1">](~/docs/framework/wcf/feature-details/client-configuration.md)</ept> 클라이언트 구성의 토론에 대 한 항목입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
          <source>The service endpoint of the channel factory is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">채널 팩터리의 서비스 끝점이 <ph id="ph1">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.CreateDescription">
          <source>When implemented in a derived class, creates a description of the service endpoint associated with the channel factory.</source>
          <target state="translated">파생 클래스에서 구현되는 경우 채널 팩터리와 연결된 서비스 끝점에 대한 설명을 만듭니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.CreateDescription">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> associated with the channel factory.</source>
          <target state="translated">채널 팩터리에 연결된 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.CreateFactory">
          <source>Builds the channel factory for the current endpoint of the factory.</source>
          <target state="translated">팩터리의 현재 끝점에 대해 채널 팩터리를 생성합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.CreateFactory">
          <source>An <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelFactory" /&gt;</ph> for the endpoint of the current factory.</source>
          <target state="translated">현재 팩터리의 끝점에 대한 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelFactory" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.CreateFactory">
          <source>The endpoint of the service that the factory channels connect to is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or the endpoint's binding is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or is missing the element with the configuration name specified.</source>
          <target state="translated">팩터리 채널이 연결된 서비스 끝점이 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이거나 끝점의 바인딩이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이거나 지정된 구성 이름을 가진 요소가 없는 경우</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ChannelFactory.Credentials">
          <source>Gets the credentials used by clients to communicate a service endpoint over the channels produced by the factory.</source>
          <target state="translated">팩터리에서 생성한 채널을 통해 클라이언트가 서비스 끝점과 통신할 때 사용하는 자격 증명을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.Credentials">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ClientCredentials" /&gt;</ph> used by clients if they are configured for the factory or if the endpoint is non-<ph id="ph2">&lt;see langword="null" /&gt;</ph> and is in either the created or opening communication state; otherwise <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">클라이언트가 팩터리에 대해 구성되었거나 끝점이 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ClientCredentials" /&gt;</ph>이 아니고 Created 또는 Opening 통신 상태인 경우 클라이언트에서 사용되는 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다. 그렇지 않으면 <ph id="ph3">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.Credentials">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> object is stored as a type of endpoint behavior and can be accessed through the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> 개체는 끝점 동작의 형식으로 저장되며 <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A&gt;</ph> 속성을 통해 액세스될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.Credentials">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.OnOpened%2A&gt;</ph> method initializes a read-only copy of the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> object for the factory.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.OnOpened%2A&gt;</ph> 메서드는 팩터리에 대한 <ph id="ph2">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> 개체의 읽기 전용 복사본을 초기화합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.Credentials">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> object is used by the <ph id="ph2">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> class (or a class that derives from this class) to create the proxy objects that can call services.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> 개체는 <ph id="ph2">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> 클래스(또는 이 클래스의 파생 클래스)에서 서비스를 호출할 수 있는 프록시 개체를 만드는 데 사용합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.Credentials">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> object is also accessible through the <ph id="ph2">&lt;xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> 개체는 <ph id="ph2">&lt;xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A&gt;</ph> 속성을 통해서도 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.Credentials">
          <source>Setting <ph id="ph1">`ChannelFactory.Credentials.Windows.AllowedImpersonationLevel`</ph> to <ph id="ph2">`TokenImpersonationLevel.Anonymous`</ph> always results in an anonymous logon regardless of impersonation level.</source>
          <target state="translated"><ph id="ph1">`ChannelFactory.Credentials.Windows.AllowedImpersonationLevel`</ph>을 <ph id="ph2">`TokenImpersonationLevel.Anonymous`</ph>로 설정하면 가장 수준과 관계없이 항상 익명 로그온이 수행됩니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout">
          <source>Gets the default interval of time provided for a close operation to complete.</source>
          <target state="translated">닫기 작업을 완료하기 위해 제공되는 기본 시간 간격을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout">
          <source>The default <ph id="ph1">&lt;see cref="T:System.Timespan" /&gt;</ph> that specifies how long the close operation has to complete before timing out.</source>
          <target state="translated">시간 제한이 초과되기 전에 닫기 작업이 완료되어야 하는 기간을 지정하는 기본 <ph id="ph1">&lt;see cref="T:System.Timespan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout">
          <source>Gets the default service model close time-out if both the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Binding%2A&gt;</ph> are <ph id="ph3">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph>와 <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Binding%2A&gt;</ph> 모두 <ph id="ph3">`null`</ph>인 경우 기본 서비스 모델 닫기 제한 시간을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout">
          <source>The default value for the service model close time-out is 1 minute.</source>
          <target state="translated">서비스 모델 닫기 제한 시간 기본값은 1분입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout">
          <source>Otherwise, the value is set to the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Binding.CloseTimeout%2A&gt;</ph> value associated with the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph>.</source>
          <target state="translated">그렇지 않으면 이 값은 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Binding.CloseTimeout%2A&gt;</ph>와 연결된 <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> 값으로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout">
          <source>Gets the default interval of time provided for an open operation to complete.</source>
          <target state="translated">열기 작업을 완료하기 위해 제공되는 기본 시간 간격을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout">
          <source>The default <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the open operation has to complete before timing out.</source>
          <target state="translated">시간 제한이 초과되기 전에 열기 작업이 완료되어야 하는 기간을 지정하는 기본 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout">
          <source>Gets the default service model open time-out if both the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Binding%2A&gt;</ph> are <ph id="ph3">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph>와 <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Binding%2A&gt;</ph> 모두 <ph id="ph3">`null`</ph>인 경우 기본 서비스 모델 열기 제한 시간을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout">
          <source>The default value for the service model open time-out is 1 minute.</source>
          <target state="translated">서비스 모델 열기 제한 시간 기본값은 1분입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout">
          <source>Otherwise, the value is set to the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Binding.OpenTimeout%2A&gt;</ph> value associated with the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph>.</source>
          <target state="translated">그렇지 않으면 이 값은 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Binding.OpenTimeout%2A&gt;</ph>와 연결된 <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> 값으로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ChannelFactory.Endpoint">
          <source>Gets the service endpoint to which the channels produced by the factory connect.</source>
          <target state="translated">팩터리에서 만든 채널이 연결되는 서비스 끝점을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.Endpoint">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> to which the channels produced by the factory connect.</source>
          <target state="translated">팩터리 연결에서 생성하는 채널이 연결된 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.EnsureOpened">
          <source>Opens the current channel factory if it is not yet opened.</source>
          <target state="translated">현재 채널 팩터리가 아직 열리지 않은 경우 이를 엽니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.EnsureOpened">
          <source>Before opening the channel factory, checks that it is not <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closing&gt;</ph>, or <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph>.</source>
          <target state="translated">채널 팩터리를 열기 전에 <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closing&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph>가 아닌지 확인합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.EnsureOpened">
          <source>The current factory is either closing or closed and so cannot be opened.</source>
          <target state="translated">현재 팩터리가 닫히는 중이거나 닫혀 있어 열 수 없는 경우</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.GetProperty``1">
          <source>The typed object for which the method is querying.</source>
          <target state="translated">메서드에서 쿼리하고 있는 형식화된 개체입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.GetProperty``1">
          <source>Returns the typed object requested, if present, from the appropriate layer in the channel stack, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if not present.</source>
          <target state="translated">요청한 형식의 개체가 있으면 채널 스택의 해당 계층에서 그 개체를 반환하고, 개체가 없으면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.GetProperty``1">
          <source>The typed object <ph id="ph1">&lt;paramref name="T" /&gt;</ph> requested if it is present or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if it is not.</source>
          <target state="translated">요청한 형식의 개체가 있으면 해당 형식의 개체 <ph id="ph1">&lt;paramref name="T" /&gt;</ph>이고, 없으면 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.GetProperty``1">
          <source>Use this to retrieve capabilities, requirements and parameters from the channel stack.</source>
          <target state="translated">채널 스택으로부터 기능, 요구 사항 및 매개 변수를 검색할 때 사용합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.GetProperty``1">
          <source>If a channel factory supports returning the requested object, it returns it.</source>
          <target state="translated">채널 팩터리가 요청된 개체의 반환을 지원할 경우 해당 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.GetProperty``1">
          <source>If not, it delegates the call down to the next level in the stack.</source>
          <target state="translated">그렇지 않으면 스택의 다음 아래 수준에 호출을 위임합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.GetProperty``1">
          <source>If it gets to the bottom of the stack and no channel factory supported the requested object, then the method returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">스택의 맨 아래에 도달할 때까지 요청된 개체를 지원하는 채널 팩터리가 없으면 메서드는 <ph id="ph1">`null`</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.GetProperty``1">
          <source><ph id="ph1">`T`</ph> is typically some channel interface that the channel factory can support.</source>
          <target state="translated">일반적으로 <ph id="ph1">`T`</ph>는 채널 팩터리가 지원할 수 있는 채널 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.GetProperty``1">
          <source>If, for example, <ph id="ph1">`GetProperty&lt;IChannelListener&gt;`</ph> is called on a duplex channel factory, it returns the underlying listener.</source>
          <target state="translated">예를 들어, 이중 채널 팩터리에서 <ph id="ph1">`GetProperty&lt;IChannelListener&gt;`</ph>가 호출되는 경우 기본 수신기가 반환됩니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ChannelFactory">
          <source>Initializes the service endpoint of the channel factory.</source>
          <target state="translated">채널 팩터리의 서비스 끝점을 초기화합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>You must have an address to initialize an endpoint, but can have just the binding or configuration instead of the full endpoint.</source>
          <target state="translated">끝점을 초기화하기 위해 주소가 필요하지만, 전체 끝점 대신 바인딩이나 구성만 있어도 됩니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> to initialize the channel factory with.</source>
          <target state="translated">채널 팩터리를 초기화하는 데 사용하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
          <source>Initializes the service endpoint of the channel factory with a specified endpoint.</source>
          <target state="translated">지정된 끝점을 사용하여 채널 팩터리의 서비스 끝점을 초기화합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.InitializeEndpoint%28System.ServiceModel.Channels.Binding%2CSystem.ServiceModel.EndpointAddress%29&gt;</ph> if you have just the binding.</source>
          <target state="translated">바인딩만 있는 경우 <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.InitializeEndpoint%28System.ServiceModel.Channels.Binding%2CSystem.ServiceModel.EndpointAddress%29&gt;</ph>를 사용합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.InitializeEndpoint%28System.String%2CSystem.ServiceModel.EndpointAddress%29&gt;</ph> if you have the configuration.</source>
          <target state="translated">구성이 있는 경우 <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.InitializeEndpoint%28System.String%2CSystem.ServiceModel.EndpointAddress%29&gt;</ph>를 사용합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
          <source><ph id="ph1">&lt;paramref name="endpoint" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="endpoint" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> with which to initialize the channel factory.</source>
          <target state="translated">채널 팩터리를 초기화하는 데 사용하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph> with which to initialize the channel factory.</source>
          <target state="translated">채널 팩터리를 초기화하는 데 사용하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>Initializes the service endpoint of the channel factory with a specified binding and address.</source>
          <target state="translated">지정된 바인딩 및 주소를 사용하여 채널 팩터리의 서비스 끝점을 초기화합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.InitializeEndpoint%28System.String%2CSystem.ServiceModel.EndpointAddress%29&gt;</ph> if you have the configuration.</source>
          <target state="translated">구성이 있는 경우 <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.InitializeEndpoint%28System.String%2CSystem.ServiceModel.EndpointAddress%29&gt;</ph>를 사용합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)">
          <source>The name of the configuration file used to initialize the channel factory.</source>
          <target state="translated">채널 팩터리 초기화에 사용되는 구성 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)">
          <source>Initializes the service endpoint of the channel factory with a specified address and configuration.</source>
          <target state="translated">지정된 주소 및 구성을 사용하여 채널 팩터리의 서비스 끝점을 초기화합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.InitializeEndpoint%28System.ServiceModel.Channels.Binding%2CSystem.ServiceModel.EndpointAddress%29&gt;</ph> if you have just the binding.</source>
          <target state="translated">바인딩만 있는 경우 <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.InitializeEndpoint%28System.ServiceModel.Channels.Binding%2CSystem.ServiceModel.EndpointAddress%29&gt;</ph>를 사용합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnAbort">
          <source>Terminates the inner channel factory of the current channel factory.</source>
          <target state="translated">현재 채널 팩터리의 내부 채널 팩터리를 종료합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.OnAbort">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.OnAbort%2A&gt;</ph> method is called on a factory after it transitions to the closing state if the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Abort%2A&gt;</ph> method is invoked.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.OnAbort%2A&gt;</ph> 메서드가 호출되는 경우 Closing 상태로 전환된 팩터리에 대해 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Abort%2A&gt;</ph> 메서드가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the operation has to complete before timing out.</source>
          <target state="translated">시간 제한이 초과되기 전에 작업이 완료되어야 하는 기간을 지정하는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives the notification of the asynchronous operation completion.</source>
          <target state="translated">비동기 작업 완료에 대한 알림을 수신하는 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 대리자입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous operation.</source>
          <target state="translated">응용 프로그램에서 지정하는 개체로, 비동기 작업과 연결된 상태 정보를 포함합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous close operation on the inner channel factory of the current channel factory that has a state object associated with it.</source>
          <target state="translated">연결된 상태 개체가 있는 현재 채널 팩터리의 내부 채널 팩터리에서 비동기 닫기 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous operation.</source>
          <target state="translated">비동기 작업을 참조하는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method receives notification, through a callback, of the identity of the event handler for the operation.</source>
          <target state="translated">이 메서드는 콜백을 통해 해당 작업의 이벤트 처리기 ID에 대한 알림을 수신합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The operation is not complete until either the asynchronous close on the inner channel factory returns or the time-out occurs.</source>
          <target state="translated">내부 채널 팩터리에 대한 비동기 닫기가 반환되거나 시간 제한이 초과될 때까지는 작업이 완료되지 않습니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the operation has to complete before timing out.</source>
          <target state="translated">시간 제한이 초과되기 전에 작업이 완료되어야 하는 기간을 지정하는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives the notification of the asynchronous operation completion.</source>
          <target state="translated">비동기 작업 완료에 대한 알림을 수신하는 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 대리자입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous operation.</source>
          <target state="translated">응용 프로그램에서 지정하는 개체로, 비동기 작업과 연결된 상태 정보를 포함합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous open operation on the inner channel factory of the current channel factory that has a state object associated with it.</source>
          <target state="translated">연결된 상태 개체가 있는 현재 채널 팩터리의 내부 채널 팩터리에서 비동기 열기 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous operation.</source>
          <target state="translated">비동기 작업을 참조하는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method receives notification, through a callback, of the identity of the event handler for the operation.</source>
          <target state="translated">이 메서드는 콜백을 통해 해당 작업의 이벤트 처리기 ID에 대한 알림을 수신합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The operation is not complete until either the asynchronous open on the inner channel factory returns or the time-out occurs.</source>
          <target state="translated">내부 채널 팩터리에 대한 비동기 열기가 반환되거나 시간 제한이 초과될 때까지는 작업이 완료되지 않습니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the operation has to complete before timing out.</source>
          <target state="translated">시간 제한이 초과되기 전에 작업이 완료되어야 하는 기간을 지정하는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)">
          <source>Calls close on the inner channel factory with a specified time-out for the completion of the operation.</source>
          <target state="translated">작업 완료를 위해 지정된 시간 제한을 사용하여 내부 채널 팩터리에 대한 닫기를 호출합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> returned by a call to the <ph id="ph2">&lt;see cref="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 메서드를 호출하여 반환된 <ph id="ph2">&lt;see cref="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)">
          <source>Completes an asynchronous close operation on the inner channel factory of the current channel factory.</source>
          <target state="translated">현재 채널 팩터리의 내부 채널 팩터리에 대한 비동기 닫기 작업을 완료합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> returned by a call to the <ph id="ph2">&lt;see cref="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 메서드를 호출하여 반환된 <ph id="ph2">&lt;see cref="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)">
          <source>Completes an asynchronous open operation on the inner channel factory of the current channel factory.</source>
          <target state="translated">현재 채널 팩터리의 내부 채널 팩터리에 대한 비동기 열기 작업을 완료합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the open operation has to complete before timing out.</source>
          <target state="translated">제한 시간이 초과되기 전에 열기 작업이 완료되어야 하는 기간을 지정하는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)">
          <source>Calls open on the inner channel factory of the current channel factory with a specified time-out for the completion of the operation.</source>
          <target state="translated">작업 완료를 위해 지정된 시간 제한을 사용하여 현재 채널 팩터리의 내부 채널 팩터리에 대한 열기를 호출합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)">
          <source>The inner channel of the current channel is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">현재 채널의 내부 채널이 <ph id="ph1">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnOpened">
          <source>Initializes a read-only copy of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ClientCredentials" /&gt;</ph> object for the channel factory.</source>
          <target state="translated">채널 팩터리에 대한 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ClientCredentials" /&gt;</ph> 개체의 읽기 전용 복사본을 초기화합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.OnOpened">
          <source>Overrides and invokes the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph> method, which is called during the transition of an object into the opened state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph> 메서드를 재정의하고 호출합니다. 이 메서드는 개체를 Opened 상태로 전환하는 도중에 호출됩니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.OnOpened">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> object is stored as a type of endpoint behavior and can be accessed through the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> 개체는 끝점 동작의 형식으로 저장되며 <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A&gt;</ph> 속성을 통해 액세스될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnOpening">
          <source>Builds the inner channel factory for the current channel.</source>
          <target state="translated">현재 채널의 내부 채널 팩터리를 생성합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnOpening">
          <source>The inner channel factory for the channel factory is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">채널 팩터리의 내부 채널 팩터리가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.System#IDisposable#Dispose">
          <source>Closes the current channel factory.</source>
          <target state="translated">현재 채널 팩터리를 닫습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>