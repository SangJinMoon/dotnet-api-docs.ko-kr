<Type Name="DeliveryRequirementsAttribute" FullName="System.ServiceModel.DeliveryRequirementsAttribute">
  <TypeSignature Language="C#" Value="public sealed class DeliveryRequirementsAttribute : Attribute, System.ServiceModel.Description.IContractBehavior, System.ServiceModel.Description.IContractBehaviorAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DeliveryRequirementsAttribute extends System.Attribute implements class System.ServiceModel.Description.IContractBehavior, class System.ServiceModel.Description.IContractBehaviorAttribute" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.DeliveryRequirementsAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DeliveryRequirementsAttribute&#xA;Inherits Attribute&#xA;Implements IContractBehavior, IContractBehaviorAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class DeliveryRequirementsAttribute sealed : Attribute, System::ServiceModel::Description::IContractBehavior, System::ServiceModel::Description::IContractBehaviorAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IContractBehavior</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IContractBehaviorAttribute</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ec405-101">바인딩이 서비스 또는 클라이언트 구현에 제공해야 하는 기능 요구 사항을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-101">Specifies the feature requirements that bindings must provide to the service or client implementation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec405-102">바인딩이 서비스 또는 클라이언트 구현에 요구되는 기능을 제공하도록 <xref:System.ServiceModel.DeliveryRequirementsAttribute>가 확인하게 하려면 [!INCLUDE[indigo1](~/includes/indigo1-md.md)]를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-102">Use the <xref:System.ServiceModel.DeliveryRequirementsAttribute> to instruct [!INCLUDE[indigo1](~/includes/indigo1-md.md)] to confirm that the binding provides the features required by the service or client implementation.</span></span> <span data-ttu-id="ec405-103">경우는 <xref:System.ServiceModel.DeliveryRequirementsAttribute> 특성이 되는 서비스 설명을 응용 프로그램 구성 파일에서 로드 하거나 프로그래밍 방식으로 코드에 빌드할 때 검색 되 면 WCF 구성 된 바인딩의 유효성을 검사 하 고 특성을 지정 하는 모든 기능을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-103">If a <xref:System.ServiceModel.DeliveryRequirementsAttribute> attribute is detected when a service description is loaded from an application configuration file or built programmatically in code, WCF validates the configured binding and supports all the features that the attribute specifies.</span></span> <span data-ttu-id="ec405-104">예를 들어 사용자의 서비스에서 바인딩이 큐를 지원하도록 요구하는 경우,</span><span class="sxs-lookup"><span data-stu-id="ec405-104">For example, your service may require the bindings to support queuing.</span></span> <span data-ttu-id="ec405-105">사용 하 여 <xref:System.ServiceModel.DeliveryRequirementsAttribute> 따라 WCF가 다음 요구 사항이 충족 되었는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-105">Using <xref:System.ServiceModel.DeliveryRequirementsAttribute> allows WCF to confirm that the following requirements are met:</span></span>  
  
-   <span data-ttu-id="ec405-106"><xref:System.ServiceModel.DeliveryRequirementsAttribute.QueuedDeliveryRequirements%2A> 속성은 바인딩이 충족시켜야 하는 큐 요구 사항을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-106">The <xref:System.ServiceModel.DeliveryRequirementsAttribute.QueuedDeliveryRequirements%2A> property specifies the queuing requirements that a binding must meet.</span></span>  
  
-   <span data-ttu-id="ec405-107"><xref:System.ServiceModel.DeliveryRequirementsAttribute.RequireOrderedDelivery%2A> 속성은 바인딩이 순서가 지정된 메시징을 지원해야 하는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-107">The <xref:System.ServiceModel.DeliveryRequirementsAttribute.RequireOrderedDelivery%2A> property indicates whether the binding must support ordered messaging.</span></span>  
  
-   <span data-ttu-id="ec405-108"><xref:System.ServiceModel.DeliveryRequirementsAttribute.TargetContract%2A> 속성은 요구 사항이 적용되는 대상 형식을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-108">The <xref:System.ServiceModel.DeliveryRequirementsAttribute.TargetContract%2A> property indicates to which type the requirements apply.</span></span>  
  
 <span data-ttu-id="ec405-109"><xref:System.ServiceModel.DeliveryRequirementsAttribute> 특성이 클래스에 적용되어, 서비스 계약 인터페이스를 원하는 수만큼 구현할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-109">The <xref:System.ServiceModel.DeliveryRequirementsAttribute> attribute is applied to a class, which can implement any number of service contract interfaces.</span></span> <span data-ttu-id="ec405-110"><xref:System.ServiceModel.DeliveryRequirementsAttribute>는 클래스가 구현하는 계약 모두에 적용되거나 단 하나에만 적용될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-110"><xref:System.ServiceModel.DeliveryRequirementsAttribute> can be applied to all the contracts the class implements or to only one of them.</span></span> <span data-ttu-id="ec405-111">이 특성은 클래스에 두 번 이상 적용될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-111">The attribute can be applied to a class more than once.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UEDeliveryRequirementsAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/uedeliveryrequirementsattribute/cs/snippet1.cs#1)]
 [!code-vb[UEDeliveryRequirementsAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/uedeliveryrequirementsattribute/vb/snippet1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DeliveryRequirementsAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DeliveryRequirementsAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DeliveryRequirementsAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec405-112"><see cref="T:System.ServiceModel.DeliveryRequirementsAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-112">Initializes a new instance of the <see cref="T:System.ServiceModel.DeliveryRequirementsAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec405-113">기본값은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-113">The defaults are:</span></span>  
  
-   <span data-ttu-id="ec405-114"><xref:System.ServiceModel.DeliveryRequirementsAttribute.QueuedDeliveryRequirements%2A> 속성은 <xref:System.ServiceModel.QueuedDeliveryRequirementsMode.Allowed>로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-114">The <xref:System.ServiceModel.DeliveryRequirementsAttribute.QueuedDeliveryRequirements%2A> property is set to <xref:System.ServiceModel.QueuedDeliveryRequirementsMode.Allowed>.</span></span>  
  
-   <span data-ttu-id="ec405-115"><xref:System.ServiceModel.DeliveryRequirementsAttribute.RequireOrderedDelivery%2A> 속성은 `false`로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-115">The <xref:System.ServiceModel.DeliveryRequirementsAttribute.RequireOrderedDelivery%2A> property is set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueuedDeliveryRequirements">
      <MemberSignature Language="C#" Value="public System.ServiceModel.QueuedDeliveryRequirementsMode QueuedDeliveryRequirements { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.QueuedDeliveryRequirementsMode QueuedDeliveryRequirements" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.DeliveryRequirementsAttribute.QueuedDeliveryRequirements" />
      <MemberSignature Language="VB.NET" Value="Public Property QueuedDeliveryRequirements As QueuedDeliveryRequirementsMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::QueuedDeliveryRequirementsMode QueuedDeliveryRequirements { System::ServiceModel::QueuedDeliveryRequirementsMode get(); void set(System::ServiceModel::QueuedDeliveryRequirementsMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.QueuedDeliveryRequirementsMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec405-116">서비스 바인딩이 대기 중인 계약을 지원해야 하는지 여부를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-116">Specifies whether the binding for a service must support queued contracts.</span></span></summary>
        <value><span data-ttu-id="ec405-117"><see cref="T:System.ServiceModel.QueuedDeliveryRequirementsMode" /> 값 중 하나입니다. 기본값은 <see cref="F:System.ServiceModel.QueuedDeliveryRequirementsMode.Allowed" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-117">One of the <see cref="T:System.ServiceModel.QueuedDeliveryRequirementsMode" /> values; the default is <see cref="F:System.ServiceModel.QueuedDeliveryRequirementsMode.Allowed" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec405-118"><xref:System.ServiceModel.QueuedDeliveryRequirementsMode.Required> WCF 바인딩이 대기 중인된 배달을 지원 하는지 확인 하도록 지시 합니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-118">The <xref:System.ServiceModel.QueuedDeliveryRequirementsMode.Required> instructs WCF to confirm that the binding supports queued delivery.</span></span> <span data-ttu-id="ec405-119"><xref:System.ServiceModel.QueuedDeliveryRequirementsMode.NotAllowed> 값은 바인딩이 대기 중인된 배달을 지원 하지 않습니다 확인 하는 WCF 지시 합니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-119">The <xref:System.ServiceModel.QueuedDeliveryRequirementsMode.NotAllowed> value instructs WCF to confirm that the binding does not support queued delivery.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec405-120">다음 코드 예제에서는 <xref:System.ServiceModel.DeliveryRequirementsAttribute> 특성에 대 한 실제 바인딩이 대기 중인된 계약을 지원 하지 않고에서는 런타임에 확인 하는 WCF 명령 메시지를 정렬 합니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-120">The following code example uses the <xref:System.ServiceModel.DeliveryRequirementsAttribute> attribute to instruct WCF to confirm at runtime that the actual binding does not support queued contracts but does support ordered messages.</span></span>  
  
 [!code-csharp[UEDeliveryRequirementsAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/uedeliveryrequirementsattribute/cs/snippet1.cs#1)]
 [!code-vb[UEDeliveryRequirementsAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/uedeliveryrequirementsattribute/vb/snippet1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec405-121">값이 <see cref="T:System.ServiceModel.QueuedDeliveryRequirementsMode" /> 값 중 하나가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="ec405-121">The value is not one of the <see cref="T:System.ServiceModel.QueuedDeliveryRequirementsMode" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RequireOrderedDelivery">
      <MemberSignature Language="C#" Value="public bool RequireOrderedDelivery { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireOrderedDelivery" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.DeliveryRequirementsAttribute.RequireOrderedDelivery" />
      <MemberSignature Language="VB.NET" Value="Public Property RequireOrderedDelivery As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequireOrderedDelivery { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec405-122">바인딩이 순서가 지정된 메시지를 지원해야 하는지 여부를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-122">Specifies whether the binding must support ordered messages.</span></span></summary>
        <value>
          <span data-ttu-id="ec405-123">바인딩이 메시지 순서 지정을 지원하도록 <see langword="true" />가 확인하게 하면 [!INCLUDE[indigo1](~/includes/indigo1-md.md)]이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-123"><see langword="true" /> instructs [!INCLUDE[indigo1](~/includes/indigo1-md.md)] to confirm that the binding must support the ordering of messages; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ec405-124">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-124">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec405-125">설정의 <xref:System.ServiceModel.DeliveryRequirementsAttribute.RequireOrderedDelivery%2A> 속성을 `false` WCF 없는 유효성 검사를 수행 하도록 지시 합니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-125">Setting the <xref:System.ServiceModel.DeliveryRequirementsAttribute.RequireOrderedDelivery%2A> property to `false` instructs WCF to perform no validation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec405-126">다음 코드 예제에서는 <xref:System.ServiceModel.DeliveryRequirementsAttribute> 특성에 대 한 실제 바인딩이 지원가 런타임에 확인 하는 WCF 명령 메시지를 정렬 합니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-126">The following code example uses the <xref:System.ServiceModel.DeliveryRequirementsAttribute> attribute to instruct WCF to confirm at runtime that the actual binding does support ordered messages.</span></span>  
  
 [!code-csharp[UEDeliveryRequirementsAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/uedeliveryrequirementsattribute/cs/snippet1.cs#1)]
 [!code-vb[UEDeliveryRequirementsAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/uedeliveryrequirementsattribute/vb/snippet1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IContractBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IContractBehavior.AddBindingParameters (System.ServiceModel.Description.ContractDescription description, System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IContractBehavior.AddBindingParameters(class System.ServiceModel.Description.ContractDescription description, class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DeliveryRequirementsAttribute.System#ServiceModel#Description#IContractBehavior#AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Sub AddBindingParameters (description As ContractDescription, endpoint As ServiceEndpoint, parameters As BindingParameterCollection) Implements IContractBehavior.AddBindingParameters" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System::ServiceModel::Description::ContractDescription ^ description, System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::ServiceModel::Channels::BindingParameterCollection ^ parameters) = System::ServiceModel::Description::IContractBehavior::AddBindingParameters;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ContractDescription" />
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="description"><span data-ttu-id="ec405-127">계약 설명입니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-127">The contract description.</span></span></param>
        <param name="endpoint"><span data-ttu-id="ec405-128">계약의 서비스 끝점입니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-128">The service endpoint for the contract.</span></span></param>
        <param name="parameters"><span data-ttu-id="ec405-129">바인딩 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-129">The binding parameters.</span></span></param>
        <summary><span data-ttu-id="ec405-130"><see cref="M:System.ServiceModel.DeliveryRequirementsAttribute.System#ServiceModel#Description#IContractBehavior#AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" /> 메서드를 구현하여 바인딩 매개 변수를 올바르게 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-130">Implements the <see cref="M:System.ServiceModel.DeliveryRequirementsAttribute.System#ServiceModel#Description#IContractBehavior#AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" /> method to attach binding parameters correctly.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior">
      <MemberSignature Language="C#" Value="void IContractBehavior.ApplyClientBehavior (System.ServiceModel.Description.ContractDescription description, System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Dispatcher.ClientRuntime proxy);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(class System.ServiceModel.Description.ContractDescription description, class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Dispatcher.ClientRuntime proxy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DeliveryRequirementsAttribute.System#ServiceModel#Description#IContractBehavior#ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" />
      <MemberSignature Language="VB.NET" Value="Sub ApplyClientBehavior (description As ContractDescription, endpoint As ServiceEndpoint, proxy As ClientRuntime) Implements IContractBehavior.ApplyClientBehavior" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System::ServiceModel::Description::ContractDescription ^ description, System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::ServiceModel::Dispatcher::ClientRuntime ^ proxy) = System::ServiceModel::Description::IContractBehavior::ApplyClientBehavior;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ContractDescription" />
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="proxy" Type="System.ServiceModel.Dispatcher.ClientRuntime" />
      </Parameters>
      <Docs>
        <param name="description"><span data-ttu-id="ec405-131">동작이 연결되는 대상 계약 설명입니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-131">The contract description to which the behavior is attached.</span></span></param>
        <param name="endpoint"><span data-ttu-id="ec405-132">계약의 끝점입니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-132">The endpoint for the contract.</span></span></param>
        <param name="proxy"><span data-ttu-id="ec405-133">동작이 작동하는 클라이언트 런타임입니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-133">The client runtime on which the behavior operates.</span></span></param>
        <summary><span data-ttu-id="ec405-134">클라이언트 지원을 위한 <see cref="M:System.ServiceModel.DeliveryRequirementsAttribute.System#ServiceModel#Description#IContractBehavior#ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" /> 메서드 구현입니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-134">Implementation of the <see cref="M:System.ServiceModel.DeliveryRequirementsAttribute.System#ServiceModel#Description#IContractBehavior#ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" /> method for client support.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IContractBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.ContractDescription description, System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Dispatcher.DispatchRuntime dispatch);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.ContractDescription description, class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Dispatcher.DispatchRuntime dispatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DeliveryRequirementsAttribute.System#ServiceModel#Description#IContractBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)" />
      <MemberSignature Language="VB.NET" Value="Sub ApplyDispatchBehavior (description As ContractDescription, endpoint As ServiceEndpoint, dispatch As DispatchRuntime) Implements IContractBehavior.ApplyDispatchBehavior" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System::ServiceModel::Description::ContractDescription ^ description, System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::ServiceModel::Dispatcher::DispatchRuntime ^ dispatch) = System::ServiceModel::Description::IContractBehavior::ApplyDispatchBehavior;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ContractDescription" />
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="dispatch" Type="System.ServiceModel.Dispatcher.DispatchRuntime" />
      </Parameters>
      <Docs>
        <param name="description"><span data-ttu-id="ec405-135">동작이 연결되는 대상 계약 설명입니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-135">The contract description to which the behavior is attached.</span></span></param>
        <param name="endpoint"><span data-ttu-id="ec405-136">계약의 끝점입니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-136">The endpoint for the contract.</span></span></param>
        <param name="dispatch"><span data-ttu-id="ec405-137">끝점을 지원하는 디스패치 런타임입니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-137">The dispatch runtime that supports the endpoint.</span></span></param>
        <summary><span data-ttu-id="ec405-138">서비스 지원을 활성화하는 <see cref="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)" /> 메서드의 구현입니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-138">Implementation of the <see cref="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)" /> method that enables service support.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IContractBehavior.Validate">
      <MemberSignature Language="C#" Value="void IContractBehavior.Validate (System.ServiceModel.Description.ContractDescription description, System.ServiceModel.Description.ServiceEndpoint endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IContractBehavior.Validate(class System.ServiceModel.Description.ContractDescription description, class System.ServiceModel.Description.ServiceEndpoint endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.DeliveryRequirementsAttribute.System#ServiceModel#Description#IContractBehavior#Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberSignature Language="VB.NET" Value="Sub Validate (description As ContractDescription, endpoint As ServiceEndpoint) Implements IContractBehavior.Validate" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IContractBehavior.Validate(System::ServiceModel::Description::ContractDescription ^ description, System::ServiceModel::Description::ServiceEndpoint ^ endpoint) = System::ServiceModel::Description::IContractBehavior::Validate;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ContractDescription" />
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="description"><span data-ttu-id="ec405-139">계약 설명입니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-139">The contract description.</span></span></param>
        <param name="endpoint"><span data-ttu-id="ec405-140">유효성을 검사할 끝점입니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-140">The endpoint to be validated.</span></span></param>
        <summary><span data-ttu-id="ec405-141"><see cref="M:System.ServiceModel.DeliveryRequirementsAttribute.System#ServiceModel#Description#IContractBehavior#Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)" /> 메서드를 구현하여 유효성 검사 지원을 활성화합니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-141">Implements the <see cref="M:System.ServiceModel.DeliveryRequirementsAttribute.System#ServiceModel#Description#IContractBehavior#Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)" /> method to enable validation support.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetContract">
      <MemberSignature Language="C#" Value="public Type TargetContract { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TargetContract" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.DeliveryRequirementsAttribute.TargetContract" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetContract As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ TargetContract { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec405-142">특성이 적용될 형식을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-142">Gets or sets the type to which it applies.</span></span></summary>
        <value><span data-ttu-id="ec405-143">특성이 적용될 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-143">The <see cref="T:System.Type" /> to which the attribute applies.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec405-144">서비스 클래스는 서비스 계약 인터페이스를 원하는 수만큼 구현할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-144">A service class can implement any number of service contract interfaces.</span></span> <span data-ttu-id="ec405-145"><xref:System.ServiceModel.DeliveryRequirementsAttribute.TargetContract%2A>가 있는 끝점에 요구 사항을 지원하는 바인딩이 있는지 확인하려면 <xref:System.ServiceModel.DeliveryRequirementsAttribute.TargetContract%2A> 속성을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-145">Use the <xref:System.ServiceModel.DeliveryRequirementsAttribute.TargetContract%2A> property to validate that endpoints with the <xref:System.ServiceModel.DeliveryRequirementsAttribute.TargetContract%2A> have bindings that support the requirements.</span></span> <span data-ttu-id="ec405-146">이 특성은 동일한 클래스에 대해 원하는 횟수만큼 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-146">This attribute can be used any number of times on the same class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec405-147">다음 코드 예제에서는 <xref:System.ServiceModel.DeliveryRequirementsAttribute> 특성에 대 한 실제 바인딩이 대기 중인된 계약을 지원 하지 않고에서는 런타임에 확인 하는 WCF 명령 메시지를 정렬 합니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-147">The following code example uses the <xref:System.ServiceModel.DeliveryRequirementsAttribute> attribute to instruct WCF to confirm at runtime that the actual binding does not support queued contracts but does support ordered messages.</span></span> <span data-ttu-id="ec405-148">또한 이 제한이 적용될 대상 계약을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="ec405-148">It also specifies the target contract to which this restriction should be applied.</span></span>  
  
 [!code-csharp[UEDeliveryRequirementsAttribute#2](~/samples/snippets/csharp/VS_Snippets_CFX/uedeliveryrequirementsattribute/cs/snippet2.cs#2)]
 [!code-vb[UEDeliveryRequirementsAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/uedeliveryrequirementsattribute/vb/snippet2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>