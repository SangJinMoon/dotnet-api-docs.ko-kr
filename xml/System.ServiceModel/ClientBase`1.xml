<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ClientBase`1.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9575d09f-9d72-4690-889e-b83c405ca456f4fe2c2a82a7b7977946454a5c6766d6ee0382cb.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f4fe2c2a82a7b7977946454a5c6766d6ee0382cb</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">254e16ae65e82f4aa59360cd8572b36b6b5b2f80</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/05/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ClientBase`1">
          <source>The channel to be used to connect to the service.</source>
          <target state="translated">서비스에 연결할 때 사용할 채널입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ClientBase`1">
          <source>Provides the base implementation used to create Windows Communication Foundation (WCF) client objects that can call services.</source>
          <target state="translated">서비스를 호출할 수 있는 WCF(Windows Communication Foundation) 클라이언트 개체를 만들 때 사용되는 기본 구현을 제공합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ClientBase`1">
          <source>Extend the <ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> class to create a custom <ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client object that can be used to connect to a service.</source>
          <target state="translated">서비스에 연결하는 데 사용할 수 있는 사용자 지정 <ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> 클라이언트 개체를 만들려면 <ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 클래스를 확장합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ClientBase`1">
          <source>Typically, the <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client base class is extended by a tool such as the <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> on your behalf.</source>
          <target state="translated">일반적으로 <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 클라이언트 기본 클래스와 같은 도구에 의해 확장 된는 <bpt id="p1">[</bpt>ServiceModel Metadata 유틸리티 도구 (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> 사용자 대신 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ClientBase`1">
          <source>For an example, see the Example section.</source>
          <target state="translated">예제를 보려면 예제 단원을 참조하십시오.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ClientBase`1">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> class can be used quickly and easily by developers who prefer objects to the use of the interfaces and the <ph id="ph2">&lt;xref:System.ServiceModel.ChannelFactory%601?displayProperty=nameWithType&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> 클래스는 인터페이스와 <ph id="ph2">&lt;xref:System.ServiceModel.ChannelFactory%601?displayProperty=nameWithType&gt;</ph> 클래스를 사용하는 것보다 개체를 선호하는 개발자가 빠르고 손쉽게 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ClientBase`1">
          <source>In all cases this class wraps or exposes the methods and functionality of the <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory%601?displayProperty=nameWithType&gt;</ph> class and the <ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel?displayProperty=nameWithType&gt;</ph> interface.</source>
          <target state="translated">이 클래스는 어떤 경우에도 <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory%601?displayProperty=nameWithType&gt;</ph> 클래스 및 <ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel?displayProperty=nameWithType&gt;</ph> 인터페이스의 메서드와 기능을 래핑하거나 노출합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ClientBase`1">
          <source>As when using the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType&gt;</ph> class, you can create the class and modify the endpoint, channel factory, or security information prior to making any calls or calling <ph id="ph2">&lt;xref:System.ServiceModel.ClientBase%601.Open%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType&gt;</ph> 클래스를 사용할 때와 마찬가지로, 임의의 호출을 수행하거나 <ph id="ph2">&lt;xref:System.ServiceModel.ClientBase%601.Open%2A&gt;</ph>을 호출하기 전에 클래스를 만들고 끝점, 채널 팩터리 또는 보안 정보를 수정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ClientBase`1">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>WCF Client Overview<ept id="p1">](~/docs/framework/wcf/wcf-client-overview.md)</ept> and <bpt id="p2">[</bpt>Accessing Services Using a WCF Client<ept id="p2">](~/docs/framework/wcf/accessing-services-using-a-wcf-client.md)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>WCF 클라이언트 개요<ept id="p1">](~/docs/framework/wcf/wcf-client-overview.md)</ept> 및 <bpt id="p2">[</bpt>WCF 클라이언트를 사용 하 여 서비스에 액세스<ept id="p2">](~/docs/framework/wcf/accessing-services-using-a-wcf-client.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ClientBase`1">
          <source>Special note for Managed C++ users deriving from this class:</source>
          <target state="translated">이 클래스에서 파생된 Managed C++ 사용자 관련 참고 사항:</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ClientBase`1">
          <source>Put your clean-up code in (On)(Begin)Close (and/or OnAbort), not in a destructor.</source>
          <target state="translated">소멸자가 아니라 (On)(Begin)Close 및/또는 OnAbort에 정리 코드를 입력하십시오.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ClientBase`1">
          <source>Avoid destructors: they cause the compiler to auto-generate <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>.</source>
          <target state="translated">소멸자를 사용하지 마십시오. 소멸자를 사용하면 컴파일러에서 <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>을 자동으로 생성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ClientBase`1">
          <source>Avoid non-reference members: they can cause the compiler to auto-generate <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>.</source>
          <target state="translated">비참조 멤버를 사용하지 마십시오. 비참조 멤버를 사용하면 컴파일러에서 <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>을 자동으로 생성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ClientBase`1">
          <source>Avoid finalizers; but if you include one, you should suppress the build warning and call <ph id="ph1">&lt;xref:System.GC.SuppressFinalize%28System.Object%29&gt;</ph> and the finalizer itself from (On)(Begin)Close (and/or OnAbort) to emulate what would have been the auto-generated <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> behavior.</source>
          <target state="translated">종료자를 사용하지 마십시오. 그러나 종료자를 포함하는 경우 자동으로 생성되는 <ph id="ph1">&lt;xref:System.GC.SuppressFinalize%28System.Object%29&gt;</ph> 동작을 에뮬레이트하기 위해 빌드 경고를 표시하지 않고 (On)(Begin)Close 및/또는 OnAbort에서 <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> 및 해당 종료자를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ClientBase`1">
          <source>The following code example shows how the <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> extends the <ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> class to create a <ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client class.</source>
          <target state="translated">다음 코드 예제는 방법을 <bpt id="p1">[</bpt>ServiceModel Metadata 유틸리티 도구 (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> 확장는 <ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> 만들 클래스는 <ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 클라이언트 클래스입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ClientBase`1">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ClientBase`1">
          <source>Use to create a <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client object from the endpoint information in the application configuration file.</source>
          <target state="translated">응용 프로그램 구성 파일에서 끝점 정보로부터 <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 클라이언트 개체를 만들 때 사용합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ClientBase`1">
          <source>The main function of the constructor is to create a <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory%601?displayProperty=nameWithType&gt;</ph> where the type parameter is the type of the target service contract.</source>
          <target state="translated">생성자의 주 기능은 형식 매개 변수가 대상 서비스 계약의 형식일 때 <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory%601?displayProperty=nameWithType&gt;</ph>를 만드는 것입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> class using the default target endpoint from the application configuration file.</source>
          <target state="translated">응용 프로그램 구성 파일의 기본 대상 끝점을 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.#ctor">
          <source>Use this constructor to create a <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client object to invoke a service.</source>
          <target state="translated">서비스를 호출할 <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 클라이언트 개체를 만들 때 이 생성자를 사용합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.#ctor">
          <source>This constructor uses the type parameter as the target contract and the binding and address information from the application configuration file.</source>
          <target state="translated">이 생성자는 응용 프로그램 구성 파일의 형식 매개 변수를 대상 계약으로 사용하며 바인딩 및 주소 정보를 사용합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.#ctor">
          <source>The following code example shows how a client uses this constructor in a <ph id="ph1">`SampleServiceClient`</ph> class that extends the <ph id="ph2">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> class.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">`SampleServiceClient`</ph> 클래스를 확장하는 <ph id="ph2">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> 클래스에서 클라이언트가 이 생성자를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor">
          <source>Either there is no default endpoint information in the configuration file, more than one endpoint in the file, or no configuration file.</source>
          <target state="translated">구성 파일에 기본 끝점 정보가 없거나, 파일에 끝점이 둘 이상의 있거나, 구성 파일이 없는 경우</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Description.ServiceEndpoint)">
          <source>The endpoint for a service that allows clients to find and communicate with the service.</source>
          <target state="translated">클라이언트가 서비스를 찾아서 통신할 수 있게 해주는 서비스 끝점입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Description.ServiceEndpoint)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> class using the specified  <ph id="ph2">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph>를 사용하여 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.String)">
          <source>The name of the endpoint in the application configuration file.</source>
          <target state="translated">응용 프로그램 구성 파일의 끝점 이름입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> class using the configuration information specified in the application configuration file by <ph id="ph2">&lt;paramref name="endpointConfigurationName" /&gt;</ph>.</source>
          <target state="translated">응용 프로그램 구성 파일에서 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph>에 의해 지정된 구성 정보를 사용하여 <ph id="ph2">&lt;paramref name="endpointConfigurationName" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.String)">
          <source>Use this constructor when there is more than one target endpoint in the application configuration file.</source>
          <target state="translated">응용 프로그램 구성 파일에 대상 끝점이 둘 이상인 경우 이 생성자를 사용합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.String)">
          <source>This value is the <ph id="ph1">`name`</ph> attribute of the client <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>endpoint<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/endpoint-of-client.md)</ept> element.</source>
          <target state="translated">이 값은 고 <ph id="ph1">`name`</ph> 클라이언트의 특성 <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>끝점<ph id="ph3">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/endpoint-of-client.md)</ept> 요소입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.String)">
          <source>The specified endpoint information is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">지정된 끝점 정보가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.String)">
          <source>The endpoint cannot be found or the endpoint contract is not valid.</source>
          <target state="translated">끝점을 찾을 수 없거나 끝점 계약이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>The binding with which to make calls to the service.</source>
          <target state="translated">서비스를 호출할 때 사용하는 바인딩입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>The address of the service endpoint.</source>
          <target state="translated">서비스 끝점의 주소입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> class using the specified binding and target address.</source>
          <target state="translated">지정된 바인딩 및 대상 주소를 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>The remote address is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">원격 주소가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> class using the <ph id="ph2">&lt;paramref name="callbackInstance" /&gt;</ph> as the callback object in a duplex conversation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph>를 이중 대화의 콜백 개체로 사용하여 <ph id="ph2">&lt;paramref name="callbackInstance" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext)">
          <source>Use this constructor when the service contract requires a callback service instance.</source>
          <target state="translated">서비스 계약에서 콜백 서비스 인스턴스가 필요한 경우 이 생성자를 사용합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext)">
          <source>The target endpoint is constructed from the type parameter and information in the application configuration file.</source>
          <target state="translated">형식 매개 변수 및 응용 프로그램 구성 파일의 정보로부터 대상 끝점이 생성됩니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext)">
          <source>The following code example shows how to use this constructor with a <ph id="ph1">`SampleDuplexHelloClient`</ph> class to pass a callback object that listens for messages from the service.</source>
          <target state="translated">다음 코드 예제에서는 서비스로부터 메시지를 수신하는 콜백 개체를 전달하기 위해 이 생성자를 <ph id="ph1">`SampleDuplexHelloClient`</ph> 클래스와 함께 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext)">
          <source>The callback instance is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">콜백 인스턴스가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext)">
          <source>Either there is no default endpoint information in the configuration file, more than one endpoint in the file, or no configuration file.</source>
          <target state="translated">구성 파일에 기본 끝점 정보가 없거나, 파일에 끝점이 둘 이상의 있거나, 구성 파일이 없는 경우</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
          <source>The name of the endpoint in the application configuration file.</source>
          <target state="translated">응용 프로그램 구성 파일의 끝점 이름입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
          <source>The address of the service.</source>
          <target state="translated">서비스의 주소입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> class using the specified target address and endpoint information.</source>
          <target state="translated">지정된 대상 주소 및 끝점 정보를 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
          <source>Use this constructor to determine the target endpoint information from the name of the endpoint in an application configuration file (The target value is located by finding the <ph id="ph1">`name`</ph> attribute of the client <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>endpoint<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/endpoint-of-client.md)</ept> element) and the specified address.</source>
          <target state="translated">응용 프로그램 구성 파일에서 끝점의 이름에서 대상 끝점 정보를 확인 하려면이 생성자를 사용 (대상 값을 검색 하 여 찾습니다는 <ph id="ph1">`name`</ph> 클라이언트의 특성 <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>끝점<ph id="ph3">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/endpoint-of-client.md)</ept> 요소) 및 지정된 된 주소입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
          <source>The remote address is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">원격 주소가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
          <source>The endpoint cannot be found or the endpoint contract is not valid.</source>
          <target state="translated">끝점을 찾을 수 없거나 끝점 계약이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.String)">
          <source>The name of the endpoint in the application configuration file.</source>
          <target state="translated">응용 프로그램 구성 파일의 끝점 이름입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.String)">
          <source>The address of the service.</source>
          <target state="translated">서비스의 주소입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.String)">
          <source>Use this constructor to determine the target endpoint information from the name of the endpoint in an application configuration file (The target value is located by finding the <ph id="ph1">`name`</ph> attribute of the client <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>endpoint<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/endpoint-of-client.md)</ept> element) and the specified address.</source>
          <target state="translated">응용 프로그램 구성 파일에서 끝점의 이름에서 대상 끝점 정보를 확인 하려면이 생성자를 사용 (대상 값을 검색 하 여 찾습니다는 <ph id="ph1">`name`</ph> 클라이언트의 특성 <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>끝점<ph id="ph3">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/endpoint-of-client.md)</ept> 요소) 및 지정된 된 주소입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.String)">
          <source>The remote address is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">원격 주소가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.String)">
          <source>The endpoint cannot be found or the endpoint contract is not valid.</source>
          <target state="translated">끝점을 찾을 수 없거나 끝점 계약이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Description.ServiceEndpoint)">
          <source>The endpoint for a service that allows clients to find and communicate with the service.</source>
          <target state="translated">클라이언트가 서비스를 찾아서 통신할 수 있게 해주는 서비스 끝점입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Description.ServiceEndpoint)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> class using the specified  <ph id="ph2">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> and  <ph id="ph3">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> objects.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> 개체를 사용하여 <ph id="ph3">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String)">
          <source>The name of the endpoint in the application configuration file.</source>
          <target state="translated">응용 프로그램 구성 파일의 끝점 이름입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> class using the specified callback service and endpoint configuration information.</source>
          <target state="translated">지정된 콜백 서비스 및 끝점 구성 정보를 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String)">
          <source>Use this constructor to pass a service object that implements the callback contract for the target service and determine the target endpoint information from the client application configuration file.</source>
          <target state="translated">대상 서비스의 콜백 계약을 구현하는 서비스 개체를 전달하고 클라이언트 응용 프로그램 구성 파일에서 대상 끝점 정보를 확인하려면 이 생성자를 사용합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String)">
          <source>The target value is located by finding the <ph id="ph1">`name`</ph> attribute of the client <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>endpoint<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/endpoint-of-client.md)</ept> element.</source>
          <target state="translated">대상 값을 검색 하 여 찾습니다는 <ph id="ph1">`name`</ph> 클라이언트의 특성 <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>끝점<ph id="ph3">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/endpoint-of-client.md)</ept> 요소입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String)">
          <source>The endpoint is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">끝점이 <ph id="ph1">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String)">
          <source>The endpoint cannot be found or the endpoint contract is not valid.</source>
          <target state="translated">끝점을 찾을 수 없거나 끝점 계약이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>The binding with which to call the service.</source>
          <target state="translated">서비스를 호출할 때 사용하는 바인딩입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>The address of the service endpoint.</source>
          <target state="translated">서비스 끝점의 주소입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>The remote address is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">원격 주소가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)">
          <source>The name of the endpoint in the application configuration file.</source>
          <target state="translated">응용 프로그램 구성 파일의 끝점 이름입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)">
          <source>The address of the service.</source>
          <target state="translated">서비스의 주소입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)">
          <source>Use this constructor to pass a service object that implements the callback contract for the target service and determine the target endpoint information from the name of the endpoint in an application configuration file (The target value is located by finding the <ph id="ph1">`name`</ph> attribute of the client <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>endpoint<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/endpoint-of-client.md)</ept> element) and the specified address.</source>
          <target state="translated">대상 서비스에 대 한 콜백 계약을 구현 하는 서비스 개체를 전달 하려면이 생성자를 사용 하 고 응용 프로그램 구성 파일에서 끝점의 이름에서 대상 끝점 정보를 확인 (대상 값을 검색 하 여 찾습니다는 <ph id="ph1">`name`</ph> 클라이언트의 특성 <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>끝점<ph id="ph3">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/endpoint-of-client.md)</ept> 요소) 및 지정된 된 주소입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)">
          <source>The remote address is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">원격 주소가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)">
          <source>The endpoint cannot be found or the endpoint contract is not valid.</source>
          <target state="translated">끝점을 찾을 수 없거나 끝점 계약이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.String)">
          <source>The name of the endpoint in the application configuration file.</source>
          <target state="translated">응용 프로그램 구성 파일의 끝점 이름입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.String)">
          <source>The address of the service.</source>
          <target state="translated">서비스의 주소입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.String)">
          <source>Use this constructor to pass a service object that implements the callback contract for the target service and determine the target endpoint information from the name of the endpoint in an application configuration file (The target value is located by finding the <ph id="ph1">`name`</ph> attribute of the client <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>endpoint<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/endpoint-of-client.md)</ept> element) and the specified address.</source>
          <target state="translated">대상 서비스에 대 한 콜백 계약을 구현 하는 서비스 개체를 전달 하려면이 생성자를 사용 하 고 응용 프로그램 구성 파일에서 끝점의 이름에서 대상 끝점 정보를 확인 (대상 값을 검색 하 여 찾습니다는 <ph id="ph1">`name`</ph> 클라이언트의 특성 <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>끝점<ph id="ph3">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/endpoint-of-client.md)</ept> 요소) 및 지정된 된 주소입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.String)">
          <source>The remote address is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">원격 주소가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.String)">
          <source>The endpoint cannot be found or the endpoint contract is not valid.</source>
          <target state="translated">끝점을 찾을 수 없거나 끝점 계약이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.Abort">
          <source>Causes the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> object to transition immediately from its current state into the closed state.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> 개체가 즉시 현재 상태에서 Closed 상태로 전환되도록 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.Abort">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>을 참조하십시오.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ClientBase`1.CacheSetting">
          <source>Gets or sets the cache setting.</source>
          <target state="translated">캐시 설정을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ClientBase`1.CacheSetting">
          <source>The cache setting.</source>
          <target state="translated">캐시 설정입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ClientBase`1.Channel">
          <source>Gets the inner channel used to send messages to variously configured service endpoints.</source>
          <target state="translated">다양하게 구성된 서비스 끝점으로 메시지를 보내는 데 사용되는 내부 채널을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ClientBase`1.Channel">
          <source>A channel of a specified type.</source>
          <target state="translated">지정된 형식의 채널입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ClientBase`1.ChannelFactory">
          <source>Gets the underlying <ph id="ph1">&lt;see cref="T:System.ServiceModel.ChannelFactory`1" /&gt;</ph> object.</source>
          <target state="translated">내부 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ChannelFactory`1" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ClientBase`1.ChannelFactory">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.ChannelFactory`1" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ChannelFactory`1" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ClientBase`1.ChannelFactory">
          <source>Used to obtain the inner channel factory that handles creation of the channel to the service.</source>
          <target state="translated">서비스에 대한 채널 생성을 처리하는 내부 채널 팩터리를 가져올 때 사용합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ClientBase`1.ClientCredentials">
          <source>Gets the client credentials used to call an operation.</source>
          <target state="translated">작업 호출에 사용되는 클라이언트 자격 증명을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ClientBase`1.ClientCredentials">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ClientCredentials" /&gt;</ph> that represents the proof of identity presented by the client.</source>
          <target state="translated">클라이언트에서 제시하는 ID에 대한 증명을 나타내는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ClientCredentials" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ClientBase`1.ClientCredentials">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A&gt;</ph> property to configure the credentials that the <ph id="ph2">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> object uses to connect to the service.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A&gt;</ph> 개체가 서비스에 연결할 때 사용하는 자격 증명을 구성하려면 <ph id="ph2">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ClientBase`1.ClientCredentials">
          <source>The following code shows how to use the <ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A&gt;</ph> property to set the username and password prior to calling the service.</source>
          <target state="translated">다음 코드에서는 서비스 호출에 앞서 사용자 이름 및 암호를 설정하기 위해 <ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A&gt;</ph> 속성을 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.Close">
          <source>Causes the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> object to transition from its current state into the closed state.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> 개체가 현재 상태에서 Closed 상태로 전환되도록 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.Close">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>을 참조하십시오.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.CreateChannel">
          <source>Returns a new channel to the service.</source>
          <target state="translated">서비스에 대한 새 채널을 반환합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.CreateChannel">
          <source>A channel of the type of the service contract.</source>
          <target state="translated">서비스 계약 형식의 채널입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.CreateChannel">
          <source>Returns the channel created by the inner channel factory.</source>
          <target state="translated">내부 채널 팩터리에서 만든 채널을 반환합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.CreateChannel">
          <source>Exceptions thrown by <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType&gt;</ph> can be expected here.</source>
          <target state="translated">여기서 <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType&gt;</ph>이 예외를 throw할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.DisplayInitializationUI">
          <source>Instructs the inner channel to display a user interface if one is required to initialize the channel prior to using it.</source>
          <target state="translated">채널을 초기화하는 데 사용자 인터페이스가 필요한 경우 채널을 사용하기 전에 내부 채널이 사용자 인터페이스를 표시하도록 합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.DisplayInitializationUI">
          <source>Call the <ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A&gt;</ph> method if the inner channel requires user interaction prior to constructing the channel.</source>
          <target state="translated">내부 채널에 사용자 조작이 필요한 경우 채널을 생성하기 전에 <ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A&gt;</ph> 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.DisplayInitializationUI">
          <source>For example, if a user must enter a username and password to secure the channel, that custom <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=nameWithType&gt;</ph> can be invoked by calling this method.</source>
          <target state="translated">예를 들어 사용자가 채널 보안을 위해 사용자 이름 및 암호를 입력해야 하는 경우, 이 메서드를 호출하여 해당 사용자 지정 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=nameWithType&gt;</ph>를 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ClientBase`1.Endpoint">
          <source>Gets the target endpoint for the service to which the <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client can connect.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 클라이언트가 연결할 수 있는 서비스의 대상 끝점을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ClientBase`1.Endpoint">
          <source>The target endpoint.</source>
          <target state="translated">대상 끝점입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ClientBase`1.Endpoint">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601.Endpoint%2A&gt;</ph> property to obtain the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType&gt;</ph> object to inspect or modify prior to using the <ph id="ph3">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601.Endpoint%2A&gt;</ph> 개체를 사용하기 전에 검사하거나 수정할 <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType&gt;</ph> 개체를 가져오려면 <ph id="ph3">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.GetDefaultValueForInitialization``1">
          <source>The type that is identified as reference or numeric by the keyword.</source>
          <target state="translated">키워드에 의해 참조 또는 숫자로 식별되는 형식입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.GetDefaultValueForInitialization``1">
          <source>Replicates the behavior of the default keyword in C#.</source>
          <target state="translated">C#에서 기본 키워드의 동작을 복제합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.GetDefaultValueForInitialization``1">
          <source>Returns <ph id="ph1">&lt;see langword="null" /&gt;</ph> if <ph id="ph2">&lt;see langword="T" /&gt;</ph> is a reference type and zero if <ph id="ph3">&lt;see langword="T" /&gt;</ph> is a numeric value type.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>가 참조 형식이면 <ph id="ph2">&lt;see langword="T" /&gt;</ph>을 반환하고 <ph id="ph3">&lt;see langword="T" /&gt;</ph>가 숫자 값 형식이면 0을 반환합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ClientBase`1.InnerChannel">
          <source>Gets the underlying <ph id="ph1">&lt;see cref="T:System.ServiceModel.IClientChannel" /&gt;</ph> implementation.</source>
          <target state="translated">내부 <ph id="ph1">&lt;see cref="T:System.ServiceModel.IClientChannel" /&gt;</ph> 구현을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ClientBase`1.InnerChannel">
          <source>The client channel for the <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client object.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 클라이언트 개체의 클라이언트 채널입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ClientBase`1.InnerChannel">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601.InnerChannel%2A&gt;</ph> property to obtain the <ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel?displayProperty=nameWithType&gt;</ph> that is used to connect to the service.</source>
          <target state="translated">서비스에 연결하는 데 사용되는 <ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601.InnerChannel%2A&gt;</ph>을 가져오려면 <ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel?displayProperty=nameWithType&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase`1.BeginOperationDelegate{`0},System.Object[],System.ServiceModel.ClientBase`1.EndOperationDelegate{`0},System.Threading.SendOrPostCallback,System.Object)">
          <source>A delegate that is used for calling the asynchronous operation.</source>
          <target state="translated">비동기 작업 호출에 사용되는 대리자입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase`1.BeginOperationDelegate{`0},System.Object[],System.ServiceModel.ClientBase`1.EndOperationDelegate{`0},System.Threading.SendOrPostCallback,System.Object)">
          <source>The input values to the asynchronous call.</source>
          <target state="translated">비동기 호출에 대한 입력 값입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase`1.BeginOperationDelegate{`0},System.Object[],System.ServiceModel.ClientBase`1.EndOperationDelegate{`0},System.Threading.SendOrPostCallback,System.Object)">
          <source>A delegate that is used to end the asynchronous call after it has completed.</source>
          <target state="translated">비동기 호출이 완료된 후 이를 종료하는 데 사용하는 대리자입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase`1.BeginOperationDelegate{`0},System.Object[],System.ServiceModel.ClientBase`1.EndOperationDelegate{`0},System.Threading.SendOrPostCallback,System.Object)">
          <source>A client-supplied callback that is invoked when the asynchronous method is complete.</source>
          <target state="translated">비동기 메서드가 완료될 때 호출되는 클라이언트 제공 콜백입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase`1.BeginOperationDelegate{`0},System.Object[],System.ServiceModel.ClientBase`1.EndOperationDelegate{`0},System.Threading.SendOrPostCallback,System.Object)">
          <source>The callback is passed to the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" /&gt;</ph>.</source>
          <target state="translated">이 콜백은 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" /&gt;</ph>에 전달됩니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase`1.BeginOperationDelegate{`0},System.Object[],System.ServiceModel.ClientBase`1.EndOperationDelegate{`0},System.Threading.SendOrPostCallback,System.Object)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>userState<ept id="p1">&lt;/c&gt;</ept> object to associate with the asynchronous call.</source>
          <target state="translated">비동기 호출과 연결할 <bpt id="p1">&lt;c&gt;</bpt>userState<ept id="p1">&lt;/c&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase`1.BeginOperationDelegate{`0},System.Object[],System.ServiceModel.ClientBase`1.EndOperationDelegate{`0},System.Threading.SendOrPostCallback,System.Object)">
          <source>Provides support for implementing the event-based asynchronous pattern.</source>
          <target state="translated">이벤트 기반 비동기 패턴을 구현하도록 지원합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase`1.BeginOperationDelegate{`0},System.Object[],System.ServiceModel.ClientBase`1.EndOperationDelegate{`0},System.Threading.SendOrPostCallback,System.Object)">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> this pattern, see <bpt id="p1">[</bpt>Event-based Asynchronous Pattern Overview<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md)</ept>.</source>
          <target state="translated">이 패턴(<ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph>)은 <bpt id="p1">[</bpt>이벤트 기반 비동기 패턴 개요<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md)</ept>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase`1.BeginOperationDelegate{`0},System.Object[],System.ServiceModel.ClientBase`1.EndOperationDelegate{`0},System.Threading.SendOrPostCallback,System.Object)">
          <source>Provide a unique value, such as a GUID or hash code, in the <ph id="ph1">`userState`</ph> parameter for each call to <ph id="ph2">&lt;xref:System.ServiceModel.ClientBase%601.InvokeAsync%28System.ServiceModel.ClientBase%7B%600%7D.BeginOperationDelegate%2CSystem.Object%5B%5D%2CSystem.ServiceModel.ClientBase%7B%600%7D.EndOperationDelegate%2CSystem.Threading.SendOrPostCallback%2CSystem.Object%29&gt;</ph>, and when each operation is completed, your event handler can determine which instance of the operation raised the completion event.</source>
          <target state="translated"><ph id="ph1">`userState`</ph>에 대한 각 호출의 <ph id="ph2">&lt;xref:System.ServiceModel.ClientBase%601.InvokeAsync%28System.ServiceModel.ClientBase%7B%600%7D.BeginOperationDelegate%2CSystem.Object%5B%5D%2CSystem.ServiceModel.ClientBase%7B%600%7D.EndOperationDelegate%2CSystem.Threading.SendOrPostCallback%2CSystem.Object%29&gt;</ph> 매개 변수에 고유한 값(예: GUID 또는 해시 코드)을 지정하여 각 작업이 완료될 때 이벤트 처리기가 완료 이벤트를 일으킨 작업 인스턴스를 확인할 수 있게 합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.Open">
          <source>Causes the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> object to transition from the created state into the opened state.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> 개체가 Created 상태에서 Opened 상태로 전환되도록 합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.Open">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>을 참조하십시오.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ClientBase`1.State">
          <source>Gets the current state of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> 개체의 현재 상태를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ClientBase`1.State">
          <source>The value of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.CommunicationState" /&gt;</ph> of the object.</source>
          <target state="translated">개체의 <ph id="ph1">&lt;see cref="T:System.ServiceModel.CommunicationState" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ClientBase`1.State">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>을 참조하십시오.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#IDisposable#Dispose">
          <source>Explicit implementation of the <ph id="ph1">&lt;see cref="M:System.IDisposable.Dispose" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IDisposable.Dispose" /&gt;</ph> 메서드의 명시적 구현입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.System#IDisposable#Dispose">
          <source>Closes the client object.</source>
          <target state="translated">클라이언트 개체를 닫습니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.System#IDisposable#Dispose">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>을 참조하십시오.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ClientBase`1">
          <source>Begins an asynchronous operation to close the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph>를 닫기 위한 비동기 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
          <source>The method that receives the callback on completion.</source>
          <target state="translated">완료 시 콜백을 받는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
          <source>The state data.</source>
          <target state="translated">상태 데이터입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to close the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph>를 닫기 위한 비동기 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous close operation.</source>
          <target state="translated">비동기 닫기 작업을 참조하는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>을 참조하십시오.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The period within which the call must complete.</source>
          <target state="translated">호출이 완료되어야 하는 기간입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The callback object invoked when the operation completes.</source>
          <target state="translated">작업 완료 시 호출되는 콜백 개체입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The state data.</source>
          <target state="translated">상태 데이터입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to close the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> with a specified timeout.</source>
          <target state="translated">지정된 제한 시간 내에 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph>를 닫기 위한 비동기 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous begin close operation.</source>
          <target state="translated">비동기 닫기 시작 작업을 참조하는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>을 참조하십시오.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ClientBase`1">
          <source>Begins an asynchronous operation to open the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> 개체를 열기 위한 비동기 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
          <source>The method that receives the callback on completion.</source>
          <target state="translated">완료 시 콜백을 받는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
          <source>The state data.</source>
          <target state="translated">상태 데이터입니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to open the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> 개체를 열기 위한 비동기 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous open operation.</source>
          <target state="translated">비동기 열기 작업을 참조하는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>을 참조하십시오.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The time within which the call must complete.</source>
          <target state="translated">호출이 완료되어야 하는 시간입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method that receives the callback on completion.</source>
          <target state="translated">완료 시 콜백을 받는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The state data.</source>
          <target state="translated">상태 데이터입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to open the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> object within a specified interval of time.</source>
          <target state="translated">지정된 시간 간격 내에 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> 개체를 열기 위한 비동기 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous open operation.</source>
          <target state="translated">비동기 열기 작업을 참조하는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>을 참조하십시오.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
          <source>The time within which the call must complete.</source>
          <target state="translated">호출이 완료되어야 하는 시간입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
          <source>Causes the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> object to transition from its current state into the closed state.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> 개체가 현재 상태에서 Closed 상태로 전환되도록 합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>을 참조하십시오.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> used to complete the asynchronous close operation.</source>
          <target state="translated">비동기 닫기 작업을 완료하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
          <source>Completes an asynchronous operation to close the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> 개체를 닫기 위한 비동기 작업을 완료합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>을 참조하십시오.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> used to complete the asynchronous end open operation.</source>
          <target state="translated">비동기 열기 종료 작업을 완료하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
          <source>Completes an asynchronous operation to open the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> 개체를 열기 위한 비동기 작업을 완료합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>을 참조하십시오.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
          <source>The time period within which the call must complete.</source>
          <target state="translated">호출이 완료되어야 하는 기간입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
          <source>Causes the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> object to transition from the created state into the opened state within a specified interval of time.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> 개체가 지정된 시간 간격 내에 Created 상태에서 Opened 상태로 전환되도록 합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>을 참조하십시오.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>