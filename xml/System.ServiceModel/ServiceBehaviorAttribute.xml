<Type Name="ServiceBehaviorAttribute" FullName="System.ServiceModel.ServiceBehaviorAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="17070c85f228ee7676168b3d7c5aa05d14bfc1c8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36610052" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ServiceBehaviorAttribute : Attribute, System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ServiceBehaviorAttribute extends System.Attribute implements class System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ServiceBehaviorAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ServiceBehaviorAttribute&#xA;Inherits Attribute&#xA;Implements IServiceBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceBehaviorAttribute sealed : Attribute, System::ServiceModel::Description::IServiceBehavior" />
  <TypeSignature Language="F#" Value="type ServiceBehaviorAttribute = class&#xA;    inherit Attribute&#xA;    interface IServiceBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IServiceBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="903ec-101">서비스 계약 구현의 내부 실행 동작을 지정합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="903ec-101">Specifies the internal execution behavior of a service contract implementation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903ec-102">서비스 전체 실행 동작을 지정하려면 <xref:System.ServiceModel.ServiceBehaviorAttribute> 특성을 서비스 구현에 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-102">Apply the <xref:System.ServiceModel.ServiceBehaviorAttribute> attribute to a service implementation to specify service-wide execution behavior.</span></span> <span data-ttu-id="903ec-103">메서드 수준에서 실행 동작을 지정하려면 <xref:System.ServiceModel.OperationBehaviorAttribute> 특성을 사용합니다. 이 특성은 서비스 구현에만 적용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-103">(To specify execution behavior at the method level, use the <xref:System.ServiceModel.OperationBehaviorAttribute> attribute.) This attribute can be applied only to service implementations.</span></span> <span data-ttu-id="903ec-104">작업 예제를 보려면을 참조 하십시오.는 [서비스 동작 샘플](http://msdn.microsoft.com/library/4e3c6513-a7ff-4b35-8dcf-b5506c6f39a7)합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-104">For working examples, see the [Service Behaviors Samples](http://msdn.microsoft.com/library/4e3c6513-a7ff-4b35-8dcf-b5506c6f39a7).</span></span>  
  
 <span data-ttu-id="903ec-105"><xref:System.ServiceModel.ServiceBehaviorAttribute> 속성은는 Windows Communication Foundation (WCF) 프로그래밍 모델 기능으로는 개발자가 구현 해야 하는 일반적인 기능입니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-105"><xref:System.ServiceModel.ServiceBehaviorAttribute> properties are a Windows Communication Foundation (WCF) programming model feature that enables common features that developers otherwise have to implement.</span></span> <span data-ttu-id="903ec-106">이러한 오류 코드 및 기타 동작에 대 한 자세한 내용은 참조 [서비스 런타임 동작 지정](~/docs/framework/wcf/specifying-service-run-time-behavior.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-106">For more information about these and other behaviors, see [Specifying Service Run-Time Behavior](~/docs/framework/wcf/specifying-service-run-time-behavior.md).</span></span> <span data-ttu-id="903ec-107">기본 런타임 속성에 대 한 자세한 내용은 참조는 다음 속성 집합의 일부는 [확장 ServiceHost 및 서비스 모델 계층](~/docs/framework/wcf/extending/extending-servicehost-and-the-service-model-layer.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-107">For more information about the underlying runtime properties that some of the following properties set, see [Extending ServiceHost and the Service Model Layer](~/docs/framework/wcf/extending/extending-servicehost-and-the-service-model-layer.md).</span></span>  
  
-   <span data-ttu-id="903ec-108"><xref:System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode%2A> 속성은 디스패처 시스템이 요청을 처리하는 끝점을 찾을 때 사용하는 필터의 형식을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-108">The <xref:System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode%2A> property specifies the type of filter that the dispatcher system uses to locate the endpoint that handles requests.</span></span>  
  
-   <span data-ttu-id="903ec-109"><xref:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown%2A> 속성은 채널이 닫히고 서비스가 나머지 메시지의 처리를 마쳤을 때 자동으로 세션을 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-109">The <xref:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown%2A> property automatically closes the session when the channel is closed and the service has finished processing any remaining messages.</span></span>  
  
-   <span data-ttu-id="903ec-110"><xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> 속성은 내부 스레딩 모델을 제어하여 재진입 콜백 개체나 다중 스레드 서비스의 지원을 가능하게 합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-110">The <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> property controls the internal threading model, enabling support for reentrant or multithreaded services.</span></span>  
  
-   <span data-ttu-id="903ec-111"><xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A> 속성은 구성 파일에서 `name` 요소의 `<service>` 특성에 사용할 이름을 선언하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-111">The <xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A> property is used to declare a name for use in the `name` attribute of the `<service>` element in a configuration file.</span></span>  
  
-   <span data-ttu-id="903ec-112"><xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A> 속성을 사용하면 런타임은 메시지 처리에 필요 없는 추가 serialization 정보를 무시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-112">The <xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A> property enables the run time to ignore extra serialization information that is not required to process the message.</span></span>  
  
-   <span data-ttu-id="903ec-113"><xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A> 속성은 서비스에서 처리되지 않은 예외가 SOAP 오류로 반환되는지 여부를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-113">The <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A> property specifies whether unhandled exceptions in a service are returned as SOAP faults.</span></span> <span data-ttu-id="903ec-114">이 속성은 디버깅 용도로만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-114">This is for debugging purposes only.</span></span>  
  
-   <span data-ttu-id="903ec-115"><xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> 속성은 클라이언트와의 교환 과정에서 서비스 및 해당 서비스 개체를 재활용할 것인지 여부 및 그 시기를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-115">The <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> property specifies whether and when services and their service objects are to be recycled during an exchange with a client.</span></span>  
  
-   <span data-ttu-id="903ec-116"><xref:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph%2A> 속성은 개체 그래프에서 serialize되는 항목의 수를 제한합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-116">The <xref:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph%2A> property to limit on the number of items in an object graph that are serialized.</span></span>  
  
-   <span data-ttu-id="903ec-117"><xref:System.ServiceModel.ServiceBehaviorAttribute.Name%2A> 및 <xref:System.ServiceModel.ServiceBehaviorAttribute.Namespace%2A> 속성은 서비스 요소의 WSDL 식에 사용되는 이름과 네임스페이스를 제어합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-117">The <xref:System.ServiceModel.ServiceBehaviorAttribute.Name%2A> and <xref:System.ServiceModel.ServiceBehaviorAttribute.Namespace%2A> properties control the name and namespace for the WSDL expression of the service element.</span></span>  
  
-   <span data-ttu-id="903ec-118"><xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> 속성은 트랜잭션이 완료되었을 때 서비스 개체가 재활용되는지 여부를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-118">The <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> property specifies whether the service object is recycled when a transaction completes.</span></span>  
  
-   <span data-ttu-id="903ec-119"><xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose%2A> 속성에서는 세션을 닫을 때 처리되지 않은 트랜잭션을 완료할 것인지 여부를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-119">The <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose%2A> property specifies whether outstanding transactions are completed when the session closes.</span></span>  
  
-   <span data-ttu-id="903ec-120"><xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel%2A> 속성은 계약이 지원하는 트랜잭션 격리 수준을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-120">The <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel%2A> property specifies the transaction isolation level that the contract supports.</span></span>  
  
-   <span data-ttu-id="903ec-121"><xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout%2A> 속성은 트랜잭션 완료가 이루어지지 않으면 중단되는 기간을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-121">The <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout%2A> property specifies the time period within which a transaction must complete or it aborts.</span></span>  
  
-   <span data-ttu-id="903ec-122"><xref:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext%2A> 속성은 인바운드 메서드 호출을 사용자 인터페이스 스레드와 자동으로 동기화하는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-122">The <xref:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext%2A> property indicates whether to synchronize inbound method calls with the user interface thread automatically.</span></span>  
  
-   <span data-ttu-id="903ec-123"><xref:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand%2A> 속성은 `MustUnderstand`로 표시된 SOAP 헤더가 실제로 인식되었음을 확인해야 하는지 여부를 시스템에 알려 줍니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-123">The <xref:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand%2A> property informs the system whether it should confirm that SOAP headers marked as `MustUnderstand` have, in fact, been understood.</span></span>  
  
 <span data-ttu-id="903ec-124"><xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A> 속성은 응용 프로그램 구성 파일을 사용하여 설정할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-124">The <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A> property can also be set using an application configuration file.</span></span> <span data-ttu-id="903ec-125">자세한 내용은 <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="903ec-125">For details, see <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="903ec-126">다음 코드 예제에서는 <xref:System.ServiceModel.ServiceBehaviorAttribute> 속성을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-126">The following code example demonstrates the <xref:System.ServiceModel.ServiceBehaviorAttribute> properties.</span></span> <span data-ttu-id="903ec-127">`BehaviorService` 클래스는 <xref:System.ServiceModel.ServiceBehaviorAttribute> 특성을 사용하여 다음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-127">The `BehaviorService` class uses the <xref:System.ServiceModel.ServiceBehaviorAttribute> attribute to indicate that:</span></span>  
  
-   <span data-ttu-id="903ec-128">트랜잭션이 완료되면 서비스 개체가 재활용됩니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-128">The service object is recycled when the transaction completes.</span></span>  
  
-   <span data-ttu-id="903ec-129">세션별로 서비스 개체가 하나씩 있습니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-129">There is one service object for each session.</span></span>  
  
-   <span data-ttu-id="903ec-130">서비스는 단일 스레드이며 재진입 호출을 지원하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-130">The service is single-threaded and does not support reentrant calls.</span></span>  
  
 <span data-ttu-id="903ec-131">또한 작업 수준에서 <xref:System.ServiceModel.OperationBehaviorAttribute> 값은 `TxWork` 메서드가 흐름이 지정된 트랜잭션에 자동으로 참여하거나 작업 수행을 위해 새로운 트랜잭션을 생성함을 나타내며 처리되지 않은 예외가 발생하지 않으면 트랜잭션이 자동으로 커밋됨을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-131">Furthermore, at the operation level, the <xref:System.ServiceModel.OperationBehaviorAttribute> values indicate that the `TxWork` method automatically enlists in flowed transactions or creates a new transaction to do the work, and that the transaction is committed automatically if an unhandled exception does not occur.</span></span>  
  
 [!code-csharp[OperationBehaviorAttribute1#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute1/cs/services.cs#2)]
 [!code-vb[OperationBehaviorAttribute1#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute1/vb/services.vb#2)]  
  
 <span data-ttu-id="903ec-132">다음 코드 예제가 제대로 실행되려면 기본 바인딩에서 트랜잭션 이동을 지원해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-132">The underlying binding must support flowed transactions for the following code example to execute properly.</span></span> <span data-ttu-id="903ec-133">예를 들어, <xref:System.ServiceModel.WSHttpBinding>을 사용하여 트랜잭션 이동을 지원하려면 코드 또는 응용 프로그램 구성 파일에서 <xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A> 속성을 `true`로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-133">To support flowed transactions using the <xref:System.ServiceModel.WSHttpBinding>, for example, set the <xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A> property to `true` in code or in an application configuration file.</span></span> <span data-ttu-id="903ec-134">다음 코드 예제에서는 앞에 나온 샘플에 대한 구성 파일을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-134">The following code example shows the configuration file for the preceding sample.</span></span>  
  
 [!code-xml[OperationBehaviorAttribute1#1](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute1/cs/hostapplication.exe.config#1)]   
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceModel.OperationBehaviorAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceBehaviorAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceBehaviorAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceBehaviorAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="903ec-135">
            <see cref="T:System.ServiceModel.ServiceBehaviorAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-135">Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceBehaviorAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903ec-136"><xref:System.ServiceModel.ServiceBehaviorAttribute>의 기본값은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-136">The default values for the <xref:System.ServiceModel.ServiceBehaviorAttribute> are:</span></span>  
  
-   <span data-ttu-id="903ec-137"><xref:System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode%2A>는 <xref:System.ServiceModel.AddressFilterMode.Exact>로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-137">The <xref:System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode%2A> is set to <xref:System.ServiceModel.AddressFilterMode.Exact>.</span></span>  
  
-   <span data-ttu-id="903ec-138"><xref:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown%2A> 속성은 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-138">The <xref:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown%2A> property is `true`.</span></span>  
  
-   <span data-ttu-id="903ec-139"><xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A>는 <xref:System.ServiceModel.ConcurrencyMode.Single>로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-139">The <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> is set to <xref:System.ServiceModel.ConcurrencyMode.Single>.</span></span>  
  
-   <span data-ttu-id="903ec-140"><xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A> 속성은 어셈블리 정보가 없는, 네임스페이스 정규화된 형식 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-140">The <xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A> property is the namespace-qualified name of the type without the assembly information.</span></span>  
  
-   <span data-ttu-id="903ec-141"><xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A> 속성은 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-141">The <xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A> property is `false`.</span></span>  
  
-   <span data-ttu-id="903ec-142"><xref:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph%2A> 속성은 64KB로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-142">The <xref:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph%2A> property is set to 64KB.</span></span>  
  
-   <span data-ttu-id="903ec-143"><xref:System.ServiceModel.ServiceBehaviorAttribute.Name%2A> 속성은 네임스페이스 또는 어셈블리 정보가 없는, 서비스 형식 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-143">The <xref:System.ServiceModel.ServiceBehaviorAttribute.Name%2A> property is the name of the service type, without namespace or assembly information.</span></span>  
  
-   <span data-ttu-id="903ec-144"><xref:System.ServiceModel.ServiceBehaviorAttribute.Namespace%2A> 속성은 "http://tempuri.org"입니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-144">The <xref:System.ServiceModel.ServiceBehaviorAttribute.Namespace%2A> property is "http://tempuri.org".</span></span>  
  
-   <span data-ttu-id="903ec-145"><xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> 속성은 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-145">The <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> property is `true`.</span></span>  
  
-   <span data-ttu-id="903ec-146"><xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A>가 `false`인 경우</span><span class="sxs-lookup"><span data-stu-id="903ec-146"><xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A> is `false`.</span></span>  
  
-   <span data-ttu-id="903ec-147"><xref:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext%2A>가 `true`인 경우</span><span class="sxs-lookup"><span data-stu-id="903ec-147"><xref:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext%2A> is `true`.</span></span>  
  
-   <span data-ttu-id="903ec-148"><xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose%2A> 속성은 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-148">The <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose%2A> property is `false`.</span></span>  
  
-   <span data-ttu-id="903ec-149"><xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel%2A> 속성은 <xref:System.Transactions.IsolationLevel.Unspecified>입니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-149">The <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel%2A> property is <xref:System.Transactions.IsolationLevel.Unspecified>.</span></span>  
  
-   <span data-ttu-id="903ec-150"><xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout%2A> 속성은 <xref:System.TimeSpan.Zero>로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-150">The <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout%2A> property is set to <xref:System.TimeSpan.Zero>.</span></span>  
  
-   <span data-ttu-id="903ec-151"><xref:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand%2A> 속성은 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-151">The <xref:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand%2A> property is `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddressFilterMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.AddressFilterMode AddressFilterMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.AddressFilterMode AddressFilterMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AddressFilterMode As AddressFilterMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::AddressFilterMode AddressFilterMode { System::ServiceModel::AddressFilterMode get(); void set(System::ServiceModel::AddressFilterMode value); };" />
      <MemberSignature Language="F#" Value="member this.AddressFilterMode : System.ServiceModel.AddressFilterMode with get, set" Usage="System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.AddressFilterMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="903ec-152">디스패처가 들어오는 메시지를 올바른 끝점으로 라우팅하는 데 사용하는 <see cref="T:System.ServiceModel.AddressFilterMode" />를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-152">Gets or sets the <see cref="T:System.ServiceModel.AddressFilterMode" /> that is used by the dispatcher to route incoming messages to the correct endpoint.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="903ec-153">디스패처가 들어오는 메시지를 올바른 끝점으로 라우팅하는 데 사용하는 <see cref="T:System.ServiceModel.AddressFilterMode" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-153">The <see cref="T:System.ServiceModel.AddressFilterMode" /> object that is used by the dispatcher to route incoming messages to the correct endpoint.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="903ec-154">값이 <see cref="T:System.ServiceModel.AddressFilterMode" /> 값 중 하나가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-154">The value is not one of the <see cref="T:System.ServiceModel.AddressFilterMode" /> values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AutomaticSessionShutdown">
      <MemberSignature Language="C#" Value="public bool AutomaticSessionShutdown { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutomaticSessionShutdown" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown" />
      <MemberSignature Language="VB.NET" Value="Public Property AutomaticSessionShutdown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutomaticSessionShutdown { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutomaticSessionShutdown : bool with get, set" Usage="System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="903ec-155">클라이언트가 출력 세션을 닫을 때 세션을 자동으로 닫을지 여부를 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-155">Specifies whether to automatically close a session when a client closes an output session.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="903ec-156">클라이언트가 출력 세션을 닫을 때 서비스가 자동으로 세션을 닫으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-156">
              <see langword="true" /> if services automatically close a session when the client closes an output session; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="903ec-157">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-157">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903ec-158">기본적으로 클라이언트가 출력 세션을 닫고 서비스에서 나머지 메시지 처리를 마치면 서버는 해당 세션을 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-158">By default when a client closes an output session and the service has finished processing any remaining messages the server closes the session.</span></span> <span data-ttu-id="903ec-159"><xref:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown%2A>을 `false`로 설정하면 서버에서 세션을 자동으로 닫지 못하고 세션 수명에 대한 사용자 지정 컨트롤이 활성화됩니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-159">Setting <xref:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown%2A> to `false` prevents the server from automatically closing the session and enables custom control of session lifetimes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConcurrencyMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ConcurrencyMode ConcurrencyMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.ConcurrencyMode ConcurrencyMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ConcurrencyMode As ConcurrencyMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ConcurrencyMode ConcurrencyMode { System::ServiceModel::ConcurrencyMode get(); void set(System::ServiceModel::ConcurrencyMode value); };" />
      <MemberSignature Language="F#" Value="member this.ConcurrencyMode : System.ServiceModel.ConcurrencyMode with get, set" Usage="System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ConcurrencyMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="903ec-160">서비스가 하나의 스레드, 여러 개의 스레드 또는 재진입 호출을 지원할지 여부를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-160">Gets or sets whether a service supports one thread, multiple threads, or reentrant calls.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="903ec-161">
            <see cref="T:System.ServiceModel.ConcurrencyMode" /> 값 중 하나입니다. 기본값은 <see cref="F:System.ServiceModel.ConcurrencyMode.Single" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-161">One of the <see cref="T:System.ServiceModel.ConcurrencyMode" /> values; the default is <see cref="F:System.ServiceModel.ConcurrencyMode.Single" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903ec-162">이 속성은 서비스의 인스턴스가 하나의 스레드 또는 동시에 실행되는 여러 스레드를 처리하는지 여부 그리고 단일 스레드인 경우 재진입이 지원되는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-162">This property indicates whether an instance of a service can handle one thread or multiple threads that execute concurrently, and if single-threaded, whether reentrancy is supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="903ec-163"><xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> 속성은 다른 설정과 상호 작용합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-163">The <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> property interacts with some other settings.</span></span> <span data-ttu-id="903ec-164">예를 들어, <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> 값을 <xref:System.ServiceModel.InstanceContextMode.Single>로 설정한 경우 <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> 값을 <xref:System.ServiceModel.ConcurrencyMode.Multiple>로 설정하지 않으면 서비스에서 한 번에 하나의 메시지만 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-164">For example, if the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> value is set to <xref:System.ServiceModel.InstanceContextMode.Single> the result is that your service can only process one message at a time unless you also set the <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> value to <xref:System.ServiceModel.ConcurrencyMode.Multiple>.</span></span> <span data-ttu-id="903ec-165">또한 이 속성은 <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=nameWithType> 속성과 함께 동작을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-165">This property also produces behavior in combination with the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="903ec-166">자세한 내용은 참조 [세션과 Instancing, 동시성](~/docs/framework/wcf/feature-details/sessions-instancing-and-concurrency.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-166">For details, see [Sessions, Instancing, and Concurrency](~/docs/framework/wcf/feature-details/sessions-instancing-and-concurrency.md).</span></span>  
  
 <span data-ttu-id="903ec-167"><xref:System.ServiceModel.ConcurrencyMode>를 <xref:System.ServiceModel.ConcurrencyMode.Single>로 설정하면 시스템은 서비스의 인스턴스를 한 번에 하나의 실행 스레드로 제한하므로, 스레딩 문제를 처리하지 않아도 됩니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-167">Setting <xref:System.ServiceModel.ConcurrencyMode> to <xref:System.ServiceModel.ConcurrencyMode.Single> instructs the system to restrict instances of the service to one thread of execution at a time, which frees you from dealing with threading issues.</span></span> <span data-ttu-id="903ec-168">값이 <xref:System.ServiceModel.ConcurrencyMode.Multiple>이면 언제든지 한 번에 여러 스레드가 서비스 개체를 실행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-168">A value of <xref:System.ServiceModel.ConcurrencyMode.Multiple> means that service objects can be executed by multiple threads at any one time.</span></span> <span data-ttu-id="903ec-169">이런 경우 스레드 안전성을 확인해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-169">In this case, you must ensure thread safety.</span></span>  
  
 <span data-ttu-id="903ec-170"><xref:System.ServiceModel.ConcurrencyMode.Reentrant> 또한; 한 번에 스레드 하나에 액세스를 제한 작업을 처리 하는 동안 다른 메시지가 작업을 입력할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-170"><xref:System.ServiceModel.ConcurrencyMode.Reentrant> also restricts access to a single thread at a time; while the operation is processing, no other message can enter the operation.</span></span> <span data-ttu-id="903ec-171">작업 중에 다른 서비스에 대한 호출이 발생하면 현재 메시지는 해당 작업에 대한 잠금을 해제하며 따라서 이 작업은 다른 메시지를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-171">If during the operation a call to another service leaves, the current message loses the lock on the operation, which is free to process other messages.</span></span> <span data-ttu-id="903ec-172">서비스 호출이 반환되면 잠금이 다시 설정되고 원래의 메시지가 처리 완료 시까지 또는 해당 작업에 대한 다른 호출이 발생할 때까지 처리를 계속할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-172">When the service call out returns, the lock is reestablished and the original message can continue processing to its conclusion or until another call out of the operation occurs.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="903ec-173">경우에 <xref:System.ServiceModel.ConcurrencyMode.Single> 인스턴스 제한에 서비스 실행 한 번에 하나의 스레드를 설정 해야 <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls%2A> 을 1로의 순서가 메시지가 보장 합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-173">Even though <xref:System.ServiceModel.ConcurrencyMode.Single> restricts instances of the service to one thread of execution at a time, you must also set <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls%2A> to 1 to guarantee no out-of-order messages.</span></span>  
>   
>  <span data-ttu-id="903ec-174">또한을 설명선 전에 일관성 있는 개체 상태를 유지 되며 후 작업-로컬 데이터가 유효한 지 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-174">Also, it is your responsibility to leave your object state consistent before callouts and you must confirm that operation-local data is valid after callouts.</span></span> <span data-ttu-id="903ec-175">서비스 인스턴스는 WCF 채널을 통해 다른 서비스를 호출하는 방법으로만 잠금 해제됩니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-175">Note that the service instance is unlocked only by calling another service over a WCF channel.</span></span> <span data-ttu-id="903ec-176">이런 경우 호출된 서비스는 콜백을 통해 첫 번째 서비스에 재진입할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-176">In this case, the called service can reenter the first service via a callback.</span></span> <span data-ttu-id="903ec-177">첫 번째 서비스가 재진입이 아닌 경우 호출 시퀀스는 교착 상태에 빠지게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-177">If the first service is not reentrant, the sequence of calls results in a deadlock.</span></span> <span data-ttu-id="903ec-178">자세한 내용은 <xref:System.ServiceModel.ConcurrencyMode>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="903ec-178">For details, see <xref:System.ServiceModel.ConcurrencyMode>.</span></span>  
  
 <span data-ttu-id="903ec-179">처리 중인 작업에서 아웃바운드 호출 도중, 해당 작업에 속하지 않은 데이터를 수정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-179">During any outbound call from a processing operation, data not local to the operation can be modified.</span></span> <span data-ttu-id="903ec-180">원래의 메시지가 다시 처리를 시작할 때 로컬 상태 데이터는 항상 유효합니다. 따라서 아웃바운드 호출에 앞서 먼저, 작업에 속하지 않은 데이터가 다른 들어오는 호출에 대해 유효한지 확인하고, 아웃바운드 호출 반환 후에는 작업에 속하지 않은 데이터의 유효성을 다시 검사해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-180">(Local state data is guaranteed to be valid when the original message resumes processing.) As a result, before your outbound call you must ensure that non-local data is valid for other incoming calls and revalidate non-local data after the outbound call returns.</span></span>  
  
 <span data-ttu-id="903ec-181">다음 의사(pseudo) 코드에서는 성공적인 재진입 지원에 필요한 패턴을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-181">The following pseudo-code illustrates the required pattern for successful reentrant support.</span></span>  
  
```csharp  
public void MyMethod()  
{  
  this.SomeNonLocalDataState;  
  // Here you need to clean nonlocal state for other users  
  OutboundProxy proxy = new OutboundProxy();  
  int returnValue = proxy.CallOutOfOperation();  
  // Ensure that this.SomeNonLocalDataState is valid for continued use.  
  this.ModifyNonLocalState;  
  return returnValue;  
}  
  
```  
  
 <span data-ttu-id="903ec-182"><xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A>가 <xref:System.ServiceModel.ConcurrencyMode.Reentrant>일 때 아웃바운드 호출에 대해 Begin/End 비동기 호출 패턴을 사용하면 예외가 트리거됩니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-182">Using the Begin/End asynchronous call pattern for an outbound call when the <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> is <xref:System.ServiceModel.ConcurrencyMode.Reentrant> triggers an exception.</span></span> <span data-ttu-id="903ec-183">비동기 아웃바운드 호출에서는 <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A>가 <xref:System.ServiceModel.ConcurrencyMode.Multiple>인 작업이 필요하며, 이 경우 사용자는 동기화 문제를 처리해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-183">Asynchronous outbound calls require an operation in which <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> is <xref:System.ServiceModel.ConcurrencyMode.Multiple>, in which case you must handle synchronization issues.</span></span>  
  
 <span data-ttu-id="903ec-184">일반적으로 인스턴스에 대해 동시성 모드를 위반하는 메시지가 도착할 경우 그 메시지는 인스턴스가 사용 가능해지거나 시간 제한이 초과할 때까지 대기합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-184">Generally, if a message arrives for an instance that violates its concurrency mode, the message waits until the instance is available, or until it times out.</span></span>  
  
 <span data-ttu-id="903ec-185">또한 <xref:System.ServiceModel.ConcurrencyMode>가 <xref:System.ServiceModel.ConcurrencyMode.Single>로 설정되었으며 인스턴스가 해제될 때까지 기다리는 동안 재진입 호출이 차단되는 경우, 시스템은 교착 상태를 감지하고 예외를 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-185">In addition, if the <xref:System.ServiceModel.ConcurrencyMode> is set to <xref:System.ServiceModel.ConcurrencyMode.Single> and a reentrant call is blocked while waiting for the instance to be freed, the system detects the deadlock and throws an exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="903ec-186"><xref:System.InvalidOperationException> 속성이 <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A>로 설정된 상태에서 `true`가 <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A>인 경우에는 런타임에 <xref:System.ServiceModel.ConcurrencyMode.Single>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-186">A <xref:System.InvalidOperationException> is thrown at runtime if <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> is `true` when the <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> property is set to <xref:System.ServiceModel.ConcurrencyMode.Single>.</span></span>  
  
 <span data-ttu-id="903ec-187"><xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A>이 true로 설정된 작업이 있고 `false`를 <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A?displayProperty=nameWithType>로 설정한 경우, 명시적으로 <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A>를 <xref:System.ServiceModel.ConcurrencyMode.Reentrant>로 설정해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-187">Note that you must explicitly set <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> to `false` if there is an operation with <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A?displayProperty=nameWithType> set to true and you set <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> to <xref:System.ServiceModel.ConcurrencyMode.Reentrant>.</span></span> <span data-ttu-id="903ec-188">그렇지 않으면, <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A>의 기본값이 `true`이므로 유효성 검사 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-188">Otherwise a validation exception is thrown because the default value of <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> is `true`.</span></span>  
  
 <span data-ttu-id="903ec-189"><xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A>와 다른 속성 간의 상호 작용이 있어서 런타임 동작을 바꿀 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-189">There is an interaction of the <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> and other properties that can alter runtime behavior.</span></span> <span data-ttu-id="903ec-190">이러한 상호 작용 설명과 참조 [세션과 Instancing, 동시성](~/docs/framework/wcf/feature-details/sessions-instancing-and-concurrency.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-190">For a complete description of these interactions, see [Sessions, Instancing, and Concurrency](~/docs/framework/wcf/feature-details/sessions-instancing-and-concurrency.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="903ec-191">다음 코드 예제에서는 <xref:System.ServiceModel.ConcurrencyMode.Single>, <xref:System.ServiceModel.ConcurrencyMode.Reentrant> 및 <xref:System.ServiceModel.ConcurrencyMode.Multiple>을 사용했을 때의 차이점을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-191">The following code example demonstrates the different between using <xref:System.ServiceModel.ConcurrencyMode.Single>, <xref:System.ServiceModel.ConcurrencyMode.Reentrant>, and <xref:System.ServiceModel.ConcurrencyMode.Multiple>.</span></span> <span data-ttu-id="903ec-192">이 샘플을 실제 구현이 없이 컴파일되지 않습니다. 하지만 Windows Communication Foundation (WCF) 만들고 사용자의 작업 코드에 대 한 의미를 보장 스레딩의 종류를 보여지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-192">This sample does not compile without a real implementation behind it, but does demonstrate the kind of threading guarantees that Windows Communication Foundation (WCF) makes and what that means for your operation code.</span></span>  
  
 [!code-csharp[C_BestPractices-Concurrency#1](~/samples/snippets/csharp/VS_Snippets_CFX/c_bestpractices-concurrency/cs/reentrantandmultiple.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="903ec-193">값이 <see cref="T:System.ServiceModel.ConcurrencyMode" /> 값 중 하나가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-193">The value is not one of the <see cref="T:System.ServiceModel.ConcurrencyMode" /> values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConfigurationName">
      <MemberSignature Language="C#" Value="public string ConfigurationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConfigurationName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName" />
      <MemberSignature Language="VB.NET" Value="Public Property ConfigurationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConfigurationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConfigurationName : string with get, set" Usage="System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="903ec-194">응용 프로그램 구성 파일에서 서비스 요소를 찾는 데 사용되는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-194">Gets or sets the value used to locate the service element in an application configuration file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="903ec-195">구성 파일에서 찾을 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-195">The value to locate in the configuration file.</span>
          </span>
          <span data-ttu-id="903ec-196">기본값은 어셈블리 정보가 없는, 정규화된 형식 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-196">The default value is the fully qualified type name without assembly information.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903ec-197">구성 파일에서 특정 서비스를 지정하려면 이 값을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-197">Use this value to specify a particular service in the configuration file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="903ec-198">값이 null인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-198">The value is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="903ec-199">값이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-199">The value is an empty string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EnsureOrderedDispatch">
      <MemberSignature Language="C#" Value="public bool EnsureOrderedDispatch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnsureOrderedDispatch" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch" />
      <MemberSignature Language="VB.NET" Value="Public Property EnsureOrderedDispatch As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnsureOrderedDispatch { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnsureOrderedDispatch : bool with get, set" Usage="System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="903ec-200">서비스에서 주문한 디스패치를 확인하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-200">Gets or sets a value that indicates whether the service ordered dispatch is ensured.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="903ec-201">서비스에서 주문한 디스패치를 확인하면 <see langword="True" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-201">
              <see langword="True" /> if the service ordered dispatch is ensured; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="903ec-202">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-202">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWellKnownSingleton">
      <MemberSignature Language="C#" Value="public object GetWellKnownSingleton ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetWellKnownSingleton() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWellKnownSingleton () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetWellKnownSingleton();" />
      <MemberSignature Language="F#" Value="member this.GetWellKnownSingleton : unit -&gt; obj" Usage="serviceBehaviorAttribute.GetWellKnownSingleton " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="903ec-203">서비스를 구현하고 서비스의 단일 인스턴스로 사용되는 개체를 검색하며, 단일 인스턴스가 없는 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-203">Retrieves an object that implements the service and that is used as the singleton instance of the service, or <see langword="null" /> if there is no singleton instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="903ec-204">서비스의 구현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-204">An implementation of the service.</span>
          </span>
          <span data-ttu-id="903ec-205">기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-205">The default value is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903ec-206">값이 `null`이 아닌 경우, 서비스에 전달되도록 주소가 지정된 모든 메시지를 디스패치할 대상 서비스 인스턴스가 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-206">A non-`null` value provides the service instance to which all messages addressed to the service will be dispatched.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreExtensionDataObject">
      <MemberSignature Language="C#" Value="public bool IgnoreExtensionDataObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreExtensionDataObject" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreExtensionDataObject As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreExtensionDataObject { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreExtensionDataObject : bool with get, set" Usage="System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="903ec-207">네트워크에서 알 수 없는 serialization 데이터를 보낼지 여부를 지정하는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-207">Gets or sets a value that specifies whether to send unknown serialization data onto the wire.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="903ec-208">알 수 없는 serialization 데이터를 보내지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-208">
              <see langword="true" /> if unknown serialization data is never sent; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="903ec-209">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-209">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903ec-210"><xref:System.Runtime.Serialization.IExtensibleDataObject> 인터페이스를 구현하는 형식의 경우 이 형식은 해당 형식으로 deserialize할 때 연결을 통해 도착한 알 수 없는 추가 데이터를 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-210">If a type implements the <xref:System.Runtime.Serialization.IExtensibleDataObject> interface, it stores any extra data it doesn’t know about that comes over the wire when deserializing into that type.</span></span> <span data-ttu-id="903ec-211">예를 들어, `Person` 형식에 `FirstName` 및 `LastName`이라는 멤버가 있으며 `PhoneNumber`라는 요소가 도착하면 이 요소가 저장됩니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-211">For example, if a type `Person` has members `FirstName` and `LastName`, and an element called `PhoneNumber` comes in, it is stored.</span></span> <span data-ttu-id="903ec-212">나중에 이 형식을 serialize할 때 `PhoneNumber`를 다시 내보냅니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-212">When later serializing the type, `PhoneNumber` will be re-emitted.</span></span> <span data-ttu-id="903ec-213">문제에 대 한 스키마는 `Person` 서비스만에에서 내보낸 `FirstName` 및 `LastName`Windows Communication Foundation (WCF)에서는 스키마에 맞지 않는 인스턴스를 생성 하므로,!</span><span class="sxs-lookup"><span data-stu-id="903ec-213">The problem is that the schema for `Person` exported by that service only has `FirstName` and `LastName`, so Windows Communication Foundation (WCF) generates a schema-invalid instance!</span></span> <span data-ttu-id="903ec-214">스키마를 엄격하게 준수하는 것이 중요하다면 <xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A>를 `true`로 설정하여 이 다시 내보내기 동작을 해제할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-214">If strict schema compliance is important, you can set <xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A> to `true` to turn this re-emitting behavior off.</span></span>  
  
 <span data-ttu-id="903ec-215">이와 상관 없이 <xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A> 설정, WCF 항상 (내부와 외부 모두) 알려진된 데이터를 처리 하 고 추가 데이터가 들어올 때 예외를 throw 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-215">Regardless <xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A> setting, WCF always processes known data (both in and out) and does not throw exceptions when extra data comes in.</span></span> <span data-ttu-id="903ec-216">사용 하 여이 속성을 설정할 수도 있습니다는 [ &lt;dataContractSerializer&gt; ](~/docs/framework/configure-apps/file-schema/wcf/datacontractserializer-element.md) 응용 프로그램 구성 파일의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-216">You can also set this property using the [&lt;dataContractSerializer&gt;](~/docs/framework/configure-apps/file-schema/wcf/datacontractserializer-element.md) element in an application configuration file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="903ec-217">다음 예제에서는 <xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A>의 사용과 <xref:System.Runtime.Serialization.IExtensibleDataObject>의 구현을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-217">The following example shows the use of <xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A> and an implementation of <xref:System.Runtime.Serialization.IExtensibleDataObject>.</span></span> <span data-ttu-id="903ec-218">이 샘플에서는 <xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A>가 `false`로 설정된 상태에서 클라이언트가 알고 있는 추가 데이터가 다시 클라이언트로 라운드트립됩니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-218">In this sample, with <xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A> set to `false`, the extra data that the client knows about is round-tripped back to the client.</span></span>  
  
 [!code-csharp[DCAContainerNoValidation#1](~/samples/snippets/csharp/VS_Snippets_CFX/dcacontainernovalidation/cs/services.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeExceptionDetailInFaults">
      <MemberSignature Language="C#" Value="public bool IncludeExceptionDetailInFaults { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeExceptionDetailInFaults" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeExceptionDetailInFaults As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeExceptionDetailInFaults { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeExceptionDetailInFaults : bool with get, set" Usage="System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="903ec-219">일반적인 처리되지 않은 실행 예외를 <see cref="T:System.ServiceModel.FaultException`1" /> 형식의 <see cref="T:System.ServiceModel.ExceptionDetail" />으로 변환하고 오류 메시지로 보내도록 지정하는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-219">Gets or sets a value that specifies that general unhandled execution exceptions are to be converted into a <see cref="T:System.ServiceModel.FaultException`1" /> of type <see cref="T:System.ServiceModel.ExceptionDetail" /> and sent as a fault message.</span>
          </span>
          <span data-ttu-id="903ec-220">서비스 문제를 해결하려면 개발하는 동안에만 이 값을 <see langword="true" />로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-220">Set this to <see langword="true" /> only during development to troubleshoot a service.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="903ec-221">처리되지 않은 예외가 SOAP 오류로 반환되면 <see langword="true" />이고, 그렇지 않을 경우 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-221">
              <see langword="true" /> if unhandled exceptions are to be returned as SOAP faults; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="903ec-222">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-222">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903ec-223">디버깅을 위해 예외 정보가 클라이언트로 이동할 수 있게 하려면 <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A>를 `true`로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-223">Set <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A> to `true` to enable exception information to flow to clients for debugging purposes.</span></span> <span data-ttu-id="903ec-224">이 속성에서는 요청-응답 또는 이중 메시징을 지원하는 바인딩이 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-224">This property requires a binding that supports either request-response or duplex messaging.</span></span>  
  
 <span data-ttu-id="903ec-225">관리되는 모든 응용 프로그램에서 처리 오류는 <xref:System.Exception> 개체로 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-225">In all managed applications, processing errors are represented by <xref:System.Exception> objects.</span></span> <span data-ttu-id="903ec-226">SOAP 기반 응용 프로그램에서 WCF 응용 프로그램과 같은 서비스 작업을 구현 하는 메서드는 SOAP 오류 메시지를 사용 하 여 오류 정보를 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-226">In SOAP-based applications such as WCF applications, methods that implement service operations communicate error information using SOAP fault messages.</span></span> <span data-ttu-id="903ec-227">두 유형의 오류 시스템에서 WCF 응용 프로그램 실행, 되기 때문에 클라이언트에 전송 하는 모든 관리 되는 예외 정보는 예외에서 SOAP 오류로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-227">Because WCF applications execute under both types of error systems, any managed exception information that needs to be sent to the client must be converted from exceptions into SOAP faults.</span></span> <span data-ttu-id="903ec-228">자세한 내용은 참조 [지정 및 계약 및 서비스에서 처리 오류](~/docs/framework/wcf/specifying-and-handling-faults-in-contracts-and-services.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-228">For more information, see [Specifying and Handling Faults in Contracts and Services](~/docs/framework/wcf/specifying-and-handling-faults-in-contracts-and-services.md).</span></span>  
  
 <span data-ttu-id="903ec-229">개발 과정에서 디버깅에 도움이 되도록 서비스에서 기타 예외도 클라이언트에 돌려보내도록 하는 경우가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-229">During development, you may want your service to also send other exceptions back to the client to assist you in debugging.</span></span> <span data-ttu-id="903ec-230">이는 개발 전용 기능이므로 배포된 서비스에서는 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-230">This is a development-only feature and should not be employed in deployed services.</span></span>  
  
 <span data-ttu-id="903ec-231">디버깅 개발을 위해 설정 된 <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A> 를 `true` 코드 또는 응용 프로그램 구성 파일을 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-231">To facilitate debugging development, set the <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A> to `true` either in code or using an application configuration file.</span></span>  
  
 <span data-ttu-id="903ec-232">이 설정을 사용하면 서비스는 더 안전한 예외 정보를 자동으로 호출자에게 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-232">When enabled, the service automatically returns safer exception information to the caller.</span></span> <span data-ttu-id="903ec-233">이 오류는 <xref:System.ServiceModel.FaultException%601> 형식의 <xref:System.ServiceModel.ExceptionDetail> 개체로 클라이언트에 나타납니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-233">These faults appear to the client as <xref:System.ServiceModel.FaultException%601> objects of type <xref:System.ServiceModel.ExceptionDetail>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="903ec-234">설정 <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A> 를 `true` ; 내부에 대 한 정보를 사용 하면 클라이언트 서비스 메서드 예외를 일시적으로 서비스 응용 프로그램을 디버깅 하는 방법으로만 권장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-234">Setting <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A> to `true` enables clients to obtain information about internal service method exceptions; it is only recommended as a way of temporarily debugging a service application.</span></span> <span data-ttu-id="903ec-235">또한 이 방법으로 처리되지 않은 관리되는 예외를 반환하는 메서드의 WSDL에는 <xref:System.ServiceModel.FaultException%601> 형식의 <xref:System.ServiceModel.ExceptionDetail>에 대한 계약이 포함되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-235">In addition, the WSDL for a method that returns unhandled managed exceptions in this way does not contain the contract for the <xref:System.ServiceModel.FaultException%601> of type <xref:System.ServiceModel.ExceptionDetail>.</span></span> <span data-ttu-id="903ec-236">디버깅 정보를 제대로 얻으려면 클라이언트는 알 수 없는 SOAP 오류의 가능성을 예상해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-236">Clients must expect the possibility of an unknown SOAP fault to obtain the debugging information properly.</span></span>  
  
 <span data-ttu-id="903ec-237">이 속성을 설정 `true` 에서도 가능 응용 프로그램 구성 파일을 사용 하 여 및 [ &lt;serviceDebug&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicedebug.md) 다음 코드 예제와 같이 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-237">Setting this property to `true` can also be done using an application configuration file and the [&lt;serviceDebug&gt;](~/docs/framework/configure-apps/file-schema/wcf/servicedebug.md) element, as the following code example shows.</span></span>  
  
 [!code-xml[OperationBehaviorAttribute1#10](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute1/cs/hostapplication.exe.config#10)]   
   
  
## Examples  
 <span data-ttu-id="903ec-238">다음 코드 예제에서는 <xref:System.ServiceModel.ServiceBehaviorAttribute> 속성을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-238">The following code example demonstrates the <xref:System.ServiceModel.ServiceBehaviorAttribute> properties.</span></span> <span data-ttu-id="903ec-239">`BehaviorService` 클래스는 <xref:System.ServiceModel.ServiceBehaviorAttribute> 특성을 사용하여 다음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-239">The `BehaviorService` class uses the <xref:System.ServiceModel.ServiceBehaviorAttribute> attribute to indicate that:</span></span>  
  
-   <span data-ttu-id="903ec-240">구현 메서드가 UI 스레드에서 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-240">Implementation methods are invoked on the UI thread.</span></span>  
  
-   <span data-ttu-id="903ec-241">세션별로 서비스 개체가 하나씩 있습니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-241">There is one service object for each session.</span></span>  
  
-   <span data-ttu-id="903ec-242">서비스는 단일 스레드이며 재진입 호출을 지원하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-242">The service is single-threaded and does not support reentrant calls.</span></span>  
  
 <span data-ttu-id="903ec-243">또한 작업 수준에서 <xref:System.ServiceModel.OperationBehaviorAttribute> 값은 `TxWork` 메서드가 흐름이 지정된 트랜잭션에 자동으로 참여하거나 작업 수행을 위해 새로운 트랜잭션을 생성함을 나타내며 처리되지 않은 예외가 발생하지 않으면 트랜잭션이 자동으로 커밋됨을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-243">Furthermore, at the operation level, the <xref:System.ServiceModel.OperationBehaviorAttribute> values indicate that the `TxWork` method automatically enlists in flowed transactions or creates a new transaction to do the work, and that the transaction is committed automatically if an unhandled exception does not occur.</span></span>  
  
 [!code-csharp[OperationBehaviorAttribute1#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute1/cs/services.cs#2)]
 [!code-vb[OperationBehaviorAttribute1#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute1/vb/services.vb#2)]  
  
 <span data-ttu-id="903ec-244">다음 코드 예제가 제대로 실행되려면 기본 바인딩에서 트랜잭션 이동을 지원해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-244">The underlying binding must support flowed transactions for the following code example to execute properly.</span></span> <span data-ttu-id="903ec-245">예를 들어, <xref:System.ServiceModel.WSHttpBinding>을 사용하여 트랜잭션 이동을 지원하려면 코드 또는 응용 프로그램 구성 파일에서 <xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A> 속성을 `true`로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-245">To support flowed transactions using the <xref:System.ServiceModel.WSHttpBinding>, for example, set the <xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A> property to `true` in code or in an application configuration file.</span></span> <span data-ttu-id="903ec-246">다음 코드 예제에서는 앞에 나온 샘플에 대한 구성 파일을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-246">The following code example shows the configuration file for the preceding sample.</span></span>  
  
 [!code-xml[OperationBehaviorAttribute1#1](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute1/cs/hostapplication.exe.config#1)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceContextMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.InstanceContextMode InstanceContextMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.InstanceContextMode InstanceContextMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode" />
      <MemberSignature Language="VB.NET" Value="Public Property InstanceContextMode As InstanceContextMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::InstanceContextMode InstanceContextMode { System::ServiceModel::InstanceContextMode get(); void set(System::ServiceModel::InstanceContextMode value); };" />
      <MemberSignature Language="F#" Value="member this.InstanceContextMode : System.ServiceModel.InstanceContextMode with get, set" Usage="System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.InstanceContextMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="903ec-247">새 서비스 개체 생성 시점을 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-247">Gets or sets the value that indicates when new service objects are created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="903ec-248">
            <see cref="T:System.ServiceModel.InstanceContextMode" /> 값 중 하나입니다. 기본값은 <see cref="F:System.ServiceModel.InstanceContextMode.PerSession" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-248">One of the <see cref="T:System.ServiceModel.InstanceContextMode" /> values; the default value is <see cref="F:System.ServiceModel.InstanceContextMode.PerSession" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903ec-249">새 서비스 개체 생성 시점을 지정하려면 <xref:System.ServiceModel.InstanceContextMode> 속성을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-249">Use the <xref:System.ServiceModel.InstanceContextMode> property to specify when new service objects are created.</span></span> <span data-ttu-id="903ec-250">서비스 개체가 통신 채널과 직접 연결되지 않으므로 서비스 개체의 수명은 클라이언트와 서비스 응용 프로그램 사이의 채널이 가지는 수명과 관계가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-250">Because the service object is not directly connected to the communicating channel, the lifetime of the service objects is independent of the lifetime of the channel between a client and the service application.</span></span> <span data-ttu-id="903ec-251">기본값인 <xref:System.ServiceModel.InstanceContextMode.PerSession>은 클라이언트와 서비스 응용 프로그램 간에 새 통신 세션이 설정될 경우 서비스 응용 프로그램이 새 서비스 개체를 만들도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-251">The default value, <xref:System.ServiceModel.InstanceContextMode.PerSession>, instructs the service application to create a new service object when a new communication session is established between a client and the service application.</span></span> <span data-ttu-id="903ec-252">동일 세션 내의 후속 호출은 동일한 개체가 처리합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-252">Subsequent calls in the same session are handled by the same object.</span></span>  
  
 <span data-ttu-id="903ec-253"><xref:System.ServiceModel.InstanceContextMode.PerSession>은 각 서비스 개체가 하나의 클라이언트 채널의 요청을 처리함을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-253"><xref:System.ServiceModel.InstanceContextMode.PerSession> indicates that each service object handles requests from one client channel.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="903ec-254"><xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> 속성은 다른 설정과 상호 작용합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-254">The <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> property interacts with some other settings.</span></span> <span data-ttu-id="903ec-255">예를 들어, <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> 값을 <xref:System.ServiceModel.InstanceContextMode.Single>로 설정한 경우 <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> 값을 <xref:System.ServiceModel.ConcurrencyMode.Multiple>로 설정하지 않으면 서비스에서 한 번에 하나의 메시지만 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-255">For example, if the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> value is set to <xref:System.ServiceModel.InstanceContextMode.Single> the result is that your service can only process one message at a time unless you also set the <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> value to <xref:System.ServiceModel.ConcurrencyMode.Multiple>.</span></span> <span data-ttu-id="903ec-256">또한 이 속성은 <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=nameWithType> 속성과 함께 동작을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-256">This property also produces behavior in combination with the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="903ec-257">자세한 내용은 참조 [세션과 Instancing, 동시성](~/docs/framework/wcf/feature-details/sessions-instancing-and-concurrency.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-257">For details, see [Sessions, Instancing, and Concurrency](~/docs/framework/wcf/feature-details/sessions-instancing-and-concurrency.md).</span></span>  
  
 <span data-ttu-id="903ec-258">단일 수명 동작(예: 호스트 응용 프로그램이 <xref:System.ServiceModel.ServiceHost.%23ctor%2A> 생성자를 호출하고 서비스로 사용할 개체를 전달하는 경우)에 대해서는 서비스 클래스에서 <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>를 `Single`로 설정해야 합니다. 그렇지 않으면 런타임에 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-258">For singleton lifetime behavior (for example, if the host application calls the <xref:System.ServiceModel.ServiceHost.%23ctor%2A> constructor and passes an object to use as the service), the service class must set <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> to `Single`, or an exception is thrown at run time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="903ec-259">다음 코드 예제에서는 <xref:System.ServiceModel.ServiceBehaviorAttribute> 속성을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-259">The following code example demonstrates the <xref:System.ServiceModel.ServiceBehaviorAttribute> properties.</span></span> <span data-ttu-id="903ec-260">`BehaviorService` 클래스는 <xref:System.ServiceModel.ServiceBehaviorAttribute> 특성을 사용하여 다음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-260">The `BehaviorService` class uses the <xref:System.ServiceModel.ServiceBehaviorAttribute> attribute to indicate that:</span></span>  
  
-   <span data-ttu-id="903ec-261">구현 메서드가 UI 스레드에서 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-261">Implementation methods are invoked on the UI thread.</span></span>  
  
-   <span data-ttu-id="903ec-262">세션별로 서비스 개체가 하나씩 있습니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-262">There is one service object for each session.</span></span>  
  
-   <span data-ttu-id="903ec-263">서비스는 단일 스레드이며 재진입 호출을 지원하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-263">The service is single-threaded and does not support reentrant calls.</span></span>  
  
 <span data-ttu-id="903ec-264">또한 작업 수준에서 <xref:System.ServiceModel.OperationBehaviorAttribute> 값은 `TxWork` 메서드가 흐름이 지정된 트랜잭션에 자동으로 참여하거나 작업 수행을 위해 새로운 트랜잭션을 생성함을 나타내며 처리되지 않은 예외가 발생하지 않으면 트랜잭션이 자동으로 커밋됨을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-264">Furthermore, at the operation level, the <xref:System.ServiceModel.OperationBehaviorAttribute> values indicate that the `TxWork` method automatically enlists in flowed transactions or creates a new transaction to do the work, and that the transaction is committed automatically if an unhandled exception does not occur.</span></span>  
  
 [!code-csharp[OperationBehaviorAttribute1#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute1/cs/services.cs#2)]
 [!code-vb[OperationBehaviorAttribute1#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute1/vb/services.vb#2)]  
  
 <span data-ttu-id="903ec-265">다음 코드 예제가 제대로 실행되려면 기본 바인딩에서 트랜잭션 이동을 지원해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-265">The underlying binding must support flowed transactions for the following code example to execute properly.</span></span> <span data-ttu-id="903ec-266">예를 들어, <xref:System.ServiceModel.WSHttpBinding>을 사용하여 트랜잭션 이동을 지원하려면 코드 또는 응용 프로그램 구성 파일에서 <xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A> 속성을 `true`로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-266">To support flowed transactions using the <xref:System.ServiceModel.WSHttpBinding>, for example, set the <xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A> property to `true` in code or in an application configuration file.</span></span> <span data-ttu-id="903ec-267">다음 코드 예제에서는 앞에 나온 샘플에 대한 구성 파일을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-267">The following code example shows the configuration file for the preceding sample.</span></span>  
  
 [!code-xml[OperationBehaviorAttribute1#1](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute1/cs/hostapplication.exe.config#1)]   
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="903ec-268">값이 <see cref="T:System.ServiceModel.InstanceContextMode" /> 값 중 하나가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-268">The value is not one of the <see cref="T:System.ServiceModel.InstanceContextMode" /> values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MaxItemsInObjectGraph">
      <MemberSignature Language="C#" Value="public int MaxItemsInObjectGraph { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxItemsInObjectGraph" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxItemsInObjectGraph As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxItemsInObjectGraph { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxItemsInObjectGraph : int with get, set" Usage="System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(2147483647)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="903ec-269">serialize된 개체에 허용되는 최대 항목 수를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-269">Gets or sets the maximum number of items allowed in a serialized object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="903ec-270">개체에 허용되는 최대 항목 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-270">The maximum number of items allowed in an object.</span>
          </span>
          <span data-ttu-id="903ec-271">기본값은 65536바이트(64KB)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-271">The default is 65536 bytes (64KB).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903ec-272">개체 그래프에서 serialize되는 항목의 수를 제한하려면 <xref:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph%2A> 속성을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-272">Use the <xref:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph%2A> property set a limit on the number of items in an object graph that are serialized.</span></span> <span data-ttu-id="903ec-273">사용 하 여이 속성을 설정할 수도 있습니다는 [ &lt;dataContractSerializer&gt; ](~/docs/framework/configure-apps/file-schema/wcf/datacontractserializer-element.md) 응용 프로그램 구성 파일의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-273">You can also set this property using the [&lt;dataContractSerializer&gt;](~/docs/framework/configure-apps/file-schema/wcf/datacontractserializer-element.md) element in an application configuration file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceBehaviorAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.ServiceModel.ServiceBehaviorAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="903ec-274">WSDL(웹 서비스 기술 언어)에서 서비스 요소의 이름 특성 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-274">Gets or sets the value of the name attribute in the service element in Web Services Description Language (WSDL).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="903ec-275">내보낼 때 <see langword="&lt;wsdl:service&gt;" /> 요소의 이름 특성의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-275">The value of the name attribute in the <see langword="&lt;wsdl:service&gt;" /> element when exported.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceBehaviorAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.ServiceModel.ServiceBehaviorAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="903ec-276">WSDL(웹 서비스 기술 언어)에서 서비스의 대상 네임스페이스 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-276">Gets or sets the value of the target namespace for the service in Web Services Description Language (WSDL).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="903ec-277">
            <see langword="targetNamespace" /> 요소를 포함하는 <see langword="&lt;wsdl:definitions&gt;" /> 요소에 대한 <see langword="&lt;wsdl:service&gt;" /> 특성 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-277">The value of the <see langword="targetNamespace" /> attribute for the <see langword="&lt;wsdl:definitions&gt;" /> element that contains the <see langword="&lt;wsdl:service&gt;" /> element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseServiceInstanceOnTransactionComplete">
      <MemberSignature Language="C#" Value="public bool ReleaseServiceInstanceOnTransactionComplete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReleaseServiceInstanceOnTransactionComplete" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete" />
      <MemberSignature Language="VB.NET" Value="Public Property ReleaseServiceInstanceOnTransactionComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReleaseServiceInstanceOnTransactionComplete { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReleaseServiceInstanceOnTransactionComplete : bool with get, set" Usage="System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="903ec-278">현재 트랜잭션이 완료되면 서비스 개체를 해제하는지 여부를 지정하는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-278">Gets or sets a value that specifies whether the service object is released when the current transaction completes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="903ec-279">서비스 개체가 해제되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-279">
              <see langword="true" /> if the service object is to be released; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="903ec-280">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-280">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903ec-281"><xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A>이 true로 설정된 작업이 있고 `false`를 <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A?displayProperty=nameWithType>로 설정한 경우, 명시적으로 <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A>를 <xref:System.ServiceModel.ConcurrencyMode.Reentrant>로 설정해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-281">Note that you must explicitly set <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> to `false` if there is an operation with <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A?displayProperty=nameWithType> set to true and you set <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> to <xref:System.ServiceModel.ConcurrencyMode.Reentrant>.</span></span> <span data-ttu-id="903ec-282">그렇지 않으면, <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A>의 기본값이 `true`이므로 유효성 검사 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-282">Otherwise a validation exception is thrown because the default value of <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> is `true`.</span></span>  
  
 <span data-ttu-id="903ec-283">또한 서비스 개체를 <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29?displayProperty=nameWithType> 생성자에 전달하는 방법으로 서비스를 생성한 경우 이 속성의 값은 `false`처럼 처리됩니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-283">In addition, it is important to realize that if the service is created by passing a service object to the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29?displayProperty=nameWithType> constructor, the value of this property is treated as if it were `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="903ec-284">다음 코드 예제에서는 트랜잭션 격리 수준을 <xref:System.Transactions.IsolationLevel.ReadCommitted>로 설정하고, 동시 트랜잭션을 지원하지 않으며, 작업 호출로부터의 흐름이 지정된 트랜잭션이 필요하고, 처리되지 않은 예외가 발생하지 않으면 서비스에 대한 트랜잭션을 자동으로 커밋합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-284">The following code example sets the transaction isolation level to <xref:System.Transactions.IsolationLevel.ReadCommitted>, disables support for concurrent transactions, requires a flowed transaction from the operation call, and commits the transaction on the service automatically if no unhandled exception occurs.</span></span>  
  
 [!code-csharp[SBA.Transactions#2](~/samples/snippets/csharp/VS_Snippets_CFX/sba.transactions/cs/services.cs#2)]
 [!code-vb[SBA.Transactions#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/sba.transactions/vb/services.vb#2)]  
  
 <span data-ttu-id="903ec-285">다음 코드 예제가 제대로 실행되려면 기본 바인딩에서 트랜잭션 이동을 지원해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-285">The underlying binding must support flowed transactions for the following code example to execute properly.</span></span> <span data-ttu-id="903ec-286">예를 들어, <xref:System.ServiceModel.WSHttpBinding>을 사용하여 트랜잭션 이동을 지원하려면 코드 또는 응용 프로그램 구성 파일에서 <xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A> 속성을 `true`로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-286">To support flowed transactions using the <xref:System.ServiceModel.WSHttpBinding>, for example, set the <xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A> property to `true` in code or in an application configuration file.</span></span> <span data-ttu-id="903ec-287">다음 코드 예제에서는 앞에 나온 샘플에 대한 구성 파일을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-287">The following code example shows a configuration file for the preceding sample.</span></span>  
  
 [!code-xml[SBA.Transactions#1](~/samples/snippets/csharp/VS_Snippets_CFX/sba.transactions/cs/hostapplication.exe.config#1)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWellKnownSingleton">
      <MemberSignature Language="C#" Value="public void SetWellKnownSingleton (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWellKnownSingleton(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetWellKnownSingleton (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetWellKnownSingleton(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetWellKnownSingleton : obj -&gt; unit" Usage="serviceBehaviorAttribute.SetWellKnownSingleton value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="903ec-288">서비스의 단일 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-288">The singleton instance of the service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="903ec-289">서비스를 구현하고 서비스의 단일 인스턴스로 사용되는 개체를 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-289">Specifies an object that implements the service and that is used as the singleton instance of the service.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903ec-290">서비스에 전달되도록 주소가 지정된 모든 메시지를 디스패치할 대상 서비스 인스턴스를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-290">This provides the service instance to which all messages addressed to the service will be dispatched.</span></span>  
  
 <span data-ttu-id="903ec-291"><xref:System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton%2A>가 `null`이 아닌 값으로 설정된 경우 <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>는 <xref:System.ServiceModel.InstanceContextMode.Single>로 설정되어야 하며, 그렇지 않으면 <xref:System.InvalidOperationException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-291">If <xref:System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton%2A> is set to a non-`null` value, then the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> must be set to <xref:System.ServiceModel.InstanceContextMode.Single> or an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="903ec-292">설정된 값이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-292">The value set is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeConfigurationName">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeConfigurationName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeConfigurationName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeConfigurationName () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeConfigurationName();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeConfigurationName : unit -&gt; bool" Usage="serviceBehaviorAttribute.ShouldSerializeConfigurationName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="903ec-293">
            <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName" /> 속성이 기본값에서 변경되었으며 이를 serialize해야 하는지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-293">Returns a value that indicates whether the <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName" /> property has changed from its default value and should be serialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="903ec-294">
            <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName" /> 속성 값을 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-294">
              <see langword="true" /> if the <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName" /> property value should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeReleaseServiceInstanceOnTransactionComplete">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeReleaseServiceInstanceOnTransactionComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeReleaseServiceInstanceOnTransactionComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeReleaseServiceInstanceOnTransactionComplete () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeReleaseServiceInstanceOnTransactionComplete();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeReleaseServiceInstanceOnTransactionComplete : unit -&gt; bool" Usage="serviceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="903ec-295">
            <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete" /> 속성이 기본값에서 변경되었으며 이를 serialize해야 하는지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-295">Returns a value that indicates whether the <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete" /> property has changed from its default value and should be serialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="903ec-296">
            <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete" /> 속성 값을 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-296">
              <see langword="true" /> if the <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete" /> property value should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTransactionAutoCompleteOnSessionClose">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeTransactionAutoCompleteOnSessionClose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeTransactionAutoCompleteOnSessionClose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeTransactionAutoCompleteOnSessionClose () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeTransactionAutoCompleteOnSessionClose();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeTransactionAutoCompleteOnSessionClose : unit -&gt; bool" Usage="serviceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="903ec-297">
            <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose" /> 속성이 기본값에서 변경되었으며 이를 serialize해야 하는지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-297">Returns a value that indicates whether the <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose" /> property has changed from its default value and should be serialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="903ec-298">
            <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose" /> 속성 값을 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-298">
              <see langword="true" /> if the <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose" /> property value should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTransactionIsolationLevel">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeTransactionIsolationLevel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeTransactionIsolationLevel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeTransactionIsolationLevel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeTransactionIsolationLevel();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeTransactionIsolationLevel : unit -&gt; bool" Usage="serviceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="903ec-299">
            <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel" /> 속성이 기본값에서 변경되었으며 이를 serialize해야 하는지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-299">Returns a value that indicates whether the <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel" /> property has changed from its default value and should be serialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="903ec-300">
            <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel" /> 속성 값을 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-300">
              <see langword="true" /> if the <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel" /> property value should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTransactionTimeout">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeTransactionTimeout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeTransactionTimeout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeTransactionTimeout () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeTransactionTimeout();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeTransactionTimeout : unit -&gt; bool" Usage="serviceBehaviorAttribute.ShouldSerializeTransactionTimeout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="903ec-301">
            <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout" /> 속성이 기본값에서 변경되었으며 이를 serialize해야 하는지 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-301">Returns a value that indicates whether the <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout" /> property has changed from its default value and should be serialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="903ec-302">
            <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout" /> 속성 값을 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-302">
              <see langword="true" /> if the <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout" /> property value should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IServiceBehavior.AddBindingParameters (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase, class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase, System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ServiceEndpoint ^&gt; ^ endpoints, System::ServiceModel::Channels::BindingParameterCollection ^ parameters) = System::ServiceModel::Description::IServiceBehavior::AddBindingParameters;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
        <Parameter Name="endpoints" Type="System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="description">
          <span data-ttu-id="903ec-303">서비스 설명입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-303">The service description.</span>
          </span>
        </param>
        <param name="serviceHostBase">
          <span data-ttu-id="903ec-304">서비스 호스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-304">The service host.</span>
          </span>
        </param>
        <param name="endpoints">
          <span data-ttu-id="903ec-305">서비스 끝점입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-305">The service endpoints.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="903ec-306">바인딩에서 동작을 지원하는 데 필요한 데이터 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-306">The data objects needed by bindings to support the behavior.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="903ec-307">사용자 지정 데이터 개체를 동작 속성을 지원하는 바인딩에 전달합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-307">Passes custom data objects to the bindings that support the behavior properties.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IServiceBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase) = System::ServiceModel::Description::IServiceBehavior::ApplyDispatchBehavior;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description">
          <span data-ttu-id="903ec-308">서비스 설명입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-308">The service description.</span>
          </span>
        </param>
        <param name="serviceHostBase">
          <span data-ttu-id="903ec-309">서비스 호스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-309">The service host.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="903ec-310">동작 속성을 지원하도록 서비스 런타임을 사용자 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-310">Customizes the service run time to support the behavior properties.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.Validate">
      <MemberSignature Language="C#" Value="void IServiceBehavior.Validate (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.Validate(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.Validate(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase) = System::ServiceModel::Description::IServiceBehavior::Validate;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description">
          <span data-ttu-id="903ec-311">서비스 설명입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-311">The service description.</span>
          </span>
        </param>
        <param name="serviceHostBase">
          <span data-ttu-id="903ec-312">서비스 호스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-312">The service host.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="903ec-313">서비스 설명 및 서비스 호스트가 동작을 지원할 수 있음을 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-313">Confirms that the service description and service host are capable of supporting the behavior.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionAutoCompleteOnSessionClose">
      <MemberSignature Language="C#" Value="public bool TransactionAutoCompleteOnSessionClose { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransactionAutoCompleteOnSessionClose" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionAutoCompleteOnSessionClose As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransactionAutoCompleteOnSessionClose { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionAutoCompleteOnSessionClose : bool with get, set" Usage="System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="903ec-314">현재 세션이 오류 없이 닫힐 때 보류 중인 트랜잭션이 완료되는지 여부를 지정하는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-314">Gets or sets a value that specifies whether pending transactions are completed when the current session closes without error.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="903ec-315">현재 세션이 오류 없이 닫힐 때 보류 중인 트랜잭션이 완료되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-315">
              <see langword="true" /> if pending transactions are to be completed when the current session closes without error; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="903ec-316">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-316">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionIsolationLevel">
      <MemberSignature Language="C#" Value="public System.Transactions.IsolationLevel TransactionIsolationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Transactions.IsolationLevel TransactionIsolationLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionIsolationLevel As IsolationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Transactions::IsolationLevel TransactionIsolationLevel { System::Transactions::IsolationLevel get(); void set(System::Transactions::IsolationLevel value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionIsolationLevel : System.Transactions.IsolationLevel with get, set" Usage="System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Transactions.IsolationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="903ec-317">서비스 내부에서 만들어지는 새 트랜잭션 및 클라이언트로부터 들어오는 트랜잭션의 트랜잭션 격리 수준을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-317">Specifies the transaction isolation level for new transactions created inside the service, and incoming transactions flowed from a client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="903ec-318">트랜잭션 격리 수준을 지정하는 <see cref="T:System.Transactions.IsolationLevel" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-318">A <see cref="T:System.Transactions.IsolationLevel" /> value that specifies the transaction isolation level.</span>
          </span>
          <span data-ttu-id="903ec-319">기본값은 <see cref="F:System.Transactions.IsolationLevel.Unspecified" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-319">The default is <see cref="F:System.Transactions.IsolationLevel.Unspecified" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903ec-320">트랜잭션이 실행되는 격리 수준에 따라 다른 트랜잭션에서 변경이 있을 경우 데이터를 처리하는 방법 및 이러한 변경으로부터 보호하기 위해 사용자의 트랜잭션이 잠금을 보유해야 하는 기간이 결정됩니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-320">The isolation level in which your transaction runs determines how data is treated when changes are made in other transactions and how long your transaction must hold locks to protect against these changes.</span></span> <span data-ttu-id="903ec-321">예를 들어, 기본값인 <xref:System.Transactions.IsolationLevel.Unspecified>는 트랜잭션이 완료될 때까지 어떠한 업데이트나 삽입도 발생할 수 없음을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-321">For example, the default value, <xref:System.Transactions.IsolationLevel.Unspecified>, specifies that no updating or inserting can occur until the transaction is complete.</span></span>  
  
 <span data-ttu-id="903ec-322">이 속성은 클라이언트로부터 들어오는 트랜잭션의 격리 수준을 제한하는 데에도 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-322">This property can also be used to restrict the isolation level of incoming transactions flowed from a client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="903ec-323">다음 코드 예제에서는 트랜잭션 격리 수준을 <xref:System.Transactions.IsolationLevel.ReadCommitted>로 설정하고, 동시 트랜잭션을 지원하지 않으며, 메서드 호출로부터의 흐름이 지정된 트랜잭션이 필요하고, 처리되지 않은 예외가 발생하지 않으면 트랜잭션을 자동으로 커밋합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-323">The following code example sets the transaction isolation level to <xref:System.Transactions.IsolationLevel.ReadCommitted>, does not support concurrent transactions, requires a flowed transaction from the method call, and commits the transaction automatically if no unhandled exception occurs.</span></span>  
  
 [!code-csharp[SBA.Transactions#2](~/samples/snippets/csharp/VS_Snippets_CFX/sba.transactions/cs/services.cs#2)]
 [!code-vb[SBA.Transactions#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/sba.transactions/vb/services.vb#2)]  
  
 <span data-ttu-id="903ec-324">다음 코드 예제가 제대로 실행되려면 기본 바인딩에서 트랜잭션 이동을 지원해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-324">The underlying binding must support flowed transactions for the following code example to execute properly.</span></span> <span data-ttu-id="903ec-325">예를 들어, <xref:System.ServiceModel.WSHttpBinding>을 사용하여 트랜잭션 이동을 지원하려면 코드 또는 응용 프로그램 구성 파일에서 <xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A> 속성을 `true`로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-325">To support flowed transactions using the <xref:System.ServiceModel.WSHttpBinding>, for example, set the <xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A> property to `true` in code or in an application configuration file.</span></span> <span data-ttu-id="903ec-326">다음 코드 예제에서는 앞에 나온 샘플에 대한 구성 파일을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-326">The following code example shows a configuration file for the preceding sample.</span></span>  
  
 [!code-xml[SBA.Transactions#1](~/samples/snippets/csharp/VS_Snippets_CFX/sba.transactions/cs/hostapplication.exe.config#1)]   
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="903ec-327">값이 <see cref="T:System.Transactions.IsolationLevel" /> 값 중 하나가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-327">The value is not one of the <see cref="T:System.Transactions.IsolationLevel" /> values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TransactionTimeout">
      <MemberSignature Language="C#" Value="public string TransactionTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TransactionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionTimeout As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TransactionTimeout { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionTimeout : string with get, set" Usage="System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="903ec-328">트랜잭션을 완료해야 하는 기간을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-328">Gets or sets the period within which a transaction must complete.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="903ec-329">트랜잭션이 완료되어야 하거나, 완료되지 못할 경우 자동으로 중단되어야 하는 제한 시간을 나타내는 <see cref="T:System.TimeSpan" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-329">A <see cref="T:System.TimeSpan" /> object that represents the time within which transactions must complete or be automatically aborted.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903ec-330">이 값은 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout%2A?displayProperty=nameWithType> 속성을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-330">This value sets the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="903ec-331">사용 하 여이 속성을 설정할 수도 있습니다는 [ &lt;serviceTimeouts&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicetimeouts.md) 응용 프로그램 구성 파일의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-331">You can also set this property using the [&lt;serviceTimeouts&gt;](~/docs/framework/configure-apps/file-schema/wcf/servicetimeouts.md) element in an application configuration file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="903ec-332">다음 구성 파일에서는 트랜잭션 시간 제한을 3분으로 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-332">The following configuration file specifies a transaction timeout period of three minutes.</span></span>  
  
 [!code-csharp[SBA.TransactionTimeout#2](~/samples/snippets/csharp/VS_Snippets_CFX/sba.transactiontimeout/cs/services.cs#2)]
 [!code-vb[SBA.TransactionTimeout#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/sba.transactiontimeout/vb/services.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="903ec-333">값이 null인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-333">The value is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="903ec-334">값이 <see cref="F:System.TimeSpan.Zero" />보다 작거나 <see cref="F:System.TimeSpan.MaxValue" />보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-334">The value is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UseSynchronizationContext">
      <MemberSignature Language="C#" Value="public bool UseSynchronizationContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSynchronizationContext" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext" />
      <MemberSignature Language="VB.NET" Value="Public Property UseSynchronizationContext As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseSynchronizationContext { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseSynchronizationContext : bool with get, set" Usage="System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="903ec-335">현재 동기화 컨텍스트를 사용하여 스레드 실행을 선택할지 여부를 지정하는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-335">Gets or sets a value that specifies whether to use the current synchronization context to choose the thread of execution.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="903ec-336">모든 서비스 호출이 <see cref="T:System.Threading.SynchronizationContext" />에서 지정한 스레드에서 실행되어야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-336">
              <see langword="true" /> if all calls to the service must run on the thread specified by the <see cref="T:System.Threading.SynchronizationContext" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="903ec-337">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-337">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903ec-338">일부 응용 프로그램에서 요구하는 사용자 인터페이스 스레드 선호도를 제공하려면 이 속성을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-338">Use this property to provide the user interface thread affinity that some applications require.</span></span> <span data-ttu-id="903ec-339">예를 들어, Windows Forms 응용 프로그램이 singleton 서비스 개체로 등록될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-339">For example, a Windows Forms application may be registered as a singleton service object.</span></span> <span data-ttu-id="903ec-340">그런 경우 이 서비스에 대한 모든 호출이 Windows Forms 스레드에서 실행되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-340">In this case, all calls into the service must run on the Windows Forms thread.</span></span> <span data-ttu-id="903ec-341"><xref:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext%2A>가 `true`로 설정되는 기본 환경에서는 <xref:System.Threading.SynchronizationContext?displayProperty=nameWithType>로부터 캡처한 스레드에서 실행될 모든 서비스 호출을 동기화합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-341">The default case, in which <xref:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext%2A> is set to `true`, synchronizes all calls to the service to run on the thread captured from the <xref:System.Threading.SynchronizationContext?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateMustUnderstand">
      <MemberSignature Language="C#" Value="public bool ValidateMustUnderstand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateMustUnderstand" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateMustUnderstand As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateMustUnderstand { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateMustUnderstand : bool with get, set" Usage="System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="903ec-342">SOAP <see langword="MustUnderstand" /> 헤더 처리를 시스템에서 수행하는지 아니면 응용 프로그램에서 수행하는지를 지정하는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-342">Gets or sets a value that specifies whether the system or the application enforces SOAP <see langword="MustUnderstand" /> header processing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="903ec-343">시스템에서 SOAP 헤더 <see langword="true" /> 처리를 수행할 경우 <see langword="MustUnderstand" />이고, 응용 프로그램에서 이 처리를 수행할 경우 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-343">
              <see langword="true" /> if the system is to perform SOAP header <see langword="MustUnderstand" /> processing; otherwise <see langword="false" />, which indicates that the application performs this processing.</span>
          </span>
          <span data-ttu-id="903ec-344">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="903ec-344">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903ec-345">도착하는 메시지 헤더에 적용되는 유효성 검사를 해제하려면 <xref:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand%2A> 속성을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-345">Use the <xref:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand%2A> property to turn off the enforced validation of arriving message headers.</span></span> <span data-ttu-id="903ec-346">정상적인 실행에서는 메시지 헤더를 <xref:System.ServiceModel.Channels.MessageHeaders.UnderstoodHeaders%2A> 속성과 비교하여 도착하는 헤더가 서비스에서 명시적으로 처리되는지를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-346">In normal execution, message headers are compared against the <xref:System.ServiceModel.Channels.MessageHeaders.UnderstoodHeaders%2A> property to confirm that arriving headers are explicitly handled by the service.</span></span> <span data-ttu-id="903ec-347">이 확인을 사용하지 않으려면 이 속성을 `false`로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-347">Set this to `false` to disable this checking.</span></span> <span data-ttu-id="903ec-348">`false`로 설정하면 응용 프로그램에서 MustUnderstand="true"로 표시된 헤더를 검사하여 인식되지 않은 헤더가 있을 경우 오류를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-348">When set to `false`, the application must check for headers marked with MustUnderstand="true" and return a fault if one or more of them were not understood.</span></span> <span data-ttu-id="903ec-349">이 기능은 형식화된 메시지 또는 형식화되지 않은 메시지를 사용할 경우와 같이 들어오는 SOAP 메시지를 응용 프로그램에서 수락하고 사용자 지정 헤더 처리를 수행해야 할 때 유용합니다.</span><span class="sxs-lookup"><span data-stu-id="903ec-349">This is useful when the application is supposed to accept any incoming SOAP messages (for example, when using typed or untyped messages) and perform custom header processing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>