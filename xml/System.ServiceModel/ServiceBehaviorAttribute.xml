<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ServiceBehaviorAttribute.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5735d22ca2436a6d8c7d6bb20f71912c2a3b6c18a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">735d22ca2436a6d8c7d6bb20f71912c2a3b6c18a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ServiceBehaviorAttribute">
          <source>Specifies the internal execution behavior of a service contract implementation.</source>
          <target state="translated">서비스 계약 구현의 내부 실행 동작을 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceBehaviorAttribute">
          <source>Apply the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute&gt;</ph> attribute to a service implementation to specify service-wide execution behavior.</source>
          <target state="translated">서비스 전체 실행 동작을 지정하려면 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute&gt;</ph> 특성을 서비스 구현에 적용합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceBehaviorAttribute">
          <source>(To specify execution behavior at the method level, use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute&gt;</ph> attribute.) This attribute can be applied only to service implementations.</source>
          <target state="translated">메서드 수준에서 실행 동작을 지정하려면 <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute&gt;</ph> 특성을 사용합니다. 이 특성은 서비스 구현에만 적용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceBehaviorAttribute">
          <source>For working examples, see the <bpt id="p1">[</bpt>Service Behaviors Samples<ept id="p1">](http://msdn.microsoft.com/library/4e3c6513-a7ff-4b35-8dcf-b5506c6f39a7)</ept>.</source>
          <target state="translated">작업 예제를 보려면을 참조 하십시오.는 <bpt id="p1">[</bpt>서비스 동작 샘플<ept id="p1">](http://msdn.microsoft.com/library/4e3c6513-a7ff-4b35-8dcf-b5506c6f39a7)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceBehaviorAttribute">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute&gt;</ph> properties are a <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> programming model feature that enables common features that developers otherwise have to implement.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute&gt;</ph> 속성은 <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> 프로그래밍 모델 기능으로서, 이 기능을 사용하지 않을 경우 개발자가 직접 구현해야 하는 일반적인 기능을 사용 가능하게 해줍니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceBehaviorAttribute">
          <source>For more information about these and other behaviors, see <bpt id="p1">[</bpt>Specifying Service Run-Time Behavior<ept id="p1">](~/docs/framework/wcf/specifying-service-run-time-behavior.md)</ept>.</source>
          <target state="translated">이러한 오류 코드 및 기타 동작에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>서비스 런타임 동작 지정<ept id="p1">](~/docs/framework/wcf/specifying-service-run-time-behavior.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceBehaviorAttribute">
          <source>For more information about the underlying runtime properties that some of the following properties set, see <bpt id="p1">[</bpt>Extending ServiceHost and the Service Model Layer<ept id="p1">](~/docs/framework/wcf/extending/extending-servicehost-and-the-service-model-layer.md)</ept>.</source>
          <target state="translated">기본 런타임 속성에 대 한 자세한 내용은 참조는 다음 속성 집합의 일부는 <bpt id="p1">[</bpt>확장 ServiceHost 및 서비스 모델 계층<ept id="p1">](~/docs/framework/wcf/extending/extending-servicehost-and-the-service-model-layer.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceBehaviorAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode%2A&gt;</ph> property specifies the type of filter that the dispatcher system uses to locate the endpoint that handles requests.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode%2A&gt;</ph> 속성은 디스패처 시스템이 요청을 처리하는 끝점을 찾을 때 사용하는 필터의 형식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceBehaviorAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown%2A&gt;</ph> property automatically closes the session when the channel is closed and the service has finished processing any remaining messages.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown%2A&gt;</ph> 속성은 채널이 닫히고 서비스가 나머지 메시지의 처리를 마쳤을 때 자동으로 세션을 닫습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceBehaviorAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A&gt;</ph> property controls the internal threading model, enabling support for reentrant or multithreaded services.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A&gt;</ph> 속성은 내부 스레딩 모델을 제어하여 재진입 콜백 개체나 다중 스레드 서비스의 지원을 가능하게 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceBehaviorAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A&gt;</ph> property is used to declare a name for use in the <ph id="ph2">`name`</ph> attribute of the <ph id="ph3">`&lt;service&gt;`</ph> element in a configuration file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A&gt;</ph> 속성은 구성 파일에서 <ph id="ph2">`name`</ph> 요소의 <ph id="ph3">`&lt;service&gt;`</ph> 특성에 사용할 이름을 선언하는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceBehaviorAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A&gt;</ph> property enables the run time to ignore extra serialization information that is not required to process the message.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A&gt;</ph> 속성을 사용하면 런타임은 메시지 처리에 필요 없는 추가 serialization 정보를 무시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceBehaviorAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A&gt;</ph> property specifies whether unhandled exceptions in a service are returned as SOAP faults.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A&gt;</ph> 속성은 서비스에서 처리되지 않은 예외가 SOAP 오류로 반환되는지 여부를 지정합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceBehaviorAttribute">
          <source>This is for debugging purposes only.</source>
          <target state="translated">이 속성은 디버깅 용도로만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceBehaviorAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A&gt;</ph> property specifies whether and when services and their service objects are to be recycled during an exchange with a client.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A&gt;</ph> 속성은 클라이언트와의 교환 과정에서 서비스 및 해당 서비스 개체를 재활용할 것인지 여부 및 그 시기를 지정합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceBehaviorAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph%2A&gt;</ph> property to limit on the number of items in an object graph that are serialized.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph%2A&gt;</ph> 속성은 개체 그래프에서 serialize되는 항목의 수를 제한합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceBehaviorAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.Name%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.Namespace%2A&gt;</ph> properties control the name and namespace for the WSDL expression of the service element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.Name%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.Namespace%2A&gt;</ph> 속성은 서비스 요소의 WSDL 식에 사용되는 이름과 네임스페이스를 제어합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceBehaviorAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A&gt;</ph> property specifies whether the service object is recycled when a transaction completes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A&gt;</ph> 속성은 트랜잭션이 완료되었을 때 서비스 개체가 재활용되는지 여부를 지정합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceBehaviorAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose%2A&gt;</ph> property specifies whether outstanding transactions are completed when the session closes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose%2A&gt;</ph> 속성에서는 세션을 닫을 때 처리되지 않은 트랜잭션을 완료할 것인지 여부를 지정합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceBehaviorAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel%2A&gt;</ph> property specifies the transaction isolation level that the contract supports.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel%2A&gt;</ph> 속성은 계약이 지원하는 트랜잭션 격리 수준을 지정합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceBehaviorAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout%2A&gt;</ph> property specifies the time period within which a transaction must complete or it aborts.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout%2A&gt;</ph> 속성은 트랜잭션 완료가 이루어지지 않으면 중단되는 기간을 지정합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceBehaviorAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext%2A&gt;</ph> property indicates whether to synchronize inbound method calls with the user interface thread automatically.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext%2A&gt;</ph> 속성은 인바운드 메서드 호출을 사용자 인터페이스 스레드와 자동으로 동기화하는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceBehaviorAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand%2A&gt;</ph> property informs the system whether it should confirm that SOAP headers marked as <ph id="ph2">`MustUnderstand`</ph> have, in fact, been understood.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand%2A&gt;</ph> 속성은 <ph id="ph2">`MustUnderstand`</ph>로 표시된 SOAP 헤더가 실제로 인식되었음을 확인해야 하는지 여부를 시스템에 알려 줍니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceBehaviorAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A&gt;</ph> property can also be set using an application configuration file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A&gt;</ph> 속성은 응용 프로그램 구성 파일을 사용하여 설정할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceBehaviorAttribute">
          <source>For details, see <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A&gt;</ph>.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceBehaviorAttribute">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute&gt;</ph> properties.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute&gt;</ph> 속성을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceBehaviorAttribute">
          <source>The <ph id="ph1">`BehaviorService`</ph> class uses the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute&gt;</ph> attribute to indicate that:</source>
          <target state="translated"><ph id="ph1">`BehaviorService`</ph> 클래스는 <ph id="ph2">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute&gt;</ph> 특성을 사용하여 다음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceBehaviorAttribute">
          <source>The service object is recycled when the transaction completes.</source>
          <target state="translated">트랜잭션이 완료되면 서비스 개체가 재활용됩니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceBehaviorAttribute">
          <source>There is one service object for each session.</source>
          <target state="translated">세션별로 서비스 개체가 하나씩 있습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceBehaviorAttribute">
          <source>The service is single-threaded and does not support reentrant calls.</source>
          <target state="translated">서비스는 단일 스레드이며 재진입 호출을 지원하지 않습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceBehaviorAttribute">
          <source>Furthermore, at the operation level, the <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute&gt;</ph> values indicate that the <ph id="ph2">`TxWork`</ph> method automatically enlists in flowed transactions or creates a new transaction to do the work, and that the transaction is committed automatically if an unhandled exception does not occur.</source>
          <target state="translated">또한 작업 수준에서 <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute&gt;</ph> 값은 <ph id="ph2">`TxWork`</ph> 메서드가 흐름이 지정된 트랜잭션에 자동으로 참여하거나 작업 수행을 위해 새로운 트랜잭션을 생성함을 나타내며 처리되지 않은 예외가 발생하지 않으면 트랜잭션이 자동으로 커밋됨을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceBehaviorAttribute">
          <source>The underlying binding must support flowed transactions for the following code example to execute properly.</source>
          <target state="translated">다음 코드 예제가 제대로 실행되려면 기본 바인딩에서 트랜잭션 이동을 지원해야 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceBehaviorAttribute">
          <source>To support flowed transactions using the <ph id="ph1">&lt;xref:System.ServiceModel.WSHttpBinding&gt;</ph>, for example, set the <ph id="ph2">&lt;xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A&gt;</ph> property to <ph id="ph3">`true`</ph> in code or in an application configuration file.</source>
          <target state="translated">예를 들어, <ph id="ph1">&lt;xref:System.ServiceModel.WSHttpBinding&gt;</ph>을 사용하여 트랜잭션 이동을 지원하려면 코드 또는 응용 프로그램 구성 파일에서 <ph id="ph2">&lt;xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A&gt;</ph> 속성을 <ph id="ph3">`true`</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceBehaviorAttribute">
          <source>The following code example shows the configuration file for the preceding sample.</source>
          <target state="translated">다음 코드 예제에서는 앞에 나온 샘플에 대한 구성 파일을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceBehaviorAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceBehaviorAttribute" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceBehaviorAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceBehaviorAttribute.#ctor">
          <source>The default values for the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute&gt;</ph> are:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute&gt;</ph>의 기본값은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceBehaviorAttribute.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.ServiceModel.AddressFilterMode.Exact&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode%2A&gt;</ph>는 <ph id="ph2">&lt;xref:System.ServiceModel.AddressFilterMode.Exact&gt;</ph>로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceBehaviorAttribute.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown%2A&gt;</ph> property is <ph id="ph2">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown%2A&gt;</ph> 속성은 <ph id="ph2">`true`</ph>입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceBehaviorAttribute.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.ServiceModel.ConcurrencyMode.Single&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A&gt;</ph>는 <ph id="ph2">&lt;xref:System.ServiceModel.ConcurrencyMode.Single&gt;</ph>로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceBehaviorAttribute.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A&gt;</ph> property is the namespace-qualified name of the type without the assembly information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A&gt;</ph> 속성은 어셈블리 정보가 없는, 네임스페이스 정규화된 형식 이름입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceBehaviorAttribute.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A&gt;</ph> property is <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A&gt;</ph> 속성은 <ph id="ph2">`false`</ph>입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceBehaviorAttribute.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph%2A&gt;</ph> property is set to 64KB.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph%2A&gt;</ph> 속성은 64KB로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceBehaviorAttribute.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.Name%2A&gt;</ph> property is the name of the service type, without namespace or assembly information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.Name%2A&gt;</ph> 속성은 네임스페이스 또는 어셈블리 정보가 없는, 서비스 형식 이름입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceBehaviorAttribute.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.Namespace%2A&gt;</ph> property is "<ph id="ph2">http://tempuri.org</ph>".</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.Namespace%2A&gt;</ph> 속성은 "<ph id="ph2">http://tempuri.org</ph>"입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceBehaviorAttribute.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A&gt;</ph> property is <ph id="ph2">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A&gt;</ph> 속성은 <ph id="ph2">`true`</ph>입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceBehaviorAttribute.#ctor">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A&gt;</ph> is <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A&gt;</ph>가 <ph id="ph2">`false`</ph>인 경우</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceBehaviorAttribute.#ctor">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext%2A&gt;</ph> is <ph id="ph2">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext%2A&gt;</ph>가 <ph id="ph2">`true`</ph>인 경우</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceBehaviorAttribute.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose%2A&gt;</ph> property is <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose%2A&gt;</ph> 속성은 <ph id="ph2">`false`</ph>입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceBehaviorAttribute.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel%2A&gt;</ph> property is <ph id="ph2">&lt;xref:System.Transactions.IsolationLevel.Unspecified&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel%2A&gt;</ph> 속성은 <ph id="ph2">&lt;xref:System.Transactions.IsolationLevel.Unspecified&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceBehaviorAttribute.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.TimeSpan.Zero&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout%2A&gt;</ph> 속성은 <ph id="ph2">&lt;xref:System.TimeSpan.Zero&gt;</ph>로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceBehaviorAttribute.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand%2A&gt;</ph> property is <ph id="ph2">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand%2A&gt;</ph> 속성은 <ph id="ph2">`true`</ph>입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.ServiceModel.AddressFilterMode" /&gt;</ph> that is used by the dispatcher to route incoming messages to the correct endpoint.</source>
          <target state="translated">디스패처가 들어오는 메시지를 올바른 끝점으로 라우팅하는 데 사용하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.AddressFilterMode" /&gt;</ph>를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.AddressFilterMode" /&gt;</ph> object that is used by the dispatcher to route incoming messages to the correct endpoint.</source>
          <target state="translated">디스패처가 들어오는 메시지를 올바른 끝점으로 라우팅하는 데 사용하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.AddressFilterMode" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode">
          <source>The value is not one of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.AddressFilterMode" /&gt;</ph> values.</source>
          <target state="translated">값이 <ph id="ph1">&lt;see cref="T:System.ServiceModel.AddressFilterMode" /&gt;</ph> 값 중 하나가 아닌 경우</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown">
          <source>Specifies whether to automatically close a session when a client closes an output session.</source>
          <target state="translated">클라이언트가 출력 세션을 닫을 때 세션을 자동으로 닫을지 여부를 지정합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if services automatically close a session when the client closes an output session; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">클라이언트가 출력 세션을 닫을 때 서비스가 자동으로 세션을 닫으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown">
          <source>By default when a client closes an output session and the service has finished processing any remaining messages the server closes the session.</source>
          <target state="translated">기본적으로 클라이언트가 출력 세션을 닫고 서비스에서 나머지 메시지 처리를 마치면 서버는 해당 세션을 닫습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown">
          <source>Setting <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown%2A&gt;</ph> to <ph id="ph2">`false`</ph> prevents the server from automatically closing the session and enables custom control of session lifetimes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown%2A&gt;</ph>을 <ph id="ph2">`false`</ph>로 설정하면 서버에서 세션을 자동으로 닫지 못하고 세션 수명에 대한 사용자 지정 컨트롤이 활성화됩니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode">
          <source>Gets or sets whether a service supports one thread, multiple threads, or reentrant calls.</source>
          <target state="translated">서비스가 하나의 스레드, 여러 개의 스레드 또는 재진입 호출을 지원할지 여부를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ConcurrencyMode" /&gt;</ph> values; the default is <ph id="ph2">&lt;see cref="F:System.ServiceModel.ConcurrencyMode.Single" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ConcurrencyMode" /&gt;</ph> 값 중 하나입니다. 기본값은 <ph id="ph2">&lt;see cref="F:System.ServiceModel.ConcurrencyMode.Single" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode">
          <source>This property indicates whether an instance of a service can handle one thread or multiple threads that execute concurrently, and if single-threaded, whether reentrancy is supported.</source>
          <target state="translated">이 속성은 서비스의 인스턴스가 하나의 스레드 또는 동시에 실행되는 여러 스레드를 처리하는지 여부 그리고 단일 스레드인 경우 재진입이 지원되는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A&gt;</ph> property interacts with some other settings.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A&gt;</ph> 속성은 다른 설정과 상호 작용합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode">
          <source>For example, if the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A&gt;</ph> value is set to <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContextMode.Single&gt;</ph> the result is that your service can only process one message at a time unless you also set the <ph id="ph3">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A&gt;</ph> value to <ph id="ph4">&lt;xref:System.ServiceModel.ConcurrencyMode.Multiple&gt;</ph>.</source>
          <target state="translated">예를 들어, <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A&gt;</ph> 값을 <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContextMode.Single&gt;</ph>로 설정한 경우 <ph id="ph3">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A&gt;</ph> 값을 <ph id="ph4">&lt;xref:System.ServiceModel.ConcurrencyMode.Multiple&gt;</ph>로 설정하지 않으면 서비스에서 한 번에 하나의 메시지만 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode">
          <source>This property also produces behavior in combination with the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">또한 이 속성은 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=nameWithType&gt;</ph> 속성과 함께 동작을 생성합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode">
          <source>For details, see <bpt id="p1">[</bpt>Sessions, Instancing, and Concurrency<ept id="p1">](~/docs/framework/wcf/feature-details/sessions-instancing-and-concurrency.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>세션과 Instancing, 동시성<ept id="p1">](~/docs/framework/wcf/feature-details/sessions-instancing-and-concurrency.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode">
          <source>Setting <ph id="ph1">&lt;xref:System.ServiceModel.ConcurrencyMode&gt;</ph> to <ph id="ph2">&lt;xref:System.ServiceModel.ConcurrencyMode.Single&gt;</ph> instructs the system to restrict instances of the service to one thread of execution at a time, which frees you from dealing with threading issues.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ConcurrencyMode&gt;</ph>를 <ph id="ph2">&lt;xref:System.ServiceModel.ConcurrencyMode.Single&gt;</ph>로 설정하면 시스템은 서비스의 인스턴스를 한 번에 하나의 실행 스레드로 제한하므로, 스레딩 문제를 처리하지 않아도 됩니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode">
          <source>A value of <ph id="ph1">&lt;xref:System.ServiceModel.ConcurrencyMode.Multiple&gt;</ph> means that service objects can be executed by multiple threads at any one time.</source>
          <target state="translated">값이 <ph id="ph1">&lt;xref:System.ServiceModel.ConcurrencyMode.Multiple&gt;</ph>이면 언제든지 한 번에 여러 스레드가 서비스 개체를 실행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode">
          <source>In this case, you must ensure thread safety.</source>
          <target state="translated">이런 경우 스레드 안전성을 확인해야 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.ConcurrencyMode.Reentrant&gt;</ph> also restricts access to a single thread at a time; while the operation is processing, no other message can enter the operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ConcurrencyMode.Reentrant&gt;</ph> 또한; 한 번에 스레드 하나에 액세스를 제한 작업을 처리 하는 동안 다른 메시지가 작업을 입력할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode">
          <source>If during the operation a call to another service leaves, the current message loses the lock on the operation, which is free to process other messages.</source>
          <target state="translated">작업 중에 다른 서비스에 대한 호출이 발생하면 현재 메시지는 해당 작업에 대한 잠금을 해제하며 따라서 이 작업은 다른 메시지를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode">
          <source>When the service call out returns, the lock is reestablished and the original message can continue processing to its conclusion or until another call out of the operation occurs.</source>
          <target state="translated">서비스 호출이 반환되면 잠금이 다시 설정되고 원래의 메시지가 처리 완료 시까지 또는 해당 작업에 대한 다른 호출이 발생할 때까지 처리를 계속할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode">
          <source>Even though <ph id="ph1">&lt;xref:System.ServiceModel.ConcurrencyMode.Single&gt;</ph> restricts instances of the service to one thread of execution at a time, you must also set <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls%2A&gt;</ph> to 1 to guarantee no out-of-order messages.</source>
          <target state="translated">경우에 <ph id="ph1">&lt;xref:System.ServiceModel.ConcurrencyMode.Single&gt;</ph> 인스턴스 제한에 서비스 실행 한 번에 하나의 스레드를 설정 해야 <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls%2A&gt;</ph> 을 1로의 순서가 메시지가 보장 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode">
          <source>Also, it is your responsibility to leave your object state consistent before callouts and you must confirm that operation-local data is valid after callouts.</source>
          <target state="translated">또한을 설명선 전에 일관성 있는 개체 상태를 유지 되며 후 작업-로컬 데이터가 유효한 지 확인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode">
          <source>Note that the service instance is unlocked only by calling another service over a <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> channel.</source>
          <target state="translated">서비스 인스턴스는 <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 채널을 통해 다른 서비스를 호출하는 방법으로만 잠금 해제됩니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode">
          <source>In this case, the called service can reenter the first service via a callback.</source>
          <target state="translated">이런 경우 호출된 서비스는 콜백을 통해 첫 번째 서비스에 재진입할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode">
          <source>If the first service is not reentrant, the sequence of calls results in a deadlock.</source>
          <target state="translated">첫 번째 서비스가 재진입이 아닌 경우 호출 시퀀스는 교착 상태에 빠지게 됩니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode">
          <source>For details, see <ph id="ph1">&lt;xref:System.ServiceModel.ConcurrencyMode&gt;</ph>.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.ServiceModel.ConcurrencyMode&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode">
          <source>During any outbound call from a processing operation, data not local to the operation can be modified.</source>
          <target state="translated">처리 중인 작업에서 아웃바운드 호출 도중, 해당 작업에 속하지 않은 데이터를 수정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode">
          <source>(Local state data is guaranteed to be valid when the original message resumes processing.) As a result, before your outbound call you must ensure that non-local data is valid for other incoming calls and revalidate non-local data after the outbound call returns.</source>
          <target state="translated">원래의 메시지가 다시 처리를 시작할 때 로컬 상태 데이터는 항상 유효합니다. 따라서 아웃바운드 호출에 앞서 먼저, 작업에 속하지 않은 데이터가 다른 들어오는 호출에 대해 유효한지 확인하고, 아웃바운드 호출 반환 후에는 작업에 속하지 않은 데이터의 유효성을 다시 검사해야 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode">
          <source>The following pseudo-code illustrates the required pattern for successful reentrant support.</source>
          <target state="translated">다음 의사(pseudo) 코드에서는 성공적인 재진입 지원에 필요한 패턴을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode">
          <source>Using the Begin/End asynchronous call pattern for an outbound call when the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A&gt;</ph> is <ph id="ph2">&lt;xref:System.ServiceModel.ConcurrencyMode.Reentrant&gt;</ph> triggers an exception.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A&gt;</ph>가 <ph id="ph2">&lt;xref:System.ServiceModel.ConcurrencyMode.Reentrant&gt;</ph>일 때 아웃바운드 호출에 대해 Begin/End 비동기 호출 패턴을 사용하면 예외가 트리거됩니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode">
          <source>Asynchronous outbound calls require an operation in which <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A&gt;</ph> is <ph id="ph2">&lt;xref:System.ServiceModel.ConcurrencyMode.Multiple&gt;</ph>, in which case you must handle synchronization issues.</source>
          <target state="translated">비동기 아웃바운드 호출에서는 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A&gt;</ph>가 <ph id="ph2">&lt;xref:System.ServiceModel.ConcurrencyMode.Multiple&gt;</ph>인 작업이 필요하며, 이 경우 사용자는 동기화 문제를 처리해야 합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode">
          <source>Generally, if a message arrives for an instance that violates its concurrency mode, the message waits until the instance is available, or until it times out.</source>
          <target state="translated">일반적으로 인스턴스에 대해 동시성 모드를 위반하는 메시지가 도착할 경우 그 메시지는 인스턴스가 사용 가능해지거나 시간 제한이 초과할 때까지 대기합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode">
          <source>In addition, if the <ph id="ph1">&lt;xref:System.ServiceModel.ConcurrencyMode&gt;</ph> is set to <ph id="ph2">&lt;xref:System.ServiceModel.ConcurrencyMode.Single&gt;</ph> and a reentrant call is blocked while waiting for the instance to be freed, the system detects the deadlock and throws an exception.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.ServiceModel.ConcurrencyMode&gt;</ph>가 <ph id="ph2">&lt;xref:System.ServiceModel.ConcurrencyMode.Single&gt;</ph>로 설정되었으며 인스턴스가 해제될 때까지 기다리는 동안 재진입 호출이 차단되는 경우, 시스템은 교착 상태를 감지하고 예외를 throw합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode">
          <source>A <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown at runtime if <ph id="ph2">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A&gt;</ph> is <ph id="ph3">`true`</ph> when the <ph id="ph4">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A&gt;</ph> property is set to <ph id="ph5">&lt;xref:System.ServiceModel.ConcurrencyMode.Single&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> 속성이 <ph id="ph2">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A&gt;</ph>로 설정된 상태에서 <ph id="ph3">`true`</ph>가 <ph id="ph4">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A&gt;</ph>인 경우에는 런타임에 <ph id="ph5">&lt;xref:System.ServiceModel.ConcurrencyMode.Single&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode">
          <source>Note that you must explicitly set <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A&gt;</ph> to <ph id="ph2">`false`</ph> if there is an operation with <ph id="ph3">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A?displayProperty=nameWithType&gt;</ph> set to true and you set <ph id="ph4">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A&gt;</ph> to <ph id="ph5">&lt;xref:System.ServiceModel.ConcurrencyMode.Reentrant&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A&gt;</ph>이 true로 설정된 작업이 있고 <ph id="ph2">`false`</ph>를 <ph id="ph3">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A?displayProperty=nameWithType&gt;</ph>로 설정한 경우, 명시적으로 <ph id="ph4">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A&gt;</ph>를 <ph id="ph5">&lt;xref:System.ServiceModel.ConcurrencyMode.Reentrant&gt;</ph>로 설정해야 합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode">
          <source>Otherwise a validation exception is thrown because the default value of <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A&gt;</ph> is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">그렇지 않으면, <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A&gt;</ph>의 기본값이 <ph id="ph2">`true`</ph>이므로 유효성 검사 예외가 throw됩니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode">
          <source>There is an interaction of the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A&gt;</ph> and other properties that can alter runtime behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A&gt;</ph>와 다른 속성 간의 상호 작용이 있어서 런타임 동작을 바꿀 수 있습니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode">
          <source>For a complete description of these interactions, see <bpt id="p1">[</bpt>Sessions, Instancing, and Concurrency<ept id="p1">](~/docs/framework/wcf/feature-details/sessions-instancing-and-concurrency.md)</ept>.</source>
          <target state="translated">이러한 상호 작용 설명과 참조 <bpt id="p1">[</bpt>세션과 Instancing, 동시성<ept id="p1">](~/docs/framework/wcf/feature-details/sessions-instancing-and-concurrency.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode">
          <source>The following code example demonstrates the different between using <ph id="ph1">&lt;xref:System.ServiceModel.ConcurrencyMode.Single&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.ConcurrencyMode.Reentrant&gt;</ph>, and <ph id="ph3">&lt;xref:System.ServiceModel.ConcurrencyMode.Multiple&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.ServiceModel.ConcurrencyMode.Single&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.ConcurrencyMode.Reentrant&gt;</ph> 및 <ph id="ph3">&lt;xref:System.ServiceModel.ConcurrencyMode.Multiple&gt;</ph>을 사용했을 때의 차이점을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode">
          <source>This sample does not compile without a real implementation behind it, but does demonstrate the kind of threading guarantees that <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> makes and what that means for your operation code.</source>
          <target state="translated">이 샘플은 실제 구현이 없어 컴파일되지는 않지만 <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>에서 사용 가능한 스레딩의 종류 및 이러한 스레딩이 사용자의 작업 코드에 미치는 영향을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode">
          <source>The value is not one of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ConcurrencyMode" /&gt;</ph> values.</source>
          <target state="translated">값이 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ConcurrencyMode" /&gt;</ph> 값 중 하나가 아닌 경우</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName">
          <source>Gets or sets the value used to locate the service element in an application configuration file.</source>
          <target state="translated">응용 프로그램 구성 파일에서 서비스 요소를 찾는 데 사용되는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName">
          <source>The value to locate in the configuration file.</source>
          <target state="translated">구성 파일에서 찾을 값입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName">
          <source>The default value is the fully qualified type name without assembly information.</source>
          <target state="translated">기본값은 어셈블리 정보가 없는, 정규화된 형식 이름입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName">
          <source>Use this value to specify a particular service in the configuration file.</source>
          <target state="translated">구성 파일에서 특정 서비스를 지정하려면 이 값을 사용합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName">
          <source>The value is null.</source>
          <target state="translated">값이 null인 경우</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName">
          <source>The value is an empty string.</source>
          <target state="translated">값이 빈 문자열인 경우</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch">
          <source>Gets or sets a value that indicates whether the service ordered dispatch is ensured.</source>
          <target state="translated">서비스에서 주문한 디스패치를 확인하는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> if the service ordered dispatch is ensured; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">서비스에서 주문한 디스패치를 확인하면 <ph id="ph1">&lt;see langword="True" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton">
          <source>Retrieves an object that implements the service and that is used as the singleton instance of the service, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if there is no singleton instance.</source>
          <target state="translated">서비스를 구현하고 서비스의 단일 인스턴스로 사용되는 개체를 검색하며, 단일 인스턴스가 없는 경우 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton">
          <source>An implementation of the service.</source>
          <target state="translated">서비스의 구현입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton">
          <source>A non-<ph id="ph1">`null`</ph> value provides the service instance to which all messages addressed to the service will be dispatched.</source>
          <target state="translated">값이 <ph id="ph1">`null`</ph>이 아닌 경우, 서비스에 전달되도록 주소가 지정된 모든 메시지를 디스패치할 대상 서비스 인스턴스가 제공됩니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject">
          <source>Gets or sets a value that specifies whether to send unknown serialization data onto the wire.</source>
          <target state="translated">네트워크에서 알 수 없는 serialization 데이터를 보낼지 여부를 지정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if unknown serialization data is never sent; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">알 수 없는 serialization 데이터를 보내지 않으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject">
          <source>If a type implements the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;</ph> interface, it stores any extra data it doesn’t know about that comes over the wire when deserializing into that type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;</ph> 인터페이스를 구현하는 형식의 경우 이 형식은 해당 형식으로 deserialize할 때 연결을 통해 도착한 알 수 없는 추가 데이터를 저장합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject">
          <source>For example, if a type <ph id="ph1">`Person`</ph> has members <ph id="ph2">`FirstName`</ph> and <ph id="ph3">`LastName`</ph>, and an element called <ph id="ph4">`PhoneNumber`</ph> comes in, it is stored.</source>
          <target state="translated">예를 들어, <ph id="ph1">`Person`</ph> 형식에 <ph id="ph2">`FirstName`</ph> 및 <ph id="ph3">`LastName`</ph>이라는 멤버가 있으며 <ph id="ph4">`PhoneNumber`</ph>라는 요소가 도착하면 이 요소가 저장됩니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject">
          <source>When later serializing the type, <ph id="ph1">`PhoneNumber`</ph> will be re-emitted.</source>
          <target state="translated">나중에 이 형식을 serialize할 때 <ph id="ph1">`PhoneNumber`</ph>를 다시 내보냅니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject">
          <source>The problem is that the schema for <ph id="ph1">`Person`</ph> exported by that service only has <ph id="ph2">`FirstName`</ph> and <ph id="ph3">`LastName`</ph>, so <ph id="ph4">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> generates a schema-invalid instance!</source>
          <target state="translated">문제는 해당 서비스에서 내보낸 <ph id="ph1">`Person`</ph>의 스키마가 <ph id="ph2">`FirstName`</ph>과 <ph id="ph3">`LastName`</ph>만을 가지므로 <ph id="ph4">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>에서는 스키마에 적합하지 않은 인스턴스를 생성한다는 점입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject">
          <source>If strict schema compliance is important, you can set <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A&gt;</ph> to <ph id="ph2">`true`</ph> to turn this re-emitting behavior off.</source>
          <target state="translated">스키마를 엄격하게 준수하는 것이 중요하다면 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A&gt;</ph>를 <ph id="ph2">`true`</ph>로 설정하여 이 다시 내보내기 동작을 해제할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject">
          <source>Regardless <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A&gt;</ph> setting, <ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> always processes known data (both in and out) and does not throw exceptions when extra data comes in.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A&gt;</ph> 설정과 관계없이 <ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph>에서는 들어오고 나가는 알려진 데이터를 항상 처리하며, 추가 데이터가 들어올 때 예외를 throw하지 않습니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject">
          <source>You can also set this property using the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>dataContractSerializer<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/datacontractserializer-element.md)</ept> element in an application configuration file.</source>
          <target state="translated">사용 하 여이 속성을 설정할 수도 있습니다는 <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>dataContractSerializer<ph id="ph2">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/datacontractserializer-element.md)</ept> 응용 프로그램 구성 파일의 요소입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject">
          <source>The following example shows the use of <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A&gt;</ph> and an implementation of <ph id="ph2">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A&gt;</ph>의 사용과 <ph id="ph2">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;</ph>의 구현을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject">
          <source>In this sample, with <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A&gt;</ph> set to <ph id="ph2">`false`</ph>, the extra data that the client knows about is round-tripped back to the client.</source>
          <target state="translated">이 샘플에서는 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A&gt;</ph>가 <ph id="ph2">`false`</ph>로 설정된 상태에서 클라이언트가 알고 있는 추가 데이터가 다시 클라이언트로 라운드트립됩니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults">
          <source>Gets or sets a value that specifies that general unhandled execution exceptions are to be converted into a <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException`1" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.ServiceModel.ExceptionDetail" /&gt;</ph> and sent as a fault message.</source>
          <target state="translated">일반적인 처리되지 않은 실행 예외를 <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException`1" /&gt;</ph> 형식의 <ph id="ph2">&lt;see cref="T:System.ServiceModel.ExceptionDetail" /&gt;</ph>으로 변환하고 오류 메시지로 보내도록 지정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults">
          <source>Set this to <ph id="ph1">&lt;see langword="true" /&gt;</ph> only during development to troubleshoot a service.</source>
          <target state="translated">서비스 문제를 해결하려면 개발하는 동안에만 이 값을 <ph id="ph1">&lt;see langword="true" /&gt;</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if unhandled exceptions are to be returned as SOAP faults; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">처리되지 않은 예외가 SOAP 오류로 반환되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않을 경우 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults">
          <source>Set <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A&gt;</ph> to <ph id="ph2">`true`</ph> to enable exception information to flow to clients for debugging purposes.</source>
          <target state="translated">디버깅을 위해 예외 정보가 클라이언트로 이동할 수 있게 하려면 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A&gt;</ph>를 <ph id="ph2">`true`</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults">
          <source>This property requires a binding that supports either request-response or duplex messaging.</source>
          <target state="translated">이 속성에서는 요청-응답 또는 이중 메시징을 지원하는 바인딩이 필요합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults">
          <source>In all managed applications, processing errors are represented by <ph id="ph1">&lt;xref:System.Exception&gt;</ph> objects.</source>
          <target state="translated">관리되는 모든 응용 프로그램에서 처리 오류는 <ph id="ph1">&lt;xref:System.Exception&gt;</ph> 개체로 표시됩니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults">
          <source>In SOAP-based applications such as <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> applications, methods that implement service operations communicate error information using SOAP fault messages.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 응용 프로그램 같은 SOAP 기반 응용 프로그램의 경우 서비스 작업을 구현하는 메서드는 SOAP 오류 메시지를 사용하여 오류 정보를 전달합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults">
          <source>Because <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> applications execute under both types of error systems, any managed exception information that needs to be sent to the client must be converted from exceptions into SOAP faults.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 응용 프로그램은 두 가지 유형의 오류 시스템에서 실행되므로 클라이언트로 전송해야 하는 관리되는 모든 예외 정보는 예외에서 SOAP 오류로 변환해야 합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults">
          <source>For more information, see <bpt id="p1">[</bpt>Specifying and Handling Faults in Contracts and Services<ept id="p1">](~/docs/framework/wcf/specifying-and-handling-faults-in-contracts-and-services.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>지정 및 계약 및 서비스에서 처리 오류<ept id="p1">](~/docs/framework/wcf/specifying-and-handling-faults-in-contracts-and-services.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults">
          <source>During development, you may want your service to also send other exceptions back to the client to assist you in debugging.</source>
          <target state="translated">개발 과정에서 디버깅에 도움이 되도록 서비스에서 기타 예외도 클라이언트에 돌려보내도록 하는 경우가 있습니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults">
          <source>This is a development-only feature and should not be employed in deployed services.</source>
          <target state="translated">이는 개발 전용 기능이므로 배포된 서비스에서는 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults">
          <source>To facilitate debugging development, set the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A&gt;</ph> to <ph id="ph2">`true`</ph> either in code or using an application configuration file.</source>
          <target state="translated">디버깅 개발을 위해 설정 된 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A&gt;</ph> 를 <ph id="ph2">`true`</ph> 코드 또는 응용 프로그램 구성 파일을 사용 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults">
          <source>When enabled, the service automatically returns safer exception information to the caller.</source>
          <target state="translated">이 설정을 사용하면 서비스는 더 안전한 예외 정보를 자동으로 호출자에게 반환합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults">
          <source>These faults appear to the client as <ph id="ph1">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> objects of type <ph id="ph2">&lt;xref:System.ServiceModel.ExceptionDetail&gt;</ph>.</source>
          <target state="translated">이 오류는 <ph id="ph1">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> 형식의 <ph id="ph2">&lt;xref:System.ServiceModel.ExceptionDetail&gt;</ph> 개체로 클라이언트에 나타납니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults">
          <source>Setting <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A&gt;</ph> to <ph id="ph2">`true`</ph> enables clients to obtain information about internal service method exceptions; it is only recommended as a way of temporarily debugging a service application.</source>
          <target state="translated">설정 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A&gt;</ph> 를 <ph id="ph2">`true`</ph> ; 내부에 대 한 정보를 사용 하면 클라이언트 서비스 메서드 예외를 일시적으로 서비스 응용 프로그램을 디버깅 하는 방법으로만 권장 됩니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults">
          <source>In addition, the WSDL for a method that returns unhandled managed exceptions in this way does not contain the contract for the <ph id="ph1">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> of type <ph id="ph2">&lt;xref:System.ServiceModel.ExceptionDetail&gt;</ph>.</source>
          <target state="translated">또한 이 방법으로 처리되지 않은 관리되는 예외를 반환하는 메서드의 WSDL에는 <ph id="ph1">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> 형식의 <ph id="ph2">&lt;xref:System.ServiceModel.ExceptionDetail&gt;</ph>에 대한 계약이 포함되지 않습니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults">
          <source>Clients must expect the possibility of an unknown SOAP fault to obtain the debugging information properly.</source>
          <target state="translated">디버깅 정보를 제대로 얻으려면 클라이언트는 알 수 없는 SOAP 오류의 가능성을 예상해야 합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults">
          <source>Setting this property to <ph id="ph1">`true`</ph> can also be done using an application configuration file and the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>serviceDebug<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/servicedebug.md)</ept> element, as the following code example shows.</source>
          <target state="translated">이 속성을 설정 <ph id="ph1">`true`</ph> 에서도 가능 응용 프로그램 구성 파일을 사용 하 여 및 <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>serviceDebug<ph id="ph3">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/servicedebug.md)</ept> 다음 코드 예제와 같이 요소입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute&gt;</ph> properties.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute&gt;</ph> 속성을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults">
          <source>The <ph id="ph1">`BehaviorService`</ph> class uses the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute&gt;</ph> attribute to indicate that:</source>
          <target state="translated"><ph id="ph1">`BehaviorService`</ph> 클래스는 <ph id="ph2">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute&gt;</ph> 특성을 사용하여 다음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults">
          <source>Implementation methods are invoked on the UI thread.</source>
          <target state="translated">구현 메서드가 UI 스레드에서 호출됩니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults">
          <source>There is one service object for each session.</source>
          <target state="translated">세션별로 서비스 개체가 하나씩 있습니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults">
          <source>The service is single-threaded and does not support reentrant calls.</source>
          <target state="translated">서비스는 단일 스레드이며 재진입 호출을 지원하지 않습니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults">
          <source>Furthermore, at the operation level, the <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute&gt;</ph> values indicate that the <ph id="ph2">`TxWork`</ph> method automatically enlists in flowed transactions or creates a new transaction to do the work, and that the transaction is committed automatically if an unhandled exception does not occur.</source>
          <target state="translated">또한 작업 수준에서 <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute&gt;</ph> 값은 <ph id="ph2">`TxWork`</ph> 메서드가 흐름이 지정된 트랜잭션에 자동으로 참여하거나 작업 수행을 위해 새로운 트랜잭션을 생성함을 나타내며 처리되지 않은 예외가 발생하지 않으면 트랜잭션이 자동으로 커밋됨을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults">
          <source>The underlying binding must support flowed transactions for the following code example to execute properly.</source>
          <target state="translated">다음 코드 예제가 제대로 실행되려면 기본 바인딩에서 트랜잭션 이동을 지원해야 합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults">
          <source>To support flowed transactions using the <ph id="ph1">&lt;xref:System.ServiceModel.WSHttpBinding&gt;</ph>, for example, set the <ph id="ph2">&lt;xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A&gt;</ph> property to <ph id="ph3">`true`</ph> in code or in an application configuration file.</source>
          <target state="translated">예를 들어, <ph id="ph1">&lt;xref:System.ServiceModel.WSHttpBinding&gt;</ph>을 사용하여 트랜잭션 이동을 지원하려면 코드 또는 응용 프로그램 구성 파일에서 <ph id="ph2">&lt;xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A&gt;</ph> 속성을 <ph id="ph3">`true`</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults">
          <source>The following code example shows the configuration file for the preceding sample.</source>
          <target state="translated">다음 코드 예제에서는 앞에 나온 샘플에 대한 구성 파일을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode">
          <source>Gets or sets the value that indicates when new service objects are created.</source>
          <target state="translated">새 서비스 개체 생성 시점을 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContextMode" /&gt;</ph> values; the default value is <ph id="ph2">&lt;see cref="F:System.ServiceModel.InstanceContextMode.PerSession" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContextMode" /&gt;</ph> 값 중 하나입니다. 기본값은 <ph id="ph2">&lt;see cref="F:System.ServiceModel.InstanceContextMode.PerSession" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.InstanceContextMode&gt;</ph> property to specify when new service objects are created.</source>
          <target state="translated">새 서비스 개체 생성 시점을 지정하려면 <ph id="ph1">&lt;xref:System.ServiceModel.InstanceContextMode&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode">
          <source>Because the service object is not directly connected to the communicating channel, the lifetime of the service objects is independent of the lifetime of the channel between a client and the service application.</source>
          <target state="translated">서비스 개체가 통신 채널과 직접 연결되지 않으므로 서비스 개체의 수명은 클라이언트와 서비스 응용 프로그램 사이의 채널이 가지는 수명과 관계가 없습니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode">
          <source>The default value, <ph id="ph1">&lt;xref:System.ServiceModel.InstanceContextMode.PerSession&gt;</ph>, instructs the service application to create a new service object when a new communication session is established between a client and the service application.</source>
          <target state="translated">기본값인 <ph id="ph1">&lt;xref:System.ServiceModel.InstanceContextMode.PerSession&gt;</ph>은 클라이언트와 서비스 응용 프로그램 간에 새 통신 세션이 설정될 경우 서비스 응용 프로그램이 새 서비스 개체를 만들도록 합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode">
          <source>Subsequent calls in the same session are handled by the same object.</source>
          <target state="translated">동일 세션 내의 후속 호출은 동일한 개체가 처리합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.InstanceContextMode.PerSession&gt;</ph> indicates that each service object handles requests from one client channel.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.InstanceContextMode.PerSession&gt;</ph>은 각 서비스 개체가 하나의 클라이언트 채널의 요청을 처리함을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A&gt;</ph> property interacts with some other settings.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A&gt;</ph> 속성은 다른 설정과 상호 작용합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode">
          <source>For example, if the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A&gt;</ph> value is set to <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContextMode.Single&gt;</ph> the result is that your service can only process one message at a time unless you also set the <ph id="ph3">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A&gt;</ph> value to <ph id="ph4">&lt;xref:System.ServiceModel.ConcurrencyMode.Multiple&gt;</ph>.</source>
          <target state="translated">예를 들어, <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A&gt;</ph> 값을 <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContextMode.Single&gt;</ph>로 설정한 경우 <ph id="ph3">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A&gt;</ph> 값을 <ph id="ph4">&lt;xref:System.ServiceModel.ConcurrencyMode.Multiple&gt;</ph>로 설정하지 않으면 서비스에서 한 번에 하나의 메시지만 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode">
          <source>This property also produces behavior in combination with the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">또한 이 속성은 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=nameWithType&gt;</ph> 속성과 함께 동작을 생성합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode">
          <source>For details, see <bpt id="p1">[</bpt>Sessions, Instancing, and Concurrency<ept id="p1">](~/docs/framework/wcf/feature-details/sessions-instancing-and-concurrency.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>세션과 Instancing, 동시성<ept id="p1">](~/docs/framework/wcf/feature-details/sessions-instancing-and-concurrency.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode">
          <source>For singleton lifetime behavior (for example, if the host application calls the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%2A&gt;</ph> constructor and passes an object to use as the service), the service class must set <ph id="ph2">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A&gt;</ph> to <ph id="ph3">`Single`</ph>, or an exception is thrown at run time.</source>
          <target state="translated">단일 수명 동작(예: 호스트 응용 프로그램이 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%2A&gt;</ph> 생성자를 호출하고 서비스로 사용할 개체를 전달하는 경우)에 대해서는 서비스 클래스에서 <ph id="ph2">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A&gt;</ph>를 <ph id="ph3">`Single`</ph>로 설정해야 합니다. 그렇지 않으면 런타임에 예외가 throw됩니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute&gt;</ph> properties.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute&gt;</ph> 속성을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode">
          <source>The <ph id="ph1">`BehaviorService`</ph> class uses the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute&gt;</ph> attribute to indicate that:</source>
          <target state="translated"><ph id="ph1">`BehaviorService`</ph> 클래스는 <ph id="ph2">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute&gt;</ph> 특성을 사용하여 다음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode">
          <source>Implementation methods are invoked on the UI thread.</source>
          <target state="translated">구현 메서드가 UI 스레드에서 호출됩니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode">
          <source>There is one service object for each session.</source>
          <target state="translated">세션별로 서비스 개체가 하나씩 있습니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode">
          <source>The service is single-threaded and does not support reentrant calls.</source>
          <target state="translated">서비스는 단일 스레드이며 재진입 호출을 지원하지 않습니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode">
          <source>Furthermore, at the operation level, the <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute&gt;</ph> values indicate that the <ph id="ph2">`TxWork`</ph> method automatically enlists in flowed transactions or creates a new transaction to do the work, and that the transaction is committed automatically if an unhandled exception does not occur.</source>
          <target state="translated">또한 작업 수준에서 <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute&gt;</ph> 값은 <ph id="ph2">`TxWork`</ph> 메서드가 흐름이 지정된 트랜잭션에 자동으로 참여하거나 작업 수행을 위해 새로운 트랜잭션을 생성함을 나타내며 처리되지 않은 예외가 발생하지 않으면 트랜잭션이 자동으로 커밋됨을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode">
          <source>The underlying binding must support flowed transactions for the following code example to execute properly.</source>
          <target state="translated">다음 코드 예제가 제대로 실행되려면 기본 바인딩에서 트랜잭션 이동을 지원해야 합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode">
          <source>To support flowed transactions using the <ph id="ph1">&lt;xref:System.ServiceModel.WSHttpBinding&gt;</ph>, for example, set the <ph id="ph2">&lt;xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A&gt;</ph> property to <ph id="ph3">`true`</ph> in code or in an application configuration file.</source>
          <target state="translated">예를 들어, <ph id="ph1">&lt;xref:System.ServiceModel.WSHttpBinding&gt;</ph>을 사용하여 트랜잭션 이동을 지원하려면 코드 또는 응용 프로그램 구성 파일에서 <ph id="ph2">&lt;xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A&gt;</ph> 속성을 <ph id="ph3">`true`</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode">
          <source>The following code example shows the configuration file for the preceding sample.</source>
          <target state="translated">다음 코드 예제에서는 앞에 나온 샘플에 대한 구성 파일을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode">
          <source>The value is not one of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContextMode" /&gt;</ph> values.</source>
          <target state="translated">값이 <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContextMode" /&gt;</ph> 값 중 하나가 아닌 경우</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph">
          <source>Gets or sets the maximum number of items allowed in a serialized object.</source>
          <target state="translated">serialize된 개체에 허용되는 최대 항목 수를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph">
          <source>The maximum number of items allowed in an object.</source>
          <target state="translated">개체에 허용되는 최대 항목 수입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph">
          <source>The default is 65536 bytes (64KB).</source>
          <target state="translated">기본값은 65536바이트(64KB)입니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph%2A&gt;</ph> property set a limit on the number of items in an object graph that are serialized.</source>
          <target state="translated">개체 그래프에서 serialize되는 항목의 수를 제한하려면 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph%2A&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph">
          <source>You can also set this property using the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>dataContractSerializer<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/datacontractserializer-element.md)</ept> element in an application configuration file.</source>
          <target state="translated">사용 하 여이 속성을 설정할 수도 있습니다는 <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>dataContractSerializer<ph id="ph2">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/datacontractserializer-element.md)</ept> 응용 프로그램 구성 파일의 요소입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceBehaviorAttribute.Name">
          <source>Gets or sets the value of the name attribute in the service element in Web Services Description Language (WSDL).</source>
          <target state="translated">WSDL(웹 서비스 기술 언어)에서 서비스 요소의 이름 특성 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.Name">
          <source>The value of the name attribute in the <ph id="ph1">&lt;see langword="&amp;lt;wsdl:service&amp;gt;" /&gt;</ph> element when exported.</source>
          <target state="translated">내보낼 때 <ph id="ph1">&lt;see langword="&amp;lt;wsdl:service&amp;gt;" /&gt;</ph> 요소의 이름 특성의 값입니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceBehaviorAttribute.Namespace">
          <source>Gets or sets the value of the target namespace for the service in Web Services Description Language (WSDL).</source>
          <target state="translated">WSDL(웹 서비스 기술 언어)에서 서비스의 대상 네임스페이스 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.Namespace">
          <source>The value of the <ph id="ph1">&lt;see langword="targetNamespace" /&gt;</ph> attribute for the <ph id="ph2">&lt;see langword="&amp;lt;wsdl:definitions&amp;gt;" /&gt;</ph> element that contains the <ph id="ph3">&lt;see langword="&amp;lt;wsdl:service&amp;gt;" /&gt;</ph> element.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="targetNamespace" /&gt;</ph> 요소를 포함하는 <ph id="ph2">&lt;see langword="&amp;lt;wsdl:definitions&amp;gt;" /&gt;</ph> 요소에 대한 <ph id="ph3">&lt;see langword="&amp;lt;wsdl:service&amp;gt;" /&gt;</ph> 특성 값입니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete">
          <source>Gets or sets a value that specifies whether the service object is released when the current transaction completes.</source>
          <target state="translated">현재 트랜잭션이 완료되면 서비스 개체를 해제하는지 여부를 지정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the service object is to be released; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">서비스 개체가 해제되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete">
          <source>Note that you must explicitly set <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A&gt;</ph> to <ph id="ph2">`false`</ph> if there is an operation with <ph id="ph3">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A?displayProperty=nameWithType&gt;</ph> set to true and you set <ph id="ph4">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A&gt;</ph> to <ph id="ph5">&lt;xref:System.ServiceModel.ConcurrencyMode.Reentrant&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A&gt;</ph>이 true로 설정된 작업이 있고 <ph id="ph2">`false`</ph>를 <ph id="ph3">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A?displayProperty=nameWithType&gt;</ph>로 설정한 경우, 명시적으로 <ph id="ph4">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A&gt;</ph>를 <ph id="ph5">&lt;xref:System.ServiceModel.ConcurrencyMode.Reentrant&gt;</ph>로 설정해야 합니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete">
          <source>Otherwise a validation exception is thrown because the default value of <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A&gt;</ph> is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">그렇지 않으면, <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A&gt;</ph>의 기본값이 <ph id="ph2">`true`</ph>이므로 유효성 검사 예외가 throw됩니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete">
          <source>In addition, it is important to realize that if the service is created by passing a service object to the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29?displayProperty=nameWithType&gt;</ph> constructor, the value of this property is treated as if it were <ph id="ph2">`false`</ph>.</source>
          <target state="translated">또한 서비스 개체를 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29?displayProperty=nameWithType&gt;</ph> 생성자에 전달하는 방법으로 서비스를 생성한 경우 이 속성의 값은 <ph id="ph2">`false`</ph>처럼 처리됩니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete">
          <source>The following code example sets the transaction isolation level to <ph id="ph1">&lt;xref:System.Transactions.IsolationLevel.ReadCommitted&gt;</ph>, disables support for concurrent transactions, requires a flowed transaction from the operation call, and commits the transaction on the service automatically if no unhandled exception occurs.</source>
          <target state="translated">다음 코드 예제에서는 트랜잭션 격리 수준을 <ph id="ph1">&lt;xref:System.Transactions.IsolationLevel.ReadCommitted&gt;</ph>로 설정하고, 동시 트랜잭션을 지원하지 않으며, 작업 호출로부터의 흐름이 지정된 트랜잭션이 필요하고, 처리되지 않은 예외가 발생하지 않으면 서비스에 대한 트랜잭션을 자동으로 커밋합니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete">
          <source>The underlying binding must support flowed transactions for the following code example to execute properly.</source>
          <target state="translated">다음 코드 예제가 제대로 실행되려면 기본 바인딩에서 트랜잭션 이동을 지원해야 합니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete">
          <source>To support flowed transactions using the <ph id="ph1">&lt;xref:System.ServiceModel.WSHttpBinding&gt;</ph>, for example, set the <ph id="ph2">&lt;xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A&gt;</ph> property to <ph id="ph3">`true`</ph> in code or in an application configuration file.</source>
          <target state="translated">예를 들어, <ph id="ph1">&lt;xref:System.ServiceModel.WSHttpBinding&gt;</ph>을 사용하여 트랜잭션 이동을 지원하려면 코드 또는 응용 프로그램 구성 파일에서 <ph id="ph2">&lt;xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A&gt;</ph> 속성을 <ph id="ph3">`true`</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete">
          <source>The following code example shows a configuration file for the preceding sample.</source>
          <target state="translated">다음 코드 예제에서는 앞에 나온 샘플에 대한 구성 파일을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton(System.Object)">
          <source>The singleton instance of the service.</source>
          <target state="translated">서비스의 단일 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton(System.Object)">
          <source>Specifies an object that implements the service and that is used as the singleton instance of the service.</source>
          <target state="translated">서비스를 구현하고 서비스의 단일 인스턴스로 사용되는 개체를 지정합니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton(System.Object)">
          <source>This provides the service instance to which all messages addressed to the service will be dispatched.</source>
          <target state="translated">서비스에 전달되도록 주소가 지정된 모든 메시지를 디스패치할 대상 서비스 인스턴스를 제공합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton(System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton%2A&gt;</ph> is set to a non-<ph id="ph2">`null`</ph> value, then the <ph id="ph3">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A&gt;</ph> must be set to <ph id="ph4">&lt;xref:System.ServiceModel.InstanceContextMode.Single&gt;</ph> or an <ph id="ph5">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton%2A&gt;</ph>가 <ph id="ph2">`null`</ph>이 아닌 값으로 설정된 경우 <ph id="ph3">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A&gt;</ph>는 <ph id="ph4">&lt;xref:System.ServiceModel.InstanceContextMode.Single&gt;</ph>로 설정되어야 하며, 그렇지 않으면 <ph id="ph5">&lt;xref:System.InvalidOperationException&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton(System.Object)">
          <source>The value set is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">설정된 값이 <ph id="ph1">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName">
          <source>Returns a value that indicates whether the <ph id="ph1">&lt;see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName" /&gt;</ph> property has changed from its default value and should be serialized.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName" /&gt;</ph> 속성이 기본값에서 변경되었으며 이를 serialize해야 하는지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName" /&gt;</ph> property value should be serialized; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName" /&gt;</ph> 속성 값을 serialize해야 하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete">
          <source>Returns a value that indicates whether the <ph id="ph1">&lt;see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete" /&gt;</ph> property has changed from its default value and should be serialized.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete" /&gt;</ph> 속성이 기본값에서 변경되었으며 이를 serialize해야 하는지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete" /&gt;</ph> property value should be serialized; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete" /&gt;</ph> 속성 값을 serialize해야 하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose">
          <source>Returns a value that indicates whether the <ph id="ph1">&lt;see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose" /&gt;</ph> property has changed from its default value and should be serialized.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose" /&gt;</ph> 속성이 기본값에서 변경되었으며 이를 serialize해야 하는지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose" /&gt;</ph> property value should be serialized; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose" /&gt;</ph> 속성 값을 serialize해야 하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel">
          <source>Returns a value that indicates whether the <ph id="ph1">&lt;see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel" /&gt;</ph> property has changed from its default value and should be serialized.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel" /&gt;</ph> 속성이 기본값에서 변경되었으며 이를 serialize해야 하는지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel" /&gt;</ph> property value should be serialized; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel" /&gt;</ph> 속성 값을 serialize해야 하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout">
          <source>Returns a value that indicates whether the <ph id="ph1">&lt;see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout" /&gt;</ph> property has changed from its default value and should be serialized.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout" /&gt;</ph> 속성이 기본값에서 변경되었으며 이를 serialize해야 하는지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout" /&gt;</ph> property value should be serialized; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout" /&gt;</ph> 속성 값을 serialize해야 하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The service description.</source>
          <target state="translated">서비스 설명입니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The service host.</source>
          <target state="translated">서비스 호스트입니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The service endpoints.</source>
          <target state="translated">서비스 끝점입니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The data objects needed by bindings to support the behavior.</source>
          <target state="translated">바인딩에서 동작을 지원하는 데 필요한 데이터 개체입니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Passes custom data objects to the bindings that support the behavior properties.</source>
          <target state="translated">사용자 지정 데이터 개체를 동작 속성을 지원하는 바인딩에 전달합니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The service description.</source>
          <target state="translated">서비스 설명입니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The service host.</source>
          <target state="translated">서비스 호스트입니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>Customizes the service run time to support the behavior properties.</source>
          <target state="translated">동작 속성을 지원하도록 서비스 런타임을 사용자 지정합니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The service description.</source>
          <target state="translated">서비스 설명입니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The service host.</source>
          <target state="translated">서비스 호스트입니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>Confirms that the service description and service host are capable of supporting the behavior.</source>
          <target state="translated">서비스 설명 및 서비스 호스트가 동작을 지원할 수 있음을 확인합니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose">
          <source>Gets or sets a value that specifies whether pending transactions are completed when the current session closes without error.</source>
          <target state="translated">현재 세션이 오류 없이 닫힐 때 보류 중인 트랜잭션이 완료되는지 여부를 지정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if pending transactions are to be completed when the current session closes without error; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 세션이 오류 없이 닫힐 때 보류 중인 트랜잭션이 완료되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel">
          <source>Specifies the transaction isolation level for new transactions created inside the service, and incoming transactions flowed from a client.</source>
          <target state="translated">서비스 내부에서 만들어지는 새 트랜잭션 및 클라이언트로부터 들어오는 트랜잭션의 트랜잭션 격리 수준을 지정합니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel">
          <source>A <ph id="ph1">&lt;see cref="T:System.Transactions.IsolationLevel" /&gt;</ph> value that specifies the transaction isolation level.</source>
          <target state="translated">트랜잭션 격리 수준을 지정하는 <ph id="ph1">&lt;see cref="T:System.Transactions.IsolationLevel" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Transactions.IsolationLevel.Unspecified" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Transactions.IsolationLevel.Unspecified" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel">
          <source>The isolation level in which your transaction runs determines how data is treated when changes are made in other transactions and how long your transaction must hold locks to protect against these changes.</source>
          <target state="translated">트랜잭션이 실행되는 격리 수준에 따라 다른 트랜잭션에서 변경이 있을 경우 데이터를 처리하는 방법 및 이러한 변경으로부터 보호하기 위해 사용자의 트랜잭션이 잠금을 보유해야 하는 기간이 결정됩니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel">
          <source>For example, the default value, <ph id="ph1">&lt;xref:System.Transactions.IsolationLevel.Unspecified&gt;</ph>, specifies that no updating or inserting can occur until the transaction is complete.</source>
          <target state="translated">예를 들어, 기본값인 <ph id="ph1">&lt;xref:System.Transactions.IsolationLevel.Unspecified&gt;</ph>는 트랜잭션이 완료될 때까지 어떠한 업데이트나 삽입도 발생할 수 없음을 지정합니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel">
          <source>This property can also be used to restrict the isolation level of incoming transactions flowed from a client.</source>
          <target state="translated">이 속성은 클라이언트로부터 들어오는 트랜잭션의 격리 수준을 제한하는 데에도 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel">
          <source>The following code example sets the transaction isolation level to <ph id="ph1">&lt;xref:System.Transactions.IsolationLevel.ReadCommitted&gt;</ph>, does not support concurrent transactions, requires a flowed transaction from the method call, and commits the transaction automatically if no unhandled exception occurs.</source>
          <target state="translated">다음 코드 예제에서는 트랜잭션 격리 수준을 <ph id="ph1">&lt;xref:System.Transactions.IsolationLevel.ReadCommitted&gt;</ph>로 설정하고, 동시 트랜잭션을 지원하지 않으며, 메서드 호출로부터의 흐름이 지정된 트랜잭션이 필요하고, 처리되지 않은 예외가 발생하지 않으면 트랜잭션을 자동으로 커밋합니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel">
          <source>The underlying binding must support flowed transactions for the following code example to execute properly.</source>
          <target state="translated">다음 코드 예제가 제대로 실행되려면 기본 바인딩에서 트랜잭션 이동을 지원해야 합니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel">
          <source>To support flowed transactions using the <ph id="ph1">&lt;xref:System.ServiceModel.WSHttpBinding&gt;</ph>, for example, set the <ph id="ph2">&lt;xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A&gt;</ph> property to <ph id="ph3">`true`</ph> in code or in an application configuration file.</source>
          <target state="translated">예를 들어, <ph id="ph1">&lt;xref:System.ServiceModel.WSHttpBinding&gt;</ph>을 사용하여 트랜잭션 이동을 지원하려면 코드 또는 응용 프로그램 구성 파일에서 <ph id="ph2">&lt;xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A&gt;</ph> 속성을 <ph id="ph3">`true`</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel">
          <source>The following code example shows a configuration file for the preceding sample.</source>
          <target state="translated">다음 코드 예제에서는 앞에 나온 샘플에 대한 구성 파일을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel">
          <source>The value is not one of the <ph id="ph1">&lt;see cref="T:System.Transactions.IsolationLevel" /&gt;</ph> values.</source>
          <target state="translated">값이 <ph id="ph1">&lt;see cref="T:System.Transactions.IsolationLevel" /&gt;</ph> 값 중 하나가 아닌 경우</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout">
          <source>Gets or sets the period within which a transaction must complete.</source>
          <target state="translated">트랜잭션을 완료해야 하는 기간을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> object that represents the time within which transactions must complete or be automatically aborted.</source>
          <target state="translated">트랜잭션이 완료되어야 하거나, 완료되지 못할 경우 자동으로 중단되어야 하는 제한 시간을 나타내는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout">
          <source>This value sets the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout%2A?displayProperty=nameWithType&gt;</ph> 속성을 설정합니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout">
          <source>You can also set this property using the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>serviceTimeouts<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/servicetimeouts.md)</ept> element in an application configuration file.</source>
          <target state="translated">사용 하 여이 속성을 설정할 수도 있습니다는 <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>serviceTimeouts<ph id="ph2">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/servicetimeouts.md)</ept> 응용 프로그램 구성 파일의 요소입니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout">
          <source>The following configuration file specifies a transaction timeout period of three minutes.</source>
          <target state="translated">다음 구성 파일에서는 트랜잭션 시간 제한을 3분으로 지정합니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout">
          <source>The value is null.</source>
          <target state="translated">값이 null인 경우</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout">
          <source>The value is less than <ph id="ph1">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph> or greater than <ph id="ph2">&lt;see cref="F:System.TimeSpan.MaxValue" /&gt;</ph>.</source>
          <target state="translated">값이 <ph id="ph1">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph>보다 작거나 <ph id="ph2">&lt;see cref="F:System.TimeSpan.MaxValue" /&gt;</ph>보다 큰 경우</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext">
          <source>Gets or sets a value that specifies whether to use the current synchronization context to choose the thread of execution.</source>
          <target state="translated">현재 동기화 컨텍스트를 사용하여 스레드 실행을 선택할지 여부를 지정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if all calls to the service must run on the thread specified by the <ph id="ph2">&lt;see cref="T:System.Threading.SynchronizationContext" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">모든 서비스 호출이 <ph id="ph2">&lt;see cref="T:System.Threading.SynchronizationContext" /&gt;</ph>에서 지정한 스레드에서 실행되어야 하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext">
          <source>The default value is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext">
          <source>Use this property to provide the user interface thread affinity that some applications require.</source>
          <target state="translated">일부 응용 프로그램에서 요구하는 사용자 인터페이스 스레드 선호도를 제공하려면 이 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext">
          <source>For example, a Windows Forms application may be registered as a singleton service object.</source>
          <target state="translated">예를 들어, Windows Forms 응용 프로그램이 singleton 서비스 개체로 등록될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext">
          <source>In this case, all calls into the service must run on the Windows Forms thread.</source>
          <target state="translated">그런 경우 이 서비스에 대한 모든 호출이 Windows Forms 스레드에서 실행되어야 합니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext">
          <source>The default case, in which <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext%2A&gt;</ph> is set to <ph id="ph2">`true`</ph>, synchronizes all calls to the service to run on the thread captured from the <ph id="ph3">&lt;xref:System.Threading.SynchronizationContext?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext%2A&gt;</ph>가 <ph id="ph2">`true`</ph>로 설정되는 기본 환경에서는 <ph id="ph3">&lt;xref:System.Threading.SynchronizationContext?displayProperty=nameWithType&gt;</ph>로부터 캡처한 스레드에서 실행될 모든 서비스 호출을 동기화합니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand">
          <source>Gets or sets a value that specifies whether the system or the application enforces SOAP <ph id="ph1">&lt;see langword="MustUnderstand" /&gt;</ph> header processing.</source>
          <target state="translated">SOAP <ph id="ph1">&lt;see langword="MustUnderstand" /&gt;</ph> 헤더 처리를 시스템에서 수행하는지 아니면 응용 프로그램에서 수행하는지를 지정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the system is to perform SOAP header <ph id="ph2">&lt;see langword="MustUnderstand" /&gt;</ph> processing; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>, which indicates that the application performs this processing.</source>
          <target state="translated">시스템에서 SOAP 헤더 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 처리를 수행할 경우 <ph id="ph2">&lt;see langword="MustUnderstand" /&gt;</ph>이고, 응용 프로그램에서 이 처리를 수행할 경우 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand">
          <source>The default value is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand%2A&gt;</ph> property to turn off the enforced validation of arriving message headers.</source>
          <target state="translated">도착하는 메시지 헤더에 적용되는 유효성 검사를 해제하려면 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand%2A&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand">
          <source>In normal execution, message headers are compared against the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageHeaders.UnderstoodHeaders%2A&gt;</ph> property to confirm that arriving headers are explicitly handled by the service.</source>
          <target state="translated">정상적인 실행에서는 메시지 헤더를 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageHeaders.UnderstoodHeaders%2A&gt;</ph> 속성과 비교하여 도착하는 헤더가 서비스에서 명시적으로 처리되는지를 확인합니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand">
          <source>Set this to <ph id="ph1">`false`</ph> to disable this checking.</source>
          <target state="translated">이 확인을 사용하지 않으려면 이 속성을 <ph id="ph1">`false`</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand">
          <source>When set to <ph id="ph1">`false`</ph>, the application must check for headers marked with MustUnderstand="true" and return a fault if one or more of them were not understood.</source>
          <target state="translated"><ph id="ph1">`false`</ph>로 설정하면 응용 프로그램에서 MustUnderstand="true"로 표시된 헤더를 검사하여 인식되지 않은 헤더가 있을 경우 오류를 반환합니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand">
          <source>This is useful when the application is supposed to accept any incoming SOAP messages (for example, when using typed or untyped messages) and perform custom header processing.</source>
          <target state="translated">이 기능은 형식화된 메시지 또는 형식화되지 않은 메시지를 사용할 경우와 같이 들어오는 SOAP 메시지를 응용 프로그램에서 수락하고 사용자 지정 헤더 처리를 수행해야 할 때 유용합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>