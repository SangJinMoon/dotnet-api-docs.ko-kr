<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WSDualHttpBinding.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac564c194475ff6449b6daea2f1add907287c17f3db.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">64c194475ff6449b6daea2f1add907287c17f3db</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.WSDualHttpBinding">
          <source>A secure and interoperable binding that is designed for use with duplex service contracts that allows both services and clients to send and receive messages.</source>
          <target state="translated">서비스와 클라이언트 모두가 메시지를 보내고 받을 수 있는 이중 서비스 계약에서 사용할 수 있도록 디자인된, 안전하고 상호 운용 가능한 바인딩입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.WSDualHttpBinding">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.WSDualHttpBinding&gt;</ph> provides the same support for Web Service protocols as the <ph id="ph2">&lt;xref:System.ServiceModel.WSHttpBinding&gt;</ph>, but for use with duplex contracts.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.WSDualHttpBinding&gt;</ph>은 <ph id="ph2">&lt;xref:System.ServiceModel.WSHttpBinding&gt;</ph>과 동일하게 웹 서비스 프로토콜을 지원하지만 이중 계약에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.WSDualHttpBinding">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.WSDualHttpBinding&gt;</ph> only supports SOAP security and requires reliable messaging.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.WSDualHttpBinding&gt;</ph>은 SOAP 보안만 지원하며 신뢰할 수 있는 메시징이 필요합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.WSDualHttpBinding">
          <source>This binding requires that the client has a public URI that provides a callback endpoint for the service.</source>
          <target state="translated">이 바인딩에서는 서비스의 콜백 끝점을 제공하는 공용 URI가 클라이언트에 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.WSDualHttpBinding">
          <source>This is provided by the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt;</ph>.</source>
          <target state="translated">이 공용 URI는 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt;</ph>에서 제공됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.WSDualHttpBinding">
          <source>A dual binding exposes the IP address of the client to the service.</source>
          <target state="translated">이중 바인딩은 클라이언트의 IP 주소를 서비스에 노출합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.WSDualHttpBinding">
          <source>The client should use security to ensure that it only connects to services it trusts.</source>
          <target state="translated">클라이언트는 보안을 사용하여 신뢰하는 서비스에만 연결해야 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.WSDualHttpBinding">
          <source>By default the <ph id="ph1">&lt;xref:System.ServiceModel.WSDualHttpBinding&gt;</ph> generates the following binding element stack:</source>
          <target state="translated">기본적으로 <ph id="ph1">&lt;xref:System.ServiceModel.WSDualHttpBinding&gt;</ph>은 다음과 같은 바인딩 요소 스택을 생성합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.WSDualHttpBinding">
          <source>The following example shows how to specify the <ph id="ph1">`wsDualHttpBinding`</ph> binding in a configuration file.</source>
          <target state="translated">다음 예제에서는 구성 파일에서 <ph id="ph1">`wsDualHttpBinding`</ph> 바인딩을 지정하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.WSDualHttpBinding">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.WSDualHttpBinding" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.WSDualHttpBinding" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.WSDualHttpBinding.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.WSDualHttpBinding" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.WSDualHttpBinding" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.WSDualHttpBinding.#ctor">
          <source>The following example shows how to use the default constructor for wsDualHttpBinding.</source>
          <target state="translated">다음 예제에서는 wsDualHttpBinding에 대해 기본 생성자를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.WSDualHttpBinding.#ctor(System.ServiceModel.WSDualHttpSecurityMode)">
          <source>The value of <ph id="ph1">&lt;see cref="T:System.ServiceModel.WSDualHttpSecurityMode" /&gt;</ph> that specifies the type of security that is used with the SOAP message and for the client.</source>
          <target state="translated">클라이언트 및 SOAP 메시지에 사용되는 보안 형식을 지정하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.WSDualHttpSecurityMode" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.WSDualHttpBinding.#ctor(System.ServiceModel.WSDualHttpSecurityMode)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.WSDualHttpBinding" /&gt;</ph> class with a specified type of security used by the binding.</source>
          <target state="translated">바인딩에서 사용하는 지정된 보안 형식을 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.WSDualHttpBinding" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.WSDualHttpBinding.#ctor(System.ServiceModel.WSDualHttpSecurityMode)">
          <source>Reliable messaging is required by the <ph id="ph1">&lt;xref:System.ServiceModel.WSDualHttpBinding&gt;</ph>, so there is no constructor that provides a switch to turn it off as there is on the <ph id="ph2">&lt;xref:System.ServiceModel.WSHttpBinding.%23ctor%28System.ServiceModel.SecurityMode%29&gt;</ph> constructor for the <ph id="ph3">&lt;xref:System.ServiceModel.WSHttpBinding&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.WSDualHttpBinding&gt;</ph>에는 신뢰할 수 있는 메시징이 필요합니다. 따라서 <ph id="ph2">&lt;xref:System.ServiceModel.WSHttpBinding.%23ctor%28System.ServiceModel.SecurityMode%29&gt;</ph>의 <ph id="ph3">&lt;xref:System.ServiceModel.WSHttpBinding&gt;</ph> 생성자에서처럼 이 메시징을 해제하는 스위치가 제공되는 생성자가 없습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.WSDualHttpBinding.#ctor(System.ServiceModel.WSDualHttpSecurityMode)">
          <source>The following example shows how to use the <ph id="ph1">`wsDualHttpBinding`</ph> constructor with a security mode.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`wsDualHttpBinding`</ph> 생성자를 보안 모드로 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.WSDualHttpBinding.#ctor(System.String)">
          <source>The binding configuration name for the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Configuration.WSHttpBindingElement" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Configuration.WSHttpBindingElement" /&gt;</ph>의 바인딩 구성 이름입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.WSDualHttpBinding.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.WSDualHttpBinding" /&gt;</ph> class with a binding specified by its configuration name.</source>
          <target state="translated">구성 이름으로 지정된 바인딩을 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.WSDualHttpBinding" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.WSDualHttpBinding.#ctor(System.String)">
          <source>The binding element with the name <ph id="ph1">&lt;paramref name="configurationName" /&gt;</ph> was not found.</source>
          <target state="translated">이름이 <ph id="ph1">&lt;paramref name="configurationName" /&gt;</ph>인 바인딩 요소를 찾을 수 없는 경우</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal">
          <source>Gets or sets a value that indicates whether to bypass the proxy server for local addresses.</source>
          <target state="translated">로컬 주소에 대해 프록시 서버를 사용하지 않을 것인지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to bypass the proxy server for local addresses; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">로컬 주소에 대해 프록시 서버를 사용하지 않으려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal">
          <source>The default value is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal">
          <source>An Internet resource is local if it has a local address.</source>
          <target state="translated">주소가 로컬인 인터넷 리소스는 로컬 리소스입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal">
          <source>A local address is one that is on the same computer, the local LAN or intranet and is identified, syntactically, by the lack of a period (.) as in the URIs "<ph id="ph1">http://webserver/</ph>" and "<ph id="ph2">http://localhost/</ph>".</source>
          <target state="translated">로컬 주소는 동일한 컴퓨터, 로컬 LAN 또는 인트라넷에 식별 되 면, Uri와 같이 마침표 (.) 하 고 있는 서버 "<ph id="ph1">http://webserver/</ph>"및"<ph id="ph2">http://localhost/</ph>"입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal">
          <source>Setting the <ph id="ph1">&lt;xref:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal%2A&gt;</ph> property determines whether endpoints configured with the <ph id="ph2">&lt;xref:System.ServiceModel.WSDualHttpBinding&gt;</ph> use the proxy server when accessing local resources.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal%2A&gt;</ph> 속성은 <ph id="ph2">&lt;xref:System.ServiceModel.WSDualHttpBinding&gt;</ph>으로 구성된 끝점이 로컬 리소스에 액세스할 때 프록시 서버를 사용하는지 여부를 결정합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal">
          <source>If <ph id="ph1">&lt;xref:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal%2A&gt;</ph> is <ph id="ph2">`true`</ph>, requests to local Internet resources do not use the proxy server.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal%2A&gt;</ph>이 <ph id="ph2">`true`</ph>이면, 로컬 인터넷 리소스에 대한 요청이 프록시 서버를 사용하지 않습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal">
          <source>Use the host name (rather than <ph id="ph1">`localhost`</ph>) if you want clients to go through a proxy when talking to services on the same machine when this property is set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 속성이 <ph id="ph1">`localhost`</ph>로 설정된 경우 클라이언트가 동일한 시스템의 서비스와 통신할 때 프록시를 통하게 하려면 <ph id="ph2">`true`</ph> 대신 호스트 이름을 사용합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal">
          <source>When <ph id="ph1">&lt;xref:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal%2A&gt;</ph> is <ph id="ph2">`false`</ph>, all Internet requests are made through the proxy server.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal%2A&gt;</ph>이 <ph id="ph2">`false`</ph>이면, 모든 인터넷 요청이 프록시 서버를 통해 이루어집니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal">
          <source>The following example shows how to specify the wsDualHttpBinding binding in a configuration file.</source>
          <target state="translated">다음 예제에서는 구성 파일에서 wsDualHttpBinding 바인딩을 지정하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal">
          <source>The following example sets this property to indicate that the proxy should be bypassed for local resources.</source>
          <target state="translated">다음 예제에서는 로컬 리소스에 대해 프록시를 사용하지 않음을 나타내도록 이 속성을 설정합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal">
          <source>The value of this property can also be set in the configuration file.</source>
          <target state="translated">이 속성의 값은 구성 파일에서 설정할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.WSDualHttpBinding.ClientBaseAddress">
          <source>Gets or sets the base address of the client.</source>
          <target state="translated">클라이언트의 기본 주소를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.ClientBaseAddress">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that is the base address of the client.</source>
          <target state="translated">클라이언트의 기본 주소인 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.ClientBaseAddress">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.ClientBaseAddress">
          <source>This public URI for the client provides the callback endpoint required for the service to contact the client when the contract is duplex.</source>
          <target state="translated">이 클라이언트의 공용 URI는 이중 계약일 때 서비스가 클라이언트에 연결하는 데 필요한 콜백 끝점을 제공합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.ClientBaseAddress">
          <source>The following example shows how to specify the wsDualHttpBinding binding in a configuration file.</source>
          <target state="translated">다음 예제에서는 구성 파일에서 wsDualHttpBinding 바인딩을 지정하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.WSDualHttpBinding.CreateBindingElements">
          <source>Returns an ordered collection of binding elements contained in the current binding.</source>
          <target state="translated">현재 바인딩에 포함되어 있는 순서가 지정된 바인딩 요소 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.WSDualHttpBinding.CreateBindingElements">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElementCollection" /&gt;</ph> that includes a <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" /&gt;</ph> and, because a reliable session is required for the <ph id="ph3">&lt;see cref="T:System.ServiceModel.WSDualHttpBinding" /&gt;</ph>, a <ph id="ph4">&lt;see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElementCollection" /&gt;</ph>와 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" /&gt;</ph>(<ph id="ph3">&lt;see cref="T:System.ServiceModel.WSDualHttpBinding" /&gt;</ph>에 신뢰할 수 있는 세션 필요)를 포함하는 <ph id="ph4">&lt;see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.WSDualHttpBinding.CreateBindingElements">
          <source>The following example shows how to get an ordered collection of binding elements contained in the current binding.</source>
          <target state="translated">다음 예제에서는 현재 바인딩에 포함되어 있는 순서가 지정된 바인딩 요소 컬렉션을 가져오는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.WSDualHttpBinding.EnvelopeVersion">
          <source>Gets the version of SOAP that is used for messages that are processed by this binding.</source>
          <target state="translated">이 바인딩에서 처리한 메시지에 사용되는 SOAP 버전을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.EnvelopeVersion">
          <source>The value of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.EnvelopeVersion" /&gt;</ph> that is used with this binding.</source>
          <target state="translated">이 바인딩에 사용된 <ph id="ph1">&lt;see cref="T:System.ServiceModel.EnvelopeVersion" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.EnvelopeVersion">
          <source>The value must always be SOAP 1.2.</source>
          <target state="translated">이 값은 항상 SOAP 1.2여야 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.EnvelopeVersion">
          <source>The following example shows how to get the version of SOAP that is used for messages that are processed by this binding.</source>
          <target state="translated">다음 예제에서는 이 바인딩에서 처리하는 메시지에 사용되는 SOAP 버전을 가져오는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.WSDualHttpBinding.HostNameComparisonMode">
          <source>Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.</source>
          <target state="translated">URI 비교 시 서비스에 액세스하는 데 호스트 이름이 사용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.HostNameComparisonMode">
          <source>The <ph id="ph1">&lt;see cref="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode" /&gt;</ph> value that indicates whether the hostname is used to reach the service when matching on the URI.</source>
          <target state="translated">URI 비교 시 서비스에 액세스하는 데 호스트 이름이 사용되는지 여부를 나타내는 <ph id="ph1">&lt;see cref="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.HostNameComparisonMode">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" /&gt;</ph>, which ignores the hostname in the match.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" /&gt;</ph>이며 이 값은 비교 시 호스트 이름을 무시합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.HostNameComparisonMode">
          <source>The following example shows how to specify the wsDualHttpBinding binding in a configuration file.</source>
          <target state="translated">다음 예제에서는 구성 파일에서 wsDualHttpBinding 바인딩을 지정하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize">
          <source>Gets or sets the maximum amount of memory, in bytes, that can be allocated for the manager of message buffers that receive messages at the endpoints configured with this binding.</source>
          <target state="translated">메시지 버퍼 관리자에 할당될 수 있는 최대 메모리 크기(바이트)를 가져오거나 설정합니다. 메시지 버퍼 관리자는 이 바인딩으로 구성된 끝점에서 메시지를 수신합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize">
          <source>The maximum size, in bytes, for the pool of buffers used by an endpoint configured with this binding.</source>
          <target state="translated">이 바인딩으로 구성된 끝점에서 사용하는 버퍼 풀의 최대 크기(바이트)입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize">
          <source>The default value is 524288 bytes.</source>
          <target state="translated">기본값은 524288 (바이트)입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BufferManager&gt;</ph> minimizes the cost of using buffers with a buffer pool.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.BufferManager&gt;</ph>는 버퍼 풀을 사용하여 버퍼 사용 비용을 최소화합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize">
          <source>Buffers are required to process messages by the service when they come out of the channel.</source>
          <target state="translated">버퍼는 메시지가 채널에서 나올 때 서비스를 이용하여 그 메시지를 처리해야 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize">
          <source>If there is not sufficient memory in the buffer pool to process the message load, the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BufferManager&gt;</ph> must allocate additional memory from the CLR heap, which increases the garbage collection overhead.</source>
          <target state="translated">버퍼 풀에 메시지 로드를 처리하기에 충분한 메모리가 없는 경우 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BufferManager&gt;</ph>에서는 CLR 힙으로부터 추가 메모리를 할당해야 하며, 따라서 가비지 수집 오버헤드가 증가합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize">
          <source>Extensive allocation from the CLR garbage heap is an indication that the buffer pool size is too small and that performance can be improved with a larger allocation by increasing the <ph id="ph1">&lt;xref:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize%2A&gt;</ph> limit.</source>
          <target state="translated">CLR 가비지 힙으로부터 다량의 할당이 이루어지는 경우 버퍼 풀 크기가 너무 작은 것이므로, <ph id="ph1">&lt;xref:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize%2A&gt;</ph> 제한을 늘려 더 크게 할당하면 성능이 향상될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize">
          <source>The limitations on buffer size set here are for optimizing the performance of message exchanges.</source>
          <target state="translated">여기서 설정한 버퍼 크기 제한은 메시지 교환의 성능을 최적화하는 데 목적이 있습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize">
          <source>If a message exceeds the maximum value set for the buffer, it is not dropped.</source>
          <target state="translated">설정된 버퍼 최대값을 초과하는 메시지는 삭제됩니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize">
          <source>Instead, more memory is requested from the CLR heap and this incurs more garbage collection overhead than using the buffers.</source>
          <target state="translated">그 대신 CLR 힙으로부터 추가 메모리가 요청되며 그로 인해 버퍼를 사용하는 경우보다 더 많은 가비지 컬렉션 오버헤드가 발생합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize">
          <source>The following example shows how to set the <ph id="ph1">`MaxBufferPoolSize`</ph>.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`MaxBufferPoolSize`</ph>를 설정하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize">
          <source>Gets or sets the maximum size, in bytes, for a message that can be received on a channel configured with this binding.</source>
          <target state="translated">이 바인딩으로 구성된 채널에서 수신할 수 있는 최대 메시지 크기(바이트)를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize">
          <source>The maximum size, in bytes, for a message that is processed by the binding.</source>
          <target state="translated">바인딩에서 처리하는 메시지의 최대 크기(바이트)입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize">
          <source>The default value is 65,536 bytes.</source>
          <target state="translated">기본값은 65,536바이트입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize">
          <source>The size of the messages that can be received on the wire by services using the <ph id="ph1">&lt;xref:System.ServiceModel.WSDualHttpBinding&gt;</ph> is bounded by the amount of memory allocated for each message.</source>
          <target state="translated">통신 중에 <ph id="ph1">&lt;xref:System.ServiceModel.WSDualHttpBinding&gt;</ph>을 사용하여 서비스에서 수신할 수 있는 메시지의 크기는 각 메시지에 할당된 메모리 크기에 의해 제한됩니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize">
          <source>This bound on message size is intended to limit exposure to DOS-style attacks.</source>
          <target state="translated">이 메시지 크기 제한은 DoS 유형의 공격에 대한 노출을 막기 위한 것입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize">
          <source>Note that the settings for <ph id="ph1">&lt;xref:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize%2A&gt;</ph> are local behavioral settings.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize%2A&gt;</ph> 설정은 로컬에만 적용되는 설정입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize">
          <source>This means that they are not transmitted to other endpoints in metadata.</source>
          <target state="translated">즉, 메타데이터 형태로 다른 끝점에 전송되지 않습니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize">
          <source>If you generate a proxy to a service with a maximum message size of 2GB from metadata, the proxy still has a default value 64K.</source>
          <target state="translated">메타데이터에서 최대 메시지 크기를 2GB로 하여 서비스에 대한 프록시를 생성할 경우 그 프록시는 기본값인 64K를 계속 유지합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize">
          <source>This leaves control of the appropriate bounds for message and message buffer size in the scope of local administrators.</source>
          <target state="translated">메시지 및 메시지 버퍼 크기를 적절히 제한하는 것은 로컬 관리자의 업무입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize">
          <source>The following example shows how to get the <ph id="ph1">&lt;xref:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize%2A&gt;</ph> property.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize%2A&gt;</ph> 속성을 가져오는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize">
          <source>The value is less than zero.</source>
          <target state="translated">값이 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.WSDualHttpBinding.MessageEncoding">
          <source>Gets or sets whether MTOM or Text/XML is used to encode SOAP messages.</source>
          <target state="translated">SOAP 메시지 인코딩에 MTOM이나 텍스트/XML 사용 여부를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.MessageEncoding">
          <source>The value of <ph id="ph1">&lt;see cref="T:System.ServiceModel.WSMessageEncoding" /&gt;</ph> that indicates that MTOM or Text/XML is used to encode SOAP messages.</source>
          <target state="translated">SOAP 메시지 인코딩에 MTOM이 사용되는지 또는 텍스트/XML이 사용되는지를 나타내는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.WSMessageEncoding" /&gt;</ph>의 값입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.MessageEncoding">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.ServiceModel.WSMessageEncoding.Text" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.ServiceModel.WSMessageEncoding.Text" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.MessageEncoding">
          <source>The following example shows how to set the <ph id="ph1">`WSMessageEncoding`</ph> property to MTOM.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`WSMessageEncoding`</ph> 속성을 MTOM으로 설정하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.WSDualHttpBinding.ProxyAddress">
          <source>Gets or sets the URI address of the HTTP proxy.</source>
          <target state="translated">HTTP 프록시의 URI 주소를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.ProxyAddress">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that serves as the address of the HTTP proxy.</source>
          <target state="translated">HTTP 프록시의 주소로 사용되는 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.ProxyAddress">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.ProxyAddress">
          <source>If the <ph id="ph1">&lt;xref:System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy%2A&gt;</ph> is set to <ph id="ph2">`true`</ph>, the value of the <ph id="ph3">&lt;xref:System.ServiceModel.WSDualHttpBinding.ProxyAddress%2A&gt;</ph> is ignored.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy%2A&gt;</ph>가 <ph id="ph2">`true`</ph>로 설정되면 <ph id="ph3">&lt;xref:System.ServiceModel.WSDualHttpBinding.ProxyAddress%2A&gt;</ph>의 값이 무시됩니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.ProxyAddress">
          <source>The following example shows how to specify the address of the HTTP proxy.</source>
          <target state="translated">다음 예제에서는 HTTP 프록시 주소를 지정하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas">
          <source>Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</source>
          <target state="translated">이 바인딩으로 구성된 끝점에서 처리할 수 있는 SOAP 메시지의 복잡성에 대한 제약 조건을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReaderQuotas" /&gt;</ph> that specifies the complexity constraints.</source>
          <target state="translated">복잡성 제약 조건을 지정하는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReaderQuotas" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas">
          <source>The complexity constraints include items such as a maximum element depth and a maximum length for string content within the message.</source>
          <target state="translated">복잡성 제약 조건에는 최대 요소 깊이, 메시지 내 문자열 내용의 최대 길이 등이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas">
          <source>The constraints protect against a class of denial of service (DOS) attacks that attempt to use message complexity to tie up endpoint processing resources.</source>
          <target state="translated">제약 조건을 사용하면 메시지 복잡성을 사용하여 끝점 처리 리소스를 묶어 두려고 시도하는 일종의 DOS(서비스 거부) 공격을 막을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas">
          <source>The following example shows how to get the <ph id="ph1">`ReaderQuotas`</ph> property.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`ReaderQuotas`</ph> 속성을 가져오는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.WSDualHttpBinding.ReliableSession">
          <source>Gets an object that provides convenient access to the properties of a reliable session binding element that are available when using one of the system-provided bindings.</source>
          <target state="translated">시스템에서 제공하는 바인딩을 사용할 경우 이용 가능한 신뢰할 수 있는 세션 바인딩 요소의 속성에 대한 편리한 액세스를 제공하는 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.ReliableSession">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.ReliableSession" /&gt;</ph> that provides convenient access to the properties of a reliable session binding element that are available when using one of the system-provided bindings.</source>
          <target state="translated">시스템에서 제공하는 바인딩을 사용할 경우 이용 가능한 신뢰할 수 있는 세션 바인딩 요소의 속성에 대한 편리한 액세스를 제공하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ReliableSession" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.ReliableSession">
          <source>The reliable session is required for service configured with a <ph id="ph1">&lt;xref:System.ServiceModel.WSDualHttpBinding&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.WSDualHttpBinding&gt;</ph>으로 구성된 서비스에는 신뢰할 수 있는 세션이 필요합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.ReliableSession">
          <source>The following example shows how to get the <ph id="ph1">&lt;xref:System.ServiceModel.WSDualHttpBinding.ReliableSession%2A&gt;</ph> property.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.ServiceModel.WSDualHttpBinding.ReliableSession%2A&gt;</ph> 속성을 가져오는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.WSDualHttpBinding.Scheme">
          <source>Gets the URI transport scheme for the channels and listeners that are configured with this binding.</source>
          <target state="translated">이 바인딩으로 구성되는 채널과 수신기의 URI 전송 체계를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.Scheme">
          <source>The transport scheme: "http".</source>
          <target state="translated">전송 체계 "http"입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.Scheme">
          <source>The following example shows how to specify the wsDualHttpBinding binding in a configuration file.</source>
          <target state="translated">다음 예제에서는 구성 파일에서 wsDualHttpBinding 바인딩을 지정하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.WSDualHttpBinding.Security">
          <source>Gets an object that specifies the security settings used with this binding.</source>
          <target state="translated">이 바인딩과 함께 사용되는 보안 설정을 지정하는 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.Security">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.WSDualHttpSecurity" /&gt;</ph> that specifies security settings used with the binding.</source>
          <target state="translated">바인딩과 함께 사용되는 보안 설정을 지정하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.WSDualHttpSecurity" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.Security">
          <source>The default value of <ph id="ph1">&lt;see cref="T:System.ServiceModel.WSDualHttpSecurityMode" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.ServiceModel.WSDualHttpSecurityMode.Message" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.WSDualHttpSecurityMode" /&gt;</ph>의 기본값은 <ph id="ph2">&lt;see cref="F:System.ServiceModel.WSDualHttpSecurityMode.Message" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.Security">
          <source>A dual binding exposes the IP address of the client to the service.</source>
          <target state="translated">이중 바인딩은 클라이언트의 IP 주소를 서비스에 노출합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.Security">
          <source>The client should use security to ensure that it only connects to services it trusts.</source>
          <target state="translated">클라이언트는 보안을 사용하여 신뢰하는 서비스에만 연결해야 합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.Security">
          <source>The following example shows how to get the type of security of the binding.</source>
          <target state="translated">다음 예제에서는 바인딩의 보안 형식을 가져오는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeReaderQuotas">
          <source>Returns a value that indicates whether the <ph id="ph1">&lt;see cref="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas" /&gt;</ph> property has changed from its default value and should be serialized.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas" /&gt;</ph> 속성이 기본값에서 변경되었으며 이를 serialize해야 하는지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeReaderQuotas">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas" /&gt;</ph> property value should be serialized; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas" /&gt;</ph> 속성 값을 serialize해야 하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeReliableSession">
          <source>Returns a value that indicates whether the <ph id="ph1">&lt;see cref="P:System.ServiceModel.WSDualHttpBinding.ReliableSession" /&gt;</ph> property has changed from its default value and should be serialized.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ServiceModel.WSDualHttpBinding.ReliableSession" /&gt;</ph> 속성이 기본값에서 변경되었으며 이를 serialize해야 하는지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeReliableSession">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.ServiceModel.WSDualHttpBinding.ReliableSession" /&gt;</ph> property value should be serialized; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.ServiceModel.WSDualHttpBinding.ReliableSession" /&gt;</ph> 속성 값을 serialize해야 하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeSecurity">
          <source>Returns a value that indicates whether the <ph id="ph1">&lt;see cref="P:System.ServiceModel.WSDualHttpBinding.Security" /&gt;</ph> property has changed from its default value and should be serialized.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ServiceModel.WSDualHttpBinding.Security" /&gt;</ph> 속성이 기본값에서 변경되었으며 이를 serialize해야 하는지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeSecurity">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.ServiceModel.WSDualHttpBinding.Security" /&gt;</ph> property value should be serialized; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.ServiceModel.WSDualHttpBinding.Security" /&gt;</ph> 속성 값을 serialize해야 하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeTextEncoding">
          <source>Returns a value that indicates whether the <ph id="ph1">&lt;see cref="P:System.ServiceModel.WSDualHttpBinding.TextEncoding" /&gt;</ph> property has changed from its default value and should be serialized.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ServiceModel.WSDualHttpBinding.TextEncoding" /&gt;</ph> 속성이 기본값에서 변경되었으며 이를 serialize해야 하는지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeTextEncoding">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.ServiceModel.WSDualHttpBinding.TextEncoding" /&gt;</ph> property value should be serialized; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.ServiceModel.WSDualHttpBinding.TextEncoding" /&gt;</ph> 속성 값을 serialize해야 하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.WSDualHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
          <source>Gets a value that indicates whether incoming requests are handled synchronously or asynchronously.</source>
          <target state="translated">들어오는 요청이 동기적으로 처리되는지 또는 비동기적으로 처리되는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if requests are handled synchronously; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if handled asynchronously.</source>
          <target state="translated">요청이 비동기적으로 처리되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
          <source>The value returned is always is <ph id="ph1">&lt;see langword="false" /&gt;</ph>, to handle requests asynchronously.</source>
          <target state="translated">반환되는 값은 항상 <ph id="ph1">&lt;see langword="false" /&gt;</ph>이며 요청을 비동기적으로 처리합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
          <source>This value can be changed by using a service model behavior.</source>
          <target state="translated">이 값은 서비스 모델 동작을 사용하여 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
          <source>The following examples show how to get the <ph id="ph1">&lt;xref:System.ServiceModel.WSDualHttpBinding.System%23ServiceModel%23Channels%23IBindingRuntimePreferences%23ReceiveSynchronously%2A&gt;</ph> value.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.ServiceModel.WSDualHttpBinding.System%23ServiceModel%23Channels%23IBindingRuntimePreferences%23ReceiveSynchronously%2A&gt;</ph> 값을 가져오는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.WSDualHttpBinding.TextEncoding">
          <source>Gets or sets the character encoding that is used for the message text.</source>
          <target state="translated">메시지 텍스트에 사용되는 문자 인코딩을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.TextEncoding">
          <source>The <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> that indicates the character encoding that is used.</source>
          <target state="translated">사용되는 문자 인코딩을 나타내는 <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.TextEncoding">
          <source>The default is <ph id="ph1">&lt;see cref="T:System.Text.UTF8Encoding" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="T:System.Text.UTF8Encoding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.TextEncoding">
          <source>The following example shows how to get the character encoding that is used for the message text.</source>
          <target state="translated">다음 예제에서는 메시지 텍스트에 사용되는 문자 인코딩을 가져오는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.WSDualHttpBinding.TransactionFlow">
          <source>Gets or sets a value that indicates whether this binding should support flowing WS-Transactions.</source>
          <target state="translated">이 바인딩에서 WS-Transactions 흐름을 지원하는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.TransactionFlow">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the flowing of transactions is supported; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">트랜잭션 흐름이 지원되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.TransactionFlow">
          <source>The default value is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.TransactionFlow">
          <source>The default value specifies that clients do not flow transactions and services reject messages with a flowed transaction message header.</source>
          <target state="translated">기본값은 흐름이 지정된 트랜잭션 메시지 헤더를 포함하는 서비스 거부 메시지와 트랜잭션을 클라이언트가 전달하지 않는 것입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.TransactionFlow">
          <source>The following example shows how to set the <ph id="ph1">`TransactionFlow`</ph> property to support the flowing of transactions.</source>
          <target state="translated">다음 예제에서는 트랜잭션 흐름을 지원하도록 <ph id="ph1">`TransactionFlow`</ph> 속성을 설정하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy">
          <source>Gets or sets a value that indicates whether the auto-configured HTTP proxy of the system should be used, if available.</source>
          <target state="translated">시스템의 자동 구성된 HTTP 프록시가 있는 경우 이를 사용하는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the auto-configured HTTP proxy of the system should be used, if available; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">시스템의 자동 구성된 HTTP 프록시를 사용하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy">
          <source>The default value is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy">
          <source>The following example shows how to set the <ph id="ph1">`UseDefaultWebProxy`</ph> property to use the auto-configured HTTP proxy of the system.</source>
          <target state="translated">다음 예제에서는 시스템의 자동 구성된 HTTP 프록시를 사용하도록 <ph id="ph1">`UseDefaultWebProxy`</ph> 속성을 설정하는 방법을 보여 줍니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>