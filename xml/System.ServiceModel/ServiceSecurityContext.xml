<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ServiceSecurityContext.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50434977da5951217267adf4f20450c612e0e88f5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0434977da5951217267adf4f20450c612e0e88f5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ServiceSecurityContext">
          <source>Represents the security context of a remote party.</source>
          <target state="translated">원격 상대방의 보안 컨텍스트를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ServiceSecurityContext">
          <source>On the client, represents the service identity and, on the service, represents the client identity.</source>
          <target state="translated">클라이언트에서는 서비스 ID를 나타내고 서비스에서는 클라이언트 ID를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceSecurityContext">
          <source>The data is part of the <ph id="ph1">&lt;xref:System.ServiceModel.Security.SecurityMessageProperty&gt;</ph> for a message.</source>
          <target state="translated">데이터는 메시지에 대한 <ph id="ph1">&lt;xref:System.ServiceModel.Security.SecurityMessageProperty&gt;</ph>의 일부입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceSecurityContext">
          <source>Use this class to obtain information about a remote <bpt id="p1">*</bpt>security context<ept id="p1">*</ept> at runtime.</source>
          <target state="translated">이 클래스를 사용 하 여 원격에 대 한 정보를 얻으려면 <bpt id="p1">*</bpt>보안 컨텍스트<ept id="p1">*</ept> 런타임에 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceSecurityContext">
          <source>A security context is created when a client is successfully authenticated and authorized to access a method.</source>
          <target state="translated">메서드에 액세스할 수 있도록 클라이언트가 인증되고 권한이 부여된 경우 보안 컨텍스트가 만들어집니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceSecurityContext">
          <source>When a message is successfully authenticated and authorized, the security information from the client and for the current service instance can be obtained from an instance of this class.</source>
          <target state="translated">메시지가 인증되고 권한이 부여된 경우 이 클래스의 인스턴스에서 클라이언트 및 현재 서비스 인스턴스의 보안 정보를 가져올 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceSecurityContext">
          <source>You can retrieve an instance of the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceSecurityContext&gt;</ph> from the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> class, or use it from within a service operation method, as shown in the following example.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceSecurityContext&gt;</ph> 클래스의 <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> 속성에서 <ph id="ph3">&lt;xref:System.ServiceModel.OperationContext&gt;</ph>의 인스턴스를 검색하거나, 아래의 예제와 같이 서비스 작업 메서드 내에서 이 클래스를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceSecurityContext">
          <source>Parsing a ClaimSet</source>
          <target state="translated">ClaimSet 구문 분석</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceSecurityContext">
          <source>A common use of the class is to retrieve the current set of claims for the purpose of identifying or authorizing a client when accessing a method.</source>
          <target state="translated">클래스의 일반적인 용도는 메서드에 액세스할 때 클라이언트를 식별하고 권한을 부여하기 위해 현재 클레임 집합을 검색하는 것입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceSecurityContext">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Claims.ClaimSet&gt;</ph> class contains a collection of <ph id="ph2">&lt;xref:System.IdentityModel.Claims.Claim&gt;</ph> objects, and each can be parsed to determine whether a specific claim is present.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Claims.ClaimSet&gt;</ph> 클래스는 <ph id="ph2">&lt;xref:System.IdentityModel.Claims.Claim&gt;</ph> 개체의 컬렉션을 포함하며, 특정 클레임이 있는지 여부를 확인하기 위해 각 개체를 구문 분석할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceSecurityContext">
          <source>If the specified claim is provided, authorization can be granted.</source>
          <target state="translated">지정된 클레임이 있는 경우 권한을 부여할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceSecurityContext">
          <source>This functionality is provided by overriding the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceAuthorizationManager&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> 클래스의 <ph id="ph2">&lt;xref:System.ServiceModel.ServiceAuthorizationManager&gt;</ph> 메서드를 재정의하면 이 기능을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceSecurityContext">
          <source>For a complete example, see the <bpt id="p1">[</bpt>Authorization Policy<ept id="p1">](~/docs/framework/wcf/samples/authorization-policy.md)</ept>.</source>
          <target state="translated">전체 예제에 대 한 참조는 <bpt id="p1">[</bpt>권한 부여 정책<ept id="p1">](~/docs/framework/wcf/samples/authorization-policy.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceSecurityContext">
          <source>Cookie Mode and IsAuthenticated</source>
          <target state="translated">쿠키 모드 및 IsAuthenticated</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceSecurityContext">
          <source>Note that under some circumstances, the <ph id="ph1">&lt;xref:System.Security.Principal.IIdentity.IsAuthenticated%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Security.Principal.IIdentity&gt;</ph> interface returns <ph id="ph3">`true`</ph> even if the remote client is authenticated as an anonymous user.</source>
          <target state="translated">특정 상황에서는 원격 클라이언트가 익명 사용자로 인증된 경우에도 <ph id="ph1">&lt;xref:System.Security.Principal.IIdentity.IsAuthenticated%2A&gt;</ph> 인터페이스의 <ph id="ph2">&lt;xref:System.Security.Principal.IIdentity&gt;</ph> 속성에서 <ph id="ph3">`true`</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceSecurityContext">
          <source>(The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceSecurityContext.PrimaryIdentity%2A&gt;</ph> property returns an implementation of the <ph id="ph2">&lt;xref:System.Security.Principal.IIdentity&gt;</ph> interface.) The following circumstances must be true for this to occur:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceSecurityContext.PrimaryIdentity%2A&gt;</ph> 속성은 <ph id="ph2">&lt;xref:System.Security.Principal.IIdentity&gt;</ph> 인터페이스의 구현을 반환합니다. 그러려면 다음과 같은 경우를 충족해야 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceSecurityContext">
          <source>The service uses Windows authentication.</source>
          <target state="translated">서비스에서 Windows 인증을 사용하는 경우</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceSecurityContext">
          <source>The service allows anonymous logons.</source>
          <target state="translated">서비스에서 익명 로그온을 허용하는 경우</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceSecurityContext">
          <source>The binding is a <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>customBinding<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/custombinding.md)</ept>.</source>
          <target state="translated">바인딩은 <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>customBinding<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/custombinding.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceSecurityContext">
          <source>The custom binding includes a <ph id="ph1">`&lt;security&gt;`</ph> element.</source>
          <target state="translated">사용자 지정 바인딩에 <ph id="ph1">`&lt;security&gt;`</ph> 요소가 있는 경우</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceSecurityContext">
          <source>The <ph id="ph1">`&lt;security&gt;`</ph> element includes a <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>secureConversationBootstrap<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/secureconversationbootstrap.md)</ept> with the <ph id="ph4">`requireSecurityContextCancellation`</ph> attribute set to <ph id="ph5">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`&lt;security&gt;`</ph> 요소를 포함 한 <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>secureConversationBootstrap<ph id="ph3">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/secureconversationbootstrap.md)</ept> 와 <ph id="ph4">`requireSecurityContextCancellation`</ph> 특성이로 설정 <ph id="ph5">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceSecurityContext">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceSecurityContext&gt;</ph> class to provide information about the current security context.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceSecurityContext&gt;</ph> 클래스를 사용하여 현재 보안 컨텍스트에 대한 정보를 제공합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceSecurityContext">
          <source>The code creates an instance of the <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> class to write the information to a file.</source>
          <target state="translated">이 코드는 <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> 클래스의 인스턴스를 만들어 파일에 정보를 씁니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceSecurityContext">
          <source>The following example shows an implementation of the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> method that uses the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceSecurityContext&gt;</ph> to parse a set of claims.</source>
          <target state="translated">다음 예제에서는 클레임 집합을 구문 분석하는 데 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph>를 사용하는 <ph id="ph2">&lt;xref:System.ServiceModel.ServiceSecurityContext&gt;</ph> 메서드의 구현을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ServiceSecurityContext">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceSecurityContext" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceSecurityContext" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceSecurityContext.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /&gt;</ph> that contains the authorization policies.</source>
          <target state="translated">인증 정책이 포함된 <ph id="ph2">&lt;see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /&gt;</ph> 형식의 <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceSecurityContext.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceSecurityContext" /&gt;</ph> class with the collection of policies object.</source>
          <target state="translated">정책 개체의 컬렉션을 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceSecurityContext" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceSecurityContext.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})">
          <source>This constructor uses the default policy-chaining engine.</source>
          <target state="translated">이 생성자는 기본 정책 연결 엔진을 사용합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceSecurityContext.#ctor(System.IdentityModel.Policy.AuthorizationContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IdentityModel.Policy.AuthorizationContext" /&gt;</ph> that contains authorization information.</source>
          <target state="translated">권한 정보가 포함된 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Policy.AuthorizationContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceSecurityContext.#ctor(System.IdentityModel.Policy.AuthorizationContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceSecurityContext" /&gt;</ph> class with the specified authorization parameters.</source>
          <target state="translated">지정된 인증 매개 변수를 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceSecurityContext" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceSecurityContext.#ctor(System.IdentityModel.Policy.AuthorizationContext)">
          <source>This constructor is typically used in scenarios where an application runs its own policy-chaining engine, which results in an <ph id="ph1">&lt;xref:System.IdentityModel.Policy.AuthorizationContext&gt;</ph>.</source>
          <target state="translated">일반적으로 이 생성자는 응용 프로그램이 고유한 정책 연결 엔진을 실행하여 <ph id="ph1">&lt;xref:System.IdentityModel.Policy.AuthorizationContext&gt;</ph>를 만드는 시나리오에 사용합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceSecurityContext.#ctor(System.IdentityModel.Policy.AuthorizationContext)">
          <source>For the default policy engine, use the constructors that take a collection of <ph id="ph1">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ph> as parameter.</source>
          <target state="translated">기본 정책 엔진의 경우에는 <ph id="ph1">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ph>의 컬렉션을 매개 변수로 사용하는 생성자를 사용합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceSecurityContext.#ctor(System.IdentityModel.Policy.AuthorizationContext,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})">
          <source>An <ph id="ph1">&lt;see cref="T:System.IdentityModel.Policy.AuthorizationContext" /&gt;</ph> that contains authorization settings.</source>
          <target state="translated">권한 설정이 포함된 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Policy.AuthorizationContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceSecurityContext.#ctor(System.IdentityModel.Policy.AuthorizationContext,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /&gt;</ph> that contains the authorization policies.</source>
          <target state="translated">인증 정책이 포함된 <ph id="ph2">&lt;see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /&gt;</ph> 형식의 <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceSecurityContext.#ctor(System.IdentityModel.Policy.AuthorizationContext,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceSecurityContext" /&gt;</ph> class with the specified authorization parameters and collection of policies.</source>
          <target state="translated">지정된 인증 매개 변수 및 정책 컬렉션을 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceSecurityContext" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceSecurityContext.Anonymous">
          <source>Returns an instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceSecurityContext" /&gt;</ph> class that contains an empty collection of claims, identities, and other context data that is usually used to represent an anonymous party.</source>
          <target state="translated">일반적으로 익명의 상대방을 나타내는 데 사용되는 빈 클레임 컬렉션, ID 및 기타 컨텍스트 데이터가 포함된 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceSecurityContext" /&gt;</ph> 클래스의 인스턴스를 반환합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceSecurityContext.Anonymous">
          <source>An empty instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceSecurityContext" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceSecurityContext" /&gt;</ph>의 빈 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceSecurityContext.AuthorizationContext">
          <source>Gets the authorization information for an instance of this class.</source>
          <target state="translated">이 클래스의 인스턴스에 대한 인증 정보를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceSecurityContext.AuthorizationContext">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Policy.AuthorizationContext" /&gt;</ph> contains a collection of <ph id="ph2">&lt;see cref="T:System.IdentityModel.Claims.ClaimSet" /&gt;</ph> that the application can interrogate and retrieve the information of the party.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Policy.AuthorizationContext" /&gt;</ph>는 응용 프로그램에서 상대방의 정보를 조사하고 가져올 수 있는 <ph id="ph2">&lt;see cref="T:System.IdentityModel.Claims.ClaimSet" /&gt;</ph>의 컬렉션을 포함합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceSecurityContext.AuthorizationContext">
          <source>An <ph id="ph1">&lt;see cref="T:System.IdentityModel.Policy.AuthorizationContext" /&gt;</ph> that contains the authorization settings.</source>
          <target state="translated">권한 설정이 포함된 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Policy.AuthorizationContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceSecurityContext.AuthorizationPolicies">
          <source>Gets the collection of policies associated with an instance of this class.</source>
          <target state="translated">이 클래스의 인스턴스와 연결된 정책의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceSecurityContext.AuthorizationPolicies">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /&gt;</ph> that contains the policies.</source>
          <target state="translated">정책이 포함된 <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> 형식의 <ph id="ph2">&lt;see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceSecurityContext.AuthorizationPolicies">
          <source><bpt id="p1">[</bpt>Managing Claims and Authorization with the Identity Model<ept id="p1">](~/docs/framework/wcf/feature-details/managing-claims-and-authorization-with-the-identity-model.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>ID 모델을 사용하여 클레임 및 권한 부여 관리<ept id="p1">](~/docs/framework/wcf/feature-details/managing-claims-and-authorization-with-the-identity-model.md)</ept></target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceSecurityContext.Current">
          <source>Gets the current <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceSecurityContext" /&gt;</ph>.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceSecurityContext" /&gt;</ph>를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceSecurityContext.Current">
          <source>The current <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceSecurityContext" /&gt;</ph>.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceSecurityContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceSecurityContext.IsAnonymous">
          <source>Gets a value that indicates whether the current client has provided credentials to the service.</source>
          <target state="translated">현재 클라이언트에서 서비스에 대한 자격 증명을 제공했는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceSecurityContext.IsAnonymous">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the client has provided credentials; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">클라이언트에서 자격 증명을 제공했으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceSecurityContext.PrimaryIdentity">
          <source>Gets the primary identity associated with the current setting.</source>
          <target state="translated">현재 설정에 연결된 기본 ID를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceSecurityContext.PrimaryIdentity">
          <source>An <ph id="ph1">&lt;see cref="T:System.Security.Principal.IIdentity" /&gt;</ph> associated with the current setting.</source>
          <target state="translated">현재 설정과 연결된 <ph id="ph1">&lt;see cref="T:System.Security.Principal.IIdentity" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceSecurityContext.PrimaryIdentity">
          <source>The primary identity is obtained from the credentials used to authenticate the current user.</source>
          <target state="translated">현재 사용자를 인증하는 데 사용되는 자격 증명에서 기본 ID를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceSecurityContext.PrimaryIdentity">
          <source>If the credential is an X.509 certificate, the identity is a concatenation of the subject name and the thumbprint (in that order).</source>
          <target state="translated">자격 증명이 X.509 인증서인 경우 ID는 주체 이름과 지문을 순서대로 연결하여 만들어집니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceSecurityContext.PrimaryIdentity">
          <source>The subject name is separated from the thumbprint with a semicolon and a space.</source>
          <target state="translated">세미콜론과 공백을 사용하여 주체 이름은 지문과 구분됩니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceSecurityContext.PrimaryIdentity">
          <source>If the subject field of the certificate is <ph id="ph1">`null`</ph>, the primary identity includes just a semicolon, a space, and the thumbprint.</source>
          <target state="translated">인증서의 주체 필드가 <ph id="ph1">`null`</ph>이면 기본 ID에 세미콜론, 공백 및 지문만 포함됩니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceSecurityContext.PrimaryIdentity">
          <source>When a duplex message exchange pattern is used with Kerberos direct authentication, this property becomes empty on the callback and the claimset is also empty.</source>
          <target state="translated">Kerberos 직접 인증과 함께 이중 메시지 교환 패턴을 사용할 경우 이 속성은 콜백 시 비어 있고 claimset도 비어 있습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceSecurityContext.PrimaryIdentity">
          <source>This does not happen when <bpt id="p1">*</bpt>SspiNegotiated<ept id="p1">*</ept> is used instead of Kerberos.</source>
          <target state="translated">이 문제가 발생 하지 때 <bpt id="p1">*</bpt>SspiNegotiated<ept id="p1">*</ept> Kerberos 대신 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceSecurityContext.PrimaryIdentity">
          <source>The Kerberos Requester Token is used only on the client to represent the service.</source>
          <target state="translated">Kerberos Requester Token은 서비스를 나타내기 위해 클라이언트에서만 사용됩니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceSecurityContext.PrimaryIdentity">
          <source>The authorization policy that it generates contains one claim, an SPN; hence, no identity in the claim.</source>
          <target state="translated">Kerbros Requestor Token에서 생성하는 권한 정책에는 SPN이라는 클레임 하나만 포함되므로 클레임에 ID가 없습니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceSecurityContext.PrimaryIdentity">
          <source>In most cases there is no problem, because <ph id="ph1">&lt;xref:System.ServiceModel.ServiceSecurityContext&gt;</ph> is not used on the client.</source>
          <target state="translated">대부분의 경우에는 클라이언트에서 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceSecurityContext&gt;</ph>를 사용하지 않기 때문에 문제가 없습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceSecurityContext.PrimaryIdentity">
          <source>In a duplex scenario during callback, if the callback inspects this property, it gets an anonymous identity.</source>
          <target state="translated">이중 시나리오의 경우 콜백 시 콜백에서 이 속성을 검사하면 익명 ID가 사용됩니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceSecurityContext.PrimaryIdentity">
          <source>For an example of using the <ph id="ph1">`PrimaryIdentity`</ph> property to authorize a client using a certificate, see <bpt id="p1">[</bpt>How to: Examine the Security Context<ept id="p1">](~/docs/framework/wcf/how-to-examine-the-security-context.md)</ept>.</source>
          <target state="translated">사용 하는 예제에 대 한는 <ph id="ph1">`PrimaryIdentity`</ph> 인증서를 사용 하는 클라이언트에 권한을 부여 하는 속성 참조 <bpt id="p1">[</bpt>하는 방법: 보안 컨텍스트 검사<ept id="p1">](~/docs/framework/wcf/how-to-examine-the-security-context.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceSecurityContext.WindowsIdentity">
          <source>Gets the Windows identity of the current setting.</source>
          <target state="translated">현재 설정의 Windows ID를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceSecurityContext.WindowsIdentity">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> that represents the Windows domain user.</source>
          <target state="translated">Windows 도메인 사용자를 나타내는 <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceSecurityContext.WindowsIdentity">
          <source>If the remote party cannot be associated with a Windows account, the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">원격 상대방을 Windows 계정과 연결할 수 없는 경우 <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A&gt;</ph> 속성은 <ph id="ph2">`true`</ph>로 설정됩니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>