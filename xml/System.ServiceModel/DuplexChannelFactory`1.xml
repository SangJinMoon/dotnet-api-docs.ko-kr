<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DuplexChannelFactory`1.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a5bd6827d0bd657da113d5ad74ab6311ac33eec4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a5bd6827d0bd657da113d5ad74ab6311ac33eec4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.DuplexChannelFactory`1">
          <source>The type of channel produced by the channel factory.</source>
          <target state="translated">채널 팩터리에서 생성하는 채널 형식입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.DuplexChannelFactory`1">
          <source>Provides the means to create and manage duplex channels of different types that are used by clients to send and receive messages to and from service endpoints.</source>
          <target state="translated">서비스 끝점에서 메시지를 받거나 보내기 위해 클라이언트에서 사용하는 여러 형식의 이중 채널을 만들고 관리하는 방법을 제공합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.DuplexChannelFactory`1">
          <source>A duplex channel allows clients and servers to communicate with each other independently so that either can initiate calls to the other.</source>
          <target state="translated">이중 채널을 사용하면 클라이언트와 서버가 각각 독립적으로 통신하므로 서로 호출을 시작할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.DuplexChannelFactory`1">
          <source>A duplex service can send messages to the client endpoint, providing event-like behavior.</source>
          <target state="translated">이중 서비스에서는 클라이언트 끝점으로 메시지를 보내 이벤트와 비슷한 동작을 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.DuplexChannelFactory`1">
          <source>Duplex communication occurs when a client establishes a session with a service and provides the service with a channel on which the service can send messages back to the client.</source>
          <target state="translated">이중 통신은 클라이언트에서 서비스를 사용하여 세션을 설정할 때 이루어지며, 서비스에서 클라이언트로 메시지를 다시 보낼 수 있는 채널을 제공합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.DuplexChannelFactory`1">
          <source>The various <ph id="ph1">&lt;xref:System.ServiceModel.DuplexChannelFactory%601.CreateChannel%2A&gt;</ph> methods are used to create these duplex channels.</source>
          <target state="translated">이러한 이중 채널을 만드는 데 다양한 <ph id="ph1">&lt;xref:System.ServiceModel.DuplexChannelFactory%601.CreateChannel%2A&gt;</ph> 메서드가 사용됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.DuplexChannelFactory`1">
          <source>The duplex message pattern is one of three message patterns available to <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> services.</source>
          <target state="translated">이중 메시지 패턴은 <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> 서비스에서 사용할 수 있는 세 가지 메시지 패턴 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.DuplexChannelFactory`1">
          <source>The other two message patterns are one-way and request-reply.</source>
          <target state="translated">다른 두 가지 메시지 패턴은 단방향과 요청-회신입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.DuplexChannelFactory`1">
          <source>For a general discussion of duplex services that allow clients to connect back to the service, see <bpt id="p1">[</bpt>Duplex Services<ept id="p1">](~/docs/framework/wcf/feature-details/duplex-services.md)</ept>.</source>
          <target state="translated">클라이언트가 서비스에 연결할 수 있도록 하는 이중 서비스의 일반 논의 알려면 <bpt id="p1">[</bpt>이중 서비스<ept id="p1">](~/docs/framework/wcf/feature-details/duplex-services.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.DuplexChannelFactory`1">
          <source>For an outline and discussion of the steps involved in writing a <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> client application using a channel factory, see <bpt id="p1">[</bpt>How to: Use the ChannelFactory<ept id="p1">](~/docs/framework/wcf/feature-details/how-to-use-the-channelfactory.md)</ept>.</source>
          <target state="translated">개요 및 단계에 대 한 설명은 대 한 쓰기와 관련 한 <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> 채널 팩터리를 사용 하 여 클라이언트 응용 프로그램 참조 <bpt id="p1">[</bpt>하는 방법: ChannelFactory를 사용 하 여<ept id="p1">](~/docs/framework/wcf/feature-details/how-to-use-the-channelfactory.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.DuplexChannelFactory`1">
          <source>For a procedure describing how to create a <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> client in a client class that implements the callback interface to access a service that uses a duplex messaging pattern, see <bpt id="p1">[</bpt>How to: Access Services with a Duplex Contract<ept id="p1">](~/docs/framework/wcf/feature-details/how-to-access-services-with-a-duplex-contract.md)</ept>.</source>
          <target state="translated">만드는 방법을 설명 하는 프로시저에 대 한 한 <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> 이중 메시징 패턴을 사용 하는 서비스에 액세스 하는 콜백 인터페이스를 구현 하는 클라이언트 클래스에는 클라이언트 참조 <bpt id="p1">[</bpt>하는 방법: 이중 계약와 함께 Access Services<ept id="p1">](~/docs/framework/wcf/feature-details/how-to-access-services-with-a-duplex-contract.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.DuplexChannelFactory`1">
          <source>The following sample shows how to create a channel factory and use it to create and manage channels.</source>
          <target state="translated">다음 예제에서는 채널 팩터리를 만드는 방법과 이 채널 팩터리를 사용하여 채널을 만들고 관리하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.DuplexChannelFactory`1">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> that the client uses to listen for messages from the connected service</source>
          <target state="translated">클라이언트가 연결된 서비스에서 오는 메시지를 수신 대기할 때 사용하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> class with specified instance context.</source>
          <target state="translated">지정된 인스턴스 컨텍스트를 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext)">
          <source><ph id="ph1">&lt;paramref name="callbackInstance" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callbackInstance" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that provides the callback instance that the client uses to listen for messages from the connected service.</source>
          <target state="translated">클라이언트가 연결된 서비스에서 오는 메시지를 위해 수신 대기할 때 사용하는 콜백 인스턴스를 제공하는 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> class with specified type of callback instance.</source>
          <target state="translated">지정된 콜백 인스턴스 형식을 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type)">
          <source><ph id="ph1">&lt;paramref name="callbackInstanceType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callbackInstanceType" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> class with an object that implements the callback contract.</source>
          <target state="translated">콜백 계약을 구현하는 개체를 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object)">
          <source>Use this constructor to pass an object that implements the callback contract for the target service programmatically rather than by using an application configuration file.</source>
          <target state="translated">응용 프로그램 구성 파일을 사용하지 않고 프로그래밍 방식으로 대상 서비스의 콜백 계약을 구현하는 개체를 전달하려면 이 생성자를 사용합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object)">
          <source><ph id="ph1">&lt;paramref name="callbackInstance" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callbackInstance" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> that the client uses to listen for messages from the connected service.</source>
          <target state="translated">클라이언트가 연결된 서비스에서 들어 오는 메시지를 수신 대기할 때 사용하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> used to connect to the service by channels produced by the factory.</source>
          <target state="translated">팩터리에서 만든 채널을 통해 서비스에 연결하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> class with a context that implements the callback contract and a specified binding.</source>
          <target state="translated">콜백 계약을 구현하는 컨텍스트 및 지정된 바인딩을 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding)">
          <source>Use this constructor to pass an instance context object that implements the callback contract for the target service and to pass the binding information programmatically rather than by using an application configuration file.</source>
          <target state="translated">대상 서비스의 콜백 계약을 구현하는 인스턴스 컨텍스트 개체를 전달하고, 응용 프로그램 구성 파일을 사용하는 대신 프로그래밍 방식으로 바인딩 정보를 전달하려면 이 생성자를 사용합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding)">
          <source><ph id="ph1">&lt;paramref name="callbackInstance" /&gt;</ph> or <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callbackInstance" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="binding" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Description.ServiceEndpoint)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> that the client uses to listen for messages from the connected service.</source>
          <target state="translated">클라이언트가 연결된 서비스에서 들어 오는 메시지를 수신 대기할 때 사용하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Description.ServiceEndpoint)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> to which channels produced by the factory connect.</source>
          <target state="translated">팩터리 연결에서 생성하는 채널이 연결된 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Description.ServiceEndpoint)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> class with an object that implements the callback contract and a specified endpoint.</source>
          <target state="translated">콜백 계약을 구현하는 개체 및 지정된 끝점을 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Description.ServiceEndpoint)">
          <source>Use this constructor to pass an instance context object that implements the callback contract for the target service and to pass the endpoint information programmatically rather than by using an application configuration file.</source>
          <target state="translated">대상 서비스의 콜백 계약을 구현하는 인스턴스 컨텍스트 개체를 전달하고, 응용 프로그램 구성 파일을 사용하는 대신 프로그래밍 방식으로 끝점 정보를 전달하려면 이 생성자를 사용합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Description.ServiceEndpoint)">
          <source><ph id="ph1">&lt;paramref name="callbackInstance" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callbackInstance" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> that the client uses to listen for messages from the connected service.</source>
          <target state="translated">클라이언트가 연결된 서비스에서 들어 오는 메시지를 수신 대기할 때 사용하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String)">
          <source>The name used for the endpoint configuration.</source>
          <target state="translated">끝점 구성에 사용되는 이름입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> class with an object that implements the callback contract and a specified configuration.</source>
          <target state="translated">콜백 계약을 구현하는 개체 및 지정된 구성을 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String)">
          <source>Use this constructor to pass an instance context object that implements the callback contract for the target service and to determine the target endpoint information from the client application configuration file.</source>
          <target state="translated">대상 서비스의 콜백 계약을 구현하는 인스턴스 컨텍스트 개체를 전달하고, 클라이언트 응용 프로그램 구성 파일에서 대상 끝점 정보를 확인하려면 이 생성자를 사용합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String)">
          <source><ph id="ph1">&lt;paramref name="callbackInstance" /&gt;</ph> or <ph id="ph2">&lt;paramref name="endpointConfigurationName" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callbackInstance" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="endpointConfigurationName" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that provides the callback instance that the client uses to listen for messages from the connected service.</source>
          <target state="translated">클라이언트가 연결된 서비스에서 오는 메시지를 위해 수신 대기할 때 사용하는 콜백 인스턴스를 제공하는 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> used to connect to the service by channels produced by the factory.</source>
          <target state="translated">팩터리에서 만든 채널을 통해 서비스에 연결하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> class with specified type of callback instance and binding.</source>
          <target state="translated">지정된 콜백 인스턴스 형식 및 바인딩을 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding)">
          <source><ph id="ph1">&lt;paramref name="callbackInstanceType" /&gt;</ph> or <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callbackInstanceType" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="binding" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Description.ServiceEndpoint)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that provides the callback instance that the client uses to listen for messages from the connected service.</source>
          <target state="translated">클라이언트가 연결된 서비스에서 오는 메시지를 위해 수신 대기할 때 사용하는 콜백 인스턴스를 제공하는 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Description.ServiceEndpoint)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> for the service.</source>
          <target state="translated">서비스에 대한 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Description.ServiceEndpoint)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> class with specified type of callback instance and service endpoint.</source>
          <target state="translated">지정된 콜백 인스턴스 형식 및 서비스 끝점을 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Description.ServiceEndpoint)">
          <source><ph id="ph1">&lt;paramref name="callbackInstanceType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callbackInstanceType" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that provides the callback instance that the client uses to listen for messages from the connected service.</source>
          <target state="translated">클라이언트가 연결된 서비스에서 오는 메시지를 위해 수신 대기할 때 사용하는 콜백 인스턴스를 제공하는 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.String)">
          <source>The name used for the endpoint configuration.</source>
          <target state="translated">끝점 구성에 사용되는 이름입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> class with specified type of callback instance and configuration.</source>
          <target state="translated">지정된 콜백 인스턴스 형식 및 구성을 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.String)">
          <source><ph id="ph1">&lt;paramref name="callbackInstanceType" /&gt;</ph> or <ph id="ph2">&lt;paramref name="endpointConfigurationName" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callbackInstanceType" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="endpointConfigurationName" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> used to connect to the service by channels produced by the factory.</source>
          <target state="translated">팩터리에서 만든 채널을 통해 서비스에 연결하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> class with an object that implements the callback contract and a specified binding.</source>
          <target state="translated">콜백 계약을 구현하는 개체 및 지정된 바인딩을 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding)">
          <source>Use this constructor to pass an instance context object that implements the callback contract for the target service and to pass the binding information programmatically rather than by using an application configuration file.</source>
          <target state="translated">대상 서비스의 콜백 계약을 구현하는 인스턴스 컨텍스트 개체를 전달하고, 응용 프로그램 구성 파일을 사용하는 대신 프로그래밍 방식으로 바인딩 정보를 전달하려면 이 생성자를 사용합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding)">
          <source><ph id="ph1">&lt;paramref name="callbackObject" /&gt;</ph> or <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callbackObject" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="binding" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Description.ServiceEndpoint)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> to which channels produced by the factory connect.</source>
          <target state="translated">팩터리 연결에서 생성하는 채널이 연결된 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Description.ServiceEndpoint)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> class with an object that implements the callback contract and a specified endpoint.</source>
          <target state="translated">콜백 계약을 구현하는 개체 및 지정된 끝점을 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Description.ServiceEndpoint)">
          <source>Use this constructor to pass a service object that implements the callback contract for the target service and to pass the service endpoint information programmatically rather than using an application configuration file.</source>
          <target state="translated">대상 서비스의 콜백 계약을 구현하는 서비스 개체를 전달하고 응용 프로그램 구성 파일을 사용하지 않고 프로그래밍 방식으로 서비스 끝점 정보를 전달하려면 이 생성자를 사용합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Description.ServiceEndpoint)">
          <source><ph id="ph1">&lt;paramref name="callbackObject" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callbackObject" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.String)">
          <source>The configuration name used for the endpoint.</source>
          <target state="translated">끝점에 사용되는 구성 이름입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> class with an object that implements the callback contract and a specified configuration.</source>
          <target state="translated">콜백 계약을 구현하는 개체 및 지정된 구성을 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.String)">
          <source>Use this constructor to pass a service object that implements the callback contract for the target service and determine the target endpoint information from the client application configuration file.</source>
          <target state="translated">대상 서비스의 콜백 계약을 구현하는 서비스 개체를 전달하고 클라이언트 응용 프로그램 구성 파일에서 대상 끝점 정보를 확인하려면 이 생성자를 사용합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.String)">
          <source><ph id="ph1">&lt;paramref name="callbackObject" /&gt;</ph> or <ph id="ph2">&lt;paramref name="endpointConfigurationName" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callbackObject" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="endpointConfigurationName" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> that the client uses to listen for messages from the connected service.</source>
          <target state="translated">클라이언트가 연결된 서비스에서 들어 오는 메시지를 수신 대기할 때 사용하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> used to connect to the service by channels produced by the factory.</source>
          <target state="translated">팩터리에서 만든 채널을 통해 서비스에 연결하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph> that provides the location of the service.</source>
          <target state="translated">서비스 위치를 제공하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> class with an object that implements the callback contract and a specified binding and endpoint address.</source>
          <target state="translated">콜백 계약을 구현하는 개체, 지정된 바인딩 및 끝점 주소를 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>Use this constructor to pass an instance context object that implements the callback contract for the target service and to pass in the binding and address information programmatically rather than using an application configuration file.</source>
          <target state="translated">대상 서비스의 콜백 계약을 구현하는 인스턴스 컨텍스트 개체를 전달하고, 응용 프로그램 구성 파일을 사용하는 대신 프로그래밍 방식으로 바인딩 및 주소 정보를 전달하려면 이 생성자를 사용합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source><ph id="ph1">&lt;paramref name="callbackInstance" /&gt;</ph> or <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> or <ph id="ph3">&lt;paramref name="remoteAddress" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callbackInstance" /&gt;</ph>, <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> 또는 <ph id="ph3">&lt;paramref name="remoteAddress" /&gt;</ph>가 <ph id="ph4">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> that the client uses to listen for messages from the connected service.</source>
          <target state="translated">클라이언트가 연결된 서비스에서 들어 오는 메시지를 수신 대기할 때 사용하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> used to connect to the service by channels produced by the factory.</source>
          <target state="translated">팩터리에서 만든 채널을 통해 서비스에 연결하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.String)">
          <source>The remote address that provides the location of the service.</source>
          <target state="translated">서비스 위치를 제공하는 원격 주소입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> class with specified instance context, binding, and remote address.</source>
          <target state="translated">지정된 인스턴스 컨텍스트, 바인딩 및 원격 주소를 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.String)">
          <source><ph id="ph1">&lt;paramref name="callbackInstance" /&gt;</ph> or <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> or <ph id="ph3">&lt;paramref name="remoteAddress" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callbackInstance" /&gt;</ph>, <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> 또는 <ph id="ph3">&lt;paramref name="remoteAddress" /&gt;</ph>가 <ph id="ph4">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> that the client uses to listen for messages from the connected service.</source>
          <target state="translated">클라이언트가 연결된 서비스에서 들어 오는 메시지를 수신 대기할 때 사용하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)">
          <source>The name used for the endpoint configuration.</source>
          <target state="translated">끝점 구성에 사용되는 이름입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph> that provides the location of the service.</source>
          <target state="translated">서비스 위치를 제공하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> class with an object that implements the callback contract and a specified configuration and endpoint address.</source>
          <target state="translated">콜백 계약을 구현하는 개체, 지정된 구성 및 끝점 주소를 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)">
          <source>Use this constructor to pass an instance context object that implements the callback contract for the target service address information programmatically, pass in the address information programmatically, and determine the remaining target endpoint information from the client application configuration file.</source>
          <target state="translated">프로그래밍 방식으로 대상 서비스 주소 정보의 콜백 계약을 구현하는 인스턴스 컨텍스트 개체를 전달하거나, 주소 정보를 프로그래밍 방식으로 전달하거나, 클라이언트 응용 프로그램 구성 파일에서 나머지 대상 끝점 정보를 확인하려면 이 생성자를 사용합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)">
          <source><ph id="ph1">&lt;paramref name="callbackInstance" /&gt;</ph> or <ph id="ph2">&lt;paramref name="endpointConfigurationName" /&gt;</ph> or <ph id="ph3">&lt;paramref name="remoteAddress" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callbackInstance" /&gt;</ph>, <ph id="ph2">&lt;paramref name="endpointConfigurationName" /&gt;</ph> 또는 <ph id="ph3">&lt;paramref name="remoteAddress" /&gt;</ph>가 <ph id="ph4">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that provides the callback instance that the client uses to listen for messages from the connected service.</source>
          <target state="translated">클라이언트가 연결된 서비스에서 오는 메시지를 위해 수신 대기할 때 사용하는 콜백 인스턴스를 제공하는 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> used to connect to the service by channels produced by the factory.</source>
          <target state="translated">팩터리에서 만든 채널을 통해 서비스에 연결하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph> that provides the location of the service.</source>
          <target state="translated">서비스 위치를 제공하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> class with specified type of callback instance, binding, and remote address.</source>
          <target state="translated">지정된 콜백 인스턴스 형식, 바인딩 및 원격 주소를 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source><ph id="ph1">&lt;paramref name="callbackInstanceType" /&gt;</ph> or <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> or <ph id="ph3">&lt;paramref name="remoteAddress" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callbackInstanceType" /&gt;</ph>, <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> 또는 <ph id="ph3">&lt;paramref name="remoteAddress" /&gt;</ph>가 <ph id="ph4">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that provides the callback instance that the client uses to listen for messages from the connected service.</source>
          <target state="translated">클라이언트가 연결된 서비스에서 오는 메시지를 위해 수신 대기할 때 사용하는 콜백 인스턴스를 제공하는 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> used to connect to the service by channels produced by the factory.</source>
          <target state="translated">팩터리에서 만든 채널을 통해 서비스에 연결하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.String)">
          <source>The remote address that provides the location of the service.</source>
          <target state="translated">서비스 위치를 제공하는 원격 주소입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> class with the specified type of callback instance, binding, and remote address.</source>
          <target state="translated">지정된 콜백 인스턴스 형식, 바인딩 및 원격 주소를 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.String)">
          <source><ph id="ph1">&lt;paramref name="callbackInstanceType" /&gt;</ph> or <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> or <ph id="ph3">&lt;paramref name="remoteAddress" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callbackInstanceType" /&gt;</ph>, <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> 또는 <ph id="ph3">&lt;paramref name="remoteAddress" /&gt;</ph>가 <ph id="ph4">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.String,System.ServiceModel.EndpointAddress)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that provides the callback instance that the client uses to listen for messages from the connected service.</source>
          <target state="translated">클라이언트가 연결된 서비스에서 오는 메시지를 위해 수신 대기할 때 사용하는 콜백 인스턴스를 제공하는 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.String,System.ServiceModel.EndpointAddress)">
          <source>The name used for the endpoint configuration.</source>
          <target state="translated">끝점 구성에 사용되는 이름입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.String,System.ServiceModel.EndpointAddress)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph> that provides the location of the service.</source>
          <target state="translated">서비스 위치를 제공하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.String,System.ServiceModel.EndpointAddress)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> class with the specified type of callback instance, configuration, and remote address.</source>
          <target state="translated">지정된 콜백 인스턴스 형식, 구성 및 원격 주소를 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.String,System.ServiceModel.EndpointAddress)">
          <source><ph id="ph1">&lt;paramref name="callbackInstanceType" /&gt;</ph> or <ph id="ph2">&lt;paramref name="endpointConfigurationName" /&gt;</ph> or <ph id="ph3">&lt;paramref name="remoteAddress" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callbackInstanceType" /&gt;</ph>, <ph id="ph2">&lt;paramref name="endpointConfigurationName" /&gt;</ph> 또는 <ph id="ph3">&lt;paramref name="remoteAddress" /&gt;</ph>가 <ph id="ph4">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> used to connect to the service by channels produced by the factory.</source>
          <target state="translated">팩터리에서 만든 채널을 통해 서비스에 연결하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph> that provides the location of the service.</source>
          <target state="translated">서비스 위치를 제공하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> class with an object that implements the callback contract and a specified binding and endpoint address.</source>
          <target state="translated">콜백 계약을 구현하는 개체, 지정된 바인딩 및 끝점 주소를 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>Use this constructor to pass a service object that implements the callback contract for the target service and pass in the binding and address information programmatically rather than using an application configuration file.</source>
          <target state="translated">대상 서비스의 콜백 계약을 구현하는 서비스 개체를 전달하고, 응용 프로그램 구성 파일을 사용하는 대신 프로그래밍 방식으로 바인딩 및 주소 정보를 전달하려면 이 생성자를 사용합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source><ph id="ph1">&lt;paramref name="callbackObject" /&gt;</ph> or <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> or <ph id="ph3">&lt;paramref name="remoteAddress" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callbackObject" /&gt;</ph>, <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> 또는 <ph id="ph3">&lt;paramref name="remoteAddress" /&gt;</ph>가 <ph id="ph4">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> used to connect to the service by channels produced by the factory.</source>
          <target state="translated">팩터리에서 만든 채널을 통해 서비스에 연결하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding,System.String)">
          <source>The remote address that provides the location of the service.</source>
          <target state="translated">서비스 위치를 제공하는 원격 주소입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> class with specified callback object, binding, and remote address.</source>
          <target state="translated">지정된 콜백 개체, 바인딩 및 원격 주소를 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding,System.String)">
          <source><ph id="ph1">&lt;paramref name="callbackObject" /&gt;</ph> or <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> or <ph id="ph3">&lt;paramref name="remoteAddress" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callbackObject" /&gt;</ph>, <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> 또는 <ph id="ph3">&lt;paramref name="remoteAddress" /&gt;</ph>가 <ph id="ph4">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.String,System.ServiceModel.EndpointAddress)">
          <source>The name used for the endpoint configuration.</source>
          <target state="translated">끝점 구성에 사용되는 이름입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.String,System.ServiceModel.EndpointAddress)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph> that provides the location of the service.</source>
          <target state="translated">서비스 위치를 제공하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.String,System.ServiceModel.EndpointAddress)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> class with an object that implements the callback contract, and a specified configuration and endpoint address.</source>
          <target state="translated">콜백 계약을 구현하는 개체, 지정된 구성 및 끝점 주소를 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.DuplexChannelFactory`1" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.String,System.ServiceModel.EndpointAddress)">
          <source>Use this constructor to pass a service object that implements the callback contract for the target service, pass in the address information programmatically, and determine the remaining target endpoint information from the client application configuration file.</source>
          <target state="translated">대상 서비스의 콜백 계약을 구현하는 서비스 개체를 전달하거나, 주소 정보를 프로그래밍 방식으로 전달하거나, 클라이언트 응용 프로그램 구성 파일에서 나머지 대상 끝점 정보를 확인하려면 이 생성자를 사용합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.String,System.ServiceModel.EndpointAddress)">
          <source><ph id="ph1">&lt;paramref name="callbackObject" /&gt;</ph> or <ph id="ph2">&lt;paramref name="endpointConfigurationName" /&gt;</ph> or <ph id="ph3">&lt;paramref name="remoteAddress" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callbackObject" /&gt;</ph>, <ph id="ph2">&lt;paramref name="endpointConfigurationName" /&gt;</ph> 또는 <ph id="ph3">&lt;paramref name="remoteAddress" /&gt;</ph>가 <ph id="ph4">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.DuplexChannelFactory`1">
          <source>Creates a duplex channel of a specified type to a specified endpoint address.</source>
          <target state="translated">지정된 끝점 주소에 대해 지정된 형식의 이중 채널을 만듭니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> that the client uses to listen for messages from the connected service.</source>
          <target state="translated">클라이언트가 연결된 서비스에서 들어 오는 메시지를 수신 대기할 때 사용하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext)">
          <source>Creates a duplex channel between a service and a callback instance on the client.</source>
          <target state="translated">서비스와 클라이언트의 콜백 인스턴스 간 이중 채널을 만듭니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext)">
          <source>A duplex channel of type <ph id="ph1">&lt;paramref name="TChannel" /&gt;</ph>, the generic parameter for the factory, between the client and service.</source>
          <target state="translated">팩터리에 대한 제네릭 매개 변수로, <ph id="ph1">&lt;paramref name="TChannel" /&gt;</ph> 형식을 가진 클라이언트와 서비스 간 이중 채널입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext)">
          <source><ph id="ph1">&lt;paramref name="callbackInstance" /&gt;</ph> or <ph id="ph2">&lt;paramref name="callbackInstance" /&gt;</ph>.UserObject is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callbackInstance" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="callbackInstance" /&gt;</ph>.UserObject가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that the client uses to listen for messages from the connected service.</source>
          <target state="translated">클라이언트가 연결된 서비스에서 들어 오는 메시지를 수신 대기할 때 사용하는 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.String)">
          <source>The name used for the endpoint configuration.</source>
          <target state="translated">끝점 구성에 사용되는 이름입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.String)">
          <source>Creates a duplex channel between a service and a callback instance on the client.</source>
          <target state="translated">서비스와 클라이언트의 콜백 인스턴스 간 이중 채널을 만듭니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.String)">
          <source>A channel of type <ph id="ph1">&lt;paramref name="TChannel" /&gt;</ph>, the generic parameter for the factory, between the client and service.</source>
          <target state="translated">팩터리에 대한 제네릭 매개 변수로, <ph id="ph1">&lt;paramref name="TChannel" /&gt;</ph> 형식을 가진 클라이언트와 서비스 간 채널입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.String)">
          <source><ph id="ph1">&lt;paramref name="endpointConfigurationName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="endpointConfigurationName" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.String)">
          <source><ph id="ph1">&lt;paramref name="callbackInstance" /&gt;</ph> or <ph id="ph2">&lt;paramref name="callbackInstance" /&gt;</ph>.UserObject is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callbackInstance" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="callbackInstance" /&gt;</ph>.UserObject가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph> that provides the location of the service.</source>
          <target state="translated">서비스 위치를 제공하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that contains the transport address to which the message is sent.</source>
          <target state="translated">메시지를 보낼 전송 주소를 포함하는 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
          <source>Creates a duplex channel between a service and a callback instance on the client.</source>
          <target state="translated">서비스와 클라이언트의 콜백 인스턴스 간 이중 채널을 만듭니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
          <source>A duplex channel of type <ph id="ph1">&lt;paramref name="TChannel" /&gt;</ph>, the generic parameter for the factory, between the client and service.</source>
          <target state="translated">팩터리에 대한 제네릭 매개 변수로, <ph id="ph1">&lt;paramref name="TChannel" /&gt;</ph> 형식을 가진 클라이언트와 서비스 간 이중 채널입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
          <source><ph id="ph1">&lt;paramref name="address" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> that the client uses to listen for messages from the connected service.</source>
          <target state="translated">클라이언트가 연결된 서비스에서 들어 오는 메시지를 수신 대기할 때 사용하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph> that provides the location of the service.</source>
          <target state="translated">서비스 위치를 제공하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress)">
          <source>Creates a duplex channel between a service and a callback instance on the client.</source>
          <target state="translated">서비스와 클라이언트의 콜백 인스턴스 간 이중 채널을 만듭니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress)">
          <source>A duplex channel of type <ph id="ph1">&lt;paramref name="TChannel" /&gt;</ph>, the generic parameter for the factory, between the client and service.</source>
          <target state="translated">팩터리에 대한 제네릭 매개 변수로, <ph id="ph1">&lt;paramref name="TChannel" /&gt;</ph> 형식을 가진 클라이언트와 서비스 간 이중 채널입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress)">
          <source><ph id="ph1">&lt;paramref name="address" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress)">
          <source><ph id="ph1">&lt;paramref name="callbackInstance" /&gt;</ph> or <ph id="ph2">&lt;paramref name="callbackInstance" /&gt;</ph>.UserObject is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callbackInstance" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="callbackInstance" /&gt;</ph>.UserObject가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> that the client uses to listen for messages from the connected service.</source>
          <target state="translated">클라이언트가 연결된 서비스에서 들어 오는 메시지를 수신 대기할 때 사용하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.String)">
          <source>The name used for the endpoint configuration.</source>
          <target state="translated">끝점 구성에 사용되는 이름입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.String)">
          <source>Creates a duplex channel between a service and a callback instance on the client.</source>
          <target state="translated">서비스와 클라이언트의 콜백 인스턴스 간 이중 채널을 만듭니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.String)">
          <source>A channel of type <ph id="ph1">&lt;paramref name="TChannel" /&gt;</ph>, the generic parameter for the factory, between the client and service.</source>
          <target state="translated">팩터리에 대한 제네릭 매개 변수로, <ph id="ph1">&lt;paramref name="TChannel" /&gt;</ph> 형식을 가진 클라이언트와 서비스 간 채널입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.String)">
          <source><ph id="ph1">&lt;paramref name="endpointConfigurationName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="endpointConfigurationName" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.String)">
          <source><ph id="ph1">&lt;paramref name="callbackInstance" /&gt;</ph> or <ph id="ph2">&lt;paramref name="callbackInstance" /&gt;</ph>.UserObject is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callbackInstance" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="callbackInstance" /&gt;</ph>.UserObject가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that the client uses to listen for messages from the connected service.</source>
          <target state="translated">클라이언트가 연결된 서비스에서 들어 오는 메시지를 수신 대기할 때 사용하는 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> used to connect to the service by channels produced by the factory.</source>
          <target state="translated">팩터리에서 만든 채널을 통해 서비스에 연결하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph> that provides the location of the service.</source>
          <target state="translated">서비스 위치를 제공하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>Creates a duplex channel between a service and a callback instance on the client.</source>
          <target state="translated">서비스와 클라이언트의 콜백 인스턴스 간 이중 채널을 만듭니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>A channel of type <ph id="ph1">&lt;paramref name="TChannel" /&gt;</ph>, the generic parameter for the factory, between the client and service.</source>
          <target state="translated">팩터리에 대한 제네릭 매개 변수로, <ph id="ph1">&lt;paramref name="TChannel" /&gt;</ph> 형식을 가진 클라이언트와 서비스 간 채널입니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source><ph id="ph1">&lt;paramref name="binding" /&gt;</ph> or <ph id="ph2">&lt;paramref name="endpointAddress" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="binding" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="endpointAddress" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source><ph id="ph1">&lt;paramref name="callbackInstance" /&gt;</ph> or <ph id="ph2">&lt;paramref name="callbackInstance" /&gt;</ph>.UserObject is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callbackInstance" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="callbackInstance" /&gt;</ph>.UserObject가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> that the client uses to listen for messages from the connected service.</source>
          <target state="translated">클라이언트가 연결된 서비스에서 들어 오는 메시지를 수신 대기할 때 사용하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> used to connect to the service by channels produced by the factory.</source>
          <target state="translated">팩터리에서 만든 채널을 통해 서비스에 연결하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph> that provides the location of the service.</source>
          <target state="translated">서비스 위치를 제공하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>Creates a duplex channel between a service and a callback instance on the client.</source>
          <target state="translated">서비스와 클라이언트의 콜백 인스턴스 간 이중 채널을 만듭니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>A channel of type <ph id="ph1">&lt;paramref name="TChannel" /&gt;</ph>, the generic parameter for the factory, between the client and service.</source>
          <target state="translated">팩터리에 대한 제네릭 매개 변수로, <ph id="ph1">&lt;paramref name="TChannel" /&gt;</ph> 형식을 가진 클라이언트와 서비스 간 채널입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source><ph id="ph1">&lt;paramref name="binding" /&gt;</ph> or <ph id="ph2">&lt;paramref name="endpointAddress" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="binding" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="endpointAddress" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source><ph id="ph1">&lt;paramref name="callbackInstance" /&gt;</ph> or <ph id="ph2">&lt;paramref name="callbackInstance" /&gt;</ph>.UserObject is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callbackInstance" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="callbackInstance" /&gt;</ph>.UserObject가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> that the client uses to listen for messages from the connected service.</source>
          <target state="translated">클라이언트가 연결된 서비스에서 들어 오는 메시지를 수신 대기할 때 사용하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph> that provides the location of the service.</source>
          <target state="translated">서비스 위치를 제공하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that contains the transport address to which the message is sent.</source>
          <target state="translated">메시지를 보낼 전송 주소를 포함하는 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress,System.Uri)">
          <source>Creates a duplex channel between a service and a callback instance on the client.</source>
          <target state="translated">서비스와 클라이언트의 콜백 인스턴스 간 이중 채널을 만듭니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress,System.Uri)">
          <source>A channel of type <ph id="ph1">&lt;paramref name="TChannel" /&gt;</ph>, the generic parameter for the factory, between the client and service.</source>
          <target state="translated">팩터리에 대한 제네릭 매개 변수로, <ph id="ph1">&lt;paramref name="TChannel" /&gt;</ph> 형식을 가진 클라이언트와 서비스 간 채널입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress,System.Uri)">
          <source><ph id="ph1">&lt;paramref name="address" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress,System.Uri)">
          <source><ph id="ph1">&lt;paramref name="callbackInstance" /&gt;</ph> or <ph id="ph2">&lt;paramref name="callbackInstance" /&gt;</ph>.UserObject is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callbackInstance" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="callbackInstance" /&gt;</ph>.UserObject가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that the client uses to listen for messages from the connected service.</source>
          <target state="translated">클라이언트가 연결된 서비스에서 들어 오는 메시지를 수신 대기할 때 사용하는 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> used to connect to the service by channels produced by the factory.</source>
          <target state="translated">팩터리에서 만든 채널을 통해 서비스에 연결하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph> that provides the location of the service.</source>
          <target state="translated">서비스 위치를 제공하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that contains the transport address to which the message is sent.</source>
          <target state="translated">메시지를 보낼 전송 주소를 포함하는 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)">
          <source>Creates a duplex channel between a service and a callback instance on the client.</source>
          <target state="translated">서비스와 클라이언트의 콜백 인스턴스 간 이중 채널을 만듭니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)">
          <source>A channel of type <ph id="ph1">&lt;paramref name="TChannel" /&gt;</ph>, the generic parameter for the factory, between the client and service.</source>
          <target state="translated">팩터리에 대한 제네릭 매개 변수로, <ph id="ph1">&lt;paramref name="TChannel" /&gt;</ph> 형식을 가진 클라이언트와 서비스 간 채널입니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)">
          <source><ph id="ph1">&lt;paramref name="binding" /&gt;</ph> or <ph id="ph2">&lt;paramref name="endpointAddress" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="binding" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="endpointAddress" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)">
          <source><ph id="ph1">&lt;paramref name="callbackInstance" /&gt;</ph> or <ph id="ph2">&lt;paramref name="callbackInstance" /&gt;</ph>.UserObject is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callbackInstance" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="callbackInstance" /&gt;</ph>.UserObject가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> that the client uses to listen for messages from the connected service.</source>
          <target state="translated">클라이언트가 연결된 서비스에서 들어 오는 메시지를 수신 대기할 때 사용하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> used to connect to the service by channels produced by the factory.</source>
          <target state="translated">팩터리에서 만든 채널을 통해 서비스에 연결하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph> that provides the location of the service.</source>
          <target state="translated">서비스 위치를 제공하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that contains the transport address to which the message is sent.</source>
          <target state="translated">메시지를 보낼 전송 주소를 포함하는 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)">
          <source>Creates a duplex channel between a service and a callback instance on the client.</source>
          <target state="translated">서비스와 클라이언트의 콜백 인스턴스 간 이중 채널을 만듭니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)">
          <source>A channel of type <ph id="ph1">&lt;paramref name="TChannel" /&gt;</ph>, the generic parameter for the factory, between the client and service.</source>
          <target state="translated">팩터리에 대한 제네릭 매개 변수로, <ph id="ph1">&lt;paramref name="TChannel" /&gt;</ph> 형식을 가진 클라이언트와 서비스 간 채널입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)">
          <source><ph id="ph1">&lt;paramref name="binding" /&gt;</ph> or <ph id="ph2">&lt;paramref name="endpointAddress" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="binding" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="endpointAddress" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)">
          <source><ph id="ph1">&lt;paramref name="callbackInstance" /&gt;</ph> or <ph id="ph2">&lt;paramref name="callbackInstance" /&gt;</ph>.UserObject is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callbackInstance" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="callbackInstance" /&gt;</ph>.UserObject가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>