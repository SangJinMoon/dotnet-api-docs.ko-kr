<Type Name="ServiceAuthorizationManager" FullName="System.ServiceModel.ServiceAuthorizationManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="eda95790f3fa24821df55f5298f3c8af3a23e0b6" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55348490" /></Metadata><TypeSignature Language="C#" Value="public class ServiceAuthorizationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceAuthorizationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ServiceAuthorizationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceAuthorizationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceAuthorizationManager" />
  <TypeSignature Language="F#" Value="type ServiceAuthorizationManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="74562-101">서비스 작업에 대한 인증 액세스 검사를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="74562-101">Provides authorization access checking for service operations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74562-102">이 클래스는 모든 정책(사용자에게 허용되는 작업을 정의하는 규칙)을 평가하고, 정책을 클라이언트의 클레임과 비교하며, 그 결과로 나온 <xref:System.IdentityModel.Policy.AuthorizationContext>를 <xref:System.ServiceModel.ServiceSecurityContext>로 설정하고, 특정 서비스 작업에 대한 호출자의 액세스를 허용하거나 거부하여 권한 부여를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="74562-102">This class is responsible for evaluating all policies (rules that define what a user is allowed to do), comparing the policies to claims made by a client, setting the resulting <xref:System.IdentityModel.Policy.AuthorizationContext> to the <xref:System.ServiceModel.ServiceSecurityContext>, and providing the authorization decision whether to allow or deny access for a given service operation for a caller.</span></span>  
  
 <span data-ttu-id="74562-103"><xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> 메서드는 리소스에 액세스 하려는 시도가 수행 될 때마다 Windows Communication Foundation (WCF) 인프라에서 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="74562-103">The <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> method is called by the Windows Communication Foundation (WCF) infrastructure each time an attempt to access a resource is made.</span></span> <span data-ttu-id="74562-104">이 메서드는 `true`를 반환하여 액세스를 허용하거나 `false`를 반환하여 액세스를 거부합니다.</span><span class="sxs-lookup"><span data-stu-id="74562-104">The method returns `true` or `false` to allow or deny access, respectively.</span></span>  
  
 <span data-ttu-id="74562-105">합니다 <xref:System.ServiceModel.ServiceAuthorizationManager> WCF의 일부인*Id 모델* 인프라입니다.</span><span class="sxs-lookup"><span data-stu-id="74562-105">The <xref:System.ServiceModel.ServiceAuthorizationManager> is part of the WCF*Identity Model* infrastructure.</span></span> <span data-ttu-id="74562-106">ID 모델을 통해 사용자 지정 권한 부여 정책 및 사용자 지정 권한 부여 체계를 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="74562-106">The Identity Model enables you to create custom authorization policies and custom authorization schemes.</span></span> <span data-ttu-id="74562-107">Id 모델의 작동 방식에 대 한 자세한 내용은 참조 하세요. [관리 클레임 및 권한 부여 Id 모델을 사용 하 여](~/docs/framework/wcf/feature-details/managing-claims-and-authorization-with-the-identity-model.md)입니다.</span><span class="sxs-lookup"><span data-stu-id="74562-107">For more information about how the Identity Model works, see [Managing Claims and Authorization with the Identity Model](~/docs/framework/wcf/feature-details/managing-claims-and-authorization-with-the-identity-model.md).</span></span>  
  
## <a name="custom-authorization"></a><span data-ttu-id="74562-108">사용자 지정 권한 부여</span><span class="sxs-lookup"><span data-stu-id="74562-108">Custom Authorization</span></span>  
 <span data-ttu-id="74562-109">이 클래스는 권한 부여를 수행하지 않으며 사용자가 모든 서비스 작업에 액세스하도록 허용합니다.</span><span class="sxs-lookup"><span data-stu-id="74562-109">This class does not perform any authorization and allows users to access all service operations.</span></span> <span data-ttu-id="74562-110">더 제한적으로 권한을 부여하려면 사용자 지정 정책을 확인하는 사용자 지정 권한 부여 관리자를 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="74562-110">To provide more restrictive authorization, you must create a custom authorization manager that checks custom policies.</span></span> <span data-ttu-id="74562-111">이렇게 하려면 이 클래스로부터 <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> 메서드를 상속하여 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="74562-111">To do this, inherit from this class and override the <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> method.</span></span> <span data-ttu-id="74562-112"><xref:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationManager%2A> 속성을 통해 이 파생 클래스의 인스턴스를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="74562-112">Specify the instance of the derived class through the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationManager%2A> property.</span></span>  
  
 <span data-ttu-id="74562-113">애플리케이션은 <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A>에서 <xref:System.ServiceModel.OperationContext> 개체를 사용하여 호출자 ID(<xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A>)에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="74562-113">In <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A>, the application can use the <xref:System.ServiceModel.OperationContext> object to access the caller identity (<xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A>).</span></span>  
  
 <span data-ttu-id="74562-114"><xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A> 개체를 반환하는 <xref:System.ServiceModel.Channels.MessageHeaders> 속성을 가져옴으로써 애플리케이션은 서비스(<xref:System.ServiceModel.Channels.MessageHeaders.To%2A>)와 작업(<xref:System.ServiceModel.Channels.MessageHeaders.Action%2A>)에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="74562-114">By getting the <xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A> property, which returns a <xref:System.ServiceModel.Channels.MessageHeaders> object, the application can access the service (<xref:System.ServiceModel.Channels.MessageHeaders.To%2A>), and the operation (<xref:System.ServiceModel.Channels.MessageHeaders.Action%2A>).</span></span>  
  
 <span data-ttu-id="74562-115"><xref:System.ServiceModel.OperationContext.RequestContext%2A> 개체를 반환하는 <xref:System.ServiceModel.Channels.RequestContext> 속성을 가져옴으로써 애플리케이션은 전체 요청 메시지(<xref:System.ServiceModel.Channels.RequestContext.RequestMessage%2A>)에 액세스하고 그에 따라 권한 부여 결정을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="74562-115">By getting the <xref:System.ServiceModel.OperationContext.RequestContext%2A> property, which returns a <xref:System.ServiceModel.Channels.RequestContext> object, the application can access the entire request message (<xref:System.ServiceModel.Channels.RequestContext.RequestMessage%2A>) and perform the authorization decision accordingly.</span></span>  
  
 <span data-ttu-id="74562-116">예제를 보려면 [방법: 서비스에 대 한 사용자 지정 권한 부여 관리자 만들기](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-manager-for-a-service.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="74562-116">For an example, see [How to: Create a Custom Authorization Manager for a Service](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-manager-for-a-service.md).</span></span>  
  
 <span data-ttu-id="74562-117">사용자 지정 권한 부여 정책을 만들려면 <xref:System.IdentityModel.Policy.IAuthorizationPolicy> 클래스를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="74562-117">To create custom authorization policies, implement the <xref:System.IdentityModel.Policy.IAuthorizationPolicy> class.</span></span>  <span data-ttu-id="74562-118">예를 들어 참조 [방법: 사용자 지정 인증 정책을 만들고](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-policy.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="74562-118">For an example, see [How to: Create a Custom Authorization Policy](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-policy.md).</span></span>  
  
 <span data-ttu-id="74562-119">사용자 지정 클레임을 만들려면 <xref:System.IdentityModel.Claims.Claim> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="74562-119">To create a custom claim, use the <xref:System.IdentityModel.Claims.Claim> class.</span></span>  <span data-ttu-id="74562-120">예를 들어 참조 [방법: 사용자 지정 클레임을 만드는](~/docs/framework/wcf/extending/how-to-create-a-custom-claim.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="74562-120">For an example, see [How to: Create a Custom Claim](~/docs/framework/wcf/extending/how-to-create-a-custom-claim.md).</span></span> <span data-ttu-id="74562-121">사용자 지정 클레임을 비교 하려면 비교 해야에 표시 된 대로 클레임 [방법: 클레임 비교](~/docs/framework/wcf/extending/how-to-compare-claims.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="74562-121">To compare custom claims, you must compare claims, as shown in [How to: Compare Claims](~/docs/framework/wcf/extending/how-to-compare-claims.md).</span></span>  
  
 <span data-ttu-id="74562-122">자세한 내용은 [사용자 지정 권한 부여](~/docs/framework/wcf/extending/custom-authorization.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="74562-122">For more information, see [Custom Authorization](~/docs/framework/wcf/extending/custom-authorization.md).</span></span>  
  
 <span data-ttu-id="74562-123">사용 하 여 사용자 지정 권한 부여 관리자의 형식을 설정할 수 있습니다 합니다 [&lt;serviceAuthorization&gt;](~/docs/framework/configure-apps/file-schema/wcf/serviceauthorization-element.md) 클라이언트 애플리케이션 구성 파일에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="74562-123">You can set the type of a custom authorization manager using the [&lt;serviceAuthorization&gt;](~/docs/framework/configure-apps/file-schema/wcf/serviceauthorization-element.md) in a client application configuration file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74562-124">다음 예제에서는 `MyServiceAuthorizationManager`로부터 상속되었으며 <xref:System.ServiceModel.ServiceAuthorizationManager> 메서드를 재정의하는 <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A>라는 클래스를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="74562-124">The following example shows a class named `MyServiceAuthorizationManager` that inherits from the <xref:System.ServiceModel.ServiceAuthorizationManager> and overrides the <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> method.</span></span>  
  
 [!code-csharp[c_CustomAuthMgr#2](~/samples/snippets/csharp/VS_Snippets_CFX/c_customauthmgr/cs/c_customauthmgr.cs#2)]
 [!code-vb[c_CustomAuthMgr#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_customauthmgr/vb/c_customauthmgr.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Claims.ClaimSet" />
    <altmember cref="T:System.IdentityModel.Claims.Claim" />
    <related type="Article" href="https://msdn.microsoft.com/library/4f90311a-2593-462e-9174-2f7ac78217b9"><span data-ttu-id="74562-125">사용자 지정 권한 부여</span><span class="sxs-lookup"><span data-stu-id="74562-125">Custom Authorization</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/6214afde-44c1-4bf5-ba07-5ad6493620ea"><span data-ttu-id="74562-126">방법: 서비스에 대 한 사용자 지정 권한 만들기</span><span class="sxs-lookup"><span data-stu-id="74562-126">How To: Create a Custom AuthorizationManager for a Service</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/05b0549b-882d-4660-b6f0-5678543e5475"><span data-ttu-id="74562-127">방법: 사용자 지정 권한 부여 정책 만들기</span><span class="sxs-lookup"><span data-stu-id="74562-127">How To: Create a Custom Authorization Policy</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/d619976b-eda3-475e-ac23-c7988a2dceb0"><span data-ttu-id="74562-128">방법: 사용자 지정 클레임 만들기</span><span class="sxs-lookup"><span data-stu-id="74562-128">How To: Create a Custom Claim</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/0c4ec84d-53df-408f-8953-9bc437f56c28"><span data-ttu-id="74562-129">방법: 클레임 비교</span><span class="sxs-lookup"><span data-stu-id="74562-129">How To: Compare Claims</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceAuthorizationManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceAuthorizationManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceAuthorizationManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74562-130"><see cref="T:System.ServiceModel.ServiceAuthorizationManager" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="74562-130">Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceAuthorizationManager" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CheckAccess">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="74562-131">특정 작업 컨텍스트 및 선택적 메시지에 대한 권한 부여를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="74562-131">Checks authorization for the given operation context and optional message.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public virtual bool CheckAccess (System.ServiceModel.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckAccess(class System.ServiceModel.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CheckAccess(System::ServiceModel::OperationContext ^ operationContext);" />
      <MemberSignature Language="F#" Value="abstract member CheckAccess : System.ServiceModel.OperationContext -&gt; bool&#xA;override this.CheckAccess : System.ServiceModel.OperationContext -&gt; bool" Usage="serviceAuthorizationManager.CheckAccess operationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationContext" Type="System.ServiceModel.OperationContext" />
      </Parameters>
      <Docs>
        <param name="operationContext"><span data-ttu-id="74562-132"><see cref="T:System.ServiceModel.OperationContext" /></span><span class="sxs-lookup"><span data-stu-id="74562-132">The <see cref="T:System.ServiceModel.OperationContext" />.</span></span></param>
        <summary><span data-ttu-id="74562-133">특정 작업 컨텍스트에 대한 권한 부여를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="74562-133">Checks authorization for the given operation context.</span></span></summary>
        <returns><span data-ttu-id="74562-134">액세스 권한이 부여되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="74562-134"><see langword="true" /> if access is granted; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="74562-135">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="74562-135">The default is <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74562-136">일반적으로 애플리케이션은 이 메서드 대신 <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A>를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="74562-136">In general, applications should override <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> instead of this method.</span></span>  
  
 <span data-ttu-id="74562-137">애플리케이션에서 결과 <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccess%2A>에 대해 다른 정책 집합을 연결하거나 도입할 경우 또는 다른 정책 평가(체인) 모델을 제공할 경우 <xref:System.ServiceModel.ServiceSecurityContext>를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="74562-137">Override <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccess%2A> if the application associates or introduces a different set of policies for the resulting <xref:System.ServiceModel.ServiceSecurityContext> or provide a different policy evaluation (chaining) model.</span></span>  
  
 <span data-ttu-id="74562-138">이 메서드는 <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="74562-138">This method is responsible for calling <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74562-139">다음 코드에서는 이 메서드를 재정의하여 사용자 지정 액세스 제어 요구 사항을 적용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="74562-139">The following code shows how to override this method to enforce custom access control requirements.</span></span>  
  
 [!code-csharp[c_Federation#1](~/samples/snippets/csharp/VS_Snippets_CFX/c_federation/cs/source.cs#1)]
 [!code-vb[c_Federation#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_federation/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public virtual bool CheckAccess (System.ServiceModel.OperationContext operationContext, ref System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckAccess(class System.ServiceModel.OperationContext operationContext, class System.ServiceModel.Channels.Message&amp; message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CheckAccess(System::ServiceModel::OperationContext ^ operationContext, System::ServiceModel::Channels::Message ^ % message);" />
      <MemberSignature Language="F#" Value="abstract member CheckAccess : System.ServiceModel.OperationContext *  -&gt; bool&#xA;override this.CheckAccess : System.ServiceModel.OperationContext *  -&gt; bool" Usage="serviceAuthorizationManager.CheckAccess (operationContext, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationContext" Type="System.ServiceModel.OperationContext" />
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="operationContext"><span data-ttu-id="74562-140"><see cref="T:System.ServiceModel.OperationContext" /></span><span class="sxs-lookup"><span data-stu-id="74562-140">The <see cref="T:System.ServiceModel.OperationContext" />.</span></span></param>
        <param name="message"><span data-ttu-id="74562-141">권한 부여를 확인하기 위해 검사할 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</span><span class="sxs-lookup"><span data-stu-id="74562-141">The <see cref="T:System.ServiceModel.Channels.Message" /> to be examined to determine authorization.</span></span></param>
        <summary><span data-ttu-id="74562-142">메시지에 액세스해야 할 때 특정 작업 컨텍스트에 대한 권한 부여를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="74562-142">Checks authorization for the given operation context when access to a message is required.</span></span></summary>
        <returns><span data-ttu-id="74562-143">액세스 권한이 부여되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="74562-143"><see langword="true" /> if access is granted; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="74562-144">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="74562-144">The default is <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74562-145">일반적으로 애플리케이션은 이 메서드 대신 <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A>를 재정의합니다. 이 메서드는 메시지 본문에 따라 권한 부여 결정이 달라지는 경우에만 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="74562-145">In general, applications should override <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> instead of this method, which should only be used if the authorization decision depends on the message body.</span></span> <span data-ttu-id="74562-146">성능 문제 때문에 가능하다면 권한 부여 결정 시 메시지 본문에 액세스하지 않아도 되도록 애플리케이션을 다시 디자인해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="74562-146">Because of performance issues, if possible you should redesign your application so that the authorization decision does not require access to the message body.</span></span>  
  
 <span data-ttu-id="74562-147">애플리케이션에서 결과 <xref:System.ServiceModel.ServiceSecurityContext> 및 <xref:System.ServiceModel.Channels.Message>에 대해 다른 정책 집합을 연결하거나 도입할 경우 또는 다른 정책 평가(체인) 모델을 제공할 경우 이 메서드를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="74562-147">Override this method if the application associates or introduces a different set of policies for the resulting <xref:System.ServiceModel.ServiceSecurityContext> and <xref:System.ServiceModel.Channels.Message> or provide a different policy evaluation (chaining) model.</span></span>  
  
 <span data-ttu-id="74562-148">이 메서드는 <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="74562-148">This method is responsible for calling <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74562-149">다음 코드에서는 메시지 본문 액세스가 필요한 사용자 지정 액세스 제어 요구 사항을 적용하기 위해 이 메서드를 재정의하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="74562-149">The following code shows how to override this method to enforce custom access control requirements that require access to the message body.</span></span>  
  
 [!code-csharp[c_Federation#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_federation/cs/source.cs#6)]
 [!code-vb[c_Federation#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_federation/vb/source.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAccessCore">
      <MemberSignature Language="C#" Value="protected virtual bool CheckAccessCore (System.ServiceModel.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CheckAccessCore(class System.ServiceModel.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool CheckAccessCore(System::ServiceModel::OperationContext ^ operationContext);" />
      <MemberSignature Language="F#" Value="abstract member CheckAccessCore : System.ServiceModel.OperationContext -&gt; bool&#xA;override this.CheckAccessCore : System.ServiceModel.OperationContext -&gt; bool" Usage="serviceAuthorizationManager.CheckAccessCore operationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationContext" Type="System.ServiceModel.OperationContext" />
      </Parameters>
      <Docs>
        <param name="operationContext"><span data-ttu-id="74562-150">현재 권한 부여 요청에 대한 <see cref="T:System.ServiceModel.OperationContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="74562-150">The <see cref="T:System.ServiceModel.OperationContext" /> for the current authorization request.</span></span></param>
        <summary><span data-ttu-id="74562-151">기본 정책 평가에 따라 해당 작업 컨텍스트에 대한 권한 부여를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="74562-151">Checks authorization for the given operation context based on default policy evaluation.</span></span></summary>
        <returns><span data-ttu-id="74562-152">액세스 권한이 부여되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="74562-152"><see langword="true" /> if access is granted; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="74562-153">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="74562-153">The default is <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74562-154"><xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A>는 일반적으로 기본 정책 평가의 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="74562-154"><xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A> is generally the result from the default policy evaluation.</span></span>  
  
 <span data-ttu-id="74562-155">사용자 지정 권한 부여를 결정하려면 이 메서드를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="74562-155">Override this method to provide custom authorization decisions.</span></span>  
  
 <span data-ttu-id="74562-156">이 메서드는 들어오는 토큰을 기준으로 유추되거나 외부 권한 부여 정책을 통해 추가된 클레임 집합을 근거로 하여 권한 부여를 결정할 때 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="74562-156">This method can be used to make authorization decisions based on claim sets that are inferred based on incoming tokens, or added through external authorization policies.</span></span> <span data-ttu-id="74562-157">뿐만 아니라 들어오는 메시지의 속성(예: 동작 헤더)에 따라 권한 부여 여부를 결정할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="74562-157">It can also make authorization decisions based on properties of the incoming message: for example, the action header.</span></span>  
  
 <span data-ttu-id="74562-158">이 메서드에서 애플리케이션은 `operationContext` 매개 변수를 사용하여 호출자 ID(<xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A>)에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="74562-158">In this method, the application can use the `operationContext` parameter to access the caller identity (<xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A>).</span></span> <span data-ttu-id="74562-159">애플리케이션은 <xref:System.ServiceModel.Channels.RequestContext> 속성으로부터 <xref:System.ServiceModel.OperationContext.RequestContext%2A> 개체를 반환함으로써 전체 요청 메시지(<xref:System.ServiceModel.Channels.RequestContext.RequestMessage%2A>)에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="74562-159">By returning the <xref:System.ServiceModel.Channels.RequestContext> object from the <xref:System.ServiceModel.OperationContext.RequestContext%2A> property, the application can access the entire request message (<xref:System.ServiceModel.Channels.RequestContext.RequestMessage%2A>).</span></span> <span data-ttu-id="74562-160">애플리케이션은 <xref:System.ServiceModel.Channels.MessageHeaders> 속성으로부터 <xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A> 개체를 반환함으로써 서비스 URL(<xref:System.ServiceModel.Channels.MessageHeaders.To%2A>)과 작업(<xref:System.ServiceModel.Channels.MessageHeaders.Action%2A>)에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="74562-160">By returning the <xref:System.ServiceModel.Channels.MessageHeaders> object from the <xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A> property, the application can access the service URL (<xref:System.ServiceModel.Channels.MessageHeaders.To%2A>) and the operation (<xref:System.ServiceModel.Channels.MessageHeaders.Action%2A>).</span></span> <span data-ttu-id="74562-161">애플리케이션은 이 정보를 사용하여 적합한 권한 부여 결정을 내릴 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="74562-161">With this information, the application can perform the authorization decision accordingly.</span></span>  
  
 <span data-ttu-id="74562-162">사용자의 클레임은 <xref:System.IdentityModel.Claims.ClaimSet>의 <xref:System.IdentityModel.Policy.AuthorizationContext.ClaimSets%2A> 속성에 의해 반환되는 `AuthorizationContext`에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="74562-162">The claims made by a user are found in the <xref:System.IdentityModel.Claims.ClaimSet> returned by the <xref:System.IdentityModel.Policy.AuthorizationContext.ClaimSets%2A> property of the `AuthorizationContext`.</span></span> <span data-ttu-id="74562-163">현재 `AuthorizationContext`는 <xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A> 클래스의 <xref:System.ServiceModel.OperationContext> 속성에 의해 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="74562-163">The current `AuthorizationContext` is returned by the <xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A> property of the <xref:System.ServiceModel.OperationContext> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74562-164">다음 예제에서는 <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> 메서드의 재정의를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="74562-164">The following example shows an override of the <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> method.</span></span>  
  
 [!code-csharp[c_CustomAuthMgr#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customauthmgr/cs/c_customauthmgr.cs#6)]
 [!code-vb[c_CustomAuthMgr#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_customauthmgr/vb/c_customauthmgr.vb#6)]  
  
 <span data-ttu-id="74562-165">다른 예제를 보려면 [방법: 서비스에 대 한 사용자 지정 권한 부여 관리자 만들기](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-manager-for-a-service.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="74562-165">For another example, see [How to: Create a Custom Authorization Manager for a Service](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-manager-for-a-service.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAuthorizationPolicies">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt; GetAuthorizationPolicies (System.ServiceModel.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Policy.IAuthorizationPolicy&gt; GetAuthorizationPolicies(class System.ServiceModel.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceAuthorizationManager.GetAuthorizationPolicies(System.ServiceModel.OperationContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ GetAuthorizationPolicies(System::ServiceModel::OperationContext ^ operationContext);" />
      <MemberSignature Language="F#" Value="abstract member GetAuthorizationPolicies : System.ServiceModel.OperationContext -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;&#xA;override this.GetAuthorizationPolicies : System.ServiceModel.OperationContext -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;" Usage="serviceAuthorizationManager.GetAuthorizationPolicies operationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationContext" Type="System.ServiceModel.OperationContext" />
      </Parameters>
      <Docs>
        <param name="operationContext"><span data-ttu-id="74562-166">현재 권한 부여 요청의 <see cref="T:System.ServiceModel.OperationContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="74562-166">The <see cref="T:System.ServiceModel.OperationContext" /> of the current authorization request.</span></span></param>
        <summary><span data-ttu-id="74562-167">정책 평가에 참여하는 정책 집합을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="74562-167">Gets the set of policies that participate in policy evaluation.</span></span></summary>
        <returns><span data-ttu-id="74562-168"><see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 형식의 <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />입니다.</span><span class="sxs-lookup"><span data-stu-id="74562-168">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74562-169">Windows Communication Foundation (WCF) 구현에는 권한 부여 정책의 기본 집합을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="74562-169">The Windows Communication Foundation (WCF) implementation provides a default set of authorization policies.</span></span> <span data-ttu-id="74562-170">이러한 정책에는 요청자의 자격 증명이 포함된 기본 토큰뿐만 아니라 지정된 경우 모든 지원 토큰, 전송 토큰, 외부 정책 등이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="74562-170">These include the primary token that contains the credentials of the requester and all supporting tokens, transport tokens, and external policies if specified.</span></span>  
  
 <span data-ttu-id="74562-171">이 구현을 재정의하고 다른 정책 집합을 제공할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="74562-171">You can override this implementation and provide a different set of policies.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>