<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ServiceAuthorizationManager.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a8c7e5d1cb9b8edbf884c99c3ef030fa57b58c5b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a8c7e5d1cb9b8edbf884c99c3ef030fa57b58c5b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>Provides authorization access checking for service operations.</source>
          <target state="translated">서비스 작업에 대한 인증 액세스 검사를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>This class is responsible for evaluating all policies (rules that define what a user is allowed to do), comparing the policies to claims made by a client, setting the resulting <ph id="ph1">&lt;xref:System.IdentityModel.Policy.AuthorizationContext&gt;</ph> to the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceSecurityContext&gt;</ph>, and providing the authorization decision whether to allow or deny access for a given service operation for a caller.</source>
          <target state="translated">이 클래스는 모든 정책(사용자에게 허용되는 작업을 정의하는 규칙)을 평가하고, 정책을 클라이언트의 클레임과 비교하며, 그 결과로 나온 <ph id="ph1">&lt;xref:System.IdentityModel.Policy.AuthorizationContext&gt;</ph>를 <ph id="ph2">&lt;xref:System.ServiceModel.ServiceSecurityContext&gt;</ph>로 설정하고, 특정 서비스 작업에 대한 호출자의 액세스를 허용하거나 거부하여 권한 부여를 결정합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> method is called by the <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> infrastructure each time an attempt to access a resource is made.</source>
          <target state="translated">리소스에 대한 액세스 시도가 있을 때마다 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> 인프라에서 <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>The method returns <ph id="ph1">`true`</ph> or <ph id="ph2">`false`</ph> to allow or deny access, respectively.</source>
          <target state="translated">이 메서드는 <ph id="ph1">`true`</ph>를 반환하여 액세스를 허용하거나 <ph id="ph2">`false`</ph>를 반환하여 액세스를 거부합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager&gt;</ph> is part of the <ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph><bpt id="p1">*</bpt>Identity Model<ept id="p1">*</ept> infrastructure.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager&gt;</ph> 의 일부는 <ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> <bpt id="p1">*</bpt>Id 모델<ept id="p1">*</ept> 인프라입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>The Identity Model enables you to create custom authorization policies and custom authorization schemes.</source>
          <target state="translated">ID 모델을 통해 사용자 지정 권한 부여 정책 및 사용자 지정 권한 부여 체계를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> how the Identity Model works, see <bpt id="p1">[</bpt>Managing Claims and Authorization with the Identity Model<ept id="p1">](~/docs/framework/wcf/feature-details/managing-claims-and-authorization-with-the-identity-model.md)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> Id 모델 작동 방법 참조 <bpt id="p1">[</bpt>관리 클레임 및 권한 부여 Id 모델<ept id="p1">](~/docs/framework/wcf/feature-details/managing-claims-and-authorization-with-the-identity-model.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>Custom Authorization</source>
          <target state="translated">사용자 지정 권한 부여</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>This class does not perform any authorization and allows users to access all service operations.</source>
          <target state="translated">이 클래스는 권한 부여를 수행하지 않으며 사용자가 모든 서비스 작업에 액세스하도록 허용합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>To provide more restrictive authorization, you must create a custom authorization manager that checks custom policies.</source>
          <target state="translated">더 제한적으로 권한을 부여하려면 사용자 지정 정책을 확인하는 사용자 지정 권한 부여 관리자를 만들어야 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>To do this, inherit from this class and override the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> method.</source>
          <target state="translated">이렇게 하려면 이 클래스로부터 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> 메서드를 상속하여 재정의합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>Specify the instance of the derived class through the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationManager%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationManager%2A&gt;</ph> 속성을 통해 이 파생 클래스의 인스턴스를 지정합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>In <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph>, the application can use the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> object to access the caller identity (<ph id="ph3">&lt;xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A&gt;</ph>).</source>
          <target state="translated">응용 프로그램은 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph>에서 <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> 개체를 사용하여 호출자 ID(<ph id="ph3">&lt;xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A&gt;</ph>)에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>By getting the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A&gt;</ph> property, which returns a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageHeaders&gt;</ph> object, the application can access the service (<ph id="ph3">&lt;xref:System.ServiceModel.Channels.MessageHeaders.To%2A&gt;</ph>), and the operation (<ph id="ph4">&lt;xref:System.ServiceModel.Channels.MessageHeaders.Action%2A&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A&gt;</ph> 개체를 반환하는 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageHeaders&gt;</ph> 속성을 가져옴으로써 응용 프로그램은 서비스(<ph id="ph3">&lt;xref:System.ServiceModel.Channels.MessageHeaders.To%2A&gt;</ph>)와 작업(<ph id="ph4">&lt;xref:System.ServiceModel.Channels.MessageHeaders.Action%2A&gt;</ph>)에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>By getting the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.RequestContext%2A&gt;</ph> property, which returns a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> object, the application can access the entire request message (<ph id="ph3">&lt;xref:System.ServiceModel.Channels.RequestContext.RequestMessage%2A&gt;</ph>) and perform the authorization decision accordingly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.RequestContext%2A&gt;</ph> 개체를 반환하는 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> 속성을 가져옴으로써 응용 프로그램은 전체 요청 메시지(<ph id="ph3">&lt;xref:System.ServiceModel.Channels.RequestContext.RequestMessage%2A&gt;</ph>)에 액세스하고 그에 따라 권한 부여 결정을 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Create a Custom Authorization Manager for a Service<ept id="p1">](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-manager-for-a-service.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 서비스에 대 한 사용자 지정 권한 부여 관리자 만들기<ept id="p1">](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-manager-for-a-service.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>To create custom authorization policies, implement the <ph id="ph1">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ph> class.</source>
          <target state="translated">사용자 지정 권한 부여 정책을 만들려면 <ph id="ph1">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ph> 클래스를 구현합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Create a Custom Authorization Policy<ept id="p1">](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-policy.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 사용자 지정 권한 부여 정책 만들기<ept id="p1">](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-policy.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>To create a custom claim, use the <ph id="ph1">&lt;xref:System.IdentityModel.Claims.Claim&gt;</ph> class.</source>
          <target state="translated">사용자 지정 클레임을 만들려면 <ph id="ph1">&lt;xref:System.IdentityModel.Claims.Claim&gt;</ph> 클래스를 사용합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Create a Custom Claim<ept id="p1">](~/docs/framework/wcf/extending/how-to-create-a-custom-claim.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 사용자 지정 클레임 만들기<ept id="p1">](~/docs/framework/wcf/extending/how-to-create-a-custom-claim.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>To compare custom claims, you must compare claims, as shown in <bpt id="p1">[</bpt>How to: Compare Claims<ept id="p1">](~/docs/framework/wcf/extending/how-to-compare-claims.md)</ept>.</source>
          <target state="translated">사용자 지정 클레임을 비교 하려면 비교 해야에 표시 된 대로 클레임을 <bpt id="p1">[</bpt>하는 방법: 클레임 비교<ept id="p1">](~/docs/framework/wcf/extending/how-to-compare-claims.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Custom Authorization<ept id="p1">](~/docs/framework/wcf/extending/custom-authorization.md)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>사용자 지정 권한 부여<ept id="p1">](~/docs/framework/wcf/extending/custom-authorization.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>You can set the type of a custom authorization manager using the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>serviceAuthorization<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/serviceauthorization-element.md)</ept> in a client application configuration file.</source>
          <target state="translated">사용 하 여 사용자 지정 권한 부여 관리자의 형식을 설정할 수 있습니다는 <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>serviceAuthorization<ph id="ph2">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/serviceauthorization-element.md)</ept> 클라이언트 응용 프로그램 구성 파일에 있습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>The following example shows a class named <ph id="ph1">`MyServiceAuthorizationManager`</ph> that inherits from the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceAuthorizationManager&gt;</ph> and overrides the <ph id="ph3">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`MyServiceAuthorizationManager`</ph>로부터 상속되었으며 <ph id="ph2">&lt;xref:System.ServiceModel.ServiceAuthorizationManager&gt;</ph> 메서드를 재정의하는 <ph id="ph3">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph>라는 클래스를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceAuthorizationManager" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceAuthorizationManager" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>Checks authorization for the given operation context and optional message.</source>
          <target state="translated">특정 작업 컨텍스트 및 선택적 메시지에 대한 권한 부여를 확인합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext)">
          <source>Checks authorization for the given operation context.</source>
          <target state="translated">특정 작업 컨텍스트에 대한 권한 부여를 확인합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access is granted; otherwise; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">액세스 권한이 부여되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext)">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext)">
          <source>In general, applications should override <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> instead of this method.</source>
          <target state="translated">일반적으로 응용 프로그램은 이 메서드 대신 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph>를 재정의합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext)">
          <source>Override <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccess%2A&gt;</ph> if the application associates or introduces a different set of policies for the resulting <ph id="ph2">&lt;xref:System.ServiceModel.ServiceSecurityContext&gt;</ph> or provide a different policy evaluation (chaining) model.</source>
          <target state="translated">응용 프로그램에서 결과 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccess%2A&gt;</ph>에 대해 다른 정책 집합을 연결하거나 도입할 경우 또는 다른 정책 평가(체인) 모델을 제공할 경우 <ph id="ph2">&lt;xref:System.ServiceModel.ServiceSecurityContext&gt;</ph>를 재정의합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext)">
          <source>This method is responsible for calling <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph>.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph>를 호출합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext)">
          <source>The following code shows how to override this method to enforce custom access control requirements.</source>
          <target state="translated">다음 코드에서는 이 메서드를 재정의하여 사용자 지정 액세스 제어 요구 사항을 적용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> to be examined to determine authorization.</source>
          <target state="translated">권한 부여를 확인하기 위해 검사할 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)">
          <source>Checks authorization for the given operation context when access to a message is required.</source>
          <target state="translated">메시지에 액세스해야 할 때 특정 작업 컨텍스트에 대한 권한 부여를 확인합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access is granted; otherwise; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">액세스 권한이 부여되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)">
          <source>In general, applications should override <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> instead of this method, which should only be used if the authorization decision depends on the message body.</source>
          <target state="translated">일반적으로 응용 프로그램은 이 메서드 대신 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph>를 재정의합니다. 이 메서드는 메시지 본문에 따라 권한 부여 결정이 달라지는 경우에만 사용합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)">
          <source>Because of performance issues, if possible you should redesign your application so that the authorization decision does not require access to the message body.</source>
          <target state="translated">성능 문제 때문에 가능하다면 권한 부여 결정 시 메시지 본문에 액세스하지 않아도 되도록 응용 프로그램을 다시 디자인해야 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)">
          <source>Override this method if the application associates or introduces a different set of policies for the resulting <ph id="ph1">&lt;xref:System.ServiceModel.ServiceSecurityContext&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> or provide a different policy evaluation (chaining) model.</source>
          <target state="translated">응용 프로그램에서 결과 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceSecurityContext&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph>에 대해 다른 정책 집합을 연결하거나 도입할 경우 또는 다른 정책 평가(체인) 모델을 제공할 경우 이 메서드를 재정의합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)">
          <source>This method is responsible for calling <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph>.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph>를 호출합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)">
          <source>The following code shows how to override this method to enforce custom access control requirements that require access to the message body.</source>
          <target state="translated">다음 코드에서는 메시지 본문 액세스가 필요한 사용자 지정 액세스 제어 요구 사항을 적용하기 위해 이 메서드를 재정의하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> for the current authorization request.</source>
          <target state="translated">현재 권한 부여 요청에 대한 <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>Checks authorization for the given operation context based on default policy evaluation.</source>
          <target state="translated">기본 정책 평가에 따라 해당 작업 컨텍스트에 대한 권한 부여를 확인합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access is granted; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">액세스 권한이 부여되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A&gt;</ph> is generally the result from the default policy evaluation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A&gt;</ph>는 일반적으로 기본 정책 평가의 결과입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>Override this method to provide custom authorization decisions.</source>
          <target state="translated">사용자 지정 권한 부여를 결정하려면 이 메서드를 재정의합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>This method can be used to make authorization decisions based on claim sets that are inferred based on incoming tokens, or added through external authorization policies.</source>
          <target state="translated">이 메서드는 들어오는 토큰을 기준으로 유추되거나 외부 권한 부여 정책을 통해 추가된 클레임 집합을 근거로 하여 권한 부여를 결정할 때 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>It can also make authorization decisions based on properties of the incoming message: for example, the action header.</source>
          <target state="translated">뿐만 아니라 들어오는 메시지의 속성(예: 동작 헤더)에 따라 권한 부여 여부를 결정할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>In this method, the application can use the <ph id="ph1">`operationContext`</ph> parameter to access the caller identity (<ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A&gt;</ph>).</source>
          <target state="translated">이 메서드에서 응용 프로그램은 <ph id="ph1">`operationContext`</ph> 매개 변수를 사용하여 호출자 ID(<ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A&gt;</ph>)에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>By returning the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> object from the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.RequestContext%2A&gt;</ph> property, the application can access the entire request message (<ph id="ph3">&lt;xref:System.ServiceModel.Channels.RequestContext.RequestMessage%2A&gt;</ph>).</source>
          <target state="translated">응용 프로그램은 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> 속성으로부터 <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.RequestContext%2A&gt;</ph> 개체를 반환함으로써 전체 요청 메시지(<ph id="ph3">&lt;xref:System.ServiceModel.Channels.RequestContext.RequestMessage%2A&gt;</ph>)에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>By returning the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageHeaders&gt;</ph> object from the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A&gt;</ph> property, the application can access the service URL (<ph id="ph3">&lt;xref:System.ServiceModel.Channels.MessageHeaders.To%2A&gt;</ph>) and the operation (<ph id="ph4">&lt;xref:System.ServiceModel.Channels.MessageHeaders.Action%2A&gt;</ph>).</source>
          <target state="translated">응용 프로그램은 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageHeaders&gt;</ph> 속성으로부터 <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A&gt;</ph> 개체를 반환함으로써 서비스 URL(<ph id="ph3">&lt;xref:System.ServiceModel.Channels.MessageHeaders.To%2A&gt;</ph>)과 작업(<ph id="ph4">&lt;xref:System.ServiceModel.Channels.MessageHeaders.Action%2A&gt;</ph>)에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>With this information, the application can perform the authorization decision accordingly.</source>
          <target state="translated">응용 프로그램은 이 정보를 사용하여 적합한 권한 부여 결정을 내릴 수 있습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>The claims made by a user are found in the <ph id="ph1">&lt;xref:System.IdentityModel.Claims.ClaimSet&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.IdentityModel.Policy.AuthorizationContext.ClaimSets%2A&gt;</ph> property of the <ph id="ph3">`AuthorizationContext`</ph>.</source>
          <target state="translated">사용자의 클레임은 <ph id="ph1">&lt;xref:System.IdentityModel.Claims.ClaimSet&gt;</ph>의 <ph id="ph2">&lt;xref:System.IdentityModel.Policy.AuthorizationContext.ClaimSets%2A&gt;</ph> 속성에 의해 반환되는 <ph id="ph3">`AuthorizationContext`</ph>에 있습니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>The current <ph id="ph1">`AuthorizationContext`</ph> is returned by the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> class.</source>
          <target state="translated">현재 <ph id="ph1">`AuthorizationContext`</ph>는 <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A&gt;</ph> 클래스의 <ph id="ph3">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> 속성에 의해 반환됩니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>The following example shows an override of the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> 메서드의 재정의를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>For another example, see <bpt id="p1">[</bpt>How to: Create a Custom Authorization Manager for a Service<ept id="p1">](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-manager-for-a-service.md)</ept>.</source>
          <target state="translated">또 다른 예에 대 한 참조 <bpt id="p1">[</bpt>하는 방법: 서비스에 대 한 사용자 지정 권한 부여 관리자 만들기<ept id="p1">](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-manager-for-a-service.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.GetAuthorizationPolicies(System.ServiceModel.OperationContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> of the current authorization request.</source>
          <target state="translated">현재 권한 부여 요청의 <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.GetAuthorizationPolicies(System.ServiceModel.OperationContext)">
          <source>Gets the set of policies that participate in policy evaluation.</source>
          <target state="translated">정책 평가에 참여하는 정책 집합을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.GetAuthorizationPolicies(System.ServiceModel.OperationContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> 형식의 <ph id="ph2">&lt;see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.GetAuthorizationPolicies(System.ServiceModel.OperationContext)">
          <source>The <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> implementation provides a default set of authorization policies.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> 구현에서는 기본 권한 부여 정책 집합을 제공합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.GetAuthorizationPolicies(System.ServiceModel.OperationContext)">
          <source>These include the primary token that contains the credentials of the requester and all supporting tokens, transport tokens, and external policies if specified.</source>
          <target state="translated">이러한 정책에는 요청자의 자격 증명이 포함된 기본 토큰뿐만 아니라 지정된 경우 모든 지원 토큰, 전송 토큰, 외부 정책 등이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.GetAuthorizationPolicies(System.ServiceModel.OperationContext)">
          <source>You can override this implementation and provide a different set of policies.</source>
          <target state="translated">이 구현을 재정의하고 다른 정책 집합을 제공할 수 있습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>