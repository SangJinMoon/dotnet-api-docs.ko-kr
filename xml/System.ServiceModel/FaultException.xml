<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="FaultException.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9575d09f-9d72-4690-889e-b83c405ca456df08aa895f0b7243c868ebe744eeabf12dc4feb6.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df08aa895f0b7243c868ebe744eeabf12dc4feb6</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">254e16ae65e82f4aa59360cd8572b36b6b5b2f80</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/05/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.FaultException">
          <source>Represents a SOAP fault.</source>
          <target state="translated">SOAP 오류를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultException">
          <source>In a service, use the <ph id="ph1">&lt;xref:System.ServiceModel.FaultException&gt;</ph> class to create an untyped fault to return to the client for debugging purposes.</source>
          <target state="translated">서비스에서는 <ph id="ph1">&lt;xref:System.ServiceModel.FaultException&gt;</ph> 클래스를 사용하여 형식화되지 않은 오류를 만들어 디버깅 목적으로 클라이언트에 반환합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultException">
          <source>In a client, catch <ph id="ph1">&lt;xref:System.ServiceModel.FaultException&gt;</ph> objects to handle unknown or generic faults, such as those returned by a service with the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A&gt;</ph> property set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">클라이언트에서는 <ph id="ph1">&lt;xref:System.ServiceModel.FaultException&gt;</ph> 개체를 catch하여 <ph id="ph2">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A&gt;</ph> 속성이 <ph id="ph3">`true`</ph>로 설정된 서비스에서 반환하는 오류 같은 알 수 없는 오류나 제네릭 오류를 처리합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultException">
          <source>Because <ph id="ph1">&lt;xref:System.ServiceModel.FaultException&gt;</ph> extends <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph>, remember to catch any <ph id="ph3">&lt;xref:System.ServiceModel.FaultException&gt;</ph> objects prior to catching <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph> objects if you want to catch them separately.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.FaultException&gt;</ph>이 <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph>을 확장하므로 둘을 별도로 catch하려면 <ph id="ph3">&lt;xref:System.ServiceModel.FaultException&gt;</ph> 개체를 먼저 catch한 후에 <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph> 개체를 catch해야 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultException">
          <source>Duplex services can also catch <ph id="ph1">&lt;xref:System.ServiceModel.FaultException&gt;</ph> objects returned from their interaction with a duplex client.</source>
          <target state="translated">이중 서비스는 양방향 클라이언트와 상호 작용하여 반환된 <ph id="ph1">&lt;xref:System.ServiceModel.FaultException&gt;</ph> 개체도 catch할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultException">
          <source>In general, it is strongly recommended that you use the <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> to design your services to return strongly-typed SOAP faults (and not managed exception objects) for all fault cases in which you decide the client requires fault information.</source>
          <target state="translated">일반적으로 클라이언트에서 오류 정보가 필요할지 결정해야 하는 모든 오류의 경우에 대해 강력한 형식의 SOAP 오류 및 관리되지 않는 예외 개체를 반환하려면 <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph>를 사용하여 서비스를 디자인하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultException">
          <source>However, use the <ph id="ph1">&lt;xref:System.ServiceModel.FaultException&gt;</ph> in the following situations:</source>
          <target state="translated">그러나 다음과 같은 경우에는 <ph id="ph1">&lt;xref:System.ServiceModel.FaultException&gt;</ph>을 사용합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultException">
          <source>To send SOAP faults from a service for debugging purposes.</source>
          <target state="translated">디버깅 목적으로 서비스에서 SOAP 오류를 보내려는 경우</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultException">
          <source>To catch SOAP faults on a client when the faults are not part of the service contract.</source>
          <target state="translated">오류가 서비스 계약의 일부가 아닌 경우에 클라이언트에서 SOAP 오류를 catch하려는 경우</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultException">
          <source>Throw <ph id="ph1">&lt;xref:System.ServiceModel.FaultException&gt;</ph> objects when you want the string to be passed to the constructor and retrieved by the client by calling the <ph id="ph2">&lt;xref:System.ServiceModel.FaultException%601.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.FaultException&gt;</ph> 메서드를 호출하여 문자열을 생성자에 전달하고 클라이언트에서 가져오려면 <ph id="ph2">&lt;xref:System.ServiceModel.FaultException%601.ToString%2A?displayProperty=nameWithType&gt;</ph> 개체를 throw합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultException">
          <source>If you specify a fault contract of type <ph id="ph1">&lt;xref:System.ServiceModel.FaultException%601?displayProperty=nameWithType&gt;</ph> where the type parameter is <ph id="ph2">&lt;xref:System.String?displayProperty=nameWithType&gt;</ph>, the string value is available as the <ph id="ph3">&lt;xref:System.ServiceModel.FaultException%601.Detail%2A?displayProperty=nameWithType&gt;</ph> property and not by calling <ph id="ph4">&lt;xref:System.ServiceModel.FaultException%601.ToString%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">형식 매개 변수가 <ph id="ph1">&lt;xref:System.ServiceModel.FaultException%601?displayProperty=nameWithType&gt;</ph>인 <ph id="ph2">&lt;xref:System.String?displayProperty=nameWithType&gt;</ph> 형식의 오류 계약을 지정하면 <ph id="ph3">&lt;xref:System.ServiceModel.FaultException%601.Detail%2A?displayProperty=nameWithType&gt;</ph>을 호출하지 않고도 문자열 값을 <ph id="ph4">&lt;xref:System.ServiceModel.FaultException%601.ToString%2A?displayProperty=nameWithType&gt;</ph> 속성으로 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultException">
          <source>For details, see <bpt id="p1">[</bpt>Specifying and Handling Faults in Contracts and Services<ept id="p1">](~/docs/framework/wcf/specifying-and-handling-faults-in-contracts-and-services.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>지정 및 계약 및 서비스에서 처리 오류<ept id="p1">](~/docs/framework/wcf/specifying-and-handling-faults-in-contracts-and-services.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultException">
          <source>The following code example shows the use of a try/catch block to catch and handle <ph id="ph1">&lt;xref:System.ServiceModel.FaultException&gt;</ph> objects thrown from a service.</source>
          <target state="translated">다음 코드 예제에서는 서비스에서 throw한 <ph id="ph1">&lt;xref:System.ServiceModel.FaultException&gt;</ph> 개체를 catch하고 처리하기 위해 try/catch 블록을 사용하는 방법에 대해 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultException">
          <source>This often occurs when debugging is turned on in the service application.</source>
          <target state="translated">서비스 응용 프로그램에 디버깅이 설정된 경우 자주 발생합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.FaultException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.Channels.MessageFault)">
          <source>The message fault that contains the default SOAP fault values.</source>
          <target state="translated">기본 SOAP 오류 값이 포함된 메시지 오류입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.Channels.MessageFault)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> class using the specified message fault values.</source>
          <target state="translated">지정된 메시지 오류 값을 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason)">
          <source>The reason for the SOAP fault.</source>
          <target state="translated">SOAP 오류의 원인입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> class using the specified reason.</source>
          <target state="translated">지정된 원인을 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The serialization information necessary to reconstruct the <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> object from a stream.</source>
          <target state="translated">스트림에서 <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> 개체를 다시 생성할 때 필요한 serialization 정보입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The streaming context required to reconstruct the <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> 개체를 다시 생성하는 데 필요한 스트리밍 컨텍스트입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> class using the specified serialization information and context when deserializing a stream into a <ph id="ph2">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> object.</source>
          <target state="translated">스트림을 <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> 개체로 deserialize할 때 지정된 serialization 정보와 컨텍스트를 사용하여 <ph id="ph2">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.Channels.MessageFault,System.String)">
          <source>The message fault that contains the default SOAP fault values to use.</source>
          <target state="translated">사용할 기본 SOAP 오류 값이 포함된 메시지 오류입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.Channels.MessageFault,System.String)">
          <source>The action of the SOAP fault.</source>
          <target state="translated">SOAP 오류의 동작입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.Channels.MessageFault,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> class using the specified message fault values and the provided action string.</source>
          <target state="translated">지정된 메시지 오류 값과 제공된 동작 문자열을 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason,System.ServiceModel.FaultCode)">
          <source>The reason for the SOAP fault.</source>
          <target state="translated">SOAP 오류의 원인입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason,System.ServiceModel.FaultCode)">
          <source>The fault code for the SOAP fault.</source>
          <target state="translated">SOAP 오류의 오류 코드입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason,System.ServiceModel.FaultCode)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> class using the specified reason and fault code.</source>
          <target state="translated">지정된 원인과 오류 코드를 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> class with the specified fault reason.</source>
          <target state="translated">지정된 오류 원인을 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
          <source>The reason for the SOAP fault.</source>
          <target state="translated">SOAP 오류의 원인입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
          <source>The fault code for the SOAP fault.</source>
          <target state="translated">SOAP 오류의 오류 코드입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
          <source>The action value for the SOAP fault.</source>
          <target state="translated">SOAP 오류의 동작 값입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> class using the specified reason, fault code, and action value.</source>
          <target state="translated">지정된 원인, 오류 코드 및 동작 값을 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException.#ctor(System.String,System.ServiceModel.FaultCode,System.String)">
          <source>The reason for the SOAP fault.</source>
          <target state="translated">SOAP 오류의 원인입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException.#ctor(System.String,System.ServiceModel.FaultCode,System.String)">
          <source>The fault code for the SOAP fault.</source>
          <target state="translated">SOAP 오류의 오류 코드입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException.#ctor(System.String,System.ServiceModel.FaultCode,System.String)">
          <source>The action value for the SOAP fault.</source>
          <target state="translated">SOAP 오류의 동작 값입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException.#ctor(System.String,System.ServiceModel.FaultCode,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> class using the specified reason, fault code, and action value.</source>
          <target state="translated">지정된 원인, 오류 코드 및 동작 값을 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException.#ctor(System.String,System.ServiceModel.FaultCode)">
          <source>The SOAP fault code for the fault.</source>
          <target state="translated">오류에 대한 SOAP 오류 코드입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException.#ctor(System.String,System.ServiceModel.FaultCode)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> class using the specified reason and SOAP fault code.</source>
          <target state="translated">지정된 원인과 SOAP 오류 코드를 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.FaultException.Action">
          <source>Gets the value of the SOAP action for the fault message.</source>
          <target state="translated">오류 메시지의 SOAP 동작 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultException.Action">
          <source>The value of the SOAP action for the fault message.</source>
          <target state="translated">오류 메시지의 SOAP 동작 값입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.FaultException.Code">
          <source>Gets the fault code for the SOAP fault.</source>
          <target state="translated">SOAP 오류에 대한 오류 코드를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultException.Code">
          <source>The fault code for the SOAP fault.</source>
          <target state="translated">SOAP 오류의 오류 코드입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.FaultException">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.Type[])">
          <source>The message fault that contains default SOAP fault information.</source>
          <target state="translated">기본 SOAP 오류 정보가 포함된 메시지 오류입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.Type[])">
          <source>An array of types that contains fault details.</source>
          <target state="translated">오류 정보가 포함된 형식의 배열입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.Type[])">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> object from the specified message fault and an array of detail types.</source>
          <target state="translated">지정된 메시지 오류 및 세부 형식의 배열에서 <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.Type[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> object that you can throw to indicate that a SOAP fault message was received.</source>
          <target state="translated">SOAP 오류 메시지를 받았음을 나타내기 위해 throw할 수 있는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.Type[])">
          <source>The <ph id="ph1">`faultDetailTypes`</ph> parameter contains candidate detail types.</source>
          <target state="translated"><ph id="ph1">`faultDetailTypes`</ph> 매개 변수에는 후보 세부 형식이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.Type[])">
          <source>If any of the <ph id="ph1">`faultDetailTypes`</ph> has a schema that matches the <ph id="ph2">`messageFault`</ph> parameter, a <ph id="ph3">&lt;xref:System.ServiceModel.FaultException%601?displayProperty=nameWithType&gt;</ph> is returned where the type parameter is the matching candidate type.</source>
          <target state="translated"><ph id="ph1">`faultDetailTypes`</ph>에 <ph id="ph2">`messageFault`</ph> 매개 변수와 일치하는 스키마가 있으면 <ph id="ph3">&lt;xref:System.ServiceModel.FaultException%601?displayProperty=nameWithType&gt;</ph>이 반환됩니다. 여기서 형식 매개 변수는 일치하는 후보 형식입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.String,System.Type[])">
          <source>The message fault that contains default SOAP fault information.</source>
          <target state="translated">기본 SOAP 오류 정보가 포함된 메시지 오류입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.String,System.Type[])">
          <source>The fault action value.</source>
          <target state="translated">오류 동작 값입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.String,System.Type[])">
          <source>An array of types that contains fault details.</source>
          <target state="translated">오류 정보가 포함된 형식의 배열입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.String,System.Type[])">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> object from the specified message fault, action and an array of detail types.</source>
          <target state="translated">지정된 메시지 오류, 동작 및 세부 형식의 배열에서 <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.String,System.Type[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> object that you can throw to indicate that a SOAP fault message was received.</source>
          <target state="translated">SOAP 오류 메시지를 받았음을 나타내기 위해 throw할 수 있는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.String,System.Type[])">
          <source>The <ph id="ph1">`faultDetailTypes`</ph> parameter contains candidate detail types.</source>
          <target state="translated"><ph id="ph1">`faultDetailTypes`</ph> 매개 변수에는 후보 세부 형식이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.String,System.Type[])">
          <source>If any of the <ph id="ph1">`faultDetailTypes`</ph> has a schema that matches the <ph id="ph2">`messageFault`</ph> parameter, a <ph id="ph3">&lt;xref:System.ServiceModel.FaultException%601?displayProperty=nameWithType&gt;</ph> is returned where the type parameter is the matching candidate type.</source>
          <target state="translated"><ph id="ph1">`faultDetailTypes`</ph>에 <ph id="ph2">`messageFault`</ph> 매개 변수와 일치하는 스키마가 있으면 <ph id="ph3">&lt;xref:System.ServiceModel.FaultException%601?displayProperty=nameWithType&gt;</ph>이 반환됩니다. 여기서 형식 매개 변수는 일치하는 후보 형식입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException.CreateMessageFault">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageFault" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageFault" /&gt;</ph> 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException.CreateMessageFault">
          <source>The in-memory representation of a SOAP fault that can be passed to <ph id="ph1">&lt;see cref="Overload:System.ServiceModel.Channels.Message.CreateMessage" /&gt;</ph> to create a message that contains a fault.</source>
          <target state="translated">오류가 포함된 메시지를 만들기 위해 <ph id="ph1">&lt;see cref="Overload:System.ServiceModel.Channels.Message.CreateMessage" /&gt;</ph>로 전달할 수 있는 SOAP 오류의 메모리 내 표현입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException.CreateMessageFault">
          <source>For <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> objects that result from fault messages, this <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.MessageFault" /&gt;</ph> object is the fault that arrives.</source>
          <target state="translated">오류 메시지의 결과로 만들어지는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultException" /&gt;</ph> 개체의 경우 도착하는 오류는 이 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.MessageFault" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The serialization information to which the object data is added when serialized.</source>
          <target state="translated">serialize할 때 추가할 개체 데이터에 대한 serialization 정보입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The destination for the serialized object.</source>
          <target state="translated">serialize된 개체의 대상입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Implementation of the <ph id="ph1">&lt;see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /&gt;</ph> method that is called when the object is serialized into a stream.</source>
          <target state="translated">개체가 스트림으로 serialize될 때 호출되는 <ph id="ph1">&lt;see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /&gt;</ph> 메서드의 구현입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.FaultException.Message">
          <source>Gets the message for the exception.</source>
          <target state="translated">예외에 대한 메시지를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultException.Message">
          <source>The exception message.</source>
          <target state="translated">예외 메시지입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.FaultException.Reason">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultReason" /&gt;</ph> for the SOAP fault.</source>
          <target state="translated">SOAP 오류에 대한 <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultReason" /&gt;</ph>을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultException.Reason">
          <source>The reason for the SOAP fault.</source>
          <target state="translated">SOAP 오류의 원인입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>