<Type Name="ServiceHostBase" FullName="System.ServiceModel.ServiceHostBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7463a7f02d14fb4b0a7aec8c8bf5b70cdefb4452" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34317167" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ServiceHostBase : System.ServiceModel.Channels.CommunicationObject, IDisposable, System.ServiceModel.IExtensibleObject&lt;System.ServiceModel.ServiceHostBase&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ServiceHostBase extends System.ServiceModel.Channels.CommunicationObject implements class System.IDisposable, class System.ServiceModel.IExtensibleObject`1&lt;class System.ServiceModel.ServiceHostBase&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ServiceHostBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ServiceHostBase&#xA;Inherits CommunicationObject&#xA;Implements IDisposable, IExtensibleObject(Of ServiceHostBase)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceHostBase abstract : System::ServiceModel::Channels::CommunicationObject, IDisposable, System::ServiceModel::IExtensibleObject&lt;System::ServiceModel::ServiceHostBase ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.CommunicationObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.IExtensibleObject&lt;System.ServiceModel.ServiceHostBase&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <see cref="T:System.ServiceModel.ServiceHostBase" /> 클래스를 확장하여 사용자 지정 프로그래밍 모델을 노출하는 호스트를 구현합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용자 지정 프로그래밍 모델을 제공하는 호스트를 만들려면 <xref:System.ServiceModel.ServiceHostBase> 클래스를 사용합니다. 모델을 프로그래밍 하는 Windows Communication Foundation (WCF) 서비스는 <xref:System.ServiceModel.ServiceHost> 클래스입니다.  
  
 이 클래스에서 파생된 Managed C++ 사용자 관련 참고 사항:  
  
-   소멸자가 아니라 (On)(Begin)Close 및/또는 OnAbort에 정리 코드를 입력하십시오.  
  
-   소멸자를 사용하지 마십시오. 소멸자를 사용하면 컴파일러에서 <xref:System.IDisposable>을 자동으로 생성할 수 있습니다.  
  
-   비참조 멤버를 사용하지 마십시오. 비참조 멤버를 사용하면 컴파일러에서 <xref:System.IDisposable>을 자동으로 생성할 수 있습니다.  
  
-   종료자를 사용하지 마십시오. 그러나 종료자를 포함하는 경우 자동으로 생성되는 <xref:System.GC.SuppressFinalize%28System.Object%29> 동작을 에뮬레이트하기 위해 빌드 경고를 표시하지 않고 (On)(Begin)Close 및/또는 OnAbort에서 <xref:System.IDisposable> 및 해당 종료자를 호출해야 합니다.  
  
   
  
## Examples  
 이 샘플에서는 <xref:System.ServiceModel.ServiceHost>에서 파생된 <xref:System.ServiceModel.ServiceHostBase> 클래스를 사용합니다.  
  
 [!code-csharp[S_SelfHost#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_selfhost/cs/wholeenchilada.cs#1)]
 [!code-vb[S_SelfHost#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_selfhost/vb/wholeenchilada.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ServiceHostBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ServiceHostBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.ServiceModel.ServiceHostBase" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_SelfHost#30](~/samples/snippets/csharp/VS_Snippets_CFX/s_selfhost/cs/wholeenchilada.cs#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBaseAddress">
      <MemberSignature Language="C#" Value="protected void AddBaseAddress (Uri baseAddress);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AddBaseAddress(class System.Uri baseAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AddBaseAddress (baseAddress As Uri)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AddBaseAddress(Uri ^ baseAddress);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="baseAddress">현재 호스트에서 호스팅되는 서비스의 기본 주소를 포함하는 <see cref="T:System.Uri" />입니다.</param>
        <summary>서비스 호스트에 기본 주소를 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용하면 사용자가 <xref:System.ServiceModel.ServiceHostBase>를 확장할 경우 호스트가 생성된 후 기본 주소를 제공할 수 있습니다. <xref:System.ServiceModel.ServiceHostBase.AddBaseAddress%28System.Uri%29>를 사용하여 기존 호스트에 기본 주소를 추가할 수도 있지만, 이 경우 설명이 이미 초기화되었으면 예외가 throw됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="baseAddress" />를 호출할 수 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="AddDefaultEndpoints">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; AddDefaultEndpoints ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.ServiceModel.Description.ServiceEndpoint&gt; AddDefaultEndpoints() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.AddDefaultEndpoints" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddDefaultEndpoints () As ReadOnlyCollection(Of ServiceEndpoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ObjectModel::ReadOnlyCollection&lt;System::ServiceModel::Description::ServiceEndpoint ^&gt; ^ AddDefaultEndpoints();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>기본 바인딩을 사용하는 서비스 호스트에 있는 각 계약에서 모든 기본 주소에 대한 서비스 끝점을 추가합니다.</summary>
        <returns>기본 끝점의 읽기 전용 컬렉션입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddServiceEndpoint">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>서비스 끝점을 호스팅된 서비스에 추가합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public virtual void AddServiceEndpoint (System.ServiceModel.Description.ServiceEndpoint endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddServiceEndpoint(class System.ServiceModel.Description.ServiceEndpoint endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddServiceEndpoint (endpoint As ServiceEndpoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddServiceEndpoint(System::ServiceModel::Description::ServiceEndpoint ^ endpoint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="endpoint">서비스 끝점입니다.</param>
        <summary>지정된 서비스 끝점을 호스팅된 서비스에 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 메서드를 사용 하는 경우 서비스 호스트는 계약 설명에서 "-구성-이름별" 유효성 검사를 수행 합니다. 호스트 확인 즉, <xref:System.ServiceModel.Description.ContractDescription.ConfigurationName%2A> 서비스에서 구현 하는 서비스 계약의 구성 이름이 목록에 있습니다. 경우는 유효성 검사에 통과 되는 설명의 <xref:System.ServiceModel.Description.ServiceEndpoint> , 사용 되는 경우에는 <xref:System.ServiceModel.Description.ContractDescription> 에서 반영 서비스는 서로 다른 합니다.  
  
 예를 들어, ServiceEndpoint에 설명을 반영 서비스에서 계약 설명은 이름이 같고 서로 다른 작업 동작을 가정 합니다. "-구성-이름별" 유효성 검사만 알리지 동작 서 동일 하며 업데이트가 하나에 대 한 설명이 다른 설명으로 인해 유효성 된다는 점입니다.  
  
 `address`가 상대 URI인 경우 바인딩 프로토콜에 따라 <xref:System.ServiceModel.ServiceHost>의 기본 주소 중 하나가 끝점의 기본 주소로 사용됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="Endpoint" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.InvalidOperationException">호스트가 Created 또는 Opening 상태가 아니거나, 호스팅된 서비스에 대한 <see cref="T:System.ServiceModel.Description.ServiceDescription" />이 없는 경우</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="Address" />, <paramref name="Binding" /> 또는 <paramref name="Contract" /> 속성이 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (string implementedContract, System.ServiceModel.Channels.Binding binding, string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(string implementedContract, class System.ServiceModel.Channels.Binding binding, string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(System::String ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, System::String ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.String" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="implementedContract">끝점에서 구현하는 계약입니다.</param>
        <param name="binding">추가된 끝점에 대한 <see cref="T:System.ServiceModel.Channels.Binding" />입니다.</param>
        <param name="address">추가된 끝점에 대한 주소입니다. 절대 URI나 상대 URI일 수 있습니다. 상대 URI인 경우 바인딩 프로토콜에 따라 <see cref="T:System.ServiceModel.ServiceHost" />의 기본 주소 중 하나가 끝점의 기본 주소로 사용됩니다.</param>
        <summary>지정된 계약, 바인딩, 끝점 주소를 사용하여 서비스 끝점을 호스팅된 서비스에 추가합니다.</summary>
        <returns>호스팅된 서비스에 추가된 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_SelfHost#40](~/samples/snippets/csharp/VS_Snippets_CFX/s_selfhost/cs/wholeenchilada.cs#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="implementedContract" />, <paramref name="binding" /> 또는 <paramref name="address" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.InvalidOperationException">호스트가 <see cref="F:System.ServiceModel.CommunicationState.Created" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 상태가 아니거나, 호스팅된 서비스에 대한 <see cref="T:System.ServiceModel.Description.ServiceDescription" />이 없어 끝점을 추가할 수 없거나 바인딩에 바인딩 체계의 전송이 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (string implementedContract, System.ServiceModel.Channels.Binding binding, Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(string implementedContract, class System.ServiceModel.Channels.Binding binding, class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(System::String ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, Uri ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.String" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="implementedContract">끝점에서 구현하는 계약입니다.</param>
        <param name="binding">추가된 끝점에 대한 <see cref="T:System.ServiceModel.Channels.Binding" />입니다.</param>
        <param name="address">추가된 끝점의 주소가 포함된 <see cref="T:System.Uri" />입니다. 절대 URI나 상대 URI일 수 있습니다. 상대 URI인 경우 바인딩 프로토콜에 따라 <see cref="T:System.ServiceModel.ServiceHost" />의 기본 주소 중 하나가 끝점의 기본 주소로 사용됩니다.</param>
        <summary>지정된 계약, 바인딩 및 끝점 주소가 포함된 URI를 사용하여 서비스 끝점을 호스팅된 서비스에 추가합니다.</summary>
        <returns>호스팅된 서비스에 추가된 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="implementedContract" />, <paramref name="binding" /> 또는 <paramref name="address" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.InvalidOperationException">호스트가 <see cref="F:System.ServiceModel.CommunicationState.Created" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 상태가 아니거나, 호스팅된 서비스에 대한 <see cref="T:System.ServiceModel.Description.ServiceDescription" />이 없어 끝점을 추가할 수 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (string implementedContract, System.ServiceModel.Channels.Binding binding, string address, Uri listenUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(string implementedContract, class System.ServiceModel.Channels.Binding binding, string address, class System.Uri listenUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(System::String ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, System::String ^ address, Uri ^ listenUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.String" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="listenUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="implementedContract">끝점에서 구현하는 계약입니다.</param>
        <param name="binding">추가된 끝점에 대한 <see cref="T:System.ServiceModel.Channels.Binding" />입니다.</param>
        <param name="address">추가된 끝점에 대한 주소입니다. 이 주소는 절대 URI나 상대 URI일 수 있습니다. 상대 URI인 경우 바인딩 프로토콜에 따라 <see cref="T:System.ServiceModel.ServiceHost" />의 기본 주소 중 하나가 끝점의 기본 주소로 사용됩니다.</param>
        <param name="listenUri">끝점이 들어오는 메시지를 수신 대기하는 주소를 포함하는 <see cref="T:System.Uri" />입니다. 절대 URI나 상대 URI일 수 있습니다.</param>
        <summary>지정된 계약, 바인딩, 끝점 주소 및 수신 주소가 포함된 URI를 사용하여 서비스 끝점을 호스팅된 서비스에 추가합니다.</summary>
        <returns>호스팅된 서비스에 추가된 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `address`가 상대 URI인 경우 바인딩 프로토콜에 따라 <xref:System.ServiceModel.ServiceHost>의 기본 주소 중 하나가 끝점의 기본 주소로 사용됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="implementedContract" />, <paramref name="binding" /> 또는 <paramref name="address" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.InvalidOperationException">호스트가 <see cref="F:System.ServiceModel.CommunicationState.Created" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 상태가 아니거나, 호스팅된 서비스에 대한 <see cref="T:System.ServiceModel.Description.ServiceDescription" />이 없어 끝점을 추가할 수 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (string implementedContract, System.ServiceModel.Channels.Binding binding, Uri address, Uri listenUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(string implementedContract, class System.ServiceModel.Channels.Binding binding, class System.Uri address, class System.Uri listenUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(System::String ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, Uri ^ address, Uri ^ listenUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.String" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="listenUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="implementedContract">끝점에서 구현하는 계약입니다.</param>
        <param name="binding">추가된 끝점에 대한 <see cref="T:System.ServiceModel.Channels.Binding" />입니다.</param>
        <param name="address">추가된 끝점의 주소가 포함된 <see cref="T:System.Uri" />입니다. 상대 URI인 경우 바인딩 프로토콜에 따라 <see cref="T:System.ServiceModel.ServiceHost" />의 기본 주소 중 하나가 끝점의 기본 주소로 사용됩니다.</param>
        <param name="listenUri">끝점이 들어오는 메시지를 수신하는 주소를 포함하는 <see cref="T:System.Uri" />입니다.</param>
        <summary>지정된 계약, 바인딩, 끝점과 수신 주소가 포함된 URI를 사용하여 서비스 끝점을 호스팅된 서비스에 추가합니다.</summary>
        <returns>호스팅된 서비스에 추가된 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />입니다. 절대 URI나 상대 URI일 수 있습니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="implementedContract" />, <paramref name="binding" /> 또는 <paramref name="address" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.InvalidOperationException">호스트가 <see cref="F:System.ServiceModel.CommunicationState.Created" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 상태가 아니거나, 호스팅된 서비스에 대한 <see cref="T:System.ServiceModel.Description.ServiceDescription" />이 없어 끝점을 추가할 수 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ApplyConfiguration">
      <MemberSignature Language="C#" Value="protected virtual void ApplyConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ApplyConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.ApplyConfiguration" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ApplyConfiguration ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ApplyConfiguration();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>구성 파일에서 서비스 설명 정보를 로드하고 이 정보를 생성 중인 런타임에 적용합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">호스팅된 서비스에 대한 설명이 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Authentication">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceAuthenticationBehavior Authentication { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Description.ServiceAuthenticationBehavior Authentication" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceHostBase.Authentication" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Authentication As ServiceAuthenticationBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Description::ServiceAuthenticationBehavior ^ Authentication { System::ServiceModel::Description::ServiceAuthenticationBehavior ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceAuthenticationBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>서비스 인증 동작을 가져옵니다.</summary>
        <value>서비스 인증 동작입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Authorization">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceAuthorizationBehavior Authorization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Description.ServiceAuthorizationBehavior Authorization" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceHostBase.Authorization" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Authorization As ServiceAuthorizationBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Description::ServiceAuthorizationBehavior ^ Authorization { System::ServiceModel::Description::ServiceAuthorizationBehavior ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceAuthorizationBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>호스팅된 서비스에 대한 인증 동작을 가져옵니다.</summary>
        <value>호스팅된 서비스의 <see cref="T:System.ServiceModel.Description.ServiceAuthorizationBehavior" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_SelfHost#36](~/samples/snippets/csharp/VS_Snippets_CFX/s_selfhost/cs/wholeenchilada.cs#36)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseAddresses">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;Uri&gt; BaseAddresses { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Uri&gt; BaseAddresses" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceHostBase.BaseAddresses" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseAddresses As ReadOnlyCollection(Of Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;Uri ^&gt; ^ BaseAddresses { System::Collections::ObjectModel::ReadOnlyCollection&lt;Uri ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Uri&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>호스팅된 서비스에서 사용하는 기본 주소를 가져옵니다.</summary>
        <value>호스팅된 서비스의 기본 주소를 포함하는 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 형식의 <see cref="T:System.Uri" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelDispatchers">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.ChannelDispatcherCollection ChannelDispatchers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.ChannelDispatcherCollection ChannelDispatchers" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceHostBase.ChannelDispatchers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelDispatchers As ChannelDispatcherCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::ChannelDispatcherCollection ^ ChannelDispatchers { System::ServiceModel::Dispatcher::ChannelDispatcherCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.ChannelDispatcherCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>서비스 호스트에서 사용하는 채널 디스패처 컬렉션을 가져옵니다.</summary>
        <value>서비스 호스트에서 사용하는 채널 디스패처를 포함하는 <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcherCollection" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan CloseTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan CloseTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceHostBase.CloseTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property CloseTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan CloseTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>서비스 호스트를 닫는 데 허용되는 시간 간격을 가져오거나 설정합니다.</summary>
        <value>서비스 호스트를 닫는 데 허용되는 시간 간격을 지정하는 <see cref="T:System.TimeSpan" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_SelfHost#33](~/samples/snippets/csharp/VS_Snippets_CFX/s_selfhost/cs/wholeenchilada.cs#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">값(밀리초)이 0보다 작거나 <see cref="F:System.Int32.MaxValue" />(2,147,483,647 또는 16진수 표기법으로 0X7FFFFFFF)보다 큰 경우.</exception>
        <exception cref="T:System.InvalidOperationException">호스트가 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 상태이며 수정할 수 없는 경우</exception>
        <exception cref="T:System.ObjectDisposedException">호스트가 이미 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 상태이며 수정할 수 없는 경우</exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">호스트가 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태이며 수정할 수 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDescription">
      <MemberSignature Language="C#" Value="protected abstract System.ServiceModel.Description.ServiceDescription CreateDescription (out System.Collections.Generic.IDictionary&lt;string,System.ServiceModel.Description.ContractDescription&gt; implementedContracts);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ServiceModel.Description.ServiceDescription CreateDescription([out] class System.Collections.Generic.IDictionary`2&lt;string, class System.ServiceModel.Description.ContractDescription&gt;&amp; implementedContracts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateDescription (ByRef implementedContracts As IDictionary(Of String, ContractDescription)) As ServiceDescription" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::ServiceModel::Description::ServiceDescription ^ CreateDescription([Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::String ^, System::ServiceModel::Description::ContractDescription ^&gt; ^ % implementedContracts);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContracts" Type="System.Collections.Generic.IDictionary&lt;System.String,System.ServiceModel.Description.ContractDescription&gt;&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="implementedContracts">서비스의 <see cref="T:System.Collections.Generic.IDictionary`2" /> 개체를 포함하는 <see cref="T:System.ServiceModel.Description.ContractDescription" />입니다.</param>
        <summary>파생 클래스에서 구현되는 경우 호스팅된 서비스에 대한 설명을 만듭니다.</summary>
        <returns>호스팅된 서비스의 <see cref="T:System.ServiceModel.Description.ServiceDescription" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_SelfHost#41](~/samples/snippets/csharp/VS_Snippets_CFX/s_selfhost/cs/wholeenchilada.cs#41)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceCredentials Credentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Description.ServiceCredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceHostBase.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Credentials As ServiceCredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Description::ServiceCredentials ^ Credentials { System::ServiceModel::Description::ServiceCredentials ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>호스팅된 서비스에 대한 자격 증명을 가져옵니다.</summary>
        <value>호스팅된 서비스의 <see cref="T:System.ServiceModel.Description.ServiceCredentials" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_SelfHost#37](~/samples/snippets/csharp/VS_Snippets_CFX/s_selfhost/cs/wholeenchilada.cs#37)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCloseTimeout">
      <MemberSignature Language="C#" Value="protected override TimeSpan DefaultCloseTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultCloseTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceHostBase.DefaultCloseTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultCloseTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property TimeSpan DefaultCloseTimeout { TimeSpan get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>서비스 호스트를 닫는 데 허용되는 기본 시간 간격을 가져옵니다.</summary>
        <value>서비스 호스트를 닫는 데 허용되는 기본 시간 간격을 지정하는 <see cref="T:System.TimeSpan" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultOpenTimeout">
      <MemberSignature Language="C#" Value="protected override TimeSpan DefaultOpenTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultOpenTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceHostBase.DefaultOpenTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultOpenTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property TimeSpan DefaultOpenTimeout { TimeSpan get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>서비스 호스트를 여는 데 허용되는 기본 시간 간격을 가져옵니다.</summary>
        <value>서비스 호스트를 여는 데 허용되는 기본 시간 간격을 지정하는 <see cref="T:System.TimeSpan" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_SelfHost#35](~/samples/snippets/csharp/VS_Snippets_CFX/s_selfhost/cs/wholeenchilada.cs#35)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceDescription Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Description.ServiceDescription Description" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceHostBase.Description" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Description As ServiceDescription" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Description::ServiceDescription ^ Description { System::ServiceModel::Description::ServiceDescription ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceDescription</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>호스팅된 서비스에 대한 설명을 가져옵니다.</summary>
        <value>호스팅된 서비스의 <see cref="T:System.ServiceModel.Description.ServiceDescription" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_SelfHost#38](~/samples/snippets/csharp/VS_Snippets_CFX/s_selfhost/cs/wholeenchilada.cs#38)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Extensions">
      <MemberSignature Language="C#" Value="public System.ServiceModel.IExtensionCollection&lt;System.ServiceModel.ServiceHostBase&gt; Extensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.IExtensionCollection`1&lt;class System.ServiceModel.ServiceHostBase&gt; Extensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceHostBase.Extensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Extensions As IExtensionCollection(Of ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::IExtensionCollection&lt;System::ServiceModel::ServiceHostBase ^&gt; ^ Extensions { System::ServiceModel::IExtensionCollection&lt;System::ServiceModel::ServiceHostBase ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.IExtensibleObject`1.Extensions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.IExtensionCollection&lt;System.ServiceModel.ServiceHostBase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 지정된 서비스 호스트의 확장을 가져옵니다.</summary>
        <value>
          <see cref="T:System.ServiceModel.IExtensionCollection`1" /> 형식의 <see cref="T:System.ServiceModel.ServiceHostBase" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImplementedContracts">
      <MemberSignature Language="C#" Value="protected internal System.Collections.Generic.IDictionary&lt;string,System.ServiceModel.Description.ContractDescription&gt; ImplementedContracts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class System.ServiceModel.Description.ContractDescription&gt; ImplementedContracts" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceHostBase.ImplementedContracts" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property ImplementedContracts As IDictionary(Of String, ContractDescription)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::ServiceModel::Description::ContractDescription ^&gt; ^ ImplementedContracts { System::Collections::Generic::IDictionary&lt;System::String ^, System::ServiceModel::Description::ContractDescription ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.ServiceModel.Description.ContractDescription&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>호스팅된 서비스에서 구현하는 계약을 검색합니다.</summary>
        <value>서비스의 <see cref="T:System.Collections.Generic.IDictionary`2" /> 개체를 포함하는 <see cref="T:System.ServiceModel.Description.ContractDescription" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementManualFlowControlLimit">
      <MemberSignature Language="C#" Value="public int IncrementManualFlowControlLimit (int incrementBy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IncrementManualFlowControlLimit(int32 incrementBy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IncrementManualFlowControlLimit (incrementBy As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IncrementManualFlowControlLimit(int incrementBy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="incrementBy" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="incrementBy">흐름 제어 한도를 늘리는 증분 메시지 개수입니다.</param>
        <summary>호스팅된 서비스로 이동하는 메시지 흐름 속도 한도를 지정된 증분만큼 늘립니다.</summary>
        <returns>증분이 추가된 이후의 새 한도입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 한도는 <xref:System.ServiceModel.ServiceHostBase.ManualFlowControlLimit%2A> 속성을 사용하여 액세스할 수 있습니다.  
  
   
  
## Examples  
 [!code-csharp[S_SelfHost#42](~/samples/snippets/csharp/VS_Snippets_CFX/s_selfhost/cs/wholeenchilada.cs#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">값이 0보다 작은 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="InitializeDescription">
      <MemberSignature Language="C#" Value="protected void InitializeDescription (System.ServiceModel.UriSchemeKeyedCollection baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InitializeDescription(class System.ServiceModel.UriSchemeKeyedCollection baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InitializeDescription (baseAddresses As UriSchemeKeyedCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InitializeDescription(System::ServiceModel::UriSchemeKeyedCollection ^ baseAddresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddresses" Type="System.ServiceModel.UriSchemeKeyedCollection" />
      </Parameters>
      <Docs>
        <param name="baseAddresses">호스팅된 서비스의 기본 주소를 포함하는 <see cref="T:System.ServiceModel.UriSchemeKeyedCollection" />입니다.</param>
        <summary>계약 및 서비스 설명을 사용하여 서비스 호스트를 만들고 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeRuntime">
      <MemberSignature Language="C#" Value="protected virtual void InitializeRuntime ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeRuntime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.InitializeRuntime" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeRuntime ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeRuntime();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>서비스 호스트의 런타임을 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">호스팅된 서비스에 대한 설명이 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadConfigurationSection">
      <MemberSignature Language="C#" Value="protected void LoadConfigurationSection (System.ServiceModel.Configuration.ServiceElement serviceSection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void LoadConfigurationSection(class System.ServiceModel.Configuration.ServiceElement serviceSection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub LoadConfigurationSection (serviceSection As ServiceElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void LoadConfigurationSection(System::ServiceModel::Configuration::ServiceElement ^ serviceSection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceSection" Type="System.ServiceModel.Configuration.ServiceElement" />
      </Parameters>
      <Docs>
        <param name="serviceSection">구성으로부터 로드할 <see cref="T:System.ServiceModel.Configuration.ServiceElement" />입니다.</param>
        <summary>호스팅된 서비스의 구성 파일로부터 서비스 요소를 로드합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="serviceSection" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.InvalidOperationException">호스팅된 서비스에 대한 설명이 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ManualFlowControlLimit">
      <MemberSignature Language="C#" Value="public int ManualFlowControlLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ManualFlowControlLimit" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceHostBase.ManualFlowControlLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property ManualFlowControlLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ManualFlowControlLimit { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>호스팅된 서비스에서 수신하는 메시지의 흐름 제어 한도를 가져오거나 설정합니다.</summary>
        <value>호스팅된 서비스에서 수신하는 메시지의 흐름 제어 한도입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 한도는 <xref:System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit%28System.Int32%29> 메서드를 사용하여 높일 수 있습니다.  
  
   
  
## Examples  
 [!code-csharp[S_SelfHost#39](~/samples/snippets/csharp/VS_Snippets_CFX/s_selfhost/cs/wholeenchilada.cs#39)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">값이 0보다 작은 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="OnAbort">
      <MemberSignature Language="C#" Value="protected override void OnAbort ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnAbort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.OnAbort" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnAbort ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnAbort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>서비스를 중단합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginClose">
      <MemberSignature Language="C#" Value="protected override IAsyncResult OnBeginClose (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.IAsyncResult OnBeginClose(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBeginClose (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override IAsyncResult ^ OnBeginClose(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">제한 시간이 초과되기 전에 닫기 작업이 완료되어야 하는 기간을 지정하는 <see cref="T:System.TimeSpan" />입니다.</param>
        <param name="callback">비동기 닫기 작업의 완료에 대한 알림을 수신하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
        <param name="state">응용 프로그램에 의해 지정되는 개체로, 비동기 닫기 작업과 연결된 상태 정보를 포함합니다.</param>
        <summary>서비스 호스트를 닫았을 때 호출되는 비동기 작업을 시작합니다.</summary>
        <returns>비동기 닫기 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginOpen">
      <MemberSignature Language="C#" Value="protected override IAsyncResult OnBeginOpen (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.IAsyncResult OnBeginOpen(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBeginOpen (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override IAsyncResult ^ OnBeginOpen(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">시간 제한이 초과되기 전에 열기 작업이 완료되어야 하는 기간을 지정하는 <see cref="T:System.TimeSpan" />입니다.</param>
        <param name="callback">비동기 열기 작업의 완료에 대한 알림을 수신하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
        <param name="state">응용 프로그램에 의해 지정되는 개체로, 비동기 열기 작업과 연결된 상태 정보를 포함합니다.</param>
        <summary>서비스 호스트를 열었을 때 호출되는 비동기 작업을 시작합니다.</summary>
        <returns>비동기 열기 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClose">
      <MemberSignature Language="C#" Value="protected override void OnClose (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClose(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClose (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClose(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">제한 시간이 초과되기 전에 닫기 작업이 완료되어야 하는 기간을 지정하는 <see cref="T:System.TimeSpan" />입니다.</param>
        <summary>채널 디스패처 및 연결된 인스턴스 컨텍스트 및 수신기를 포함하여 호스팅된 서비스를 닫습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.ServiceHostBase.OnClose%28System.TimeSpan%29>를 호출하면 다음과 같은 작업을 수행합니다.  
  
-   <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>에 대한 모든 입력을 닫습니다. 그러면 연결된 <xref:System.ServiceModel.Channels.IChannelListener> 인스턴스도 닫힙니다. 그러면 더 이상 새 채널의 수락이 없습니다.  
  
-   모든 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput%2A> 개체에 대해 <xref:System.ServiceModel.InstanceContext>을 호출합니다. 그러면 더 이상 새 메시지를 수락하지 않습니다.  
  
-   모든 <xref:System.ServiceModel.InstanceContext> 개체가 닫힐 때, 즉 연결된 채널이 보류 중인 모든 메시지의 전송을 마칠 때까지 기다립니다.  
  
-   호스트와 연결된 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 개체를 닫습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected override void OnClosed ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClosed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.OnClosed" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClosed ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClosed();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>서비스 호스트에서 사용하는 리소스를 해제합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndClose">
      <MemberSignature Language="C#" Value="protected override void OnEndClose (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEndClose(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEndClose (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEndClose(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <see cref="T:System.IAsyncResult" /> 메서드를 호출하여 반환된 <see cref="M:System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />입니다.</param>
        <summary>서비스 호스트를 닫았을 때 호출되는 비동기 작업을 완료합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndOpen">
      <MemberSignature Language="C#" Value="protected override void OnEndOpen (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEndOpen(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEndOpen (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEndOpen(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <see cref="T:System.IAsyncResult" /> 메서드를 호출하여 반환된 <see cref="M:System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />입니다.</param>
        <summary>서비스 호스트를 열었을 때 호출되는 비동기 작업을 완료합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnOpen">
      <MemberSignature Language="C#" Value="protected override void OnOpen (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnOpen(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnOpen (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnOpen(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">시간 제한이 초과되기 전에 열기 작업이 완료되어야 하는 기간을 지정하는 <see cref="T:System.TimeSpan" />입니다.</param>
        <summary>채널 디스패처를 엽니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnOpened">
      <MemberSignature Language="C#" Value="protected override void OnOpened ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnOpened() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.OnOpened" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnOpened ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnOpened();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>호스팅된 서비스의 서비스 자격 증명, 서비스 인증 및 서비스 인증 동작을 가져옵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 서비스를 열 때 초기화된 이 동작은 변경할 수 없습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan OpenTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan OpenTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceHostBase.OpenTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property OpenTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan OpenTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>서비스 호스트를 여는 데 허용되는 시간 간격을 가져오거나 설정합니다.</summary>
        <value>서비스 호스트를 여는 데 허용되는 시간 간격을 지정하는 <see cref="T:System.TimeSpan" />입니다.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">값이 0보다 작거나 <see cref="F:System.Int32.MaxValue" />(2,147,483,647 또는 16진수 표기법으로 0X7FFFFFFF)보다 큰 경우</exception>
        <exception cref="T:System.InvalidOperationException">호스트가 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 상태이며 수정할 수 없는 경우</exception>
        <exception cref="T:System.ObjectDisposedException">호스트가 이미 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 상태이며 수정할 수 없는 경우</exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">호스트가 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태이며 수정할 수 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ReleasePerformanceCounters">
      <MemberSignature Language="C#" Value="protected void ReleasePerformanceCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ReleasePerformanceCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ReleasePerformanceCounters ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ReleasePerformanceCounters();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>호스팅된 서비스의 서비스 및 채널 디스패처 성능 카운터를 해제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 <xref:System.ServiceModel.ServiceHostBase.OnClose%28System.TimeSpan%29>와 다음을 호출할 때 호출됩니다.  
  
 <xref:System.ServiceModel.ServiceHostBase.OnEndClose%28System.IAsyncResult%29>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEndpointAddress">
      <MemberSignature Language="C#" Value="public void SetEndpointAddress (System.ServiceModel.Description.ServiceEndpoint endpoint, string relativeAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEndpointAddress(class System.ServiceModel.Description.ServiceEndpoint endpoint, string relativeAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetEndpointAddress (endpoint As ServiceEndpoint, relativeAddress As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetEndpointAddress(System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::String ^ relativeAddress);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="relativeAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="endpoint">서비스 끝점입니다.</param>
        <param name="relativeAddress">끝점 주소입니다.</param>
        <summary>지정된 끝점의 끝점 주소를 지정된 주소로 설정합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>서비스 호스트를 닫습니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownMessageReceived">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.ServiceModel.UnknownMessageReceivedEventArgs&gt; UnknownMessageReceived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.ServiceModel.UnknownMessageReceivedEventArgs&gt; UnknownMessageReceived" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ServiceHostBase.UnknownMessageReceived" />
      <MemberSignature Language="VB.NET" Value="Public Event UnknownMessageReceived As EventHandler(Of UnknownMessageReceivedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::ServiceModel::UnknownMessageReceivedEventArgs ^&gt; ^ UnknownMessageReceived;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.ServiceModel.UnknownMessageReceivedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>알 수 없는 메시지를 수신할 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!WARNING]
>  사용 하는 경우 <xref:System.ServiceModel.WorkflowServiceHost>, 호스팅 끝점을 노출 및 <xref:System.ServiceModel.ServiceHostBase.UnknownMessageReceived> 예외가, 호스트에서 메시지를 이벤트 처리기에 전달 합니다. 이 메시지를 읽을 하려고 시도 하는 경우는 <xref:System.InvalidOperationException> throw 됩니다. 예외에 대 한 설명을 "이이 메시지 수 없는 작업을 지원할는 읽었기 때문에." 예를 들어 됩니다.  WCF 인프라 메시지 매개 변수를 추출 하는 동안 메시지를 읽습니다. 이 메시지 이벤트 처리기에 전달 됩니다 및 읽을 하려고 하면 예외가 발생 합니다. 메시지 매개 변수에서 액세스 해야 하는 경우 프로그램 <xref:System.InvalidOperationException> 호스팅 끝점에서 처리기 MessageContract를 사용 하 여 호스팅 끝점 계약을 정의 하 고 메시지 머리글에 필요한 데이터를 배치 합니다. 끝점을 호스트 하는 방법에 대 한 자세한 내용은 참조 [워크플로 서비스 호스트 확장](~/docs/framework/wcf/feature-details/workflow-service-host-extensibility.md)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>