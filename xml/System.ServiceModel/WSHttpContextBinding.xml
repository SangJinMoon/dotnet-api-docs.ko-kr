<Type Name="WSHttpContextBinding" FullName="System.ServiceModel.WSHttpContextBinding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="845d1e867180fcdff974430543b7acda198c554e" />
    <Meta Name="ms.sourcegitcommit" Value="4b4804968da1dfdf71c501075a5b66957b54f2e8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/27/2018" />
    <Meta Name="ms.locfileid" Value="32039284" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WSHttpContextBinding : System.ServiceModel.WSHttpBinding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WSHttpContextBinding extends System.ServiceModel.WSHttpBinding" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.WSHttpContextBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class WSHttpContextBinding&#xA;Inherits WSHttpBinding" />
  <TypeSignature Language="C++ CLI" Value="public ref class WSHttpContextBinding : System::ServiceModel::WSHttpBinding" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.WSHttpBinding</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.WorkflowServices, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:System.ServiceModel.WSHttpContextBinding" />에 컨텍스트 사용 바인딩을 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.WSHttpContextBinding>은 시스템 제공 <xref:System.ServiceModel.Channels.ContextBindingElement>의 <xref:System.ServiceModel.Channels.BindingElement> 개체 스택에 <xref:System.ServiceModel.WSHttpBinding>를 추가합니다. 따라서 HTTP 쿠키를 사용할 수 없을 때 SOAP 헤더를 사용하여 컨텍스트를 교환할 수 있습니다.  
  
> [!NOTE]
>  사용 하 여 빌드한 WCF 서비스를 호출 하면 [!INCLUDE[netfx40_long](~/includes/netfx40-long-md.md)] 이상으로 빌드된 WCF 클라이언트 응용 프로그램에서 [!INCLUDE[netfx35_long](~/includes/netfx35-long-md.md)] 또는 Visual Studio에서 서비스 참조를 추가 하거나 svcutil.exe에서 생성 된 구성 파일에 이전에 `contextManagementEnabled` 바인딩 구성에 대 한 특성입니다. 이 특성은 [!INCLUDE[netfx35_short](~/includes/netfx35-short-md.md)] 런타임에서 인식되지 않으므로 응용 프로그램에서 "인식할 수 없는 특성 'contextManagementEnabled'"라는 메시지와 함께 <xref:System.Configuration.ConfigurationErrorsException>이 throw됩니다. 해결 방법이 문제를 제거는 `contextManagementEnabled` 바인딩 구성에서 특성입니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.ServiceModel.WSHttpContextBinding" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSHttpContextBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSHttpContextBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSHttpContextBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.ServiceModel.WSHttpContextBinding" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSHttpContextBinding (System.ServiceModel.SecurityMode securityMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ServiceModel.SecurityMode securityMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSHttpContextBinding.#ctor(System.ServiceModel.SecurityMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSHttpContextBinding(System::ServiceModel::SecurityMode securityMode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="securityMode" Type="System.ServiceModel.SecurityMode" />
      </Parameters>
      <Docs>
        <param name="securityMode">보안 모드입니다.</param>
        <summary>지정된 <see cref="T:System.ServiceModel.WSHttpContextBinding" />를 사용하여 <see cref="T:System.ServiceModel.SecurityMode" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 보안을 구성하지만 신뢰할 수 있는 세션을 사용하지 않으려면 이 생성자를 사용합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSHttpContextBinding (string configName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string configName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSHttpContextBinding.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (configName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSHttpContextBinding(System::String ^ configName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="configName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configName">바인딩 구성의 이름입니다.</param>
        <summary>지정된 바인딩 구성을 사용하여 <see cref="T:System.ServiceModel.WSHttpContextBinding" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `configName` 의 이름으로 매개 변수를 설정 해야는 `<binding>` 이 바인딩을 구성 하는 구성 파일의 요소입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSHttpContextBinding (System.ServiceModel.SecurityMode securityMode, bool reliableSessionEnabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ServiceModel.SecurityMode securityMode, bool reliableSessionEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSHttpContextBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSHttpContextBinding(System::ServiceModel::SecurityMode securityMode, bool reliableSessionEnabled);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="securityMode" Type="System.ServiceModel.SecurityMode" />
        <Parameter Name="reliableSessionEnabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="securityMode">보안 모드입니다.</param>
        <param name="reliableSessionEnabled">
          신뢰할 수 있는 세션을 사용하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>지정된 <see cref="T:System.ServiceModel.WSHttpContextBinding" />와 신뢰할 수 있는 세션 설정을 사용하여 <see cref="T:System.ServiceModel.SecurityMode" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 보안을 구성하고 신뢰할 수 있는 세션을 사용하려면 이 생성자를 사용합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCallbackAddress">
      <MemberSignature Language="C#" Value="public Uri ClientCallbackAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ClientCallbackAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSHttpContextBinding.ClientCallbackAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCallbackAddress As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ClientCallbackAddress { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>클라이언트 콜백 주소를 가져오거나 설정합니다.</summary>
        <value>클라이언트 콜백 주소입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextManagementEnabled">
      <MemberSignature Language="C#" Value="public bool ContextManagementEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ContextManagementEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSHttpContextBinding.ContextManagementEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ContextManagementEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ContextManagementEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨텍스트 관리를 사용할 수 있는지 여부를 지정하는 값을 가져옵니다.</summary>
        <value>
          컨텍스트 관리를 사용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextProtectionLevel">
      <MemberSignature Language="C#" Value="public System.Net.Security.ProtectionLevel ContextProtectionLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.ProtectionLevel ContextProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSHttpContextBinding.ContextProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ContextProtectionLevel As ProtectionLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::ProtectionLevel ContextProtectionLevel { System::Net::Security::ProtectionLevel get(); void set(System::Net::Security::ProtectionLevel value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Security.ProtectionLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 바인딩의 컨텍스트 보호 수준을 가져오거나 설정합니다.</summary>
        <value>바인딩의 보호 수준입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBindingElements">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElementCollection CreateBindingElements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElementCollection CreateBindingElements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSHttpContextBinding.CreateBindingElements" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateBindingElements () As BindingElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElementCollection ^ CreateBindingElements();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElementCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 바인딩에 포함되어 있는 바인딩 요소의 순서가 지정된 컬렉션을 만듭니다.</summary>
        <returns>
          <see cref="T:System.ServiceModel.WSHttpContextBinding" />에 설명된 바인딩 요소의 순서가 지정된 스택입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 컬렉션에는 HTTP 쿠키를 사용할 수 없는 경우 SOAP 헤더를 사용하여 컨텍스트를 교환하고, 그렇지 않을 경우에는 HTTP를 사용하여 컨텍스트를 교환할 수 있도록 하는 <xref:System.ServiceModel.Channels.ContextBindingElement>가 포함됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>