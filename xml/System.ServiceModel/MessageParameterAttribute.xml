<Type Name="MessageParameterAttribute" FullName="System.ServiceModel.MessageParameterAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="879b32d2293fad535b8232cf6c0accf5740e2236" />
    <Meta Name="ms.sourcegitcommit" Value="cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="05/03/2018" />
    <Meta Name="ms.locfileid" Value="32688892" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class MessageParameterAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MessageParameterAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.MessageParameterAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MessageParameterAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageParameterAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>요청 및 응답 매개 변수의 이름을 제어합니다. <see cref="T:System.ServiceModel.Channels.Message" /> 또는 메시지 계약과 함께 사용할 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 매개 변수 이름이나 반환 값을 제어할 때 <xref:System.ServiceModel.MessageParameterAttribute>를 사용합니다. 이 특성은 매개 변수가 <xref:System.ServiceModel.MessageContractAttribute> 특성으로 표시된 경우 아무런 효과가 없습니다.  
  
> [!NOTE]
>  작업 서명의 매개 변수 이름 값은 계약의 일부이며 대/소문자를 구분합니다. 로컬 매개 변수 이름과 클라이언트 응용 프로그램의 작업을 설명하는 메타데이터를 구분해야 하는 경우 이 특성을 사용합니다.  
  
 기본 SOAP 봉투 자체를 수정 하지 않고 SOAP 본문 내용의 serialization을 제어 하는 방법에 대 한 자세한 내용은 참조 <xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=nameWithType>, [서비스 계약에 데이터 전송 지정](~/docs/framework/wcf/feature-details/specifying-data-transfer-in-service-contracts.md), 및 [ 데이터 계약을 사용 하 여](~/docs/framework/wcf/feature-details/using-data-contracts.md)합니다.  
  
 메시지 계약을 만드는 방법에 대 한 자세한 내용은 참조 [메시지 계약을 사용 하 여](~/docs/framework/wcf/feature-details/using-message-contracts.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.ServiceModel.MessageParameterAttribute>를 사용하여 메타데이터에서 매개 변수의 이름과 반환 값을 설정하는 것을 보여 줍니다.  
  
 [!code-csharp[MessageParameterAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/messageparameterattribute/cs/services.cs#1)]
 [!code-vb[MessageParameterAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/messageparameterattribute/vb/services.vb#1)]  
  
 다음 예제에서는 앞에 나온 서비스에 대해 생성된 서비스 계약을 보여 줍니다. 이제 매개 변수의 이름은 `Input`입니다.  
  
 [!code-csharp[MessageParameterAttribute#2](~/samples/snippets/csharp/VS_Snippets_CFX/messageparameterattribute/cs/proxycode.cs#2)]
 [!code-vb[MessageParameterAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/messageparameterattribute/vb/proxycode.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageParameterAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MessageParameterAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageParameterAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.ServiceModel.MessageParameterAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 <xref:System.ServiceModel.MessageParameterAttribute>를 사용하여 메타데이터에서 매개 변수의 이름과 반환 값을 설정하는 것을 보여 줍니다.  
  
 [!code-csharp[MessageParameterAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/messageparameterattribute/cs/services.cs#1)]
 [!code-vb[MessageParameterAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/messageparameterattribute/vb/services.vb#1)]  
  
 다음 예제에서는 앞에 나온 서비스에 대해 생성된 서비스 계약을 보여 줍니다. 이제 매개 변수의 이름은 `Input`입니다.  
  
 [!code-csharp[MessageParameterAttribute#2](~/samples/snippets/csharp/VS_Snippets_CFX/messageparameterattribute/cs/proxycode.cs#2)]
 [!code-vb[MessageParameterAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/messageparameterattribute/vb/proxycode.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageParameterAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML 스키마(XSD)에서 매개 변수의 이름 특성을 가져오거나 설정합니다.</summary>
        <value>XSD에 있는 매개 변수의 이름 특성입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 <xref:System.ServiceModel.MessageParameterAttribute>를 사용하여 메타데이터에서 매개 변수의 이름과 반환 값을 설정하는 것을 보여 줍니다.  
  
 [!code-csharp[MessageParameterAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/messageparameterattribute/cs/services.cs#1)]
 [!code-vb[MessageParameterAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/messageparameterattribute/vb/services.vb#1)]  
  
 다음 예제에서는 앞에 나온 서비스에 대해 생성된 서비스 계약을 보여 줍니다. 이제 매개 변수의 이름은 `Input`입니다.  
  
 [!code-csharp[MessageParameterAttribute#2](~/samples/snippets/csharp/VS_Snippets_CFX/messageparameterattribute/cs/proxycode.cs#2)]
 [!code-vb[MessageParameterAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/messageparameterattribute/vb/proxycode.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>