<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IDefaultCommunicationTimeouts.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac534d9067cdd6ad7d961236aa2b77e123789215e72.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">34d9067cdd6ad7d961236aa2b77e123789215e72</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.IDefaultCommunicationTimeouts">
          <source>Defines the interface for specifying communication timeouts used by channels, channel managers such as channel listeners and channel factories, and service hosts.</source>
          <target state="translated">채널, 채널 관리자(예: 채널 수신기, 채널 팩터리) 및 서비스 호스트에서 사용하는 통신 시간 제한을 지정하는 인터페이스를 정의합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.IDefaultCommunicationTimeouts">
          <source>This interface has four read-only properties that provide default timeout values for the open, send, receive, and close methods that can be called on a communication object.</source>
          <target state="translated">이 인터페이스에는 통신 개체에 대해 호출 가능한 open, send, receive 및 close 메서드에 시간 제한 기본값을 제공하는 4개의 읽기 전용 속성이 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.IDefaultCommunicationTimeouts">
          <source>Each implementation is responsible for obtaining the default values in whatever manner is appropriate for the implementation.</source>
          <target state="translated">각 구현은 구현에 적절한 모든 방법으로 기본값을 가져오는 일을 담당합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.IDefaultCommunicationTimeouts">
          <source>This interface is implemented by <ph id="ph1">&lt;xref:System.ServiceModel.Channels.ChannelBase&gt;</ph>, the base implementation for writing custom channels, and the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.ChannelManagerBase&gt;</ph>, the base implementation for writing custom channel managers which derive from <ph id="ph3">&lt;xref:System.ServiceModel.Channels.ChannelFactoryBase&gt;</ph> and <ph id="ph4">&lt;xref:System.ServiceModel.Channels.ChannelListenerBase&gt;</ph>.</source>
          <target state="translated">이 인터페이스는 사용자 지정 채널을 작성하기 위한 기본 구현인 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.ChannelBase&gt;</ph>뿐만 아니라 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.ChannelManagerBase&gt;</ph> 및 <ph id="ph3">&lt;xref:System.ServiceModel.Channels.ChannelFactoryBase&gt;</ph>에서 파생되는 사용자 지정 채널 관리자를 작성하기 위한 기본 구현인 <ph id="ph4">&lt;xref:System.ServiceModel.Channels.ChannelListenerBase&gt;</ph>에 의해 구현됩니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.IDefaultCommunicationTimeouts">
          <source>The interface is also implemented by the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Binding&gt;</ph> class and then inherited from there by <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CustomBinding&gt;</ph> and the system-provided bindings, such as <ph id="ph3">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph>.</source>
          <target state="translated">또한 이 인터페이스는 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Binding&gt;</ph> 클래스에서 구현된 다음 여기서 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CustomBinding&gt;</ph> 및 시스템에서 제공한 바인딩(예: <ph id="ph3">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph>)에 의해 상속됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.IDefaultCommunicationTimeouts">
          <source>When you use channels directly, you have the ability to explicitly specify timeouts on a per-channel or per-operation-basis, or on any other custom basis.</source>
          <target state="translated">직접 채널을 사용할 때는 채널별이나 작업별로 또는 그 밖의 사용자 지정 기준에 따라 시간 제한을 명시적으로 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.IDefaultCommunicationTimeouts">
          <source>When using the channel model, timeouts are quite accessible when you want to control them.</source>
          <target state="translated">채널 모델을 사용할 경우 시간 제한을 제어하고 싶다면 손쉽게 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.IDefaultCommunicationTimeouts">
          <source>When using the service model, on the other hand, you program against services and contracts, and timeouts are more in the background.</source>
          <target state="translated">한편 서비스 모델을 사용할 경우에는 서비스 및 계약에 대해 프로그래밍하며 시간 제한은 비교적 백그라운드에 해당됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.IDefaultCommunicationTimeouts">
          <source>They are controlled by the infrastructure machinery which flows timeouts from place to place on your behalf.</source>
          <target state="translated">시간 제한이 인프라 시스템에서 제어되며, 이 시스템은 사용자를 대신하여 장소에 따라 시간 제한을 변경합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.IDefaultCommunicationTimeouts">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.IDefaultCommunicationTimeouts&gt;</ph> is one mechanism for providing that flow.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.IDefaultCommunicationTimeouts&gt;</ph>는 이러한 흐름을 제공하는 메커니즘입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout">
          <source>Gets the interval of time after which the close method, invoked by a communication object, times out.</source>
          <target state="translated">통신 개체에서 호출한 close 메서드가 제한 시간 초과로 처리되는 시간 간격을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies the interval of time to wait for the close method to time out.</source>
          <target state="translated">close 메서드가 시간 제한 초과로 처리되기 전에 대기할 시간 간격을 지정하는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout">
          <source>All operations that are potentially lengthy must have a timeout.</source>
          <target state="translated">시간이 오래 걸릴 수 있는 모든 작업에는 시간 제한이 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout">
          <source>Methods that don't take explicit timeouts, must delegate to those that do with default timeouts or must not do any work that blocks.</source>
          <target state="translated">명시적인 시간 제한을 사용하지 않는 메서드는 기본 시간 제한을 사용하는 메서드를 대리자로 위임해야 합니다. 또는 방해가 되는 작업을 수행하지 말아야 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout">
          <source>Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already consumed by earlier tries.</source>
          <target state="translated">시간 제한은 상위 수준 작업을 완료해야 하는 총 제한 시간이므로 모든 재시도는 이전 시도에서 소요되지 않은 남은 시간으로 제한되어야 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout">
          <source>Gets the interval of time after which the open method, invoked by a communication object, times out.</source>
          <target state="translated">통신 개체에서 호출한 open 메서드가 시간 제한 초과로 처리되는 시간 간격을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies the interval of time to wait for the open method to time out.</source>
          <target state="translated">open 메서드가 시간 제한 초과로 처리되기 전에 대기할 시간 간격을 지정하는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout">
          <source>All operations that are potentially lengthy must have a timeout.</source>
          <target state="translated">시간이 오래 걸릴 수 있는 모든 작업에는 시간 제한이 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout">
          <source>Methods that don't take explicit timeouts, must delegate to those that do with default timeouts or must not do any work that blocks.</source>
          <target state="translated">명시적인 시간 제한을 사용하지 않는 메서드는 기본 시간 제한을 사용하는 메서드를 대리자로 위임해야 합니다. 또는 방해가 되는 작업을 수행하지 말아야 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout">
          <source>Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already consumed by earlier tries.</source>
          <target state="translated">시간 제한은 상위 수준 작업을 완료해야 하는 총 제한 시간이므로 모든 재시도는 이전 시도에서 소요되지 않은 남은 시간으로 제한되어야 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout">
          <source>Gets the interval of time after which the receive method, invoked by a communication object, times out.</source>
          <target state="translated">통신 개체에서 호출한 receive 메서드가 시간 제한 초과로 처리되는 시간 간격을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies the interval of time to wait for the receive method to time out.</source>
          <target state="translated">receive 메서드가 시간 제한 초과로 처리되기 전에 대기할 시간 간격을 지정하는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout">
          <source>All operations that are potentially lengthy must have a timeout.</source>
          <target state="translated">시간이 오래 걸릴 수 있는 모든 작업에는 시간 제한이 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout">
          <source>Methods that don't take explicit timeouts, must delegate to those that do with default timeouts or must not do any work that blocks.</source>
          <target state="translated">명시적인 시간 제한을 사용하지 않는 메서드는 기본 시간 제한을 사용하는 메서드를 대리자로 위임해야 합니다. 또는 방해가 되는 작업을 수행하지 말아야 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout">
          <source>Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already consumed by earlier tries.</source>
          <target state="translated">시간 제한은 상위 수준 작업을 완료해야 하는 총 제한 시간이므로 모든 재시도는 이전 시도에서 소요되지 않은 남은 시간으로 제한되어야 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout">
          <source>Gets the interval of time after which the send method, invoked by a communication object, times out.</source>
          <target state="translated">통신 개체에서 호출한 send 메서드가 시간 제한 초과로 처리되는 시간 간격을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies the interval of time to wait for the send method to time out.</source>
          <target state="translated">send 메서드가 시간 제한 초과로 처리되기 전에 대기할 시간 간격을 지정하는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout">
          <source>All operations that are potentially lengthy must have a timeout.</source>
          <target state="translated">시간이 오래 걸릴 수 있는 모든 작업에는 시간 제한이 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout">
          <source>Methods that don't take explicit timeouts, must delegate to those that do with default timeouts or must not do any work that blocks.</source>
          <target state="translated">명시적인 시간 제한을 사용하지 않는 메서드는 기본 시간 제한을 사용하는 메서드를 대리자로 위임해야 합니다. 또는 방해가 되는 작업을 수행하지 말아야 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout">
          <source>Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already consumed by earlier tries.</source>
          <target state="translated">시간 제한은 상위 수준 작업을 완료해야 하는 총 제한 시간이므로 모든 재시도는 이전 시도에서 소요되지 않은 남은 시간으로 제한되어야 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>