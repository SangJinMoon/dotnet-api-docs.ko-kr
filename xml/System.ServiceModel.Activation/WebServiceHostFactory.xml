<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WebServiceHostFactory.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5bb079d81075b87b2251810c95fdaaef652d1eba9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bb079d81075b87b2251810c95fdaaef652d1eba9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Activation.WebServiceHostFactory">
          <source>A factory that provides instances of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Web.WebServiceHost" /&gt;</ph> in managed hosting environments where the host instance is created dynamically in response to incoming messages.</source>
          <target state="translated">들어오는 메시지에 응답하여 호스트 인스턴스가 동적으로 생성되는, 관리되는 호스팅 환경에서 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Web.WebServiceHost" /&gt;</ph>의 인스턴스를 제공하는 팩터리입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Activation.WebServiceHostFactory">
          <source>The managed hosting environments that support dynamic activation are Internet Information Services (IIS) and Windows Process Activation Service (WAS).</source>
          <target state="translated">동적 활성화를 지원하는 관리되는 호스팅 환경은 IIS(인터넷 정보 서비스) 및 WAS(Windows Process Activation Service)입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Activation.WebServiceHostFactory">
          <source>If you have implemented a custom derivative of <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph>, consider also implementing a factory that derives from the <ph id="ph2">&lt;xref:System.ServiceModel.Activation.WebServiceHostFactory&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph>의 사용자 지정 파생 클래스를 구현한 경우 <ph id="ph2">&lt;xref:System.ServiceModel.Activation.WebServiceHostFactory&gt;</ph> 클래스에서 파생되는 팩터리의 구현도 고려해야 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Activation.WebServiceHostFactory">
          <source>The following example shows how to derive a class from <ph id="ph1">&lt;xref:System.ServiceModel.Activation.WebServiceHostFactory&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Activation.WebServiceHostFactory&gt;</ph>에서 클래스를 파생하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Activation.WebServiceHostFactory">
          <source>To have your derived Web service host factory used, specify it in a .SVC file.</source>
          <target state="translated">파생된 웹 서비스 호스트 팩터리를 사용하려면 .SVC 파일에 지정해야 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Activation.WebServiceHostFactory">
          <source>The following example shows the syntax used in a .svc file.</source>
          <target state="translated">다음 예제에서는 .svc 파일에 사용된 구문을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Activation.WebServiceHostFactory.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Activation.WebServiceHostFactory" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Activation.WebServiceHostFactory" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Activation.WebServiceHostFactory.#ctor">
          <source>This method is not called directly.</source>
          <target state="translated">이 메서드는 직접 호출하지 않습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Activation.WebServiceHostFactory.#ctor">
          <source>It is called when a service is being dynamically activated.</source>
          <target state="translated">서비스가 동적으로 활성화될 때 호출됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Activation.WebServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])">
          <source>The type of service host to create.</source>
          <target state="translated">만들 서비스 호스트의 형식입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Activation.WebServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])">
          <source>An array of base addresses for the service.</source>
          <target state="translated">서비스에 대한 기본 주소 배열입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Activation.WebServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])">
          <source>Creates an instance of the specified <ph id="ph1">&lt;see cref="T:System.ServiceModel.Web.WebServiceHost" /&gt;</ph> derived class with the specified base addresses.</source>
          <target state="translated">지정된 기본 주소를 사용하여 지정된 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Web.WebServiceHost" /&gt;</ph> 파생 클래스의 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Activation.WebServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])">
          <source>An instance of a <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> derived class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> 파생 클래스의 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Activation.WebServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])">
          <source>Override this method to create the required service host type and perform any needed processing.</source>
          <target state="translated">필요한 서비스 호스트 형식을 만들고 필요한 처리를 수행하려면 이 메서드를 재정의합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Activation.WebServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])">
          <source>The following example shows a basic implementation of this method.</source>
          <target state="translated">다음 예제에서는 이 메서드의 기본 구현을 보여 줍니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>