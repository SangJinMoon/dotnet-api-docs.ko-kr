<Type Name="WebScriptServiceHostFactory" FullName="System.ServiceModel.Activation.WebScriptServiceHostFactory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="05f4aa436efb89845f12b395b90b167221e48f65" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34313709" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebScriptServiceHostFactory : System.ServiceModel.Activation.ServiceHostFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebScriptServiceHostFactory extends System.ServiceModel.Activation.ServiceHostFactory" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Activation.WebScriptServiceHostFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class WebScriptServiceHostFactory&#xA;Inherits ServiceHostFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebScriptServiceHostFactory : System::ServiceModel::Activation::ServiceHostFactory" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Activation.ServiceHostFactory</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>들어오는 메시지에 응답하여 서비스의 호스트 인스턴스를 동적으로 활성화하는, 관리되는 호스팅 환경에서 구성을 필요로 하지 않고 ASP.NET AJAX 끝점을 서비스에 자동으로 추가합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 팩터리를 사용하면 구성을 필요로 하지 않고 ASP.NET AJAX 끝점을 서비스에 추가할 수 있습니다. 끝점은 구성에 정의된 다른 끝점(있는 경우)에 추가됩니다. 이 형식의 동적 호스트 활성화를 지원하는 관리되는 호스팅 환경은 IIS(인터넷 정보 서비스)와 WAS(Windows Process Activation Service)입니다.  
  
 이 팩터리를 사용 하려면 지정는 <xref:System.ServiceModel.Activation.WebScriptServiceHostFactory> 에 `Factory` 특성에는 [ @ServiceHost ](~/docs/framework/configure-apps/file-schema/wcf-directive/servicehost.md) 지시문입니다.  
  
 이 팩터리를 사용하여 만들어진 ASP.NET AJAX 끝점은 <xref:System.ServiceModel.WebHttpBinding>과 <xref:System.ServiceModel.Description.WebScriptEnablingBehavior>의 기본 설정으로 구성됩니다. 끝점은 .svc 파일을 기준으로 빈 주소에 만들어집니다. 서비스 구성에 따라 이 주소에 끝점이 이미 정의되어 있으면 <xref:System.InvalidOperationException>이 throw되며 서비스가 시작되지 않습니다.  
  
   
  
## Examples  
 지정 된 <xref:System.ServiceModel.Activation.WebScriptServiceHostFactory> 의 값에 대 한는 `Factory` 특성에 [ @ServiceHost ](~/docs/framework/configure-apps/file-schema/wcf-directive/servicehost.md) 지시문에 대 한 ASP.NET AJAX 끝점을 활성화 하는 `MyService` 다음 예제와 같이 서비스 합니다.  
  
```  
<% @ServiceHost   
Service="MyService"  
Language="C#"  
Debug="true"  
Factory="WebScriptServiceHostFactory"  
%>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebScriptServiceHostFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activation.WebScriptServiceHostFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebScriptServiceHostFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.ServiceModel.Activation.WebScriptServiceHostFactory" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반적으로이 생성자가 자동으로 호출 Windows Communication Foundation (WCF)에서 서비스 활성화의 일부로-수동으로 호출할 필요가 없습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateServiceHost">
      <MemberSignature Language="C#" Value="protected override System.ServiceModel.ServiceHost CreateServiceHost (Type serviceType, Uri[] baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.ServiceModel.ServiceHost CreateServiceHost(class System.Type serviceType, class System.Uri[] baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activation.WebScriptServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateServiceHost (serviceType As Type, baseAddresses As Uri()) As ServiceHost" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::ServiceModel::ServiceHost ^ CreateServiceHost(Type ^ serviceType, cli::array &lt;Uri ^&gt; ^ baseAddresses);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceHost</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="baseAddresses" Type="System.Uri[]" />
      </Parameters>
      <Docs>
        <param name="serviceType">호스팅할 서비스의 형식입니다.</param>
        <param name="baseAddresses">호스팅된 서비스의 기본 주소를 포함하는 <see cref="T:System.Array" /> 형식의 <see cref="T:System.Uri" />입니다.</param>
        <summary>특정 시나리오에서 ASP.NET AJAX 끝점을 자동으로 활성화하는 데 사용할 수 있는 특정 기본 주소를 사용하여, 지정된 서비스 형식에 대한 <see cref="T:System.ServiceModel.ServiceHost" />의 파생 클래스를 만듭니다.</summary>
        <returns>지정된 기본 주소와 서비스 형식의 <see cref="T:System.ServiceModel.ServiceHost" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반적으로이 메서드는 자동으로 Windows Communication Foundation (WCF)에서 서비스 활성화의 일부로-수동으로 호출할 필요가 없습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">다른 서비스에서 이 팩터리가 만들려고 시도하는 ASP.NET AJAX 끝점과 동일한 기본 주소를 사용하거나 다른 끝점에서 이 끝점과 동일한 주소를 사용하는 경우</exception>
      </Docs>
    </Member>
  </Members>
</Type>