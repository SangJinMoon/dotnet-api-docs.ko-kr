<Type Name="WorkflowServiceHostFactory" FullName="System.ServiceModel.Activation.WorkflowServiceHostFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ec97bfb7093892ae4c2858347b47a85be062f178" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53484670" /></Metadata><TypeSignature Language="C#" Value="public class WorkflowServiceHostFactory : System.ServiceModel.Activation.ServiceHostFactoryBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowServiceHostFactory extends System.ServiceModel.Activation.ServiceHostFactoryBase" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Activation.WorkflowServiceHostFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowServiceHostFactory&#xA;Inherits ServiceHostFactoryBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowServiceHostFactory : System::ServiceModel::Activation::ServiceHostFactoryBase" />
  <TypeSignature Language="F#" Value="type WorkflowServiceHostFactory = class&#xA;    inherit ServiceHostFactoryBase" />
  <AssemblyInfo>
    <AssemblyName>System.WorkflowServices</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Activation.ServiceHostFactoryBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f6f3b-101">호스트 인스턴스가 들어오는 메시지에 응답하여 동적으로 생성되는 관리 호스팅 환경에서 <see cref="T:System.ServiceModel.WorkflowServiceHost" />의 인스턴스를 제공하는 팩터리입니다.</span><span class="sxs-lookup"><span data-stu-id="f6f3b-101">Factory that provides instances of <see cref="T:System.ServiceModel.WorkflowServiceHost" /> in managed hosting environments where the host instance is created dynamically in response to incoming messages.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6f3b-102">동적 활성화를 지원하는 관리되는 호스팅 환경은 IIS(인터넷 정보 서비스) 및 WAS(Windows Process Activation Service)입니다.</span><span class="sxs-lookup"><span data-stu-id="f6f3b-102">The managed hosting environments that support dynamic activation are Internet Information Services (IIS) and Windows Process Activation Service (WAS).</span></span>  
  
 <span data-ttu-id="f6f3b-103"><xref:System.ServiceModel.WorkflowServiceHost>의 사용자 지정 파생 클래스를 구현한 경우 <xref:System.ServiceModel.Activation.WorkflowServiceHostFactory> 클래스에서 파생되는 팩터리의 구현도 고려해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f6f3b-103">If you have implemented a custom derivative of <xref:System.ServiceModel.WorkflowServiceHost>, consider also implementing a factory that derives from the <xref:System.ServiceModel.Activation.WorkflowServiceHostFactory> class.</span></span>  
  
 <span data-ttu-id="f6f3b-104"><xref:System.ServiceModel.ServiceHostBase>의 사용자 지정 파생 클래스를 구현한 경우에는 <xref:System.ServiceModel.Activation.ServiceHostFactoryBase>에서 직접 팩터리를 파생시키는 팩터리의 구현도 고려합니다.</span><span class="sxs-lookup"><span data-stu-id="f6f3b-104">If you have implemented a custom derivative of <xref:System.ServiceModel.ServiceHostBase> instead, then consider also implementing a factory that derives your factory from <xref:System.ServiceModel.Activation.ServiceHostFactoryBase> directly.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowServiceHostFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activation.WorkflowServiceHostFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowServiceHostFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f6f3b-105"><see cref="T:System.ServiceModel.Activation.WorkflowServiceHostFactory" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="f6f3b-105">Initializes a new instance of the <see cref="T:System.ServiceModel.Activation.WorkflowServiceHostFactory" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateServiceHost">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.ServiceHostBase CreateServiceHost (string constructorString, Uri[] baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.ServiceHostBase CreateServiceHost(string constructorString, class System.Uri[] baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost(System.String,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateServiceHost (constructorString As String, baseAddresses As Uri()) As ServiceHostBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::ServiceHostBase ^ CreateServiceHost(System::String ^ constructorString, cli::array &lt;Uri ^&gt; ^ baseAddresses);" />
      <MemberSignature Language="F#" Value="override this.CreateServiceHost : string * Uri[] -&gt; System.ServiceModel.ServiceHostBase" Usage="workflowServiceHostFactory.CreateServiceHost (constructorString, baseAddresses)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceHostBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constructorString" Type="System.String" />
        <Parameter Name="baseAddresses" Type="System.Uri[]" />
      </Parameters>
      <Docs>
        <param name="constructorString"><span data-ttu-id="f6f3b-106">워크플로 서비스를 정의하는 워크플로 마크업 파일의 파일 이름 또는 워크플로 서비스 형식의 형식 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="f6f3b-106">The file name of the workflow markup file that defines the workflow service or the type name of the workflow service type.</span></span></param>
        <param name="baseAddresses"><span data-ttu-id="f6f3b-107">호스팅된 서비스의 기본 주소를 포함하는 <see cref="T:System.Uri" /> 형식의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="f6f3b-107">An array of type <see cref="T:System.Uri" /> that contains the base addresses for the hosted service.</span></span></param>
        <summary><span data-ttu-id="f6f3b-108">워크플로 마크업 파일의 파일 이름이나 워크플로 서비스 형식의 형식 이름 및 지정된 서비스의 기본 주소를 포함하는 문자열로 <see cref="T:System.ServiceModel.WorkflowServiceHost" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f6f3b-108">Creates a <see cref="T:System.ServiceModel.WorkflowServiceHost" /> from a string that contains either the file name of the workflow markup file or the type name of the workflow service type and the base address of the service specified.</span></span></summary>
        <returns><span data-ttu-id="f6f3b-109">워크플로 서비스와 연결된 <see cref="T:System.ServiceModel.ServiceHostBase" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f6f3b-109">A <see cref="T:System.ServiceModel.ServiceHostBase" /> object associated with the workflow service.</span></span> <span data-ttu-id="f6f3b-110">기본 구현에서는 지정된 기본 주소를 사용하는 <see cref="T:System.ServiceModel.WorkflowServiceHost" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="f6f3b-110">The default implementation returns a <see cref="T:System.ServiceModel.WorkflowServiceHost" /> object with the specified base addresses.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6f3b-111">`constructorString` 인수는 정규화된 워크플로 형식 이름이거나 <xref:System.ServiceModel.Activation.ServiceHostFactory> 지시문이 있는 .svc 파일에 선언된 워크플로 정의 파일의 상대 파일 경로일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f6f3b-111">The `constructorString` argument could be either a fully qualified workflow type name or it could be the relative file path of the workflow definition file declared in the .svc file in which <xref:System.ServiceModel.Activation.ServiceHostFactory> directives are placed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f6f3b-112">워크플로 정의와 규칙 정의를 연결하려면 .rules 확장명을 사용하여 워크플로 정의 파일과 같은 이름으로 규칙 정의 파일의 이름을 지정하고 워크플로 정의 파일과 같은 디렉터리에 해당 규칙 정의 파일을 넣습니다.</span><span class="sxs-lookup"><span data-stu-id="f6f3b-112">To associate a rule definition with a workflow definition, name the rule definition file the same name as the workflow definition file with a .rules extension and place it in same directory as the workflow definition file.</span></span> <span data-ttu-id="f6f3b-113">예를 들어 규칙 정의 파일 CalculatorServiceWorkflow.rules는 CalculatorServiceWorkflow.xoml과 같은 디렉터리에 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f6f3b-113">For example, the rules definition file CalculatorServiceWorkflow.rules must be in the same directory as CalculatorServiceWorkflow.xoml.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6f3b-114">다음은 워크플로 서비스 CalculatorServiceWorkflow에 대한 형식 기반 참조의 예입니다.</span><span class="sxs-lookup"><span data-stu-id="f6f3b-114">The following is an example of a type-based reference to the workflow service CalculatorServiceWorkflow.</span></span>  
  
```  
<%@ServiceHost language=c# Debug="true" Factory="System.ServiceModel.Activation.WorkflowServiceHostFactory" Service="CalculatorServiceWorkflow" %>  
```  
  
 <span data-ttu-id="f6f3b-115">다음은 워크플로 서비스 CalculatorServiceWorkflow에 대한 워크플로 정의 파일 참조의 예입니다.</span><span class="sxs-lookup"><span data-stu-id="f6f3b-115">The following is an example of a workflow definition file reference to the workflow service CalculatorServiceWorkflow.</span></span>  
  
```  
<%@ServiceHost language=c# Debug="true" Factory="System.ServiceModel.Activation.WorkflowServiceHostFactory" Service="CalculatorServiceWorkflow.xoml" %>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>