<Type Name="Chart" FullName="System.Web.UI.DataVisualization.Charting.Chart">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="10a79b47747f7afc4b055f7836ec2d24d05301aa" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30550897" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Chart : System.Web.UI.WebControls.DataBoundControl, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Chart extends System.Web.UI.WebControls.DataBoundControl implements class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataVisualization.Charting.Chart" />
  <TypeSignature Language="VB.NET" Value="Public Class Chart&#xA;Inherits DataBoundControl&#xA;Implements IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class Chart : System::Web::UI::WebControls::DataBoundControl, System::Web::UI::IPostBackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Load")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.DataVisualization.Charting.ChartWebDesigner, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DisplayName("Chart")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.DataVisualization.Charting.Chart), "ChartControl.ico")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:Chart runat=server&gt;&lt;Series&gt;&lt;{0}:Series Name="Series1"&gt;&lt;/{0}:Series&gt;&lt;/Series&gt;&lt;ChartAreas&gt;&lt;{0}:ChartArea Name="ChartArea1"&gt;&lt;/{0}:ChartArea&gt;&lt;/ChartAreas&gt;&lt;/{0}:Chart&gt;")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> 컨트롤의 루트 클래스로 사용됩니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 클래스는 모든 속성, 메서드 및 웹 차트 컨트롤의 이벤트를 노출합니다.  
  
 중요 한 속성을 두는 <xref:System.Web.UI.DataVisualization.Charting.Chart> 클래스는 <xref:System.Web.UI.DataVisualization.Charting.Chart.Series%2A> 및 <xref:System.Web.UI.DataVisualization.Charting.Chart.ChartAreas%2A> 속성, 컬렉션 속성은 둘 다 합니다. <xref:System.Web.UI.DataVisualization.Charting.Chart.Series%2A> 컬렉션 속성 저장소 <xref:System.Web.UI.DataVisualization.Charting.Series> 개체는 해당 데이터의 특성과 함께 표시 되는 데이터를 저장 하는 데 사용 됩니다. <xref:System.Web.UI.DataVisualization.Charting.Chart.ChartAreas%2A> 컬렉션 속성 저장소 <xref:System.Web.UI.DataVisualization.Charting.ChartArea> 축 집합 하나를 사용 하 여 하나 이상의 차트를 그리는 데 주로 사용 되는 개체입니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Chart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Chart();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 새 인스턴스를 만드는 데이 생성자를 사용할 수는 <xref:System.Web.UI.DataVisualization.Charting.Chart> 런타임 시 클래스입니다.  
  
 그러나 편의상 좋습니다 만드는 <xref:System.Web.UI.DataVisualization.Charting.Chart> 디자인 타임에 인스턴스.  
  
 이의 루트 개체는 <xref:System.Web.UI.DataVisualization.Charting.Chart> 제어 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AlignDataPointsByAxisLabel">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>해당 축 레이블을 사용하여 데이터 요소를 맞춥니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AlignDataPointsByAxisLabel">
      <MemberSignature Language="C#" Value="public void AlignDataPointsByAxisLabel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AlignDataPointsByAxisLabel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.AlignDataPointsByAxisLabel" />
      <MemberSignature Language="VB.NET" Value="Public Sub AlignDataPointsByAxisLabel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AlignDataPointsByAxisLabel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>해당 축 레이블을 사용하여 X축을 따라 데이터 요소를 맞춥니다. 여러 계열이 인덱싱되고 X 값이 문자열인 경우 적용할 수 있습니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlignDataPointsByAxisLabel">
      <MemberSignature Language="C#" Value="public void AlignDataPointsByAxisLabel (string series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AlignDataPointsByAxisLabel(string series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.AlignDataPointsByAxisLabel(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AlignDataPointsByAxisLabel (series As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AlignDataPointsByAxisLabel(System::String ^ series);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="series" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="series">데이터 요소 축 레이블을 사용하여 데이터 요소가 X축에 맞춰지는 계열을 쉼표로 구분한 목록입니다.</param>
        <summary>해당 축 레이블을 사용하여 X축을 따라 서로 다른 계열의 데이터 요소를 맞춥니다. 오름차순 정렬 순서를 사용하여 차트의 지정된 계열을 맞춥니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 해당 축 레이블을 사용 하 여 X 축 따라 다른 계열의 데이터 요소를에서 정렬 하는 데 사용 되 고 경우 적용 됩니다.  
  
-   여러 개의 계열이 표시 되 고 인덱싱됩니다. 즉, 모든 데이터 요소 있는 <xref:System.Web.UI.DataVisualization.Charting.DataPoint.XValue%2A> 0 또는 <xref:System.Web.UI.DataVisualization.Charting.Series.IsXValueIndexed%2A> 속성은 `true`합니다.  
  
-   모든 데이터 요소에 고유한 비어 있지 않은 축 레이블을 가지 자신의 <xref:System.Web.UI.DataVisualization.Charting.Series>합니다. 고유 하지 않습니다, 예외가 throw 됩니다.  
  
 이 상황은 매우 일반적인 데이터 바인딩 여러 계열의 만들 때 발생 하는 경우 및 `string` x 축 값에 값이 사용 됩니다.  
  
 두 가지 문제가 발생 여러 인덱싱할 때 사용 하 여 X 값을 설정 하 고 계열이 그려지는 `string` 값:  
  
-   동일한 문자열 X 값으로 다른 계열의 데이터 요소를에서 X 축에 동일한 인덱스에 그릴 보장할 수 없습니다.  
  
-   동일한 인덱스를 가진 다른 계열의 데이터 요소 축 레이블이 있을 경우에 첫 번째 계열의 데이터 요소에 대 한 축 레이블만 표시 됩니다.  
  
 기본적으로 포인트에 해당 계열에 저장 되는 순서 대로 표시 됩니다. 정렬 순서를 지정 하려면는 `AlignDataPointsByAxisLabel` 변수가 있는 메서드 오버 로드는 `sortingOrder` 매개 변수입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlignDataPointsByAxisLabel">
      <MemberSignature Language="C#" Value="public void AlignDataPointsByAxisLabel (System.Web.UI.DataVisualization.Charting.PointSortOrder sortingOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AlignDataPointsByAxisLabel(valuetype System.Web.UI.DataVisualization.Charting.PointSortOrder sortingOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.AlignDataPointsByAxisLabel(System.Web.UI.DataVisualization.Charting.PointSortOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AlignDataPointsByAxisLabel (sortingOrder As PointSortOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AlignDataPointsByAxisLabel(System::Web::UI::DataVisualization::Charting::PointSortOrder sortingOrder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortingOrder" Type="System.Web.UI.DataVisualization.Charting.PointSortOrder" />
      </Parameters>
      <Docs>
        <param name="sortingOrder">축 레이블에서 오름차순 정렬 순서가 사용되는지 또는 내림차순 정렬 순서가 사용되는지 여부를 나타내는 <see cref="T:System.Web.UI.DataVisualization.Charting.PointSortOrder" /> 개체로, 이전에 동일한 축 공간을 차지한 요소가 표시되는 순서를 결정합니다.</param>
        <summary>해당 축 레이블을 사용하여 데이터 요소를 맞춥니다. 지정된 정렬 순서를 사용하여 차트의 모든 계열이 맞춰집니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlignDataPointsByAxisLabel">
      <MemberSignature Language="C#" Value="public void AlignDataPointsByAxisLabel (string series, System.Web.UI.DataVisualization.Charting.PointSortOrder sortingOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AlignDataPointsByAxisLabel(string series, valuetype System.Web.UI.DataVisualization.Charting.PointSortOrder sortingOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.AlignDataPointsByAxisLabel(System.String,System.Web.UI.DataVisualization.Charting.PointSortOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AlignDataPointsByAxisLabel (series As String, sortingOrder As PointSortOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AlignDataPointsByAxisLabel(System::String ^ series, System::Web::UI::DataVisualization::Charting::PointSortOrder sortingOrder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="series" Type="System.String" />
        <Parameter Name="sortingOrder" Type="System.Web.UI.DataVisualization.Charting.PointSortOrder" />
      </Parameters>
      <Docs>
        <param name="series">축 레이블을 기준으로 맞춰야 할 계열을 쉼표로 구분한 목록입니다.</param>
        <param name="sortingOrder">축 레이블에서 오름차순 정렬 순서가 사용되는지 또는 내림차순 정렬 순서가 사용되는지 여부를 결정하는 <see cref="T:System.Web.UI.DataVisualization.Charting.PointSortOrder" /> 열거형 값으로, 이전에 동일한 축 공간을 차지한 요소가 표시되는 순서를 결정합니다.</param>
        <summary>해당 축 레이블을 사용하여 데이터 요소를 맞춥니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 해당 축 레이블을 사용 하 여 X 축 따라 다른 계열의 데이터 요소를에서 정렬 하는 데 사용 되 고 경우 적용 됩니다.  
  
-   여러 개의 계열이 표시 되 고 인덱싱됩니다. 즉, 모든 데이터 요소 있는 <xref:System.Web.UI.DataVisualization.Charting.DataPoint.XValue%2A> 0 또는 <xref:System.Web.UI.DataVisualization.Charting.Series.IsXValueIndexed%2A> 속성은 `true`합니다.  
  
-   모든 데이터 요소에 고유한 비어 있지 않은 축 레이블을 가지 자신의 <xref:System.Web.UI.DataVisualization.Charting.Series>합니다. 고유 하지 않습니다, 예외가 throw 됩니다.  
  
 이 상황은 매우 일반적인 데이터 바인딩 여러 계열의 만들 때 발생 하는 경우 및 `string` x 축 값에 값이 사용 됩니다.  
  
 두 가지 문제가 발생 여러 인덱싱할 때 사용 하 여 X 값을 설정 하 고 계열이 그려지는 `string` 값:  
  
-   동일한 문자열 X 값으로 다른 계열의 데이터 요소를에서 X 축에 동일한 인덱스에 그릴 보장할 수 없습니다.  
  
-   동일한 인덱스를 가진 다른 계열의 데이터 요소 축 레이블이 있을 경우에 첫 번째 계열의 데이터 요소에 대 한 축 레이블만 표시 됩니다.  
  
 기본적으로 포인트에 해당 계열에 저장 되는 순서 대로 표시 됩니다. 정렬 순서를 지정 하려면는 `AlignDataPointsByAxisLabel` 변수가 있는 메서드 오버 로드는 `sortingOrder` 매개 변수입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternateText">
      <MemberSignature Language="C#" Value="public string AlternateText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AlternateText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.AlternateText" />
      <MemberSignature Language="VB.NET" Value="Public Property AlternateText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AlternateText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>차트 이미지를 사용할 수 없을 때 <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> 컨트롤에 표시할 대체 텍스트를 가져오거나 설정합니다.</summary>
        <value>차트 이미지를 사용할 수 없을 때 <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> 컨트롤에 표시할 대체 텍스트를 나타내는 <see langword="string" /> 값입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Annotations">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.AnnotationCollection Annotations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.AnnotationCollection Annotations" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.Annotations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Annotations As AnnotationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::AnnotationCollection ^ Annotations { System::Web::UI::DataVisualization::Charting::AnnotationCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.AnnotationCollectionEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.AnnotationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>차트 주석을 저장하는 데 사용할 <see cref="T:System.Web.UI.DataVisualization.Charting.AnnotationCollection" /> 개체를 가져오거나 설정합니다.</summary>
        <value>차트 주석을 저장하는 데 사용되는 <see cref="T:System.Web.UI.DataVisualization.Charting.AnnotationCollection" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 모든 차트 주석이이 컬렉션 속성에 저장 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AntiAliasing">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.AntiAliasingStyles AntiAliasing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.AntiAliasingStyles AntiAliasing" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.AntiAliasing" />
      <MemberSignature Language="VB.NET" Value="Public Property AntiAliasing As AntiAliasingStyles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::AntiAliasingStyles AntiAliasing { System::Web::UI::DataVisualization::Charting::AntiAliasingStyles get(); void set(System::Web::UI::DataVisualization::Charting::AntiAliasingStyles value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.DataVisualization.Charting.AntiAliasingStyles), "All")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.FlagsEnumUITypeEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.AntiAliasingStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>텍스트와 그래픽을 그릴 때 앤티앨리어싱을 사용할지 여부를 결정하는 값을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.AntiAliasingStyles" /> 열거형 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 앤티앨리어싱 중간 색으로 픽셀에 패딩 하 여 "거칠게" 앨리어싱은 및 사각형으로 그려지지 않는 차트에 대 한 가장자리 다듬는 특히 효과적입니다. 예를 들어 앤티앨리어싱 꺾은선형 차트 및 원형 차트를 매우 효율적 이지만 바에 대 한 같이 효과적이 지 않습니다 및 세로 막대형 차트입니다.  
  
 앤티 앨리어싱 예: 사각형, 원 및 기타 텍스트 및/또는 그래픽 기본 형식에 적용할 수 있습니다.  
  
 참고는 앤티앨리어싱 성능이 저하 될 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyPaletteColors">
      <MemberSignature Language="C#" Value="public void ApplyPaletteColors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyPaletteColors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.ApplyPaletteColors" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyPaletteColors ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyPaletteColors();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>런타임에서 프로그래밍 방식으로 액세스할 수 있도록 자동으로 할당된 계열과 데이터 요소 색을 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때는 <xref:System.Web.UI.DataVisualization.Charting.Chart> 색은 런타임에 자동으로 할당 됩니다가 색을 차트의 렌더링 될 때; 시간 전에 수를 알 수 있는 방법이 `Color` 자동으로 할당된 된 값의 속성은 반환 <xref:System.Drawing.Color.Empty> 이 이번에 있습니다.  
  
 호출 하는 경우는 <xref:System.Web.UI.DataVisualization.Charting.Chart.ApplyPaletteColors%2A> 메서드를 계열과 데이터 요소에 대 한 색이 설정 되며, 프로그래밍 방식으로 액세스할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "White")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> 개체의 배경색을 가져오거나 설정합니다.</summary>
        <value>차트 개체의 배경색을 나타내는 <see cref="T:System.Drawing.Color" /> 값입니다. 기본 색상은 <see cref="System.Drawing.Color.White" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 유효한 ARGB (알파, 빨간색, 녹색, 파랑) 값이 속성을 설정할 수 있습니다. 위해는 <xref:System.Web.UI.DataVisualization.Charting.Chart> 개체, 알파 구성 요소 255이 아닌 값으로 설정할 수 없습니다. 또한 즉에 대 한는 <xref:System.Web.UI.DataVisualization.Charting.Chart> 개체만 <xref:System.Drawing.Color.Transparent%2A> 값을 사용할 수 없습니다.  
  
 <xref:System.Web.UI.DataVisualization.Charting.Chart.BackColor%2A> 값의 첫 번째 색 배경 그라데이션 색을 사용 하는 경우에 사용 됩니다.  
  
 알파 값은 색의 불투명도 제어합니다. "투명 하 게"이이 색을 설정 하는 경우-즉, 알파 값이 0 사용 하는 경우-색 없음 제목 배경에 할당 됩니다. 결과적으로, 배경이 투명 하 게 됩니다.  
  
 다음 표에서 나타냅니다는 <xref:System.Web.UI.DataVisualization.Charting.Series> 그라데이션을 지 원하는 형식.  
  
|계열 형식|2D|3D|  
|------------------|--------|--------|  
|가로 막대형|X|-|  
|상자 그림|X|X|  
|거품형|-|-|  
|원통형|X|X|  
|열|X|X|  
|도넛형|X|-|  
|오차 막대|-|-|  
|빠른 선|-|-|  
|빠른 지점|-|-|  
|깔때기형|X|X|  
|Gantt|X|-|  
|카 기|-|-|  
|줄|-|-|  
|원형|X|-|  
|요소|-|-|  
|요소 및 그림|X|-|  
|극좌표형|-|-|  
|피라미드형|X|X|  
|방사형|X|X|  
|범위 세로 막대형|X|-|  
|렌 코|X|-|  
|스플라인|-|-|  
|스플라인 영역 영역|X|-|  
|스플라인 범위|X|-|  
|누적 영역형|X|-|  
|누적된 영역형 100|X|-|  
|누적 가로 막대형|X|-|  
|누적 가로 막대형 100|X|-|  
|누적 세로 막대형|X|-|  
|누적 세로 막대형 100|X|-|  
|계단식 꺾은선형|-|-|  
|주식형|-|-|  
|삼선전환|X|-|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackGradientStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.GradientStyle BackGradientStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.GradientStyle BackGradientStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BackGradientStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BackGradientStyle As GradientStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::GradientStyle BackGradientStyle { System::Web::UI::DataVisualization::Charting::GradientStyle get(); void set(System::Web::UI::DataVisualization::Charting::GradientStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.GradientEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.GradientStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> 컨트롤의 배경 그라데이션 방향을 가져오거나 설정합니다. 또한 그라데이션의 사용 여부를 결정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.GradientStyle" /> 열거형입니다. 기본값은 <see cref="F:System.Web.UI.DataVisualization.Charting.GradientStyle.None" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.DataVisualization.Charting.Chart.BackGradientStyle%2A> 속성을 확인 여부는 <xref:System.Web.UI.DataVisualization.Charting.Chart> 컨트롤에는 그라데이션, 표시 되 고 하나는 그라데이션의 방향을 결정 하는 데 사용 됩니다.  
  
 사용 가능한 패턴 목록은 대 한 참조는 <xref:System.Web.UI.DataVisualization.Charting.GradientStyle> 열거형입니다.  
  
 그라데이션 색 사용 하려면:  
  
 기본 색을 차트 배경의 설정는 <xref:System.Web.UI.DataVisualization.Charting.Chart.BackColor%2A> 속성입니다.  
  
 보조 색을 차트 배경의 설정는 <xref:System.Web.UI.DataVisualization.Charting.Chart.BackSecondaryColor%2A> 속성입니다.  
  
 이 설정 <xref:System.Web.UI.DataVisualization.Charting.Chart.BackGradientStyle%2A> 속성 원하는 그라데이션 스타일을 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackHatchStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartHatchStyle BackHatchStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartHatchStyle BackHatchStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BackHatchStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BackHatchStyle As ChartHatchStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartHatchStyle BackHatchStyle { System::Web::UI::DataVisualization::Charting::ChartHatchStyle get(); void set(System::Web::UI::DataVisualization::Charting::ChartHatchStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.HatchStyleEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartHatchStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> 컨트롤의 빗살 무늬 스타일을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.ChartHatchStyle" /> 열거형입니다. 기본값은 <see cref="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.None" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.ChartHatchStyle> 열거형 형식의 브러시를 사용한 빗살 무늬 지정 <xref:System.Drawing.Drawing2D.HatchBrush>합니다. 빗살 무늬 배경색 및 배경 위에 그려집니다 선으로 구성 됩니다.  
  
 사용 가능한 해칭 스타일이 목록이 대 한 참조는 <xref:System.Web.UI.DataVisualization.Charting.ChartHatchStyle> 열거형입니다.  
  
 **참고** 빗살 무늬 선의 색에 따라 결정 되는 <xref:System.Web.UI.DataVisualization.Charting.Chart.BackSecondaryColor%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImage">
      <MemberSignature Language="C#" Value="public string BackImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BackImage" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BackImage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.UrlValueEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> 컨트롤의 배경 이미지를 가져오거나 설정합니다.</summary>
        <value>이미지 파일의 URL을 나타내는 <see langword="string" /> 값입니다. 기본값은 빈 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성의 경로 대 한 배경 이미지를 정의 <xref:System.Web.UI.DataVisualization.Charting.Chart> 범례 고 절대 또는 상대 URL이 될 수 있습니다.  
  
 사용 하 여 이미지를 배치 하려면는 <xref:System.Web.UI.DataVisualization.Charting.Chart.BackImageAlignment%2A> 및 <xref:System.Web.UI.DataVisualization.Charting.Chart.BackImageWrapMode%2A> 속성입니다.  
  
 설정 하 여 "투명"으로 이미지에 표시 되는 색상 중 하나로 지정할 수도 있습니다는 <xref:System.Web.UI.DataVisualization.Charting.Chart.BackImageTransparentColor%2A> 속성입니다.  
  
 이미지는 아이콘을 포함 하는.NET Framework에서 지 원하는 모든 유효한 그래픽 파일에서 가져올 수 있습니다.  
  
 배경 이미지 그라데이션 색과 같은 다른 배경 속성 보다 우선합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageAlignment">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle BackImageAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle BackImageAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BackImageAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImageAlignment As ChartImageAlignmentStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartImageAlignmentStyle BackImageAlignment { System::Web::UI::DataVisualization::Charting::ChartImageAlignmentStyle get(); void set(System::Web::UI::DataVisualization::Charting::ChartImageAlignmentStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="F:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Unscaled" /> 그리기 모드에 사용되는 배경 이미지 맞춤을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle" /> 열거형 값입니다. 기본값은 <see cref="F:System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle.TopLeft" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에 대 한 배경 이미지의 맞춤을 결정는 <xref:System.Web.UI.DataVisualization.Charting.Chart> ; 것 때만 적용 됩니다.는 <xref:System.Web.UI.DataVisualization.Charting.Chart.BackImageWrapMode%2A> 속성이 <xref:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Unscaled>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageTransparentColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackImageTransparentColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackImageTransparentColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BackImageTransparentColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImageTransparentColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackImageTransparentColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>투명하게 표시할 <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> 컨트롤의 색을 가져오거나 설정합니다.</summary>
        <value>차트 이미지를 그릴 때 투명하게 표시할 <see cref="T:System.Drawing.Color" /> 값입니다. 기본값은 <see cref="F:System.Drawing.Color.Empty" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageWrapMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartImageWrapMode BackImageWrapMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartImageWrapMode BackImageWrapMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BackImageWrapMode" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImageWrapMode As ChartImageWrapMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartImageWrapMode BackImageWrapMode { System::Web::UI::DataVisualization::Charting::ChartImageWrapMode get(); void set(System::Web::UI::DataVisualization::Charting::ChartImageWrapMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartImageWrapMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> 컨트롤의 배경 이미지에 대한 그리기 모드를 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode" /> 열거형 값입니다. 기본값은 <see cref="F:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Tile" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에서 이미지 표시 방법을 예를 들어 바둑판식 배열, 배율 조정 등을 결정 합니다.  
  
 이미지의 크기가 조정 되는 경우 차트의 범위 내에 맞게 늘여 집니다. 이미지를 바둑판식으로 배열 하는 경우 차트의 왼쪽 위 모퉁이에서 시작 하 여 반복적으로 그려집니다.  
  
 사용 가능한 래핑 모드에 대 한 자세한 내용은 참조는 <xref:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode> 열거형 항목입니다.  
  
 경우는 <xref:System.Web.UI.DataVisualization.Charting.Chart.BackImageWrapMode%2A> 속성이로 설정 되어 <xref:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Unscaled>, 이미지를 그릴 위치 따라 사용자가 <xref:System.Web.UI.DataVisualization.Charting.Chart.BackImageAlignment%2A> 속성을 설정 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackSecondaryColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackSecondaryColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackSecondaryColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BackSecondaryColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackSecondaryColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackSecondaryColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>차트 배경의 보조 색을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Drawing.Color" /> 값입니다. 기본값은 <see cref="F:System.Drawing.Color.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.Chart.BackSecondaryColor%2A> 속성 결정 되는 여러 보조 배경색 <xref:System.Web.UI.DataVisualization.Charting.Chart> 개체, 및 그라데이션 색을 적용할 때 사용 됩니다.  
  
 설정할 수 있습니다 <xref:System.Web.UI.DataVisualization.Charting.Chart.BackSecondaryColor%2A> 유효한 ARGB (알파, 빨간색, 녹색, 파랑) 값입니다.  
  
 해칭에 사용 되는 경우는 <xref:System.Web.UI.DataVisualization.Charting.Chart.BackSecondaryColor%2A> 속성은 차트에 줄무늬 선의 색을 결정 합니다.  
  
 차트의 배경에 대 한 그라데이션 색 사용 하려면:  
  
-   기본 색으로 설정 된 <xref:System.Web.UI.DataVisualization.Charting.Chart.BackColor%2A> 속성입니다.  
  
-   보조 색으로 설정 된 <xref:System.Web.UI.DataVisualization.Charting.Chart.BackSecondaryColor%2A> 속성입니다.  
  
-   설정의 <xref:System.Web.UI.DataVisualization.Charting.Chart.BackGradientStyle%2A> 속성 원하는 그라데이션 스타일을 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BorderColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BorderColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BorderColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>차트 테두리의 색을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Drawing.Color" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 가져오거나 설정할 테두리 색을 사용 하 여 <xref:System.Web.UI.DataVisualization.Charting.Chart.BorderlineColor%2A> 대신 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderlineColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BorderlineColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderlineColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BorderlineColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderlineColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BorderlineColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "White")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>전체 차트 이미지 테두리 색을 가져오거나 설정합니다.</summary>
        <value>전체 차트 이미지 테두리 색을 나타내는 <see cref="T:System.Drawing.Color" />입니다. 기본값은 <see cref="F:System.Drawing.Color.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 유효한 ARGB 값 (알파, 빨간색, 녹색, 파란색 값)이이 속성을 설정할 수 있습니다.  
  
 이 속성은 비슷합니다는 <xref:System.Web.UI.DataVisualization.Charting.Chart.BorderColor%2A> 속성, 유일한 차이점은 하는 <xref:System.Web.UI.DataVisualization.Charting.Chart.BorderColor%2A> 속성이 표시 되지 않으면 속성 창에서 디자인 타임에 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderlineDashStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartDashStyle BorderlineDashStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartDashStyle BorderlineDashStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BorderlineDashStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderlineDashStyle As ChartDashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartDashStyle BorderlineDashStyle { System::Web::UI::DataVisualization::Charting::ChartDashStyle get(); void set(System::Web::UI::DataVisualization::Charting::ChartDashStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartDashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>전체 차트 이미지 테두리 선의 스타일을 가져오거나 설정합니다.</summary>
        <value>차트 이미지의 테두리 선 스타일을 결정하는 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartDashStyle" /> 열거형 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에 차트 이미지의 테두리 선 사용 되는 선 스타일을 결정 합니다. 단색, 점선 등 줄 수 있습니다.  
  
 자세한 스타일 옵션에 대 한 참조는 <xref:System.Web.UI.DataVisualization.Charting.ChartDashStyle> 열거형 항목입니다.  
  
 이 속성은 비슷합니다는 <xref:System.Web.UI.DataVisualization.Charting.Chart.BorderStyle%2A> 속성, 유일한 차이점은 하는 <xref:System.Web.UI.DataVisualization.Charting.Chart.BorderStyle%2A> 속성이 표시 되지 않으면 속성 창에서 디자인 타임에 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderlineWidth">
      <MemberSignature Language="C#" Value="public int BorderlineWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BorderlineWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BorderlineWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderlineWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BorderlineWidth { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>전체 차트 이미지의 테두리 선 너비를 가져오거나 설정합니다.</summary>
        <value>차트 이미지 테두리 선의 너비(픽셀)를 결정하는 <see langword="integer" /> 값입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderSkin">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.BorderSkin BorderSkin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.BorderSkin BorderSkin" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BorderSkin" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderSkin As BorderSkin" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::BorderSkin ^ BorderSkin { System::Web::UI::DataVisualization::Charting::BorderSkin ^ get(); void set(System::Web::UI::DataVisualization::Charting::BorderSkin ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.LegendConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.BorderSkin</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.DataVisualization.Charting.BorderSkin" /> 개체를 가져오거나 설정합니다. 이 개체는 <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> 컨트롤의 테두리 스킨 적용 기능을 제공합니다.</summary>
        <value>차트 컨트롤에 대한 테두리 스킨 기능을 제공하는 <see cref="T:System.Web.UI.DataVisualization.Charting.BorderSkin" />개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하 여 차트의 테두리 스킨을 지정할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::BorderStyle BorderStyle { System::Web::UI::WebControls::BorderStyle get(); void set(System::Web::UI::WebControls::BorderStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />의 테두리 스타일을 가져오거나 설정합니다.</summary>
        <value>차트의 <see cref="T:System.Web.UI.WebControls.BorderStyle" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderWidth">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit BorderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit BorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BorderWidth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BorderWidth As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit BorderWidth { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>차트 테두리의 너비를 가져오거나 설정합니다.</summary>
        <value>차트의 테두리 두께(픽셀)를 결정하는 <see langword="integer" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 를 가져오거나 테두리 스타일을 설정 하려면 사용 하 여 <xref:System.Web.UI.DataVisualization.Charting.Chart.BorderlineWidth%2A> 대신 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildNumber">
      <MemberSignature Language="C#" Value="public string BuildNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BuildNumber" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.BuildNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BuildNumber As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BuildNumber { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> 컨트롤의 빌드 번호를 가져옵니다.</summary>
        <value>빌드 번호를 나타내는 <see langword="string" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartAreas">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartAreaCollection ChartAreas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.ChartAreaCollection ChartAreas" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.ChartAreas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChartAreas As ChartAreaCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartAreaCollection ^ ChartAreas { System::Web::UI::DataVisualization::Charting::ChartAreaCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartCollectionEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartAreaCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.DataVisualization.Charting.ChartAreaCollection" /> 개체를 저장하는 데 사용되는 읽기 전용 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> 개체를 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.ChartAreaCollection" /> 개체를 저장하는 데 사용되는 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 컬렉션 속성을 사용 하면 액세스는 <xref:System.Web.UI.DataVisualization.Charting.ChartAreaCollection> 개체를 저장 하 <xref:System.Web.UI.DataVisualization.Charting.ChartArea> 개체 하 고 메서드 및 컬렉션을 조작 하는 데 사용 되는 속성을 제공 합니다.  
  
 <xref:System.Web.UI.DataVisualization.Charting.ChartArea> 개체는 하나 이상의 차트를 그리는 데 사용 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ImageMapEventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ImageMapEventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.DataVisualization.Charting.Chart.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As ImageMapEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ImageMapEventHandler ^ Click;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ImageMapEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Web.UI.DataVisualization.Charting.DataPoint.PostBackValue" /> 컨트롤의 <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />에 의해 정의된 활성 이미지 맵 영역을 클릭할 때 발생합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compression">
      <MemberSignature Language="C#" Value="public int Compression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Compression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.Compression" />
      <MemberSignature Language="VB.NET" Value="Public Property Compression As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Compression { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>차트 이미지의 압축 양을 가져오거나 설정합니다.</summary>
        <value>전체 차트 이미지에 대한 압축 양을 나타내는 <see langword="integer" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 압축은; 백분율로 표현 됩니다. 예를 들어 50% 압축을 사용 하려면 50을이 속성을 설정 합니다.  
  
 압축이 사용 되는 모든 렌더링 방법에 따라 결정 된 대로 <xref:System.Web.UI.DataVisualization.Charting.Chart.RenderType%2A> 속성으로 지정 된 JPEG 이미지에 대해서만 <xref:System.Web.UI.DataVisualization.Charting.ChartImageType.Jpeg> 열거형 값입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentImageLocation">
      <MemberSignature Language="C#" Value="public string CurrentImageLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentImageLocation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.CurrentImageLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentImageLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrentImageLocation { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> 컨트롤이 렌더링될 현재 이미지의 URL을 가져옵니다.</summary>
        <value>현재 차트 이미지의 URL을 나타내는 <see langword="string" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우에이 속성이 적용 되지 않습니다는 <xref:System.Web.UI.DataVisualization.Charting.Chart.ImageStorageMode%2A> 속성이 <xref:System.Web.UI.DataVisualization.Charting.ImageStorageMode.UseHttpHandler?displayProperty=nameWithType>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Customize">
      <MemberSignature Language="C#" Value="public event EventHandler Customize;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Customize" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.DataVisualization.Charting.Chart.Customize" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Customize As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Customize;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>차트 이미지를 그리기 바로 전에 발생합니다. 모든 차트 데이터를 사용할 수 있으며 모든 차트 속성이 설정되었습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트에 두 개의 고유한 기능이 있습니다.  
  
-   모든 차트 데이터를 사용할 수 있습니다. 즉, 계열 및 데이터 지점을 채워집니다. 데이터를 검사할 수 있습니다 및 차트를 끄는 직전 조정할 수 때문에 데이터 바인딩 사용 하는 경우 특히 유용 합니다.  
  
-   모든 차트 속성 "자동"으로 설정 된 해당 속성을 포함 하 여 설정한 합니다. 즉, "Auto" 속성 이제 자동으로 계산 된 값을 저장 하 고 검사 하 고 수정할 수 전에 그려지는 차트. 예로는 <xref:System.Web.UI.DataVisualization.Charting.Axis.Minimum%2A> 및 <xref:System.Web.UI.DataVisualization.Charting.Axis.Maximum%2A> 의 속성은 <xref:System.Web.UI.DataVisualization.Charting.Axis> 클래스입니다.  
  
 이 이벤트를 사용 하 여 수정 또는 그리기 전에 차트 이미지를 사용자 지정 합니다.  
  
 차트 영역 변경 하는 경우와 같은 축 눈금에 차트 영역 속성 다시 계산 해야 올바르게 차트를 렌더링 하는 데 합니다. 차트를 다시 계산 하려면 호출 된 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.RecalculateAxesScale%2A> 수정 후 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomizeLegend">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.DataVisualization.Charting.CustomizeLegendEventArgs&gt; CustomizeLegend;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.DataVisualization.Charting.CustomizeLegendEventArgs&gt; CustomizeLegend" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.DataVisualization.Charting.Chart.CustomizeLegend" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CustomizeLegend As EventHandler(Of CustomizeLegendEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::DataVisualization::Charting::CustomizeLegendEventArgs ^&gt; ^ CustomizeLegend;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.DataVisualization.Charting.CustomizeLegendEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>차트 범례를 그리기 바로 전에 발생합니다. 이 이벤트를 사용하여 차트 범례 항목을 사용자 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.Chart.CustomizeLegend> 이벤트는 주로 그리기 직전에 범례를 사용자 지정 하는 데 사용 됩니다. 기본 및 사용자 지정 범례 항목 제거 되거나 수정 될 수 있으며 사용자 지정 항목을 추가할 수도 있습니다. 또한 범례 항목의 순서를 변경할 수 있습니다.  
  
 차트 이미지 sender 인수를 사용 하 여 끄는 하기 전에 수정할 수도 있습니다.  
  
 기본 범례 항목은 데이터 계열 또는 데이터 요소에 대해 생성 된 항목 이지만 사용자 지정 범례 항목은 차트 데이터에 어떤 식으로든에서 연결 되지 않았습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomizeMapAreas">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs&gt; CustomizeMapAreas;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs&gt; CustomizeMapAreas" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.DataVisualization.Charting.Chart.CustomizeMapAreas" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CustomizeMapAreas As EventHandler(Of CustomizeMapAreasEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::DataVisualization::Charting::CustomizeMapAreasEventArgs ^&gt; ^ CustomizeMapAreas;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>차트 이미지 맵이 렌더링되기 바로 전에 발생합니다. 이 이벤트를 사용하여 맵 영역 항목을 사용자 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs.MapAreaItems%2A> 의 속성은 <xref:System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs> 클래스에 사용할 수 있습니다.  
  
-   삭제 또는 수정은 chart 개체로;에 대 한 자동으로 생성 된 맵 항목 모든 데이터 요소, 계열, 범례 항목 또는 줄무늬 개체는 비어 있지 않은 `Url`, `MapAreaAttributes` 또는 `ToolTip` 속성 관련된 맵 영역 개체를 갖게 됩니다.  
  
-   사용자 정의 셰이프 및 좌표에 있는 사용자 지정 맵 영역을 추가 합니다.  
  
> [!NOTE]
>  형식의 sender 인수 <xref:System.Web.UI.DataVisualization.Charting.Chart> 읽기 전용입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DataBindCrossTable">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>데이터는 차트를 테이블에 바인딩하며 지정된 열의 고유한 값마다 1개의 계열이 만들어집니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DataBindCrossTable">
      <MemberSignature Language="C#" Value="public void DataBindCrossTable (System.Collections.IEnumerable dataSource, string seriesGroupByField, string xField, string yFields, string otherFields);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindCrossTable(class System.Collections.IEnumerable dataSource, string seriesGroupByField, string xField, string yFields, string otherFields) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.DataBindCrossTable(System.Collections.IEnumerable,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBindCrossTable (dataSource As IEnumerable, seriesGroupByField As String, xField As String, yFields As String, otherFields As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBindCrossTable(System::Collections::IEnumerable ^ dataSource, System::String ^ seriesGroupByField, System::String ^ xField, System::String ^ yFields, System::String ^ otherFields);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="seriesGroupByField" Type="System.String" />
        <Parameter Name="xField" Type="System.String" />
        <Parameter Name="yFields" Type="System.String" />
        <Parameter Name="otherFields" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource">차트가 바인딩된 데이터 소스입니다.</param>
        <param name="seriesGroupByField">데이터를 계열로 그룹화하는 데 사용되는 필드의 이름입니다.</param>
        <param name="xField">X 값에 대한 필드의 이름입니다.</param>
        <param name="yFields">쉼표로 구분된 Y 값에 대한 필드 이름 목록입니다.</param>
        <param name="otherFields">바인딩할 수 있는 다른 데이터 요소 속성입니다.</param>
        <summary>데이터는 차트를 테이블에 바인딩하며 지정된 열의 고유한 값마다 1개의 계열이 만들어집니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 계열에 있는 고유 값의 수에 따라 차트에 자동으로 추가 됩니다는 주어진 `seriesGroupByField` 데이터 원본의 열 계열 만들기는 열 그룹화에 따라 달라 집니다는 즉, 합니다.  
  
 데이터 원본 수는 <xref:System.Data.OleDb.OleDbDataReader>, <xref:System.Data.SqlClient.SqlDataReader> 또는 <xref:System.Data.DataView> 개체입니다. 구현 하는 모든 컬렉션은 <xref:System.Collections.IEnumerable> 인터페이스를 사용할 수 있습니다.  
  
 다른 데이터 요소 외에 X 및 Y 값을 바인딩할 수 있습니다. 형식은: PointProperty = 필드 [{형식이}] [, PointProperty = 필드 [{형식이}]]. 예: "도구 설명 가격 {C1} Href = WebSiteName =".  
  
이러한 데이터 요소 속성은 다음과 같습니다. 

- <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.AxisLabel%2A?displayProperty=nameWithType>
- <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.ToolTip%2A?displayProperty=nameWithType>
- <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.Url%2A?displayProperty=nameWithType>
- <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.PostBackValue%2A?displayProperty=nameWithType>
- <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.Label%2A?displayProperty=nameWithType>
- <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.LegendText%2A?displayProperty=nameWithType>
- <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.LegendToolTip%2A?displayProperty=nameWithType>
- <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.CustomProperties%2A?displayProperty=nameWithType>를 사용자 지정 속성의 이름입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindCrossTable">
      <MemberSignature Language="C#" Value="public void DataBindCrossTable (System.Collections.IEnumerable dataSource, string seriesGroupByField, string xField, string yFields, string otherFields, System.Web.UI.DataVisualization.Charting.PointSortOrder sortingOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindCrossTable(class System.Collections.IEnumerable dataSource, string seriesGroupByField, string xField, string yFields, string otherFields, valuetype System.Web.UI.DataVisualization.Charting.PointSortOrder sortingOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.DataBindCrossTable(System.Collections.IEnumerable,System.String,System.String,System.String,System.String,System.Web.UI.DataVisualization.Charting.PointSortOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBindCrossTable (dataSource As IEnumerable, seriesGroupByField As String, xField As String, yFields As String, otherFields As String, sortingOrder As PointSortOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBindCrossTable(System::Collections::IEnumerable ^ dataSource, System::String ^ seriesGroupByField, System::String ^ xField, System::String ^ yFields, System::String ^ otherFields, System::Web::UI::DataVisualization::Charting::PointSortOrder sortingOrder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="seriesGroupByField" Type="System.String" />
        <Parameter Name="xField" Type="System.String" />
        <Parameter Name="yFields" Type="System.String" />
        <Parameter Name="otherFields" Type="System.String" />
        <Parameter Name="sortingOrder" Type="System.Web.UI.DataVisualization.Charting.PointSortOrder" />
      </Parameters>
      <Docs>
        <param name="dataSource">차트가 바인딩된 데이터 소스입니다.</param>
        <param name="seriesGroupByField">데이터를 계열로 그룹화하는 데 사용되는 필드의 이름입니다.</param>
        <param name="xField">X 값에 대한 필드의 이름입니다.</param>
        <param name="yFields">쉼표로 구분된 Y 값에 대한 필드 이름 목록입니다.</param>
        <param name="otherFields">바인딩할 수 있는 다른 데이터 요소 속성입니다.</param>
        <param name="sortingOrder">계열이 그룹 필드 값에 따라 지정된 순서로 정렬됩니다.</param>
        <summary>데이터는 차트를 테이블에 바인딩하며 지정된 열의 고유한 값마다 1개의 계열이 만들어집니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 계열에 있는 고유 값의 수에 따라 차트에 자동으로 추가 됩니다는 주어진 `seriesGroupByField` 데이터 원본의 열 계열 만들기는 열 그룹화에 따라 달라 집니다는 즉, 합니다.  
  
 데이터 원본 수는 <xref:System.Data.OleDb.OleDbDataReader>, <xref:System.Data.SqlClient.SqlDataReader> 또는 <xref:System.Data.DataView> 개체입니다.  
  
 구현 하는 모든 컬렉션은 <xref:System.Collections.IEnumerable> 인터페이스를 사용할 수 있습니다.  
  
 다른 데이터 요소 외에 X 및 Y 값을 바인딩할 수 있습니다. 형식은: PointProperty = 필드 [{형식이}] [, PointProperty = 필드 [{형식이}]]. 예: "도구 설명 가격 {C1} Href = WebSiteName =".  
  
 이러한 데이터 요소 속성의 목록은 다음과 같습니다: <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.AxisLabel%2A>, <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.ToolTip%2A>, <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.Url%2A>, <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.Label%2A>, <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.LegendText%2A>, <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.LegendToolTip%2A> 및 <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.CustomProperties%2A>, 사용자 지정 속성의 이름입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DataBindTable">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>계열 데이터를 자동으로 만들고 지정된 데이터 테이블에 바인딩합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DataBindTable">
      <MemberSignature Language="C#" Value="public void DataBindTable (System.Collections.IEnumerable dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindTable(class System.Collections.IEnumerable dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.DataBindTable(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBindTable (dataSource As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBindTable(System::Collections::IEnumerable ^ dataSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="dataSource">임의의 <see cref="T:System.Collections.IEnumerable" /> 개체일 수 있는 데이터 소스입니다.</param>
        <summary>계열 데이터를 자동으로 만들고 지정된 데이터 테이블에 바인딩합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 테이블의 각 열에는 열당 하나의 계열과 계열에 대 한 Y 값이 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindTable">
      <MemberSignature Language="C#" Value="public void DataBindTable (System.Collections.IEnumerable dataSource, string xField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindTable(class System.Collections.IEnumerable dataSource, string xField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.DataBindTable(System.Collections.IEnumerable,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBindTable (dataSource As IEnumerable, xField As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBindTable(System::Collections::IEnumerable ^ dataSource, System::String ^ xField);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="xField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource">임의의 <see cref="T:System.Collections.IEnumerable" /> 개체일 수 있는 데이터 소스입니다.</param>
        <param name="xField">계열 X 값에 사용되는 필드의 이름입니다.</param>
        <summary>계열 데이터를 자동으로 만들고 지정된 데이터 테이블에 바인딩하며, 선택적으로 X 값을 채웁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 테이블의 각 열에는 열당 하나의 계열과 계열에 대 한 Y 값이 됩니다.  
  
 계열의 X 값 필드를 제공할 수도 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataManipulator">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataManipulator DataManipulator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.DataManipulator DataManipulator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.DataManipulator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataManipulator As DataManipulator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::DataManipulator ^ DataManipulator { System::Web::UI::DataVisualization::Charting::DataManipulator ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataManipulator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터를 처리하는 메서드와 속성을 제공할 <see cref="T:System.Web.UI.DataVisualization.Charting.DataManipulator" /> 개체를 가져옵니다.</summary>
        <value>데이터를 처리하는 메서드와 속성을 제공할 <see cref="T:System.Web.UI.DataVisualization.Charting.DataManipulator" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하 여를 실행 시:  
  
-   Y 값을 복사 합니다.  
  
-   데이터를 필터링 합니다.  
  
-   데이터를 그룹화 합니다.  
  
-   누락 된 데이터를 빈 요소를 바꿉니다.  
  
-   데이터를 내보낼는 <xref:System.Data.DataSet> 개체입니다.  
  
-   데이터를 정렬 합니다.  
  
-   데이터에는 금융 공식을 적용 합니다.  
  
 참조는 <xref:System.Web.UI.DataVisualization.Charting.DataManipulator> 세부 정보에 대 한 클래스 개요입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public override object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DataSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.ChartDataSourceConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> 개체의 데이터 소스를 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Object" /> 개체의 데이터 소스를 나타내는 <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 계열의 데이터 요소를 사용 하 여 모든 때 데이터 원본에 바인딩될 수는 <xref:System.Web.UI.DataVisualization.Charting.Chart.DataSource%2A> 속성입니다.  
  
 데이터 소스에 바인딩할 차트를 강제로 표시 하려면 호출 된 <xref:System.Web.UI.DataVisualization.Charting.Chart.DataBindTable%2A> 메서드.  
  
 다음은 데이터 원본으로 사용할 수 있는 개체의 목록입니다.  
  
-   DataView  
  
-   데이터 판독기 (SQL, OleDB)  
  
-   DataSet  
  
-   DataTable  
  
-   바인딩 소스  
  
-   IDataSource  
  
-   배열  
  
-   목록  
  
-   모든 열거형 개체  
  
-   SqlCommand / OleDbCommand (DataSource 데이터 바인딩만)  
  
-   SqlDataAdapter / OleDbDataAdapter (DataSource 데이터 바인딩만)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DescriptionUrl">
      <MemberSignature Language="C#" Value="public string DescriptionUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DescriptionUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.DescriptionUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property DescriptionUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DescriptionUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.UrlValueEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />에 대한 자세한 설명이 있는 위치를 가져오거나 설정합니다.</summary>
        <value>차트에 대한 자세한 설명의 URL을 나타내는 <see langword="string" /> 값입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> 클래스에서 사용하는 리소스를 해제합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override sealed void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.IDisposable" /> 인터페이스를 사용하여 개체를 삭제합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          관리되지 않는 리소스와 관리되는 리소스를 모두 해제하려면 <see langword="true" />이고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />입니다.</param>
        <summary>관리되지 않는 리소스와 선택적으로 관리되는 리소스를 해제합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableViewState">
      <MemberSignature Language="C#" Value="public override bool EnableViewState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.EnableViewState" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableViewState { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>상태 관리의 사용 여부를 결정하는 플래그를 가져오거나 설정합니다.</summary>
        <value>
          상태 관리를 사용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 설정 `true` 상태 관리를 사용 하 여 <xref:System.Web.UI.DataVisualization.Charting.Chart> 제어 합니다.  
  
 저장 된 뷰 상태 중 하나에 의해 결정 됩니다는 <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateContent%2A> 또는 <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A> 속성입니다.  
  
> [!NOTE]
>  (의 Page_Init 또는 생성자는 동작) Page_Load 하기 전에이 속성을 설정 해야 하거나 미치게 될 영향을 주지 않습니다.  
  
 자세한 내용은 참조는 Visual Studio 설명서에 대 한 뷰 상태 또는 상태 관리를 설명 하는 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.FontInfo Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FontInfo Font" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.Font" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Font As FontInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FontInfo ^ Font { System::Web::UI::WebControls::FontInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FontInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤의 글꼴 속성을 가져옵니다.</summary>
        <value>컨트롤의 글꼴 속성을 나타내는 <see cref="T:System.Web.UI.WebControls.FontInfo" /> 개체입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> 컨트롤의 텍스트 색을 가져오거나 설정합니다.</summary>
        <value>차트의 텍스트 색을 나타내는 <see cref="T:System.Drawing.Color" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은이 클래스에 적용할 수 없습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatNumber">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.DataVisualization.Charting.FormatNumberEventArgs&gt; FormatNumber;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.DataVisualization.Charting.FormatNumberEventArgs&gt; FormatNumber" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.DataVisualization.Charting.Chart.FormatNumber" />
      <MemberSignature Language="VB.NET" Value="Public Event FormatNumber As EventHandler(Of FormatNumberEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::DataVisualization::Charting::FormatNumberEventArgs ^&gt; ^ FormatNumber;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.DataVisualization.Charting.FormatNumberEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>숫자 값을 문자열로 변환해야 하는 경우에 호출됩니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChartElementOutline">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartElementOutline GetChartElementOutline (object chartElement, System.Web.UI.DataVisualization.Charting.ChartElementType elementType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.ChartElementOutline GetChartElementOutline(object chartElement, valuetype System.Web.UI.DataVisualization.Charting.ChartElementType elementType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.GetChartElementOutline(System.Object,System.Web.UI.DataVisualization.Charting.ChartElementType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChartElementOutline (chartElement As Object, elementType As ChartElementType) As ChartElementOutline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::ChartElementOutline ^ GetChartElementOutline(System::Object ^ chartElement, System::Web::UI::DataVisualization::Charting::ChartElementType elementType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartElementOutline</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chartElement" Type="System.Object" />
        <Parameter Name="elementType" Type="System.Web.UI.DataVisualization.Charting.ChartElementType" />
      </Parameters>
      <Docs>
        <param name="chartElement">차트 요소입니다.</param>
        <param name="elementType">요소의 형식입니다.</param>
        <summary>차트 요소 윤곽선을 반환합니다.</summary>
        <returns>다음을 포함하는 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartElementOutline" /> 개체입니다.  
  
-   이 차트 요소 주위에서 윤곽선 표식으로 사용할 수 있는 절대 좌표로 표시되는 요소의 배열  
  
-   이 차트 요소 주위에 윤곽선을 그리기 위한 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 개체</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 `chartElement` 차트의 일부가 아닙니다 또는 `elementType` 함께 사용할 수 없는 `chartElement`, 결과 빈 배열을 표식 포인트 포함 됩니다. 표식 요소는 시계 방향으로 정렬 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHtmlImageMap">
      <MemberSignature Language="C#" Value="public string GetHtmlImageMap (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetHtmlImageMap(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.GetHtmlImageMap(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHtmlImageMap (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetHtmlImageMap(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">이미지 맵 태그의 이름입니다.</param>
        <summary>현재 렌더링된 차트의 HTML 이미지 맵을 반환합니다. 이 메서드를 호출하기 전에 <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />의 오버로드된 <c>SaveImage</c> 메서드 중 하나를 호출해야 합니다.</summary>
        <returns>HTML 이미지 맵을 나타내는 <see langword="string" /> 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetService(Type ^ serviceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">요청한 차트 서비스의 형식입니다.</param>
        <summary>요청한 차트 서비스를 반환합니다.</summary>
        <returns>서비스 형식을 나타내는 <see cref="T:System.Object" />이며, 서비스를 찾을 수 없으면 <see langword="null" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Height" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.Height" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Height As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit Height { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "300")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>전체 차트 이미지의 높이(픽셀)를 가져오거나 설정합니다.</summary>
        <value>전체 차트 이미지의 높이(픽셀)를 나타내는 <see cref="T:System.Web.UI.WebControls.Unit" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 백분율 (%) 또는 지점 (pt)의 값을 지정 하지 마십시오. 그러지 않으면 예외가 throw됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTest">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 X 및 Y 좌표로 정의되는 요소에 있는 차트 요소(있는 경우)를 결정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정된 된 지점에 있는 경우 차트 요소를 확인 하려면이 메서드를 호출 합니다.  
  
 일부 마우스 관련 이벤트에이 메서드는 대개-예를 들어 MouseDown-최종 사용자 요소가 무엇 인지 확인 하려면 클릭 합니다. 이벤트 매개 변수에서 가져온 X 및 Y 마우스 좌표에 사용 됩니다는 `x` 및 `y` 이 메서드 호출의 매개 변수 값입니다.  
  
 반환 된 속성 <xref:System.Web.UI.DataVisualization.Charting.HitTestResult> 차트 요소를 클릭 했는지 확인 하려면 다음 개체를 사용할 수는 <xref:System.Web.UI.DataVisualization.Charting.HitTestResult> 있는 경우 또한 개체를 선택 하는 실제 개체의 인스턴스 제공 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.HitTestResult HitTest (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.HitTestResult HitTest(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.HitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (x As Integer, y As Integer) As HitTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::HitTestResult ^ HitTest(int x, int y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">사용자가 클릭한 요소의 X 좌표 값입니다.</param>
        <param name="y">사용자가 클릭한 요소의 Y 좌표 값입니다.</param>
        <summary>지정된 X 및 Y 좌표로 정의되는 요소에 있는 차트 요소(있는 경우)를 결정합니다.</summary>
        <returns>지정된 위치에 차트 요소가 있는 경우 이 요소에 대한 정보를 제공하는 <see cref="T:System.Web.UI.DataVisualization.Charting.HitTestResult" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 확인 하는 차트 요소에 있는 경우 지정된 된 지점에 있는이 메서드를 호출 합니다.  
  
> [!IMPORTANT]
>  이 메서드가 제대로 작동 하려면는 <xref:System.Web.UI.DataVisualization.Charting.Chart.IsMapEnabled%2A> 속성으로 설정 되어 있어야 `false`합니다.  
  
 이 메서드를 사용할 수 있습니다는 <xref:System.Web.UI.DataVisualization.Charting.Chart.Click> 드릴 다운을 구현 하는 경우 서버 쪽 이벤트입니다. 그러나 사용 편이성 인해 드릴 다운에 대 한 클라이언트 쪽 이미지 맵을 사용 하는 것이 좋습니다.  
  
 반환 된 속성 <xref:System.Web.UI.DataVisualization.Charting.HitTestResult> 차트 요소를 클릭 했는지 확인 하려면 다음 개체를 사용할 수는 <xref:System.Web.UI.DataVisualization.Charting.HitTestResult> 있는 경우 또한 개체를 선택 하는 실제 개체의 인스턴스 제공 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.HitTestResult HitTest (int x, int y, bool ignoreTransparent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.HitTestResult HitTest(int32 x, int32 y, bool ignoreTransparent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.HitTest(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (x As Integer, y As Integer, ignoreTransparent As Boolean) As HitTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::HitTestResult ^ HitTest(int x, int y, bool ignoreTransparent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="ignoreTransparent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="x">사용자가 클릭한 요소의 X 좌표 값입니다.</param>
        <param name="y">사용자가 클릭한 요소의 Y 좌표 값입니다.</param>
        <param name="ignoreTransparent">투명 요소가 무시되는지 여부를 결정하는 플래그입니다.</param>
        <summary>지정된 X 및 Y 좌표로 정의되는 요소에 있는 차트 요소(있는 경우)를 결정합니다. 선택적으로 투명 요소는 무시될 수 있습니다.</summary>
        <returns>지정된 위치에 차트 요소가 있는 경우 이 요소에 대한 정보를 제공하는 <see cref="T:System.Web.UI.DataVisualization.Charting.HitTestResult" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 확인 하는 차트 요소에 있는 경우 지정된 된 지점에 있는이 메서드를 호출 합니다.  
  
 투명 한 요소를 무시 하려면 설정는 `ignoreTransparent` 매개 변수를 `true`합니다.  
  
> [!IMPORTANT]
>  이 메서드가 제대로 작동 하려면는 <xref:System.Web.UI.DataVisualization.Charting.Chart.IsMapEnabled%2A> 속성으로 설정 되어 있어야 `false`합니다.  
  
 이 메서드를 사용할 수 있습니다는 <xref:System.Web.UI.DataVisualization.Charting.Chart.Click> 드릴 다운을 구현 하는 경우 서버 쪽 이벤트입니다. 그러나 사용 편이성 인해 드릴 다운에 대 한 클라이언트 쪽 이미지 맵을 사용 하는 것이 좋습니다.  
  
 반환 된 속성 <xref:System.Web.UI.DataVisualization.Charting.HitTestResult> 차트 요소를 클릭 했는지 확인 하려면 다음 개체를 사용할 수는 <xref:System.Web.UI.DataVisualization.Charting.HitTestResult> 있는 경우 또한 개체를 선택 하는 실제 개체의 인스턴스 제공 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.HitTestResult HitTest (int x, int y, System.Web.UI.DataVisualization.Charting.ChartElementType requestedElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.HitTestResult HitTest(int32 x, int32 y, valuetype System.Web.UI.DataVisualization.Charting.ChartElementType requestedElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.HitTest(System.Int32,System.Int32,System.Web.UI.DataVisualization.Charting.ChartElementType)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (x As Integer, y As Integer, requestedElement As ChartElementType) As HitTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::HitTestResult ^ HitTest(int x, int y, System::Web::UI::DataVisualization::Charting::ChartElementType requestedElement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="requestedElement" Type="System.Web.UI.DataVisualization.Charting.ChartElementType" />
      </Parameters>
      <Docs>
        <param name="x">사용자가 클릭한 요소의 X 좌표 값입니다.</param>
        <param name="y">사용자가 클릭한 요소의 Y 좌표 값입니다.</param>
        <param name="requestedElement">테스트할 차트 요소 형식을 결정하는 플래그입니다.</param>
        <summary>지정된 X 및 Y 좌표로 정의되는 요소에 지정된 형식의 차트 요소가 있는지 여부를 결정합니다.</summary>
        <returns>지정된 위치에 차트 요소가 있는 경우 이 요소에 대한 정보를 제공하는 <see cref="T:System.Web.UI.DataVisualization.Charting.HitTestResult" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 차트 요소가 지정 된 형식의 지정된 된 지점에 있는지 확인 하려면이 메서드를 호출 합니다.  
  
> [!IMPORTANT]
>  이 메서드가 제대로 작동 하려면는 <xref:System.Web.UI.DataVisualization.Charting.Chart.IsMapEnabled%2A> 속성으로 설정 되어 있어야 `false`합니다.  
  
 이 메서드를 사용할 수 있습니다는 <xref:System.Web.UI.DataVisualization.Charting.Chart.Click> 드릴 다운을 구현 하는 경우 서버 쪽 이벤트입니다. 그러나 사용 편이성 인해 드릴 다운에 대 한 클라이언트 쪽 이미지 맵을 사용 하는 것이 좋습니다.  
  
 반환 된 속성 <xref:System.Web.UI.DataVisualization.Charting.HitTestResult> 차트 요소를 클릭 했는지 확인 하려면 다음 개체를 사용할 수는 <xref:System.Web.UI.DataVisualization.Charting.HitTestResult> 있는 경우 또한 개체를 선택 하는 실제 개체의 인스턴스 제공 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.HitTestResult[] HitTest (int x, int y, bool ignoreTransparent, params System.Web.UI.DataVisualization.Charting.ChartElementType[] requestedElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.HitTestResult[] HitTest(int32 x, int32 y, bool ignoreTransparent, valuetype System.Web.UI.DataVisualization.Charting.ChartElementType[] requestedElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.HitTest(System.Int32,System.Int32,System.Boolean,System.Web.UI.DataVisualization.Charting.ChartElementType[])" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (x As Integer, y As Integer, ignoreTransparent As Boolean, ParamArray requestedElement As ChartElementType()) As HitTestResult()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Web::UI::DataVisualization::Charting::HitTestResult ^&gt; ^ HitTest(int x, int y, bool ignoreTransparent, ... cli::array &lt;System::Web::UI::DataVisualization::Charting::ChartElementType&gt; ^ requestedElement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.HitTestResult[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="ignoreTransparent" Type="System.Boolean" />
        <Parameter Name="requestedElement" Type="System.Web.UI.DataVisualization.Charting.ChartElementType[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="x">지정된 데이터 요소의 X 좌표입니다.</param>
        <param name="y">지정된 데이터 요소의 Y 좌표입니다.</param>
        <param name="ignoreTransparent">투명한 요소를 무시해야 함을 나타내는 플래그입니다.</param>
        <param name="requestedElement">결과를 필터링하기 위해 테스트할 형식을 지정하는 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartElementType" /> 개체 배열입니다. 생략하면 요소 형식에 대한 검사가 무시되고 모든 요소 유형이 유효해집니다.</param>
        <summary>지정된 형식 중 하나인 차트 요소가 지정된 X 및 Y 좌표로 정의되는 지점에 위치하는지 여부를 결정합니다.</summary>
        <returns>지정된 위치에 있는 차트 요소(있는 경우)에 대한 정보를 제공하는 <see cref="T:System.Web.UI.DataVisualization.Charting.HitTestResult" /> 개체입니다. 배열에 <see cref="F:System.Web.UI.DataVisualization.Charting.ChartElementType.Nothing" />일 수 있는 하나 이상의 요소가 포함되어 있습니다. 결과의 개체는 여러 계층의 컨트롤 위쪽에서 아래쪽으로 정렬됩니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 확인 하는 계기 요소에 있는 경우 지정된 된 지점에 있는이 메서드를 호출 합니다. 이 메서드는 대개 MouseDown 예를 들어, 일부 마우스 관련 이벤트에는 최종 사용자가 클릭 한 요소를 평가할지 확인 합니다. 이벤트 매개 변수에서 가져온 X 및 Y 마우스 좌표는 다음이 메서드 호출의 X 및 Y 매개 변수 값에 사용 됩니다.  
  
 반환 된 속성 <xref:System.Web.UI.DataVisualization.Charting.HitTestResult> 차트 요소를 클릭 했는지 확인 하려면 다음 개체를 사용할 수는 <xref:System.Web.UI.DataVisualization.Charting.HitTestResult> 있는 경우 또한 개체를 선택 하는 실제 개체의 인스턴스 제공 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageLocation">
      <MemberSignature Language="C#" Value="public string ImageLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageLocation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.ImageLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("ChartPic_#SEQ(300,3)")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ImageValueEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="F:System.Web.UI.DataVisualization.Charting.RenderType.ImageTag" /> 렌더링을 수행할 때 이미지 파일이 저장되는 위치를 가져오거나 설정합니다.</summary>
        <value>서버에서 이미지 파일이 저장되는 URL을 나타내는 <see langword="string" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우에이 속성이 적용 되지 않습니다 <xref:System.Web.UI.DataVisualization.Charting.Chart.ImageStorageMode%2A> 로 설정 된 <xref:System.Web.UI.DataVisualization.Charting.ImageStorageMode.UseHttpHandler?displayProperty=nameWithType>합니다.  
  
 차트 이미지를 이미지 태그 메서드를 사용 하 여 차트 이미지를 렌더링 하는 경우 생성 되 고 다음 서버에 의해 결정 되는 형식에는 디스크에 저장 된 <xref:System.Web.UI.DataVisualization.Charting.ChartImageType> 속성입니다.  
  
 이미지 파일이 저장 되는 URL은 절대 또는 상대; 될 수 있습니다. 이미지 파일에 있는 파일 확장명에 따라 결정 되는 <xref:System.Web.UI.DataVisualization.Charting.ChartImageType> 속성입니다.  
  
 이미지 파일은 항상 하나의 파일 이름으로 하드 코딩 될 수 있습니다 또는 사용자 id (Uid) 또는 라운드 로빈 이라고 지정 된 수의 고유 하 게 명명 된 파일을 사용 하도록 "#" 기호를 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Images">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.NamedImagesCollection Images { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.NamedImagesCollection Images" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.Images" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Images As NamedImagesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::NamedImagesCollection ^ Images { System::Web::UI::DataVisualization::Charting::NamedImagesCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.NamedImagesCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>차트에 대한 <see cref="T:System.Web.UI.DataVisualization.Charting.NamedImagesCollection" /> 개체를 저장하는 <see cref="T:System.Web.UI.DataVisualization.Charting.NamedImage" /> 개체를 가져옵니다.</summary>
        <value>차트에 대한 <see cref="T:System.Web.UI.DataVisualization.Charting.NamedImagesCollection" /> 개체를 저장하는 <see cref="T:System.Web.UI.DataVisualization.Charting.NamedImage" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 추가 하려면이 속성을 사용 하 여 <xref:System.Web.UI.DataVisualization.Charting.NamedImage> 개체와 제거 <xref:System.Web.UI.DataVisualization.Charting.NamedImage> 에서 개체는 <xref:System.Web.UI.DataVisualization.Charting.NamedImagesCollection> 의 개체는 <xref:System.Web.UI.DataVisualization.Charting.Chart>합니다. 이 컬렉션 속성은 런타임 시 사용할 수 있습니다.  
  
 이미지-즉, 형식에서 파생 된 개체 <xref:System.Drawing.Image>와 같은 <xref:System.Drawing.Bitmap>, 즉 동적 생성-이 컬렉션에 저장 하 고 다음 이미지 관련를 나중에 지정 된 수 <xref:System.Web.UI.DataVisualization.Charting.Chart> 속성을 같은 <xref:System.Web.UI.DataVisualization.Charting.Chart.BackImage%2A>합니다.  
  
 할당 하면는 <xref:System.Web.UI.DataVisualization.Charting.NamedImage> 이미지 관련 속성에 개체는 <xref:System.Web.UI.DataVisualization.Charting.Chart> 클래스의 이름을 사용 합니다.는 <xref:System.Web.UI.DataVisualization.Charting.NamedImage> 개체에 대 한는 `string` 이미지와 관련 된 속성의 값입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageStorageMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ImageStorageMode ImageStorageMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ImageStorageMode ImageStorageMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.ImageStorageMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageStorageMode As ImageStorageMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ImageStorageMode ImageStorageMode { System::Web::UI::DataVisualization::Charting::ImageStorageMode get(); void set(System::Web::UI::DataVisualization::Charting::ImageStorageMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ImageStorageMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>차트 이미지 렌더링에 대한 저장소 모드를 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.ImageStorageMode" /> 열거형 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성의 차트 이미지를 렌더링 하는 데 사용 되는 저장소 유형을 정의 합니다. 참조 <xref:System.Web.UI.DataVisualization.Charting.ImageStorageMode> 옵션에 대 한 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageType">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartImageType ImageType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartImageType ImageType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.ImageType" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageType As ChartImageType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartImageType ImageType { System::Web::UI::DataVisualization::Charting::ChartImageType get(); void set(System::Web::UI::DataVisualization::Charting::ChartImageType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartImageType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="F:System.Web.UI.DataVisualization.Charting.RenderType.ImageTag" /> 렌더링이 사용되는 경우 차트가 렌더링되는 이미지의 형식을 가져오거나 설정합니다.</summary>
        <value>차트가 렌더링되는 이미지의 형식을 지정하는 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartImageType" /> 열거형 값입니다. 기본값은 <see cref="F:System.Web.UI.DataVisualization.Charting.ChartImageType.Jpeg" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에는 렌더링에 사용 되는 이미지 파일의 유형을 결정 합니다.  
  
 가능한 파일 형식은 <xref:System.Web.UI.DataVisualization.Charting.ChartImageType.Bmp>, <xref:System.Web.UI.DataVisualization.Charting.ChartImageType.Emf>, <xref:System.Web.UI.DataVisualization.Charting.ChartImageType.Jpeg>, 및 <xref:System.Web.UI.DataVisualization.Charting.ChartImageType.Png>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMapAreaAttributesEncoded">
      <MemberSignature Language="C#" Value="public bool IsMapAreaAttributesEncoded { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMapAreaAttributesEncoded" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.IsMapAreaAttributesEncoded" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMapAreaAttributesEncoded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMapAreaAttributesEncoded { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>맵 영역 특성을 인코딩할지 여부를 결정하는 플래그를 가져오거나 설정합니다. 맵 영역 특성은 다양한 데이터 소스에서 데이터를 로드할 수 있습니다. 차트 컨트롤은 최종 사용자가 다양한 데이터 소스에서 신뢰할 수 없는 데이터를 로드하지 못하도록 합니다. 이런 이유로 데이터의 유효성을 검사하고 직접 인코딩하는 것이 좋습니다.</summary>
        <value>
          맵 영역 특성이 인코딩되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMapEnabled">
      <MemberSignature Language="C#" Value="public bool IsMapEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMapEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.IsMapEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMapEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMapEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>클라이언트 쪽 이미지 맵의 사용 여부를 결정하는 플래그를 가져오거나 설정합니다.</summary>
        <value>
          이미지 맵을 사용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 설정 `false` 이미지 맵을 사용할 수 없게 됩니다. 이 작업은 다음과 같은 경우에도 발생 합니다.  
  
-   `Url`, `MapAreaAttributes`, `LabelMapAreaAttributes`, `LegendMapAreaAttributes` 또는 `ToolTip` 차트 요소의 속성을 설정 합니다.  
  
-   A <xref:System.Web.UI.DataVisualization.Charting.MapArea> 에 추가 된 개체는 <xref:System.Web.UI.DataVisualization.Charting.MapAreasCollection> 개체입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSoftShadows">
      <MemberSignature Language="C#" Value="public bool IsSoftShadows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSoftShadows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.IsSoftShadows" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSoftShadows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSoftShadows { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>그림자를 그릴 때 부드러운 그라데이션이 적용되는지 여부를 결정하는 플래그를 가져오거나 설정합니다.</summary>
        <value>
          다듬기를 사용하여 그림자를 그리면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하는 경우의 값은 `ShadowOffset` 계열에 대 한 속성을 데이터 요소, 차트 영역 또는 범례를 0이 아닌, 그림자를 설정 하 여 색을 사용 하 여 적용할 자신의 `ShadowColor` 속성입니다.  
  
 하는 경우의 값은 <xref:System.Web.UI.DataVisualization.Charting.Chart.IsSoftShadows%2A> 속성은 `true`, 부드러운 그라데이션이 그림자에 적용 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Legends">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.LegendCollection Legends { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.LegendCollection Legends" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.Legends" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Legends As LegendCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::LegendCollection ^ Legends { System::Web::UI::DataVisualization::Charting::LegendCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.LegendCollectionEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.LegendCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.DataVisualization.Charting.LegendCollection" /> 컨트롤이 사용하는 모든 <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" /> 개체를 저장하는 데 사용되는 <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> 개체를 가져오거나 설정합니다.</summary>
        <value>모든 <see cref="T:System.Web.UI.DataVisualization.Charting.LegendCollection" /> 개체를 저장하는 데 사용되는 <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 컬렉션 속성 모든 저장 <xref:System.Web.UI.DataVisualization.Charting.Legend> 사용 되는 개체는 <xref:System.Web.UI.DataVisualization.Charting.Chart> 제어 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadTemplate">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>템플릿을 <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> 컨트롤에 로드합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadTemplate">
      <MemberSignature Language="C#" Value="public void LoadTemplate (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadTemplate(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.LoadTemplate(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadTemplate(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">로드할 스트림입니다.</param>
        <summary>템플릿을 이미지 스트림에서 <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> 컨트롤로 로드합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 메모리 스트림, 파일 스트림 등과 같은 스트림, 서식 파일을 로드 하려는 경우이 방법을 사용 합니다.  
  
 설정 하는 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A> 속성을 `true` 사용 하 여 템플릿을 저장 하기 전에 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save%2A> 메서드.  
  
 로드 된 템플릿에 두 데이터 계열이, 일련의 모양 속성이 순차적으로 차트에 적용 됩니다. 즉, 첫 번째 템플릿 계열 모양 속성은 차트의 첫 번째 계열에 할당 된, 두 번째 템플릿 계열 모양 속성은 차트의 두 번째 계열에 적용 된 후 세 번째 작업에 대 한 첫 번째 템플릿 시리즈를 다시 사용 일련의 차트 및 등입니다. 차트 영역 및 모양 속성이 있는 다른 컬렉션에도 마찬가지입니다.  
  
 서식 파일을 사용자 지정 색상표를 시뮬레이션 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadTemplate">
      <MemberSignature Language="C#" Value="public void LoadTemplate (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadTemplate(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.LoadTemplate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadTemplate (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadTemplate(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">로드할 템플릿의 파일 이름입니다. 디스크에서 로드할 템플릿의 전체 경로를 지정해야 합니다.</param>
        <summary>디스크에서 지정된 파일 이름의 템플릿을 로드합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `name` 매개 변수는 C:\MyPic.jpg 예를 들어 전체 경로 사용 해야 합니다. 참고 파일 확장명도 지정 해야 합니다.  
  
 이 메서드를 사용 하 여 저장 된 디스크에서 템플릿을 로드는 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save%2A> 메서드.  
  
 설정 하는 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A> 속성을 `true` 사용 하 여 템플릿을 저장 하기 전에 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save%2A> 메서드.  
  
 로드 된 템플릿에 두 데이터 계열이, 일련의 모양 속성이 순차적으로 차트에 적용 됩니다. 즉, 첫 번째 템플릿 계열 모양 속성은 차트의 첫 번째 계열에 할당 된, 두 번째 템플릿 계열 모양 속성은 차트의 두 번째 계열에 적용 된 후 세 번째 작업에 대 한 첫 번째 템플릿 시리즈를 다시 사용 일련의 차트 및 등입니다. 차트 영역 및 모양 속성이 있는 다른 컬렉션에도 마찬가지입니다.  
  
 서식 파일을 사용자 지정 색상표를 시뮬레이션 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">복원할 컨트롤 상태를 나타내는 <see cref="T:System.Object" />입니다.</param>
        <summary>
          <see cref="M:System.Web.UI.DataVisualization.Charting.Chart.SaveViewState" /> 메서드에서 저장한 이전 페이지 요청에서 뷰 상태 정보를 복원합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapAreas">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.MapAreasCollection MapAreas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.MapAreasCollection MapAreas" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.MapAreas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MapAreas As MapAreasCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::MapAreasCollection ^ MapAreas { System::Web::UI::DataVisualization::Charting::MapAreasCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartCollectionEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.MapAreasCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>차트의 맵 영역을 저장하는 <see cref="T:System.Web.UI.DataVisualization.Charting.MapAreasCollection" /> 개체를 가져옵니다.</summary>
        <value>차트의 맵 영역을 저장하는 <see cref="T:System.Web.UI.DataVisualization.Charting.MapAreasCollection" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하 여 디자인 타임 또는 런타임에 사용자 지정 맵 영역 차트를 추가 하 고 있습니다. 사용자 지정 맵 영역 달리 차트 요소에 해당 하는 지도 영역 있는데 사용자 정의 셰이프 및 좌표  
  
 이미지 맵의로 차트를 사용 하려면는 <xref:System.Web.UI.DataVisualization.Charting.Chart.IsMapEnabled%2A> 루트의 속성 <xref:System.Web.UI.DataVisualization.Charting.Chart> 로 설정 해야 `true`, 기본값입니다.  
  
 이진 스트림으로 차트를 렌더링 하는 경우 클라이언트 쪽 이미지 맵을 구현 하는 특별 한 기술을 사용 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick (System.Web.UI.WebControls.ImageMapEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick(class System.Web.UI.WebControls.ImageMapEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.OnClick(System.Web.UI.WebControls.ImageMapEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick (e As ImageMapEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick(System::Web::UI::WebControls::ImageMapEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ImageMapEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트에 대한 데이터를 제공하는 <see cref="T:System.Web.UI.WebControls.ImageMapEventArgs" /> 개체입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.DataVisualization.Charting.Chart.Click" /> 이벤트에 등록된 대리자를 호출합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCustomize">
      <MemberSignature Language="C#" Value="protected virtual void OnCustomize (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCustomize(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.OnCustomize(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCustomize (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCustomize(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 들어 있는 <see cref="T:System.EventArgs" /> 개체입니다.</param>
        <summary>그리기 전에 모든 차트 데이터를 사용자 지정할 준비가 되었을 때 발생합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCustomizeLegend">
      <MemberSignature Language="C#" Value="protected virtual void OnCustomizeLegend (System.Web.UI.DataVisualization.Charting.CustomizeLegendEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCustomizeLegend(class System.Web.UI.DataVisualization.Charting.CustomizeLegendEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.OnCustomizeLegend(System.Web.UI.DataVisualization.Charting.CustomizeLegendEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCustomizeLegend (e As CustomizeLegendEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCustomizeLegend(System::Web::UI::DataVisualization::Charting::CustomizeLegendEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.DataVisualization.Charting.CustomizeLegendEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.DataVisualization.Charting.CustomizeLegendEventArgs" /> 개체입니다.</param>
        <summary>그리기 전에 모든 차트 범례 데이터를 사용자 지정할 준비가 되었을 때 발생합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCustomizeMapAreas">
      <MemberSignature Language="C#" Value="protected virtual void OnCustomizeMapAreas (System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCustomizeMapAreas(class System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.OnCustomizeMapAreas(System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCustomizeMapAreas (e As CustomizeMapAreasEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCustomizeMapAreas(System::Web::UI::DataVisualization::Charting::CustomizeMapAreasEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 들어 있는 <see cref="T:System.Web.UI.DataVisualization.Charting.CustomizeMapAreasEventArgs" /> 개체입니다.</param>
        <summary>그리기 전에 맵 영역 데이터를 사용자 지정할 준비가 되었을 때 발생합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFormatNumber">
      <MemberSignature Language="C#" Value="protected virtual void OnFormatNumber (object caller, System.Web.UI.DataVisualization.Charting.FormatNumberEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFormatNumber(object caller, class System.Web.UI.DataVisualization.Charting.FormatNumberEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.OnFormatNumber(System.Object,System.Web.UI.DataVisualization.Charting.FormatNumberEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFormatNumber (caller As Object, e As FormatNumberEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFormatNumber(System::Object ^ caller, System::Web::UI::DataVisualization::Charting::FormatNumberEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="caller" Type="System.Object" />
        <Parameter Name="e" Type="System.Web.UI.DataVisualization.Charting.FormatNumberEventArgs" />
      </Parameters>
      <Docs>
        <param name="caller">이벤트 호출자로, 차트 이미지, <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> 또는 <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" /> 개체일 수 있습니다.</param>
        <param name="e">이벤트 인수를 포함하는 <see cref="T:System.Web.UI.DataVisualization.Charting.FormatNumberEventArgs" /> 개체입니다.</param>
        <summary>숫자 값을 문자열로 변환할 때 발생합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPostPaint">
      <MemberSignature Language="C#" Value="protected virtual void OnPostPaint (System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPostPaint(class System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.OnPostPaint(System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPostPaint (e As ChartPaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPostPaint(System::Web::UI::DataVisualization::Charting::ChartPaintEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트에 대한 데이터를 제공하는 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs" /> 개체입니다.</param>
        <summary>차트 요소를 칠한 후에 발생합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPrePaint">
      <MemberSignature Language="C#" Value="protected virtual void OnPrePaint (System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPrePaint(class System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.OnPrePaint(System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPrePaint (e As ChartPaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPrePaint(System::Web::UI::DataVisualization::Charting::ChartPaintEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트에 대한 데이터를 제공하는 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs" /> 개체입니다.</param>
        <summary>차트 요소 배경을 그린 후에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트를 그릴 차트 요소 바로 전에 발생 하며 차트 이미지와 각각에 대해 한 번에 한 번 발생는 <xref:System.Web.UI.DataVisualization.Charting.ChartArea>, <xref:System.Web.UI.DataVisualization.Charting.Legend>, <xref:System.Web.UI.DataVisualization.Charting.Series> 및 <xref:System.Web.UI.DataVisualization.Charting.DataPoint> 차트 이미지 내에 있는 개체입니다. 에 대 한이 이벤트는 참고 <xref:System.Web.UI.DataVisualization.Charting.Series> 및 <xref:System.Web.UI.DataVisualization.Charting.DataPoint> 3D 차트에 대 한 개체입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public void Paint (System.Drawing.Graphics graphics, System.Drawing.Rectangle position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paint(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.Paint(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paint(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle position);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="position" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="graphics">차트 이미지를 그릴 그래픽 개체입니다.</param>
        <param name="position">그래픽에서 차트 그래픽의 위치입니다.</param>
        <summary>그래픽에서 차트 이미지를 그립니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Palette">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartColorPalette Palette { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartColorPalette Palette" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.Palette" />
      <MemberSignature Language="VB.NET" Value="Public Property Palette As ChartColorPalette" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartColorPalette Palette { System::Web::UI::DataVisualization::Charting::ChartColorPalette get(); void set(System::Web::UI::DataVisualization::Charting::ChartColorPalette value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ColorPaletteEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartColorPalette</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> 컨트롤의 색상표를 가져오거나 설정합니다.</summary>
        <value>사용할 색상표를 결정하는 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartColorPalette" /> 열거형 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 조건이 모두 충족 되는 경우 데이터 요소에 색을 자동으로 할당 하는 색상표가 사용 됩니다.  
  
-   데이터 요소 자체는 할당 된 색을 갖지 않습니다.  
  
-   데이터 계열의 데이터 요소에 속해 있는 할당된 된 색이 없을 않습니다.  
  
 차트 종류에 사용 되는 색 종속 없는 계열 또는 데이터 요소 색을 명시적으로 지정 하는 경우 및 <xref:System.Web.UI.DataVisualization.Charting.Chart> 개체의 색상표 또는 지정 된 경우 연결 된 일련의 팔레트입니다.  
  
> [!NOTE]
>  경우는 `Palette` 모두에 대 한 속성의 <xref:System.Web.UI.DataVisualization.Charting.Chart> 및 <xref:System.Web.UI.DataVisualization.Charting.Series> 개체로 설정 되어 <xref:System.Web.UI.DataVisualization.Charting.ChartColorPalette.None>, 및 관련 데이터 계열이 나 데이터 요소에 할당 된 색이 없습니다, 데이터 요소를 그릴 수 없는 "empty" 영역으로 표시 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaletteCustomColors">
      <MemberSignature Language="C#" Value="public System.Drawing.Color[] PaletteCustomColors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color[] PaletteCustomColors" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.PaletteCustomColors" />
      <MemberSignature Language="VB.NET" Value="Public Property PaletteCustomColors As Color()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Drawing::Color&gt; ^ PaletteCustomColors { cli::array &lt;System::Drawing::Color&gt; ^ get(); void set(cli::array &lt;System::Drawing::Color&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.ColorArrayConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자 지정 색상표 색의 배열을 가져오거나 설정합니다.</summary>
        <value>차트의 계열에 사용되는 색 집합을 나타내는 <see cref="T:System.Drawing.Color" /> 개체의 배열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 16 개 색을 필요 또는 차트에 자신만 색을 적용 하려는 경우 사용자 지정 색상표를 정의 해야 합니다. 사용자 지정 색상표를 사용 하면 차트에 표시 하려는 순서에 자신만 색을 추가할 수 있습니다. 이 색상표 형식은 디자인 타임에 차트의 계열 수를 알 경우 특히 유용 합니다.  
  
 이 속성은 no 때 적용 된 <xref:System.Web.UI.DataVisualization.Charting.Chart.Palette%2A> 속성은 *하지* 로 설정 <xref:System.Web.UI.DataVisualization.Charting.ChartColorPalette.None>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected override void PerformDataBinding (System.Collections.IEnumerable data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PerformDataBinding(class System.Collections.IEnumerable data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.PerformDataBinding(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PerformDataBinding (data As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PerformDataBinding(System::Collections::IEnumerable ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="data">차트 컨트롤에 바인딩되어 있는 데이터 소스를 나타내는 <see cref="T:System.Collections.IEnumerable" /> 개체입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> 컨트롤에 지정된 데이터 소스를 데이터 바인딩합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostPaint">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs&gt; PostPaint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs&gt; PostPaint" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.DataVisualization.Charting.Chart.PostPaint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostPaint As EventHandler(Of ChartPaintEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::DataVisualization::Charting::ChartPaintEventArgs ^&gt; ^ PostPaint;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>차트 요소를 그린 후에 발생합니다. 이 이벤트는 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" />, <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" /> 등의 요소에 대해 발생합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrePaint">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs&gt; PrePaint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs&gt; PrePaint" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.DataVisualization.Charting.Chart.PrePaint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PrePaint As EventHandler(Of ChartPaintEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::DataVisualization::Charting::ChartPaintEventArgs ^&gt; ^ PrePaint;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.DataVisualization.Charting.ChartPaintEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>차트 요소 배경을 그린 후에 발생합니다. 이 이벤트는 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" />, <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" /> 등의 요소에 대해 발생합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">
          <see langword="string" /> 개체로 사용되는 이벤트 인수입니다.</param>
        <summary>폼이 서버에 다시 게시될 때 <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> 컨트롤에 대한 이벤트를 발생시킵니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체입니다.</param>
        <summary>지정된 출력 매개 변수로 <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> 컨트롤을 렌더링합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderType">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.RenderType RenderType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.RenderType RenderType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.RenderType" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderType As RenderType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::RenderType RenderType { System::Web::UI::DataVisualization::Charting::RenderType get(); void set(System::Web::UI::DataVisualization::Charting::RenderType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.RenderType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>차트 이미지를 표시하는 데 사용되는 렌더링 메서드를 가져오거나 설정합니다.</summary>
        <value>차트 이미지를 표시하는 데 사용되는 렌더링 메서드를 나타내는 <see cref="T:System.Web.UI.DataVisualization.Charting.RenderType" /> 열거형 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 목록에서는 차트 이미지를 렌더링할 수 있는 세 가지 방법을 설명 합니다.  
  
-   <xref:System.Web.UI.DataVisualization.Charting.RenderType.ImageTag> 렌더링 형식은 임시 파일을 저장할 서버에서 디스크에 있습니다. 차트가 사용 하 여 클라이언트 쪽에 표시 되는 \<IMG > 태그의 SRC 특성에서 지정한 URL로 설정 된는 <xref:System.Web.UI.DataVisualization.Charting.Chart.ImageLocation%2A> 속성입니다.  
  
-   경우는 <xref:System.Web.UI.DataVisualization.Charting.RenderType.BinaryStreaming> 렌더링 형식을 지정한 경우 서버에서 임시 이미지 파일이 없습니다. 대신, 차트 이미지를 이진 스트림으로 전송 되 고 사용 하 여 표시 됩니다는 \<IMG > 태그의 SRC 특성을 차트 이미지를 생성 하는 일을 담당 하는 다른.aspx 페이지를 설정 합니다.  
  
-   렌더링 형식을 <xref:System.Web.UI.DataVisualization.Charting.RenderType.ImageMap> 하면 이미지 맵이 생성 되지만 실제 차트 이미지의 표시 되지 않습니다. 이 옵션의 렌더링 형식을 갖는 이미지 맵을 사용 하는 경우에 수행 해야 <xref:System.Web.UI.DataVisualization.Charting.RenderType.BinaryStreaming>합니다.  
  
 참고 방법을 임시 이미지 파일을 제어할 수 있습니다 사용 하 여 디스크에 저장 되는 <xref:System.Web.UI.DataVisualization.Charting.Chart.ImageLocation%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetAutoValues">
      <MemberSignature Language="C#" Value="public void ResetAutoValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAutoValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.ResetAutoValues" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAutoValues ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAutoValues();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>자동으로 계산된 차트 속성 값을 "Auto"로 다시 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 여러 차트 속성을 "자동"으로 설정할 수 있습니다-예를 들어 <xref:System.Web.UI.DataVisualization.Charting.Axis.Minimum%2A>; 이러한 속성은 차트를 렌더링 하기 전에 계산 됩니다. "Auto"는 일반적으로 표시 되는 <xref:System.Double.NaN> 값입니다.  
  
 "자동" 하 여 계산 된 값에서 이러한 속성을 다시 설정 하려면이 메서드를 호출 (<xref:System.Double.NaN>).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeft">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.RightToLeft RightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.RightToLeft RightToLeft" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.RightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Property RightToLeft As RightToLeft" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::RightToLeft RightToLeft { System::Web::UI::DataVisualization::Charting::RightToLeft get(); void set(System::Web::UI::DataVisualization::Charting::RightToLeft value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.RightToLeft</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤에서 RTL(오른쪽에서 왼쪽) 언어에 대해 오른쪽에서 왼쪽으로 그려야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>컨트롤에서 RTL(오른쪽에서 왼쪽) 언어에 대해 오른쪽에서 왼쪽으로 그려야 하는지 여부를 나타내는 <see cref="T:System.Web.UI.DataVisualization.Charting.RightToLeft" /> 열거형 값입니다. 기본값은 <see cref="T:System.Web.UI.DataVisualization.Charting.RightToLeft.No" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에는 범례 색 키의 방향을 적용 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SaveImage">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>차트 이미지를 스트림 또는 파일에 저장합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SaveImage">
      <MemberSignature Language="C#" Value="public void SaveImage (System.IO.Stream imageStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveImage(class System.IO.Stream imageStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.SaveImage(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveImage (imageStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveImage(System::IO::Stream ^ imageStream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="imageStream">이미지 스트림입니다.</param>
        <summary>차트 이미지를 지정된 스트림에 저장합니다. <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.ImageType" /> 및 <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Compression" /> 속성과 기타 <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> 컨트롤 속성이 사용됩니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveImage">
      <MemberSignature Language="C#" Value="public void SaveImage (string imageFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveImage(string imageFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.SaveImage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveImage (imageFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveImage(System::String ^ imageFileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="imageFileName">이미지 파일 이름입니다.</param>
        <summary>차트 이미지를 지정된 파일에 저장합니다. <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.ImageType" /> 및 <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Compression" /> 속성과 기타 <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> 컨트롤 속성이 사용됩니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveImage">
      <MemberSignature Language="C#" Value="public void SaveImage (System.IO.Stream imageStream, System.Web.UI.DataVisualization.Charting.ChartImageFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveImage(class System.IO.Stream imageStream, valuetype System.Web.UI.DataVisualization.Charting.ChartImageFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.SaveImage(System.IO.Stream,System.Web.UI.DataVisualization.Charting.ChartImageFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveImage (imageStream As Stream, format As ChartImageFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveImage(System::IO::Stream ^ imageStream, System::Web::UI::DataVisualization::Charting::ChartImageFormat format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageStream" Type="System.IO.Stream" />
        <Parameter Name="format" Type="System.Web.UI.DataVisualization.Charting.ChartImageFormat" />
      </Parameters>
      <Docs>
        <param name="imageStream">이미지 스트림입니다.</param>
        <param name="format">차트 이미지 형식입니다.</param>
        <summary>차트 이미지를 지정된 스트림에 저장합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveImage">
      <MemberSignature Language="C#" Value="public void SaveImage (string imageFileName, System.Web.UI.DataVisualization.Charting.ChartImageFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveImage(string imageFileName, valuetype System.Web.UI.DataVisualization.Charting.ChartImageFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.SaveImage(System.String,System.Web.UI.DataVisualization.Charting.ChartImageFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveImage (imageFileName As String, format As ChartImageFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveImage(System::String ^ imageFileName, System::Web::UI::DataVisualization::Charting::ChartImageFormat format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFileName" Type="System.String" />
        <Parameter Name="format" Type="System.Web.UI.DataVisualization.Charting.ChartImageFormat" />
      </Parameters>
      <Docs>
        <param name="imageFileName">이미지 파일 이름입니다.</param>
        <param name="format">차트 이미지 형식입니다.</param>
        <summary>차트 이미지를 파일에 저장합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>페이지가 서버에 다시 게시된 이후 발생한 서버 컨트롤 뷰 상태의 변경을 저장합니다.</summary>
        <returns>서버 컨트롤의 현재 뷰 상태를 나타내는 <see cref="T:System.Object" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveXml">
      <MemberSignature Language="C#" Value="public void SaveXml (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveXml(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.SaveXml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveXml (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveXml(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">저장할 파일 이름입니다.</param>
        <summary>차트의 현재 상태를 XML 파일에 저장합니다. 이 메서드는 주로 지원 목적으로 사용됩니다. 실행 스레드에 파일에 쓰기 권한이 있어야 합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Serializer">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartSerializer Serializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.ChartSerializer Serializer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.Serializer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Serializer As ChartSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartSerializer ^ Serializer { System::Web::UI::DataVisualization::Charting::ChartSerializer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartSerializer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>차트 serialization에 사용되는 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartSerializer" /> 개체를 가져옵니다.</summary>
        <value>차트 serialization에 사용되는 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartSerializer" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하 여 디자인 타임 또는 런타임에 키를 눌러 차트를 직렬화 합니다.  
  
 에 대 한 자세한 설명은 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer> 클래스 클래스 개요를 참조 하십시오.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Series">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.SeriesCollection Series { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.SeriesCollection Series" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.Series" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Series As SeriesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::SeriesCollection ^ Series { System::Web::UI::DataVisualization::Charting::SeriesCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.SeriesCollectionEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.SeriesCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.DataVisualization.Charting.SeriesCollection" /> 개체를 포함하는 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> 개체를 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.SeriesCollection" /> 개체를 포함하는 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 컬렉션 속성을 사용 하면 액세스할 수 있습니다는 <xref:System.Web.UI.DataVisualization.Charting.SeriesCollection> 클래스 점에서 <xref:System.Web.UI.DataVisualization.Charting.Series> 개체 하 고 메서드 및이 컬렉션을 조작 하는 데 사용 되는 속성을 제공 합니다.  
  
 <xref:System.Web.UI.DataVisualization.Charting.Series> 보관 된 개체를 <xref:System.Web.UI.DataVisualization.Charting.DataPoint> 데이터 특성 뿐만 아니라 개체입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuppressExceptions">
      <MemberSignature Language="C#" Value="public bool SuppressExceptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressExceptions" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.SuppressExceptions" />
      <MemberSignature Language="VB.NET" Value="Public Property SuppressExceptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SuppressExceptions { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>중요하지 않은 예외를 표시하지 않아야 하는지 여부를 결정하는 플래그를 가져오거나 설정합니다.</summary>
        <value>
          중요하지 않은 예외를 표시하지 않아야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 설정 하는 경우 `true`, 중요 하지 않은 예외는 표시 되지 않습니다.  
  
 경우는 <xref:System.Web.UI.DataVisualization.Charting.Chart> 컨트롤 적절히 데이터 및 제공 하는 다른 설정을 사용 하 여 차트를 그릴 수 없으면, 예외가 throw 됩니다. 예외 표시 제한은 유용 하지만 응용 프로그램을 테스트 하는 동안은 표시 되지 않음을 응용 프로그램 출시 될 경우.  
  
> [!NOTE]
>  이 속성을 설정 `true` 사용자 응용 프로그램 소스 코드에 있는 심각한 문제를 숨길 수 있습니다. 이 설정은 데이터를 조작할 수는 차트 이미지를 생성할 수 발생할 수도 수 있습니다. 이 모드에서 사용 되는 릴리스만 빌드 된다는 것이 좋습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">
          <see langword="string" /> 개체로서의 이벤트 인수입니다.</param>
        <summary>폼이 서버에 다시 게시될 때 <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> 컨트롤에 대한 이벤트를 발생시킵니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAntiAliasingQuality">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.TextAntiAliasingQuality TextAntiAliasingQuality { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.TextAntiAliasingQuality TextAntiAliasingQuality" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.TextAntiAliasingQuality" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAntiAliasingQuality As TextAntiAliasingQuality" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::TextAntiAliasingQuality TextAntiAliasingQuality { System::Web::UI::DataVisualization::Charting::TextAntiAliasingQuality get(); void set(System::Web::UI::DataVisualization::Charting::TextAntiAliasingQuality value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.DataVisualization.Charting.TextAntiAliasingQuality), "High")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.TextAntiAliasingQuality</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>텍스트에 앤티앨리어싱을 적용할 때 사용할 <see cref="T:System.Web.UI.DataVisualization.Charting.TextAntiAliasingQuality" /> 형식을 가져오거나 설정합니다.</summary>
        <value>텍스트에 앤티 앨리어싱을 적용할 때 사용할 <see cref="T:System.Web.UI.DataVisualization.Charting.TextAntiAliasingQuality" /> 열거형 값입니다. 기본값은 <see cref="F:System.Web.UI.DataVisualization.Charting.TextAntiAliasingQuality.High" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 텍스트에 앤티 앨리어싱 적용 된 경우는 <xref:System.Web.UI.DataVisualization.Charting.Chart> 컨트롤 적용할 텍스트 앤티앨리어싱의 형식을 확인 하려면이 속성을 사용 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Titles">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.TitleCollection Titles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.TitleCollection Titles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.Titles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Titles As TitleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::TitleCollection ^ Titles { System::Web::UI::DataVisualization::Charting::TitleCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartCollectionEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.TitleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.DataVisualization.Charting.TitleCollection" /> 컨트롤에 사용되는 모든 <see cref="T:System.Web.UI.DataVisualization.Charting.Title" /> 개체를 저장하는 <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> 개체를 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.TitleCollection" /> 컨트롤에 사용되는 모든 <see cref="T:System.Web.UI.DataVisualization.Charting.Title" /> 개체를 저장하는 <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.Chart.Titles%2A> 속성이 저장 모두 <xref:System.Web.UI.DataVisualization.Charting.Title> 사용 되는 개체는 <xref:System.Web.UI.DataVisualization.Charting.Chart> 제어 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateDataSource">
      <MemberSignature Language="C#" Value="protected override void ValidateDataSource (object dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ValidateDataSource(object dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Chart.ValidateDataSource(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ValidateDataSource (dataSource As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ValidateDataSource(System::Object ^ dataSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataSource">확인할 개체입니다.</param>
        <summary>데이터 바인딩된 컨트롤이 바인딩될 개체에서 작동할 수 있는지 확인합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewStateContent">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.SerializationContents ViewStateContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.SerializationContents ViewStateContent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.ViewStateContent" />
      <MemberSignature Language="VB.NET" Value="Public Property ViewStateContent As SerializationContents" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::SerializationContents ViewStateContent { System::Web::UI::DataVisualization::Charting::SerializationContents get(); void set(System::Web::UI::DataVisualization::Charting::SerializationContents value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.DataVisualization.Charting.SerializationContents), "Default")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.FlagsEnumUITypeEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.SerializationContents</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>클라이언트에서 유지해야 할 뷰 상태를 결정하는 값을 가져오거나 설정합니다.</summary>
        <value>뷰 상태를 나타내는 <see cref="T:System.Web.UI.DataVisualization.Charting.SerializationContents" /> 열거형 값입니다. 기본값은 <see cref="F:System.Web.UI.DataVisualization.Charting.SerializationContents.Default" />로, 뷰 상태가 모든 차트 속성으로 구성됨을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하 여의 뷰 상태를 설정 하는 <xref:System.Web.UI.DataVisualization.Charting.Chart> 제어 합니다.  
  
 뷰 상태가 자동으로 저장 되기이 속성을 설정 하는 경우는 <xref:System.Web.UI.DataVisualization.Charting.Chart> 컨트롤을 포스트백이 발생할 때 자동으로 로드 됩니다.  
  
 유연성을 높이기 위해 사용 하 여는 <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A> 사용자 정의 뷰 상태에 대 한 속성입니다.  
  
 상태 관리를 사용 하려면 설정는 <xref:System.Web.UI.DataVisualization.Charting.Chart.EnableViewState%2A> 속성을 `true`합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewStateData">
      <MemberSignature Language="C#" Value="public string ViewStateData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ViewStateData" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData" />
      <MemberSignature Language="VB.NET" Value="Public Property ViewStateData As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ViewStateData { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("ViewStateData has been deprecated. Please investigate Control.ViewState instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤의 사용자 정의 뷰 상태를 가져오거나 설정합니다.</summary>
        <value>컨트롤의 뷰 상태를 나타내는 <see langword="string" /> 값으로, 클라이언트의 웹 문서에 포함됩니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 데이터를 클라이언트에서 유지 하도록 지정 하면이 속성 보다 유동적으로 비교는 <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateContent%2A> 속성입니다.  
  
 사용자 정의 뷰 상태는 구현 될 경우 뷰 상태를 설정 하는 개발자가 하 고 다시 게시 된 뷰 상태를 활용 하 여 발생 합니다.  
  
 `Save` 및 `Load` 의 메서드는 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer> 개체 포스트백이 발생할 때 뷰 상태를 로드에 대 한 사용도 뷰 상태를 설정 되기도 합니다. 이 예제를 보려면 아래 샘플 코드를 참조 하십시오.  
  
 간단히 하기 위해 차트 상태를 저장할 수를 지정할 때 사용 된 <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateContent%2A> 데이터, 모양 속성 중 하나 또는 둘 다로 설정 될 수 있는 속성입니다.  
  
 상태 관리를 사용 하려면 설정는 <xref:System.Web.UI.DataVisualization.Charting.Chart.EnableViewState%2A> 속성을 `true`합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Width" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Chart.Width" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Width As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit Width { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "300")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>전체 차트 이미지의 너비(픽셀)를 가져오거나 설정합니다.</summary>
        <value>전체 차트 이미지의 너비(픽셀)를 나타내는 <see cref="T:System.Web.UI.WebControls.Unit" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 백분율 (%) 또는 지점 (pt)의 값을 지정 하지 마십시오. 그러지 않으면 예외가 throw됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>