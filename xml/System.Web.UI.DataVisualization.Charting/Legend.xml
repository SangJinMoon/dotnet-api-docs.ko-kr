<Type Name="Legend" FullName="System.Web.UI.DataVisualization.Charting.Legend">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dc3d6c5dde488fabc2224633ebb1b3d99088f899" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36593022" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Legend : System.Web.UI.DataVisualization.Charting.ChartNamedElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Legend extends System.Web.UI.DataVisualization.Charting.ChartNamedElement" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataVisualization.Charting.Legend" />
  <TypeSignature Language="VB.NET" Value="Public Class Legend&#xA;Inherits ChartNamedElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class Legend : System::Web::UI::DataVisualization::Charting::ChartNamedElement" />
  <TypeSignature Language="F#" Value="type Legend = class&#xA;    inherit ChartNamedElement" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataVisualization.Charting.ChartNamedElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Enabled")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>차트 이미지에 대한 범례를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.Legend> 클래스의 모든 기능을 캡슐화는 <xref:System.Web.UI.DataVisualization.Charting.Chart> 제어 범례의 및 사용 하 여 노출 되는 <xref:System.Web.UI.DataVisualization.Charting.Chart.Legends%2A> 루트의 컬렉션 속성 <xref:System.Web.UI.DataVisualization.Charting.Chart> 개체입니다.  
  
 차트 이미지에 대 한 범례를 개수에 관계 없이 있을 수 있습니다.  
  
 범례는 다음 작업을 수행할 수 있습니다.  
  
-   도킹 하 고 정렬 합니다.  
  
-   내부 또는 외부 그려진된 차트 영역을 표시할 수 있습니다.  
  
-   내용에 자동으로 맞춥니다.  
  
-   행, 열 또는 테이블 등의 미리 정의 된 스타일을 사용 합니다.  
  
-   해칭, 그라데이션 색과 배경 이미지를 사용 합니다.  
  
-   크기가 정 해지고 차트 이미지 내 임의의 위치에 배치 합니다.  
  
 범례 항목으로 표시 됩니다는 <xref:System.Web.UI.DataVisualization.Charting.LegendItem> 개체를 기본 또는 사용자 지정 항목이 있습니다. 사용자 지정 항목은 데이터를 연관 되지 및 추가할 수 있습니다, 삭제 및 사용 하 여 수정 된 <xref:System.Web.UI.DataVisualization.Charting.Legend.CustomItems%2A> 속성입니다.  
  
 기본 항목은 해당 범례에 자동으로 추가 하는 기본적으로 및 도넛형 차트, 원형 차트에 대 한 이름 그려진된 데이터 요소입니다.  
  
 다른 모든 차트 종류에 대 한 기본 항목은 그려진된 데이터 계열의 이름입니다. 각 계열에는 <xref:System.Web.UI.DataVisualization.Charting.Series.Legend%2A> 사용할 범례의 이름을 정의 하는 속성입니다. 범례 항목은 만들어지지 것입니다는 계열에 대 한 경우는 <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.IsVisibleInLegend%2A> 속성이 `false`합니다. 사용 하 여 이러한 기본 항목에 대 한 텍스트를 변경할 수는 <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.LegendText%2A> 속성입니다. 이 속성을 사용 하면 런타임 시 적절 한 값으로 바꿀 수 있는 미리 정의 된 키워드를 지정할 수 있습니다.  
  
 원형 차트 있고 설정 하는 경우는 <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.Label%2A> 속성을 설정 됩니다 범례 텍스트는 레이블에 대 한 설정 된 값입니다. 다른 값으로 텍스트를 설정 하려는 경우 설정할 수 있습니다는 <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.LegendText%2A> 속성입니다. 설정 하려는 대부분의 경우에는 <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.LegendText%2A> 속성을 "#AXISLABEL" 또는 "#VALX"입니다.  
  
 범례의 계열 기호 사각형, 점 또는 선 됩니다. 기호 형식 차트에서 자동으로 설정 되어 및 그려진된 차트 종류에 따라 다릅니다.  
  
 기본적으로 범례 텍스트 자동으로 크기가 조정 됩니다. 사용 하지 않도록 설정 하 여 범례 텍스트의 자동 크기 조정 사용 하지 않도록 설정할 수는 <xref:System.Web.UI.DataVisualization.Charting.Legend.IsTextAutoFit%2A> 속성입니다. 이 속성이로 설정 된 경우 `false`, 범례 텍스트의 크기는 범례 크기 속성에 의해 결정 됩니다 <xref:System.Web.UI.DataVisualization.Charting.Legend.Font%2A>합니다. 경우는 <xref:System.Web.UI.DataVisualization.Charting.Legend.IsTextAutoFit%2A> 속성이 사용 되는지는 <xref:System.Web.UI.DataVisualization.Charting.Legend.AutoFitMinFontSize%2A> 속성 크기를 조정할 때 범례 항목을 가질 수 있는 최소 글꼴 크기를 결정 합니다.  
  
 <xref:System.Web.UI.DataVisualization.Charting.Legend.TextWrapThreshold%2A> 속성 다른 줄 바꿈 되기 전에 한 줄에 표시할 수 있는 문자 수의 제한을 정의 합니다. 범례에 텍스트를 배치 하지 않을 경우 설정의 값은 <xref:System.Web.UI.DataVisualization.Charting.Legend.TextWrapThreshold%2A> 속성을 0으로 합니다. 기본적으로 전체 범례 텍스트는 범례에 맞지 않을 때 텍스트는 잘립니다. 설정할 수 있습니다는 <xref:System.Web.UI.DataVisualization.Charting.Legend.TextWrapThreshold%2A> 범례의 잘리는 대신 줄 바꿈되도록 할 텍스트를 가져옵니다.  
  
 범례의 내용을 지정 된 공간에 맞지 수 없는 경우 범례 항목이 잘립니다. 범례에 대 한 공간이 보다 더 많은 항목이 있는지 나타내기 위해 줄임표가 표시 됩니다. 범례 항목을 잘리지 않도록 방지 하려면 사용 하 여 범례의 크기와 위치를 설정 된 <xref:System.Web.UI.DataVisualization.Charting.Legend.Position%2A> 속성입니다. 범례 위치 또는 크기를 설정할 때는 차트 차트에서 요소를 더 이상 자동으로 배치할 수 없습니다. 경우에 따라 많은 해야 수동으로 원하는 모양을 달성 하기 위해 다른 차트 요소를 배치 합니다.  
  
 또 다른 옵션 범례 기본 설정을 사용 하는 대신 사용자 고유의 셀 열을 정의할 수 있습니다.  
  
 <xref:System.Web.UI.DataVisualization.Charting.Legend> 개체 CellColumn 컬렉션에 있습니다; 각 CellColumn 개체 범례에서 열을 나타냅니다. 셀 열에 <xref:System.Web.UI.DataVisualization.Charting.LegendCellColumn.MaximumWidth%2A> 및 <xref:System.Web.UI.DataVisualization.Charting.LegendCellColumn.MinimumWidth%2A> 열 크기를 조정 하는 사용할 수 있는 속성이 있습니다.  
  
 범례 항목이 많이 포함 되어 있으면 <xref:System.Web.UI.DataVisualization.Charting.Legend.InterlacedRows%2A> 가독성을 높이기 위해 사용할 수 있습니다. 이 속성을 True로 설정 하면 사용 하 여 설정할 수 있는 배경 색이 표시 됩니다는 <xref:System.Web.UI.DataVisualization.Charting.Legend.InterlacedRowsColor%2A> 속성입니다.  
  
 기본적으로 범례는 차트의 오른쪽 위 모퉁이에 배치 됩니다. 이 위치를 사용 하 여 수정할 수 있습니다는 <xref:System.Web.UI.DataVisualization.Charting.Legend.Docking%2A> 및 <xref:System.Web.UI.DataVisualization.Charting.Legend.Alignment%2A> 범례 속성입니다. 범례를 사용 하 여 차트 영역에 연결할 수도 있습니다는 <xref:System.Web.UI.DataVisualization.Charting.Legend.DockedToChartArea%2A> 속성입니다. 이 속성을 범례에서 도킹할 차트 영역의 이름을 지정 합니다. 또한는 <xref:System.Web.UI.DataVisualization.Charting.Legend.IsDockedInsideChartArea%2A> 차트 영역 내부에 범례를 표시 하려면 속성을 사용할 수 있습니다.  
  
 때 <xref:System.Web.UI.DataVisualization.Charting.Legend.IsDockedInsideChartArea%2A> False로 설정 된 <xref:System.Web.UI.DataVisualization.Charting.Legend.MaximumAutoSize%2A> 속성은 사용 가능한 차트 범례를 자동으로 배치 하는 경우 내 범례의 백분율의 최대 크기를 정의 합니다. 너비 또는 높이 범례 도킹 속성을 설정한 후 조정 하려는 경우이 속성을 설정 해야 합니다.  
  
 범례를 사용 하 여 수정할 수는 <xref:System.Web.UI.DataVisualization.Charting.Chart.CustomizeLegend> 이벤트입니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Legend ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Legend.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Legend();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Legend (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Legend.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Legend(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.DataVisualization.Charting.Legend : string -&gt; System.Web.UI.DataVisualization.Charting.Legend" Usage="new System.Web.UI.DataVisualization.Charting.Legend name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" /> 개체의 이름입니다.</param>
        <summary>지정된 범례 이름을 사용하여 <see cref="T:System.Web.UI.DataVisualization.Charting.AnnotationPathPoint" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Alignment">
      <MemberSignature Language="C#" Value="public System.Drawing.StringAlignment Alignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.StringAlignment Alignment" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.Alignment" />
      <MemberSignature Language="VB.NET" Value="Public Property Alignment As StringAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::StringAlignment Alignment { System::Drawing::StringAlignment get(); void set(System::Drawing::StringAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.Alignment : System.Drawing.StringAlignment with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.Alignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.StringAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범례의 맞춤을 가져오거나 설정합니다.</summary>
        <value>범례 맞춤을 나타내는 .NET Framework <see cref="T:System.Drawing.StringAlignment" /> 열거형 값입니다. 기본값은 <see cref="F:System.Drawing.StringAlignment.Near" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 범례를 정렬 하는 것 <xref:System.Drawing.StringAlignment.Near>, <xref:System.Drawing.StringAlignment.Center> 또는 <xref:System.Drawing.StringAlignment.Far>; 맞춤도 영향을 받습니다는 <xref:System.Web.UI.DataVisualization.Charting.Legend.Docking%2A> 속성을 설정 합니다.  
  
 범례가 위쪽 이나 아래쪽에 도킹 될 경우 <xref:System.Drawing.StringAlignment.Near> 을 왼쪽 이나 오른쪽으로 고정 되어 있는 경우이 왼쪽; <xref:System.Drawing.StringAlignment.Near> 는 위쪽에 있습니다. <xref:System.Drawing.StringAlignment.Far> 속성 설정이 그 반대 이며 범례 도킹 될 위치에 따라, 아래쪽 또는 오른쪽에 맞춥니다.  
  
 <xref:System.Drawing.StringAlignment.Center> 항상 가운데 세로 또는 가로로 범례를 배치합니다.  
  
 설정의 <xref:System.Web.UI.DataVisualization.Charting.Legend.Alignment%2A> 속성 경우 영향을 미치지 것입니다는 <xref:System.Web.UI.DataVisualization.Charting.Legend.Position%2A> 속성으로 설정 되지 않은 <xref:System.Web.UI.DataVisualization.Charting.ElementPosition.Auto%2A>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFitMinFontSize">
      <MemberSignature Language="C#" Value="public int AutoFitMinFontSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AutoFitMinFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.AutoFitMinFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFitMinFontSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AutoFitMinFontSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AutoFitMinFontSize : int with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.AutoFitMinFontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(7)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범례 텍스트에 대한 자동 맞춤 알고리즘에서 사용할 수 있는 최소 글꼴 크기를 가져오거나 설정합니다.</summary>
        <value>최소 글꼴 크기를 나타내는 <see langword="integer" /> 값입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범례의 배경색을 가져오거나 설정합니다.</summary>
        <value>범례의 배경색을 나타내는 <see cref="T:System.Drawing.Color" /> 값입니다. 기본 색상은 <see cref="System.Drawing.Color.White" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 유효한 ARGB (알파, 빨간색, 녹색, 파랑) 값이 속성을 설정할 수 있습니다.  
  
 <xref:System.Web.UI.DataVisualization.Charting.Legend.BackColor%2A> 값의 첫 번째 색 배경 그라데이션 색을 지정한 경우에 사용 됩니다.  
  
 알파 값은 색의 불투명도 제어합니다. "투명 하 게"이이 색을 설정 하는 경우-즉, 알파 값이 0 사용 하는 경우-색 없음 범례 배경에 할당 됩니다. 결과적으로, 배경이 투명 하 게 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackGradientStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.GradientStyle BackGradientStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.GradientStyle BackGradientStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.BackGradientStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BackGradientStyle As GradientStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::GradientStyle BackGradientStyle { System::Web::UI::DataVisualization::Charting::GradientStyle get(); void set(System::Web::UI::DataVisualization::Charting::GradientStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BackGradientStyle : System.Web.UI.DataVisualization.Charting.GradientStyle with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.BackGradientStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.GradientEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.GradientStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범례의 배경 그라데이션 방향을 가져오거나 설정합니다. 또한 그라데이션의 사용 여부를 결정합니다.</summary>
        <value>범례 배경 그라데이션의 방향을 나타내는 <see cref="T:System.Web.UI.DataVisualization.Charting.GradientStyle" /> 열거형입니다. 기본값은 <see cref="F:System.Web.UI.DataVisualization.Charting.GradientStyle.None" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여 <xref:System.Web.UI.DataVisualization.Charting.Legend.BackGradientStyle%2A> 속성을 표시할지 여부 확인 범례는 그라데이션, 하나는 그라데이션의 방향을 결정 하는 데 사용 됩니다.  
  
 사용 가능한 패턴 목록은 대 한 참조는 <xref:System.Web.UI.DataVisualization.Charting.GradientStyle> 열거형입니다.  
  
 그라데이션 색 사용 하려면:  
  
 범례 배경의의 기본 색 설정의 <xref:System.Web.UI.DataVisualization.Charting.Legend.BackColor%2A> 속성입니다.  
  
 범례 배경의의 보조 색 설정의 <xref:System.Web.UI.DataVisualization.Charting.Legend.BackSecondaryColor%2A> 속성입니다.  
  
 이 설정 <xref:System.Web.UI.DataVisualization.Charting.Legend.BackGradientStyle%2A> 속성 원하는 그라데이션 스타일을 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackHatchStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartHatchStyle BackHatchStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartHatchStyle BackHatchStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.BackHatchStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BackHatchStyle As ChartHatchStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartHatchStyle BackHatchStyle { System::Web::UI::DataVisualization::Charting::ChartHatchStyle get(); void set(System::Web::UI::DataVisualization::Charting::ChartHatchStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BackHatchStyle : System.Web.UI.DataVisualization.Charting.ChartHatchStyle with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.BackHatchStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.HatchStyleEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartHatchStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범례의 빗살 무늬 스타일을 가져오거나 설정합니다.</summary>
        <value>범례의 빗살 무늬 스타일을 나타내는 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartHatchStyle" /> 열거형입니다. 기본값은 <see cref="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.None" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.ChartHatchStyle> 열거형 형식의 브러시를 사용한 빗살 무늬 지정 <xref:System.Drawing.Drawing2D.HatchBrush>합니다. 빗살 무늬 배경색 및 배경 위에 그려집니다 선으로 구성 됩니다.  
  
 사용 가능한 해칭 스타일이 목록이 대 한 참조는 <xref:System.Web.UI.DataVisualization.Charting.ChartHatchStyle> 열거형입니다.  
  
 **참고** 빗살 무늬 선의 색에 따라 결정 되는 <xref:System.Web.UI.DataVisualization.Charting.Legend.BackSecondaryColor%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImage">
      <MemberSignature Language="C#" Value="public string BackImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.BackImage" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BackImage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackImage : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.BackImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ImageValueEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범례의 배경 이미지를 가져오거나 설정합니다.</summary>
        <value>이미지 파일의 URL을 나타내는 <see langword="string" /> 값입니다. 기본값은 빈 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성의 경로 대 한 배경 이미지를 정의 <xref:System.Web.UI.DataVisualization.Charting.Chart> 범례 고 절대 또는 상대 URL이 될 수 있습니다.  
  
 사용 하 여 이미지를 배치 하려면는 <xref:System.Web.UI.DataVisualization.Charting.Legend.BackImageAlignment%2A> 및 <xref:System.Web.UI.DataVisualization.Charting.Legend.BackImageWrapMode%2A> 속성입니다.  
  
 설정 하 여 "투명"으로 이미지에 표시 되는 색상 중 하나로 지정할 수도 있습니다는 <xref:System.Web.UI.DataVisualization.Charting.Legend.BackImageTransparentColor%2A> 속성입니다.  
  
 이미지는 아이콘을 포함 하는.NET Framework에서 지 원하는 모든 유효한 그래픽 파일에서 가져올 수 있습니다.  
  
 배경 이미지 그라데이션 색과 같은 다른 배경 속성 보다 우선합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageAlignment">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle BackImageAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle BackImageAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.BackImageAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImageAlignment As ChartImageAlignmentStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartImageAlignmentStyle BackImageAlignment { System::Web::UI::DataVisualization::Charting::ChartImageAlignmentStyle get(); void set(System::Web::UI::DataVisualization::Charting::ChartImageAlignmentStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BackImageAlignment : System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.BackImageAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="F:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Unscaled" /> 그리기 모드에 사용되는 배경 이미지 맞춤을 가져오거나 설정합니다.</summary>
        <value>배경 이미지 맞춤을 나타내는 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle" /> 열거형 값입니다. 기본값은 <see cref="F:System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle.TopLeft" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성의 범례;에 대 한 배경 이미지의 맞춤을 결정합니다. 인 경우에만 적용 되는 <xref:System.Web.UI.DataVisualization.Charting.Legend.BackImageWrapMode%2A> 속성이 <xref:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Unscaled>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageTransparentColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackImageTransparentColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackImageTransparentColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.BackImageTransparentColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImageTransparentColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackImageTransparentColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackImageTransparentColor : System.Drawing.Color with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.BackImageTransparentColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>배경 이미지를 그릴 때 투명한 색으로 바꿀 색을 가져오거나 설정합니다.</summary>
        <value>투명하게 표시될 <see cref="T:System.Drawing.Color" /> 값입니다. 기본값은 <see cref="F:System.Drawing.Color.Empty" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageWrapMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartImageWrapMode BackImageWrapMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartImageWrapMode BackImageWrapMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.BackImageWrapMode" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImageWrapMode As ChartImageWrapMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartImageWrapMode BackImageWrapMode { System::Web::UI::DataVisualization::Charting::ChartImageWrapMode get(); void set(System::Web::UI::DataVisualization::Charting::ChartImageWrapMode value); };" />
      <MemberSignature Language="F#" Value="member this.BackImageWrapMode : System.Web.UI.DataVisualization.Charting.ChartImageWrapMode with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.BackImageWrapMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartImageWrapMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범례 배경 이미지의 그리기 모드를 가져오거나 설정합니다.</summary>
        <value>범례 배경 이미지의 그리기 모드를 나타내는 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode" /> 열거형 값입니다. 기본값은 <see cref="F:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Tile" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.Legend.BackImageWrapMode%2A> 속성 이미지가 표시 되는 방식을 결정; 배율 조정와 같은 이미지, 바둑판식 될 수 있습니다.  
  
 이미지의 배율을 조정 범례의 경계 내에 맞게 늘여 집니다. 이미지를 바둑판식으로 배열 하는 경우 범례의 왼쪽 위 모서리에서 시작 하 여 반복적으로 그려집니다.  
  
 사용 가능한 래핑 모드에 대 한 자세한 내용은 참조는 <xref:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode> 열거형 항목입니다.  
  
 경우는 <xref:System.Web.UI.DataVisualization.Charting.Legend.BackImageWrapMode%2A> 속성이로 설정 되어 <xref:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Unscaled>, 이미지를 그릴 위치 따라 사용자가 <xref:System.Web.UI.DataVisualization.Charting.Legend.BackImageAlignment%2A> 속성을 설정 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackSecondaryColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackSecondaryColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackSecondaryColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.BackSecondaryColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackSecondaryColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackSecondaryColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackSecondaryColor : System.Drawing.Color with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.BackSecondaryColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범례 배경의 보조 색을 가져오거나 설정합니다.</summary>
        <value>빗살 무늬 또는 그라데이션 채우기가 있는 배경의 보조 색에 사용되는 <see cref="T:System.Drawing.Color" /> 값입니다. 기본값은 <see cref="F:System.Drawing.Color.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.Legend.BackSecondaryColor%2A> 속성 결정 되는 여러 보조 배경색 <xref:System.Web.UI.DataVisualization.Charting.Chart> 개체, 및 그라데이션 색을 적용할 때 사용 됩니다.  
  
 설정할 수 있습니다 <xref:System.Web.UI.DataVisualization.Charting.Legend.BackSecondaryColor%2A> 유효한 ARGB (알파, 빨간색, 녹색, 파랑) 값입니다.  
  
 해칭에 사용 되는 경우는 <xref:System.Web.UI.DataVisualization.Charting.Legend.BackSecondaryColor%2A> 속성 범례의 줄무늬 선의 색을 결정 합니다.  
  
 범례 배경 그라데이션 색 사용 하려면:  
  
-   기본 색으로 설정 된 <xref:System.Web.UI.DataVisualization.Charting.Legend.BackColor%2A> 속성입니다.  
  
-   보조 색으로 설정 된 <xref:System.Web.UI.DataVisualization.Charting.Legend.BackSecondaryColor%2A> 속성입니다.  
  
-   설정의 <xref:System.Web.UI.DataVisualization.Charting.Legend.BackGradientStyle%2A> 속성 원하는 그라데이션 스타일을 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.BorderColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BorderColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BorderColor : System.Drawing.Color with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.BorderColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범례의 테두리 색을 가져오거나 설정합니다.</summary>
        <value>범례의 테두리 색을 나타내는 <see cref="T:System.Drawing.Color" /> 값입니다. 기본 색상은 <see cref="F:System.Drawing.Color.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 유효한 ARGB (알파, 빨간색, 녹색, 파랑) 값이 속성을 설정할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderDashStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartDashStyle BorderDashStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartDashStyle BorderDashStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.BorderDashStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderDashStyle As ChartDashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartDashStyle BorderDashStyle { System::Web::UI::DataVisualization::Charting::ChartDashStyle get(); void set(System::Web::UI::DataVisualization::Charting::ChartDashStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderDashStyle : System.Web.UI.DataVisualization.Charting.ChartDashStyle with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.BorderDashStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartDashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범례의 테두리 스타일을 가져오거나 설정합니다.</summary>
        <value>차트 요소의 테두리 스타일을 결정하는 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartDashStyle" /> 열거형 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.Legend.BorderDashStyle%2A> 속성 테두리에 사용할 선 스타일을 결정 합니다. 단색, 점선 등 줄 수 있습니다.  
  
 다른 테두리 스타일에 대 한 참조는 <xref:System.Web.UI.DataVisualization.Charting.ChartDashStyle> 열거형 항목입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderWidth">
      <MemberSignature Language="C#" Value="public int BorderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.BorderWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BorderWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BorderWidth : int with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.BorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범례의 테두리 너비를 가져오거나 설정합니다.</summary>
        <value>범례의 테두리 너비(픽셀)를 결정하는 <see langword="integer" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.Legend.BorderWidth%2A> 속성 같은 선형 차트, 사용자 지정 범례 항목 "행" 스타일과 같은 표시 요소에서 줄 너비를 설정할 수도 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CellColumns">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.LegendCellColumnCollection CellColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.LegendCellColumnCollection CellColumns" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.CellColumns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CellColumns As LegendCellColumnCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::LegendCellColumnCollection ^ CellColumns { System::Web::UI::DataVisualization::Charting::LegendCellColumnCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CellColumns : System.Web.UI.DataVisualization.Charting.LegendCellColumnCollection" Usage="System.Web.UI.DataVisualization.Charting.Legend.CellColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.LegendCellColumnCollectionEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.LegendCellColumnCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범례에 대한 <see cref="T:System.Web.UI.DataVisualization.Charting.LegendCellColumnCollection" />을 가져옵니다.</summary>
        <value>범례에 대한 <see cref="T:System.Web.UI.DataVisualization.Charting.LegendCellColumnCollection" /> 개체입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomItems">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.LegendItemsCollection CustomItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.LegendItemsCollection CustomItems" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.CustomItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomItems As LegendItemsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::LegendItemsCollection ^ CustomItems { System::Web::UI::DataVisualization::Charting::LegendItemsCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CustomItems : System.Web.UI.DataVisualization.Charting.LegendItemsCollection" Usage="System.Web.UI.DataVisualization.Charting.Legend.CustomItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.LegendItemCollectionEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.LegendItemsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자 지정 범례 항목에 사용되는 <see cref="T:System.Web.UI.DataVisualization.Charting.LegendItemsCollection" /> 개체를 가져옵니다.</summary>
        <value>사용자 지정 범례 항목에 사용되는 <see cref="T:System.Web.UI.DataVisualization.Charting.LegendItemsCollection" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 컬렉션 속성을 추가, 삭제 또는 사용자 지정 범례 항목 수정 사용할 수 있습니다.  
  
 기본 범례 항목과 달리 사용자 지정 범례 항목 계열 또는 데이터에 대 한 관련된 포인트를 갖지 않습니다.  
  
 범례 항목을 수정 하려면 사용 하 여는 <xref:System.Web.UI.DataVisualization.Charting.Chart.CustomizeLegend> 이벤트입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Legend.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="legend.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
        <summary>
          <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DockedToChartArea">
      <MemberSignature Language="C#" Value="public string DockedToChartArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DockedToChartArea" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.DockedToChartArea" />
      <MemberSignature Language="VB.NET" Value="Public Property DockedToChartArea As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DockedToChartArea { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DockedToChartArea : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.DockedToChartArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("NotSet")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.LegendAreaNameConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범례가 도킹될 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" />의 이름을 가져오거나 설정합니다.</summary>
        <value>이 범례가 도킹될 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" />의 이름을 나타내는 <see langword="string" /> 값입니다. 기본값은 빈 문자열입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Docking">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.Docking Docking { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.Docking Docking" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.Docking" />
      <MemberSignature Language="VB.NET" Value="Public Property Docking As Docking" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::Docking Docking { System::Web::UI::DataVisualization::Charting::Docking get(); void set(System::Web::UI::DataVisualization::Charting::Docking value); };" />
      <MemberSignature Language="F#" Value="member this.Docking : System.Web.UI.DataVisualization.Charting.Docking with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.Docking" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.Docking</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범례가 도킹될 위치를 결정하는 값을 가져오거나 설정합니다.</summary>
        <value>범례가 도킹되는지 여부를 결정하는 <see cref="T:System.Web.UI.DataVisualization.Charting.Docking" /> 열거형 값입니다. 기본값은 <see cref="F:System.Web.UI.DataVisualization.Charting.Docking.Right" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.Legend> 위쪽, 왼쪽, 아래쪽 또는 오른쪽 전체 차트 이미지 또는 내부 이나 차트 영역 외부에 도킹 될 수 있습니다. 경우는 <xref:System.Web.UI.DataVisualization.Charting.Legend.IsDockedInsideChartArea%2A> 속성이 `false`, 도킹 전체 차트 이미지에 적용 됩니다. 경우는 <xref:System.Web.UI.DataVisualization.Charting.Legend.IsDockedInsideChartArea%2A> 속성이 `true`, 도킹에 적용 됩니다는 <xref:System.Web.UI.DataVisualization.Charting.ChartArea> 로 지정 된 개체는 <xref:System.Web.UI.DataVisualization.Charting.Legend.DockedToChartArea%2A> 속성  
  
 경우에이 속성이 적용 되지 않습니다는 <xref:System.Web.UI.DataVisualization.Charting.Legend.Position%2A> 속성으로 설정 되지 않은 <xref:System.Web.UI.DataVisualization.Charting.ElementPosition.Auto%2A>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범례의 사용 가능 여부를 결정하는 값을 가져오거나 설정합니다.</summary>
        <value>범례를 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 범례를 숨기려면이 속성을 설정 `false`합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.Font" />
      <MemberSignature Language="VB.NET" Value="Public Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Drawing.Font with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Font), "Microsoft Sans Serif, 8pt")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범례의 글꼴 속성을 설정하는 데 사용되는 <see cref="T:System.Drawing.Font" /> 개체를 가져오거나 설정합니다.</summary>
        <value>범례의 글꼴 속성을 설정하는 데 사용되는 <see cref="T:System.Drawing.Font" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 변경 하려고 하면 <xref:System.Drawing.Font> 개체 실행 시 컴파일 오류가 발생 합니다. 런타임 시 글꼴 속성을 설정 하려면 새 만들어야 <xref:System.Drawing.Font> 개체입니다.  
  
> [!NOTE]
>  Legend.Font.Size 속성을 설정 하는 경우는 <xref:System.Web.UI.DataVisualization.Charting.Legend.IsTextAutoFit%2A> 속성이 false로 설정 됩니다. 또한 설정 하는 경우는 <xref:System.Web.UI.DataVisualization.Charting.Legend.IsTextAutoFit%2A> 속성을 true로,이 속성은 8 포인트 기본값으로 다시 설정 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범례 텍스트의 색을 가져오거나 설정합니다.</summary>
        <value>범례 텍스트의 색을 나타내는 <see cref="T:System.Drawing.Color" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.Legend.ForeColor%2A> 속성은 범례 텍스트 색을 설정 하는 데 사용 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderSeparator">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle HeaderSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle HeaderSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.HeaderSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderSeparator As LegendSeparatorStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::LegendSeparatorStyle HeaderSeparator { System::Web::UI::DataVisualization::Charting::LegendSeparatorStyle get(); void set(System::Web::UI::DataVisualization::Charting::LegendSeparatorStyle value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderSeparator : System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.HeaderSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle), "None")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범례 머리글의 시각적 구분 기호 유형을 가져오거나 설정합니다.</summary>
        <value>범례 머리글의 시각적 구분 기호 유형을 나타내는 <see cref="T:System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle" /> 열거형 값입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderSeparatorColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color HeaderSeparatorColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color HeaderSeparatorColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.HeaderSeparatorColor" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderSeparatorColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color HeaderSeparatorColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderSeparatorColor : System.Drawing.Color with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.HeaderSeparatorColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범례 머리글에 대한 구분 기호의 색을 가져오거나 설정합니다.</summary>
        <value>범례 머리글에 대한 구분 기호의 색을 나타내는 <see cref="T:System.Drawing.Color" /> 값입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsideChartArea">
      <MemberSignature Language="C#" Value="public string InsideChartArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsideChartArea" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.InsideChartArea" />
      <MemberSignature Language="VB.NET" Value="Public Property InsideChartArea As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsideChartArea { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsideChartArea : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.InsideChartArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("NotSet")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.LegendAreaNameConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범례가 그려지는 차트 영역의 이름을 가져오거나 설정합니다.</summary>
        <value>차트 영역의 이름을 나타내는 <see langword="string" /> 값입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InterlacedRows">
      <MemberSignature Language="C#" Value="public bool InterlacedRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InterlacedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.InterlacedRows" />
      <MemberSignature Language="VB.NET" Value="Public Property InterlacedRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InterlacedRows { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.InterlacedRows : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.InterlacedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범례 행을 인터레이스된 배경색으로 그릴지 여부를 나타내는 플래그를 가져오거나 설정합니다.</summary>
        <value>범례의 교대로 반복되는 행을 지정된 색으로 그릴지 여부를 결정하는 <see langword="Boolean" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 범례에는 많은 항목을 포함 하는 경우는 <xref:System.Web.UI.DataVisualization.Charting.Legend.InterlacedRows%2A> 가독성을 높이기 위해 속성을 사용할 수 있습니다. 이 속성이로 설정 된 경우 `true`, 범례를 사용 하 여 설정할 수 있는 인터레이스된 행 배경색 표시 됩니다는 <xref:System.Web.UI.DataVisualization.Charting.Legend.InterlacedRowsColor%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InterlacedRowsColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color InterlacedRowsColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color InterlacedRowsColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.InterlacedRowsColor" />
      <MemberSignature Language="VB.NET" Value="Public Property InterlacedRowsColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color InterlacedRowsColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.InterlacedRowsColor : System.Drawing.Color with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.InterlacedRowsColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범례의 인터레이스된 행의 배경색을 가져오거나 설정합니다.</summary>
        <value>범례의 인터레이스된 행의 배경색을 나타내는 <see cref="T:System.Drawing.Color" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 인터레이스된 행에서 사용 되는 경우에 적용할 수만 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDockedInsideChartArea">
      <MemberSignature Language="C#" Value="public bool IsDockedInsideChartArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDockedInsideChartArea" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.IsDockedInsideChartArea" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDockedInsideChartArea As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDockedInsideChartArea { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsDockedInsideChartArea : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.IsDockedInsideChartArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범례가 차트 영역 내부에 도킹되는지 또는 외부에 도킹되는지 나타내는 플래그를 가져오거나 설정합니다.</summary>
        <value>범례가 차트 영역 내부에 도킹되면 <see langword="true" />이며, 그렇지 않고 차트 영역 외부에 도킹되면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성만 영향을 미칠 경우는 <xref:System.Web.UI.DataVisualization.Charting.Legend.DockedToChartArea%2A> 속성의 이름으로 설정 되는 <xref:System.Web.UI.DataVisualization.Charting.ChartArea> 개체입니다.  
  
> [!NOTE]
>  경우는 <xref:System.Web.UI.DataVisualization.Charting.Legend.Position%2A> 속성 이외의 값으로 설정 되어 <xref:System.Web.UI.DataVisualization.Charting.ElementPosition.Auto%2A>, <xref:System.Web.UI.DataVisualization.Charting.Legend.IsDockedInsideChartArea%2A> 도 속성이 적용 되지 않습니다. 즉, 범례의 위치에 의해 결정 되는 <xref:System.Web.UI.DataVisualization.Charting.Legend.Position%2A> 속성을 설정 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEquallySpacedItems">
      <MemberSignature Language="C#" Value="public bool IsEquallySpacedItems { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEquallySpacedItems" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.IsEquallySpacedItems" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEquallySpacedItems As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEquallySpacedItems { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEquallySpacedItems : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.IsEquallySpacedItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>모든 범례 항목의 간격이 같은지 여부를 나타내는 플래그를 가져오거나 설정합니다.</summary>
        <value>범례 항목의 간격이 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTextAutoFit">
      <MemberSignature Language="C#" Value="public bool IsTextAutoFit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTextAutoFit" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.IsTextAutoFit" />
      <MemberSignature Language="VB.NET" Value="Public Property IsTextAutoFit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTextAutoFit { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsTextAutoFit : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.IsTextAutoFit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범례 텍스트의 크기가 자동으로 조정되는지 여부를 나타내는 플래그를 가져오거나 설정합니다.</summary>
        <value>범례 텍스트의 크기가 자동으로 조정되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemColumnSeparator">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle ItemColumnSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle ItemColumnSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.ItemColumnSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemColumnSeparator As LegendSeparatorStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::LegendSeparatorStyle ItemColumnSeparator { System::Web::UI::DataVisualization::Charting::LegendSeparatorStyle get(); void set(System::Web::UI::DataVisualization::Charting::LegendSeparatorStyle value); };" />
      <MemberSignature Language="F#" Value="member this.ItemColumnSeparator : System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.ItemColumnSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle), "None")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범례 테이블 열의 시각적 구분 기호 유형을 가져오거나 설정합니다.</summary>
        <value>범례 테이블 열의 시각적 구분 기호 유형을 나타내는 <see cref="T:System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle" /> 열거형 값입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemColumnSeparatorColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ItemColumnSeparatorColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ItemColumnSeparatorColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.ItemColumnSeparatorColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemColumnSeparatorColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ItemColumnSeparatorColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ItemColumnSeparatorColor : System.Drawing.Color with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.ItemColumnSeparatorColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범례 테이블 열 구분 기호의 색을 가져오거나 설정합니다.</summary>
        <value>범례 테이블 열 구분 기호의 색을 그리는 데 사용되는 <see cref="T:System.Drawing.Color" /> 값입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemColumnSpacing">
      <MemberSignature Language="C#" Value="public int ItemColumnSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ItemColumnSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.ItemColumnSpacing" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemColumnSpacing As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ItemColumnSpacing { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ItemColumnSpacing : int with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.ItemColumnSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(50)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범례 테이블 열 간격을 가져오거나 설정합니다.</summary>
        <value>테이블 열 간격을 나타내는 <see langword="integer" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.Legend.ItemColumnSpacing%2A> 속성 값은 범례 텍스트 글꼴의 백분율로 계산 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegendItemOrder">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.LegendItemOrder LegendItemOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.LegendItemOrder LegendItemOrder" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.LegendItemOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property LegendItemOrder As LegendItemOrder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::LegendItemOrder LegendItemOrder { System::Web::UI::DataVisualization::Charting::LegendItemOrder get(); void set(System::Web::UI::DataVisualization::Charting::LegendItemOrder value); };" />
      <MemberSignature Language="F#" Value="member this.LegendItemOrder : System.Web.UI.DataVisualization.Charting.LegendItemOrder with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.LegendItemOrder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.LegendItemOrder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범례 항목이 표시되는 순서를 지정하는 플래그를 가져오거나 설정합니다. 이 속성은 차트 계열에 대해 자동으로 추가된 범례 항목에만 영향을 주며, 사용자 지정 범례 항목에는 영향을 주지 않습니다.</summary>
        <value>범례 항목이 표시되는 순서를 지정하는 <see cref="T:System.Web.UI.DataVisualization.Charting.LegendItemOrder" /> 열거형 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.UI.DataVisualization.Charting.LegendItemOrder> 속성이 <xref:System.Web.UI.DataVisualization.Charting.LegendItemOrder.Auto>, 범례 StackedColumn, StackedColumn100, StackedArea 또는 StackedArea100 차트 종류를 사용 하는 경우에 자동으로 되돌릴 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegendStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.LegendStyle LegendStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.LegendStyle LegendStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.LegendStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property LegendStyle As LegendStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::LegendStyle LegendStyle { System::Web::UI::DataVisualization::Charting::LegendStyle get(); void set(System::Web::UI::DataVisualization::Charting::LegendStyle value); };" />
      <MemberSignature Language="F#" Value="member this.LegendStyle : System.Web.UI.DataVisualization.Charting.LegendStyle with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.LegendStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.LegendStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범례의 스타일을 가져오거나 설정합니다.</summary>
        <value>범례 스타일을 결정하는 <see cref="T:System.Web.UI.DataVisualization.Charting.LegendStyle" /> 열거형 값입니다. 기본값은 <see cref="F:System.Web.UI.DataVisualization.Charting.LegendStyle.Table" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로 범례는 일련의 테이블에 항목으로 표시 됩니다. 테이블에서 항목을 설정 하 여 width-wise 또는 height-wise 확장할지 여부를 지정할 수 있습니다는 <xref:System.Web.UI.DataVisualization.Charting.Legend.TableStyle%2A> 속성입니다. 경우는 <xref:System.Web.UI.DataVisualization.Charting.Legend.TableStyle%2A> 속성이 <xref:System.Web.UI.DataVisualization.Charting.LegendTableStyle.Auto>, <xref:System.Web.UI.DataVisualization.Charting.Chart> 컨트롤 넓은 테이블 또는 차트의 위치 지정 및 맞춤에 따라 긴 테이블을 그릴 것인지를 결정 합니다. 여러 범례 항목 열을 사용 하 여 그릴 범례를 않을 수 있습니다.  
  
 범례에 대 한 세 가지 가능한 스타일: 열, 행 및 테이블입니다. 이러한 스타일의 요약 목록이 아래 표를 참조 하십시오.  
  
|스타일|설명|  
|-|-|  
|열|범례 항목은 여러 행이 있는 한 열에 표시 됩니다. 범례는 차트의 오른쪽 또는 왼쪽에 도킹 한 경우 가장 일반적으로 사용 합니다.|  
|행|범례 항목은 여러 열이 있는 한 행에 표시 됩니다. 범례 위쪽 또는 차트의 아래쪽에 도킹 한 경우 가장 일반적으로 사용 합니다.|  
|표|범례 항목은 여러 열과 행을 사용 하 여 표시 됩니다.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumAutoSize">
      <MemberSignature Language="C#" Value="public float MaximumAutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MaximumAutoSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.MaximumAutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumAutoSize As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float MaximumAutoSize { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumAutoSize : single with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.MaximumAutoSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(50)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>차트 영역의 백분율로 측정되는 범례의 최대 크기를 가져오거나 설정합니다. 이 값은 자동 레이아웃 알고리즘에 사용됩니다.</summary>
        <value>A <see langword="float" /> 범례의 최대 크기를 나타내는 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 범례가을 왼쪽 이나 오른쪽 차트 영역에 도킹 될,이 속성 차트 영역에 대 한 백분율로 측정 된 범례의 최대 너비를 결정 합니다. 범례, 위쪽 또는 아래쪽에 도킹 한 경우이 속성 백분율로 측정 되는 범례 요소의 최대 높이 결정 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범례의 이름을 가져오거나 설정합니다.</summary>
        <value>범례의 이름을 나타내는 <see langword="string" /> 값입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ElementPosition Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.ElementPosition Position" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.Position" />
      <MemberSignature Language="VB.NET" Value="Public Property Position As ElementPosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ElementPosition ^ Position { System::Web::UI::DataVisualization::Charting::ElementPosition ^ get(); void set(System::Web::UI::DataVisualization::Charting::ElementPosition ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Position : System.Web.UI.DataVisualization.Charting.ElementPosition with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.ElementPositionConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ElementPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범례의 위치를 가져오거나 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.DataVisualization.Charting.ElementPosition" /> 개체를 가져오거나 설정합니다.</summary>
        <value>범례의 위치를 나타내는 <see cref="T:System.Web.UI.DataVisualization.Charting.ElementPosition" /> 값입니다. 기본값은 <see cref="P:System.Web.UI.DataVisualization.Charting.ElementPosition.Auto" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.Legend.Position%2A> 속성이 자동 즉, Legend.Position.Auto가 `true`이면 <xref:System.Web.UI.DataVisualization.Charting.Chart> 컨트롤에 의해 범례 위치가 자동으로 계산됩니다. 이때 <xref:System.Web.UI.DataVisualization.Charting.Legend.Docking%2A>, <xref:System.Web.UI.DataVisualization.Charting.Legend.Alignment%2A> 및 <xref:System.Web.UI.DataVisualization.Charting.Legend.IsDockedInsideChartArea%2A> 속성 설정이 고려됩니다.  
  
 자동이 아니면 <xref:System.Web.UI.DataVisualization.Charting.Legend.Docking%2A>, <xref:System.Web.UI.DataVisualization.Charting.Legend.DockedToChartArea%2A> 및 <xref:System.Web.UI.DataVisualization.Charting.Legend.IsDockedInsideChartArea%2A> 속성이 무시되고 반환된 <xref:System.Web.UI.DataVisualization.Charting.ElementPosition> 개체의 값만으로 범례 위치가 결정됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ShadowColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ShadowColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.ShadowColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ShadowColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ShadowColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ShadowColor : System.Drawing.Color with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.ShadowColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "128, 0, 0, 0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범례의 그림자 색을 가져오거나 설정합니다.</summary>
        <value>범례의 그림자 색을 나타내는 <see cref="T:System.Drawing.Color" /> 값입니다. 기본 색상은 <see cref="P:System.Drawing.Color.Black" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 유효한 ARGB (알파, 빨간색, 녹색, 파랑) 값으로 설정할 수 있습니다.  
  
 알파 값을 사용 하 여 "현실적인" 그림자 효과;에 적용할 수 있습니다. "128,0,0,0" 그림자의 색 값을 시도 합니다.  
  
 그림자를 구현 하려면 설정는 <xref:System.Web.UI.DataVisualization.Charting.Legend.ShadowOffset%2A> 영 (0)이 아닌 값으로 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowOffset">
      <MemberSignature Language="C#" Value="public int ShadowOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ShadowOffset" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.ShadowOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property ShadowOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ShadowOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ShadowOffset : int with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.ShadowOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범례의 그림자 오프셋(픽셀)을 가져오거나 설정합니다.</summary>
        <value>범례의 그림자 오프셋(픽셀)을 나타내는 <see langword="integer" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 그림자를 구현 하려면이 속성을 0이 아닌 값으로 설정 합니다. 양수 값 및; 오른쪽 아래로 이동 그림자 발생 합니다. 음수 값에 그림자를 위쪽과 왼쪽에 발생 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TableStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.LegendTableStyle TableStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.LegendTableStyle TableStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.TableStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property TableStyle As LegendTableStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::LegendTableStyle TableStyle { System::Web::UI::DataVisualization::Charting::LegendTableStyle get(); void set(System::Web::UI::DataVisualization::Charting::LegendTableStyle value); };" />
      <MemberSignature Language="F#" Value="member this.TableStyle : System.Web.UI.DataVisualization.Charting.LegendTableStyle with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.TableStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.LegendTableStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범례 테이블 스타일을 가져오거나 설정합니다.</summary>
        <value>범례 테이블 스타일을 지정하는 <see cref="T:System.Web.UI.DataVisualization.Charting.LegendTableStyle" /> 열거형 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 적용만 하는 경우는 <xref:System.Web.UI.DataVisualization.Charting.Legend.LegendStyle%2A> 속성이 <xref:System.Web.UI.DataVisualization.Charting.LegendStyle.Table>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextWrapThreshold">
      <MemberSignature Language="C#" Value="public int TextWrapThreshold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TextWrapThreshold" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.TextWrapThreshold" />
      <MemberSignature Language="VB.NET" Value="Public Property TextWrapThreshold As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TextWrapThreshold { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TextWrapThreshold : int with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.TextWrapThreshold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(25)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>텍스트가 줄 바꿈되기 전에 범례에서 연속적으로 표시할 수 있는 문자 수를 가져오거나 설정합니다.</summary>
        <value>텍스트가 줄 바꿈되기 전에 범례에 연속적으로 배치할 수 있는 문자 수를 나타내는 <see langword="integer" /> 값입니다. 기본값은 25입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 범례 텍스트 값이 속성에 지정 된 값을 초과 하면 다음 공백 문자가 발견 되 면 텍스트 자동으로 래핑할 수 있습니다. 텍스트에 공백 문자가 없는 경우 텍스트가 줄 바꿈되지 않습니다.  
  
 설정의 <xref:System.Web.UI.DataVisualization.Charting.Legend.TextWrapThreshold%2A> 속성을 0으로 기능을 사용 하지 않도록 설정 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범례 제목의 텍스트를 가져오거나 설정합니다.</summary>
        <value>범례 제목 텍스트를 나타내는 <see langword="string" /> 값입니다. 기본값은 길이가 0인 문자열입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleAlignment">
      <MemberSignature Language="C#" Value="public System.Drawing.StringAlignment TitleAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.StringAlignment TitleAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.TitleAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleAlignment As StringAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::StringAlignment TitleAlignment { System::Drawing::StringAlignment get(); void set(System::Drawing::StringAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.TitleAlignment : System.Drawing.StringAlignment with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.TitleAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.StringAlignment), "Center")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.StringAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범례 제목의 맞춤을 가져오거나 설정합니다.</summary>
        <value>범례 제목의 맞춤을 나타내는 <see cref="T:System.Drawing.StringAlignment" /> 열거형 값입니다. 기본값은 <see cref="F:System.Drawing.StringAlignment.Center" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleBackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color TitleBackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color TitleBackColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.TitleBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleBackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color TitleBackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.TitleBackColor : System.Drawing.Color with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.TitleBackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범례 제목의 배경색을 가져오거나 설정합니다.</summary>
        <value>범례 제목의 배경을 그리는 데 사용되는 <see cref="T:System.Drawing.Color" /> 값입니다. 기본값은 <see cref="F:System.Drawing.Color.Empty" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleFont">
      <MemberSignature Language="C#" Value="public System.Drawing.Font TitleFont { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font TitleFont" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.TitleFont" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleFont As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ TitleFont { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TitleFont : System.Drawing.Font with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.TitleFont" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Font), "Microsoft Sans Serif, 8pt, style=Bold")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범례 제목의 글꼴을 가져오거나 설정합니다.</summary>
        <value>범례 제목의 글꼴을 지정하는 <see cref="T:System.Drawing.Font" /> 개체입니다. 기본값은 "Microsoft Sans Serif, 8pt, Bold"입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 범례 제목의 글꼴 속성을 설정 하려면이 속성을 사용할 수 있습니다.  
  
 이 속성을 변경 하려고 하면 <xref:System.Drawing.Font> 개체 실행 시 컴파일 오류가 발생 합니다. 런타임 시 글꼴 속성을 설정 하려면 새 만들어야 <xref:System.Drawing.Font> 개체입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color TitleForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color TitleForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.TitleForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color TitleForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.TitleForeColor : System.Drawing.Color with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.TitleForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범례 제목의 텍스트 색을 가져오거나 설정합니다.</summary>
        <value>제목 텍스트 색을 그리는 데 사용되는 <see cref="T:System.Drawing.Color" /> 값입니다. 기본값은 <see cref="P:System.Drawing.Color.Black" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleSeparator">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle TitleSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle TitleSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.TitleSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleSeparator As LegendSeparatorStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::LegendSeparatorStyle TitleSeparator { System::Web::UI::DataVisualization::Charting::LegendSeparatorStyle get(); void set(System::Web::UI::DataVisualization::Charting::LegendSeparatorStyle value); };" />
      <MemberSignature Language="F#" Value="member this.TitleSeparator : System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.TitleSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle), "None")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범례 제목의 시각적 구분 기호 유형을 가져오거나 설정합니다.</summary>
        <value>제목 아래에 그릴 구분 기호의 유형을 나타내는 <see cref="T:System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle" /> 값입니다. 기본값은 <see cref="F:System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle.None" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleSeparatorColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color TitleSeparatorColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color TitleSeparatorColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.TitleSeparatorColor" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleSeparatorColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color TitleSeparatorColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.TitleSeparatorColor : System.Drawing.Color with get, set" Usage="System.Web.UI.DataVisualization.Charting.Legend.TitleSeparatorColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범례 제목 구분 기호의 색을 가져오거나 설정합니다.</summary>
        <value>범례 제목 구분 기호의 색을 그리는 데 사용되는 <see cref="T:System.Drawing.Color" /> 값입니다. 기본값은 <see cref="P:System.Drawing.Color.Black" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>