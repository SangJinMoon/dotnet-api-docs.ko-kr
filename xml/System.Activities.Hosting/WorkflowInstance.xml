<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WorkflowInstance.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58d6a7b9b8156534bc27bc0b13ae178961d5c41c8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8d6a7b9b8156534bc27bc0b13ae178961d5c41c8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source><ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph> is a lightweight, per-instance runtime for executing a workflow program.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph>는 워크플로 프로그램 실행을 위한 인스턴스별 경량 런타임입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>It can be constructed to create a new workflow instance or from existing instance state.</source>
          <target state="translated">새 워크플로 인스턴스를 만들도록 생성하거나 기존 인스턴스 상태에서 생성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The APIs that <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /&gt;</ph> exposes are the minimal set of runtime controls from which higher level operations can be implemented.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /&gt;</ph>이 노출하는 API는 상위 수준의 작업을 구현할 수 있는 최소 런타임 컨트롤 집합입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>This API set represents the entire breadth of functionality of the runtime.</source>
          <target state="translated">이 API 집합은 전체 범위의 런타임 기능을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source><ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph> is an abstract class and relies on a host’s implementation of its abstract methods in order to provide host functionality such as synchronization, persistence, tracking, and extensions.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph>는 추상 클래스이며 동기화, 지속성, 추적 및 확장과 같은 호스트 기능을 제공하기 위해 호스트의 추상 메서드 구현을 사용합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source><ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance&gt;</ph> is single threaded and assumes that the host synchronizes all access to it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance&gt;</ph>는 단일 스레드이며 호스트가 모든 액세스를 동기화한다고 가정합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>An attempt to call multiple APIs simultaneously will result in an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> being thrown.</source>
          <target state="translated">동시에 여러 API를 호출하려고 하면 <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>Internally, a <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance&gt;</ph> has two states: Running and Paused.</source>
          <target state="translated">내부적으로 <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance&gt;</ph>에는 실행 중 및 일시 중지됨의 두 상태가 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The only way to cause the runtime to transition from paused to running is to call <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A&gt;</ph>.</source>
          <target state="translated">런타임이 일시 중지됨에서 실행 중으로 전환시킬 수 있는 유일한 방법은 <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A&gt;</ph>을 호출하는 것입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>All actions (except Pause) can only be taken while the runtime is Paused.</source>
          <target state="translated">일시 중지를 제외한 모든 동작은 런타임이 일시 중지된 동안에만 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The runtime will become spontaneously Paused in the following situations:</source>
          <target state="translated">다음과 같은 경우 런타임이 자발적으로 일시 중지됩니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>An error fatal to the runtime has occurred.</source>
          <target state="translated">런타임에 치명적인 오류가 발생한 경우.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The host will be signaled through <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A&gt;</ph> (which does not signal a transition to Paused) and then notified through <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A&gt;</ph>.</source>
          <target state="translated">일시 중지됨으로 전환하도록 신호를 보내지 않는 <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A&gt;</ph>를 통해 호스트가 신호를 받은 후 <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A&gt;</ph>를 통해 알림을 받습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>An exception in the workflow was uncaught and escaped the root.</source>
          <target state="translated">워크플로의 예외가 catch되지 않았으며 루트를 이스케이프한 경우.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The host will be notified through the <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException%2A&gt;</ph> method.</source>
          <target state="translated">호스트가 <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException%2A&gt;</ph> 메서드를 통해 알림을 받습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The scheduler has run out of work items and is now <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstanceState.Idle&gt;</ph>.</source>
          <target state="translated">스케줄러에서 작업 항목이 모두 실행되었으며 현재 <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstanceState.Idle&gt;</ph>인 경우.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The host will be notified through the <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A&gt;</ph> method.</source>
          <target state="translated">호스트가 <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A&gt;</ph> 메서드를 통해 알림을 받습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>Note that the scheduler could have run out of work items because the instance is idle or because the instance is complete.</source>
          <target state="translated">인스턴스가 유휴 상태이거나 인스턴스가 완료되어 스케줄러에서 작업 항목이 모두 실행되었을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A&gt;</ph> value of the <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.Controller%2A&gt;</ph> property can be used to differentiate between the two.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A&gt;</ph> 속성의 <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.Controller%2A&gt;</ph> 값을 사용하여 두 상태를 구분할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The host can request a change from Running to Paused by calling the <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable%2A&gt;</ph> methods of the <ph id="ph3">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl&gt;</ph> instance returned by the <ph id="ph4">&lt;xref:System.Activities.Hosting.WorkflowInstance.Controller%2A&gt;</ph> property.</source>
          <target state="translated">호스트는 <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A&gt;</ph> 속성에서 반환된 <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable%2A&gt;</ph> 인스턴스의 <ph id="ph3">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Activities.Hosting.WorkflowInstance.Controller%2A&gt;</ph> 메서드를 호출하여 실행 중에서 일시 중지됨으로의 변경을 요청할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>This request should not be considered to have a specific response meaning that the host should not attempt to correlate an OnNotify* or <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A&gt;</ph> with a specific call to pause.</source>
          <target state="translated">호스트가 OnNotify* 또는 <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A&gt;</ph>를 특정 일시 중지 호출과 상호 연결해서는 안 됨을 의미하는 특정 응답이 이 요청에 있다고 간주해서는 안 됩니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>In response to a pause request, the runtime may transition to Paused and call <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A&gt;</ph> while the scheduler still has pending work items.</source>
          <target state="translated">일시 중지 요청에 대한 응답으로 런타임이 일시 중지됨으로 전환되고 스케줄러에 보류 중인 작업 항목이 있는 동안 <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A&gt;</ph>를 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A&gt;</ph> value of the <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.Controller%2A&gt;</ph> property can be used to determine whether the scheduler has no more work or was interrupted by a request to pause.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A&gt;</ph> 속성의 <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.Controller%2A&gt;</ph> 값을 사용하여 스케줄러에 더 이상 작업이 없는지 또는 일시 중지 요청에 의해 스케줄러가 중단되었는지를 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl&gt;</ph> instance returned by the <ph id="ph3">&lt;xref:System.Activities.Hosting.WorkflowInstance.Controller%2A&gt;</ph> property is the only method which can be called while the <ph id="ph4">&lt;xref:System.Activities.Hosting.WorkflowInstance&gt;</ph> is in the Running state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A&gt;</ph> 속성에서 반환된 <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl&gt;</ph> 인스턴스의 <ph id="ph3">&lt;xref:System.Activities.Hosting.WorkflowInstance.Controller%2A&gt;</ph> 메서드는 <ph id="ph4">&lt;xref:System.Activities.Hosting.WorkflowInstance&gt;</ph>가 실행 중 상태에 있는 동안 호출할 수 있는 유일한 메서드입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>All other methods will throw an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> if called.Given the rules for how <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance&gt;</ph> transitions from one state to another, the public notion of Running and Paused can be defined as follows:</source>
          <target state="translated">다른 모든 메서드를 호출하면 <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>이 throw됩니다. <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance&gt;</ph>가 한 상태에서 다른 상태로 전환되는 방식에 대한 규칙을 고려하여 실행 중 및 일시 중지됨의 공용 개념을 다음과 같이 정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>Running – The state between a call to <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A&gt;</ph> and the next WorkflowInstance.OnNotify*.</source>
          <target state="translated">실행 중 - <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A&gt;</ph> 호출과 다음 WorkflowInstance.OnNotify* 사이의 상태입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>Paused – The state between the last WorkflowInstance.OnNotify* and the next call to <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A&gt;</ph>.</source>
          <target state="translated">일시 중지됨 - 마지막 WorkflowInstance.OnNotify*와 다음 <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A&gt;</ph> 사이의 상태입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity)">
          <source>The activity that defines the workflow.</source>
          <target state="translated">워크플로를 정의하는 작업입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph> class with the specified workflow definition.</source>
          <target state="translated">지정한 워크플로 정의를 사용하여 <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)">
          <source>The activity that defines the workflow.</source>
          <target state="translated">워크플로를 정의하는 작업입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)">
          <source>The definition identity.</source>
          <target state="translated">정의 ID입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph> class with the specified workflow definition and definition identity.</source>
          <target state="translated">지정된 워크플로 정의 및 정의 ID를 사용하여 <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The time period after which to abort the attempt.</source>
          <target state="translated">이 기간이 지난 후 시도를 중단할 기간입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the track operation has completed.</source>
          <target state="translated">추적 작업이 완료되었을 때 호출할 메서드입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The information about the asynchronous operation.</source>
          <target state="translated">비동기 작업에 대한 정보입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Called by the workflow runtime to begin sending pending tracking records to tracking participants asynchronously.</source>
          <target state="translated">보류 중인 추적 레코드를 추적 참가자에게 비동기적으로 보내기 위해 워크플로 런타임에서 호출됩니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The status of the current track operation.</source>
          <target state="translated">현재 추적 작업의 상태입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Activities.Hosting.WorkflowInstance.Controller">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /&gt;</ph> instance for this <ph id="ph2">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph> 인스턴스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Hosting.WorkflowInstance.Controller">
          <source>The controller instance for this workflow instance.</source>
          <target state="translated">이 워크플로 인스턴스의 컨트롤러 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Activities.Hosting.WorkflowInstance.DefinitionIdentity">
          <source>Gets or sets the definition identity of <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph>의 정의 ID를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Hosting.WorkflowInstance.DefinitionIdentity">
          <source>The definition identity of <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph>의 정의 ID입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.DisposeExtensions">
          <source>Calls <ph id="ph1">&lt;see cref="M:System.Disposable.Dispose" /&gt;</ph> on all extensions that implement <ph id="ph2">&lt;see cref="T:System.IDisposable" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Disposable.Dispose" /&gt;</ph>을 구현하는 모든 확장에 대해 <ph id="ph2">&lt;see cref="T:System.IDisposable" /&gt;</ph>를 호출합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords(System.IAsyncResult)">
          <source>The status of the asynchronous track operation.</source>
          <target state="translated">비동기 추적 작업의 상태입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords(System.IAsyncResult)">
          <source>Called by the workflow runtime to end the track operation.</source>
          <target state="translated">추적 작업을 종료하기 위해 워크플로 런타임에 의해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords(System.TimeSpan)">
          <source>The time period after which to abort the attempt.</source>
          <target state="translated">이 기간이 지난 후 시도를 중단할 기간입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords(System.TimeSpan)">
          <source>Called by the workflow runtime to send pending tracking records to tracking participants.</source>
          <target state="translated">보류 중인 추적 레코드를 추적 참가자에게 보내기 위해 워크플로 런타임에 의해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)">
          <source>The deserialized runtime state.</source>
          <target state="translated">deserialize된 런타임 상태입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)">
          <source>The update map.</source>
          <target state="translated">업데이트 맵입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)">
          <source>Retrieves the list of activity that is blocking the update of the workflow.</source>
          <target state="translated">워크플로 업데이트를 차단하는 동작 목록을 검색합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)">
          <source>The list of activity that is blocking the update.</source>
          <target state="translated">업데이트를 차단하는 동작 목록입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.GetExtension``1">
          <source>The type of the extension to find.</source>
          <target state="translated">찾을 확장의 형식입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.GetExtension``1">
          <source>Returns an extension of the specified type.</source>
          <target state="translated">지정한 형식의 확장을 반환합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.GetExtension``1">
          <source>An extension of the specified type.</source>
          <target state="translated">지정한 형식의 확장입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.GetExtensions``1">
          <source>The type of the extension to find.</source>
          <target state="translated">찾을 확장의 형식입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.GetExtensions``1">
          <source>Returns all extensions found for the specified type.</source>
          <target state="translated">지정한 형식에 대해 찾은 모든 확장을 반환합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.GetExtensions``1">
          <source>All extensions found for the specified type.</source>
          <target state="translated">지정한 형식에 대해 찾은 모든 확장입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.Activities.Hosting.WorkflowInstance.HostEnvironment">
          <source>Gets or sets the root environment for the workflow instance’s arguments and variables.</source>
          <target state="translated">워크플로 인스턴스의 인수 및 변수에 대한 루트 환경을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Hosting.WorkflowInstance.HostEnvironment">
          <source>The root environment for the workflow instance’s arguments and variables.</source>
          <target state="translated">워크플로 인스턴스의 인수 및 변수에 대한 루트 환경입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Hosting.WorkflowInstance.HostEnvironment">
          <source>If this property is set after the workflow instance is initialized and <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A&gt;</ph> returns <ph id="ph2">`true`</ph>, an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">워크플로 인스턴스를 초기화 한 후이 속성을 설정 하는 경우 및 <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A&gt;</ph> 반환 <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:System.Activities.Hosting.WorkflowInstance.Id">
          <source>Gets the unique identifier for the workflow instance.</source>
          <target state="translated">워크플로 인스턴스의 고유 식별자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Hosting.WorkflowInstance.Id">
          <source>The unique identifier for the workflow instance.</source>
          <target state="translated">워크플로 인스턴스의 고유 식별자입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>Called by the host to initialize the workflow instance.</source>
          <target state="translated">워크플로 인스턴스를 초기화하기 위해 호스트에 의해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Object)">
          <source>The run-time state used to execute the workflow.</source>
          <target state="translated">워크플로를 실행하는 데 사용되는 런타임 상태입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Object)">
          <source>Called by the host to initialize the workflow instance with the workflow run-time state.</source>
          <target state="translated">워크플로 런타임 상태를 사용하여 워크플로 인스턴스를 초기화하기 위해 호스트에 의해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.Handle})">
          <source>The input parameters to the workflow, keyed by argument name.</source>
          <target state="translated">인수 이름으로 키가 지정된 워크플로에 대한 입력 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.Handle})">
          <source>The list of workflow execution properties.</source>
          <target state="translated">워크플로 실행 속성의 목록입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.Handle})">
          <source>Called by the host to initialize the workflow instance with the argument values and execution properties.</source>
          <target state="translated">인수 값과 실행 속성을 사용하여 워크플로 인스턴스를 초기화하기 위해 호스트에 의해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)">
          <source>The run-time state used to execute the workflow.</source>
          <target state="translated">워크플로를 실행하는 데 사용되는 런타임 상태입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)">
          <source>The update map.</source>
          <target state="translated">업데이트 맵입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)">
          <source>Called by the host to initialize the workflow instance with the workflow run-time state and update map.</source>
          <target state="translated">워크플로 런타임 상태 및 업데이트 맵을 사용하여 워크플로 인스턴스를 초기화하기 위해 호스트에 의해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.Activities.Hosting.WorkflowInstance.IsReadOnly">
          <source>Gets a value that indicates whether the workflow instance has been initialized.</source>
          <target state="translated">워크플로 인스턴스가 초기화되었는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Hosting.WorkflowInstance.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the workflow instance has been initialized; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">워크플로 인스턴스가 초기화되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)">
          <source>The instance keys to associate with this workflow instance.</source>
          <target state="translated">이 워크플로 인스턴스와 연결할 인스턴스 키입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)">
          <source>The method to be called when the operation completes.</source>
          <target state="translated">작업이 완료될 때 호출할 메서드입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">비동기 작업에 대한 정보를 포함하는 응용 프로그램별 선택적 개체입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)">
          <source>Called by the workflow runtime to notify the host that new instance keys should be associated with this instance.</source>
          <target state="translated">새 인스턴스 키를 이 인스턴스와 연결해야 함을 호스트에 알리기 위해 워크플로 런타임에 의해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous associate keys operation.</source>
          <target state="translated">비동기 연결 키 작업에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)">
          <source>The method to be called when the track operation has completed.</source>
          <target state="translated">추적 작업이 완료되었을 때 호출할 메서드입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)">
          <source>The information about the asynchronous operation.</source>
          <target state="translated">비동기 작업에 대한 정보입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)">
          <source>Asynchronous call to ask host to flush pending tracking records to tracking participants.</source>
          <target state="translated">보류 중인 추적 레코드를 추적 참가자에게 플러시하도록 호스트에 요청하는 비동기 호출입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)">
          <source>The status of the current track operation.</source>
          <target state="translated">현재 추적 작업의 상태입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginPersist(System.AsyncCallback,System.Object)">
          <source>The method to be called when the persist operation has completed.</source>
          <target state="translated">지속 작업이 완료되었을 때 호출될 메서드입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginPersist(System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">비동기 작업에 대한 정보를 포함하는 응용 프로그램별 선택적 개체입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginPersist(System.AsyncCallback,System.Object)">
          <source>Asynchronous call to ask the host to persist the workflow.</source>
          <target state="translated">호스트에 워크플로를 지속하도록 요청하는 비동기 호출입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginPersist(System.AsyncCallback,System.Object)">
          <source>A reference to the current persist operation.</source>
          <target state="translated">현재 지속 작업에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The bookmark to resume.</source>
          <target state="translated">다시 시작할 책갈피입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The data to be passed to the activity that created the <ph id="ph1">&lt;see cref="T:System.Activities.Bookmark" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Activities.Bookmark" /&gt;</ph>를 만든 작업에 전달될 데이터입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The interval in which the resume operation must complete before the operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">작업이 취소되고 <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph>이 throw되기 전에 다시 시작 작업을 완료해야 하는 간격입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the resume operation has completed.</source>
          <target state="translated">다시 시작 작업이 완료되었을 때 호출될 메서드입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">비동기 작업에 대한 정보를 포함하는 응용 프로그램별 선택적 개체입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Called by the workflow runtime to notify the host that a resume bookmark operation is beginning.</source>
          <target state="translated">책갈피 다시 시작 작업이 시작되고 있음을 호스트에 알리기 위해 워크플로 런타임에 의해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous resume operation.</source>
          <target state="translated">비동기 다시 시작 작업에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})">
          <source>The list of keys to disassociate.</source>
          <target state="translated">연결을 끊을 키의 목록입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})">
          <source>Called by the workflow runtime to notify the host that a certain set of instance keys should no longer be associated with this instance.</source>
          <target state="translated">특정 인스턴스 키 집합을 이 인스턴스와 더 이상 연결하지 않도록 호스트에 알리기 위해 워크플로 런타임에 의해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys(System.IAsyncResult)">
          <source>The reference to the asynchronous associate keys operation.</source>
          <target state="translated">비동기 연결 키 작업에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys(System.IAsyncResult)">
          <source>Called by the workflow runtime to notify the host that an associate keys operation is complete.</source>
          <target state="translated">연결 키 작업이 완료되었음을 호스트에 알리기 위해 워크플로 런타임에 의해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords(System.IAsyncResult)">
          <source>The status of the asynchronous flush tracking records operation.</source>
          <target state="translated">추적 레코드 플러시 비동기 작업의 상태입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords(System.IAsyncResult)">
          <source>Called by the workflow runtime to notify the host when the flush tracking records operation is complete.</source>
          <target state="translated">추적 레코드 플러시 작업이 완료되었음을 호스트에 알리기 위해 워크플로 런타임에 의해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnEndPersist(System.IAsyncResult)">
          <source>The reference to the asynchronous persist operation.</source>
          <target state="translated">비동기 지속 작업에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnEndPersist(System.IAsyncResult)">
          <source>Called by the workflow runtime to notify the host that a persist operation is complete.</source>
          <target state="translated">지속 작업이 완료되었음을 호스트에 알리기 위해 워크플로 런타임에 의해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(System.IAsyncResult)">
          <source>The reference to the asynchronous resume bookmark operation.</source>
          <target state="translated">책갈피 다시 시작 비동기 작업에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(System.IAsyncResult)">
          <source>Called by the workflow runtime to notify the host that a resume bookmark operation is complete.</source>
          <target state="translated">책갈피 다시 시작 작업이 완료되었음을 호스트에 알리기 위해 워크플로 런타임에 의해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(System.IAsyncResult)">
          <source>One of the enumeration values that indicates the result of a <ph id="ph1">&lt;see cref="T:System.Activities.Bookmark" /&gt;</ph> resume operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Activities.Bookmark" /&gt;</ph> 다시 시작 작업의 결과를 나타내는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused">
          <source>Called by the workflow runtime to notify the host that the workflow instance has transitioned from the running state to the paused state.</source>
          <target state="translated">워크플로 인스턴스가 실행 중 상태에서 일시 중지됨 상태로 전환되었음을 호스트에 알리기 위해 워크플로 런타임에 의해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)">
          <source>The unhandled exception.</source>
          <target state="translated">처리되지 않은 예외입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)">
          <source>The activity that threw the exception.</source>
          <target state="translated">예외를 throw한 작업입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)">
          <source>The unique identifier of the <ph id="ph1">&lt;see cref="T:System.Activities.ActivityInstance" /&gt;</ph> representing the activity that threw the exception.</source>
          <target state="translated">예외를 throw한 작업을 나타내는 <ph id="ph1">&lt;see cref="T:System.Activities.ActivityInstance" /&gt;</ph>의 고유 식별자입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)">
          <source>Called by the workflow runtime to notify the host an unhandled exception has occurred in the workflow instance.</source>
          <target state="translated">워크플로 인스턴스에서 처리되지 않은 예외가 발생했음을 호스트에 알리기 위해 워크플로 런타임에 의해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnRequestAbort(System.Exception)">
          <source>The reason for aborting the workflow instance.</source>
          <target state="translated">워크플로 인스턴스의 중단 원인입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnRequestAbort(System.Exception)">
          <source>Called by the workflow runtime to notify the host that an abort operation has been requested for the workflow instance.</source>
          <target state="translated">워크플로 인스턴스에 대한 중단 작업이 요청되었음을 호스트에 알리기 위해 워크플로 런타임에 의해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.OnRequestAbort(System.Exception)">
          <source>Once <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A&gt;</ph> is called, most <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl&gt;</ph> APIs except <ph id="ph3">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A&gt;</ph> will throw an <ph id="ph4">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A&gt;</ph>를 호출한 후에는 <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl&gt;</ph>를 제외한 대부분의 <ph id="ph3">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A&gt;</ph> API가 <ph id="ph4">&lt;xref:System.InvalidOperationException&gt;</ph>을 throw합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.OnRequestAbort(System.Exception)">
          <source>It is expected that after <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A&gt;</ph> is called a host will trend toward a state in which it can satisfy the abort.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A&gt;</ph>를 호출한 후 호스트가 중단을 충족시킬 수 있는 상태로 전환되어야 합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)">
          <source>The extension manager to register.</source>
          <target state="translated">등록할 확장명 관리자입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)">
          <source>Called by the host to register the specified extension manager, validate that all required extensions are present, and to initialize the collection of extensions to be used.</source>
          <target state="translated">지정한 확장명 관리자를 등록하고, 필요한 모든 확장이 있는지 확인하고, 사용할 확장명 컬렉션을 초기화하기 위해 호스트에 의해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)">
          <source>Extensions are keyed by type, and a host provided extension will always be used if provided.</source>
          <target state="translated">형식별로 확장에 키가 지정되며, 호스트 제공 확장은 제공될 경우 항상 사용됩니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)">
          <source>Extensions added through <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A&gt;</ph> use the runtime type of the object as the type key.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A&gt;</ph>를 통해 추가된 확장은 개체의 런타임 형식을 형식 키로 사용합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)">
          <source>Extensions providers added through <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A&gt;</ph> use the decared type T of the Func<ph id="ph2">\&lt;</ph>T&gt; as the type key.</source>
          <target state="translated">통해 추가 된 확장 공급자 <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A&gt;</ph> 는 f 선언 된 형식 T를 사용 하 여<ph id="ph2">\&lt;</ph>T &gt;를 형식 키로 합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)">
          <source>Extension providers contributed by activities through the various *ActivityMetadata.AddDefaultExtensionProvider methods are dropped if a host extension exists for the declared type or if there is a broader type provided through AddDefaultExtensionProvider (ex.</source>
          <target state="translated">선언된 형식에 대한 호스트 확장이 있거나 AddDefaultExtensionProvider를 통해 제공된 보다 광범위한 형식 공급자가 있는 경우 다양한 *ActivityMetadata.AddDefaultExtensionProvider 메서드를 통해 작업에서 제공한 확장명 공급자가 삭제됩니다. 예를 들어,</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)">
          <source>if Func<ph id="ph1">\&lt;</ph>StreamWriter&gt; is provided and Func<ph id="ph2">\&lt;</ph>TextWriter&gt; is provided, only Func<ph id="ph3">\&lt;</ph>StreamWriter&gt; will be kept).</source>
          <target state="translated">경우 Func<ph id="ph1">\&lt;</ph>StreamWriter &gt; 제공 및 Func<ph id="ph2">\&lt;</ph>TextWriter &gt; 제공만 Func<ph id="ph3">\&lt;</ph>StreamWriter &gt; 유지).</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)">
          <source>If an extension does not exist in the collection that is required by an activity (expressed by calling *ActivityMetadata.RequireExtension) a <ph id="ph1">&lt;xref:System.Activities.ValidationException&gt;</ph> is thrown.</source>
          <target state="translated">*ActivityMetadata.RequireExtension을 호출하여 표시된 작업에 필요한 확장이 컬렉션에 없는 경우 <ph id="ph1">&lt;xref:System.Activities.ValidationException&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="P:System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys">
          <source>Gets a value that indicates whether the host supports the association of <ph id="ph1">&lt;see cref="P:System.Runtime.Persistence.InstanceView.InstanceKeys" /&gt;</ph> with a run-time instance.</source>
          <target state="translated">호스트가 <ph id="ph1">&lt;see cref="P:System.Runtime.Persistence.InstanceView.InstanceKeys" /&gt;</ph> 및 런타임 인스턴스의 연결을 지원하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the host supports the association of <ph id="ph2">&lt;see cref="P:System.Runtime.Persistence.InstanceView.InstanceKeys" /&gt;</ph> with a workflow instance; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">호스트가 <ph id="ph2">&lt;see cref="P:System.Runtime.Persistence.InstanceView.InstanceKeys" /&gt;</ph>와 워크플로 인스턴스의 연결을 지원하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="P:System.Activities.Hosting.WorkflowInstance.SynchronizationContext">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Threading.SynchronizationContext" /&gt;</ph> used for scheduling the workflow instance.</source>
          <target state="translated">워크플로 인스턴스 예약에 사용되는 <ph id="ph1">&lt;see cref="T:System.Threading.SynchronizationContext" /&gt;</ph>를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Hosting.WorkflowInstance.SynchronizationContext">
          <source>The synchronization context used for scheduling the workflow instance.</source>
          <target state="translated">워크플로 인스턴스 예약에 사용되는 동기화 컨텍스트입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Hosting.WorkflowInstance.SynchronizationContext">
          <source>If this property is set after the workflow instance is initialized and <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A&gt;</ph> returns <ph id="ph2">`true`</ph>, an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">워크플로 인스턴스를 초기화 한 후이 속성을 설정 하는 경우 및 <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A&gt;</ph> 반환 <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly">
          <source>Throws an <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> if the workflow instance has been initialized, as determined by <ph id="ph2">&lt;see cref="P:System.Activities.Hosting.WorkflowInstance.IsReadOnly" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>로 확인하여 워크플로 인스턴스가 초기화되었으면 <ph id="ph2">&lt;see cref="P:System.Activities.Hosting.WorkflowInstance.IsReadOnly" /&gt;</ph>을 throw합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly">
          <source>If <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A&gt;</ph> returns <ph id="ph2">`true`</ph>, then an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A&gt;</ph> 반환 <ph id="ph2">`true`</ph>, 아니라면 <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="P:System.Activities.Hosting.WorkflowInstance.WorkflowDefinition">
          <source>Gets the workflow definition of the workflow instance.</source>
          <target state="translated">워크플로 인스턴스의 워크플로 정의를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Hosting.WorkflowInstance.WorkflowDefinition">
          <source>The workflow definition of the workflow instance.</source>
          <target state="translated">워크플로 인스턴스의 워크플로 정의입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>