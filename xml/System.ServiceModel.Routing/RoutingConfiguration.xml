<Type Name="RoutingConfiguration" FullName="System.ServiceModel.Routing.RoutingConfiguration">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bd84b6826a4cc66c5b9f9d0a70ceef50780b1de5" />
    <Meta Name="ms.sourcegitcommit" Value="1b899505ed6d42225f2b3c9150bfdc080d0d1f9b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/28/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class RoutingConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RoutingConfiguration extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Routing.RoutingConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RoutingConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class RoutingConfiguration sealed" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Routing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="1cd2c-101">
        <see cref="T:System.ServiceModel.Routing.RoutingExtension" />에 사용되는 구성 정보를 정의합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1cd2c-101">Defines the configuration information used by <see cref="T:System.ServiceModel.Routing.RoutingExtension" />.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1cd2c-102">
            <see cref="T:System.ServiceModel.Routing.RoutingConfiguration" /> 클래스의 새 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cd2c-102">Creates a new instance of the <see cref="T:System.ServiceModel.Routing.RoutingConfiguration" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoutingConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Routing.RoutingConfiguration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoutingConfiguration();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1cd2c-103">
            <see cref="T:System.ServiceModel.Routing.RoutingConfiguration" /> 클래스의 새 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cd2c-103">Creates a new instance of the <see cref="T:System.ServiceModel.Routing.RoutingConfiguration" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoutingConfiguration (System.ServiceModel.Dispatcher.MessageFilterTable&lt;System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ServiceEndpoint&gt;&gt; filterTable, bool routeOnHeadersOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Dispatcher.MessageFilterTable`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ServiceEndpoint&gt;&gt; filterTable, bool routeOnHeadersOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Routing.RoutingConfiguration.#ctor(System.ServiceModel.Dispatcher.MessageFilterTable{System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ServiceEndpoint}},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filterTable As MessageFilterTable(Of IEnumerable(Of ServiceEndpoint)), routeOnHeadersOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoutingConfiguration(System::ServiceModel::Dispatcher::MessageFilterTable&lt;System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ServiceEndpoint ^&gt; ^&gt; ^ filterTable, bool routeOnHeadersOnly);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filterTable" Type="System.ServiceModel.Dispatcher.MessageFilterTable&lt;System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ServiceEndpoint&gt;&gt;" />
        <Parameter Name="routeOnHeadersOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filterTable">
          <span data-ttu-id="1cd2c-104">이 구성에 사용할 메시지 필터 테이블입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cd2c-104">The message filter table to use for this configuration.</span>
          </span>
        </param>
        <param name="routeOnHeadersOnly">
          <span data-ttu-id="1cd2c-105">
            <see cref="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />으로 메시지 헤더만 검사할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cd2c-105">
              <see langword="true" /> if the <see cref="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" /> can only examine message headers; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1cd2c-106">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cd2c-106">The default is <see langword="true" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1cd2c-107">지정된 <see cref="T:System.ServiceModel.Routing.RoutingConfiguration" />과 routeOnHeadersOnly 매개 변수를 사용하여 <see cref="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" /> 클래스의 새 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cd2c-107">Creates a new instance of the <see cref="T:System.ServiceModel.Routing.RoutingConfiguration" /> class using the specified <see cref="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" /> and routeOnHeadersOnly parameter.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureOrderedDispatch">
      <MemberSignature Language="C#" Value="public bool EnsureOrderedDispatch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnsureOrderedDispatch" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Routing.RoutingConfiguration.EnsureOrderedDispatch" />
      <MemberSignature Language="VB.NET" Value="Public Property EnsureOrderedDispatch As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnsureOrderedDispatch { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cd2c-108">메시지가 전송된 순서대로 디스패치되는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cd2c-108">Gets a value that indicates whether messages are to be dispatched in the order they were sent.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1cd2c-109">전송된 순서대로 메시지를 디스패치해야 하는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cd2c-109">
              <see langword="true" /> if messages are to be dispatched in the order they were sent; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTable">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.MessageFilterTable&lt;System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ServiceEndpoint&gt;&gt; FilterTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.MessageFilterTable`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ServiceEndpoint&gt;&gt; FilterTable" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Routing.RoutingConfiguration.FilterTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterTable As MessageFilterTable(Of IEnumerable(Of ServiceEndpoint))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::MessageFilterTable&lt;System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ServiceEndpoint ^&gt; ^&gt; ^ FilterTable { System::ServiceModel::Dispatcher::MessageFilterTable&lt;System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ServiceEndpoint ^&gt; ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.MessageFilterTable&lt;System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ServiceEndpoint&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cd2c-110">이 구성에 사용되는 <see cref="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cd2c-110">Gets or sets the <see cref="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" /> used by this configuration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1cd2c-111">메시지 필터 테이블입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cd2c-111">The message filter table.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RouteOnHeadersOnly">
      <MemberSignature Language="C#" Value="public bool RouteOnHeadersOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RouteOnHeadersOnly" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Routing.RoutingConfiguration.RouteOnHeadersOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property RouteOnHeadersOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RouteOnHeadersOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cd2c-112">필터로 메시지 본문을 검사할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cd2c-112">Gets or sets a value that indicates whether the filter can examine the message body.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1cd2c-113">필터로 메시지 헤더만 검사할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cd2c-113">
              <see langword="true" /> if the filter can only examine message headers; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1cd2c-114">기본값은 **true**합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cd2c-114">The default is **true**.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SoapProcessingEnabled">
      <MemberSignature Language="C#" Value="public bool SoapProcessingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SoapProcessingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Routing.RoutingConfiguration.SoapProcessingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property SoapProcessingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SoapProcessingEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1cd2c-115">SOAP <see cref="T:System.ServiceModel.Channels.MessageVersion" /> 간에 메시지를 처리해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cd2c-115">Gets or sets a value that indicates whether messages should be processed between SOAP <see cref="T:System.ServiceModel.Channels.MessageVersion" />s.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1cd2c-116">메시지를 처리해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cd2c-116">
              <see langword="true" /> if messages should be processed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1cd2c-117">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cd2c-117">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1cd2c-118">SOAP 처리는 SOAP <xref:System.ServiceModel.Channels.MessageVersion> 간에 메시지를 변환하는 프로세스입니다.</span><span class="sxs-lookup"><span data-stu-id="1cd2c-118">SOAP processing is the process where messages are converted between SOAP <xref:System.ServiceModel.Channels.MessageVersion>s.</span></span>  
  
 <span data-ttu-id="1cd2c-119">이 값을 설정 `false` 나타냅니다는 <xref:System.ServiceModel.Routing.RoutingBehavior> 설치 해서는 안는 <xref:System.ServiceModel.Routing.SoapProcessingBehavior> 클라이언트 끝점에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1cd2c-119">Setting this value to `false` indicates that the <xref:System.ServiceModel.Routing.RoutingBehavior> should not install the <xref:System.ServiceModel.Routing.SoapProcessingBehavior> on the client endpoints.</span></span> <span data-ttu-id="1cd2c-120">경우 설정 `false`, 전송 되기 전에 메시지의 일부 측면을 처리 하는 고유한 메시지 검사자 또는 기타 코드를 추가 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="1cd2c-120">If set to `false`, you must add your own message inspector or other code to handle some aspects of messages before they are sent.</span></span> <span data-ttu-id="1cd2c-121">각 끝점에서 SOAP 처리를 사용하지 않도록 설정할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1cd2c-121">It is also possible to disable SOAP processing on each endpoint.</span></span> <span data-ttu-id="1cd2c-122">자세한 내용은 <xref:System.ServiceModel.Routing.SoapProcessingBehavior> 클래스를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="1cd2c-122">For more information, see the <xref:System.ServiceModel.Routing.SoapProcessingBehavior> class.</span></span>  
  
 <span data-ttu-id="1cd2c-123">기본적으로는 <xref:System.ServiceModel.Routing.RoutingBehavior> 만들고 새 연결 <xref:System.ServiceModel.Routing.SoapProcessingBehavior> 와 <xref:System.ServiceModel.Routing.SoapProcessingBehavior.ProcessMessages%2A> 로 설정 `true` 각 클라이언트 끝점에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="1cd2c-123">By default, the <xref:System.ServiceModel.Routing.RoutingBehavior> creates and attaches a new <xref:System.ServiceModel.Routing.SoapProcessingBehavior> with <xref:System.ServiceModel.Routing.SoapProcessingBehavior.ProcessMessages%2A> set to `true` for each client endpoint.</span></span> <span data-ttu-id="1cd2c-124">사용 하지 않을 경우는 <xref:System.ServiceModel.Routing.SoapProcessingBehavior> 특정 끝점에서 새 만듭니다 <xref:System.ServiceModel.Routing.SoapProcessingBehavior> 이 값으로 설정 된 `false` 후를 원하지 않는 처리를 끝점에 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="1cd2c-124">If you do not want to use the <xref:System.ServiceModel.Routing.SoapProcessingBehavior> on a specific endpoint, create a new <xref:System.ServiceModel.Routing.SoapProcessingBehavior> with this value set to `false` and then attach it to the endpoint on which you do not want processing to occur.</span></span> <span data-ttu-id="1cd2c-125"><xref:System.ServiceModel.Routing.RoutingBehavior>에서는 클라이언트에 <xref:System.ServiceModel.Routing.SoapProcessingBehavior>가 이미 있으면 다른 SOAP 처리를 첨부하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1cd2c-125">If the <xref:System.ServiceModel.Routing.RoutingBehavior> observes that a client already has a <xref:System.ServiceModel.Routing.SoapProcessingBehavior>, it does not attempt to attach another.</span></span>  
  
 <span data-ttu-id="1cd2c-126">응용 프로그램을 사용 하지 않도록 설정 하려면 <xref:System.ServiceModel.Routing.SoapProcessingBehavior> 모든 끝점에서 사용 하지 않도록 설정에서 SOAP 처리는 <xref:System.ServiceModel.Routing.RoutingBehavior> 및 <xref:System.ServiceModel.Routing.RoutingConfiguration>합니다.</span><span class="sxs-lookup"><span data-stu-id="1cd2c-126">To disable the application of <xref:System.ServiceModel.Routing.SoapProcessingBehavior> on any endpoint, disable SOAP processing on the <xref:System.ServiceModel.Routing.RoutingBehavior> and the <xref:System.ServiceModel.Routing.RoutingConfiguration>.</span></span>  
  
 <span data-ttu-id="1cd2c-127">경우 <xref:System.ServiceModel.Routing.RoutingConfiguration.SoapProcessingEnabled%2A> 은 `true`, <xref:System.ServiceModel.Routing.SoapProcessingBehavior> 클라이언트 끝점에 추가 <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="1cd2c-127">If <xref:System.ServiceModel.Routing.RoutingConfiguration.SoapProcessingEnabled%2A> is `true`, the <xref:System.ServiceModel.Routing.SoapProcessingBehavior> is added to the client endpoint <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>