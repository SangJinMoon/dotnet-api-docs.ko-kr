<Namespace Name="System.Threading.Tasks">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4e14d5c89498d0c1b6e8e74917ab760ee2e2e6d0" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51875528" /></Metadata><Docs>
    <summary><span data-ttu-id="8a150-101"><see langword="System.Threading.Tasks" /> 네임 스페이스는 동시 및 비동기 코드를 작성 하는 작업을 단순화 하는 형식을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a150-101">The <see langword="System.Threading.Tasks" /> namespace provides types that simplify the work of writing concurrent and asynchronous code.</span></span> <span data-ttu-id="8a150-102">주요 형식은 <see cref="T:System.Threading.Tasks.Task" /> 대기 및 취소할 수 있는 비동기 작업을 나타내는 및 <see cref="T:System.Threading.Tasks.Task`1" />에 값을 반환할 수 있는 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="8a150-102">The main types are <see cref="T:System.Threading.Tasks.Task" /> which represents an asynchronous operation that can be waited on and cancelled, and <see cref="T:System.Threading.Tasks.Task`1" />, which is a task that can return a value.</span></span> <span data-ttu-id="8a150-103">합니다 <see cref="T:System.Threading.Tasks.TaskFactory" /> 클래스를 만들고 작업을 시작 하기 위한 정적 메서드를 제공 하며 <see cref="T:System.Threading.Tasks.TaskScheduler" /> 클래스는 기본 스레드 예약 인프라를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="8a150-103">The <see cref="T:System.Threading.Tasks.TaskFactory" /> class provides static methods for creating and starting tasks, and the <see cref="T:System.Threading.Tasks.TaskScheduler" /> class provides the default thread scheduling infrastructure.</span></span></summary>
    <remarks>To be added.</remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/4d83c690-ad2d-489e-a2e0-b85b898a672d"><span data-ttu-id="8a150-104">.NET Framework의 병렬 프로그래밍</span><span class="sxs-lookup"><span data-stu-id="8a150-104">Parallel Programming in the .NET Framework</span></span></related>
  </Docs>
</Namespace>