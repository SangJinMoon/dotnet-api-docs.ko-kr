<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ns-System.Threading.Tasks.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5a83ea4b-dd12-480b-bfc8-267272ef18646a51ae2b3c3d135df358205112c0b04c25f77a70.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6a51ae2b3c3d135df358205112c0b04c25f77a70</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df6cf590aa3087f6c7c202712eee781c6a3c8f96</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/10/2018</xliffext:ms.lasthandoff>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;see langword="System.Threading.Tasks" /&gt;</ph> namespace provides types that simplify the work of writing concurrent and asynchronous code.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="System.Threading.Tasks" /&gt;</ph> 네임스페이스는 동시 및 비동기 코드를 작성하는 작업을 단순화하는 형식을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The main types are <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> which represents an asynchronous operation that can be waited on and cancelled, and <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>, which is a task that can return a value.</source>
          <target state="translated">주요 형식은 대기하고 취소될 수 있는 비동기 작업을 나타내는 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>와 값을 반환할 수 있는 작업인 <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.TaskFactory" /&gt;</ph> class provides static methods for creating and starting tasks, and the <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.TaskScheduler" /&gt;</ph> class provides the default thread scheduling infrastructure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.TaskFactory" /&gt;</ph> 클래스는 작업을 만들고 시작하는 정적 메서드를 제공하고, <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.TaskScheduler" /&gt;</ph> 클래스는 기본 스레드 예약 인프라를 제공합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>