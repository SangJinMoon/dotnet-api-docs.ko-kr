<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IDataflowBlock.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac510139b3856666a43a80d7875494bb6c3884f741e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">10139b3856666a43a80d7875494bb6c3884f741e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Threading.Tasks.Dataflow.IDataflowBlock">
          <source>Represents a dataflow block.</source>
          <target state="translated">데이터 흐름 블록을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete">
          <source>Signals to the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph> that it should not accept nor produce any more messages nor consume any more postponed messages.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph>에 대한 신호를 통해 더 이상의 메시지를 받거나 생성할 수 없으며 추가로 지연된 메시지를 사용하면 안 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete">
          <source>After <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete%2A&gt;</ph> has been called on a dataflow block, that block will complete, and its <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion%2A&gt;</ph> task will enter a final state after it has processed all previously available data.</source>
          <target state="translated">후 <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete%2A&gt;</ph> 되었습니다를 데이터 흐름 블록에서 호출 해당 블록 완료 및 해당 <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion%2A&gt;</ph> 작업 이전에 사용 가능한 모든 데이터 처리 후 최종 상태로 전환 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete">
          <source><ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete%2A&gt;</ph> will not block waiting for completion to occur, but rather will initiate the request; to wait for completion to occur, the <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion%2A&gt;</ph> task may be used.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete%2A&gt;</ph> 가 발생 하는 완료 되기를 기다리는 차단 하지 않습니다는; 요청을 초기화 하는 대신 하지만 가 발생 하는 완료를 기다리는 <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion%2A&gt;</ph> 작업을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="P:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion">
          <source>Gets a  <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> that represents the asynchronous operation and completion of the dataflow block.</source>
          <target state="translated">비동기 작업 및 데이터 흐름 블록의 완료를 나타내는 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion">
          <source>The task.</source>
          <target state="translated">작업입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion">
          <source>A dataflow block is considered completed when it is not currently processing a message and when it has guaranteed that it will not process any more messages.</source>
          <target state="translated">데이터 흐름 블록에 완료 되지 현재 처리할 때 메시지와 시기는 것을 보장 메시지를 더 이상 처리 하지 것입니다으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> will transition to a completed state when the associated block has completed.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> 관련된 블록 완료 되었을 때 완료 된 상태로 전환 됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion">
          <source>It will transition to the <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus&gt;</ph><ph id="ph2">&lt;xref:System.Threading.Tasks.TaskStatus.RanToCompletion&gt;</ph> state when the block completes its processing successfully according to the dataflow block’s defined semantics.</source>
          <target state="translated">전환 되 고 <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus&gt;</ph> <ph id="ph2">&lt;xref:System.Threading.Tasks.TaskStatus.RanToCompletion&gt;</ph> 블록 처리 데이터 흐름 블록에 따라 성공적으로 완료 되 면 상태가 의미 체계를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion">
          <source>It will transition to the <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus&gt;</ph><ph id="ph2">&lt;xref:System.Threading.Tasks.TaskStatus.Faulted&gt;</ph> state when the dataflow block has completed processing prematurely due to an unhandled exception, and it will transition to the <ph id="ph3">&lt;xref:System.Threading.Tasks.TaskStatus&gt;</ph><ph id="ph4">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph> state when the dataflow block has completed processing prematurely due to receiving a cancellation request.</source>
          <target state="translated">전환 되 고 <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus&gt;</ph> <ph id="ph2">&lt;xref:System.Threading.Tasks.TaskStatus.Faulted&gt;</ph> 전환 되 고 데이터 흐름 블록에서 처리 되지 않은 예외로 인해 중간 처리를 완료 하는 경우 상태는 <ph id="ph3">&lt;xref:System.Threading.Tasks.TaskStatus&gt;</ph> <ph id="ph4">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph> 데이터 흐름 블록 완료 되었을 때 상태 취소 요청을 받았으므로 중간를 처리 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion">
          <source>If the task completes in the <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.Faulted&gt;</ph> state, its <ph id="ph2">`Exception`</ph> property will return an <ph id="ph3">&lt;xref:System.AggregateException&gt;</ph> containing the one or more exceptions that caused the block to fail.</source>
          <target state="translated">작업이 완료 된 경우에 <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.Faulted&gt;</ph> 상태에 해당 <ph id="ph2">`Exception`</ph> 속성은 반환는 <ph id="ph3">&lt;xref:System.AggregateException&gt;</ph> 블록 실패를 발생 시킨 하나 이상의 예외를 포함 하 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(System.Exception)">
          <source>The  <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> that caused the faulting.</source>
          <target state="translated">오류를 발생시킨 <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(System.Exception)">
          <source>Causes the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph> to complete in a  <ph id="ph2">&lt;see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /&gt;</ph> state.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /&gt;</ph> 상태에서 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph>가 완료되도록 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(System.Exception)">
          <source>After <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A&gt;</ph> has been called on a dataflow block, that block will complete, and its <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion%2A&gt;</ph> task will enter a final state.</source>
          <target state="translated">후 <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A&gt;</ph> 되었습니다를 데이터 흐름 블록에서 호출 해당 블록 완료 및 해당 <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion%2A&gt;</ph> 작업이 최종 상태로 전환 됩니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(System.Exception)">
          <source>Faulting a block, as with canceling a block, causes buffered messages (unprocessed input messages as well as unoffered output messages) to be lost.</source>
          <target state="translated">블록, 오류 있는으로 취소 하는 블록으로 하면 버퍼링 된 메시지 (처리 되지 않은 입력된 메시지 뿐만 아니라 unoffered 출력 메시지) 손실 됩니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(System.Exception)">
          <source>The <ph id="ph1">&lt;paramref name="exception" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="exception" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>