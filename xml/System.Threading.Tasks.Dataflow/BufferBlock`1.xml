<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BufferBlock`1.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac516a6794fdf79de01af71d14148f86cce8ac2ffcb.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">16a6794fdf79de01af71d14148f86cce8ac2ffcb</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.Dataflow.BufferBlock`1">
          <source>Specifies the type of the data buffered by this dataflow block.</source>
          <target state="translated">이 데이터 흐름 블록으로 버퍼링된 데이터 형식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Threading.Tasks.Dataflow.BufferBlock`1">
          <source>Provides a buffer for storing data.</source>
          <target state="translated">데이터 저장을 위한 버퍼를 제공합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.#ctor">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.BufferBlock`1" /&gt;</ph>.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.BufferBlock`1" /&gt;</ph>를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.#ctor(System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>The options with which to configure this  <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.BufferBlock`1" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.BufferBlock`1" /&gt;</ph>을 구성하는 옵션입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.#ctor(System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.BufferBlock`1" /&gt;</ph> with the specified  <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowBlockOptions" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowBlockOptions" /&gt;</ph>을 사용하여 새 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.BufferBlock`1" /&gt;</ph>를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.#ctor(System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>The <ph id="ph1">&lt;paramref name="dataflowBlockOptions" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dataflowBlockOptions" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.Complete">
          <source>Signals to the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph> that it should not accept nor produce any more messages nor consume any more postponed messages.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph>에 대한 신호를 통해 더 이상의 메시지를 받거나 생성할 수 없으며 추가로 지연된 메시지를 사용하면 안 됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.Complete">
          <source>After <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.BufferBlock%601.Complete%2A&gt;</ph> has been called on a dataflow block, that block will complete, and its <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.BufferBlock%601.Completion%2A&gt;</ph> task will enter a final state after it has processed all previously available data.</source>
          <target state="translated">후 <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.BufferBlock%601.Complete%2A&gt;</ph> 되었습니다를 데이터 흐름 블록에서 호출 해당 블록 완료 및 해당 <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.BufferBlock%601.Completion%2A&gt;</ph> 작업 이전에 사용 가능한 모든 데이터 처리 후 최종 상태로 전환 됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.Complete">
          <source><ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.BufferBlock%601.Complete%2A&gt;</ph> will not block waiting for completion to occur, but rather will initiate the request; to wait for completion to occur, the <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.BufferBlock%601.Completion%2A&gt;</ph> task may be used.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.BufferBlock%601.Complete%2A&gt;</ph> 가 발생 하는 완료 되기를 기다리는 차단 하지 않습니다는; 요청을 초기화 하는 대신 하지만 가 발생 하는 완료를 기다리는 <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.BufferBlock%601.Completion%2A&gt;</ph> 작업을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="P:System.Threading.Tasks.Dataflow.BufferBlock`1.Completion">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> that represents the asynchronous operation and completion of the dataflow block.</source>
          <target state="translated">비동기 작업 및 데이터 흐름 블록의 완료를 나타내는 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.BufferBlock`1.Completion">
          <source>The task.</source>
          <target state="translated">작업입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.BufferBlock`1.Completion">
          <source>A dataflow block is considered completed when it is not currently processing a message and when it has guaranteed that it will not process any more messages.</source>
          <target state="translated">데이터 흐름 블록에 완료 되지 현재 처리할 때 메시지와 시기는 것을 보장 메시지를 더 이상 처리 하지 것입니다으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.BufferBlock`1.Completion">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> will transition to a completed state when the associated block has completed.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> 관련된 블록 완료 되었을 때 완료 된 상태로 전환 됩니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.BufferBlock`1.Completion">
          <source>It will transition to the <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus&gt;</ph><ph id="ph2">&lt;xref:System.Threading.Tasks.TaskStatus.RanToCompletion&gt;</ph> state when the block completes its processing successfully according to the dataflow block’s defined semantics.</source>
          <target state="translated">전환 되 고 <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus&gt;</ph> <ph id="ph2">&lt;xref:System.Threading.Tasks.TaskStatus.RanToCompletion&gt;</ph> 블록 처리 데이터 흐름 블록에 따라 성공적으로 완료 되 면 상태가 의미 체계를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.BufferBlock`1.Completion">
          <source>It will transition to the <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus&gt;</ph><ph id="ph2">&lt;xref:System.Threading.Tasks.TaskStatus.Faulted&gt;</ph> state when the dataflow block has completed processing prematurely due to an unhandled exception, and it will transition to the <ph id="ph3">&lt;xref:System.Threading.Tasks.TaskStatus&gt;</ph><ph id="ph4">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph> state when the dataflow block has completed processing prematurely due to receiving a cancellation request.</source>
          <target state="translated">전환 되 고 <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus&gt;</ph> <ph id="ph2">&lt;xref:System.Threading.Tasks.TaskStatus.Faulted&gt;</ph> 전환 되 고 데이터 흐름 블록에서 처리 되지 않은 예외로 인해 중간 처리를 완료 하는 경우 상태는 <ph id="ph3">&lt;xref:System.Threading.Tasks.TaskStatus&gt;</ph> <ph id="ph4">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph> 데이터 흐름 블록 완료 되었을 때 상태 취소 요청을 받았으므로 중간를 처리 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.BufferBlock`1.Completion">
          <source>If the task completes in the <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.Faulted&gt;</ph> state, its <ph id="ph2">`Exception`</ph> property will return an <ph id="ph3">&lt;xref:System.AggregateException&gt;</ph> containing the one or more exceptions that caused the block to fail.</source>
          <target state="translated">작업이 완료 된 경우에 <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.Faulted&gt;</ph> 상태에 해당 <ph id="ph2">`Exception`</ph> 속성은 반환는 <ph id="ph3">&lt;xref:System.AggregateException&gt;</ph> 블록 실패를 발생 시킨 하나 이상의 예외를 포함 하 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.Threading.Tasks.Dataflow.BufferBlock`1.Count">
          <source>Gets the number of items currently stored in the buffer.</source>
          <target state="translated">버퍼에 현재 저장된 항목의 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.BufferBlock`1.Count">
          <source>The number of items.</source>
          <target state="translated">항목 수입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> to which to connect this source.</source>
          <target state="translated">이 소스를 연결할 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" /&gt;</ph> instance that configures the link.</source>
          <target state="translated">링크를 구성하는 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
          <source>Links the  <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph> to the specified  <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph>을 지정된 <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>에 연결합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
          <source>An IDisposable that, upon calling Dispose, will unlink the source from the target.</source>
          <target state="translated">Dispose 호출 시 대상에서 소스의 연결을 해제할 IDisposable입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
          <source><ph id="ph1">&lt;paramref name="target" /&gt;</ph> is null (Nothing in Visual Basic) or  <ph id="ph2">&lt;paramref name="linkOptions" /&gt;</ph> is null (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph>이 null(Visual Basic에서는 없음)이거나 <ph id="ph2">&lt;paramref name="linkOptions" /&gt;</ph>이 null(Visual Basic에서는 없음)입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
          <source>The  <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> that caused the faulting.</source>
          <target state="translated">오류를 발생시킨 <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
          <source>Causes the  <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph> to complete in a <ph id="ph2">&lt;see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /&gt;</ph> state.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /&gt;</ph> 상태에서 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph>가 완료되도록 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
          <source>After <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A&gt;</ph> has been called on a dataflow block, that block will complete, and its  <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.BufferBlock%601.Completion%2A&gt;</ph> task will enter a final state.</source>
          <target state="translated">후 <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A&gt;</ph> 되었습니다를 데이터 흐름 블록에서 호출 해당 블록 완료 및 해당 <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.BufferBlock%601.Completion%2A&gt;</ph> 작업이 최종 상태로 전환 됩니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
          <source>Faulting a block, as with canceling a block, causes buffered messages (unprocessed input messages as well as unoffered output messages) to be lost.</source>
          <target state="translated">블록, 오류 있는으로 취소 하는 블록으로 하면 버퍼링 된 메시지 (처리 되지 않은 입력된 메시지 뿐만 아니라 unoffered 출력 메시지) 손실 됩니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
          <source>The <ph id="ph1">&lt;paramref name="exception" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="exception" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> of the message being consumed.</source>
          <target state="translated">사용 중인 메시지의 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> consuming the message.</source>
          <target state="translated">메시지를 사용하는 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was successfully consumed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">메시지를 성공적으로 사용했으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)">
          <source>Called by a linked <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> to accept and consume a <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> previously offered by this <ph id="ph3">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>에서 이전에 제공한 <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph>를 받아 사용하기 위해 연결된 <ph id="ph3">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph>에 의해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)">
          <source>The value of the consumed message.</source>
          <target state="translated">사용한 메시지의 값입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)">
          <source>This may correspond to a different  <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> instance than was previously reserved and passed as the <ph id="ph2">&lt;paramref name="messageHeader" /&gt;</ph> to  <ph id="ph3">&lt;see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /&gt;</ph>.</source>
          <target state="translated">이전에 예약되어 <ph id="ph3">&lt;see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /&gt;</ph>에 <ph id="ph2">&lt;paramref name="messageHeader" /&gt;</ph>로 전달된 다른 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> 인스턴스에 해당할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)">
          <source>The consuming <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> must use the returned value instead of the value passed as <ph id="ph2">&lt;paramref name="messageValue" /&gt;</ph> through <ph id="ph3">&lt;see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" /&gt;</ph>.</source>
          <target state="translated">사용 중인 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>은  <ph id="ph3">&lt;see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" /&gt;</ph>를 통해 <ph id="ph2">&lt;paramref name="messageValue" /&gt;</ph>로 전달되는 값 대신 반환되는 값을 사용해야 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)">
          <source>If the message requested is not available, the return value will be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">요청한 메시지를 사용할 수 없으면 반환 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이 됩니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)">
          <source>Only <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ITargetBlock%601&gt;</ph> instances linked to this <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601&gt;</ph> instance may use <ph id="ph3">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A&gt;</ph>, and it must only be used to consume <ph id="ph4">&lt;xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader&gt;</ph> instances previously offered by this source to the target.</source>
          <target state="translated">만 <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ITargetBlock%601&gt;</ph> 인스턴스를이 연결 <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601&gt;</ph> 인스턴스에 사용할 수 있습니다 <ph id="ph3">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A&gt;</ph>, 사용 하기에 사용 해야 하 고 <ph id="ph4">&lt;xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader&gt;</ph> 인스턴스는 이전에 대상에이 소스에서 제공 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)">
          <source>The <ph id="ph1">&lt;paramref name="messageHeader" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="messageHeader" /&gt;</ph>이 올바르지 않은 경우</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> of the reserved message being released.</source>
          <target state="translated">해제하고 있는 예약된 메시지의 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> releasing the message it previously reserved.</source>
          <target state="translated">이전에 예약한 메시지를 해제하고 있는 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
          <source>Called by a linked <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> to release a previously reserved <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> by this <ph id="ph3">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>에 의해 이전에 예약한 <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph>를 해제하기 위해 연결된 <ph id="ph3">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph>에 의해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
          <source>Only <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ITargetBlock%601&gt;</ph> instances linked to this <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601&gt;</ph> instance may use <ph id="ph3">`ReleaseReservation`</ph>, and it must only be used to release <ph id="ph4">&lt;xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader&gt;</ph> instances previously and successfully reserved by the target.</source>
          <target state="translated">만 <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ITargetBlock%601&gt;</ph> 인스턴스를이 연결 <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601&gt;</ph> 인스턴스에 사용할 수 있습니다 <ph id="ph3">`ReleaseReservation`</ph>, 해제 하에 사용 해야 하 고 <ph id="ph4">&lt;xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader&gt;</ph> 인스턴스 대상에서 이전에 하 고 성공적으로 예약 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
          <source>The <ph id="ph1">&lt;paramref name="messageHeader" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="messageHeader" /&gt;</ph>이 올바르지 않은 경우</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> did not have the message reserved.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph>에 예약된 메시지가 없습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> of the message being reserved.</source>
          <target state="translated">받고 있는 메시지의 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> reserving the message.</source>
          <target state="translated">메시지를 예약하는 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
          <source>Called by a linked <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> to reserve a previously offered <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> by this <ph id="ph3">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>에 의해 이전에 제공한 <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph>를 예약하기 위해 연결된 <ph id="ph3">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph>에 의해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was successfully reserved; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">메시지를 성공적으로 예약했으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
          <source>Only <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ITargetBlock%601&gt;</ph> instances linked to this <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601&gt;</ph> instance may use <ph id="ph3">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A&gt;</ph>, and it must only be used to reserve <ph id="ph4">&lt;xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader&gt;</ph> instances previously offered by this source to the target.</source>
          <target state="translated">만 <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ITargetBlock%601&gt;</ph> 인스턴스가에 연결 <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601&gt;</ph> 인스턴스에 사용할 수 있습니다 <ph id="ph3">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A&gt;</ph>를 예약 하 고만 사용 해야 하 고 <ph id="ph4">&lt;xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader&gt;</ph> 인스턴스는 이전에 대상에이 소스에서 제공 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
          <source>If <ph id="ph1">`true`</ph> is returned, the  <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.ITargetBlock%601&gt;</ph> must subsequently call either  <ph id="ph3">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A&gt;</ph> or  <ph id="ph4">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReleaseReservation%2A&gt;</ph> for this message.</source>
          <target state="translated">경우 <ph id="ph1">`true`</ph> 반환 되는 <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.ITargetBlock%601&gt;</ph> 호출 이후에 해야 <ph id="ph3">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReleaseReservation%2A&gt;</ph> 이 메시지에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
          <source>Failure to do so may result in the source being unable to propagate any further messages to this or other targets.</source>
          <target state="translated">이렇게 하지 않으면이 또는 다른 대상에 메시지를 더 이상 전파 수 없는 소스에서 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
          <source><ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A&gt;</ph> must not be called while the target is holding any internal locks.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A&gt;</ph> 대상이 모든 내부 잠금을 보유 하는 동안 하지 호출 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
          <source>Doing so will violate the lock hierarchy necessary to avoid deadlocks in a dataflow network.</source>
          <target state="translated">이렇게 데이터 흐름 네트워크의 교착 상태를 방지 하기 위해 필요한 잠금 계층 구조를 위반 됩니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
          <source>The <ph id="ph1">&lt;paramref name="messageHeader" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="messageHeader" /&gt;</ph>이 올바르지 않은 경우</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&amp;lt;T&amp;gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;T&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> instance that represents the header of the message being offered.</source>
          <target state="translated">제공되는 메시지의 헤더를 나타내는 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;T&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>The value of the message being offered.</source>
          <target state="translated">제공되는 메시지의 값입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;T&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph> offering the message.</source>
          <target state="translated">메시지를 제공하는 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;T&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>This may be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;T&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>Set to true to instruct the target to call <ph id="ph1">&lt;see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /&gt;</ph> synchronously during the call to <ph id="ph2">&lt;see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" /&gt;</ph>, prior to returning <ph id="ph3">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /&gt;</ph>, in order to consume the message.</source>
          <target state="translated">메시지를 사용하기 위해 <ph id="ph3">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /&gt;</ph>를 반환하기 전에 <ph id="ph2">&lt;see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" /&gt;</ph>를 호출하는 동안 <ph id="ph1">&lt;see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /&gt;</ph>를 동기적으로 호출하도록 대상에 지시하려면 true로 설정합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;T&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>Offers a message to the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>, giving the target the opportunity to consume or postpone the message.</source>
          <target state="translated">메시지를 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>에 제공하며 대상에서 메시지를 선택적으로 사용하거나 연기할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;T&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>The status of the offered message.</source>
          <target state="translated">제공된 메시지의 상태입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;T&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>If the message was accepted by the target, <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /&gt;</ph> is returned, and the source should no longer use the offered message, because it is now owned by the target.</source>
          <target state="translated">메시지가 대상에서 허용된 경우  <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /&gt;</ph>가 반환되고 원본은 현재 대상에서 그대로 소유하고 있으므로 제안된 메시지를 더 이상 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;T&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>If the message was postponed by the target, <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /&gt;</ph> is returned as a notification that the target may later attempt to consume or reserve the message; in the meantime, the source still owns the message and may offer it to other blocks.</source>
          <target state="translated">메시지가 대상에 의해 연기된 경우 <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /&gt;</ph>는 나중에 메시지를 사용하거나 예약하려고 시도할 수 있는 알림으로 반환됩니다. 그 동안 소스는 메시지를 계속 소유하고 있으며 다른 블록에 메시지를 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;T&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>If the target would have otherwise postponed message, but <ph id="ph1">&lt;paramref name="source" /&gt;</ph> was <ph id="ph2">&lt;see langword="null" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /&gt;</ph> is instead returned.</source>
          <target state="translated">대상이 메시지를 연기해야 하지만 <ph id="ph1">&lt;paramref name="source" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우 <ph id="ph3">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /&gt;</ph>가 대신 반환됩니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;T&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>If the target tried to accept the message but missed it due to the source delivering the message to another target or simply discarding it, <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" /&gt;</ph> is returned.</source>
          <target state="translated">대상이 메시지를 받으려고 시도했지만 다른 대상에 메시지를 전달하는 소스 또는 단순히 삭제로 인해 누락된 경우 <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" /&gt;</ph>이 반환됩니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;T&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>If the target chose not to accept the message, <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /&gt;</ph> is returned.</source>
          <target state="translated">대상이 메시지를 수락하지 않도록 선택한 경우 <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /&gt;</ph>이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;T&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>If the target chose not to accept the message and will never accept another message from this source, <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" /&gt;</ph> is returned.</source>
          <target state="translated">대상이 메시지를 받지 않도록 선택했고 이 소스에서 다른 메시지를 받지 않을 경우 <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" /&gt;</ph>이 반환됩니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;T&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>The  <ph id="ph1">&lt;paramref name="messageHeader" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="messageHeader" /&gt;</ph>이 유효하지 않은 경우</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&amp;lt;T&amp;gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
          <source>-or- <ph id="ph1">&lt;paramref name="consumeToAccept" /&gt;</ph> may only be true if provided with a non-null <ph id="ph2">&lt;paramref name="source" /&gt;</ph>.</source>
          <target state="translated">또는 null이 아닌 <ph id="ph2">&lt;paramref name="source" /&gt;</ph>가 제공되는 경우 <ph id="ph1">&lt;paramref name="consumeToAccept" /&gt;</ph>는 true만 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.ToString">
          <source>Returns a string that represents the formatted name of this  <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph> instance.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph> 인스턴스의 형식 지정된 이름을 나타내는 문자열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.ToString">
          <source>A string that represents the formatted name of this  <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph> instance.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph> 인스턴스의 형식 지정된 이름을 나타내는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.ToString">
          <source>Inherited from  <ph id="ph1">&lt;xref:System.Object&gt;</ph> .</source>
          <target state="translated">상속 되며, <ph id="ph1">&lt;xref:System.Object&gt;</ph> 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.ToString">
          <source>Uses the  <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat%2A&gt;</ph> option.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat%2A&gt;</ph> 옵션입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.TryReceive(System.Predicate{`0},`0@)">
          <source>The predicate value must successfully pass in order for it to be received.</source>
          <target state="translated">값을 수신하려면 성공적으로 전달해야 하는 조건자입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.TryReceive(System.Predicate{`0},`0@)">
          <source><bpt id="p1">&lt;c&gt;</bpt>filter<ept id="p1">&lt;/c&gt;</ept> may be <ph id="ph1">&lt;see langword="null" /&gt;</ph>, in which case all items will pass.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>filter<ept id="p1">&lt;/c&gt;</ept>가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 있습니다. 이 경우에 모든 항목이 통과됩니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.TryReceive(System.Predicate{`0},`0@)">
          <source>The item received from the source.</source>
          <target state="translated">소스에서 받은 항목입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.TryReceive(System.Predicate{`0},`0@)">
          <source>Attempts to synchronously receive an available output item from the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" /&gt;</ph>에서 사용 가능한 출력 항목을 비동기적으로 받으려고 시도합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.TryReceive(System.Predicate{`0},`0@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if an item could be received; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">항목을 수신할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.TryReceive(System.Predicate{`0},`0@)">
          <source>This method does not block waiting for the source to provide an item.</source>
          <target state="translated">이 메서드는 항목을 제공 하는 원본에 대 한 대기를 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.TryReceive(System.Predicate{`0},`0@)">
          <source>It will return after checking for an element, whether or not an element was available.</source>
          <target state="translated">요소를 사용할 수 있는지 여부는 요소에 대 한을 확인 한 후 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.TryReceiveAll(System.Collections.Generic.IList{`0}@)">
          <source>The items received from the source.</source>
          <target state="translated">소스에서 받은 항목입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.TryReceiveAll(System.Collections.Generic.IList{`0}@)">
          <source>Attempts to synchronously receive all available items from the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" /&gt;</ph>에서 모든 사용 가능한 항목을 비동기적으로 받으려고 시도합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.TryReceiveAll(System.Collections.Generic.IList{`0}@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if one or more items could be received; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">하나 이상의 항목을 받을 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.TryReceiveAll(System.Collections.Generic.IList{`0}@)">
          <source>This method does not block waiting for the source to provide an item.</source>
          <target state="translated">이 메서드는 항목을 제공 하는 원본에 대 한 대기를 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BufferBlock`1.TryReceiveAll(System.Collections.Generic.IList{`0}@)">
          <source>It will return after checking for elements, whether or not an element was available.</source>
          <target state="translated">요소를 사용할 수 있는지 여부에 대 한 요소를 확인 한 후 반환 됩니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>