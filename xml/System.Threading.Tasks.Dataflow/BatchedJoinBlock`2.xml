<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BatchedJoinBlock`2.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d95e3d1269f93fae7f5f665e84018beb57b9bbff.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d95e3d1269f93fae7f5f665e84018beb57b9bbff</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2">
          <source>Specifies the type of data accepted by the block's first target.</source>
          <target state="translated">블록의 첫 번째 대상에서 허용하는 데이터 형식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2">
          <source>Specifies the type of data accepted by the block's second target.</source>
          <target state="translated">블록의 두 번째 대상에서 허용하는 데이터 형식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2">
          <source>Provides a dataflow block that batches a specified number of inputs of potentially differing types provided to one or more of its targets.</source>
          <target state="translated">하나 이상의 대상에 제공되어 차이가 있을 수 있는 형식에 대한 지정한 수의 입력을 일괄 처리하는 데이터 흐름 블록을 제공합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.#ctor(System.Int32)">
          <source>The number of items to group into a batch.</source>
          <target state="translated">일괄 처리로 그룹화할 항목 개수입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.#ctor(System.Int32)">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2" /&gt;</ph> with the specified configuration.</source>
          <target state="translated">지정된 구성을 사용하여 새 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2" /&gt;</ph>를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.#ctor(System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="batchSize" /&gt;</ph> must be positive.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="batchSize" /&gt;</ph>는 양수여야 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.#ctor(System.Int32,System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)">
          <source>The number of items to group into a batch.</source>
          <target state="translated">일괄 처리로 그룹화할 항목 개수입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.#ctor(System.Int32,System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)">
          <source>The options with which to configure this <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2" /&gt;</ph>을 구성하는 옵션입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.#ctor(System.Int32,System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2" /&gt;</ph> with the specified configuration.</source>
          <target state="translated">지정된 구성을 사용하여 새 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2" /&gt;</ph>를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.#ctor(System.Int32,System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)">
          <source>The <ph id="ph1">&lt;paramref name="dataflowBlockOptions" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dataflowBlockOptions" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.BatchSize">
          <source>Gets the size of the batches generated by this <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2" /&gt;</ph>에서 생성한 배치의 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.BatchSize">
          <source>The batch size.</source>
          <target state="translated">일괄 처리 크기입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.Complete">
          <source>Signals to the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph> that it should not accept nor produce any more messages nor consume any more postponed messages.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph>에 대한 신호를 통해 더 이상의 메시지를 받거나 생성할 수 없으며 추가로 지연된 메시지를 사용하면 안 됩니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.Complete">
          <source>After <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.BatchedJoinBlock%602.Complete%2A&gt;</ph> has been called on a dataflow block, that block will complete, and its <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.BatchedJoinBlock%602.Completion%2A&gt;</ph> task will enter a final state after it has processed all previously available data.</source>
          <target state="translated">후 <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.BatchedJoinBlock%602.Complete%2A&gt;</ph> 되었습니다를 데이터 흐름 블록에서 호출 해당 블록 완료 및 해당 <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.BatchedJoinBlock%602.Completion%2A&gt;</ph> 작업 이전에 사용 가능한 모든 데이터 처리 후 최종 상태로 전환 됩니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.Complete">
          <source><ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.BatchedJoinBlock%602.Complete%2A&gt;</ph> will not block waiting for completion to occur, but rather will initiate the request; to wait for completion to occur, the <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.BatchedJoinBlock%602.Completion%2A&gt;</ph> task may be used.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.BatchedJoinBlock%602.Complete%2A&gt;</ph> 가 발생 하는 완료 되기를 기다리는 차단 하지 않습니다는; 요청을 초기화 하는 대신 하지만 가 발생 하는 완료를 기다리는 <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.BatchedJoinBlock%602.Completion%2A&gt;</ph> 작업을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.Completion">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> that represents the asynchronous operation and completion of the dataflow block.</source>
          <target state="translated">비동기 작업 및 데이터 흐름 블록의 완료를 나타내는 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.Completion">
          <source>The task.</source>
          <target state="translated">작업입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.Completion">
          <source>A dataflow block is considered completed when it is not currently processing a message and when it has guaranteed that it will not process any more messages.</source>
          <target state="translated">데이터 흐름 블록에 완료 되지 현재 처리할 때 메시지와 시기는 것을 보장 메시지를 더 이상 처리 하지 것입니다으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.Completion">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> will transition to a completed state when the associated block has completed.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> 관련된 블록 완료 되었을 때 완료 된 상태로 전환 됩니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.Completion">
          <source>It will transition to the <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus&gt;</ph><ph id="ph2">&lt;xref:System.Threading.Tasks.TaskStatus.RanToCompletion&gt;</ph> state when the block completes its processing successfully according to the dataflow block’s defined semantics.</source>
          <target state="translated">전환 되 고 <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus&gt;</ph> <ph id="ph2">&lt;xref:System.Threading.Tasks.TaskStatus.RanToCompletion&gt;</ph> 블록 처리 데이터 흐름 블록에 따라 성공적으로 완료 되 면 상태가 의미 체계를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.Completion">
          <source>It will transition to the <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus&gt;</ph><ph id="ph2">&lt;xref:System.Threading.Tasks.TaskStatus.Faulted&gt;</ph> state when the dataflow block has completed processing prematurely due to an unhandled exception, and it will transition to the <ph id="ph3">&lt;xref:System.Threading.Tasks.TaskStatus&gt;</ph><ph id="ph4">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph> state when the dataflow block has completed processing prematurely due to receiving a cancellation request.</source>
          <target state="translated">전환 되 고 <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus&gt;</ph> <ph id="ph2">&lt;xref:System.Threading.Tasks.TaskStatus.Faulted&gt;</ph> 전환 되 고 데이터 흐름 블록에서 처리 되지 않은 예외로 인해 중간 처리를 완료 하는 경우 상태는 <ph id="ph3">&lt;xref:System.Threading.Tasks.TaskStatus&gt;</ph> <ph id="ph4">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph> 데이터 흐름 블록 완료 되었을 때 상태 취소 요청을 받았으므로 중간를 처리 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.Completion">
          <source>If the task completes in the <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.Faulted&gt;</ph> state, its <ph id="ph2">`Exception`</ph> property will return an <ph id="ph3">&lt;xref:System.AggregateException&gt;</ph> containing the one or more exceptions that caused the block to fail.</source>
          <target state="translated">작업이 완료 된 경우에 <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.Faulted&gt;</ph> 상태에 해당 <ph id="ph2">`Exception`</ph> 속성은 반환는 <ph id="ph3">&lt;xref:System.AggregateException&gt;</ph> 블록 실패를 발생 시킨 하나 이상의 예외를 포함 하 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> to which to connect this source.</source>
          <target state="translated">이 소스를 연결할 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" /&gt;</ph> instance that configures the link.</source>
          <target state="translated">링크를 구성하는 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
          <source>Links the  <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph> to the specified  <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> .</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph>을 지정된 <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>에 연결합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
          <source>An IDisposable that, upon calling Dispose, will unlink the source from the target.</source>
          <target state="translated">Dispose 호출 시 대상에서 소스의 연결을 해제할 IDisposable입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
          <source><ph id="ph1">&lt;paramref name="target" /&gt;</ph> is null (Nothing in Visual Basic) or  <ph id="ph2">&lt;paramref name="linkOptions" /&gt;</ph> is null (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph>이 null(Visual Basic에서는 없음)이거나 <ph id="ph2">&lt;paramref name="linkOptions" /&gt;</ph>이 null(Visual Basic에서는 없음)입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.OutputCount">
          <source>Gets the number of output items available to be received from this block.</source>
          <target state="translated">이 블록에서 받을 수 있는 출력 항목의 개수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.OutputCount">
          <source>The number of output items.</source>
          <target state="translated">출력 항목 수입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> that caused the faulting.</source>
          <target state="translated">오류를 발생시킨 <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
          <source>Causes the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph> to complete in a  <ph id="ph2">&lt;see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /&gt;</ph> state.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /&gt;</ph> 상태에서 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph>가 완료되도록 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
          <source>The <ph id="ph1">&lt;paramref name="exception" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="exception" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.Target1">
          <source>Gets a target that may be used to offer messages of the first type.</source>
          <target state="translated">제 1의 형식의 메시지를 제공하는 데 사용할 수 있는 대상을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.Target1">
          <source>The target.</source>
          <target state="translated">대상입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.Target2">
          <source>Gets a target that may be used to offer messages of the second type.</source>
          <target state="translated">제 2의 형식의 메시지를 제공하는 데 사용할 수 있는 대상을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.Target2">
          <source>The target.</source>
          <target state="translated">대상입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.ToString">
          <source>Returns a string that represents the formatted name of this  <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph> instance.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph> 인스턴스의 형식 지정된 이름을 나타내는 문자열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.ToString">
          <source>A string that represents the formatted name of this  <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph> instance.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /&gt;</ph> 인스턴스의 형식 지정된 이름을 나타내는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.ToString">
          <source>Inherited from  <ph id="ph1">&lt;xref:System.Object&gt;</ph> .</source>
          <target state="translated">상속 되며, <ph id="ph1">&lt;xref:System.Object&gt;</ph> 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.ToString">
          <source>Uses the  <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat%2A&gt;</ph> option.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat%2A&gt;</ph> 옵션입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.TryReceive(System.Predicate{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}},System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}@)">
          <source>The predicate a value must successfully pass in order for it to be received.</source>
          <target state="translated">값을 수신하려면 성공적으로 전달해야 하는 조건자입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.TryReceive(System.Predicate{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}},System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}@)">
          <source><bpt id="p1">&lt;c&gt;</bpt>filter<ept id="p1">&lt;/c&gt;</ept> may be <ph id="ph1">&lt;see langword="null" /&gt;</ph>, in which case all items will pass.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>filter<ept id="p1">&lt;/c&gt;</ept>가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 있습니다. 이 경우에 모든 항목이 통과됩니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.TryReceive(System.Predicate{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}},System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}@)">
          <source>The item received from the source.</source>
          <target state="translated">소스에서 받은 항목입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.TryReceive(System.Predicate{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}},System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}@)">
          <source>Attempts to synchronously receive an available output item from the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" /&gt;</ph>에서 사용 가능한 출력 항목을 비동기적으로 받으려고 시도합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.TryReceive(System.Predicate{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}},System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if an item could be received; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">항목을 수신할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.TryReceive(System.Predicate{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}},System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}@)">
          <source>This method does not block waiting for the source to provide an item.</source>
          <target state="translated">이 메서드는 항목을 제공 하는 원본에 대 한 대기를 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.TryReceive(System.Predicate{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}},System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}@)">
          <source>It will return after checking for an element, whether or not an element was available.</source>
          <target state="translated">요소를 사용할 수 있는지 여부는 요소에 대 한을 확인 한 후 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.TryReceiveAll(System.Collections.Generic.IList{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}}@)">
          <source>The items received from the source.</source>
          <target state="translated">소스에서 받은 항목입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.TryReceiveAll(System.Collections.Generic.IList{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}}@)">
          <source>Attempts to synchronously receive all available items from the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" /&gt;</ph>에서 모든 사용 가능한 항목을 비동기적으로 받으려고 시도합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.TryReceiveAll(System.Collections.Generic.IList{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}}@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if one or more items could be received; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">하나 이상의 항목을 받을 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.TryReceiveAll(System.Collections.Generic.IList{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}}@)">
          <source>This method does not block waiting for the source to provide an item.</source>
          <target state="translated">이 메서드는 항목을 제공 하는 원본에 대 한 대기를 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.TryReceiveAll(System.Collections.Generic.IList{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}}@)">
          <source>It will return after checking for elements, whether or not an element was available.</source>
          <target state="translated">요소를 사용할 수 있는지 여부에 대 한 요소를 확인 한 후 반환 됩니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>