<Type Name="ActionBlock&lt;TInput&gt;" FullName="System.Threading.Tasks.Dataflow.ActionBlock&lt;TInput&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="704b8294cab7368ca30be9734751b2f735b9a776" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36606880" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ActionBlock&lt;TInput&gt; : System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ActionBlock`1&lt;TInput&gt; extends System.Object implements class System.Threading.Tasks.Dataflow.IDataflowBlock, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!TInput&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.Dataflow.ActionBlock`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ActionBlock(Of TInput)&#xA;Implements ITargetBlock(Of TInput)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TInput&gt;&#xA;public ref class ActionBlock sealed : System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt;" />
  <TypeSignature Language="F#" Value="type ActionBlock&lt;'Input&gt; = class&#xA;    interface IDataflowBlock&#xA;    interface ITargetBlock&lt;'Input&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.0</AssemblyVersion>
    <AssemblyVersion>4.6.2.0</AssemblyVersion>
    <AssemblyVersion>4.6.3.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TInput" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TInput">
      <span data-ttu-id="d8f97-101">이 <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" />이 수행되는 데이터 형식입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d8f97-101">The type of data that this <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> operates on.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="d8f97-102">수신한 모든 데이터 요소에 대해 제공된 <see cref="T:System.Action`1" /> 대리자를 호출하는 데이터 흐름 블록을 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d8f97-102">Provides a dataflow block that invokes a provided <see cref="T:System.Action`1" /> delegate for every data element received.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [tpl-install-instructions](~/includes/tpl-install-instructions.md)]
  
## Examples  
 <span data-ttu-id="d8f97-103">다음 예제에서는 사용을 보여 줍니다.는 <xref:System.Threading.Tasks.Dataflow.ActionBlock%601> 클래스를 데이터 흐름 블록을 사용 하 여 몇 가지 계산을 수행 하 고는 계산을 수행 하는 데 필요한 경과 시간을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="d8f97-103">The following example shows the use of the <xref:System.Threading.Tasks.Dataflow.ActionBlock%601> class to perform several computations using dataflow blocks, and returns the elapsed time required to perform the computations.</span></span> <span data-ttu-id="d8f97-104">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 [하는 방법: 데이터 흐름 블록의 병렬 처리 수준을 지정](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md) 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="d8f97-104">This code example is part of a larger example provided for the [How to: Specify the Degree of Parallelism in a Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md) topic.</span></span>  
  
 [!code-csharp[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_degreeofparallelism/cs/dataflowdegreeofparallelism.cs#2)]
 [!code-vb[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_degreeofparallelism/vb/dataflowdegreeofparallelism.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActionBlock (Action&lt;TInput&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Action`1&lt;!TInput&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Action{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As Action(Of TInput))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActionBlock(Action&lt;TInput&gt; ^ action);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; : Action&lt;'Input&gt; -&gt; System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt;" Usage="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; action" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;TInput&gt;" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="d8f97-105">수신하는 각 데이터 요소를 사용하여 호출할 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-105">The action to invoke with each data element received.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8f97-106">지정된 작업을 사용하여 <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-106">Initializes a new instance of the <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> class with the specified action.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d8f97-107">
            <paramref name="action" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-107">
              <paramref name="action" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActionBlock (Func&lt;TInput,System.Threading.Tasks.Task&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;!TInput, class System.Threading.Tasks.Task&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Func{`0,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As Func(Of TInput, Task))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActionBlock(Func&lt;TInput, System::Threading::Tasks::Task ^&gt; ^ action);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; : Func&lt;'Input, System.Threading.Tasks.Task&gt; -&gt; System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt;" Usage="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; action" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;TInput,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="d8f97-108">수신하는 각 데이터 요소를 사용하여 호출할 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-108">The action to invoke with each data element received.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8f97-109">지정된 작업을 사용하여 <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-109">Initializes a new instance of the <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> class with the specified action.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d8f97-110">
            <paramref name="action" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-110">
              <paramref name="action" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActionBlock (Action&lt;TInput&gt; action, System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions dataflowBlockOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Action`1&lt;!TInput&gt; action, class System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions dataflowBlockOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Action{`0},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As Action(Of TInput), dataflowBlockOptions As ExecutionDataflowBlockOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActionBlock(Action&lt;TInput&gt; ^ action, System::Threading::Tasks::Dataflow::ExecutionDataflowBlockOptions ^ dataflowBlockOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; : Action&lt;'Input&gt; * System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions -&gt; System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt;" Usage="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; (action, dataflowBlockOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;TInput&gt;" />
        <Parameter Name="dataflowBlockOptions" Type="System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="d8f97-111">수신하는 각 데이터 요소를 사용하여 호출할 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-111">The action to invoke with each data element received.</span>
          </span>
        </param>
        <param name="dataflowBlockOptions">
          <span data-ttu-id="d8f97-112">이 <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" />을 구성하는 옵션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-112">The options with which to configure this <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8f97-113">지정된 작업 및 구성 옵션을 사용하여 <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-113">Initializes a new instance of the <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> class with the specified action and configuration options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d8f97-114">사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.%23ctor%28System.Action%7B%600%7D%2CSystem.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions%29> 생성자를 만들려면 새 <xref:System.Threading.Tasks.Dataflow.ActionBlock%601> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d8f97-114">The following example shows how to use the <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.%23ctor%28System.Action%7B%600%7D%2CSystem.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions%29> constructor to create a new <xref:System.Threading.Tasks.Dataflow.ActionBlock%601> object.</span></span> <span data-ttu-id="d8f97-115">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 [하는 방법: 데이터 흐름 블록의 병렬 처리 수준을 지정](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md) 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="d8f97-115">This code example is part of a larger example provided for the [How to: Specify the Degree of Parallelism in a Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md) topic.</span></span>  
  
 [!code-csharp[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_degreeofparallelism/cs/dataflowdegreeofparallelism.cs#2)]
 [!code-vb[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_degreeofparallelism/vb/dataflowdegreeofparallelism.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d8f97-116">
            <paramref name="action" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-116">
              <paramref name="action" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="d8f97-117">-또는-  <paramref name="dataflowBlockOptions" />이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-117">-or-  <paramref name="dataflowBlockOptions" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActionBlock (Func&lt;TInput,System.Threading.Tasks.Task&gt; action, System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions dataflowBlockOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;!TInput, class System.Threading.Tasks.Task&gt; action, class System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions dataflowBlockOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Func{`0,System.Threading.Tasks.Task},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As Func(Of TInput, Task), dataflowBlockOptions As ExecutionDataflowBlockOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActionBlock(Func&lt;TInput, System::Threading::Tasks::Task ^&gt; ^ action, System::Threading::Tasks::Dataflow::ExecutionDataflowBlockOptions ^ dataflowBlockOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; : Func&lt;'Input, System.Threading.Tasks.Task&gt; * System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions -&gt; System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt;" Usage="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; (action, dataflowBlockOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;TInput,System.Threading.Tasks.Task&gt;" />
        <Parameter Name="dataflowBlockOptions" Type="System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="d8f97-118">수신하는 각 데이터 요소를 사용하여 호출할 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-118">The action to invoke with each data element received.</span>
          </span>
        </param>
        <param name="dataflowBlockOptions">
          <span data-ttu-id="d8f97-119">이 <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" />을 구성하는 옵션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-119">The options with which to configure this <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8f97-120">지정된 작업 및 구성 옵션을 사용하여 <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-120">Initializes a new instance of the <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> class with the specified action and configuration options.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d8f97-121">
            <paramref name="action" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-121">
              <paramref name="action" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="d8f97-122">-또는-  <paramref name="dataflowBlockOptions" />이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-122">-or-  <paramref name="dataflowBlockOptions" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.Complete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Complete();" />
      <MemberSignature Language="F#" Value="abstract member Complete : unit -&gt; unit&#xA;override this.Complete : unit -&gt; unit" Usage="actionBlock.Complete " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d8f97-123">데이터 흐름 블록에 대한 신호를 통해 더 이상의 메시지를 받거나 생성할 수 없으며 추가로 지연된 메시지를 사용하면 안 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-123">Signals to the dataflow block  that it shouldn't accept or produce any more messages and shouldn't consume any more postponed messages.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8f97-124">후 <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Complete%2A> 되었습니다를 데이터 흐름 블록에서 호출 해당 블록 완료 됩니다 (되도록 해당 <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> 작업이 최종 상태는 전환) 이전에 사용 가능한 모든 데이터 처리 후입니다.</span><span class="sxs-lookup"><span data-stu-id="d8f97-124">After <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Complete%2A> has been called on a dataflow block, that block will complete (so that its  <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> task will enter a final state) after it has processed all previously available data.</span></span> <span data-ttu-id="d8f97-125">이 메서드는 완료 발생을 기다리는 차단 하지 것입니다는 요청을 초기화 하지만 합니다.</span><span class="sxs-lookup"><span data-stu-id="d8f97-125">This method will not block waiting for completion to occur, but will initiate the request.</span></span> <span data-ttu-id="d8f97-126">완료를 기다리는 되려면를 사용 하 여는 <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="d8f97-126">To wait for completion to occur, use the <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8f97-127">다음 예제에서는 사용을 보여 줍니다.는 <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Complete%2A> 메서드는 해서는 안 수락 또는 메시지를 더 이상 생성 자신과 더 연기 된 모든 메시지가 사용 데이터 흐름 블록에 알릴 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d8f97-127">The following example shows the use of the <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Complete%2A> method to signal to the dataflow block  that it shouldn't accept or produce any more messages nor consume any more postponed messages .</span></span> <span data-ttu-id="d8f97-128">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 [하는 방법: 데이터 흐름 블록의 병렬 처리 수준을 지정](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md) 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="d8f97-128">This code example is part of a larger example provided for the [How to: Specify the Degree of Parallelism in a Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md) topic.</span></span>  
  
 [!code-csharp[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_degreeofparallelism/cs/dataflowdegreeofparallelism.cs#2)]
 [!code-vb[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_degreeofparallelism/vb/dataflowdegreeofparallelism.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Completion">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task Completion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.Task Completion" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Dataflow.ActionBlock`1.Completion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Completion As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::Task ^ Completion { System::Threading::Tasks::Task ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Completion : System.Threading.Tasks.Task" Usage="System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt;.Completion" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8f97-129">비동기 작업 및 데이터 흐름 블록의 완료를 나타내는 <see cref="T:System.Threading.Tasks.Task" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-129">Gets a  <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation and completion of the dataflow block.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8f97-130">완료된 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-130">The completed task.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8f97-131">데이터 흐름 블록에 완료 되지 현재 처리할 때 메시지와 시기는 것을 보장 메시지를 더 이상 처리 하지 것입니다으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d8f97-131">A dataflow block is considered completed when it is not currently processing a message and when it has guaranteed that it will not process any more messages.</span></span> <span data-ttu-id="d8f97-132">반환 된 <xref:System.Threading.Tasks.Task> 관련된 블록 완료 되었을 때 완료 된 상태로 전환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d8f97-132">The returned <xref:System.Threading.Tasks.Task> will transition to a completed state  when the associated block has completed.</span></span> <span data-ttu-id="d8f97-133">전환 되는 <xref:System.Threading.Tasks.TaskStatus.RanToCompletion> 블록 처리 데이터 흐름 블록에 따라 성공적으로 완료 되 면 상태가 의미 체계를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="d8f97-133">It will transition to the <xref:System.Threading.Tasks.TaskStatus.RanToCompletion> state when the block completes its processing successfully according to the dataflow block’s defined semantics.</span></span> <span data-ttu-id="d8f97-134">전환 되 고 <xref:System.Threading.Tasks.TaskStatus.Faulted> 전환 되 고 데이터 흐름 블록에서 처리 되지 않은 예외로 인해 중간 처리를 완료 하는 경우 상태는 <xref:System.Threading.Tasks.TaskStatus.Canceled> 데이터 흐름 블록은 처리 후 설치가 완료 되 면 상태 취소 요청을 받고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d8f97-134">It will transition to the <xref:System.Threading.Tasks.TaskStatus.Faulted> state when the dataflow block has completed processing prematurely due to an unhandled exception, and it will transition to the  <xref:System.Threading.Tasks.TaskStatus.Canceled> state when the dataflow block has completed processing prematurely after receiving a cancellation request.</span></span> <span data-ttu-id="d8f97-135">작업이 완료 된 경우에 <xref:System.Threading.Tasks.TaskStatus.Faulted> 상태에 해당 `Exception` 속성 반환 하지 않습니다는 <xref:System.AggregateException> 블록 실패를 발생 시킨 하나 이상의 예외를 포함 하는 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="d8f97-135">If the task completes in the <xref:System.Threading.Tasks.TaskStatus.Faulted> state, its `Exception` property returns an <xref:System.AggregateException> exception that contains one or more exceptions that caused the block to fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8f97-136">사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> 속성 네트워크를 통해 전파 하는 모든 메시지에 대해 기다려야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d8f97-136">The following example shows how to use the <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> property to wait for all messages to propagate through the network.</span></span> <span data-ttu-id="d8f97-137">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 [하는 방법: 데이터 흐름 블록의 병렬 처리 수준을 지정](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md) 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="d8f97-137">This code example is part of a larger example provided for the [How to: Specify the Degree of Parallelism in a Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md) topic.</span></span>  
  
 [!code-csharp[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_degreeofparallelism/cs/dataflowdegreeofparallelism.cs#2)]
 [!code-vb[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_degreeofparallelism/vb/dataflowdegreeofparallelism.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputCount">
      <MemberSignature Language="C#" Value="public int InputCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InputCount" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Dataflow.ActionBlock`1.InputCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InputCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.InputCount : int" Usage="System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt;.InputCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8f97-138">이 블록에서 처리되도록 대기 중인 입력 항목의 수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-138">Gets the number of input items waiting to be processed by this block.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8f97-139">이 블록에서 처리되도록 대기 중인 입력 항목의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-139">The number of input items waiting to be processed by this block.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8f97-140"><xref:System.Threading.Tasks.Dataflow.ActionBlock%601.InputCount%2A> 블록에서 현재 처리 중인 모든 항목 또는 블록에 의해 이미 처리 하는 항목이 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d8f97-140">The <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.InputCount%2A> does not include any items that are currently being processed by the block or any items that have already been processed by the block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Post">
      <MemberSignature Language="C#" Value="public bool Post (TInput item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Post(!TInput item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.Post(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Post (item As TInput) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Post(TInput item);" />
      <MemberSignature Language="F#" Value="member this.Post : 'Input -&gt; bool" Usage="actionBlock.Post item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="TInput" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="d8f97-141">대상에 제공되는 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-141">The item being offered to the target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8f97-142">대상 데이터 흐름 블록에 대한 항목을 게시합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-142">Posts an item to the target dataflow block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8f97-143">데이터 흐름 블록에 항목을 게시하는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-143">
              <see langword="true" /> if the item is posted to the dataflow block; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d8f97-144">사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Post%2A> 메서드를 대상 데이터 흐름 블록에 항목을 게시 합니다.</span><span class="sxs-lookup"><span data-stu-id="d8f97-144">The following example shows how to use the <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Post%2A> method to post an item to the target dataflow block.</span></span> <span data-ttu-id="d8f97-145">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 [하는 방법: 데이터 흐름 블록의 병렬 처리 수준을 지정](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md) 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="d8f97-145">This code example is part of a larger example provided for the [How to: Specify the Degree of Parallelism in a Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md) topic.</span></span>  
  
 [!code-csharp[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_degreeofparallelism/cs/dataflowdegreeofparallelism.cs#2)]
 [!code-vb[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_degreeofparallelism/vb/dataflowdegreeofparallelism.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.IDataflowBlock.Fault">
      <MemberSignature Language="C#" Value="void IDataflowBlock.Fault (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(Exception ^ exception) = System::Threading::Tasks::Dataflow::IDataflowBlock::Fault;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(System.Exception)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">
          <span data-ttu-id="d8f97-146">오류를 발생시킨 예외입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-146">The exception that caused the faulting.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8f97-147">오류 상태에서 데이터 흐름 블록이 완료되도록 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-147">Causes the dataflow block to complete in a faulted state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8f97-148">후 <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A> 되었으면 해당 블록을 완료 합니다를 데이터 흐름 블록에서 호출 및 해당 <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> 작업이 최종 상태로 전환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d8f97-148">After <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A> has been called on a dataflow block, that block will complete and its  <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> task will enter a final state.</span></span> <span data-ttu-id="d8f97-149">블록, 오류 있는으로 취소 하는 블록으로 하면 버퍼링 된 메시지 (처리 되지 않은 입력된 메시지 뿐만 아니라 unoffered 출력 메시지) 손실 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d8f97-149">Faulting a block, as with canceling a block, causes buffered messages (unprocessed input messages as well as unoffered output messages) to be lost.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d8f97-150">
            <paramref name="exception" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-150">
              <paramref name="exception" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;.OfferMessage">
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Dataflow.DataflowMessageStatus ITargetBlock&lt;TInput&gt;.OfferMessage (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, TInput messageValue, System.Threading.Tasks.Dataflow.ISourceBlock&lt;TInput&gt; source, bool consumeToAccept);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Threading.Tasks.Dataflow.DataflowMessageStatus System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;.OfferMessage(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, !TInput messageValue, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!TInput&gt; source, bool consumeToAccept) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&lt;TInput&gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function OfferMessage (messageHeader As DataflowMessageHeader, messageValue As TInput, source As ISourceBlock(Of TInput), consumeToAccept As Boolean) As DataflowMessageStatus Implements ITargetBlock(Of TInput).OfferMessage" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Threading::Tasks::Dataflow::DataflowMessageStatus System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;.OfferMessage(System::Threading::Tasks::Dataflow::DataflowMessageHeader messageHeader, TInput messageValue, System::Threading::Tasks::Dataflow::ISourceBlock&lt;TInput&gt; ^ source, bool consumeToAccept) = System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt;::OfferMessage;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Dataflow.DataflowMessageStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="messageValue" Type="TInput" />
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TInput&gt;" />
        <Parameter Name="consumeToAccept" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="messageHeader">
          <span data-ttu-id="d8f97-151">제공되는 메시지의 헤더입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-151">The header of the message being offered.</span>
          </span>
        </param>
        <param name="messageValue">
          <span data-ttu-id="d8f97-152">제공되는 메시지의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-152">The value of the message being offered.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="d8f97-153">메시지를 제공하는 데이터 흐름 블록입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-153">The dataflow block that is offering the message.</span>
          </span>
          <span data-ttu-id="d8f97-154">이 값은 <see langword="null" />이 될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-154">This may be <see langword="null" />.</span>
          </span>
        </param>
        <param name="consumeToAccept">
          <span data-ttu-id="d8f97-155">메시지를 사용하기 위해 <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" />를 반환하기 전에 <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />를 호출하는 동안 <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" />를 동기적으로 호출하도록 대상에 지시하려면 <see langword="true" />이고 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-155">
              <see langword="true" /> to instruct the target to call <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> synchronously during the call to <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />, prior to returning <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" />, in order to consume the message; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8f97-156">메시지를 데이터 흐름 블록에 제공하며 메시지를 선택적으로 사용하거나 연기할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-156">Offers a message to the dataflow block, and gives it the opportunity to consume or postpone the message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8f97-157">제공된 메시지의 상태입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-157">The status of the offered message.</span>
          </span>
          <span data-ttu-id="d8f97-158">메시지가 대상에서 허용된 경우  <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" />가 반환되고 원본은 현재 대상에서 그대로 소유하고 있으므로 제안된 메시지를 더 이상 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-158">If the message was accepted by the target, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> is returned, and the source should no longer use the offered message, because it is now owned by the target.</span>
          </span>
          <span data-ttu-id="d8f97-159">메시지가 대상에 의해 연기된 경우 <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" />는 나중에 메시지를 사용하거나 예약하려고 시도할 수 있는 알림으로 반환됩니다. 그 동안 소스는 메시지를 계속 소유하고 있으며 다른 블록에 메시지를 제공할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-159">If the message was postponed by the target, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> is returned as a notification that the target may later attempt to consume or reserve the message; in the meantime, the source still owns the message and may offer it to other blocks.</span>
          </span>
          <span data-ttu-id="d8f97-160">대상이 메시지를 연기하더라도 원본이 <see langword="null" />이면 <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" />가 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-160">If the target would have otherwise postponed message, but source was <see langword="null" />, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> is returned.</span>
          </span>
          <span data-ttu-id="d8f97-161">대상이 메시지를 받으려고 시도했지만 다른 대상에 메시지를 전달하는 소스 또는 단순히 삭제로 인해 누락된 경우 <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" />이 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-161">If the target tried to accept the message but missed it due to the source delivering the message to another target or simply discarding it, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" /> is returned.</span>
          </span>
          <span data-ttu-id="d8f97-162">대상이 메시지를 수락하지 않도록 선택한 경우 <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" />이 반환 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-162">If the target chose not to accept the message, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> is returned.</span>
          </span>
          <span data-ttu-id="d8f97-163">대상이 메시지를 받지 않도록 선택했고 이 소스에서 다른 메시지를 받지 않을 경우 <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" />이 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-163">If the target chose not to accept the message and will never accept another message from this source, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" /> is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d8f97-164">
            <paramref name="messageHeader" />가 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-164">
              <paramref name="messageHeader" /> is not valid.</span>
          </span>
          <span data-ttu-id="d8f97-165">또는 null이 아닌 <paramref name="source" />가 제공되는 경우에만 <paramref name="consumeToAccept" />가 <see langword="true" />일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-165">-or- <paramref name="consumeToAccept" /> may be <see langword="true" /> only if provided with a non-null <paramref name="source" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="actionBlock.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d8f97-166">이 <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> 인스턴스의 형식 지정된 이름을 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-166">Returns a string that represents the formatted name of this <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8f97-167">이 <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> 인스턴스의 형식 지정된 이름을 나타내는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8f97-167">A string that represents the formatted name of this <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8f97-168"><xref:System.Object>에서 상속됩니다.</span><span class="sxs-lookup"><span data-stu-id="d8f97-168">Inherited from <xref:System.Object>.</span></span> <span data-ttu-id="d8f97-169">사용 하 여 <xref:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat%2A> 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="d8f97-169">Uses the  <xref:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat%2A> option.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>