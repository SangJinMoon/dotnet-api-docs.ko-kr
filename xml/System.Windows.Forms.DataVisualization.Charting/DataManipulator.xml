<Type Name="DataManipulator" FullName="System.Windows.Forms.DataVisualization.Charting.DataManipulator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fc1c74384e710605c5109c17f8817d1185dd0268" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52249753" /></Metadata><TypeSignature Language="C#" Value="public class DataManipulator : System.Windows.Forms.DataVisualization.Charting.DataFormula" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataManipulator extends System.Windows.Forms.DataVisualization.Charting.DataFormula" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.DataManipulator" />
  <TypeSignature Language="VB.NET" Value="Public Class DataManipulator&#xA;Inherits DataFormula" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataManipulator : System::Windows::Forms::DataVisualization::Charting::DataFormula" />
  <TypeSignature Language="F#" Value="type DataManipulator = class&#xA;    inherit DataFormula" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataVisualization.Charting.DataFormula</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>런타임에 데이터 조작 작업을 수행 하는 방법을 제공 합니다. 이 클래스에 의해 노출 되는 <see cref="P:System.Windows.Forms.DataVisualization.Charting.Chart.DataManipulator" /> 루트 속성 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> 개체입니다.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataManipulator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataManipulator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataVisualization.Charting.DataManipulator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExportSeriesValues">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>데이터를 내보냅니다는 계열 또는 계열 컬렉션의 <see cref="T:System.Data.DataSet" /> 개체입니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExportSeriesValues">
      <MemberSignature Language="C#" Value="public System.Data.DataSet ExportSeriesValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataSet ExportSeriesValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.ExportSeriesValues" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportSeriesValues () As DataSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataSet ^ ExportSeriesValues();" />
      <MemberSignature Language="F#" Value="member this.ExportSeriesValues : unit -&gt; System.Data.DataSet" Usage="dataManipulator.ExportSeriesValues " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataSet</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>에 저장 된 모든 계열에 대 한 데이터를 내보냅니다 합니다 <see cref="T:System.Windows.Forms.DataVisualization.Charting.SeriesCollection" /> 에 <see cref="T:System.Data.DataSet" /> 개체입니다.</summary>
        <returns><see cref="T:System.Data.DataSet" /> 내보낸된 계열 데이터가 들어 있는 개체입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportSeriesValues">
      <MemberSignature Language="C#" Value="public System.Data.DataSet ExportSeriesValues (string seriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataSet ExportSeriesValues(string seriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.ExportSeriesValues(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportSeriesValues (seriesNames As String) As DataSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataSet ^ ExportSeriesValues(System::String ^ seriesNames);" />
      <MemberSignature Language="F#" Value="member this.ExportSeriesValues : string -&gt; System.Data.DataSet" Usage="dataManipulator.ExportSeriesValues seriesNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="seriesNames">이름 쉼표로 구분 된 목록을 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 를 내보낼 수 있습니다.</param>
        <summary>에 하나 이상의 계열에서 데이터를 내보냅니다 여 <see cref="T:System.Data.DataSet" /> 개체입니다.</summary>
        <returns><see cref="T:System.Data.DataSet" /> 내보낸된 계열 데이터가 들어 있는 개체입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportSeriesValues">
      <MemberSignature Language="C#" Value="public System.Data.DataSet ExportSeriesValues (System.Windows.Forms.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataSet ExportSeriesValues(class System.Windows.Forms.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.ExportSeriesValues(System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataSet ^ ExportSeriesValues(System::Windows::Forms::DataVisualization::Charting::Series ^ series);" />
      <MemberSignature Language="F#" Value="member this.ExportSeriesValues : System.Windows.Forms.DataVisualization.Charting.Series -&gt; System.Data.DataSet" Usage="dataManipulator.ExportSeriesValues series" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="series" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="series">내보낼 계열입니다.</param>
        <summary>에 지정 된 계열의 데이터를 내보냅니다 여 <see cref="T:System.Data.DataSet" /> 개체입니다.</summary>
        <returns><see cref="T:System.Data.DataSet" /> 내보낸된 계열 데이터가 들어 있는 개체입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Filter">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>하나 이상의 계열을 필터링 하거나 계열 또는 계열 컬렉션의 데이터 요소를 표준 필터링 규칙 또는 사용자 지정 필터링 규칙을 적용 하 여 필터링 합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.IDataPointFilter filterInterface, string inputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(class System.Windows.Forms.DataVisualization.Charting.IDataPointFilter filterInterface, string inputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.IDataPointFilter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Filter (filterInterface As IDataPointFilter, inputSeriesNames As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::IDataPointFilter ^ filterInterface, System::String ^ inputSeriesNames);" />
      <MemberSignature Language="F#" Value="member this.Filter : System.Windows.Forms.DataVisualization.Charting.IDataPointFilter * string -&gt; unit" Usage="dataManipulator.Filter (filterInterface, inputSeriesNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterInterface" Type="System.Windows.Forms.DataVisualization.Charting.IDataPointFilter" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filterInterface"><see cref="T:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter" /> 인터페이스를 구현하는 개체</param>
        <param name="inputSeriesNames">이름 쉼표로 구분 된 목록을 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 필터링 합니다.</param>
        <summary>첫 번째 계열의 포인트를 기반으로 하나 이상의 계열의 데이터 요소에 대해 사용자 지정 필터링을 수행 합니다. 필터링 된 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체는 수정된 된 데이터를 저장할 수도 있습니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.IDataPointFilter filterInterface, System.Windows.Forms.DataVisualization.Charting.Series inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(class System.Windows.Forms.DataVisualization.Charting.IDataPointFilter filterInterface, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.IDataPointFilter,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Filter (filterInterface As IDataPointFilter, inputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::IDataPointFilter ^ filterInterface, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries);" />
      <MemberSignature Language="F#" Value="member this.Filter : System.Windows.Forms.DataVisualization.Charting.IDataPointFilter * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataManipulator.Filter (filterInterface, inputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterInterface" Type="System.Windows.Forms.DataVisualization.Charting.IDataPointFilter" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="filterInterface"><see cref="T:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter" /> 인터페이스를 구현하는 개체</param>
        <param name="inputSeries"><see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 필터링 되는 개체입니다.</param>
        <summary>계열의 데이터 요소에 대해 사용자 지정 필터링을 수행 합니다. <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 필터링 되는 개체도 수정된 된 데이터를 저장 합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, double compareValue, string inputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, float64 compareValue, string inputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.CompareMethod,System.Double,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::CompareMethod compareMethod, double compareValue, System::String ^ inputSeriesNames);" />
      <MemberSignature Language="F#" Value="member this.Filter : System.Windows.Forms.DataVisualization.Charting.CompareMethod * double * string -&gt; unit" Usage="dataManipulator.Filter (compareMethod, compareValue, inputSeriesNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compareMethod" Type="System.Windows.Forms.DataVisualization.Charting.CompareMethod" />
        <Parameter Name="compareValue" Type="System.Double" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="compareMethod"><see cref="T:System.Windows.Forms.DataVisualization.Charting.CompareMethod" /> 필터링 규칙의 비교 방법을 결정 하는 열거형 값입니다. 일 수 있습니다 <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.LessThan" />, <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.EqualTo" />등입니다.</param>
        <param name="compareValue">데이터 요소의 첫 번째 Y 값에 적용 되는 필터링 규칙의 값 부분입니다. 예를 들어 필터링 규칙 "&lt;6"에서 6은 값입니다.</param>
        <param name="inputSeriesNames">이름 쉼표로 구분 된 목록을 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 필터링 합니다.</param>
        <summary>첫 번째 계열에서 데이터 요소의 첫 번째 Y 값에 필터링 규칙을 적용 하 여 하나 이상의 계열을 필터링 합니다. 필터링 된 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체를 사용 하 여 수정된 된 데이터를 저장 합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, double compareValue, System.Windows.Forms.DataVisualization.Charting.Series inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, float64 compareValue, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.CompareMethod,System.Double,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::CompareMethod compareMethod, double compareValue, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries);" />
      <MemberSignature Language="F#" Value="member this.Filter : System.Windows.Forms.DataVisualization.Charting.CompareMethod * double * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataManipulator.Filter (compareMethod, compareValue, inputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compareMethod" Type="System.Windows.Forms.DataVisualization.Charting.CompareMethod" />
        <Parameter Name="compareValue" Type="System.Double" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="compareMethod"><see cref="T:System.Windows.Forms.DataVisualization.Charting.CompareMethod" /> 필터링 규칙의 비교 방법을 결정 하는 열거형 값입니다. 일 수 있습니다 <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.LessThan" />, <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.EqualTo" />등입니다.</param>
        <param name="compareValue">데이터 요소의 첫 번째 Y 값에 적용 되는 필터링 규칙의 값 부분입니다. 예를 들어 필터링 규칙 "&lt;6"에서 6은 값입니다.</param>
        <param name="inputSeries"><see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 필터링 되는 개체입니다.</param>
        <summary>각 데이터 요소의 첫 번째 Y 값에 필터링 규칙을 적용 하 여 계열의 데이터 요소를 필터링 합니다. <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 필터링 되는 개체도 수정된 된 데이터를 저장 합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.DateRangeType dateRange, string rangeElements, string inputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Windows.Forms.DataVisualization.Charting.DateRangeType dateRange, string rangeElements, string inputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.DateRangeType,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Filter (dateRange As DateRangeType, rangeElements As String, inputSeriesNames As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::DateRangeType dateRange, System::String ^ rangeElements, System::String ^ inputSeriesNames);" />
      <MemberSignature Language="F#" Value="member this.Filter : System.Windows.Forms.DataVisualization.Charting.DateRangeType * string * string -&gt; unit" Usage="dataManipulator.Filter (dateRange, rangeElements, inputSeriesNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateRange" Type="System.Windows.Forms.DataVisualization.Charting.DateRangeType" />
        <Parameter Name="rangeElements" Type="System.String" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dateRange"><see cref="T:System.Windows.Forms.DataVisualization.Charting.DateRangeType" /> 요일, 월 등의 일 같은 날짜/시간 간격을 나타내는 열거형 값입니다. 지정 된 요소가 필터링 되는 범위를 결정 합니다.</param>
        <param name="rangeElements">로 지정 된 날짜/시간 범위 내에서 요소를 지정 된 <paramref name="dateRange" /> 필터링 되는 매개 변수입니다. 예를 들어, "7" 단일 값 수 있습니다. 쉼표로 구분 된 값, 예를 들어, "5,6"; "9-11"; 등의 값 범위 또는 "5,6,9-11"과 같은 변형 합니다.</param>
        <param name="inputSeriesNames">이름 쉼표로 구분 된 목록을 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 필터링 합니다.</param>
        <summary>지정된 된 요소를 제거 하거나 지정 된 날짜/시간 범위에 대해 빈 상태로 표시 하 여 하나 이상의 계열의 데이터 요소를 필터링 합니다. 필터링 된 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체를 사용 하 여 수정된 된 데이터를 저장 합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.DateRangeType dateRange, string rangeElements, System.Windows.Forms.DataVisualization.Charting.Series inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Windows.Forms.DataVisualization.Charting.DateRangeType dateRange, string rangeElements, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.DateRangeType,System.String,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Filter (dateRange As DateRangeType, rangeElements As String, inputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::DateRangeType dateRange, System::String ^ rangeElements, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries);" />
      <MemberSignature Language="F#" Value="member this.Filter : System.Windows.Forms.DataVisualization.Charting.DateRangeType * string * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataManipulator.Filter (dateRange, rangeElements, inputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateRange" Type="System.Windows.Forms.DataVisualization.Charting.DateRangeType" />
        <Parameter Name="rangeElements" Type="System.String" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="dateRange"><see cref="T:System.Windows.Forms.DataVisualization.Charting.DateRangeType" /> 요일, 월 등의 일 같은 날짜/시간 간격을 나타내는 열거형 값입니다. 지정 된 요소가 필터링 되는 범위를 결정 합니다.</param>
        <param name="rangeElements">로 지정 된 날짜/시간 범위 내에서 요소를 지정 된 <paramref name="dateRange" /> 필터링 되는 매개 변수입니다. 예를 들어, "7" 단일 값 수 있습니다. 쉼표로 구분 된 값, 예를 들어, "5,6"; "9-11"; 등의 값 범위 또는 "5,6,9-11"과 같은 변형 합니다.</param>
        <param name="inputSeries"><see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체를 필터링 할 수 있습니다.</param>
        <summary>지정된 된 요소를 제거 하거나 지정 된 날짜/시간 범위에 대해 빈 상태로 표시 하 여 계열에서 데이터 요소를 필터링 합니다. <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 필터링 되는 개체 수정된 된 데이터 저장소를 사용 합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.IDataPointFilter filterInterface, string inputSeriesNames, string outputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(class System.Windows.Forms.DataVisualization.Charting.IDataPointFilter filterInterface, string inputSeriesNames, string outputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.IDataPointFilter,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Filter (filterInterface As IDataPointFilter, inputSeriesNames As String, outputSeriesNames As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::IDataPointFilter ^ filterInterface, System::String ^ inputSeriesNames, System::String ^ outputSeriesNames);" />
      <MemberSignature Language="F#" Value="member this.Filter : System.Windows.Forms.DataVisualization.Charting.IDataPointFilter * string * string -&gt; unit" Usage="dataManipulator.Filter (filterInterface, inputSeriesNames, outputSeriesNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterInterface" Type="System.Windows.Forms.DataVisualization.Charting.IDataPointFilter" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
        <Parameter Name="outputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filterInterface"><see cref="T:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter" /> 인터페이스를 구현하는 개체</param>
        <param name="inputSeriesNames">이름 쉼표로 구분 된 목록을 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 필터링 합니다.</param>
        <param name="outputSeriesNames">이름 쉼표로 구분 된 목록을 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 필터링된 된 데이터를 저장 하는 합니다. 출력 계열의 수가 입력 계열의 수와 일치 하는, 그렇지 않으면 예외가 throw 됩니다 있는지 확인 합니다.</param>
        <summary>첫 번째 계열의 포인트를 기반으로 하나 이상의 계열의 데이터 요소에 대해 사용자 지정 필터링을 수행 합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.IDataPointFilter filterInterface, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(class System.Windows.Forms.DataVisualization.Charting.IDataPointFilter filterInterface, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.IDataPointFilter,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Filter (filterInterface As IDataPointFilter, inputSeries As Series, outputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::IDataPointFilter ^ filterInterface, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries);" />
      <MemberSignature Language="F#" Value="member this.Filter : System.Windows.Forms.DataVisualization.Charting.IDataPointFilter * System.Windows.Forms.DataVisualization.Charting.Series * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataManipulator.Filter (filterInterface, inputSeries, outputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterInterface" Type="System.Windows.Forms.DataVisualization.Charting.IDataPointFilter" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="filterInterface"><see cref="T:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter" /> 인터페이스를 구현하는 개체</param>
        <param name="inputSeries"><see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체를 필터링 할 수 있습니다.</param>
        <param name="outputSeries"><see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 필터링된 된 데이터를 저장 하는 개체입니다. 계열 존재 하지 않는 경우 예외가 throw 됩니다.</param>
        <summary>계열의 데이터 요소에 대해 사용자 지정 필터링을 수행 합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, double compareValue, string inputSeriesNames, string outputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, float64 compareValue, string inputSeriesNames, string outputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.CompareMethod,System.Double,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::CompareMethod compareMethod, double compareValue, System::String ^ inputSeriesNames, System::String ^ outputSeriesNames);" />
      <MemberSignature Language="F#" Value="member this.Filter : System.Windows.Forms.DataVisualization.Charting.CompareMethod * double * string * string -&gt; unit" Usage="dataManipulator.Filter (compareMethod, compareValue, inputSeriesNames, outputSeriesNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compareMethod" Type="System.Windows.Forms.DataVisualization.Charting.CompareMethod" />
        <Parameter Name="compareValue" Type="System.Double" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
        <Parameter Name="outputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="compareMethod"><see cref="T:System.Windows.Forms.DataVisualization.Charting.CompareMethod" /> 필터링 규칙의 비교 방법을 결정 하는 열거형 값입니다. 일 수 있습니다 <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.LessThan" />, <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.EqualTo" />등입니다.</param>
        <param name="compareValue">데이터 요소의 첫 번째 Y 값에 적용 되는 필터링 규칙의 값 부분입니다. 예를 들어 필터링 규칙 "&lt;6"에서 6은 값입니다.</param>
        <param name="inputSeriesNames">이름 쉼표로 구분 된 목록을 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 필터링 합니다.</param>
        <param name="outputSeriesNames">이름 쉼표로 구분 된 목록을 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 필터링된 된 데이터를 저장 하는 합니다. 출력 계열의 수가 입력 계열의 수와 일치 해야 합니다, 그리고 그렇지 않으면 예외가 throw 됩니다.</param>
        <summary>각 데이터 요소의 첫 번째 계열의 첫 번째 Y 값에 필터링 규칙을 적용 하 여 하나 이상의 계열을 필터링 합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, double compareValue, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, float64 compareValue, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.CompareMethod,System.Double,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::CompareMethod compareMethod, double compareValue, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries);" />
      <MemberSignature Language="F#" Value="member this.Filter : System.Windows.Forms.DataVisualization.Charting.CompareMethod * double * System.Windows.Forms.DataVisualization.Charting.Series * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataManipulator.Filter (compareMethod, compareValue, inputSeries, outputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compareMethod" Type="System.Windows.Forms.DataVisualization.Charting.CompareMethod" />
        <Parameter Name="compareValue" Type="System.Double" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="compareMethod"><see cref="T:System.Windows.Forms.DataVisualization.Charting.CompareMethod" /> 필터링 규칙의 비교 방법을 결정 하는 열거형 값입니다. 일 수 있습니다 <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.LessThan" />, <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.EqualTo" />등입니다.</param>
        <param name="compareValue">데이터 요소의 첫 번째 Y 값에 적용 되는 필터링 규칙의 값 부분입니다. 예를 들어 필터링 규칙 "&lt;6"에서 6은 값입니다.</param>
        <param name="inputSeries"><see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체를 필터링 할 수 있습니다.</param>
        <param name="outputSeries"><see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 필터링된 된 데이터를 저장 하는 개체입니다. 계열 존재 하지 않는 경우 예외가 throw 됩니다.</param>
        <summary>각 데이터 요소의 첫 번째 Y 값에 필터링 규칙을 적용 하 여 계열의 데이터 요소를 필터링 합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.DateRangeType dateRange, string rangeElements, string inputSeriesNames, string outputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Windows.Forms.DataVisualization.Charting.DateRangeType dateRange, string rangeElements, string inputSeriesNames, string outputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.DateRangeType,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Filter (dateRange As DateRangeType, rangeElements As String, inputSeriesNames As String, outputSeriesNames As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::DateRangeType dateRange, System::String ^ rangeElements, System::String ^ inputSeriesNames, System::String ^ outputSeriesNames);" />
      <MemberSignature Language="F#" Value="member this.Filter : System.Windows.Forms.DataVisualization.Charting.DateRangeType * string * string * string -&gt; unit" Usage="dataManipulator.Filter (dateRange, rangeElements, inputSeriesNames, outputSeriesNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateRange" Type="System.Windows.Forms.DataVisualization.Charting.DateRangeType" />
        <Parameter Name="rangeElements" Type="System.String" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
        <Parameter Name="outputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dateRange"><see cref="T:System.Windows.Forms.DataVisualization.Charting.DateRangeType" /> 요일, 월 등의 일 같은 날짜/시간 간격을 나타내는 열거형 값입니다. 지정 된 요소가 필터링 되는 범위를 결정 합니다.</param>
        <param name="rangeElements">로 지정 된 날짜/시간 범위 내에서 요소를 지정 된 <paramref name="dateRange" /> 필터링 되는 매개 변수입니다. 예를 들어, "7" 단일 값 수 있습니다. 쉼표로 구분 된 값, 예를 들어, "5,6"; "9-11"; 등의 값 범위 또는 "5,6,9-11"과 같은 변형 합니다.</param>
        <param name="inputSeriesNames">이름 쉼표로 구분 된 목록을 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 필터링 합니다.</param>
        <param name="outputSeriesNames">이름 쉼표로 구분 된 목록을 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 필터링된 된 데이터를 저장 하는 합니다. 출력 계열의 수가 입력 계열의 수와 일치 하는, 그렇지 않으면 예외가 throw 됩니다 있는지 확인 합니다.</param>
        <summary>지정된 된 요소를 제거 하거나 지정 된 날짜/시간 범위에 대해 빈 상태로 표시 하 여 하나 이상의 계열의 데이터 요소를 필터링 합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.DateRangeType dateRange, string rangeElements, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Windows.Forms.DataVisualization.Charting.DateRangeType dateRange, string rangeElements, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.DateRangeType,System.String,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Filter (dateRange As DateRangeType, rangeElements As String, inputSeries As Series, outputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::DateRangeType dateRange, System::String ^ rangeElements, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries);" />
      <MemberSignature Language="F#" Value="member this.Filter : System.Windows.Forms.DataVisualization.Charting.DateRangeType * string * System.Windows.Forms.DataVisualization.Charting.Series * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataManipulator.Filter (dateRange, rangeElements, inputSeries, outputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateRange" Type="System.Windows.Forms.DataVisualization.Charting.DateRangeType" />
        <Parameter Name="rangeElements" Type="System.String" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="dateRange"><see cref="T:System.Windows.Forms.DataVisualization.Charting.DateRangeType" /> 요일, 월 등의 일 같은 날짜/시간 간격을 나타내는 열거형 값입니다. 지정 된 요소가 필터링 되는 범위를 결정 합니다.</param>
        <param name="rangeElements">로 지정 된 날짜/시간 범위 내에서 요소를 지정 된 <paramref name="dateRange" /> 필터링 되는 매개 변수입니다. 예를 들어, "7" 단일 값 수 있습니다. 쉼표로 구분 된 값, 예를 들어, "5,6"; "9-11"; 등의 값 범위 또는 "5,6,9-11"과 같은 변형 합니다.</param>
        <param name="inputSeries"><see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체를 필터링 할 수 있습니다.</param>
        <param name="outputSeries"><see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 필터링된 된 데이터를 저장 하는 개체입니다. 계열 존재 하지 않는 경우 예외가 throw 됩니다.</param>
        <summary>지정된 된 요소를 제거 하거나 지정 된 날짜/시간 범위에 대해 빈 상태로 표시 하 여 계열에서 데이터 요소를 필터링 합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, double compareValue, string inputSeriesNames, string outputSeriesNames, string usingValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, float64 compareValue, string inputSeriesNames, string outputSeriesNames, string usingValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.CompareMethod,System.Double,System.String,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::CompareMethod compareMethod, double compareValue, System::String ^ inputSeriesNames, System::String ^ outputSeriesNames, System::String ^ usingValue);" />
      <MemberSignature Language="F#" Value="member this.Filter : System.Windows.Forms.DataVisualization.Charting.CompareMethod * double * string * string * string -&gt; unit" Usage="dataManipulator.Filter (compareMethod, compareValue, inputSeriesNames, outputSeriesNames, usingValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compareMethod" Type="System.Windows.Forms.DataVisualization.Charting.CompareMethod" />
        <Parameter Name="compareValue" Type="System.Double" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
        <Parameter Name="outputSeriesNames" Type="System.String" />
        <Parameter Name="usingValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="compareMethod"><see cref="T:System.Windows.Forms.DataVisualization.Charting.CompareMethod" /> 필터링 규칙의 비교 방법을 결정 하는 열거형 값입니다. 일 수 있습니다 <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.LessThan" />, <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.EqualTo" />등입니다.</param>
        <param name="compareValue">데이터 요소의 첫 번째 Y 값에 적용 되는 필터링 규칙의 값 부분입니다. 예를 들어 필터링 규칙 "&lt;6"에서 6은 값입니다.</param>
        <param name="inputSeriesNames">이름 쉼표로 구분 된 목록을 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 필터링 합니다.</param>
        <param name="outputSeriesNames">이름 쉼표로 구분 된 목록을 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 필터링된 된 데이터를 저장 하는 합니다. 출력 계열의 수가 입력 계열의 수와 같아야, 그렇지 않으면 예외가 throw 됩니다.</param>
        <param name="usingValue">데이터 점 필터링 규칙에 적용 되는 값입니다. X, Y, Y2, Y3, 및 등입니다.</param>
        <summary>첫 번째 계열에서 지정 된 데이터 요소 값에 필터링 규칙을 적용 하 여 하나 이상의 계열을 필터링 합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, double compareValue, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries, string usingValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, float64 compareValue, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries, string usingValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.CompareMethod,System.Double,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::CompareMethod compareMethod, double compareValue, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries, System::String ^ usingValue);" />
      <MemberSignature Language="F#" Value="member this.Filter : System.Windows.Forms.DataVisualization.Charting.CompareMethod * double * System.Windows.Forms.DataVisualization.Charting.Series * System.Windows.Forms.DataVisualization.Charting.Series * string -&gt; unit" Usage="dataManipulator.Filter (compareMethod, compareValue, inputSeries, outputSeries, usingValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compareMethod" Type="System.Windows.Forms.DataVisualization.Charting.CompareMethod" />
        <Parameter Name="compareValue" Type="System.Double" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="usingValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="compareMethod"><see cref="T:System.Windows.Forms.DataVisualization.Charting.CompareMethod" /> 필터링 규칙의 비교 방법을 결정 하는 열거형 값입니다. 일 수 있습니다 <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.LessThan" />, <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.EqualTo" />등입니다.</param>
        <param name="compareValue">데이터 요소의 첫 번째 Y 값에 적용 되는 필터링 규칙의 값 부분입니다. 예를 들어 필터링 규칙 "&lt;6"에서 6은 값입니다.</param>
        <param name="inputSeries"><see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체를 필터링 할 수 있습니다.</param>
        <param name="outputSeries"><see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 필터링된 된 데이터를 저장 하는 개체입니다. 계열 존재 하지 않는 경우 예외가 throw 됩니다.</param>
        <param name="usingValue">데이터 점 필터링 규칙에 적용 되는 값입니다. X, Y, Y2, Y3, 및 등입니다.</param>
        <summary>지정 된 데이터 필터링 규칙을 적용 하 여 계열의 데이터 요소를 필터링 비교에 대 한 값을 가리킵니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterMatchedPoints">
      <MemberSignature Language="C#" Value="public bool FilterMatchedPoints { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FilterMatchedPoints" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterMatchedPoints" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterMatchedPoints As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FilterMatchedPoints { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FilterMatchedPoints : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterMatchedPoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 클래스의 <c>Filter</c> 메서드에서 인수에 지정된 조건과 일치하는 경우 요소가 필터링되는지 여부를 결정하는 값을 가져오거나 설정합니다.</summary>
        <value><see langword="true" /> 지정 된 조건은 필터링 되 지점 일치 하는 경우 <see langword="false" /> 경우 조건에 일치 하지 않는 요소가 필터링 됩니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterSetEmptyPoints">
      <MemberSignature Language="C#" Value="public bool FilterSetEmptyPoints { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FilterSetEmptyPoints" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterSetEmptyPoints" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterSetEmptyPoints As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FilterSetEmptyPoints { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FilterSetEmptyPoints : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterSetEmptyPoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><c>Filter</c> 또는 <c>FilterTopN</c> 메서드에 의해 필터링되는 요소가 제거될지 아니면 빈 상태로 표시될지 여부를 나타내는 플래그를 가져오거나 설정합니다.</summary>
        <value><see langword="true" /> 필터링 된 요소가 빈 상태로 표시 될 경우 <see langword="false" /> 경우 제거 됩니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FilterTopN">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정 된 수의 요소를 제외 하 고 하나 이상의 계열에서 모든 데이터 요소를 필터링합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FilterTopN">
      <MemberSignature Language="C#" Value="public void FilterTopN (int pointCount, string inputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FilterTopN(int32 pointCount, string inputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilterTopN (pointCount As Integer, inputSeriesNames As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FilterTopN(int pointCount, System::String ^ inputSeriesNames);" />
      <MemberSignature Language="F#" Value="member this.FilterTopN : int * string -&gt; unit" Usage="dataManipulator.FilterTopN (pointCount, inputSeriesNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointCount" Type="System.Int32" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pointCount">필터링 작업 제거 되지 것입니다는 데이터 요소의 수입니다.</param>
        <param name="inputSeriesNames">이름 쉼표로 구분 된 목록을 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 필터링 합니다.</param>
        <summary>지정 된 수의 요소를 제외 하 고 하나 이상의 계열에서 모든 데이터 요소를 필터링합니다. 필터링 되지 않는 요소는 가장 큰 첫 번째 Y 값이 있는 첫 번째 계열에서 요소에 해당 합니다. <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 필터링 되는 개체를 사용 하 여 수정된 된 데이터를 저장 합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTopN">
      <MemberSignature Language="C#" Value="public void FilterTopN (int pointCount, System.Windows.Forms.DataVisualization.Charting.Series inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FilterTopN(int32 pointCount, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilterTopN (pointCount As Integer, inputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FilterTopN(int pointCount, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries);" />
      <MemberSignature Language="F#" Value="member this.FilterTopN : int * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataManipulator.FilterTopN (pointCount, inputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointCount" Type="System.Int32" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="pointCount">필터링 작업 제거 되지 것입니다는 데이터 요소의 수입니다.</param>
        <param name="inputSeries"><see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체를 필터링 할 수 있습니다.</param>
        <summary>계열에서 지정 된 수의 가장 큰 첫 번째 Y 값을 사용 하 여 요소를 제외한 모든 데이터 요소를 필터링합니다. <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 필터링 되는 개체 수정된 된 데이터 저장소를 사용 합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTopN">
      <MemberSignature Language="C#" Value="public void FilterTopN (int pointCount, string inputSeriesNames, string outputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FilterTopN(int32 pointCount, string inputSeriesNames, string outputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilterTopN (pointCount As Integer, inputSeriesNames As String, outputSeriesNames As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FilterTopN(int pointCount, System::String ^ inputSeriesNames, System::String ^ outputSeriesNames);" />
      <MemberSignature Language="F#" Value="member this.FilterTopN : int * string * string -&gt; unit" Usage="dataManipulator.FilterTopN (pointCount, inputSeriesNames, outputSeriesNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointCount" Type="System.Int32" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
        <Parameter Name="outputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pointCount">필터링 작업 제거 되지 것입니다는 데이터 요소의 수입니다.</param>
        <param name="inputSeriesNames">이름 쉼표로 구분 된 목록을 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 필터링 합니다.</param>
        <param name="outputSeriesNames">이름 쉼표로 구분 된 목록을 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 필터링된 된 데이터를 저장 하는 합니다. 출력 계열의 수가 입력 계열의 수와 일치 하는, 그렇지 않으면 예외가 throw 됩니다 있는지 확인 합니다.</param>
        <summary>지정 된 수의 요소를 제외 하 고 하나 이상의 계열에서 모든 데이터 요소를 필터링합니다. 필터링 되지 않는 요소는 가장 큰 첫 번째 Y 값이 있는 첫 번째 계열의 요소에 해당 합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTopN">
      <MemberSignature Language="C#" Value="public void FilterTopN (int pointCount, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FilterTopN(int32 pointCount, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilterTopN (pointCount As Integer, inputSeries As Series, outputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FilterTopN(int pointCount, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries);" />
      <MemberSignature Language="F#" Value="member this.FilterTopN : int * System.Windows.Forms.DataVisualization.Charting.Series * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataManipulator.FilterTopN (pointCount, inputSeries, outputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointCount" Type="System.Int32" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="pointCount">필터링 작업 제거 되지 것입니다는 데이터 요소의 수입니다.</param>
        <param name="inputSeries"><see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체를 필터링 할 수 있습니다.</param>
        <param name="outputSeries"><see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 필터링된 된 데이터를 저장 하는 개체입니다. 계열 존재 하지 않는 경우 예외가 throw 됩니다.</param>
        <summary>계열에서 지정 된 수의 가장 큰 첫 번째 Y 값을 사용 하 여 요소를 제외한 모든 데이터 요소를 필터링합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTopN">
      <MemberSignature Language="C#" Value="public void FilterTopN (int pointCount, string inputSeriesNames, string outputSeriesNames, string usingValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FilterTopN(int32 pointCount, string inputSeriesNames, string outputSeriesNames, string usingValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilterTopN (pointCount As Integer, inputSeriesNames As String, outputSeriesNames As String, usingValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FilterTopN(int pointCount, System::String ^ inputSeriesNames, System::String ^ outputSeriesNames, System::String ^ usingValue);" />
      <MemberSignature Language="F#" Value="member this.FilterTopN : int * string * string * string -&gt; unit" Usage="dataManipulator.FilterTopN (pointCount, inputSeriesNames, outputSeriesNames, usingValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointCount" Type="System.Int32" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
        <Parameter Name="outputSeriesNames" Type="System.String" />
        <Parameter Name="usingValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pointCount">필터링 작업 제거 되지 것입니다는 데이터 요소의 수입니다.</param>
        <param name="inputSeriesNames">이름 쉼표로 구분 된 목록을 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 필터링 합니다.</param>
        <param name="outputSeriesNames">이름 쉼표로 구분 된 목록을 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 필터링된 된 데이터를 저장 하는 합니다. 출력 계열의 수가 입력 계열의 수와 일치 하는, 그렇지 않으면 예외가 throw 됩니다 있는지 확인 합니다.</param>
        <param name="usingValue">데이터 점 필터링 규칙에 적용 되는 값입니다. X, Y, Y2, Y3, 및 등입니다.</param>
        <summary>지정 된 수의 요소를 제외 하 고 하나 이상의 계열에서 모든 데이터 요소를 필터링합니다. 필터링 되지 않는 요소에 가장 큰 값을 갖는 첫 번째 계열의 요소에 해당 합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTopN">
      <MemberSignature Language="C#" Value="public void FilterTopN (int pointCount, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries, string usingValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FilterTopN(int32 pointCount, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries, string usingValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilterTopN (pointCount As Integer, inputSeries As Series, outputSeries As Series, usingValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FilterTopN(int pointCount, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries, System::String ^ usingValue);" />
      <MemberSignature Language="F#" Value="member this.FilterTopN : int * System.Windows.Forms.DataVisualization.Charting.Series * System.Windows.Forms.DataVisualization.Charting.Series * string -&gt; unit" Usage="dataManipulator.FilterTopN (pointCount, inputSeries, outputSeries, usingValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointCount" Type="System.Int32" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="usingValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pointCount">필터링 작업 제거 되지 것입니다는 데이터 요소의 수입니다.</param>
        <param name="inputSeries"><see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체를 필터링 할 수 있습니다.</param>
        <param name="outputSeries"><see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 필터링된 된 데이터를 저장 하는 개체입니다. 계열 존재 하지 않는 경우 예외가 throw 됩니다.</param>
        <param name="usingValue">데이터 점 필터링 규칙에 적용 되는 값입니다. X, Y, Y2, Y3, 및 등입니다.</param>
        <summary>계열에서 지정 된 수의 가장 큰 값을 사용 하 여 요소를 제외한 모든 데이터 요소를 필터링합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTopN">
      <MemberSignature Language="C#" Value="public void FilterTopN (int pointCount, string inputSeriesNames, string outputSeriesNames, string usingValue, bool getTopValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FilterTopN(int32 pointCount, string inputSeriesNames, string outputSeriesNames, string usingValue, bool getTopValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilterTopN (pointCount As Integer, inputSeriesNames As String, outputSeriesNames As String, usingValue As String, getTopValues As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FilterTopN(int pointCount, System::String ^ inputSeriesNames, System::String ^ outputSeriesNames, System::String ^ usingValue, bool getTopValues);" />
      <MemberSignature Language="F#" Value="member this.FilterTopN : int * string * string * string * bool -&gt; unit" Usage="dataManipulator.FilterTopN (pointCount, inputSeriesNames, outputSeriesNames, usingValue, getTopValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointCount" Type="System.Int32" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
        <Parameter Name="outputSeriesNames" Type="System.String" />
        <Parameter Name="usingValue" Type="System.String" />
        <Parameter Name="getTopValues" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pointCount">필터링 작업 제거 되지 것입니다는 데이터 요소의 수입니다.</param>
        <param name="inputSeriesNames">이름 쉼표로 구분 된 목록을 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 필터링 합니다.</param>
        <param name="outputSeriesNames">이름 쉼표로 구분 된 목록을 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 필터링된 된 데이터를 저장 하는 합니다. 출력 계열의 수가 입력 계열의 수와 일치 하는, 그렇지 않으면 예외가 throw 됩니다 있는지 확인 합니다.</param>
        <param name="usingValue">데이터 점 필터링 규칙에 적용 되는 값입니다. X, Y, Y2, Y3, 및 등입니다.</param>
        <param name="getTopValues"><see langword="true" /> 가장 큰 값이 유지 되는 경우 <see langword="false" /> 가장 작은 값이 유지 됩니다.</param>
        <summary>지정 된 수의 요소를 제외 하 고 하나 이상의 계열에서 모든 데이터 요소를 필터링합니다. 필터링 되지 않는 요소는 가장 크거나 가장 작은 값을 갖는 첫 번째 입력된 계열에서 요소에 해당 합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTopN">
      <MemberSignature Language="C#" Value="public void FilterTopN (int pointCount, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries, string usingValue, bool getTopValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FilterTopN(int32 pointCount, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries, string usingValue, bool getTopValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilterTopN (pointCount As Integer, inputSeries As Series, outputSeries As Series, usingValue As String, getTopValues As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FilterTopN(int pointCount, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries, System::String ^ usingValue, bool getTopValues);" />
      <MemberSignature Language="F#" Value="member this.FilterTopN : int * System.Windows.Forms.DataVisualization.Charting.Series * System.Windows.Forms.DataVisualization.Charting.Series * string * bool -&gt; unit" Usage="dataManipulator.FilterTopN (pointCount, inputSeries, outputSeries, usingValue, getTopValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointCount" Type="System.Int32" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="usingValue" Type="System.String" />
        <Parameter Name="getTopValues" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pointCount">필터링 작업 제거 되지 것입니다는 데이터 요소의 수입니다.</param>
        <param name="inputSeries"><see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체를 필터링 할 수 있습니다.</param>
        <param name="outputSeries"><see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 필터링된 된 데이터를 저장 하는 개체입니다. 계열 존재 하지 않는 경우 예외가 throw 됩니다.</param>
        <param name="usingValue">데이터 점 필터링 규칙에 적용 되는 값입니다. X, Y, Y2, Y3, 및 등입니다.</param>
        <param name="getTopValues"><see langword="true" /> 가장 큰 값이 유지 되는 경우 <see langword="false" /> 가장 작은 값이 유지 됩니다.</param>
        <summary>계열에서 지정 된 수의 최소값이 나 최대값 값을 사용 하 여 요소를 제외한 모든 데이터 요소를 필터링합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Group">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>하나 이상의 수식을 사용 하 여 하나 이상의 계열에 대 한 그룹 데이터 요소입니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public void Group (string formula, double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, string inputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Group(string formula, float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, string inputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Group(System::String ^ formula, double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, System::String ^ inputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.Group : string * double * System.Windows.Forms.DataVisualization.Charting.IntervalType * string -&gt; unit" Usage="dataManipulator.Group (formula, interval, intervalType, inputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="inputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formula">그룹화 된 데이터를 계산 하는 데 사용할 하나 이상의 수식 쉼표로 구분 된 목록을 요소 값입니다.</param>
        <param name="interval">누락 된 데이터 요소에 대 한 확인 간격의 크기입니다.</param>
        <param name="intervalType">에 대 한 측정 단위는 <paramref name="interval" /> 매개 변수입니다.</param>
        <param name="inputSeriesName">이름 쉼표로 구분 된 목록을 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 그룹화 할 수 있습니다.</param>
        <summary>하나 이상의 수식을 사용 하 여 하나 이상의 계열에 대 한 그룹 데이터 요소입니다. 계열 원래 데이터의 선택이 취소 되며 새 데이터 요소를 저장 하는 데 사용 됩니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public void Group (string formula, double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, System.Windows.Forms.DataVisualization.Charting.Series inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Group(string formula, float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Group(System::String ^ formula, double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries);" />
      <MemberSignature Language="F#" Value="member this.Group : string * double * System.Windows.Forms.DataVisualization.Charting.IntervalType * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataManipulator.Group (formula, interval, intervalType, inputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formula">그룹화 된 데이터를 계산 하는 데 사용할 하나 이상의 수식 쉼표로 구분 된 목록을 요소 값입니다.</param>
        <param name="interval">누락 된 데이터 요소에 대 한 확인 간격의 크기입니다.</param>
        <param name="intervalType">에 대 한 측정 단위는 <paramref name="interval" /> 매개 변수입니다.</param>
        <param name="inputSeries"><see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 그룹화 되는 개체입니다.</param>
        <summary>하나 이상의 수식을 사용 하 여 계열의 데이터 요소를 그룹화 합니다. 그룹화 된 계열은 원래 데이터를 지우고 새 데이터 요소를 저장 하는 데 사용 합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public void Group (string formula, double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, string inputSeriesName, string outputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Group(string formula, float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, string inputSeriesName, string outputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Group(System::String ^ formula, double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, System::String ^ inputSeriesName, System::String ^ outputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.Group : string * double * System.Windows.Forms.DataVisualization.Charting.IntervalType * string * string -&gt; unit" Usage="dataManipulator.Group (formula, interval, intervalType, inputSeriesName, outputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="inputSeriesName" Type="System.String" />
        <Parameter Name="outputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formula">그룹화 된 데이터를 계산 하는 데 사용할 하나 이상의 수식 쉼표로 구분 된 목록을 요소 값입니다.</param>
        <param name="interval">누락 된 데이터 요소에 대 한 확인 간격의 크기입니다.</param>
        <param name="intervalType">에 대 한 측정 단위는 <paramref name="interval" /> 매개 변수입니다.</param>
        <param name="inputSeriesName">이름 쉼표로 구분 된 목록을 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 그룹화 할 수 있습니다.</param>
        <param name="outputSeriesName">이름의 쉼표로 구분 된 목록을 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 을 그룹화 된 데이터 요소를 저장 합니다. 계열 존재 하지 않는 경우 만들어집니다. 파일이 먼저 지워집니다 모든 데이터의 그룹화 된 데이터 요소를 저장 하기 전에 합니다. 출력 계열의 수가 입력 계열의 수와 같아야 또는 예외가 throw 됩니다.</param>
        <summary>하나 이상의 수식을 사용 하 여 하나 이상의 계열에 대 한 그룹 데이터 요소입니다. 출력 계열을 사용 하 여 그룹화 된 데이터 요소를 저장 합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public void Group (string formula, double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Group(string formula, float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Group(System::String ^ formula, double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries);" />
      <MemberSignature Language="F#" Value="member this.Group : string * double * System.Windows.Forms.DataVisualization.Charting.IntervalType * System.Windows.Forms.DataVisualization.Charting.Series * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataManipulator.Group (formula, interval, intervalType, inputSeries, outputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formula">그룹화 된 데이터를 계산 하는 데 사용할 하나 이상의 수식 쉼표로 구분 된 목록을 요소 값입니다.</param>
        <param name="interval">누락 된 데이터 요소에 대 한 확인 간격의 크기입니다.</param>
        <param name="intervalType">에 대 한 측정 단위는 <paramref name="interval" /> 매개 변수입니다.</param>
        <param name="inputSeries"><see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 그룹화 되는 개체입니다.</param>
        <param name="outputSeries"><see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 는 그룹화 작업에서 만든 새 데이터 요소를 저장 합니다. 존재 하지 않는 경우 예외가 throw 됩니다.</param>
        <summary>하나 이상의 수식을 사용 하 여 계열의 데이터 요소를 그룹화 합니다. 출력 계열을 사용 하 여 그룹화 된 데이터 요소를 저장 합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public void Group (string formula, double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, double intervalOffset, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, string inputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Group(string formula, float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, float64 intervalOffset, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, string inputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Group(System::String ^ formula, double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, double intervalOffset, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalOffsetType, System::String ^ inputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.Group : string * double * System.Windows.Forms.DataVisualization.Charting.IntervalType * double * System.Windows.Forms.DataVisualization.Charting.IntervalType * string -&gt; unit" Usage="dataManipulator.Group (formula, interval, intervalType, intervalOffset, intervalOffsetType, inputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="intervalOffset" Type="System.Double" />
        <Parameter Name="intervalOffsetType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="inputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formula">그룹화 된 데이터를 계산 하는 데 사용할 하나 이상의 수식 쉼표로 구분 된 목록을 요소 값입니다.</param>
        <param name="interval">누락 된 데이터 요소에 대 한 확인 간격의 크기입니다.</param>
        <param name="intervalType">에 대 한 측정 단위는 <paramref name="interval" /> 매개 변수입니다.</param>
        <param name="intervalOffset">간격 오프셋 크기입니다.</param>
        <param name="intervalOffsetType">간격 오프셋에 대 한 측정 단위입니다.</param>
        <param name="inputSeriesName">이름 쉼표로 구분 된 목록을 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 그룹화 할 수 있습니다.</param>
        <summary>하나 이상의 수식을 사용 하 여 하나 이상의 계열에 대 한 그룹 데이터 요소입니다. 계열 원래 데이터의 선택이 취소 되며 새 데이터 요소를 저장 하는 데 사용 됩니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public void Group (string formula, double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, double intervalOffset, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, System.Windows.Forms.DataVisualization.Charting.Series inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Group(string formula, float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, float64 intervalOffset, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Group(System::String ^ formula, double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, double intervalOffset, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalOffsetType, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries);" />
      <MemberSignature Language="F#" Value="member this.Group : string * double * System.Windows.Forms.DataVisualization.Charting.IntervalType * double * System.Windows.Forms.DataVisualization.Charting.IntervalType * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataManipulator.Group (formula, interval, intervalType, intervalOffset, intervalOffsetType, inputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="intervalOffset" Type="System.Double" />
        <Parameter Name="intervalOffsetType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formula">그룹화 된 데이터를 계산 하는 데 사용할 하나 이상의 수식 쉼표로 구분 된 목록을 요소 값입니다.</param>
        <param name="interval">누락 된 데이터 요소에 대 한 확인 간격의 크기입니다.</param>
        <param name="intervalType">에 대 한 측정 단위는 <paramref name="interval" /> 매개 변수입니다.</param>
        <param name="intervalOffset">간격 오프셋 크기입니다.</param>
        <param name="intervalOffsetType">간격 오프셋에 대 한 측정 단위입니다.</param>
        <param name="inputSeries"><see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 그룹화 되는 개체입니다.</param>
        <summary>하나 이상의 수식을 사용 하 여 계열의 데이터 요소를 그룹화 합니다. 그룹화 된 계열은 원래 데이터를 지우고 새 데이터 요소를 저장 하는 데 사용 합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public void Group (string formula, double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, double intervalOffset, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, string inputSeriesName, string outputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Group(string formula, float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, float64 intervalOffset, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, string inputSeriesName, string outputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Group(System::String ^ formula, double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, double intervalOffset, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalOffsetType, System::String ^ inputSeriesName, System::String ^ outputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.Group : string * double * System.Windows.Forms.DataVisualization.Charting.IntervalType * double * System.Windows.Forms.DataVisualization.Charting.IntervalType * string * string -&gt; unit" Usage="dataManipulator.Group (formula, interval, intervalType, intervalOffset, intervalOffsetType, inputSeriesName, outputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="intervalOffset" Type="System.Double" />
        <Parameter Name="intervalOffsetType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="inputSeriesName" Type="System.String" />
        <Parameter Name="outputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formula">그룹화 된 데이터를 계산 하는 데 사용할 하나 이상의 수식 쉼표로 구분 된 목록을 요소 값입니다.</param>
        <param name="interval">누락 된 데이터 요소에 대 한 확인 간격의 크기입니다.</param>
        <param name="intervalType">에 대 한 측정 단위는 <paramref name="interval" /> 매개 변수입니다.</param>
        <param name="intervalOffset">간격 오프셋 크기입니다.</param>
        <param name="intervalOffsetType">간격 오프셋에 대 한 측정 단위입니다.</param>
        <param name="inputSeriesName">이름 쉼표로 구분 된 목록을 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 그룹화 할 수 있습니다.</param>
        <param name="outputSeriesName">이름의 쉼표로 구분 된 목록을 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 을 그룹화 된 데이터 요소를 저장 합니다. 계열 존재 하지 않는 경우 만들어집니다. 파일이 먼저 지워집니다 모든 데이터의 그룹화 된 데이터 요소를 저장 하기 전에 합니다. 출력 계열의 수가 입력 계열의 수와 같아야 또는 예외가 throw 됩니다.</param>
        <summary>하나 이상의 수식을 사용 하 여 하나 이상의 계열에 대 한 그룹 데이터 요소입니다. 출력 계열을 사용 하 여 그룹화 된 데이터 요소를 저장 하 고 간격에 대 한 오프셋을 사용할 수 있습니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public void Group (string formula, double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, double intervalOffset, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Group(string formula, float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, float64 intervalOffset, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Group(System::String ^ formula, double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, double intervalOffset, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalOffsetType, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries);" />
      <MemberSignature Language="F#" Value="member this.Group : string * double * System.Windows.Forms.DataVisualization.Charting.IntervalType * double * System.Windows.Forms.DataVisualization.Charting.IntervalType * System.Windows.Forms.DataVisualization.Charting.Series * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataManipulator.Group (formula, interval, intervalType, intervalOffset, intervalOffsetType, inputSeries, outputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="intervalOffset" Type="System.Double" />
        <Parameter Name="intervalOffsetType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formula">그룹화 된 데이터를 계산 하는 데 사용할 하나 이상의 수식 쉼표로 구분 된 목록을 요소 값입니다.</param>
        <param name="interval">누락 된 데이터 요소에 대 한 확인 간격의 크기입니다.</param>
        <param name="intervalType">에 대 한 측정 단위는 <paramref name="interval" /> 매개 변수입니다.</param>
        <param name="intervalOffset">간격 오프셋 크기입니다.</param>
        <param name="intervalOffsetType">간격 오프셋에 대 한 측정 단위입니다.</param>
        <param name="inputSeries"><see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 그룹화 되는 개체입니다.</param>
        <param name="outputSeries"><see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 는 그룹화 작업에서 만든 새 데이터 요소를 저장 합니다. 존재 하지 않는 경우 예외가 throw 됩니다.</param>
        <summary>하나 이상의 수식을 사용 하 여 계열의 데이터 요소를 그룹화 합니다. 출력 계열을 사용 하 여 그룹화 된 데이터 요소를 저장 하 고 간격에 대 한 오프셋을 사용할 수 있습니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GroupByAxisLabel">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>하나 이상의 수식을 사용 하 여 축 레이블 별로 하나 이상의 계열의 데이터 요소를 그룹화 합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GroupByAxisLabel">
      <MemberSignature Language="C#" Value="public void GroupByAxisLabel (string formula, string inputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GroupByAxisLabel(string formula, string inputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.GroupByAxisLabel(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GroupByAxisLabel (formula As String, inputSeriesName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GroupByAxisLabel(System::String ^ formula, System::String ^ inputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.GroupByAxisLabel : string * string -&gt; unit" Usage="dataManipulator.GroupByAxisLabel (formula, inputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="inputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formula">그룹화 된 데이터를 계산 하는 데 사용할 하나 이상의 수식 쉼표로 구분 된 목록을 요소 값입니다.</param>
        <param name="inputSeriesName">입력의 이름 쉼표로 구분 된 목록을 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />합니다.</param>
        <summary>하나 이상의 수식을 사용 하 여 축 레이블 별로 하나 이상의 계열의 데이터 요소를 그룹화 합니다. 원래 데이터 요소 값을 지우고 계열의 각 다음 해당 새 그룹화 된 데이터 요소를 저장 합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupByAxisLabel">
      <MemberSignature Language="C#" Value="public void GroupByAxisLabel (string formula, System.Windows.Forms.DataVisualization.Charting.Series inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GroupByAxisLabel(string formula, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.GroupByAxisLabel(System.String,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GroupByAxisLabel (formula As String, inputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GroupByAxisLabel(System::String ^ formula, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries);" />
      <MemberSignature Language="F#" Value="member this.GroupByAxisLabel : string * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataManipulator.GroupByAxisLabel (formula, inputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formula">그룹화 된 데이터를 계산 하는 데 사용할 하나 이상의 수식 쉼표로 구분 된 목록을 요소 값입니다.</param>
        <param name="inputSeries">입력 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />합니다.</param>
        <summary>하나 이상의 수식을 사용 하 여 축 레이블 별로 계열의 데이터 요소를 그룹화 합니다. 원래 데이터 요소 값을 지우고 계열에는 다음 새 그룹화 된 데이터 요소를 저장 합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupByAxisLabel">
      <MemberSignature Language="C#" Value="public void GroupByAxisLabel (string formula, string inputSeriesName, string outputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GroupByAxisLabel(string formula, string inputSeriesName, string outputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.GroupByAxisLabel(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GroupByAxisLabel (formula As String, inputSeriesName As String, outputSeriesName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GroupByAxisLabel(System::String ^ formula, System::String ^ inputSeriesName, System::String ^ outputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.GroupByAxisLabel : string * string * string -&gt; unit" Usage="dataManipulator.GroupByAxisLabel (formula, inputSeriesName, outputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="inputSeriesName" Type="System.String" />
        <Parameter Name="outputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formula">그룹화 된 데이터를 계산 하는 데 사용할 하나 이상의 수식 쉼표로 구분 된 목록을 요소 값입니다.</param>
        <param name="inputSeriesName">입력의 이름 쉼표로 구분 된 목록을 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />합니다.</param>
        <param name="outputSeriesName">이름의 쉼표로 구분 된 목록을 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 을 그룹화 된 데이터 요소를 저장 합니다. 계열 존재 하지 않는 경우 만들어집니다. 파일이 먼저 지워집니다 모든 데이터의 그룹화 된 데이터 요소를 저장 하기 전에 합니다. 출력 계열의 수가 입력 계열의 수와 같아야 또는 예외가 throw 됩니다.</param>
        <summary>하나 이상의 수식을 사용 하 여 축 레이블 별로 하나 이상의 계열의 데이터 요소를 그룹화 합니다. 출력 계열을 사용 하 여 그룹화 된 데이터 요소를 저장 합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupByAxisLabel">
      <MemberSignature Language="C#" Value="public void GroupByAxisLabel (string formula, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GroupByAxisLabel(string formula, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.GroupByAxisLabel(System.String,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GroupByAxisLabel (formula As String, inputSeries As Series, outputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GroupByAxisLabel(System::String ^ formula, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries);" />
      <MemberSignature Language="F#" Value="member this.GroupByAxisLabel : string * System.Windows.Forms.DataVisualization.Charting.Series * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataManipulator.GroupByAxisLabel (formula, inputSeries, outputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formula">그룹화 된 데이터를 계산 하는 데 사용할 하나 이상의 수식 쉼표로 구분 된 목록을 요소 값입니다.</param>
        <param name="inputSeries">입력 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 그룹화 할 수 있습니다.</param>
        <param name="outputSeries"><see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 는 그룹화 작업에서 만든 새 데이터 요소를 저장 합니다. 존재 하지 않는 경우 예외가 throw 됩니다.</param>
        <summary>하나 이상의 수식을 사용 하 여 축 레이블 별로 계열의 데이터 요소를 그룹화 합니다. 출력 계열을 사용 하 여 그룹화 된 데이터 요소를 저장 합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InsertEmptyPoints">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>계열 또는 계열 컬렉션에서 누락 된 데이터 요소를 빈 요소로 바꿉니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InsertEmptyPoints">
      <MemberSignature Language="C#" Value="public void InsertEmptyPoints (double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, string seriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEmptyPoints(float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, string seriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.InsertEmptyPoints(System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEmptyPoints(double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, System::String ^ seriesName);" />
      <MemberSignature Language="F#" Value="member this.InsertEmptyPoints : double * System.Windows.Forms.DataVisualization.Charting.IntervalType * string -&gt; unit" Usage="dataManipulator.InsertEmptyPoints (interval, intervalType, seriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="seriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="interval">누락 된 데이터 요소에 대 한 확인 간격의 크기입니다.</param>
        <param name="intervalType">에 대 한 측정 단위는 <paramref name="interval" /> 매개 변수입니다.</param>
        <param name="seriesName">이름 쉼표로 구분 된 목록을 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 검사할 합니다.</param>
        <summary>하나 이상의 계열에서 누락 된 데이터 요소를 빈 요소로 바꿉니다. 각 계열에 의해 결정 됩니다 지정된 된 간격에 대 한 확인란이 선택 되어는 <paramref name="interval" /> 고 <paramref name="intervalType" /> 인수입니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertEmptyPoints">
      <MemberSignature Language="C#" Value="public void InsertEmptyPoints (double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, System.Windows.Forms.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEmptyPoints(float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, class System.Windows.Forms.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.InsertEmptyPoints(System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEmptyPoints(double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, System::Windows::Forms::DataVisualization::Charting::Series ^ series);" />
      <MemberSignature Language="F#" Value="member this.InsertEmptyPoints : double * System.Windows.Forms.DataVisualization.Charting.IntervalType * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataManipulator.InsertEmptyPoints (interval, intervalType, series)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="series" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="interval">누락 된 데이터 요소에 대 한 확인 간격의 크기입니다.</param>
        <param name="intervalType">에 대 한 측정 단위는 <paramref name="interval" /> 매개 변수입니다.</param>
        <param name="series"><see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 검사는 개체입니다.</param>
        <summary>계열에서 누락 된 데이터 요소를 빈 요소로 바꿉니다. 계열에 의해 결정 됩니다 지정된 된 간격에 대 한 확인란이 선택 되어는 <paramref name="interval" /> 및 <paramref name="intervalType" /> 인수입니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertEmptyPoints">
      <MemberSignature Language="C#" Value="public void InsertEmptyPoints (double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, double intervalOffset, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, string seriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEmptyPoints(float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, float64 intervalOffset, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, string seriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.InsertEmptyPoints(System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEmptyPoints(double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, double intervalOffset, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalOffsetType, System::String ^ seriesName);" />
      <MemberSignature Language="F#" Value="member this.InsertEmptyPoints : double * System.Windows.Forms.DataVisualization.Charting.IntervalType * double * System.Windows.Forms.DataVisualization.Charting.IntervalType * string -&gt; unit" Usage="dataManipulator.InsertEmptyPoints (interval, intervalType, intervalOffset, intervalOffsetType, seriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="intervalOffset" Type="System.Double" />
        <Parameter Name="intervalOffsetType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="seriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="interval">누락 된 데이터 요소에 대 한 확인 간격의 크기입니다.</param>
        <param name="intervalType">에 대 한 측정 단위는 <paramref name="interval" /> 매개 변수입니다.</param>
        <param name="intervalOffset">간격 오프셋 크기입니다.</param>
        <param name="intervalOffsetType">간격 오프셋에 대 한 측정 단위입니다.</param>
        <param name="seriesName">이름 쉼표로 구분 된 목록을 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 검사할 합니다.</param>
        <summary>하나 이상의 계열에서 누락 된 데이터 요소를 빈 요소로 바꿉니다. 각 계열에 의해 결정 됩니다 지정된 된 간격에 대 한 확인란이 선택 되어는 <paramref name="interval" />, <paramref name="intervalOffset" />, <paramref name="intervalOffsetType" /> 고 <paramref name="intervalType" /> 인수.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertEmptyPoints">
      <MemberSignature Language="C#" Value="public void InsertEmptyPoints (double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, double intervalOffset, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, System.Windows.Forms.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEmptyPoints(float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, float64 intervalOffset, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, class System.Windows.Forms.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.InsertEmptyPoints(System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEmptyPoints(double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, double intervalOffset, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalOffsetType, System::Windows::Forms::DataVisualization::Charting::Series ^ series);" />
      <MemberSignature Language="F#" Value="member this.InsertEmptyPoints : double * System.Windows.Forms.DataVisualization.Charting.IntervalType * double * System.Windows.Forms.DataVisualization.Charting.IntervalType * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataManipulator.InsertEmptyPoints (interval, intervalType, intervalOffset, intervalOffsetType, series)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="intervalOffset" Type="System.Double" />
        <Parameter Name="intervalOffsetType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="series" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="interval">누락 된 데이터 요소에 대 한 확인 간격의 크기입니다.</param>
        <param name="intervalType">에 대 한 측정 단위는 <paramref name="interval" /> 매개 변수입니다.</param>
        <param name="intervalOffset">간격 오프셋 크기입니다.</param>
        <param name="intervalOffsetType">간격 오프셋에 대 한 측정 단위입니다.</param>
        <param name="series"><see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 빈 요소를 삽입 하는 개체입니다.</param>
        <summary>계열에서 누락 된 데이터 요소를 빈 요소로 바꿉니다. 계열에 의해 결정 됩니다 지정된 된 간격에 대 한 확인란이 선택 되어는 <paramref name="interval" />, <paramref name="intervalOffset" />를 <paramref name="intervalOffsetType" /> 및 <paramref name="intervalType" /> 인수입니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertEmptyPoints">
      <MemberSignature Language="C#" Value="public void InsertEmptyPoints (double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, double intervalOffset, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, double fromXValue, double toXValue, string seriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEmptyPoints(float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, float64 intervalOffset, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, float64 fromXValue, float64 toXValue, string seriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.InsertEmptyPoints(System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Double,System.Double,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEmptyPoints(double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, double intervalOffset, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalOffsetType, double fromXValue, double toXValue, System::String ^ seriesName);" />
      <MemberSignature Language="F#" Value="member this.InsertEmptyPoints : double * System.Windows.Forms.DataVisualization.Charting.IntervalType * double * System.Windows.Forms.DataVisualization.Charting.IntervalType * double * double * string -&gt; unit" Usage="dataManipulator.InsertEmptyPoints (interval, intervalType, intervalOffset, intervalOffsetType, fromXValue, toXValue, seriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="intervalOffset" Type="System.Double" />
        <Parameter Name="intervalOffsetType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="fromXValue" Type="System.Double" />
        <Parameter Name="toXValue" Type="System.Double" />
        <Parameter Name="seriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="interval">누락 된 데이터 요소에 대 한 확인 간격의 크기입니다.</param>
        <param name="intervalType">에 대 한 측정 단위는 <paramref name="interval" /> 매개 변수입니다.</param>
        <param name="intervalOffset">간격 오프셋 크기입니다.</param>
        <param name="intervalOffsetType">간격 오프셋에 대 한 측정 단위입니다.</param>
        <param name="fromXValue">검사할 계열 범위의 시작점입니다. 데이터 요소의 X 값을 사용합니다.</param>
        <param name="toXValue">검사할 계열 범위의 끝점입니다. 데이터 요소의 X 값을 사용합니다.</param>
        <param name="seriesName">이름 쉼표로 구분 된 목록을 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 검사할 합니다.</param>
        <summary>하나 이상의 계열에서 누락 된 데이터 요소를 빈 요소로 바꿉니다. 각 계열에 의해 결정 됩니다 지정된 된 간격에 대 한 확인란이 선택 되어는 <paramref name="interval" />, <paramref name="intervalOffset" />, <paramref name="intervalOffsetType" /> 고 <paramref name="intervalType" /> 인수. 체크 인 된 계열 범위의 도달한 합니다 <paramref name="toXValue" /> 및 <paramref name="fromXValue" /> 인수.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertEmptyPoints">
      <MemberSignature Language="C#" Value="public void InsertEmptyPoints (double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, double intervalOffset, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, double fromXValue, double toXValue, System.Windows.Forms.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEmptyPoints(float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, float64 intervalOffset, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, float64 fromXValue, float64 toXValue, class System.Windows.Forms.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.InsertEmptyPoints(System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Double,System.Double,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEmptyPoints(double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, double intervalOffset, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalOffsetType, double fromXValue, double toXValue, System::Windows::Forms::DataVisualization::Charting::Series ^ series);" />
      <MemberSignature Language="F#" Value="member this.InsertEmptyPoints : double * System.Windows.Forms.DataVisualization.Charting.IntervalType * double * System.Windows.Forms.DataVisualization.Charting.IntervalType * double * double * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataManipulator.InsertEmptyPoints (interval, intervalType, intervalOffset, intervalOffsetType, fromXValue, toXValue, series)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="intervalOffset" Type="System.Double" />
        <Parameter Name="intervalOffsetType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="fromXValue" Type="System.Double" />
        <Parameter Name="toXValue" Type="System.Double" />
        <Parameter Name="series" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="interval">누락 된 데이터 요소에 대 한 확인 간격의 크기입니다.</param>
        <param name="intervalType">에 대 한 측정 단위는 <paramref name="interval" /> 매개 변수입니다.</param>
        <param name="intervalOffset">간격 오프셋 크기입니다.</param>
        <param name="intervalOffsetType">간격 오프셋에 대 한 측정 단위입니다.</param>
        <param name="fromXValue">검사할 계열 범위의 시작점입니다. 데이터 요소의 X 값을 사용합니다.</param>
        <param name="toXValue">검사할 계열 범위의 끝점입니다. 데이터 요소의 X 값을 사용합니다.</param>
        <param name="series"><see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 를 빈 요소를 삽입 합니다.</param>
        <summary>계열에서 누락 된 데이터 요소를 빈 요소로 바꿉니다. 계열에 의해 결정 됩니다 지정된 된 간격에 대 한 확인란이 선택 되어는 <paramref name="interval" />, <paramref name="intervalOffset" />를 <paramref name="intervalOffsetType" /> 및 <paramref name="intervalType" /> 인수입니다. 체크 인 된 계열 범위의 도달한 합니다 <paramref name="toXValue" /> 및 <paramref name="fromXValue" /> 인수.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sort">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>하나 이상의 계열의 데이터 요소에 대해 사용자 지정 정렬을 수행합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Collections.Generic.IComparer&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt; comparer, string seriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(class System.Collections.Generic.IComparer`1&lt;class System.Windows.Forms.DataVisualization.Charting.DataPoint&gt; comparer, string seriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Sort(System.Collections.Generic.IComparer{System.Windows.Forms.DataVisualization.Charting.DataPoint},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (comparer As IComparer(Of DataPoint), seriesName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Collections::Generic::IComparer&lt;System::Windows::Forms::DataVisualization::Charting::DataPoint ^&gt; ^ comparer, System::String ^ seriesName);" />
      <MemberSignature Language="F#" Value="member this.Sort : System.Collections.Generic.IComparer&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt; * string -&gt; unit" Usage="dataManipulator.Sort (comparer, seriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt;" />
        <Parameter Name="seriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="comparer">구현 하는 개체는 <see cref="T:System.Collections.IComparer" /> 인터페이스 및 사용자 지정 정렬 논리를 제공 합니다.</param>
        <param name="seriesName">이름 쉼표로 구분 된 목록을 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 정렬 되도록 합니다.</param>
        <summary>하나 이상의 계열의 데이터 요소에 대해 사용자 지정 정렬을 수행합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 하나 이상의 계열;에서 데이터 요소에 대해 사용자 지정 정렬을 수행합니다 정의한 정렬 논리를 `comparer` 매개 변수입니다. 재정의 하 고 구현 합니다 <xref:System.Collections.IComparer.Compare%2A> 메서드를 <xref:System.Collections.IComparer> 인터페이스에서 comparison(s)를 수행 하 고, 돌아와서 `true` 또는 `false`. 정렬 순서는 반환 값으로 결정 됩니다.  
  
 참고는 여러 계열 정렬 하는 경우 계열 정렬 되어야 합니다, 그렇지 않으면 예외가 throw 됩니다.  
  
 두 개체의 매개 변수를 <xref:System.Collections.IComparer.Compare%2A> 메서드 형식의 여야 <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint>합니다.  
  
> [!IMPORTANT]
>  자신이 속한 계열에 관계 없이 모든 데이터 요소를 첫 번째 계열의; 기준으로 정렬 첫 번째 계열의 데이터 요소 위치 변경 되 면 해당 계열의 모든 요소에는 다른도 변경 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Collections.Generic.IComparer&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt; comparer, System.Windows.Forms.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(class System.Collections.Generic.IComparer`1&lt;class System.Windows.Forms.DataVisualization.Charting.DataPoint&gt; comparer, class System.Windows.Forms.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Sort(System.Collections.Generic.IComparer{System.Windows.Forms.DataVisualization.Charting.DataPoint},System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Collections::Generic::IComparer&lt;System::Windows::Forms::DataVisualization::Charting::DataPoint ^&gt; ^ comparer, System::Windows::Forms::DataVisualization::Charting::Series ^ series);" />
      <MemberSignature Language="F#" Value="member this.Sort : System.Collections.Generic.IComparer&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt; * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataManipulator.Sort (comparer, series)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt;" />
        <Parameter Name="series" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="comparer">구현 하는 개체는 <see cref="T:System.Collections.IComparer" /> 인터페이스 및 사용자 지정 정렬 논리를 제공 합니다.</param>
        <param name="series"><see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 정렬할 개체입니다.</param>
        <summary>계열의 데이터 요소에 대해 사용자 지정 정렬을 수행합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는; 계열의 데이터 요소에 대해 사용자 지정 정렬을 수행합니다 정의한 정렬 논리를 `comparer` 매개 변수입니다. 재정의 하 고 구현 합니다 <xref:System.Collections.IComparer.Compare%2A> 메서드를 <xref:System.Collections.IComparer> 인터페이스에서 comparison(s)를 수행 하 고, 돌아와서 `true` 또는 `false`. 정렬 순서는 반환 값으로 결정 됩니다.  
  
 두 개체의 매개 변수를 <xref:System.Collections.IComparer.Compare%2A> 메서드 형식의 여야 <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint>합니다.  
  
 함수 호출당 둘 이상의 계열에 대 한 사용자 지정 정렬을 수행 하려면 사용 된 <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Sort%2A> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Windows.Forms.DataVisualization.Charting.PointSortOrder pointSortOrder, string seriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(valuetype System.Windows.Forms.DataVisualization.Charting.PointSortOrder pointSortOrder, string seriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Sort(System.Windows.Forms.DataVisualization.Charting.PointSortOrder,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Windows::Forms::DataVisualization::Charting::PointSortOrder pointSortOrder, System::String ^ seriesName);" />
      <MemberSignature Language="F#" Value="member this.Sort : System.Windows.Forms.DataVisualization.Charting.PointSortOrder * string -&gt; unit" Usage="dataManipulator.Sort (pointSortOrder, seriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointSortOrder" Type="System.Windows.Forms.DataVisualization.Charting.PointSortOrder" />
        <Parameter Name="seriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pointSortOrder"><see cref="T:System.Windows.Forms.DataVisualization.Charting.PointSortOrder" /> 정렬이 오름차순 인지 내림차순을 결정 하는 열거형 값입니다.</param>
        <param name="seriesName">이름 쉼표로 구분 된 목록을 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 정렬 되도록 합니다.</param>
        <summary>지정된 된 순서를 사용 하 여 하나 이상의 계열의 데이터 요소에 대해 정렬을 수행 합니다. 각 데이터 요소의 첫 번째 Y 값을 기준으로 하는 정렬</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Windows.Forms.DataVisualization.Charting.PointSortOrder pointSortOrder, System.Windows.Forms.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(valuetype System.Windows.Forms.DataVisualization.Charting.PointSortOrder pointSortOrder, class System.Windows.Forms.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Sort(System.Windows.Forms.DataVisualization.Charting.PointSortOrder,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Windows::Forms::DataVisualization::Charting::PointSortOrder pointSortOrder, System::Windows::Forms::DataVisualization::Charting::Series ^ series);" />
      <MemberSignature Language="F#" Value="member this.Sort : System.Windows.Forms.DataVisualization.Charting.PointSortOrder * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataManipulator.Sort (pointSortOrder, series)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointSortOrder" Type="System.Windows.Forms.DataVisualization.Charting.PointSortOrder" />
        <Parameter Name="series" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="pointSortOrder"><see cref="T:System.Windows.Forms.DataVisualization.Charting.PointSortOrder" /> 정렬이 오름차순 인지 내림차순을 결정 하는 열거형 값입니다.</param>
        <param name="series"><see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 정렬할 개체입니다.</param>
        <summary>지정된 된 순서를 사용 하 여 계열의 데이터 요소에 대해 정렬을 수행 합니다. 각 데이터 요소의 첫 번째 Y 값을 기준으로 하는 정렬</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Windows.Forms.DataVisualization.Charting.PointSortOrder pointSortOrder, string sortBy, string seriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(valuetype System.Windows.Forms.DataVisualization.Charting.PointSortOrder pointSortOrder, string sortBy, string seriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Sort(System.Windows.Forms.DataVisualization.Charting.PointSortOrder,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Windows::Forms::DataVisualization::Charting::PointSortOrder pointSortOrder, System::String ^ sortBy, System::String ^ seriesName);" />
      <MemberSignature Language="F#" Value="member this.Sort : System.Windows.Forms.DataVisualization.Charting.PointSortOrder * string * string -&gt; unit" Usage="dataManipulator.Sort (pointSortOrder, sortBy, seriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointSortOrder" Type="System.Windows.Forms.DataVisualization.Charting.PointSortOrder" />
        <Parameter Name="sortBy" Type="System.String" />
        <Parameter Name="seriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pointSortOrder"><see cref="T:System.Windows.Forms.DataVisualization.Charting.PointSortOrder" /> 정렬이 오름차순 인지 내림차순을 결정 하는 열거형 값입니다.</param>
        <param name="sortBy"><see langword="string" /> 정렬할 데이터 요소 값을 나타내는 값입니다. 가능한 값은: "X", "Y", "Y2", "Y3", "AxisLabel" 등입니다.</param>
        <param name="seriesName">이름 쉼표로 구분 된 목록을 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 정렬 되도록 합니다.</param>
        <summary>지정된 된 순서를 사용 하 여 하나 이상의 계열의 데이터 요소에 대해 정렬을 수행 합니다. 정렬 모든 사용 가능한 데이터 요소 값에 기반 할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 오름차순 수행 하거나 데이터에 대해 내림차순 정렬 계열에서 가리키고에 설정 된 값을 기반으로 하는 `sortBy` 같은 매개 변수 "X", "AxisLabel", "Y", "Y1", 및 등입니다.  
  
 참고는 여러 계열 정렬 하는 경우 계열 정렬 되어야 합니다, 그렇지 않으면 예외가 throw 됩니다.  
  
> [!IMPORTANT]
>  지정 된 모든 계열이 정렬 될 첫 번째에서 Y 값에 나열 된 계열의; 즉, 자신이 속한 계열에 관계 없이 모든 데이터 요소는 첫 번째 계열을 기준으로 정렬 됩니다.  
  
 사용자 지정 정렬 루틴을 사용 하 여 요소를 정렬 하려면 다른이 오버 로드 된 메서드 정의 사용 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Windows.Forms.DataVisualization.Charting.PointSortOrder pointSortOrder, string sortBy, System.Windows.Forms.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(valuetype System.Windows.Forms.DataVisualization.Charting.PointSortOrder pointSortOrder, string sortBy, class System.Windows.Forms.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Sort(System.Windows.Forms.DataVisualization.Charting.PointSortOrder,System.String,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Windows::Forms::DataVisualization::Charting::PointSortOrder pointSortOrder, System::String ^ sortBy, System::Windows::Forms::DataVisualization::Charting::Series ^ series);" />
      <MemberSignature Language="F#" Value="member this.Sort : System.Windows.Forms.DataVisualization.Charting.PointSortOrder * string * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataManipulator.Sort (pointSortOrder, sortBy, series)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointSortOrder" Type="System.Windows.Forms.DataVisualization.Charting.PointSortOrder" />
        <Parameter Name="sortBy" Type="System.String" />
        <Parameter Name="series" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="pointSortOrder"><see cref="T:System.Windows.Forms.DataVisualization.Charting.PointSortOrder" /> 정렬이 오름차순 인지 내림차순을 결정 하는 열거형 값</param>
        <param name="sortBy"><see langword="string" /> 정렬할 데이터 요소 값을 나타내는 값입니다. 가능한 값은: "X", "Y", "Y2", "Y3", "AxisLabel" 등입니다.</param>
        <param name="series"><see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 정렬할 개체입니다.</param>
        <summary>지정된 된 순서를 사용 하 여 계열의 데이터 요소에 대해 정렬을 수행 합니다. 정렬 모든 사용 가능한 데이터 요소 값에 기반 할 수 있습니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>