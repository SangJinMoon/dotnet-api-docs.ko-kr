<Type Name="DataManipulator" FullName="System.Windows.Forms.DataVisualization.Charting.DataManipulator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1c378c774225e3c884f027f37dbda3d4ad8df13a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30630827" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataManipulator : System.Windows.Forms.DataVisualization.Charting.DataFormula" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataManipulator extends System.Windows.Forms.DataVisualization.Charting.DataFormula" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.DataManipulator" />
  <TypeSignature Language="VB.NET" Value="Public Class DataManipulator&#xA;Inherits DataFormula" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataManipulator : System::Windows::Forms::DataVisualization::Charting::DataFormula" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataVisualization.Charting.DataFormula</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>런타임에 데이터 조작 작업을 수행하는 메서드를 제공합니다. 이 클래스는 루트 <see cref="P:System.Windows.Forms.DataVisualization.Charting.Chart.DataManipulator" /> 개체의 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> 속성에 의해 노출됩니다.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataManipulator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataManipulator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataManipulator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExportSeriesValues">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>계열 또는 계열 컬렉션의 데이터를 <see cref="T:System.Data.DataSet" /> 개체로 내보냅니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExportSeriesValues">
      <MemberSignature Language="C#" Value="public System.Data.DataSet ExportSeriesValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataSet ExportSeriesValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.ExportSeriesValues" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportSeriesValues () As DataSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataSet ^ ExportSeriesValues();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataSet</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.SeriesCollection" />에 저장된 모든 계열에 대한 데이터를 <see cref="T:System.Data.DataSet" /> 개체로 내보냅니다.</summary>
        <returns>내보낸 계열 데이터가 들어 있는 <see cref="T:System.Data.DataSet" /> 개체입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportSeriesValues">
      <MemberSignature Language="C#" Value="public System.Data.DataSet ExportSeriesValues (string seriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataSet ExportSeriesValues(string seriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.ExportSeriesValues(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportSeriesValues (seriesNames As String) As DataSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataSet ^ ExportSeriesValues(System::String ^ seriesNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="seriesNames">내보낼 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />의 이름을 쉼표로 구분한 목록입니다.</param>
        <summary>하나 이상의 계열의 데이터를 <see cref="T:System.Data.DataSet" /> 개체로 내보냅니다.</summary>
        <returns>내보낸 계열 데이터가 들어 있는 <see cref="T:System.Data.DataSet" /> 개체입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportSeriesValues">
      <MemberSignature Language="C#" Value="public System.Data.DataSet ExportSeriesValues (System.Windows.Forms.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataSet ExportSeriesValues(class System.Windows.Forms.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.ExportSeriesValues(System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataSet ^ ExportSeriesValues(System::Windows::Forms::DataVisualization::Charting::Series ^ series);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="series" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="series">내보낼 계열입니다.</param>
        <summary>지정된 계열의 데이터를 <see cref="T:System.Data.DataSet" /> 개체로 내보냅니다.</summary>
        <returns>내보낸 계열 데이터가 들어 있는 <see cref="T:System.Data.DataSet" /> 개체입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Filter">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>표준 필터링 규칙 또는 사용자 지정 필터링 규칙을 적용하여 하나 이상의 계열을 필터링하거나 계열 또는 계열 컬렉션의 데이터 요소를 필터링합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.IDataPointFilter filterInterface, string inputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(class System.Windows.Forms.DataVisualization.Charting.IDataPointFilter filterInterface, string inputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.IDataPointFilter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Filter (filterInterface As IDataPointFilter, inputSeriesNames As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::IDataPointFilter ^ filterInterface, System::String ^ inputSeriesNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterInterface" Type="System.Windows.Forms.DataVisualization.Charting.IDataPointFilter" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filterInterface">
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter" /> 인터페이스를 구현하는 개체</param>
        <param name="inputSeriesNames">필터링되는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />의 이름을 쉼표로 구분한 목록입니다.</param>
        <summary>첫 번째 계열의 요소를 기준으로 하나 이상의 계열에서 데이터 요소에 대해 사용자 지정 필터링을 수행합니다. 필터링된 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체에는 수정된 데이터도 저장됩니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.IDataPointFilter filterInterface, System.Windows.Forms.DataVisualization.Charting.Series inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(class System.Windows.Forms.DataVisualization.Charting.IDataPointFilter filterInterface, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.IDataPointFilter,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Filter (filterInterface As IDataPointFilter, inputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::IDataPointFilter ^ filterInterface, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterInterface" Type="System.Windows.Forms.DataVisualization.Charting.IDataPointFilter" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="filterInterface">
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter" /> 인터페이스를 구현하는 개체</param>
        <param name="inputSeries">필터링되는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체입니다.</param>
        <summary>계열의 데이터 요소에 대해 사용자 지정 필터링을 수행합니다. 필터링되는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체에는 수정된 데이터도 저장됩니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, double compareValue, string inputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, float64 compareValue, string inputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.CompareMethod,System.Double,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::CompareMethod compareMethod, double compareValue, System::String ^ inputSeriesNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compareMethod" Type="System.Windows.Forms.DataVisualization.Charting.CompareMethod" />
        <Parameter Name="compareValue" Type="System.Double" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="compareMethod">필터링 규칙에 대한 비교 메서드를 결정하는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.CompareMethod" /> 열거형 값입니다. <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.LessThan" />, <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.EqualTo" /> 등이 될 수 있습니다.</param>
        <param name="compareValue">데이터 요소의 첫 번째 Y 값에 적용되는 필터링 규칙의 값 부분입니다. 예를 들어 필터링 규칙 "&lt;6"에서 6은 값입니다.</param>
        <param name="inputSeriesNames">필터링되는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />의 이름을 쉼표로 구분한 목록입니다.</param>
        <summary>첫 번째 계열에서 데이터 요소의 첫 번째 Y 값에 필터링 규칙을 적용하여 하나 이상의 계열을 필터링합니다. 필터링되는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체는 수정된 데이터를 저장하는 데 사용됩니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, double compareValue, System.Windows.Forms.DataVisualization.Charting.Series inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, float64 compareValue, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.CompareMethod,System.Double,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::CompareMethod compareMethod, double compareValue, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compareMethod" Type="System.Windows.Forms.DataVisualization.Charting.CompareMethod" />
        <Parameter Name="compareValue" Type="System.Double" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="compareMethod">필터링 규칙에 대한 비교 메서드를 결정하는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.CompareMethod" /> 열거형 값입니다. <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.LessThan" />, <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.EqualTo" /> 등이 될 수 있습니다.</param>
        <param name="compareValue">데이터 요소의 첫 번째 Y 값에 적용되는 필터링 규칙의 값 부분입니다. 예를 들어 필터링 규칙 "&lt;6"에서 6은 값입니다.</param>
        <param name="inputSeries">필터링되는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체입니다.</param>
        <summary>각 데이터 요소의 첫 번째 Y 값에 필터링 규칙을 적용하여 계열에서 데이터 요소를 필터링합니다. 필터링되는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체에는 수정된 데이터도 저장됩니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.DateRangeType dateRange, string rangeElements, string inputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Windows.Forms.DataVisualization.Charting.DateRangeType dateRange, string rangeElements, string inputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.DateRangeType,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Filter (dateRange As DateRangeType, rangeElements As String, inputSeriesNames As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::DateRangeType dateRange, System::String ^ rangeElements, System::String ^ inputSeriesNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateRange" Type="System.Windows.Forms.DataVisualization.Charting.DateRangeType" />
        <Parameter Name="rangeElements" Type="System.String" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dateRange">요일, 날짜 등과 같은 날짜/시간 간격을 나타내는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateRangeType" /> 열거형 값입니다. 지정된 요소를 필터링할 범위를 결정합니다.</param>
        <param name="rangeElements">
          <c>dateRange</c> 매개 변수에 지정된 날짜/시간 범위 내부의 필터링할 요소를 지정합니다. 단일 값(예: "7"), 쉼표로 구분된 값(예: "5,6"), 값 범위(예: "9-11") 또는 모든 변형(예: "5,6,9-11")이 될 수 있습니다.</param>
        <param name="inputSeriesNames">필터링되는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />의 이름을 쉼표로 구분한 목록입니다.</param>
        <summary>지정된 요소를 제거하거나 지정된 날짜/시간 범위에 대해 빈 상태로 표시하여 하나 이상의 계열에서 데이터 요소를 필터링합니다. 필터링되는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체는 수정된 데이터를 저장하는 데 사용됩니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.DateRangeType dateRange, string rangeElements, System.Windows.Forms.DataVisualization.Charting.Series inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Windows.Forms.DataVisualization.Charting.DateRangeType dateRange, string rangeElements, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.DateRangeType,System.String,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Filter (dateRange As DateRangeType, rangeElements As String, inputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::DateRangeType dateRange, System::String ^ rangeElements, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateRange" Type="System.Windows.Forms.DataVisualization.Charting.DateRangeType" />
        <Parameter Name="rangeElements" Type="System.String" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="dateRange">요일, 날짜 등과 같은 날짜/시간 간격을 나타내는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateRangeType" /> 열거형 값입니다. 지정된 요소를 필터링할 범위를 결정합니다.</param>
        <param name="rangeElements">
          <c>dateRange</c> 매개 변수에 지정된 날짜/시간 범위 내부의 필터링할 요소를 지정합니다. 단일 값(예: "7"), 쉼표로 구분된 값(예: "5,6"), 값 범위(예: "9-11") 또는 모든 변형(예: "5,6,9-11")이 될 수 있습니다.</param>
        <param name="inputSeries">필터링되는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체입니다.</param>
        <summary>지정된 요소를 제거하거나 지정된 날짜/시간 범위에 대해 빈 상태로 표시하여 계열에서 데이터 요소를 필터링합니다. 필터링되는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체는 수정된 데이터를 저장하는 데 사용됩니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.IDataPointFilter filterInterface, string inputSeriesNames, string outputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(class System.Windows.Forms.DataVisualization.Charting.IDataPointFilter filterInterface, string inputSeriesNames, string outputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.IDataPointFilter,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Filter (filterInterface As IDataPointFilter, inputSeriesNames As String, outputSeriesNames As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::IDataPointFilter ^ filterInterface, System::String ^ inputSeriesNames, System::String ^ outputSeriesNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterInterface" Type="System.Windows.Forms.DataVisualization.Charting.IDataPointFilter" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
        <Parameter Name="outputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filterInterface">
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter" /> 인터페이스를 구현하는 개체</param>
        <param name="inputSeriesNames">필터링되는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />의 이름을 쉼표로 구분한 목록입니다.</param>
        <param name="outputSeriesNames">필터링된 데이터를 저장하는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />의 이름을 쉼표로 구분한 목록입니다. 출력 계열의 수가 입력 계열의 수와 일치해야 합니다. 그렇지 않으면 예외가 throw됩니다.</param>
        <summary>첫 번째 계열의 요소를 기준으로 하나 이상의 계열에서 데이터 요소에 대해 사용자 지정 필터링을 수행합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.IDataPointFilter filterInterface, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(class System.Windows.Forms.DataVisualization.Charting.IDataPointFilter filterInterface, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.IDataPointFilter,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Filter (filterInterface As IDataPointFilter, inputSeries As Series, outputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::IDataPointFilter ^ filterInterface, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterInterface" Type="System.Windows.Forms.DataVisualization.Charting.IDataPointFilter" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="filterInterface">
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter" /> 인터페이스를 구현하는 개체</param>
        <param name="inputSeries">필터링되는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체입니다.</param>
        <param name="outputSeries">필터링된 데이터를 저장하는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체입니다. 계열이 없으면 예외가 throw됩니다.</param>
        <summary>계열의 데이터 요소에 대해 사용자 지정 필터링을 수행합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, double compareValue, string inputSeriesNames, string outputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, float64 compareValue, string inputSeriesNames, string outputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.CompareMethod,System.Double,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::CompareMethod compareMethod, double compareValue, System::String ^ inputSeriesNames, System::String ^ outputSeriesNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compareMethod" Type="System.Windows.Forms.DataVisualization.Charting.CompareMethod" />
        <Parameter Name="compareValue" Type="System.Double" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
        <Parameter Name="outputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="compareMethod">필터링 규칙에 대한 비교 메서드를 결정하는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.CompareMethod" /> 열거형 값입니다. <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.LessThan" />, <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.EqualTo" /> 등이 될 수 있습니다.</param>
        <param name="compareValue">데이터 요소의 첫 번째 Y 값에 적용되는 필터링 규칙의 값 부분입니다. 예를 들어 필터링 규칙 "&lt;6"에서 6은 값입니다.</param>
        <param name="inputSeriesNames">필터링되는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />의 이름을 쉼표로 구분한 목록입니다.</param>
        <param name="outputSeriesNames">필터링된 데이터를 저장하는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />의 이름을 쉼표로 구분한 목록입니다. 출력 계열의 수가 입력 계열의 수와 일치해야 합니다. 그렇지 않으면 예외가 throw됩니다.</param>
        <summary>첫 번째 계열에서 각 데이터 요소의 첫 번째 Y 값에 필터링 규칙을 적용하여 하나 이상의 계열을 필터링합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, double compareValue, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, float64 compareValue, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.CompareMethod,System.Double,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::CompareMethod compareMethod, double compareValue, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compareMethod" Type="System.Windows.Forms.DataVisualization.Charting.CompareMethod" />
        <Parameter Name="compareValue" Type="System.Double" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="compareMethod">필터링 규칙에 대한 비교 메서드를 결정하는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.CompareMethod" /> 열거형 값입니다. <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.LessThan" />, <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.EqualTo" /> 등이 될 수 있습니다.</param>
        <param name="compareValue">데이터 요소의 첫 번째 Y 값에 적용되는 필터링 규칙의 값 부분입니다. 예를 들어 필터링 규칙 "&lt;6"에서 6은 값입니다.</param>
        <param name="inputSeries">필터링되는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체입니다.</param>
        <param name="outputSeries">필터링된 데이터를 저장하는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체입니다. 계열이 없으면 예외가 throw됩니다.</param>
        <summary>각 데이터 요소의 첫 번째 Y 값에 필터링 규칙을 적용하여 계열에서 데이터 요소를 필터링합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.DateRangeType dateRange, string rangeElements, string inputSeriesNames, string outputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Windows.Forms.DataVisualization.Charting.DateRangeType dateRange, string rangeElements, string inputSeriesNames, string outputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.DateRangeType,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Filter (dateRange As DateRangeType, rangeElements As String, inputSeriesNames As String, outputSeriesNames As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::DateRangeType dateRange, System::String ^ rangeElements, System::String ^ inputSeriesNames, System::String ^ outputSeriesNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateRange" Type="System.Windows.Forms.DataVisualization.Charting.DateRangeType" />
        <Parameter Name="rangeElements" Type="System.String" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
        <Parameter Name="outputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dateRange">요일, 날짜 등과 같은 날짜/시간 간격을 나타내는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateRangeType" /> 열거형 값입니다. 지정된 요소를 필터링할 범위를 결정합니다.</param>
        <param name="rangeElements">
          <c>dateRange</c> 매개 변수에 지정된 날짜/시간 범위 내부의 필터링할 요소를 지정합니다. 단일 값(예: "7"), 쉼표로 구분된 값(예: "5,6"), 값 범위(예: "9-11") 또는 모든 변형(예: "5,6,9-11")이 될 수 있습니다.</param>
        <param name="inputSeriesNames">필터링되는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />의 이름을 쉼표로 구분한 목록입니다.</param>
        <param name="outputSeriesNames">필터링된 데이터를 저장하는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />의 이름을 쉼표로 구분한 목록입니다. 출력 계열의 수가 입력 계열의 수와 일치해야 합니다. 그렇지 않으면 예외가 throw됩니다.</param>
        <summary>지정된 요소를 제거하거나 지정된 날짜/시간 범위에 대해 빈 상태로 표시하여 하나 이상의 계열에서 데이터 요소를 필터링합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.DateRangeType dateRange, string rangeElements, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Windows.Forms.DataVisualization.Charting.DateRangeType dateRange, string rangeElements, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.DateRangeType,System.String,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Filter (dateRange As DateRangeType, rangeElements As String, inputSeries As Series, outputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::DateRangeType dateRange, System::String ^ rangeElements, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateRange" Type="System.Windows.Forms.DataVisualization.Charting.DateRangeType" />
        <Parameter Name="rangeElements" Type="System.String" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="dateRange">요일, 날짜 등과 같은 날짜/시간 간격을 나타내는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateRangeType" /> 열거형 값입니다. 지정된 요소를 필터링할 범위를 결정합니다.</param>
        <param name="rangeElements">
          <c>dateRange</c> 매개 변수에 지정된 날짜/시간 범위 내부의 필터링할 요소를 지정합니다. 단일 값(예: "7"), 쉼표로 구분된 값(예: "5,6"), 값 범위(예: "9-11") 또는 모든 변형(예: "5,6,9-11")이 될 수 있습니다.</param>
        <param name="inputSeries">필터링되는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체입니다.</param>
        <param name="outputSeries">필터링된 데이터를 저장하는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체입니다. 계열이 없으면 예외가 throw됩니다.</param>
        <summary>지정된 요소를 제거하거나 지정된 날짜/시간 범위에 대해 빈 상태로 표시하여 계열에서 데이터 요소를 필터링합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, double compareValue, string inputSeriesNames, string outputSeriesNames, string usingValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, float64 compareValue, string inputSeriesNames, string outputSeriesNames, string usingValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.CompareMethod,System.Double,System.String,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::CompareMethod compareMethod, double compareValue, System::String ^ inputSeriesNames, System::String ^ outputSeriesNames, System::String ^ usingValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compareMethod" Type="System.Windows.Forms.DataVisualization.Charting.CompareMethod" />
        <Parameter Name="compareValue" Type="System.Double" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
        <Parameter Name="outputSeriesNames" Type="System.String" />
        <Parameter Name="usingValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="compareMethod">필터링 규칙에 대한 비교 메서드를 결정하는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.CompareMethod" /> 열거형 값입니다. <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.LessThan" />, <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.EqualTo" /> 등이 될 수 있습니다.</param>
        <param name="compareValue">데이터 요소의 첫 번째 Y 값에 적용되는 필터링 규칙의 값 부분입니다. 예를 들어 필터링 규칙 "&lt;6"에서 6은 값입니다.</param>
        <param name="inputSeriesNames">필터링되는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />의 이름을 쉼표로 구분한 목록입니다.</param>
        <param name="outputSeriesNames">필터링된 데이터를 저장하는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />의 이름을 쉼표로 구분한 목록입니다. 출력 계열의 수가 입력 계열의 수와 같아야 합니다. 그렇지 않으면 예외가 throw됩니다.</param>
        <param name="usingValue">필터링 규칙이 적용되는 데이터 요소 값입니다. X, Y, Y2, Y3 등이 될 수 있습니다.</param>
        <summary>첫 번째 계열에서 지정된 데이터 요소 값에 필터링 규칙을 적용하여 하나 이상의 계열을 필터링합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, double compareValue, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries, string usingValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, float64 compareValue, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries, string usingValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.CompareMethod,System.Double,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::CompareMethod compareMethod, double compareValue, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries, System::String ^ usingValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compareMethod" Type="System.Windows.Forms.DataVisualization.Charting.CompareMethod" />
        <Parameter Name="compareValue" Type="System.Double" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="usingValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="compareMethod">필터링 규칙에 대한 비교 메서드를 결정하는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.CompareMethod" /> 열거형 값입니다. <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.LessThan" />, <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.EqualTo" /> 등이 될 수 있습니다.</param>
        <param name="compareValue">데이터 요소의 첫 번째 Y 값에 적용되는 필터링 규칙의 값 부분입니다. 예를 들어 필터링 규칙 "&lt;6"에서 6은 값입니다.</param>
        <param name="inputSeries">필터링되는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체입니다.</param>
        <param name="outputSeries">필터링된 데이터를 저장하는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체입니다. 계열이 없으면 예외가 throw됩니다.</param>
        <param name="usingValue">필터링 규칙이 적용되는 데이터 요소 값입니다. X, Y, Y2, Y3 등이 될 수 있습니다.</param>
        <summary>비교를 위해 지정된 데이터 요소에 필터링 규칙을 적용하여 계열에서 데이터 요소를 필터링합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterMatchedPoints">
      <MemberSignature Language="C#" Value="public bool FilterMatchedPoints { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FilterMatchedPoints" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterMatchedPoints" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterMatchedPoints As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FilterMatchedPoints { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 클래스의 <c>Filter</c> 메서드에서 인수에 지정된 조건과 일치하는 경우 요소가 필터링되는지 여부를 결정하는 값을 가져오거나 설정합니다.</summary>
        <value>
          지정된 조건과 일치하는 요소가 필터링되면 <see langword="true" />이고, 조건과 일치하지 않은 요소가 필터링되면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterSetEmptyPoints">
      <MemberSignature Language="C#" Value="public bool FilterSetEmptyPoints { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FilterSetEmptyPoints" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterSetEmptyPoints" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterSetEmptyPoints As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FilterSetEmptyPoints { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <c>Filter</c> 또는 <c>FilterTopN</c> 메서드에 의해 필터링되는 요소가 제거될지 아니면 빈 상태로 표시될지 여부를 나타내는 플래그를 가져오거나 설정합니다.</summary>
        <value>
          필터링된 요소가 빈 상태로 표시되면 <see langword="true" />이고, 제거되면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FilterTopN">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>하나 이상의 계열에서 지정된 수의 요소를 제외한 모든 데이터 요소를 필터링합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FilterTopN">
      <MemberSignature Language="C#" Value="public void FilterTopN (int pointCount, string inputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FilterTopN(int32 pointCount, string inputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilterTopN (pointCount As Integer, inputSeriesNames As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FilterTopN(int pointCount, System::String ^ inputSeriesNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointCount" Type="System.Int32" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pointCount">필터링 작업에서 제거하지 않을 데이터 요소 수입니다.</param>
        <param name="inputSeriesNames">필터링되는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />의 이름을 쉼표로 구분한 목록입니다.</param>
        <summary>하나 이상의 계열에서 지정된 수의 요소를 제외한 모든 데이터 요소를 필터링합니다. 필터링되지 않는 요소는 첫 번째 계열에서 첫 번째 Y값이 가장 큰 요소에 해당합니다. 필터링되는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체는 수정된 데이터를 저장하는 데 사용됩니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTopN">
      <MemberSignature Language="C#" Value="public void FilterTopN (int pointCount, System.Windows.Forms.DataVisualization.Charting.Series inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FilterTopN(int32 pointCount, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilterTopN (pointCount As Integer, inputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FilterTopN(int pointCount, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointCount" Type="System.Int32" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="pointCount">필터링 작업에서 제거하지 않을 데이터 요소 수입니다.</param>
        <param name="inputSeries">필터링되는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체입니다.</param>
        <summary>계열에서 가장 큰 첫 번째 Y값을 갖는 지정된 수의 요소를 제외한 모든 데이터 요소를 필터링합니다. 필터링되는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체는 수정된 데이터를 저장하는 데 사용됩니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTopN">
      <MemberSignature Language="C#" Value="public void FilterTopN (int pointCount, string inputSeriesNames, string outputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FilterTopN(int32 pointCount, string inputSeriesNames, string outputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilterTopN (pointCount As Integer, inputSeriesNames As String, outputSeriesNames As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FilterTopN(int pointCount, System::String ^ inputSeriesNames, System::String ^ outputSeriesNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointCount" Type="System.Int32" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
        <Parameter Name="outputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pointCount">필터링 작업에서 제거하지 않을 데이터 요소 수입니다.</param>
        <param name="inputSeriesNames">필터링되는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />의 이름을 쉼표로 구분한 목록입니다.</param>
        <param name="outputSeriesNames">필터링된 데이터를 저장하는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />의 이름을 쉼표로 구분한 목록입니다. 출력 계열의 수가 입력 계열의 수와 일치해야 합니다. 그렇지 않으면 예외가 throw됩니다.</param>
        <summary>하나 이상의 계열에서 지정된 수의 요소를 제외한 모든 데이터 요소를 필터링합니다. 필터링되지 않는 요소는 첫 번째 계열에서 첫 번째 Y값이 가장 큰 요소에 해당합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTopN">
      <MemberSignature Language="C#" Value="public void FilterTopN (int pointCount, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FilterTopN(int32 pointCount, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilterTopN (pointCount As Integer, inputSeries As Series, outputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FilterTopN(int pointCount, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointCount" Type="System.Int32" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="pointCount">필터링 작업에서 제거하지 않을 데이터 요소 수입니다.</param>
        <param name="inputSeries">필터링되는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체입니다.</param>
        <param name="outputSeries">필터링된 데이터를 저장하는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체입니다. 계열이 없으면 예외가 throw됩니다.</param>
        <summary>계열에서 가장 큰 첫 번째 Y값을 갖는 지정된 수의 요소를 제외한 모든 데이터 요소를 필터링합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTopN">
      <MemberSignature Language="C#" Value="public void FilterTopN (int pointCount, string inputSeriesNames, string outputSeriesNames, string usingValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FilterTopN(int32 pointCount, string inputSeriesNames, string outputSeriesNames, string usingValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilterTopN (pointCount As Integer, inputSeriesNames As String, outputSeriesNames As String, usingValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FilterTopN(int pointCount, System::String ^ inputSeriesNames, System::String ^ outputSeriesNames, System::String ^ usingValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointCount" Type="System.Int32" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
        <Parameter Name="outputSeriesNames" Type="System.String" />
        <Parameter Name="usingValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pointCount">필터링 작업에서 제거하지 않을 데이터 요소 수입니다.</param>
        <param name="inputSeriesNames">필터링되는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />의 이름을 쉼표로 구분한 목록입니다.</param>
        <param name="outputSeriesNames">필터링된 데이터를 저장하는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />의 이름을 쉼표로 구분한 목록입니다. 출력 계열의 수가 입력 계열의 수와 일치해야 합니다. 그렇지 않으면 예외가 throw됩니다.</param>
        <param name="usingValue">필터링 규칙이 적용되는 데이터 요소 값입니다. X, Y, Y2, Y3 등이 될 수 있습니다.</param>
        <summary>하나 이상의 계열에서 지정된 수의 요소를 제외한 모든 데이터 요소를 필터링합니다. 필터링되지 않는 요소는 첫 번째 계열에서 값이 가장 큰 요소에 해당합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTopN">
      <MemberSignature Language="C#" Value="public void FilterTopN (int pointCount, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries, string usingValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FilterTopN(int32 pointCount, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries, string usingValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilterTopN (pointCount As Integer, inputSeries As Series, outputSeries As Series, usingValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FilterTopN(int pointCount, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries, System::String ^ usingValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointCount" Type="System.Int32" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="usingValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pointCount">필터링 작업에서 제거하지 않을 데이터 요소 수입니다.</param>
        <param name="inputSeries">필터링되는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체입니다.</param>
        <param name="outputSeries">필터링된 데이터를 저장하는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체입니다. 계열이 없으면 예외가 throw됩니다.</param>
        <param name="usingValue">필터링 규칙이 적용되는 데이터 요소 값입니다. X, Y, Y2, Y3 등이 될 수 있습니다.</param>
        <summary>계열에서 가장 큰 값을 갖는 지정된 수의 지점을 제외한 모든 데이터 요소를 필터링합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTopN">
      <MemberSignature Language="C#" Value="public void FilterTopN (int pointCount, string inputSeriesNames, string outputSeriesNames, string usingValue, bool getTopValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FilterTopN(int32 pointCount, string inputSeriesNames, string outputSeriesNames, string usingValue, bool getTopValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilterTopN (pointCount As Integer, inputSeriesNames As String, outputSeriesNames As String, usingValue As String, getTopValues As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FilterTopN(int pointCount, System::String ^ inputSeriesNames, System::String ^ outputSeriesNames, System::String ^ usingValue, bool getTopValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointCount" Type="System.Int32" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
        <Parameter Name="outputSeriesNames" Type="System.String" />
        <Parameter Name="usingValue" Type="System.String" />
        <Parameter Name="getTopValues" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pointCount">필터링 작업에서 제거하지 않을 데이터 요소 수입니다.</param>
        <param name="inputSeriesNames">필터링되는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />의 이름을 쉼표로 구분한 목록입니다.</param>
        <param name="outputSeriesNames">필터링된 데이터를 저장하는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />의 이름을 쉼표로 구분한 목록입니다. 출력 계열의 수가 입력 계열의 수와 일치해야 합니다. 그렇지 않으면 예외가 throw됩니다.</param>
        <param name="usingValue">필터링 규칙이 적용되는 데이터 요소 값입니다. X, Y, Y2, Y3 등이 될 수 있습니다.</param>
        <param name="getTopValues">
          가장 큰 값이 유지되면 <see langword="true" />이고, 가장 작은 값이 유지되면 <see langword="false" />입니다.</param>
        <summary>하나 이상의 계열에서 지정된 수의 요소를 제외한 모든 데이터 요소를 필터링합니다. 필터링되지 않는 요소는 첫 번째 입력 계열에서 가장 큰 값이나 가장 작은 값을 갖는 요소에 해당합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTopN">
      <MemberSignature Language="C#" Value="public void FilterTopN (int pointCount, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries, string usingValue, bool getTopValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FilterTopN(int32 pointCount, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries, string usingValue, bool getTopValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilterTopN (pointCount As Integer, inputSeries As Series, outputSeries As Series, usingValue As String, getTopValues As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FilterTopN(int pointCount, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries, System::String ^ usingValue, bool getTopValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointCount" Type="System.Int32" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="usingValue" Type="System.String" />
        <Parameter Name="getTopValues" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pointCount">필터링 작업에서 제거하지 않을 데이터 요소 수입니다.</param>
        <param name="inputSeries">필터링되는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체입니다.</param>
        <param name="outputSeries">필터링된 데이터를 저장하는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체입니다. 계열이 없으면 예외가 throw됩니다.</param>
        <param name="usingValue">필터링 규칙이 적용되는 데이터 요소 값입니다. X, Y, Y2, Y3 등이 될 수 있습니다.</param>
        <param name="getTopValues">
          가장 큰 값이 유지되면 <see langword="true" />이고, 가장 작은 값이 유지되면 <see langword="false" />입니다.</param>
        <summary>계열에서 가장 작은 값이나 가장 큰 값을 갖는 지정된 수의 요소를 제외한 모든 데이터 요소를 필터링합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Group">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>하나 이상의 수식을 사용하여 하나 이상 계열의 데이터 요소를 그룹화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public void Group (string formula, double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, string inputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Group(string formula, float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, string inputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Group(System::String ^ formula, double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, System::String ^ inputSeriesName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="inputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formula">그룹화된 데이터 요소 값을 계산하는 데 사용할 하나 이상의 수식을 쉼표로 구분한 목록입니다.</param>
        <param name="interval">누락된 데이터 요소를 검사할 간격의 크기입니다.</param>
        <param name="intervalType">
          <c>interval</c> 매개 변수의 단위입니다.</param>
        <param name="inputSeriesName">그룹화할 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />의 이름을 쉼표로 구분한 목록입니다.</param>
        <summary>하나 이상의 수식을 사용하여 하나 이상 계열의 데이터 요소를 그룹화합니다. 계열에서 원래 데이터를 지우고 새 데이터 요소를 저장하는 데 사용합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public void Group (string formula, double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, System.Windows.Forms.DataVisualization.Charting.Series inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Group(string formula, float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Group(System::String ^ formula, double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formula">그룹화된 데이터 요소 값을 계산하는 데 사용할 하나 이상의 수식을 쉼표로 구분한 목록입니다.</param>
        <param name="interval">누락된 데이터 요소를 검사할 간격의 크기입니다.</param>
        <param name="intervalType">
          <c>interval</c> 매개 변수의 단위입니다.</param>
        <param name="inputSeries">그룹화할 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체입니다.</param>
        <summary>하나 이상의 수식을 사용하여 계열의 데이터 요소를 그룹화합니다. 원래 데이터를 지우고 새 데이터 요소를 저장하는 데 그룹화된 계열을 사용합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public void Group (string formula, double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, string inputSeriesName, string outputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Group(string formula, float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, string inputSeriesName, string outputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Group(System::String ^ formula, double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, System::String ^ inputSeriesName, System::String ^ outputSeriesName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="inputSeriesName" Type="System.String" />
        <Parameter Name="outputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formula">그룹화된 데이터 요소 값을 계산하는 데 사용할 하나 이상의 수식을 쉼표로 구분한 목록입니다.</param>
        <param name="interval">누락된 데이터 요소를 검사할 간격의 크기입니다.</param>
        <param name="intervalType">
          <c>interval</c> 매개 변수의 단위입니다.</param>
        <param name="inputSeriesName">그룹화할 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />의 이름을 쉼표로 구분한 목록입니다.</param>
        <param name="outputSeriesName">그룹화된 데이터 요소를 저장할 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />의 이름을 쉼표로 구분한 목록입니다. 계열이 없으면 만듭니다. 계열이 있으면 먼저 모든 데이터를 지운 다음 그룹화된 데이터 요소를 저장합니다. 출력 계열의 수가 입력 계열의 수와 같아야 합니다. 그렇지 않으면 예외가 throw됩니다.</param>
        <summary>하나 이상의 수식을 사용하여 하나 이상 계열의 데이터 요소를 그룹화합니다. 출력 계열을 사용하여 그룹화된 데이터 요소를 저장합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public void Group (string formula, double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Group(string formula, float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Group(System::String ^ formula, double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formula">그룹화된 데이터 요소 값을 계산하는 데 사용할 하나 이상의 수식을 쉼표로 구분한 목록입니다.</param>
        <param name="interval">누락된 데이터 요소를 검사할 간격의 크기입니다.</param>
        <param name="intervalType">
          <c>interval</c> 매개 변수의 단위입니다.</param>
        <param name="inputSeries">그룹화할 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체입니다.</param>
        <param name="outputSeries">그룹화 작업에서 만든 새 데이터 요소를 저장할 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />입니다. 이 개체가 없으면 예외가 throw됩니다.</param>
        <summary>하나 이상의 수식을 사용하여 계열의 데이터 요소를 그룹화합니다. 출력 계열을 사용하여 그룹화된 데이터 요소를 저장합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public void Group (string formula, double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, double intervalOffset, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, string inputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Group(string formula, float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, float64 intervalOffset, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, string inputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Group(System::String ^ formula, double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, double intervalOffset, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalOffsetType, System::String ^ inputSeriesName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="intervalOffset" Type="System.Double" />
        <Parameter Name="intervalOffsetType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="inputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formula">그룹화된 데이터 요소 값을 계산하는 데 사용할 하나 이상의 수식을 쉼표로 구분한 목록입니다.</param>
        <param name="interval">누락된 데이터 요소를 검사할 간격의 크기입니다.</param>
        <param name="intervalType">
          <c>interval</c> 매개 변수의 단위입니다.</param>
        <param name="intervalOffset">간격 오프셋 크기입니다.</param>
        <param name="intervalOffsetType">간격 오프셋의 단위입니다.</param>
        <param name="inputSeriesName">그룹화할 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />의 이름을 쉼표로 구분한 목록입니다.</param>
        <summary>하나 이상의 수식을 사용하여 하나 이상 계열의 데이터 요소를 그룹화합니다. 계열에서 원래 데이터를 지우고 새 데이터 요소를 저장하는 데 사용합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public void Group (string formula, double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, double intervalOffset, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, System.Windows.Forms.DataVisualization.Charting.Series inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Group(string formula, float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, float64 intervalOffset, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Group(System::String ^ formula, double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, double intervalOffset, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalOffsetType, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="intervalOffset" Type="System.Double" />
        <Parameter Name="intervalOffsetType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formula">그룹화된 데이터 요소 값을 계산하는 데 사용할 하나 이상의 수식을 쉼표로 구분한 목록입니다.</param>
        <param name="interval">누락된 데이터 요소를 검사할 간격의 크기입니다.</param>
        <param name="intervalType">
          <c>interval</c> 매개 변수의 단위입니다.</param>
        <param name="intervalOffset">간격 오프셋 크기입니다.</param>
        <param name="intervalOffsetType">간격 오프셋의 단위입니다.</param>
        <param name="inputSeries">그룹화할 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체입니다.</param>
        <summary>하나 이상의 수식을 사용하여 계열의 데이터 요소를 그룹화합니다. 원래 데이터를 지우고 새 데이터 요소를 저장하는 데 그룹화된 계열을 사용합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public void Group (string formula, double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, double intervalOffset, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, string inputSeriesName, string outputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Group(string formula, float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, float64 intervalOffset, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, string inputSeriesName, string outputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Group(System::String ^ formula, double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, double intervalOffset, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalOffsetType, System::String ^ inputSeriesName, System::String ^ outputSeriesName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="intervalOffset" Type="System.Double" />
        <Parameter Name="intervalOffsetType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="inputSeriesName" Type="System.String" />
        <Parameter Name="outputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formula">그룹화된 데이터 요소 값을 계산하는 데 사용할 하나 이상의 수식을 쉼표로 구분한 목록입니다.</param>
        <param name="interval">누락된 데이터 요소를 검사할 간격의 크기입니다.</param>
        <param name="intervalType">
          <c>interval</c> 매개 변수의 단위입니다.</param>
        <param name="intervalOffset">간격 오프셋 크기입니다.</param>
        <param name="intervalOffsetType">간격 오프셋의 단위입니다.</param>
        <param name="inputSeriesName">그룹화할 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />의 이름을 쉼표로 구분한 목록입니다.</param>
        <param name="outputSeriesName">그룹화된 데이터 요소를 저장할 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />의 이름을 쉼표로 구분한 목록입니다. 계열이 없으면 만듭니다. 계열이 있으면 먼저 모든 데이터를 지운 다음 그룹화된 데이터 요소를 저장합니다. 출력 계열의 수가 입력 계열의 수와 같아야 합니다. 그렇지 않으면 예외가 throw됩니다.</param>
        <summary>하나 이상의 수식을 사용하여 하나 이상 계열의 데이터 요소를 그룹화합니다. 출력 계열을 사용하여 그룹화된 데이터 요소를 저장하며, 간격에 오프셋을 사용할 수 있습니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public void Group (string formula, double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, double intervalOffset, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Group(string formula, float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, float64 intervalOffset, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Group(System::String ^ formula, double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, double intervalOffset, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalOffsetType, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="intervalOffset" Type="System.Double" />
        <Parameter Name="intervalOffsetType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formula">그룹화된 데이터 요소 값을 계산하는 데 사용할 하나 이상의 수식을 쉼표로 구분한 목록입니다.</param>
        <param name="interval">누락된 데이터 요소를 검사할 간격의 크기입니다.</param>
        <param name="intervalType">
          <c>interval</c> 매개 변수의 단위입니다.</param>
        <param name="intervalOffset">간격 오프셋 크기입니다.</param>
        <param name="intervalOffsetType">간격 오프셋의 단위입니다.</param>
        <param name="inputSeries">그룹화할 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체입니다.</param>
        <param name="outputSeries">그룹화 작업에서 만든 새 데이터 요소를 저장할 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />입니다. 이 개체가 없으면 예외가 throw됩니다.</param>
        <summary>하나 이상의 수식을 사용하여 계열의 데이터 요소를 그룹화합니다. 출력 계열을 사용하여 그룹화된 데이터 요소를 저장하며, 간격에 오프셋을 사용할 수 있습니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GroupByAxisLabel">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>하나 이상의 수식을 사용하여 축 레이블별로 하나 이상의 계열의 데이터 요소를 그룹화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GroupByAxisLabel">
      <MemberSignature Language="C#" Value="public void GroupByAxisLabel (string formula, string inputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GroupByAxisLabel(string formula, string inputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.GroupByAxisLabel(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GroupByAxisLabel (formula As String, inputSeriesName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GroupByAxisLabel(System::String ^ formula, System::String ^ inputSeriesName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="inputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formula">그룹화된 데이터 요소 값을 계산하는 데 사용할 하나 이상의 수식을 쉼표로 구분한 목록입니다.</param>
        <param name="inputSeriesName">입력 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />의 이름을 쉼표로 구분한 목록입니다.</param>
        <summary>하나 이상의 수식을 사용하여 축 레이블별로 하나 이상의 계열의 데이터 요소를 그룹화합니다. 원래 데이터 요소 값을 지우고 각 계열에 그룹화된 새 데이터 요소를 저장합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupByAxisLabel">
      <MemberSignature Language="C#" Value="public void GroupByAxisLabel (string formula, System.Windows.Forms.DataVisualization.Charting.Series inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GroupByAxisLabel(string formula, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.GroupByAxisLabel(System.String,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GroupByAxisLabel (formula As String, inputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GroupByAxisLabel(System::String ^ formula, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formula">그룹화된 데이터 요소 값을 계산하는 데 사용할 하나 이상의 수식을 쉼표로 구분한 목록입니다.</param>
        <param name="inputSeries">입력 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />입니다.</param>
        <summary>하나 이상의 수식을 사용하여 축 레이블별로 계열의 데이터 요소를 그룹화합니다. 원래 데이터 요소 값을 지우고 계열에 그룹화된 새 데이터 요소를 저장합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupByAxisLabel">
      <MemberSignature Language="C#" Value="public void GroupByAxisLabel (string formula, string inputSeriesName, string outputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GroupByAxisLabel(string formula, string inputSeriesName, string outputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.GroupByAxisLabel(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GroupByAxisLabel (formula As String, inputSeriesName As String, outputSeriesName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GroupByAxisLabel(System::String ^ formula, System::String ^ inputSeriesName, System::String ^ outputSeriesName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="inputSeriesName" Type="System.String" />
        <Parameter Name="outputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formula">그룹화된 데이터 요소 값을 계산하는 데 사용할 하나 이상의 수식을 쉼표로 구분한 목록입니다.</param>
        <param name="inputSeriesName">입력 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />의 이름을 쉼표로 구분한 목록입니다.</param>
        <param name="outputSeriesName">그룹화된 데이터 요소를 저장할 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />의 이름을 쉼표로 구분한 목록입니다. 계열이 없으면 만듭니다. 계열이 있으면 먼저 모든 데이터를 지운 다음 그룹화된 데이터 요소를 저장합니다. 출력 계열의 수가 입력 계열의 수와 같아야 합니다. 그렇지 않으면 예외가 throw됩니다.</param>
        <summary>하나 이상의 수식을 사용하여 축 레이블별로 하나 이상의 계열의 데이터 요소를 그룹화합니다. 출력 계열을 사용하여 그룹화된 데이터 요소를 저장합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupByAxisLabel">
      <MemberSignature Language="C#" Value="public void GroupByAxisLabel (string formula, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GroupByAxisLabel(string formula, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.GroupByAxisLabel(System.String,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GroupByAxisLabel (formula As String, inputSeries As Series, outputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GroupByAxisLabel(System::String ^ formula, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formula">그룹화된 데이터 요소 값을 계산하는 데 사용할 하나 이상의 수식을 쉼표로 구분한 목록입니다.</param>
        <param name="inputSeries">그룹화할 입력 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />입니다.</param>
        <param name="outputSeries">그룹화 작업에서 만든 새 데이터 요소를 저장할 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />입니다. 이 개체가 없으면 예외가 throw됩니다.</param>
        <summary>하나 이상의 수식을 사용하여 축 레이블별로 계열의 데이터 요소를 그룹화합니다. 출력 계열을 사용하여 그룹화된 데이터 요소를 저장합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InsertEmptyPoints">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>계열 또는 계열 컬렉션에서 누락된 데이터 요소를 빈 요소로 바꿉니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InsertEmptyPoints">
      <MemberSignature Language="C#" Value="public void InsertEmptyPoints (double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, string seriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEmptyPoints(float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, string seriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.InsertEmptyPoints(System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEmptyPoints(double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, System::String ^ seriesName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="seriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="interval">누락된 데이터 요소를 검사할 간격의 크기입니다.</param>
        <param name="intervalType">
          <c>interval</c> 매개 변수의 단위입니다.</param>
        <param name="seriesName">검사할 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />의 이름을 쉼표로 구분한 목록입니다.</param>
        <summary>하나 이상의 계열에서 누락된 데이터 요소를 빈 요소로 바꿉니다. 각 계열에서 <paramref name="interval" /> 및 <paramref name="intervalType" /> 인수에 의해 결정되는 지정된 간격을 검사합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertEmptyPoints">
      <MemberSignature Language="C#" Value="public void InsertEmptyPoints (double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, System.Windows.Forms.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEmptyPoints(float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, class System.Windows.Forms.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.InsertEmptyPoints(System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEmptyPoints(double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, System::Windows::Forms::DataVisualization::Charting::Series ^ series);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="series" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="interval">누락된 데이터 요소를 검사할 간격의 크기입니다.</param>
        <param name="intervalType">
          <c>interval</c> 매개 변수의 단위입니다.</param>
        <param name="series">검사할 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체입니다.</param>
        <summary>계열에서 누락된 데이터 요소를 빈 요소로 바꿉니다. 계열에서 <paramref name="interval" /> 및 <paramref name="intervalType" /> 인수에 의해 결정되는 지정된 간격을 검사합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertEmptyPoints">
      <MemberSignature Language="C#" Value="public void InsertEmptyPoints (double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, double intervalOffset, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, string seriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEmptyPoints(float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, float64 intervalOffset, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, string seriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.InsertEmptyPoints(System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEmptyPoints(double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, double intervalOffset, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalOffsetType, System::String ^ seriesName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="intervalOffset" Type="System.Double" />
        <Parameter Name="intervalOffsetType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="seriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="interval">누락된 데이터 요소를 검사할 간격의 크기입니다.</param>
        <param name="intervalType">
          <c>interval</c> 매개 변수의 단위입니다.</param>
        <param name="intervalOffset">간격 오프셋 크기입니다.</param>
        <param name="intervalOffsetType">간격 오프셋의 단위입니다.</param>
        <param name="seriesName">검사할 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />의 이름을 쉼표로 구분한 목록입니다.</param>
        <summary>하나 이상의 계열에서 누락된 데이터 요소를 빈 요소로 바꿉니다. 각 계열에서 <paramref name="interval" />, <paramref name="intervalOffset" />, <paramref name="intervalOffsetType" /> 및 <paramref name="intervalType" /> 인수에 의해 결정되는 지정된 간격을 검사합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertEmptyPoints">
      <MemberSignature Language="C#" Value="public void InsertEmptyPoints (double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, double intervalOffset, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, System.Windows.Forms.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEmptyPoints(float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, float64 intervalOffset, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, class System.Windows.Forms.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.InsertEmptyPoints(System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEmptyPoints(double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, double intervalOffset, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalOffsetType, System::Windows::Forms::DataVisualization::Charting::Series ^ series);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="intervalOffset" Type="System.Double" />
        <Parameter Name="intervalOffsetType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="series" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="interval">누락된 데이터 요소를 검사할 간격의 크기입니다.</param>
        <param name="intervalType">
          <c>interval</c> 매개 변수의 단위입니다.</param>
        <param name="intervalOffset">간격 오프셋 크기입니다.</param>
        <param name="intervalOffsetType">간격 오프셋의 단위입니다.</param>
        <param name="series">빈 요소를 삽입할 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체입니다.</param>
        <summary>계열에서 누락된 데이터 요소를 빈 요소로 바꿉니다. 계열에서 <paramref name="interval" />, <paramref name="intervalOffset" />, <paramref name="intervalOffsetType" /> 및 <paramref name="intervalType" /> 인수에 의해 결정되는 지정된 간격을 검사합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertEmptyPoints">
      <MemberSignature Language="C#" Value="public void InsertEmptyPoints (double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, double intervalOffset, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, double fromXValue, double toXValue, string seriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEmptyPoints(float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, float64 intervalOffset, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, float64 fromXValue, float64 toXValue, string seriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.InsertEmptyPoints(System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Double,System.Double,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEmptyPoints(double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, double intervalOffset, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalOffsetType, double fromXValue, double toXValue, System::String ^ seriesName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="intervalOffset" Type="System.Double" />
        <Parameter Name="intervalOffsetType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="fromXValue" Type="System.Double" />
        <Parameter Name="toXValue" Type="System.Double" />
        <Parameter Name="seriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="interval">누락된 데이터 요소를 검사할 간격의 크기입니다.</param>
        <param name="intervalType">
          <c>interval</c> 매개 변수의 단위입니다.</param>
        <param name="intervalOffset">간격 오프셋 크기입니다.</param>
        <param name="intervalOffsetType">간격 오프셋의 단위입니다.</param>
        <param name="fromXValue">검사할 계열 범위의 시작점입니다. 데이터 요소의 X 값을 사용합니다.</param>
        <param name="toXValue">검사할 계열 범위의 끝점입니다. 데이터 요소의 X 값을 사용합니다.</param>
        <param name="seriesName">검사할 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />의 이름을 쉼표로 구분한 목록입니다.</param>
        <summary>하나 이상의 계열에서 누락된 데이터 요소를 빈 요소로 바꿉니다. 각 계열에서 <paramref name="interval" />, <paramref name="intervalOffset" />, <paramref name="intervalOffsetType" /> 및 <paramref name="intervalType" /> 인수에 의해 결정되는 지정된 간격을 검사합니다. 검사되는 계열 범위는 <paramref name="toXValue" /> 및 <paramref name="fromXValue" /> 인수에 의해 결정됩니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertEmptyPoints">
      <MemberSignature Language="C#" Value="public void InsertEmptyPoints (double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, double intervalOffset, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, double fromXValue, double toXValue, System.Windows.Forms.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEmptyPoints(float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, float64 intervalOffset, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, float64 fromXValue, float64 toXValue, class System.Windows.Forms.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.InsertEmptyPoints(System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Double,System.Double,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEmptyPoints(double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, double intervalOffset, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalOffsetType, double fromXValue, double toXValue, System::Windows::Forms::DataVisualization::Charting::Series ^ series);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="intervalOffset" Type="System.Double" />
        <Parameter Name="intervalOffsetType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="fromXValue" Type="System.Double" />
        <Parameter Name="toXValue" Type="System.Double" />
        <Parameter Name="series" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="interval">누락된 데이터 요소를 검사할 간격의 크기입니다.</param>
        <param name="intervalType">
          <c>interval</c> 매개 변수의 단위입니다.</param>
        <param name="intervalOffset">간격 오프셋 크기입니다.</param>
        <param name="intervalOffsetType">간격 오프셋의 단위입니다.</param>
        <param name="fromXValue">검사할 계열 범위의 시작점입니다. 데이터 요소의 X 값을 사용합니다.</param>
        <param name="toXValue">검사할 계열 범위의 끝점입니다. 데이터 요소의 X 값을 사용합니다.</param>
        <param name="series">빈 요소를 삽입할 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />입니다.</param>
        <summary>계열에서 누락된 데이터 요소를 빈 요소로 바꿉니다. 계열에서 <paramref name="interval" />, <paramref name="intervalOffset" />, <paramref name="intervalOffsetType" /> 및 <paramref name="intervalType" /> 인수에 의해 결정되는 지정된 간격을 검사합니다. 검사되는 계열 범위는 <paramref name="toXValue" /> 및 <paramref name="fromXValue" /> 인수에 의해 결정됩니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sort">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>하나 이상의 계열 내부의 데이터 요소에 대해 사용자 지정 정렬을 수행합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Collections.Generic.IComparer&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt; comparer, string seriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(class System.Collections.Generic.IComparer`1&lt;class System.Windows.Forms.DataVisualization.Charting.DataPoint&gt; comparer, string seriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Sort(System.Collections.Generic.IComparer{System.Windows.Forms.DataVisualization.Charting.DataPoint},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (comparer As IComparer(Of DataPoint), seriesName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Collections::Generic::IComparer&lt;System::Windows::Forms::DataVisualization::Charting::DataPoint ^&gt; ^ comparer, System::String ^ seriesName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt;" />
        <Parameter Name="seriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <see cref="T:System.Collections.IComparer" /> 인터페이스를 구현하고 사용자 지정 정렬 논리를 제공하는 개체입니다.</param>
        <param name="seriesName">정렬할 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />의 이름을 쉼표로 구분한 목록입니다.</param>
        <summary>하나 이상의 계열 내부의 데이터 요소에 대해 사용자 지정 정렬을 수행합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 단점이 있습니다; 하나 이상의 데이터 요소에 대해 사용자 지정 정렬 수행 정렬 논리에 의해 정의 되는 `comparer` 매개 변수입니다. 재정의 하 고 구현 된 <xref:System.Collections.IComparer.Compare%2A> 의 메서드는 <xref:System.Collections.IComparer> 인터페이스는 comparison(s) 수행 하 고 돌아 오세요 `true` 또는 `false`합니다. 정렬 순서는 반환 값으로 결정 됩니다.  
  
 여러 계열 정렬 되 면이 계열을 정렬 되어야 합니다 참고, 그렇지 않으면 예외가 throw 됩니다.  
  
 두 개체의 매개 변수는 <xref:System.Collections.IComparer.Compare%2A> 형식의 메서드가 항상 이어야 <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint>합니다.  
  
> [!IMPORTANT]
>  자신이 속한 계열에 관계 없이 모든 데이터 요소는 첫 번째 계열; 기준으로 정렬 첫 번째 계열에서 데이터 요소의 위치 변경 되 면 다른 계열에 있는 모든 해당 지점은 변경 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Collections.Generic.IComparer&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt; comparer, System.Windows.Forms.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(class System.Collections.Generic.IComparer`1&lt;class System.Windows.Forms.DataVisualization.Charting.DataPoint&gt; comparer, class System.Windows.Forms.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Sort(System.Collections.Generic.IComparer{System.Windows.Forms.DataVisualization.Charting.DataPoint},System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Collections::Generic::IComparer&lt;System::Windows::Forms::DataVisualization::Charting::DataPoint ^&gt; ^ comparer, System::Windows::Forms::DataVisualization::Charting::Series ^ series);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt;" />
        <Parameter Name="series" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <see cref="T:System.Collections.IComparer" /> 인터페이스를 구현하고 사용자 지정 정렬 논리를 제공하는 개체입니다.</param>
        <param name="series">정렬할 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체입니다.</param>
        <summary>계열 내부의 데이터 요소에 대해 사용자 지정 정렬을 수행합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 단점이 있습니다; 데이터 요소에 사용자 지정 정렬 수행 정렬 논리에 의해 정의 되는 `comparer` 매개 변수입니다. 재정의 하 고 구현 된 <xref:System.Collections.IComparer.Compare%2A> 의 메서드는 <xref:System.Collections.IComparer> 인터페이스는 comparison(s) 수행 하 고 돌아 오세요 `true` 또는 `false`합니다. 정렬 순서는 반환 값으로 결정 됩니다.  
  
 두 개체의 매개 변수는 <xref:System.Collections.IComparer.Compare%2A> 형식의 메서드가 항상 이어야 <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint>합니다.  
  
 함수 호출 당 둘 이상의 계열에 대 한 사용자 지정 정렬의 수행 하려면는 <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Sort%2A> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Windows.Forms.DataVisualization.Charting.PointSortOrder pointSortOrder, string seriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(valuetype System.Windows.Forms.DataVisualization.Charting.PointSortOrder pointSortOrder, string seriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Sort(System.Windows.Forms.DataVisualization.Charting.PointSortOrder,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Windows::Forms::DataVisualization::Charting::PointSortOrder pointSortOrder, System::String ^ seriesName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointSortOrder" Type="System.Windows.Forms.DataVisualization.Charting.PointSortOrder" />
        <Parameter Name="seriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pointSortOrder">정렬이 오름차순인지 내림차순인지 결정하는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.PointSortOrder" /> 열거형 값입니다.</param>
        <param name="seriesName">정렬할 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />의 이름을 쉼표로 구분한 목록입니다.</param>
        <summary>지정된 순서를 사용하여 하나 이상의 계열 내부의 데이터 요소를 정렬합니다. 각 데이터 요소의 첫 번째 Y 값을 기준으로 정렬합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Windows.Forms.DataVisualization.Charting.PointSortOrder pointSortOrder, System.Windows.Forms.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(valuetype System.Windows.Forms.DataVisualization.Charting.PointSortOrder pointSortOrder, class System.Windows.Forms.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Sort(System.Windows.Forms.DataVisualization.Charting.PointSortOrder,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Windows::Forms::DataVisualization::Charting::PointSortOrder pointSortOrder, System::Windows::Forms::DataVisualization::Charting::Series ^ series);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointSortOrder" Type="System.Windows.Forms.DataVisualization.Charting.PointSortOrder" />
        <Parameter Name="series" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="pointSortOrder">정렬이 오름차순인지 내림차순인지 결정하는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.PointSortOrder" /> 열거형 값입니다.</param>
        <param name="series">정렬할 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체입니다.</param>
        <summary>지정된 순서를 사용하여 계열 내부의 데이터 요소를 정렬합니다. 각 데이터 요소의 첫 번째 Y 값을 기준으로 정렬합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Windows.Forms.DataVisualization.Charting.PointSortOrder pointSortOrder, string sortBy, string seriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(valuetype System.Windows.Forms.DataVisualization.Charting.PointSortOrder pointSortOrder, string sortBy, string seriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Sort(System.Windows.Forms.DataVisualization.Charting.PointSortOrder,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Windows::Forms::DataVisualization::Charting::PointSortOrder pointSortOrder, System::String ^ sortBy, System::String ^ seriesName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointSortOrder" Type="System.Windows.Forms.DataVisualization.Charting.PointSortOrder" />
        <Parameter Name="sortBy" Type="System.String" />
        <Parameter Name="seriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pointSortOrder">정렬이 오름차순인지 내림차순인지 결정하는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.PointSortOrder" /> 열거형 값입니다.</param>
        <param name="sortBy">정렬할 데이터 요소 값을 나타내는 <see langword="string" /> 값입니다. 사용할 수 있는 값은 "X", "Y", "Y2", "Y3", "AxisLabel" 등입니다.</param>
        <param name="seriesName">정렬할 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />의 이름을 쉼표로 구분한 목록입니다.</param>
        <summary>지정된 순서를 사용하여 하나 이상의 계열 내부의 데이터 요소를 정렬합니다. 사용할 수 있는 모든 데이터 요소 값을 기준으로 정렬할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 오름차순 수행 또는 데이터에 대해 내림차순 정렬 계열에서 가리키고에서 설정 된 값에 따라는 `sortBy` 와 같은 매개 변수 "X", "AxisLabel", "Y", "Y1", 등입니다.  
  
 여러 계열 정렬 되 면이 계열을 정렬 되어야 합니다 참고, 그렇지 않으면 예외가 throw 됩니다.  
  
> [!IMPORTANT]
>  사용 하 여 지정 된 모든 계열이 정렬 될 첫 번째에서 Y 값 나열 단점이 있습니다. 즉, 첫 번째 계열을 기준으로 자신이 속한 계열에 관계 없이 모든 데이터 요소 정렬 됩니다.  
  
 사용자 지정 정렬 루틴을 사용 하 여 요소를 정렬 하려면 다른이 오버 로드 된 메서드의 정의 사용 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Windows.Forms.DataVisualization.Charting.PointSortOrder pointSortOrder, string sortBy, System.Windows.Forms.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(valuetype System.Windows.Forms.DataVisualization.Charting.PointSortOrder pointSortOrder, string sortBy, class System.Windows.Forms.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Sort(System.Windows.Forms.DataVisualization.Charting.PointSortOrder,System.String,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Windows::Forms::DataVisualization::Charting::PointSortOrder pointSortOrder, System::String ^ sortBy, System::Windows::Forms::DataVisualization::Charting::Series ^ series);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointSortOrder" Type="System.Windows.Forms.DataVisualization.Charting.PointSortOrder" />
        <Parameter Name="sortBy" Type="System.String" />
        <Parameter Name="series" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="pointSortOrder">정렬이 오름차순인지 내림차순인지 결정하는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.PointSortOrder" /> 열거형 값입니다.</param>
        <param name="sortBy">정렬할 데이터 요소 값을 나타내는 <see langword="string" /> 값입니다. 사용할 수 있는 값은 "X", "Y", "Y2", "Y3", "AxisLabel" 등입니다.</param>
        <param name="series">정렬할 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체입니다.</param>
        <summary>지정된 순서를 사용하여 계열 내부의 데이터 요소를 정렬합니다. 사용할 수 있는 모든 데이터 요소 값을 기준으로 정렬할 수 있습니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>