<Type Name="Cursor" FullName="System.Windows.Forms.DataVisualization.Charting.Cursor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c0ec8389554bf19b63ece4d799f45e79a7965552" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30629907" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Cursor : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Cursor extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.Cursor" />
  <TypeSignature Language="VB.NET" Value="Public Class Cursor&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Cursor : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Enabled")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c67ce-101">축을 따라 위치를 정의하는 가로줄이나 세로줄을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c67ce-101">Represents a horizontal or vertical line that defines a position along an axis.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c67ce-102">커서는 축의 위치를 정의 하는 가로 또는 세로 선입니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-102">A cursor is a horizontal or vertical line that defines a position along an axis.</span></span> <span data-ttu-id="c67ce-103">범위 선택에는 시작 및 끝 위치가 정의 되어 있고 반 투명 한 색을 사용 하 여 표시 되는 축 상에 범위입니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-103">A range selection is a range along an axis that is defined by a beginning and end position, and is displayed using a semi-transparent color.</span></span>  
  
 <span data-ttu-id="c67ce-104">커서 및 범위 선택 옵션 둘 다에서 구현 되는 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor> 으로 노출 되는 클래스는 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> 및 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> 속성의는 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-104">Cursors and range selections are both implemented by the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor> class, which is exposed as the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> properties of the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> object.</span></span> <span data-ttu-id="c67ce-105"><xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> 차트 영역의 X 축에 대 한 개체는 및 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> 개체는 Y 축에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-105">The <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> object is for the X axis of a chart area, and the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> object is for the Y axis.</span></span> <span data-ttu-id="c67ce-106"><xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A> 이러한 개체의 속성은 연결 된 축 기본 또는 보조 인지를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-106">The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A> property of these objects determines whether the associated axis is primary or secondary.</span></span>  
  
 <span data-ttu-id="c67ce-107">외부에서 발견 된 유일한 커서 및 범위 선택 기능은 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor> 클래스는 커서 및 범위 선택 관련 된 이벤트를 루트에 있는 <xref:System.Windows.Forms.DataVisualization.Charting.Chart> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-107">The only cursor and range selection functionality found outside the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor> class are the events related to the cursor and range selection that are in the root <xref:System.Windows.Forms.DataVisualization.Charting.Chart> object.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Cursor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Cursor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c67ce-108">
            <see cref="T:System.Windows.Forms.DataVisualization.Charting.Cursor" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-108">Initializes a new instance of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Cursor" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoScroll">
      <MemberSignature Language="C#" Value="public bool AutoScroll { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoScroll" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.AutoScroll" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoScroll As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoScroll { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c67ce-109">범위 선택 작업이 차트 영역을 벗어날 경우 스크롤이 발생할지 여부를 결정하는 플래그를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-109">Gets or sets a flag that determines whether scrolling will occur if a range selection operation extends beyond a boundary of the chart area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c67ce-110">데이터 뷰를 자동으로 스크롤할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-110">
              <see langword="true" /> if the data view can be scrolled automatically; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c67ce-111">데이터 뷰는 그려진된 계열을에 모든 데이터 요소를 표시 하지 않을 사용자가 범위를 선택 하는 경우이 속성은 경우 발생 합니다 보기의 자동 스크롤 `true` 와 마우스-커서가-차트 영역 경계 밖으로 이동 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-111">If a data view does not display all data points in a plotted series and a range is being selected by the user, automatic scrolling of the view will occur if this property is `true` and the mouse—and therefore the cursor—is moved outside the chart area boundary.</span></span>  
  
 <span data-ttu-id="c67ce-112">스크롤만 수행 됩니다는 축을 따라 더 많은 데이터를 볼 수 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="c67ce-112">Scrolling will only occur along an axis if there is more data available to be viewed.</span></span>  
  
 <span data-ttu-id="c67ce-113">일반적으로 모든 데이터가 표시 되지 않는 데이터 뷰는 최종 사용자 데이터의 하위 집합을 확대 하는 경우 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-113">A data view that does not display all data usually results if the end-user zooms into a subset of data.</span></span> <span data-ttu-id="c67ce-114">보기와 확대/축소 하 여 구현 됩니다는 <xref:System.Windows.Forms.DataVisualization.Charting.AxisScaleView> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-114">Views and zooming are implemented by the <xref:System.Windows.Forms.DataVisualization.Charting.AxisScaleView> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.AxisType AxisType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.AxisType AxisType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType" />
      <MemberSignature Language="VB.NET" Value="Public Property AxisType As AxisType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::AxisType AxisType { System::Windows::Forms::DataVisualization::Charting::AxisType get(); void set(System::Windows::Forms::DataVisualization::Charting::AxisType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.AxisType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c67ce-115">커서가 연결된 축의 유형을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-115">Gets or sets the type of axis that the cursor is attached to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c67ce-116">축이 기본 축에 연결되는지 또는 보조 축에 연결되는지 나타내는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.AxisType" /> 열거형 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-116">An <see cref="T:System.Windows.Forms.DataVisualization.Charting.AxisType" /> enumeration value that represents whether the axis is attached to the primary or secondary axis.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c67ce-117">축에 두 가지: 기본 및 보조 합니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-117">There are two sets of axes: primary and secondary.</span></span> <span data-ttu-id="c67ce-118">가로 막대형 차트를 제외한 모든 차트에 대 한 기본 축 아래쪽 (기본 x 축) 및 차트 영역의 테두리 왼쪽 (기본 y 축)에 나와 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-118">Primary axes for all charts except the bar charts are located at the bottom (primary X-axis) and left (primary Y-axis) border of the chart area.</span></span>  
  
 <span data-ttu-id="c67ce-119">보조 축은 오른쪽 (보조 축) 및 차트 영역의 테두리 위쪽 (보조 y 축)에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-119">The secondary axes are located at the right (secondary X-axis) and top (secondary Y-axis) border of the chart area.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c67ce-120">모든 계열이 차트 영역 내에서 그린 다음이 속성을 계열 (이 경우 보조 x 축)에서 사용 하지 않는 축 형식 축 (예를 들어 기본 x 축)에 한 가지 유형의 효과가 없습니다.;만 사용 하는 경우 커서는 계열을 그리는 데 사용 되는 유일한 축에 자동으로 연결 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-120">If all series plotted within a chart area use only one type of axis (for example, the primary X-axis), then setting this property to an axis type not used by the series (in this case, the secondary X-axis) will have no effect; the cursor will automatically be attached to the only axis being used to plot the series.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c67ce-121">
            <see cref="T:System.Windows.Forms.DataVisualization.Charting.Cursor" /> 클래스에서 사용하는 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-121">Releases the resources used by the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Cursor" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c67ce-122">관리되지 않는 리소스를 확보, 해제 또는 다시 설정하는 응용 프로그램 정의 작업을 수행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-122">Performs application-defined tasks that free, release, or reset unmanaged resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="c67ce-123">관리되지 않는 리소스와 관리되는 리소스를 모두 해제하려면 <see langword="true" />이고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-123">
              <see langword="true" /> to release both unmanaged and managed resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c67ce-124">관리되지 않는 리소스와 선택적으로 관리되는 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-124">Releases unmanaged and, optionally, managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public double Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Interval" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Interval { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c67ce-125">커서 간격을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-125">Gets or sets the cursor interval.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c67ce-126">커서 간격입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-126">The cursor interval.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c67ce-127"><xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> 속성은 최종 사용자가 커서를 그릴 수 자주 방법과 위치를 결정 및 범위 선택의 시작 부분 및 끝점 그릴 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-127">The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> property determines how often and where a cursor can be drawn by an end user, as well as where the beginning and end points of a range selection can be drawn.</span></span> <span data-ttu-id="c67ce-128">값이 0 이며이 값은 기본값, 커서 또는 범위 선택 차트 영역 내에서 아무 곳 이나 그릴 수 있는지를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-128">A value of zero, which is the default value, signifies that a cursor or range selection can be drawn anywhere within a chart area.</span></span> <span data-ttu-id="c67ce-129">0이 아닌 값을 커서 또는 시작 및/또는 선택한 범위의 끝점 사용자 인터페이스에 의해 설정 된 경우 지정된 된 간격에 그릴만 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-129">A nonzero value signifies that the cursor or beginning and/or end points of a selected range will only be drawn at the specified interval when set by user interaction.</span></span>  
  
 <span data-ttu-id="c67ce-130">측정 단위에 의해 결정 됩니다는 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-130">The unit of measurement is determined by the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> property.</span></span>  
  
 <span data-ttu-id="c67ce-131">와 함께에서이 속성을 사용할 수도 있습니다는 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> 속성에서 지정된 된 간격 오프셋 값을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-131">This property can also be used in conjunction with the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> property, which allows you to specify an offset from the specified interval.</span></span> <span data-ttu-id="c67ce-132">예를 들어 매주 토요일만 표시할 커서를 허용 하려면 1 주 간격 지정 해야 합니다 함께 6 일 간격 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-132">For example, to allow a cursor to only be displayed every Saturday, an interval of 1 week should be specified, along with an interval offset of 6 days.</span></span> <span data-ttu-id="c67ce-133">.NET Framework에서 일요일은 첫 번째 요일 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-133">In .NET Framework, Sunday is considered to be the first day of the week.</span></span>  
  
 <span data-ttu-id="c67ce-134">커서 사용자 인터페이스를 설정 하 여 사용 하는 경우는 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A> 를 차트 영역 내부 속성과 마우스 클릭 하면 커서의 위치를로 설정 됩니다는 허용 가능한 위치 가장 가까운 합니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-134">If the cursor user interface is enabled by setting the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A> property, and the mouse is clicked inside a chart area, the position of the cursor will be set to the nearest allowable location.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c67ce-135"><xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> 범위 선택을 프로그래밍 방식으로 또는 커서의 위치를 설정 하는 경우 속성에 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-135">The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> property has no effect if you set the position of a cursor or range selection programmatically.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalOffset">
      <MemberSignature Language="C#" Value="public double IntervalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 IntervalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double IntervalOffset { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c67ce-136">사용자가 커서와 범위 선택을 설정하는 경우 커서와 범위 선택을 그릴 수 있는 위치에 영향을 주는 간격 오프셋을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-136">Gets or sets the interval offset, which affects where the cursor and range selection can be drawn when they are set by a user.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c67ce-137">간격 오프셋입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-137">The offset from the interval.</span>
          </span>
          <span data-ttu-id="c67ce-138">기본값은 제한이 없음을 나타내는 0이며, 음수 값도 사용할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-138">The default value is zero, which signifies no limitations, and negative values are allowed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c67ce-139"><xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> 커서 및 시작의 간격 오프셋 및/또는 범위 선택의 끝점 속성을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-139">The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> property determines the interval offset of a cursor and the beginning and/or end points of a range selection.</span></span> <span data-ttu-id="c67ce-140">와 함께에서 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> 속성을이 속성은 커서 위치를 결정 하 고 범위 차트 영역 내에 표시 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-140">In conjunction with the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> property, this property determines where a cursor and range can be displayed within a chart area.</span></span> <span data-ttu-id="c67ce-141">값의 기본 설정인 0 오프셋 없이 리터럴임을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-141">A value of zero, which is the default, signifies that there is no offset.</span></span>  
  
 <span data-ttu-id="c67ce-142">측정 단위에 의해 결정 됩니다는 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-142">The unit of measurement is determined by the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A> property.</span></span>  
  
 <span data-ttu-id="c67ce-143">오프셋 되는 커서 및 시작, 범위 선택의 끝점에 그릴 수 위치를 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-143">The offset affects the locations at which a cursor and the beginning and/or end points of a range selection can be drawn.</span></span> <span data-ttu-id="c67ce-144">예를 들어 매주 토요일만 표시할 커서를 허용 하려면 1 주 간격 지정 해야 합니다 함께 6 일 간격 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-144">For example, to allow a cursor to only be displayed every Saturday, an interval of 1 week should be specified, along with an interval offset of 6 days.</span></span> <span data-ttu-id="c67ce-145">.NET Framework에서 일요일은 첫 번째 요일 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-145">In .NET Framework, Sunday is considered to be the first day of the week.</span></span>  
  
 <span data-ttu-id="c67ce-146">커서 사용자 인터페이스를 설정 하 여 사용 하는 경우는 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A> 를 차트 영역 내부 속성과 마우스 클릭 하면 커서의 위치를로 설정 됩니다는 허용 가능한 위치 가장 가까운 합니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-146">If the cursor user interface is enabled by setting the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A> property, and the mouse is clicked inside a chart area, the position of the cursor will be set to the nearest allowable location.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c67ce-147">간격 관련 속성 또는 효과가 없습니다 범위 선택 때 커서 위치를 프로그래밍 방식으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-147">Interval-related properties have no effect when a range selection or cursor position are set programmatically.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalOffsetType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalOffsetType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalOffsetType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalOffsetType As DateTimeIntervalType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType IntervalOffsetType { System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType get(); void set(System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c67ce-148">축에 대해 선택한 범위와 커서의 간격 오프셋 유형을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-148">Gets or sets the interval offset type of a cursor and selected range for an axis.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c67ce-149">간격 오프셋의 단위를 결정하는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType" /> 열거형 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-149">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType" /> enumeration value that determines the unit of measurement for the interval offset.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c67ce-150"><xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A> 속성 형식을 사용 하 여 지정 된 간격 오프셋의 결정은 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="c67ce-150">The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A> property determines the type of interval offset, which is specified using the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> property.</span></span>  
  
 <span data-ttu-id="c67ce-151">경우는 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A> 속성이 <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto>, <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> 속성 설정이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-151">If the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A> property is set to <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto>, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> property setting will be used.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c67ce-152">간격 관련 속성 또는 효과가 없습니다 범위 선택 때 커서 위치를 프로그래밍 방식으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-152">Interval-related properties have no effect when a range selection or cursor position are set programmatically.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalType As DateTimeIntervalType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType IntervalType { System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType get(); void set(System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c67ce-153">커서와 선택한 범위 축의 간격 유형을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-153">Gets or sets the interval type for the cursor and selected range of an axis.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c67ce-154">커서와 선택한 범위 축의 간격 유형입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-154">The interval type for the cursor and selected range of an axis.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c67ce-155"><xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> 속성 형식을 사용 하 여 지정 된 간격의 결정은 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-155">The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> property determines the type of interval, which is specified using the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> property.</span></span>  
  
 <span data-ttu-id="c67ce-156">간격 형식이 <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto>로 처리 되는 간격에 대 한 측정 단위는 `double`, 하며이 값은 1 일 때 <xref:System.DateTime> 값이 지정 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-156">If the interval type is <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto>, the unit of measurement for the interval is treated as a `double`, which is equivalent to one day when <xref:System.DateTime> values are specified.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c67ce-157">간격 관련 속성 또는 효과가 없습니다 범위 선택 때 커서 위치를 프로그래밍 방식으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-157">Interval-related properties have no effect when a range selection or cursor position is set programmatically.</span></span>  
  
 <span data-ttu-id="c67ce-158">축 간격 종류는 시간을 나타내는 경우-예를 들어, 시간, 분 등-올바르게 확대/축소 기능을 활성화 하려면 다음의 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> 시간 값으로 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-158">If the axis interval type represents a time—for example, hours, minutes, and so forth—then in order to correctly enable the zooming function, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> must also be set to a time value.</span></span> <span data-ttu-id="c67ce-159">예를 들어는 ChartArea1.AxisX.IntervalType은 시간으로 표현, 하는 경우는 ChartArea1.CursorX.IntervalType 분으로 설정 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-159">For example, if the ChartArea1.AxisX.IntervalType is expressed in hours, then the ChartArea1.CursorX.IntervalType could be set to minutes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserEnabled">
      <MemberSignature Language="C#" Value="public bool IsUserEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUserEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsUserEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUserEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c67ce-160">커서 사용자 인터페이스를 사용할지 여부를 지정하는 플래그를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-160">Gets or sets a flag that enables or disables the cursor user interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c67ce-161">커서 사용자 인터페이스를 사용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-161">
              <see langword="true" /> if the cursor user interface is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserSelectionEnabled">
      <MemberSignature Language="C#" Value="public bool IsUserSelectionEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUserSelectionEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsUserSelectionEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUserSelectionEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c67ce-162">범위 선택 사용자 인터페이스를 사용할지 여부를 지정하는 플래그를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-162">Gets or sets a flag that enables or disables the range selection user interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c67ce-163">범위 선택 사용자 인터페이스를 사용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-163">
              <see langword="true" /> if the range selection user interface is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color LineColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color LineColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.LineColor" />
      <MemberSignature Language="VB.NET" Value="Public Property LineColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color LineColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Red")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c67ce-164">커서 줄 색을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-164">Gets or sets the cursor line color.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c67ce-165">커서의 선 색입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-165">The line color of the cursor.</span>
          </span>
          <span data-ttu-id="c67ce-166">기본값은 <see cref="P:System.Drawing.Color.Red" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-166">The default value is <see cref="P:System.Drawing.Color.Red" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineDashStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartDashStyle LineDashStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartDashStyle LineDashStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.LineDashStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property LineDashStyle As ChartDashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartDashStyle LineDashStyle { System::Windows::Forms::DataVisualization::Charting::ChartDashStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::ChartDashStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartDashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c67ce-167">커서 줄의 스타일을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-167">Gets or sets the style of the cursor line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c67ce-168">커서 줄의 스타일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-168">The style of the cursor line.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineWidth">
      <MemberSignature Language="C#" Value="public int LineWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.LineWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property LineWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineWidth { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c67ce-169">커서의 선 두께(픽셀)를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-169">Gets or sets the line width, in pixels, of a cursor</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c67ce-170">줄 너비(픽셀)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-170">The line width, in pixels.</span>
          </span>
          <span data-ttu-id="c67ce-171">기본값은 1입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-171">The default value is one (1).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c67ce-172">커서를 픽셀 단위로 선 두께 지정 하려면이 속성을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-172">Use this property to specify the line width, in pixels, of a cursor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public double Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.Position" />
      <MemberSignature Language="VB.NET" Value="Public Property Position As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Position { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(NaN)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.DoubleDateNanValueConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c67ce-173">커서의 위치를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-173">Gets or sets the position of a cursor.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c67ce-174">커서 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-174">The position of a cursor.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c67ce-175">이 속성 커서에도 커서 위치를 프로그래밍 방식으로 설정 하는 작업의 위치를 가져오는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-175">This property can be used to get the position of a cursor, as well as to programmatically set the cursor position.</span></span>  
  
 <span data-ttu-id="c67ce-176">기준에 따라 결정 되는 커서 속하는 축의 값으로 위치는 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-176">The position is measured as a value of the axis that the cursor belongs to, which is determined by the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A> property.</span></span> <span data-ttu-id="c67ce-177">예를 들어, 커서 X 축 상자 2000 년 1 월 1 일의 값으로이 속성을 설정 합니다. 주 복제본에 속하는 경우 축 따라 있는 2000 년 1 월 1 일 위치의 그리고 x 축 커서에서 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-177">For example, if the cursor belongs to the primary X axis, then setting this property to a value of January 1, 2000 will result in the X-axis cursor being drawn at the January 1, 2000 position along the axis.</span></span> <span data-ttu-id="c67ce-178">이 값이 존재 하지 않는 커서 표시 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-178">If this axis value does not exist, the cursor will not be displayed.</span></span>  
  
 <span data-ttu-id="c67ce-179">이 속성을 설정 하는 경우, <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> 및 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> 이 지정 된 위치에 커서가 표시 되는, 즉; 속성에는 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-179">Note that if you set this property, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> properties will have no effect; that is, the cursor will be displayed at this specified location.</span></span>  
  
 <span data-ttu-id="c67ce-180">이 속성은 발생 시 키 지 설정은 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanged> 또는 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanging> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-180">Setting this property will not raise the <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanged> or <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanging> events.</span></span>  
  
 <span data-ttu-id="c67ce-181">또는 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition%2A> 및 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition%2A> 메서드 커서 설정 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-181">Alternatively, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition%2A> methods can be used to set the cursor.</span></span>  
  
 <span data-ttu-id="c67ce-182">커서의 위치를 설정 하는 커서를 프로그래밍 방식으로 제거 하려면이 속성을 사용 <xref:System.Double.NaN>합니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-182">To programmatically remove a cursor, use this property to set the position of the cursor to <xref:System.Double.NaN>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color SelectionColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color SelectionColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color SelectionColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "LightGray")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c67ce-183">데이터 범위를 강조 표시하는 반투명 색을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-183">Gets or sets a semi-transparent color that highlights a range of data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c67ce-184">강조 표시된 범위의 색입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-184">The color of the highlighted range.</span>
          </span>
          <span data-ttu-id="c67ce-185">기본값은 알파 값이 120인 <see cref="P:System.Drawing.Color.LightGray" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-185">The default value is <see cref="P:System.Drawing.Color.LightGray" />, with an alpha value of 120.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c67ce-186">이 속성은 범위 선택 색상을 결정 하며 올바른 ARGB (알파, 빨간색, 녹색, 파랑) 값으로 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-186">This property determines the color of the range selection, and can be set to any valid ARGB (alpha, red, green, blue) value.</span></span> <span data-ttu-id="c67ce-187">투명도 수준을 결정, 알파 값을 제공 하지 않으면 120 기본 알파 값이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-187">If an alpha value, which determines the level of transparency, is not provided, a default alpha value of 120 is used.</span></span>  
  
 <span data-ttu-id="c67ce-188">사용 하 여 구현 된 X 및 Y 축 커서에 대해 선택한 색을 설정할 수 있습니다는 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> 및 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> 의 속성은 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> 개체를 각각.</span><span class="sxs-lookup"><span data-stu-id="c67ce-188">The selected color can be set for both the X and Y axis cursors, which is implemented using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> properties of the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> object, respectively.</span></span> <span data-ttu-id="c67ce-189">범위는 x 축을 따라만 선택 하는 경우는 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A> 범위는 y 축을 따라만 선택 하는 경우 x 축 커서를 사용 하는;에 대 한 값의 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A> y 축 커서 사용 되는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-189">If a range is only selected along the X-axis, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A> value for the X-axis cursor is used; if a range is only selected along the Y-axis, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A> value for the Y-axis cursor is used.</span></span> <span data-ttu-id="c67ce-190">양쪽 축 따라 범위를 선택 하는 경우는 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A> 값이 y 축 커서 선택된 된 색에도 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-190">If a range is selected along both axes, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A> value for the Y-axis cursor is also used for the selected color.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionEnd">
      <MemberSignature Language="C#" Value="public double SelectionEnd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SelectionEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionEnd As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SelectionEnd { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(NaN)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.DoubleDateNanValueConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c67ce-191">범위 선택의 끝 위치를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-191">Gets or sets the end position of a range selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c67ce-192">범위 선택의 끝 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-192">The end position of a range selection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c67ce-193">사용자는 마우스 왼쪽된 단추를 클릭 하 여 다음 마우스를 끌어 차트 영역 내에서 범위를 선택할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-193">A user can select a range within a chart area by clicking on the left mouse button and then dragging the mouse.</span></span> <span data-ttu-id="c67ce-194"><xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A> 속성 설정 해야 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-194">Note that the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A> property must also be set to `true`.</span></span> <span data-ttu-id="c67ce-195">프로그래밍 방식으로 하나를 사용 하 여 범위 선택 수 설정 또한는 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> 및 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> 속성 또는 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> 또는 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c67ce-195">In addition, a range selection can be set programmatically using either the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> properties, or the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> or <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A> methods.</span></span>  
  
 <span data-ttu-id="c67ce-196">범위 선택 끝 위치는 커서 속해 있는 축의 값으로 계산 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-196">The end position of a range selection is calculated as a value of the axis to which the cursor belongs.</span></span> <span data-ttu-id="c67ce-197">예를 들어, 커서 기본 x 축에 속하며 설정한는 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> 2000 년 12 월 31 일의 값에 대 한 속성의 선택된 영역 끝 따라에 발생 합니다 년 12 월 31, 2000 기본 X 축 합니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-197">For example, if the cursor belongs to the primary X-axis, and you set the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> property to a value of December 31, 2000, the end of the selected area will occur at December 31, 2000 along the primary X axis.</span></span>  
  
 <span data-ttu-id="c67ce-198">범위의 시작 점과 끝 설정 범위 선택을 프로그래밍 방식으로 제거 하려면 <xref:System.Double.NaN> 를 사용 하는 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> 및 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> 속성 또는 사용 하 여는 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c67ce-198">To programmatically remove a range selection, set the beginning and end points of the range to <xref:System.Double.NaN> using the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> properties, or use the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionStart">
      <MemberSignature Language="C#" Value="public double SelectionStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SelectionStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionStart As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SelectionStart { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(NaN)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.DoubleDateNanValueConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c67ce-199">커서 범위 선택의 시작 위치를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-199">Gets or sets the start position of a cursor's selected range.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c67ce-200">커서 범위 선택의 시작 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-200">The start position of a cursor’s selected range.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c67ce-201">사용자는 마우스 왼쪽된 단추를 클릭 하 고 다음 마우스를 끌어 커서 위치를 이동 하 여 범위를 선택할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-201">A user can select a range by clicking on the left mouse button and then moving the cursor position by dragging the mouse.</span></span> <span data-ttu-id="c67ce-202"><xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A> 속성 설정 해야 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-202">Note that the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A> property must also be set to `true`.</span></span> <span data-ttu-id="c67ce-203">프로그래밍 방식으로 하나를 사용 하 여 범위 선택 수 설정 또한는 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> 및 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> 속성 또는 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> 또는 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c67ce-203">In addition, a range selection can be set programmatically using either the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> properties, or the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> or <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A> methods.</span></span>  
  
 <span data-ttu-id="c67ce-204">범위 선택 시작 위치는 커서 속해 있는 축의 값으로 계산 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-204">The start position of a range selection is calculated as a value of the axis to which the cursor belongs.</span></span> <span data-ttu-id="c67ce-205">예를 들어, 커서 기본 x 축에 속하며 설정한는 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> 속성 2000 년 1 월 1 일의 값을 선택 영역의 시작 부분 따라에 발생 합니다 2000 년 1 월 1 일의 기본 X 축 합니다.</span><span class="sxs-lookup"><span data-stu-id="c67ce-205">For example, if the cursor belongs to the primary X-axis, and you set the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> property to a value of January 1, 2000, the beginning of the selected area will occur at January 1, 2000 along the primary X axis.</span></span>  
  
 <span data-ttu-id="c67ce-206">범위의 시작 점과 끝 설정 범위 선택을 프로그래밍 방식으로 제거 하려면 <xref:System.Double.NaN> 를 사용 하는 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> 및 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> 속성 또는 사용 하 여는 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c67ce-206">To programmatically remove a range selection, set the beginning and end points of the range to <xref:System.Double.NaN> using the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> properties, or use the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCursorPixelPosition">
      <MemberSignature Language="C#" Value="public void SetCursorPixelPosition (System.Drawing.PointF point, bool roundToBoundary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCursorPixelPosition(valuetype System.Drawing.PointF point, bool roundToBoundary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition(System.Drawing.PointF,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCursorPixelPosition (point As PointF, roundToBoundary As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCursorPixelPosition(System::Drawing::PointF point, bool roundToBoundary);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
        <Parameter Name="roundToBoundary" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="c67ce-207">커서를 그릴 위치를 지정하는 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-207">A <see cref="T:System.Drawing.PointF" /> structure that specifies where the cursor will be drawn.</span>
          </span>
        </param>
        <param name="roundToBoundary">
          <span data-ttu-id="c67ce-208">
            <see langword="true" />이면 지정된 위치가 <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" /> 개체 안에 속하지 않는 경우 가장 가까운 차트 영역 경계를 따라 커서를 그립니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-208">If <see langword="true" />, the cursor will be drawn along the nearest chart area boundary, if the specified position does not fall within a <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c67ce-209">지정된 위치에 커서를 표시합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-209">Displays a cursor at the specified position.</span>
          </span>
          <span data-ttu-id="c67ce-210">픽셀 단위입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-210">Measured in pixels.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCursorPosition">
      <MemberSignature Language="C#" Value="public void SetCursorPosition (double newPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCursorPosition(float64 newPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCursorPosition (newPosition As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCursorPosition(double newPosition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newPosition" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="newPosition">
          <span data-ttu-id="c67ce-211">커서의 새 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-211">The new position of the cursor.</span>
          </span>
          <span data-ttu-id="c67ce-212">관련 축상의 값으로 측정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-212">Measured as a value along the relevant axis.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c67ce-213">지정된 축 값의 차트 영역 내에 커서의 위치를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-213">Sets the position of a cursor within a chart area at the specified axis value.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSelectionPixelPosition">
      <MemberSignature Language="C#" Value="public void SetSelectionPixelPosition (System.Drawing.PointF startPoint, System.Drawing.PointF endPoint, bool roundToBoundary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSelectionPixelPosition(valuetype System.Drawing.PointF startPoint, valuetype System.Drawing.PointF endPoint, bool roundToBoundary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition(System.Drawing.PointF,System.Drawing.PointF,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSelectionPixelPosition (startPoint As PointF, endPoint As PointF, roundToBoundary As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSelectionPixelPosition(System::Drawing::PointF startPoint, System::Drawing::PointF endPoint, bool roundToBoundary);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPoint" Type="System.Drawing.PointF" />
        <Parameter Name="endPoint" Type="System.Drawing.PointF" />
        <Parameter Name="roundToBoundary" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPoint">
          <span data-ttu-id="c67ce-214">범위 선택이 시작되는 위치를 지정하는 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-214">A <see cref="T:System.Drawing.PointF" /> structure that specifies where the range selection begins.</span>
          </span>
        </param>
        <param name="endPoint">
          <span data-ttu-id="c67ce-215">범위 선택이 끝나는 위치를 지정하는 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-215">A <see cref="T:System.Drawing.PointF" /> structure that specifies where the range selection ends.</span>
          </span>
        </param>
        <param name="roundToBoundary">
          <span data-ttu-id="c67ce-216">
            <see langword="true" />이면 지정된 위치가 <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" /> 개체 안에 속하지 않는 경우 시작 점과 끝 점을 가장 가까운 차트 영역 경계로 반올림합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-216">If <see langword="true" />, the start and end points will be rounded to the nearest chart area boundary if the specified positions do not fall within a <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c67ce-217">범위 선택의 시작 및 끝 위치를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-217">Sets the start and end positions of a range selection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSelectionPosition">
      <MemberSignature Language="C#" Value="public void SetSelectionPosition (double newStart, double newEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSelectionPosition(float64 newStart, float64 newEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSelectionPosition (newStart As Double, newEnd As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSelectionPosition(double newStart, double newEnd);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newStart" Type="System.Double" />
        <Parameter Name="newEnd" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="newStart">
          <span data-ttu-id="c67ce-218">범위 선택의 새 시작 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-218">The new start position of the range selection.</span>
          </span>
          <span data-ttu-id="c67ce-219">관련 축상의 값으로 측정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-219">Measured as a value along the relevant axis.</span>
          </span>
        </param>
        <param name="newEnd">
          <span data-ttu-id="c67ce-220">범위 선택의 새 끝 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-220">The new end position of the range selection.</span>
          </span>
          <span data-ttu-id="c67ce-221">관련 축상의 값으로 측정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-221">Measured as a value along the relevant axis.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c67ce-222">지정된 축 값의 차트 영역 내에 선택한 범위의 위치를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c67ce-222">Sets the position of a selected range within a chart area at the specified axis values.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>