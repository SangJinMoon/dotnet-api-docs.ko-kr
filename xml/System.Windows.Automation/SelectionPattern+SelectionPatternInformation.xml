<Type Name="SelectionPattern+SelectionPatternInformation" FullName="System.Windows.Automation.SelectionPattern+SelectionPatternInformation">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c007e9be88c091482324079cf301fb5286d4d103" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51887072" /></Metadata><TypeSignature Language="C#" Value="public struct SelectionPattern.SelectionPatternInformation" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit SelectionPattern/SelectionPatternInformation extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.SelectionPattern.SelectionPatternInformation" />
  <TypeSignature Language="VB.NET" Value="Public Structure SelectionPattern.SelectionPatternInformation" />
  <TypeSignature Language="C++ CLI" Value="public: value class SelectionPattern::SelectionPatternInformation" />
  <TypeSignature Language="F#" Value="type SelectionPattern.SelectionPatternInformation = struct" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="57f7c-101">속성 값에 액세스할 수는 <see cref="T:System.Windows.Automation.SelectionPattern" /> 개체를 사용 하 여 해당 <see cref="P:System.Windows.Automation.SelectionPattern.Current" /> 또는 <see cref="P:System.Windows.Automation.SelectionPattern.Cached" /> 접근자입니다.</span><span class="sxs-lookup"><span data-stu-id="57f7c-101">Provides access to the property values of a <see cref="T:System.Windows.Automation.SelectionPattern" /> object using its <see cref="P:System.Windows.Automation.SelectionPattern.Current" /> or <see cref="P:System.Windows.Automation.SelectionPattern.Cached" /> accessors.</span></span></summary>
    <remarks>To be added.</remarks>
    <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-overview.md"><span data-ttu-id="57f7c-102">UI 자동화 컨트롤 패턴 개요</span><span class="sxs-lookup"><span data-stu-id="57f7c-102">UI Automation Control Patterns Overview</span></span></related>
    <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-for-clients.md"><span data-ttu-id="57f7c-103">클라이언트용 UI 자동화 컨트롤 패턴</span><span class="sxs-lookup"><span data-stu-id="57f7c-103">UI Automation Control Patterns for Clients</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/ec722dff-6009-4279-b86a-e18d3fa94ebf"><span data-ttu-id="57f7c-104">UI 자동화의 캐싱 사용</span><span class="sxs-lookup"><span data-stu-id="57f7c-104">Use Caching in UI Automation</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="CanSelectMultiple">
      <MemberSignature Language="C#" Value="public bool CanSelectMultiple { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSelectMultiple" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.SelectionPattern.SelectionPatternInformation.CanSelectMultiple" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanSelectMultiple As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanSelectMultiple { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSelectMultiple : bool" Usage="System.Windows.Automation.SelectionPattern.SelectionPatternInformation.CanSelectMultiple" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57f7c-105">컨테이너에서 둘 이상의 자식 요소를 동시에 선택할 수 있는지 여부를 지정하는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="57f7c-105">Gets a value that specifies whether the container allows more than one child element to be selected concurrently.</span></span></summary>
        <value><span data-ttu-id="57f7c-106">컨트롤에서 다중 선택을 지원하면 <see langword="true" /> 이고, 그러지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="57f7c-106"><see langword="true" /> if the control supports multiple selection; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57f7c-107">컨트롤을 여러 항목을 초기화에서 선택할 수 있지만 이후에 되도록 하나의 선택 항목만 허용 가능할 수,이 속성은 드문 경우에 예를 들어 동적 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57f7c-107">This property can be dynamic For example, in rare cases, a control might allow multiple items to be selected on initialization, but subsequently allow only single selections to be made.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57f7c-108">다음 예제에서는 <xref:System.Windows.Automation.SelectionPattern> 컨트롤 패턴에서 가져온는 <xref:System.Windows.Automation.AutomationElement> 을 사용 하 여 속성 값을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="57f7c-108">In the following example, a <xref:System.Windows.Automation.SelectionPattern> control pattern is obtained from an <xref:System.Windows.Automation.AutomationElement> and subsequently used to retrieve property values.</span></span>  
  
 [!code-csharp[UIASelectionPattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIASelectionPattern_snip/CSharp/UIASelectionPattern_snippets.cs#101)]
 [!code-vb[UIASelectionPattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIASelectionPattern_snip/VisualBasic/UIASelectionPattern_snippets.vb#101)]  
[!code-csharp[UIASelectionPattern_snip#104](~/samples/snippets/csharp/VS_Snippets_Wpf/UIASelectionPattern_snip/CSharp/UIASelectionPattern_snippets.cs#104)]
[!code-vb[UIASelectionPattern_snip#104](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIASelectionPattern_snip/VisualBasic/UIASelectionPattern_snippets.vb#104)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelection">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement[] GetSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement[] GetSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.SelectionPattern.SelectionPatternInformation.GetSelection" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSelection () As AutomationElement()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Automation::AutomationElement ^&gt; ^ GetSelection();" />
      <MemberSignature Language="F#" Value="member this.GetSelection : unit -&gt; System.Windows.Automation.AutomationElement[]" Usage="selectionPatternInformation.GetSelection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="57f7c-109">선택 컨테이너에서 선택 된 모든 항목을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="57f7c-109">Retrieves all items in the selection container that are selected.</span></span></summary>
        <returns><span data-ttu-id="57f7c-110">선택한 항목의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="57f7c-110">The collection of selected items.</span></span> <span data-ttu-id="57f7c-111">기본값은 빈 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="57f7c-111">The default is an empty array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="57f7c-112">다음 예제에서는 컬렉션에서에서 <xref:System.Windows.Automation.AutomationElement>컨테이너에서 선택한 항목을 나타내는 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="57f7c-112">In the following example, a collection of <xref:System.Windows.Automation.AutomationElement>s representing the selected items in a selection container is obtained.</span></span>  
  
 [!code-csharp[UIASelectionPattern_snip#1025](~/samples/snippets/csharp/VS_Snippets_Wpf/UIASelectionPattern_snip/CSharp/UIASelectionPattern_snippets.cs#1025)]
 [!code-vb[UIASelectionPattern_snip#1025](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIASelectionPattern_snip/VisualBasic/UIASelectionPattern_snippets.vb#1025)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionRequired">
      <MemberSignature Language="C#" Value="public bool IsSelectionRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSelectionRequired" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.SelectionPattern.SelectionPatternInformation.IsSelectionRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSelectionRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSelectionRequired { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSelectionRequired : bool" Usage="System.Windows.Automation.SelectionPattern.SelectionPatternInformation.IsSelectionRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57f7c-113">컨테이너 하나 이상의 자식 항목을 선택해야 하는지 여부를 지정하는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="57f7c-113">Gets a value that specifies whether the container requires at least one child item to be selected.</span></span></summary>
        <value><span data-ttu-id="57f7c-114">컨트롤에서 하나 이상의 항목을 선택해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="57f7c-114"><see langword="true" /> if the control requires at least one item to be selected; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57f7c-115">이 속성은 동적일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57f7c-115">This property can be dynamic.</span></span> <span data-ttu-id="57f7c-116">예를 들어, 컨트롤의 초기 상태에서 기본적으로 항목이 선택되지 않을 수 있으며 이는 <xref:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired%2A> 가 `false`임을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="57f7c-116">For example, the initial state of a control might not have any items selected by default, indicating that <xref:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired%2A> is `false`.</span></span> <span data-ttu-id="57f7c-117">그러나 항목이 선택된 후에는 컨트롤에 하나 이상의 항목이 항상 선택되어 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57f7c-117">However, after an item is selected, the control must always have at least one item selected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57f7c-118">다음 예제에서는 <xref:System.Windows.Automation.SelectionPattern> 컨트롤 패턴에서 가져온는 <xref:System.Windows.Automation.AutomationElement> 을 사용 하 여 속성 값을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="57f7c-118">In the following example, a <xref:System.Windows.Automation.SelectionPattern> control pattern is obtained from an <xref:System.Windows.Automation.AutomationElement> and subsequently used to retrieve property values.</span></span>  
  
 [!code-csharp[UIASelectionPattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIASelectionPattern_snip/CSharp/UIASelectionPattern_snippets.cs#101)]
 [!code-vb[UIASelectionPattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIASelectionPattern_snip/VisualBasic/UIASelectionPattern_snippets.vb#101)]  
[!code-csharp[UIASelectionPattern_snip#104](~/samples/snippets/csharp/VS_Snippets_Wpf/UIASelectionPattern_snip/CSharp/UIASelectionPattern_snippets.cs#104)]
[!code-vb[UIASelectionPattern_snip#104](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIASelectionPattern_snip/VisualBasic/UIASelectionPattern_snippets.vb#104)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>