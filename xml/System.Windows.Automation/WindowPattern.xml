<Type Name="WindowPattern" FullName="System.Windows.Automation.WindowPattern">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c258c5612d24358d4730a4168d8e3ef48d45a434" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30619307" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WindowPattern : System.Windows.Automation.BasePattern" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WindowPattern extends System.Windows.Automation.BasePattern" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.WindowPattern" />
  <TypeSignature Language="VB.NET" Value="Public Class WindowPattern&#xA;Inherits BasePattern" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowPattern : System::Windows::Automation::BasePattern" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Automation.BasePattern</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="8cedb-101">기존 GUI(그래픽 사용자 인터페이스) 내에서 기본적인 창 기반 기능을 제공하는 컨트롤을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8cedb-101">Represents a control that provides fundamental window-based functionality within a traditional graphical user interface (GUI).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cedb-102">이 컨트롤 패턴을 지 원하는 컨트롤의 예로 최상위 응용 프로그램 창 [!INCLUDE[TLA#tla_mdi](~/includes/tlasharptla-mdi-md.md)] 자식 창, 모달 대화 상자 및 풍선 도움말 창이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-102">Examples of controls that support this control pattern include top-level application windows, [!INCLUDE[TLA#tla_mdi](~/includes/tlasharptla-mdi-md.md)] child windows, modal dialogs and balloon help windows.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.Provider.IWindowProvider" />
  </Docs>
  <Members>
    <Member MemberName="Cached">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.WindowPattern.WindowPatternInformation Cached { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.WindowPattern/WindowPatternInformation Cached" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.WindowPattern.Cached" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cached As WindowPattern.WindowPatternInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::WindowPattern::WindowPatternInformation Cached { System::Windows::Automation::WindowPattern::WindowPatternInformation get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.WindowPattern+WindowPatternInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8cedb-103">이 <see cref="T:System.Windows.Automation.WindowPattern" />에 대해 캐시된 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 속성 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cedb-103">Gets the cached [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] property values for this <see cref="T:System.Windows.Automation.WindowPattern" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8cedb-104">컨트롤 패턴에 대해 캐시된 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 속성 값을 포함하는 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cedb-104">A structure containing the cached [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] property values for the control pattern.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cedb-105">캐시 된 속성 값 해야 이전에 요청 된 사용 하는 <xref:System.Windows.Automation.CacheRequest>합니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-105">Cached property values must have been previously requested using a <xref:System.Windows.Automation.CacheRequest>.</span></span> <span data-ttu-id="8cedb-106">사용 하 여 <xref:System.Windows.Automation.WindowPattern.Current%2A> 속성의 현재 값을 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-106">Use <xref:System.Windows.Automation.WindowPattern.Current%2A> to get the current value of a property.</span></span>  
  
 <span data-ttu-id="8cedb-107">사용 가능한 속성 및 사용에 대 한 자세한 내용은 참조 하십시오. <xref:System.Windows.Automation.WindowPattern.WindowPatternInformation>합니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-107">For information on the properties available and their use, see <xref:System.Windows.Automation.WindowPattern.WindowPatternInformation>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8cedb-108">요청한 속성이 캐시에 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cedb-108">The requested property is not in the cache.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanMaximizeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty CanMaximizeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty CanMaximizeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.WindowPattern.CanMaximizeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CanMaximizeProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ CanMaximizeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8cedb-109">
            <see cref="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.CanMaximize" /> 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cedb-109">Identifies the <see cref="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.CanMaximize" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cedb-110">이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-110">This identifier is used by UI Automation client applications.</span></span> <span data-ttu-id="8cedb-111">UI 자동화 공급자의 해당 필드를 사용 해야 <xref:System.Windows.Automation.WindowPatternIdentifiers>합니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-111">UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.WindowPatternIdentifiers>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8cedb-112">다음 예제에서는 루트 요소는 루트의 하위 항목 및 속성 조건 집합을 만족 하는 자동화 요소의 컬렉션을 반환 하는 함수에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-112">In the following example, a root element is passed to a function that returns a collection of automation elements that are descendants of the root and satisfy a set of property conditions.</span></span>  
  
 [!code-csharp[UIAWindowPattern_snip#100](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAWindowPattern_snip/CSharp/UIAWindowPattern_snippets.cs#100)]
 [!code-vb[UIAWindowPattern_snip#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAWindowPattern_snip/VisualBasic/UIAWindowPattern_snippets.vb#100)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanMinimizeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty CanMinimizeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty CanMinimizeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.WindowPattern.CanMinimizeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CanMinimizeProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ CanMinimizeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8cedb-113">
            <see cref="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.CanMinimize" /> 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cedb-113">Identifies the <see cref="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.CanMinimize" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cedb-114">이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-114">This identifier is used by UI Automation client applications.</span></span> <span data-ttu-id="8cedb-115">UI 자동화 공급자의 해당 필드를 사용 해야 <xref:System.Windows.Automation.WindowPatternIdentifiers>합니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-115">UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.WindowPatternIdentifiers>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8cedb-116">다음 예제에서는 루트 요소는 루트의 하위 항목 및 속성 조건 집합을 만족 하는 자동화 요소의 컬렉션을 반환 하는 함수에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-116">In the following example, a root element is passed to a function that returns a collection of automation elements that are descendants of the root and satisfy a set of property conditions.</span></span>  
  
 [!code-csharp[UIAWindowPattern_snip#100](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAWindowPattern_snip/CSharp/UIAWindowPattern_snippets.cs#100)]
 [!code-vb[UIAWindowPattern_snip#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAWindowPattern_snip/VisualBasic/UIAWindowPattern_snippets.vb#100)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.WindowPattern.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8cedb-117">현재 창을 닫으려고 시도합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cedb-117">Attempts to close the current window.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cedb-118">분할 창 컨트롤에서 호출 되 면이 메서드 창을 닫으려면 하 고 연결된 된 분할을 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-118">When called on a split pane control, this method will close the pane and remove the associated split.</span></span> <span data-ttu-id="8cedb-119">이 메서드에서 구현에 따라 다른 모든 창의 닫을 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-119">This method may also close all other panes depending on implementation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8cedb-120">다음 예제에서는 <xref:System.Windows.Automation.WindowPattern> 컨트롤 패턴에서 가져온는 <xref:System.Windows.Automation.AutomationElement> 이후에를 사용 하 고는 <xref:System.Windows.Automation.AutomationElement>합니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-120">In the following example, a <xref:System.Windows.Automation.WindowPattern> control pattern is obtained from an <xref:System.Windows.Automation.AutomationElement> and is subsequently used to close the <xref:System.Windows.Automation.AutomationElement>.</span></span>  
  
 [!code-csharp[UIAWindowPattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAWindowPattern_snip/CSharp/UIAWindowPattern_snippets.cs#101)]
 [!code-vb[UIAWindowPattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAWindowPattern_snip/VisualBasic/UIAWindowPattern_snippets.vb#101)]  
[!code-csharp[UIAWindowPattern_snip#102](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAWindowPattern_snip/CSharp/UIAWindowPattern_snippets.cs#102)]
[!code-vb[UIAWindowPattern_snip#102](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAWindowPattern_snip/VisualBasic/UIAWindowPattern_snippets.vb#102)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8cedb-121">컨트롤이 요청한 작업을 수행할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cedb-121">The control is unable to perform the requested action.</span>
          </span>
        </exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
          <span data-ttu-id="8cedb-122">컨트롤을 더 이상 사용할 수 없을 때입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cedb-122">When the control is no longer available.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.WindowPattern.WindowPatternInformation Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.WindowPattern/WindowPatternInformation Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.WindowPattern.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As WindowPattern.WindowPatternInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::WindowPattern::WindowPatternInformation Current { System::Windows::Automation::WindowPattern::WindowPatternInformation get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.WindowPattern+WindowPatternInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8cedb-123">이 <see cref="T:System.Windows.Automation.WindowPattern" />의 현재 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 속성 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cedb-123">Gets the current [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] property values for this <see cref="T:System.Windows.Automation.WindowPattern" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8cedb-124">컨트롤 패턴에 대한 현재 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 속성 값을 포함하는 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cedb-124">A structure containing the current [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] property values for the control pattern.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cedb-125">이 패턴에서 가져와야는 <xref:System.Windows.Automation.AutomationElement> 와 <xref:System.Windows.Automation.AutomationElementMode.Full> 현재 값을 가져오기 위해 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-125">This pattern must be from an <xref:System.Windows.Automation.AutomationElement> with an <xref:System.Windows.Automation.AutomationElementMode.Full> reference in order to get current values.</span></span> <span data-ttu-id="8cedb-126">경우는 <xref:System.Windows.Automation.AutomationElement> 사용 하 여 가져왔습니다 <xref:System.Windows.Automation.AutomationElementMode.None>만 캐시 데이터를 포함 하 고 모든 속성의 현재 값을 가져오려고 하면 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-126">If the <xref:System.Windows.Automation.AutomationElement> was obtained using <xref:System.Windows.Automation.AutomationElementMode.None>, it contains only cached data, and attempting to get the current value of any property raises an exception.</span></span> <span data-ttu-id="8cedb-127">사용 하 여 <xref:System.Windows.Automation.WindowPattern.Cached%2A> 를 사용 하 여 이전에 지정 된 속성의 캐시 된 값을 가져올 수는 <xref:System.Windows.Automation.CacheRequest>합니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-127">Use <xref:System.Windows.Automation.WindowPattern.Cached%2A> to get the cached value of a property that was previously specified using a <xref:System.Windows.Automation.CacheRequest>.</span></span>  
  
 <span data-ttu-id="8cedb-128">사용 가능한 속성 및 사용에 대 한 자세한 내용은 참조 하십시오. <xref:System.Windows.Automation.WindowPattern.WindowPatternInformation>합니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-128">For information on the properties available and their use, see <xref:System.Windows.Automation.WindowPattern.WindowPatternInformation>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsModalProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsModalProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsModalProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.WindowPattern.IsModalProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsModalProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsModalProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8cedb-129">
            <see cref="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.IsModal" /> 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cedb-129">Identifies the <see cref="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.IsModal" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cedb-130">이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-130">This identifier is used by UI Automation client applications.</span></span> <span data-ttu-id="8cedb-131">UI 자동화 공급자의 해당 필드를 사용 해야 <xref:System.Windows.Automation.WindowPatternIdentifiers>합니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-131">UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.WindowPatternIdentifiers>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8cedb-132">다음 예제에서는 루트 요소는 루트의 하위 항목 및 속성 조건 집합을 만족 하는 자동화 요소의 컬렉션을 반환 하는 함수에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-132">In the following example, a root element is passed to a function that returns a collection of automation elements that are descendants of the root and satisfy a set of property conditions.</span></span>  
  
 [!code-csharp[UIAWindowPattern_snip#100](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAWindowPattern_snip/CSharp/UIAWindowPattern_snippets.cs#100)]
 [!code-vb[UIAWindowPattern_snip#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAWindowPattern_snip/VisualBasic/UIAWindowPattern_snippets.vb#100)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTopmostProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsTopmostProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsTopmostProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.WindowPattern.IsTopmostProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTopmostProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsTopmostProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8cedb-133">
            <see cref="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.IsTopmost" /> 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cedb-133">Identifies the <see cref="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.IsTopmost" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cedb-134">이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-134">This identifier is used by UI Automation client applications.</span></span> <span data-ttu-id="8cedb-135">UI 자동화 공급자의 해당 필드를 사용 해야 <xref:System.Windows.Automation.WindowPatternIdentifiers>합니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-135">UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.WindowPatternIdentifiers>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8cedb-136">다음 예제에서는 루트 요소는 루트의 하위 항목 및 속성 조건 집합을 만족 하는 자동화 요소의 컬렉션을 반환 하는 함수에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-136">In the following example, a root element is passed to a function that returns a collection of automation elements that are descendants of the root and satisfy a set of property conditions.</span></span>  
  
 [!code-csharp[UIAWindowPattern_snip#100](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAWindowPattern_snip/CSharp/UIAWindowPattern_snippets.cs#100)]
 [!code-vb[UIAWindowPattern_snip#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAWindowPattern_snip/VisualBasic/UIAWindowPattern_snippets.vb#100)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pattern">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationPattern Pattern;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationPattern Pattern" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.WindowPattern.Pattern" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Pattern As AutomationPattern " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationPattern ^ Pattern;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationPattern</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8cedb-137">
            <see cref="T:System.Windows.Automation.WindowPattern" /> 컨트롤 패턴을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cedb-137">Identifies the <see cref="T:System.Windows.Automation.WindowPattern" /> control pattern.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cedb-138">이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-138">This identifier is used by UI Automation client applications.</span></span> <span data-ttu-id="8cedb-139">UI 자동화 공급자의 해당 필드를 사용 해야 <xref:System.Windows.Automation.WindowPatternIdentifiers>합니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-139">UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.WindowPatternIdentifiers>.</span></span>  
  
 <span data-ttu-id="8cedb-140">패턴 식별자를 같은 메서드에 전달 <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> 지정 된 위치에서 원하는 컨트롤 패턴을 검색할 <xref:System.Windows.Automation.AutomationElement>합니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-140">The pattern identifier is passed to methods such as <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> to retrieve the control pattern of interest from the specified <xref:System.Windows.Automation.AutomationElement>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8cedb-141">다음 예제에서는 <xref:System.Windows.Automation.WindowPattern> 컨트롤 패턴에서 가져온는 <xref:System.Windows.Automation.AutomationElement>합니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-141">In the following example, a <xref:System.Windows.Automation.WindowPattern> control pattern is obtained from an <xref:System.Windows.Automation.AutomationElement>.</span></span>  
  
 [!code-csharp[UIAWindowPattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAWindowPattern_snip/CSharp/UIAWindowPattern_snippets.cs#101)]
 [!code-vb[UIAWindowPattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAWindowPattern_snip/VisualBasic/UIAWindowPattern_snippets.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWindowVisualState">
      <MemberSignature Language="C#" Value="public void SetWindowVisualState (System.Windows.Automation.WindowVisualState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWindowVisualState(valuetype System.Windows.Automation.WindowVisualState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.WindowPattern.SetWindowVisualState(System.Windows.Automation.WindowVisualState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetWindowVisualState (state As WindowVisualState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetWindowVisualState(System::Windows::Automation::WindowVisualState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Windows.Automation.WindowVisualState" />
      </Parameters>
      <Docs>
        <param name="state">
          <span data-ttu-id="8cedb-142">창의 요청된 <see cref="T:System.Windows.Automation.WindowVisualState" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cedb-142">The requested <see cref="T:System.Windows.Automation.WindowVisualState" /> of the window.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cedb-143">창의 <see cref="T:System.Windows.Automation.WindowVisualState" />를 변경합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cedb-143">Changes the <see cref="T:System.Windows.Automation.WindowVisualState" /> of the window.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8cedb-144">다음 예제에서는 <xref:System.Windows.Automation.WindowPattern> 컨트롤 패턴에서 가져온는 <xref:System.Windows.Automation.AutomationElement> 사용의 시각적 상태를 지정 하는 <xref:System.Windows.Automation.AutomationElement>합니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-144">In the following example, a <xref:System.Windows.Automation.WindowPattern> control pattern is obtained from an <xref:System.Windows.Automation.AutomationElement> and is subsequently used to specify the visual state of the <xref:System.Windows.Automation.AutomationElement>.</span></span>  
  
 [!code-csharp[UIAWindowPattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAWindowPattern_snip/CSharp/UIAWindowPattern_snippets.cs#101)]
 [!code-vb[UIAWindowPattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAWindowPattern_snip/VisualBasic/UIAWindowPattern_snippets.vb#101)]  
[!code-csharp[UIAWindowPattern_snip#103](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAWindowPattern_snip/CSharp/UIAWindowPattern_snippets.cs#103)]
[!code-vb[UIAWindowPattern_snip#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAWindowPattern_snip/VisualBasic/UIAWindowPattern_snippets.vb#103)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8cedb-145">컨트롤이 요청된 동작을 지원하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cedb-145">A control does not support a requested behavior.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitForInputIdle">
      <MemberSignature Language="C#" Value="public bool WaitForInputIdle (int milliseconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool WaitForInputIdle(int32 milliseconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.WindowPattern.WaitForInputIdle(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForInputIdle (milliseconds As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool WaitForInputIdle(int milliseconds);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="milliseconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="milliseconds">
          <span data-ttu-id="8cedb-146">연결된 프로세스가 유휴 상태가 될 때까지 대기하는 시간(밀리초)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cedb-146">The amount of time, in milliseconds, to wait for the associated process to become idle.</span>
          </span>
          <span data-ttu-id="8cedb-147">최대값은 <see cref="F:System.Int32.MaxValue" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cedb-147">The maximum is <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cedb-148">지정된 시간 동안 또는 연결된 프로세스가 유휴 상태가 될 때까지 중 먼저 완료되는 시간 동안 코드 호출을 차단합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cedb-148">Causes the calling code to block for the specified time or until the associated process enters an idle state, whichever completes first.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cedb-149">유휴 상태가 되었으면 <see langword="true" />이고, 제한 시간이 초과되었으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cedb-149">
              <see langword="true" /> if the window has entered the idle state; <see langword="false" /> if the timeout occurred.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cedb-150">이 메서드는 일반적으로의 처리와 함께 사용 된 <xref:System.Windows.Automation.WindowPatternIdentifiers.WindowOpenedEvent>합니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-150">This method is typically used in conjunction with the handling of a <xref:System.Windows.Automation.WindowPatternIdentifiers.WindowOpenedEvent>.</span></span>  
  
 <span data-ttu-id="8cedb-151">구현에서는 기본 응용 프로그램 프레임 워크;에 따라 달라 집니다. 따라서이 메서드는 일정 시간 후 창이 되어 사용자 입력에 대 한 준비를 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-151">The implementation is dependent on the underlying application framework; therefore this method may return some time after the window is ready for user input.</span></span> <span data-ttu-id="8cedb-152">이 메서드는 창이 유휴 상태가 된 시점을 정확히 확인할를 호출 하는 코드 되지는지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-152">The calling code should not rely on this method to ascertain exactly when the window has become idle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8cedb-153">다음 예제에서는 <xref:System.Windows.Automation.WindowPattern> 컨트롤 패턴에서 가져온는 <xref:System.Windows.Automation.AutomationElement> 사용 하 여 <xref:System.Windows.Automation.WindowPattern.WaitForInputIdle%2A> 요소는 적절 한 시간 내에서 사용자 상호 작용에 대 한 준비를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-153">In the following example, a <xref:System.Windows.Automation.WindowPattern> control pattern is obtained from an <xref:System.Windows.Automation.AutomationElement> and uses <xref:System.Windows.Automation.WindowPattern.WaitForInputIdle%2A> to confirm the element is ready for user interaction within a reasonable amount of time.</span></span>  
  
 [!code-csharp[UIAWindowPattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAWindowPattern_snip/CSharp/UIAWindowPattern_snippets.cs#101)]
 [!code-vb[UIAWindowPattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAWindowPattern_snip/VisualBasic/UIAWindowPattern_snippets.vb#101)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8cedb-154">전달된 매개 변수가 유효한 숫자가 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cedb-154">The parameter passed in is not a valid number.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WindowClosedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent WindowClosedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent WindowClosedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.WindowPattern.WindowClosedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly WindowClosedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ WindowClosedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8cedb-155">창이 닫힐 때 발생하는 이벤트를 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cedb-155">Identifies the event that is raised when a window is closed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cedb-156">클라이언트 응용 프로그램에 대 한 수신 대기 하도록 할 수 <xref:System.Windows.Automation.WindowPattern.WindowClosedEvent> 창에서 제거 하므로 캐시 된 개체에서의 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 종결 되는 즉시 보기 구조를 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-156">A client application may need to listen for <xref:System.Windows.Automation.WindowPattern.WindowClosedEvent> from a cached object since a window is removed from the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] control view structure immediately upon being closed.</span></span>  
  
 <span data-ttu-id="8cedb-157">이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-157">This identifier is used by UI Automation client applications.</span></span> <span data-ttu-id="8cedb-158">UI 자동화 공급자의 해당 필드를 사용 해야 <xref:System.Windows.Automation.WindowPatternIdentifiers>합니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-158">UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.WindowPatternIdentifiers>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8cedb-159">다음 예제에서는 이벤트 수신기를 선언 및 <xref:System.Windows.Automation.AutomationEventHandler> 대리자에 대해 지정 된 <xref:System.Windows.Automation.WindowPattern.WindowOpenedEvent> 및 <xref:System.Windows.Automation.WindowPattern.WindowClosedEvent> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-159">In the following example, event listeners are declared and an <xref:System.Windows.Automation.AutomationEventHandler> delegate is specified for <xref:System.Windows.Automation.WindowPattern.WindowOpenedEvent> and <xref:System.Windows.Automation.WindowPattern.WindowClosedEvent> events.</span></span>  
  
 [!code-csharp[UIAWindowPattern_snip#104](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAWindowPattern_snip/CSharp/UIAWindowPattern_snippets.cs#104)]
 [!code-vb[UIAWindowPattern_snip#104](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAWindowPattern_snip/VisualBasic/UIAWindowPattern_snippets.vb#104)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.WindowClosedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="WindowInteractionStateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty WindowInteractionStateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty WindowInteractionStateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.WindowPattern.WindowInteractionStateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly WindowInteractionStateProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ WindowInteractionStateProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8cedb-160">
            <see cref="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.WindowInteractionState" /> 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cedb-160">Identifies the <see cref="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.WindowInteractionState" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cedb-161">이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-161">This identifier is used by UI Automation client applications.</span></span> <span data-ttu-id="8cedb-162">UI 자동화 공급자의 해당 필드를 사용 해야 <xref:System.Windows.Automation.WindowPatternIdentifiers>합니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-162">UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.WindowPatternIdentifiers>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8cedb-163">다음 예제에서는 루트 요소는 루트의 하위 항목 및 속성 조건 집합을 만족 하는 자동화 요소의 컬렉션을 반환 하는 함수에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-163">In the following example, a root element is passed to a function that returns a collection of automation elements that are descendants of the root and satisfy a set of property conditions.</span></span>  
  
 [!code-csharp[UIAWindowPattern_snip#100](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAWindowPattern_snip/CSharp/UIAWindowPattern_snippets.cs#100)]
 [!code-vb[UIAWindowPattern_snip#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAWindowPattern_snip/VisualBasic/UIAWindowPattern_snippets.vb#100)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowOpenedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent WindowOpenedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent WindowOpenedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.WindowPattern.WindowOpenedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly WindowOpenedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ WindowOpenedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8cedb-164">창이 열릴 때 발생하는 이벤트를 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cedb-164">Identifies the event that is raised when a window is opened.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cedb-165">이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-165">This identifier is used by UI Automation client applications.</span></span> <span data-ttu-id="8cedb-166">UI 자동화 공급자의 해당 필드를 사용 해야 <xref:System.Windows.Automation.WindowPatternIdentifiers>합니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-166">UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.WindowPatternIdentifiers>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8cedb-167">다음 예제에서는 이벤트 수신기를 선언 및 <xref:System.Windows.Automation.AutomationEventHandler> 대리자에 대해 지정 된 <xref:System.Windows.Automation.WindowPattern.WindowOpenedEvent> 및 <xref:System.Windows.Automation.WindowPattern.WindowClosedEvent> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-167">In the following example, event listeners are declared and an <xref:System.Windows.Automation.AutomationEventHandler> delegate is specified for <xref:System.Windows.Automation.WindowPattern.WindowOpenedEvent> and <xref:System.Windows.Automation.WindowPattern.WindowClosedEvent> events.</span></span>  
  
 [!code-csharp[UIAWindowPattern_snip#104](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAWindowPattern_snip/CSharp/UIAWindowPattern_snippets.cs#104)]
 [!code-vb[UIAWindowPattern_snip#104](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAWindowPattern_snip/VisualBasic/UIAWindowPattern_snippets.vb#104)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowVisualStateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty WindowVisualStateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty WindowVisualStateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.WindowPattern.WindowVisualStateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly WindowVisualStateProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ WindowVisualStateProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8cedb-168">
            <see cref="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.WindowVisualState" /> 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cedb-168">Identifies the <see cref="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.WindowVisualState" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cedb-169">이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-169">This identifier is used by UI Automation client applications.</span></span> <span data-ttu-id="8cedb-170">UI 자동화 공급자의 해당 필드를 사용 해야 <xref:System.Windows.Automation.WindowPatternIdentifiers>합니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-170">UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.WindowPatternIdentifiers>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8cedb-171">다음 예제에서는 루트 요소는 루트의 하위 항목 및 속성 조건 집합을 만족 하는 자동화 요소의 컬렉션을 반환 하는 함수에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8cedb-171">In the following example, a root element is passed to a function that returns a collection of automation elements that are descendants of the root and satisfy a set of property conditions.</span></span>  
  
 [!code-csharp[UIAWindowPattern_snip#100](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAWindowPattern_snip/CSharp/UIAWindowPattern_snippets.cs#100)]
 [!code-vb[UIAWindowPattern_snip#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAWindowPattern_snip/VisualBasic/UIAWindowPattern_snippets.vb#100)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>