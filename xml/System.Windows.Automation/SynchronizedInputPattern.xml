<Type Name="SynchronizedInputPattern" FullName="System.Windows.Automation.SynchronizedInputPattern">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b89fe9918d29044660ca4b37b4c51f51f435c2aa" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36370176" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SynchronizedInputPattern : System.Windows.Automation.BasePattern" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SynchronizedInputPattern extends System.Windows.Automation.BasePattern" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.SynchronizedInputPattern" />
  <TypeSignature Language="VB.NET" Value="Public Class SynchronizedInputPattern&#xA;Inherits BasePattern" />
  <TypeSignature Language="C++ CLI" Value="public ref class SynchronizedInputPattern : System::Windows::Automation::BasePattern" />
  <TypeSignature Language="F#" Value="type SynchronizedInputPattern = class&#xA;    inherit BasePattern" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Automation.BasePattern</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="98560-101">동기화된 입력 이벤트를 지원하는 개체를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="98560-101">Represents objects that support synchronized input events.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.SynchronizedInputPattern.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel();" />
      <MemberSignature Language="F#" Value="member this.Cancel : unit -&gt; unit" Usage="synchronizedInputPattern.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="98560-102">입력 수신 대기를 중지합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98560-102">Stops listening for input.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98560-103">공급자는 입력에 대 한 현재 수신 중인 경우 정상 작동으로 되돌립니다.</span><span class="sxs-lookup"><span data-stu-id="98560-103">If the provider is currently listening for input, it reverts to normal operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputDiscardedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent InputDiscardedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent InputDiscardedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.SynchronizedInputPattern.InputDiscardedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InputDiscardedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ InputDiscardedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable InputDiscardedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.SynchronizedInputPattern.InputDiscardedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98560-104">WPF에서 입력을 취소할 때 발생하는 이벤트를 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98560-104">Identifies the event raised when WPF discards input.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98560-105">이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="98560-105">This identifier is used by UI Automation client applications.</span></span> <span data-ttu-id="98560-106">UI 자동화 공급자의 해당 필드를 사용 해야 <xref:System.Windows.Automation.SynchronizedInputPatternIdentifiers>합니다.</span><span class="sxs-lookup"><span data-stu-id="98560-106">A UI Automation provider should use the equivalent field in <xref:System.Windows.Automation.SynchronizedInputPatternIdentifiers>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputReachedOtherElementEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent InputReachedOtherElementEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent InputReachedOtherElementEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.SynchronizedInputPattern.InputReachedOtherElementEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InputReachedOtherElementEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ InputReachedOtherElementEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable InputReachedOtherElementEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.SynchronizedInputPattern.InputReachedOtherElementEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98560-107">현재 입력 수신 대기 중인 요소가 아닌 다른 요소에서 입력이 수신될 때 발생하는 이벤트를 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98560-107">Identifies the event raised when the input was received by an element other than the one currently listening for the input.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98560-108">이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="98560-108">This identifier is used by UI Automation client applications.</span></span> <span data-ttu-id="98560-109">UI 자동화 공급자의 해당 필드를 사용 해야 <xref:System.Windows.Automation.SynchronizedInputPatternIdentifiers>합니다.</span><span class="sxs-lookup"><span data-stu-id="98560-109">A UI Automation provider should use the equivalent field in <xref:System.Windows.Automation.SynchronizedInputPatternIdentifiers>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputReachedTargetEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent InputReachedTargetEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent InputReachedTargetEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.SynchronizedInputPattern.InputReachedTargetEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InputReachedTargetEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ InputReachedTargetEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable InputReachedTargetEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.SynchronizedInputPattern.InputReachedTargetEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98560-110">현재 입력 수신 대기 중인 요소에서 입력이 수신될 때 발생하는 이벤트를 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98560-110">Identifies the event raised when the input was received by the element currently listening for the input.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98560-111">이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="98560-111">This identifier is used by UI Automation client applications.</span></span> <span data-ttu-id="98560-112">UI 자동화 공급자의 해당 필드를 사용 해야 <xref:System.Windows.Automation.SynchronizedInputPatternIdentifiers>합니다.</span><span class="sxs-lookup"><span data-stu-id="98560-112">A UI Automation provider should use the equivalent field in <xref:System.Windows.Automation.SynchronizedInputPatternIdentifiers>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pattern">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationPattern Pattern;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationPattern Pattern" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.SynchronizedInputPattern.Pattern" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Pattern As AutomationPattern " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationPattern ^ Pattern;" />
      <MemberSignature Language="F#" Value=" staticval mutable Pattern : System.Windows.Automation.AutomationPattern" Usage="System.Windows.Automation.SynchronizedInputPattern.Pattern" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationPattern</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98560-113">
            <see cref="T:System.Windows.Automation.SynchronizedInputPattern" /> 컨트롤 패턴을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98560-113">Identifies the <see cref="T:System.Windows.Automation.SynchronizedInputPattern" /> control pattern.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98560-114">이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="98560-114">This identifier is used by UI Automation client applications.</span></span> <span data-ttu-id="98560-115">UI 자동화 공급자의 해당 필드를 사용 해야 <xref:System.Windows.Automation.SynchronizedInputPatternIdentifiers>합니다.</span><span class="sxs-lookup"><span data-stu-id="98560-115">UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.SynchronizedInputPatternIdentifiers>.</span></span>  
  
 <span data-ttu-id="98560-116">패턴 식별자를 같은 메서드에 전달 <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>, 지정 된 위치에서 원하는 컨트롤 패턴을 검색할 <xref:System.Windows.Automation.AutomationElement>합니다.</span><span class="sxs-lookup"><span data-stu-id="98560-116">The pattern identifier is passed to methods, such as <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>, to retrieve the control pattern of interest from the specified <xref:System.Windows.Automation.AutomationElement>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartListening">
      <MemberSignature Language="C#" Value="public void StartListening (System.Windows.Automation.SynchronizedInputType inputType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartListening(valuetype System.Windows.Automation.SynchronizedInputType inputType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.SynchronizedInputPattern.StartListening(System.Windows.Automation.SynchronizedInputType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartListening (inputType As SynchronizedInputType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartListening(System::Windows::Automation::SynchronizedInputType inputType);" />
      <MemberSignature Language="F#" Value="member this.StartListening : System.Windows.Automation.SynchronizedInputType -&gt; unit" Usage="synchronizedInputPattern.StartListening inputType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputType" Type="System.Windows.Automation.SynchronizedInputType" />
      </Parameters>
      <Docs>
        <param name="inputType">
          <span data-ttu-id="98560-117">수신 대기할 입력의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98560-117">The type of input to listen for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98560-118">공급자가 지정된 형식의 입력에 대한 수신 대기를 시작하도록 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98560-118">Designates that the provider start listening for input of the specified type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98560-119">WPF 일치 하는 입력 데이터를 발견 하는 경우 들어오는 이벤트의 경로 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="98560-119">When WPF finds matching input, it checks the route of the incoming event.</span></span> <span data-ttu-id="98560-120">입력에 대해 수신 하는 자동화 요소 경로에 없는 경우는 입력이 삭제 되 고 <xref:System.Windows.Automation.SynchronizedInputPattern.InputDiscardedEvent> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="98560-120">If the automation element that is listening for the input is not in the route, the input is discarded and the <xref:System.Windows.Automation.SynchronizedInputPattern.InputDiscardedEvent> event is raised.</span></span> <span data-ttu-id="98560-121">해당 형식에 대 한 수신을 자동화 요소에서 입력을 수신 하는 경우는 <xref:System.Windows.Automation.SynchronizedInputPattern.InputReachedTargetEvent> 이벤트 발생 되지 않았으면는 <xref:System.Windows.Automation.SynchronizedInputPattern.InputReachedOtherElementEvent> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="98560-121">If the input is received by the automation element listening for that type, the <xref:System.Windows.Automation.SynchronizedInputPattern.InputReachedTargetEvent> event is raised; otherwise, the <xref:System.Windows.Automation.SynchronizedInputPattern.InputReachedOtherElementEvent> event is raised.</span></span>  
  
 <span data-ttu-id="98560-122">입력을 받은 후 공급자 수신을 중지 하 고 정상적으로 계속 됩니다.</span><span class="sxs-lookup"><span data-stu-id="98560-122">After receiving the input, the provider stops listening and continues normally.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>