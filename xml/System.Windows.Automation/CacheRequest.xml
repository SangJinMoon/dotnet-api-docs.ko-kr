<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CacheRequest.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5eb40c791287059e1abd692179019a89d57ea0797.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eb40c791287059e1abd692179019a89d57ea0797</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Automation.CacheRequest">
          <source>Specifies properties and patterns that the UI Automation framework caches when an <ph id="ph1">&lt;see cref="T:System.Windows.Automation.AutomationElement" /&gt;</ph> is obtained.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Automation.AutomationElement" /&gt;</ph>를 가져올 때 UI Automation 프레임워크에서 캐시하는 속성 및 패턴을 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>Retrieving properties and patterns through <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> requires cross-process calls that can slow down performance.</source>
          <target state="translated">속성 및 패턴을 통해 검색 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 성능이 느려질 수 있다는 크로스 프로세스 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>By caching values of proprieties and patterns in a batch operation, you can enhance the performance of your application.</source>
          <target state="translated">속성 값 및 일괄 처리 작업의 패턴을 캐시 하 여 응용 프로그램의 성능을 향상 시킬 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>Create a new cache request by calling the class constructor.</source>
          <target state="translated">클래스 생성자를 호출 하 여 새 캐시 요청을 만듭니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>The request is populated by repeated calls to the <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Add%2A&gt;</ph> method.</source>
          <target state="translated">요청 호출을 반복된 하 여 채워집니다는 <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Add%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>Only a single <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> can be active.</source>
          <target state="translated">단일 <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> 활성화 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>There are two ways to activate a request:</source>
          <target state="translated">요청을 활성화 하는 방법은 두 가지가 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> on the request.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> 요청에 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>This pushes the request onto the stack, and the request is popped when the object is disposed.</source>
          <target state="translated">요청 하 여 스택에 푸시하고 개체가 삭제 될 때 요청이 팝 됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>To ensure disposal even if an exception is raised, use the return value from <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> within a <ph id="ph2">`using`</ph> block (<ph id="ph3">`Using`</ph> in <ph id="ph4">[!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)]</ph>).</source>
          <target state="translated">개체를 삭제 하려면 예외가 발생 하는 경우에, 반환 값을 사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> 내에서 한 <ph id="ph2">`using`</ph> 블록 (<ph id="ph3">`Using`</ph> 에 <ph id="ph4">[!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)]</ph>).</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>Put the request onto the internal stack by calling <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Push%2A&gt;</ph>.</source>
          <target state="translated">요청을 호출 하 여 내부 스택에 저장 <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Push%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>Only the topmost request on the stack is active, and it must be the next one removed from the stack by <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Pop%2A&gt;</ph>.</source>
          <target state="translated">스택의 맨 위에 있는 요청이 활성화 되 고 다음 순서의 누적 기준에서 제거 해야 <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Pop%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>Popping the request deactivates it.</source>
          <target state="translated">요청 팝 비활성화 됩니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> elements obtained while the request is active will have cached values for the properties and patterns specified.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 요청이 활성 상태인 동안 가져온 요소는 속성 및 지정 된 패턴에 대 한 값 캐싱되어 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>The following example shows how to use <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> to cache patterns and properties.</source>
          <target state="translated">다음 예제에서는 사용 하는 방법을 보여 줍니다. <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> 캐시 패턴 및 속성에 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>The following example shows how to use <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Push%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Automation.CacheRequest.Pop%2A&gt;</ph> to cache patterns and properties.</source>
          <target state="translated">다음 예제에서는 사용 하는 방법을 보여 줍니다. <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Push%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Automation.CacheRequest.Pop%2A&gt;</ph> 캐시 패턴 및 속성에 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.#ctor">
          <source>When a <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> is created, the <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty&gt;</ph> identifier is added as a default property to cache.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> 만들어지면는 <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty&gt;</ph> 식별자는 기본 속성으로 캐시에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.Activate">
          <source>Sets this <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph> as the active specification for the items that are returned when an <ph id="ph2">&lt;see cref="T:System.Windows.Automation.AutomationElement" /&gt;</ph> is requested on the same thread.</source>
          <target state="translated">같은 스레드에서 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>를 요청할 때 이 <ph id="ph2">&lt;see cref="T:System.Windows.Automation.AutomationElement" /&gt;</ph>를 반환되는 항목에 대한 활성 사양으로 설정합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.Activate">
          <source>The object that can be used to dispose the <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>를 삭제하는 데 사용할 수 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Activate">
          <source>Using this method is usually preferable to using <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Push%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Automation.CacheRequest.Pop%2A&gt;</ph> as a means of activating the <ph id="ph3">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph>.</source>
          <target state="translated">이 메서드는을 사용 하는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Push%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Automation.CacheRequest.Pop%2A&gt;</ph> 활성화 하는 방법으로는 <ph id="ph3">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Activate">
          <source>The object is pushed onto the stack when <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> is called, and then popped off when it is disposed.</source>
          <target state="translated">개체는 스택에 밀어 넣은 경우 <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> 가 호출 되 고, 삭제 될 때 팝 됩니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Activate">
          <source>To ensure disposal, place the return value within a <ph id="ph1">`using`</ph> block (<ph id="ph2">`Using`</ph> in <ph id="ph3">[!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)]</ph>).</source>
          <target state="translated">개체를 삭제 하려면 내에서 반환 값을 배치는 <ph id="ph1">`using`</ph> 블록 (<ph id="ph2">`Using`</ph> 에 <ph id="ph3">[!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)]</ph>).</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Activate">
          <source>The following example shows how to use <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> to cache patterns and properties.</source>
          <target state="translated">다음 예제에서는 사용 하는 방법을 보여 줍니다. <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> 캐시 패턴 및 속성에 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="T:System.Windows.Automation.CacheRequest">
          <source>Adds a property or pattern identifier to a <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>에 속성 또는 패턴 식별자를 추가합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>When a <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> object is created, the <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty&gt;</ph> identifier is added as a default property to cache.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> 개체가 만들어지면는 <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty&gt;</ph> 식별자는 기본 속성으로 캐시에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>Adding an object that is already in the cache request has no effect.</source>
          <target state="translated">캐시 요청에 이미 있는 개체를 추가 해도 아무 효과가 없습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationPattern)">
          <source>An identifier specifying a pattern to cache.</source>
          <target state="translated">캐시할 패턴을 지정하는 식별자입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationPattern)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="T:System.Windows.Automation.AutomationPattern" /&gt;</ph> identifier to this <ph id="ph2">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.AutomationPattern" /&gt;</ph> 식별자를 이 <ph id="ph2">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>에 추가합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationPattern)">
          <source>Adding a pattern that is already in the cache request has no effect.</source>
          <target state="translated">캐시 요청에 이미 있는 패턴을 추가 해도 아무 효과가 없습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationPattern)">
          <source>The following example shows how to construct a <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> and add a pattern to be cached.</source>
          <target state="translated">다음 예제에서는 작성 방법을 보여 주는 <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> 캐시할 패턴을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationPattern)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph> is active.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>가 활성 상태인 경우</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)">
          <source>An identifier specifying a property value to cache.</source>
          <target state="translated">캐시할 속성 값을 지정하는 식별자입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="T:System.Windows.Automation.AutomationProperty" /&gt;</ph> identifier to this <ph id="ph2">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.AutomationProperty" /&gt;</ph> 식별자를 이 <ph id="ph2">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>에 추가합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)">
          <source>When a <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> is created, the <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty&gt;</ph> identifier is added as a default property to cache.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> 만들어지면는 <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty&gt;</ph> 식별자는 기본 속성으로 캐시에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)">
          <source>Adding a property that is already in the cache request has no effect.</source>
          <target state="translated">캐시 요청에 이미 있는 속성에 추가 하는 효과가 없습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)">
          <source>The following example shows how to construct a <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> and add a property to be cached.</source>
          <target state="translated">다음 예제에서는 작성 방법을 보여 주는 <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> 캐시할 속성을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph> is active.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>가 활성 상태인 경우</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.CacheRequest.AutomationElementMode">
          <source>Gets or sets a value that specifies whether returned elements should contain full references to the underlying <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph>, or only cached information.</source>
          <target state="translated">반환된 요소에 내부 <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph>에 대한 전체 참조가 포함될지 아니면 캐시된 정보만 포함될지를 지정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.AutomationElementMode">
          <source><ph id="ph1">&lt;see cref="F:System.Windows.Automation.AutomationElementMode.Full" /&gt;</ph> if the returned elements have a full reference to the underlying <ph id="ph2">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph>; otherwise <ph id="ph3">&lt;see cref="F:System.Windows.Automation.AutomationElementMode.None" /&gt;</ph>.</source>
          <target state="translated">반환된 요소에 내부 <ph id="ph2">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph>에 대한 전체 참조가 포함되면 <ph id="ph1">&lt;see cref="F:System.Windows.Automation.AutomationElementMode.Full" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see cref="F:System.Windows.Automation.AutomationElementMode.None" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.AutomationElementMode">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElementMode.Full&gt;</ph> is the default value, and specifies that returned elements contain a full reference to the underlying <ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElementMode.Full&gt;</ph> 반환 되는 요소 내부에 대 한 전체 참조를 포함 하도록 지정 하 고 값은 기본값 <ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.AutomationElementMode">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElementMode.None&gt;</ph> specifies that the returned elements have no reference to the underlying <ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph>, and contain only cached information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElementMode.None&gt;</ph> 반환 되는 요소 내부에 대 한 참조를 갖도록 지정 <ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph>, 캐시 된 정보만 포함 하 고 있습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.AutomationElementMode">
          <source>Certain operations on elements, including <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Automation.AutomationElement.SetFocus%2A&gt;</ph>, require a full reference; attempting to perform these on an element that has none results in an <ph id="ph4">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">포함 하 여 요소에서 특정 작업 <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Windows.Automation.AutomationElement.SetFocus%2A&gt;</ph>, 전체 참조를 사용 해야 하는 이러한에서 수행 하는 none가 있는 요소가 결과에 <ph id="ph4">&lt;xref:System.InvalidOperationException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.AutomationElementMode">
          <source>Using <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElementMode.None&gt;</ph> can be more efficient when only properties are needed, as it avoids the overhead involved in setting up full references.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElementMode.None&gt;</ph> 것 처럼 속성에만 필요할 경우 더 효과적일 수 있습니다 전체 참조를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.AutomationElementMode">
          <source>In the following example, <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.AutomationElementMode%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElementMode.None&gt;</ph>, with the result that only cached properties and patterns are available for the retrieved object.</source>
          <target state="translated">다음 예에서 <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.AutomationElementMode%2A&gt;</ph> 로 설정 된 <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElementMode.None&gt;</ph>, 결과 함께 하는 캐시 된 속성 및 패턴은 검색된 된 개체에 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.Clone">
          <source>Creates a copy of this <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>의 복사본을 만듭니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.Clone">
          <source>A modifiable copy of the current object.</source>
          <target state="translated">현재 개체의 수정 가능한 복사본입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.CacheRequest.Current">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph> that is active on the current thread.</source>
          <target state="translated">현재 스레드에서 활성화된 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.Current">
          <source>The active <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>.</source>
          <target state="translated">활성 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.Pop">
          <source>Removes the active <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph> from the internal stack for the current thread.</source>
          <target state="translated">현재 스레드의 내부 스택에서 활성 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>를 제거합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Pop">
          <source>Only the currently active request can be removed using the <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Pop%2A&gt;</ph> method.</source>
          <target state="translated">현재 활성 상태인 요청이 사용 하 여 제거할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Pop%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Pop">
          <source>Attempting to remove a request that is not the current one results in an exception.</source>
          <target state="translated">현재 하나의 결과 예외가 되지 않은 요청을 제거 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Pop">
          <source>Unless you are nesting cache requests, it is preferable to use <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> to place the request on the stack.</source>
          <target state="translated">캐시 요청을 중첩 하지 않는 한이 사용 하도록 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> 스택에 요청이 배치 하 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Pop">
          <source>The reason is that you can use <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> within a <ph id="ph2">`using`</ph> block (<ph id="ph3">`Using`</ph> in <ph id="ph4">[!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)]</ph>), ensuring that the request is popped off the stack even if an exception is raised.</source>
          <target state="translated">사용할 수 있는 이유는 <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> 내에서 한 <ph id="ph2">`using`</ph> 블록 (<ph id="ph3">`Using`</ph> 에 <ph id="ph4">[!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)]</ph>), 예외가 발생 하는 경우에 요청이 스택에서 팝 됩니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Pop">
          <source>The following example shows how to deactivate a <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> by using <ph id="ph2">&lt;xref:System.Windows.Automation.CacheRequest.Pop%2A&gt;</ph>.</source>
          <target state="translated">비활성화 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> 를 사용 하 여 <ph id="ph2">&lt;xref:System.Windows.Automation.CacheRequest.Pop%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.Pop">
          <source>An attempt was made to remove a cache request that was not the last one pushed onto the stack.</source>
          <target state="translated">스택에 마지막으로 푸시되지 않은 캐시 요청을 제거하려고 한 경우</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.Push">
          <source>Places the <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph> on the internal state stack, making it the active request on the current thread.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>를 내부 상태 스택에 놓아 현재 스레드의 활성 요청으로 만듭니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Push">
          <source>Multiple <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> objects can be placed onto the state stack.</source>
          <target state="translated">여러 <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> 상태 스택으로 개체를 배치할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Push">
          <source>Cache requests must be removed from the stack in the order they were pushed on; otherwise, an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception is raised.</source>
          <target state="translated">캐시 요청은 푸시된; 순서로 스택에서 제거 해야 합니다. 그렇지 않은 경우는 <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Push">
          <source>Unless you are nesting cache requests, it is preferable to use <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> to place the request on the stack.</source>
          <target state="translated">캐시 요청을 중첩 하지 않는 한이 사용 하도록 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> 스택에 요청이 배치 하 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Push">
          <source>The reason is that you can use <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> within a <ph id="ph2">`using`</ph> block (<ph id="ph3">`Using`</ph> in <ph id="ph4">[!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)]</ph>), ensuring that the request is popped off the stack even if an exception is raised.</source>
          <target state="translated">사용할 수 있는 이유는 <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> 내에서 한 <ph id="ph2">`using`</ph> 블록 (<ph id="ph3">`Using`</ph> 에 <ph id="ph4">[!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)]</ph>), 예외가 발생 하는 경우에 요청이 스택에서 팝 됩니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Push">
          <source>The following example shows how to activate a <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> by using <ph id="ph2">&lt;xref:System.Windows.Automation.CacheRequest.Push%2A&gt;</ph>.</source>
          <target state="translated">활성화 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> 를 사용 하 여 <ph id="ph2">&lt;xref:System.Windows.Automation.CacheRequest.Push%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.CacheRequest.TreeFilter">
          <source>Gets or sets a value specifying the view of the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> element tree to use when caching.</source>
          <target state="translated">캐시 도중 사용할 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 요소 트리의 뷰를 지정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.TreeFilter">
          <source>The view of the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> element tree.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 요소 트리의 뷰입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.TreeFilter">
          <source>The default view is <ph id="ph1">&lt;see cref="F:System.Windows.Automation.Automation.ControlViewCondition" /&gt;</ph>.</source>
          <target state="translated">기본 뷰는 <ph id="ph1">&lt;see cref="F:System.Windows.Automation.Automation.ControlViewCondition" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.TreeFilter">
          <source>For additional information on views of the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> element tree, see <bpt id="p1">[</bpt>UI Automation Tree Overview<ept id="p1">](~/docs/framework/ui-automation/ui-automation-tree-overview.md)</ept>.</source>
          <target state="translated">뷰에 대 한 자세한 내용은 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 요소 트리 참조 <bpt id="p1">[</bpt>UI 자동화 트리 개요<ept id="p1">](~/docs/framework/ui-automation/ui-automation-tree-overview.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.TreeFilter">
          <source>In the following example, <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.TreeFilter%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Windows.Automation.Automation.RawViewCondition&gt;</ph> so that caching is done for all elements, regardless of whether they are part of the content view or the control view.</source>
          <target state="translated">다음 예에서 <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.TreeFilter%2A&gt;</ph> 로 설정 된 <ph id="ph2">&lt;xref:System.Windows.Automation.Automation.RawViewCondition&gt;</ph> 콘텐츠 뷰 또는 컨트롤 뷰 되었는지 여부에 상관 없이 모든 요소에 캐시가 수행 되도록 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.CacheRequest.TreeScope">
          <source>Gets or sets a value that specifies whether caching is done only for the root of the subtree, or also for its children or descendants.</source>
          <target state="translated">하위 트리의 루트만 캐시할지 아니면 해당 자식이나 하위 항목도 캐시할지를 지정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.TreeScope">
          <source>One or more of <ph id="ph1">&lt;see cref="F:System.Windows.Automation.TreeScope.Element" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Windows.Automation.TreeScope.Children" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Windows.Automation.TreeScope.Descendants" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.Windows.Automation.TreeScope.Subtree" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Windows.Automation.TreeScope.Element" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Windows.Automation.TreeScope.Children" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Windows.Automation.TreeScope.Descendants" /&gt;</ph> 또는 <ph id="ph4">&lt;see cref="F:System.Windows.Automation.TreeScope.Subtree" /&gt;</ph> 중 하나 이상입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.TreeScope">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.Windows.Automation.TreeScope.Element" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Windows.Automation.TreeScope.Element" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.TreeScope">
          <source>The scope of caching is in relation to the object or objects being fetched, not in relation to the object on which <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement.FindFirst%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.FindAll%2A&gt;</ph> is called.</source>
          <target state="translated">캐시 범위는 개체를 기준으로 페치 대상 개체와 관계 없이 <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement.FindFirst%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.FindAll%2A&gt;</ph> 라고 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.TreeScope">
          <source>See the example.</source>
          <target state="translated">예제를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.TreeScope">
          <source>In the following example, a list box element is obtained from the parent window element while a <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> is active and <ph id="ph2">&lt;xref:System.Windows.Automation.CacheRequest.TreeScope%2A&gt;</ph> is <ph id="ph3">&lt;xref:System.Windows.Automation.TreeScope.Children&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 목록 상자 요소를 하는 동안 부모 창 요소 로부터 가져옵니다는 <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> 활성화 되어 및 <ph id="ph2">&lt;xref:System.Windows.Automation.CacheRequest.TreeScope%2A&gt;</ph> 은 <ph id="ph3">&lt;xref:System.Windows.Automation.TreeScope.Children&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.TreeScope">
          <source>The specified properties of the child elements (that is, the list items) are stored in the cache and can be retrieved from the <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement.CachedChildren%2A&gt;</ph> of the list box.</source>
          <target state="translated">자식 요소 (즉, 목록 항목)의 지정 된 속성 캐시에 저장 되 고에서 검색할 수는 <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement.CachedChildren%2A&gt;</ph> 목록 상자의 합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.CacheRequest.TreeScope">
          <source>An attempt was made to set the property to <ph id="ph1">&lt;see cref="F:System.Windows.Automation.TreeScope.Parent" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.Windows.Automation.TreeScope.Ancestors" /&gt;</ph>.</source>
          <target state="translated">속성을 <ph id="ph1">&lt;see cref="F:System.Windows.Automation.TreeScope.Parent" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.Windows.Automation.TreeScope.Ancestors" /&gt;</ph>로 설정하려고 한 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>