<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="InvokePattern.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e6159d647660e3bb63f3227880e80fcd4efcfbc8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e6159d647660e3bb63f3227880e80fcd4efcfbc8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Automation.InvokePattern">
          <source>Represents controls that initiate or perform a single, unambiguous action and do not maintain state when activated.</source>
          <target state="translated">활성화되었을 때 상태를 유지하지 않고 명확한 단일 작업을 시작하거나 수행하는 컨트롤을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.InvokePattern">
          <source>Controls support <ph id="ph1">&lt;xref:System.Windows.Automation.InvokePattern&gt;</ph> if the same behavior is not exposed through another control pattern.</source>
          <target state="translated">지원을 제어 <ph id="ph1">&lt;xref:System.Windows.Automation.InvokePattern&gt;</ph> 동일한 동작이 다른 컨트롤 패턴을 통해 노출 되지 않으면 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.InvokePattern">
          <source>For example, if the <ph id="ph1">&lt;xref:System.Windows.Automation.InvokePattern.Invoke%2A&gt;</ph> method on a control performs the same action as the <ph id="ph2">&lt;xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A&gt;</ph> method, the control will not support <ph id="ph4">&lt;xref:System.Windows.Automation.InvokePattern&gt;</ph>.</source>
          <target state="translated">예를 들어 경우는 <ph id="ph1">&lt;xref:System.Windows.Automation.InvokePattern.Invoke%2A&gt;</ph> 메서드가 동일한 작업을 수행 된 <ph id="ph2">&lt;xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A&gt;</ph> 메서드, 컨트롤이 지원 하지 것입니다 <ph id="ph4">&lt;xref:System.Windows.Automation.InvokePattern&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.InvokePattern">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> elements that represent controls such as check boxes and radio buttons, which maintain a state, instead support <ph id="ph2">&lt;xref:System.Windows.Automation.TogglePattern&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Automation.SelectionItemPattern&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 확인란 및 라디오 단추 상태를 유지 하는 등의 컨트롤을 나타내는 요소는 대신 지원 <ph id="ph2">&lt;xref:System.Windows.Automation.TogglePattern&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Windows.Automation.SelectionItemPattern&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.InvokePattern.Invoke">
          <source>Sends a request to activate a control and initiate its single, unambiguous action.</source>
          <target state="translated">요청을 보내 컨트롤을 활성화하고 해당하는 명확한 단일 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.InvokePattern.Invoke">
          <source>Calls to <ph id="ph1">&lt;xref:System.Windows.Automation.InvokePattern.Invoke%2A&gt;</ph> should return immediately without blocking.</source>
          <target state="translated">에 대 한 호출이 <ph id="ph1">&lt;xref:System.Windows.Automation.InvokePattern.Invoke%2A&gt;</ph> 차단 하지 않고 즉시 반환 해야 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.InvokePattern.Invoke">
          <source>However, this behavior is entirely dependent on the <ph id="ph1">[!INCLUDE[TLA#tla_uiautomation](~/includes/tlasharptla-uiautomation-md.md)]</ph> provider implementation.</source>
          <target state="translated">그러나이 동작은 전적으로 의존는 <ph id="ph1">[!INCLUDE[TLA#tla_uiautomation](~/includes/tlasharptla-uiautomation-md.md)]</ph> 공급자 구현 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.InvokePattern.Invoke">
          <source>In scenarios where calling <ph id="ph1">&lt;xref:System.Windows.Automation.InvokePattern.Invoke%2A&gt;</ph> causes a blocking issue (such as a modal dialog) a separate helper thread may be required to call the method.</source>
          <target state="translated">시나리오에서를 호출 하는 <ph id="ph1">&lt;xref:System.Windows.Automation.InvokePattern.Invoke%2A&gt;</ph> 별도 차단 문제 (예: 모달 대화 상자)를 사용 하면 스레드 도우미 메서드를 호출 해야 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.InvokePattern.Invoke">
          <source>In the following example an <ph id="ph1">&lt;xref:System.Windows.Automation.InvokePattern&gt;</ph> control pattern is obtained from a control and the <ph id="ph2">&lt;xref:System.Windows.Automation.InvokePattern.Invoke%2A&gt;</ph> method is called.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Automation.InvokePattern&gt;</ph> 컨트롤에서 컨트롤 패턴은 가져온 및 <ph id="ph2">&lt;xref:System.Windows.Automation.InvokePattern.Invoke%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.InvokePattern.Invoke">
          <source>The element does not support the <ph id="ph1">&lt;see cref="T:System.Windows.Automation.InvokePattern" /&gt;</ph> control pattern or is hidden or blocked.</source>
          <target state="translated">이 요소는 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.InvokePattern" /&gt;</ph> 컨트롤 패턴을 지원하지 않으며 숨겨져 있거나 차단되었습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.InvokePattern.Invoke">
          <source>The element is not enabled.</source>
          <target state="translated">요소가 활성화되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.InvokePattern.Invoke">
          <source>Can be raised when a UI Automation provider has implemented its own handling of the <ph id="ph1">&lt;see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled" /&gt;</ph> property.</source>
          <target state="translated">UI 자동화 공급자가 <ph id="ph1">&lt;see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled" /&gt;</ph> 속성의 자체 처리를 구현했을 때 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="F:System.Windows.Automation.InvokePattern.InvokedEvent">
          <source>Identifies the event raised when a control is invoked or activated.</source>
          <target state="translated">컨트롤이 호출되거나 활성화될 때 발생하는 이벤트를 식별합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Automation.InvokePattern.InvokedEvent">
          <source>This identifier is used by UI Automation client applications.</source>
          <target state="translated">이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Automation.InvokePattern.InvokedEvent">
          <source>UI Automation providers should use the equivalent field in <ph id="ph1">&lt;xref:System.Windows.Automation.InvokePatternIdentifiers&gt;</ph>.</source>
          <target state="translated">UI 자동화 공급자의 해당 필드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Automation.InvokePatternIdentifiers&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Automation.InvokePattern.InvokedEvent">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Automation.InvokePattern.InvokedEvent&gt;</ph> identifier is passed as a parameter to <ph id="ph2">&lt;xref:System.Windows.Automation.Automation.AddAutomationEventHandler%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Automation.InvokePattern.InvokedEvent&gt;</ph> 식별자에 대 한 매개 변수로 전달 되 <ph id="ph2">&lt;xref:System.Windows.Automation.Automation.AddAutomationEventHandler%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Automation.InvokePattern.InvokedEvent">
          <source>In the following example, the event handler identifies the event as an Invoked event by comparing the <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationEventArgs.EventId%2A&gt;</ph> in the event arguments with the <ph id="ph2">&lt;xref:System.Windows.Automation.InvokePattern.InvokedEvent&gt;</ph> identifier field.</source>
          <target state="translated">다음 예제에서는 이벤트 처리기는 이벤트를 식별 이벤트로 비교 하 여는 <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationEventArgs.EventId%2A&gt;</ph> 으로 이벤트 인수에는 <ph id="ph2">&lt;xref:System.Windows.Automation.InvokePattern.InvokedEvent&gt;</ph> 식별자 필드입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="F:System.Windows.Automation.InvokePattern.Pattern">
          <source>Identifies the <ph id="ph1">&lt;see cref="T:System.Windows.Automation.InvokePattern" /&gt;</ph> control pattern.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Automation.InvokePattern" /&gt;</ph> 컨트롤 패턴을 식별합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Automation.InvokePattern.Pattern">
          <source>This identifier is used by UI Automation client applications.</source>
          <target state="translated">이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Automation.InvokePattern.Pattern">
          <source>UI Automation providers should use the equivalent field in <ph id="ph1">&lt;xref:System.Windows.Automation.InvokePatternIdentifiers&gt;</ph>.</source>
          <target state="translated">UI 자동화 공급자의 해당 필드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Automation.InvokePatternIdentifiers&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Automation.InvokePattern.Pattern">
          <source>The pattern identifier is passed to methods such as <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A&gt;</ph> to retrieve the control pattern of interest from the specified <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph>.</source>
          <target state="translated">패턴 식별자를 같은 메서드에 전달 <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A&gt;</ph> 지정 된 위치에서 원하는 컨트롤 패턴을 검색할 <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Automation.InvokePattern.Pattern">
          <source>In the following example an <ph id="ph1">&lt;xref:System.Windows.Automation.InvokePattern&gt;</ph> control pattern is obtained from a control and the <ph id="ph2">&lt;xref:System.Windows.Automation.InvokePattern.Invoke%2A&gt;</ph> method is called.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Automation.InvokePattern&gt;</ph> 컨트롤에서 컨트롤 패턴은 가져온 및 <ph id="ph2">&lt;xref:System.Windows.Automation.InvokePattern.Invoke%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>