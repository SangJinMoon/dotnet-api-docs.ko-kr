<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Automation.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b891ec5d-4b60-42d7-ac21-95eab9e3ef823e4baa5a0bad26a97ef0a89f2da418bef2e0d110.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3e4baa5a0bad26a97ef0a89f2da418bef2e0d110</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">058bfa0b75b777d3171411d35da8f11617fc06b0</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/04/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Automation.Automation">
          <source>Contains methods and fields for UI Automation client applications.</source>
          <target state="translated">UI 자동화 클라이언트 응용 프로그램의 필드 및 메서드를 포함합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.AddAutomationEventHandler(System.Windows.Automation.AutomationEvent,System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationEventHandler)">
          <source>The identifier for the event the method will handle.</source>
          <target state="translated">메서드에서 처리할 이벤트의 식별자입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.AddAutomationEventHandler(System.Windows.Automation.AutomationEvent,System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationEventHandler)">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> element to associate with the event handler.</source>
          <target state="translated">이벤트 처리기를 연결할 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.AddAutomationEventHandler(System.Windows.Automation.AutomationEvent,System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationEventHandler)">
          <source>The scope of events to be handled; that is, whether they are on the element itself, or on its ancestors and descendants.</source>
          <target state="translated">처리할 이벤트의 범위입니다. 즉, 요소 자체에서만 발생할 수도 있고 상위 및 하위 요소에서 발생할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.AddAutomationEventHandler(System.Windows.Automation.AutomationEvent,System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationEventHandler)">
          <source>The method to call when the specified event occurs.</source>
          <target state="translated">지정된 이벤트가 발생할 때 호출할 메서드입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.AddAutomationEventHandler(System.Windows.Automation.AutomationEvent,System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationEventHandler)">
          <source>Registers a method that handles <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> events.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 이벤트를 처리하는 메서드를 등록합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Automation.AddAutomationEventHandler(System.Windows.Automation.AutomationEvent,System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationEventHandler)">
          <source>Some classes, such as <ph id="ph1">&lt;xref:System.Windows.Automation.GridPattern&gt;</ph>, expose fields identifying events that are specific to the class.</source>
          <target state="translated">와 같은 일부 클래스 <ph id="ph1">&lt;xref:System.Windows.Automation.GridPattern&gt;</ph>필드를 노출 클래스에 관련 된 이벤트를 식별 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Automation.AddAutomationEventHandler(System.Windows.Automation.AutomationEvent,System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationEventHandler)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Automation.Automation.AddAutomationEventHandler%2A&gt;</ph> method provides a mechanism that enables you to register handlers for these events.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Automation.Automation.AddAutomationEventHandler%2A&gt;</ph> 메서드는 이러한 이벤트에 대 한 처리기를 등록할 수 있도록 하는 메커니즘을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Automation.AddAutomationEventHandler(System.Windows.Automation.AutomationEvent,System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationEventHandler)">
          <source><ph id="ph1">`eventHandler`</ph> can be an instance of the method, or a reference to the method (<ph id="ph2">`AddressOf`</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">`eventHandler`</ph> 메서드나 메서드에 대 한 참조의 인스턴스가 될 수 있습니다 (<ph id="ph2">`AddressOf`</ph> Visual basic에서).</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.AddAutomationFocusChangedEventHandler(System.Windows.Automation.AutomationFocusChangedEventHandler)">
          <source>The method to call when the event occurs.</source>
          <target state="translated">이벤트가 발생할 때 호출할 메서드입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.AddAutomationFocusChangedEventHandler(System.Windows.Automation.AutomationFocusChangedEventHandler)">
          <source>Registers a method that will handle focus-changed events.</source>
          <target state="translated">포커스 변경 이벤트를 처리할 메서드를 등록합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Automation.AddAutomationFocusChangedEventHandler(System.Windows.Automation.AutomationFocusChangedEventHandler)">
          <source>Focus-changed events are system-wide; you cannot set a narrower scope.</source>
          <target state="translated">포커스 변경 이벤트는 시스템 수준; 하면 더 좁은 범위를 설정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Automation.AddAutomationFocusChangedEventHandler(System.Windows.Automation.AutomationFocusChangedEventHandler)">
          <source><ph id="ph1">`eventHandler`</ph> can be an instance of the method, or a reference to the method (<ph id="ph2">`AddressOf`</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">`eventHandler`</ph> 메서드나 메서드에 대 한 참조의 인스턴스가 될 수 있습니다 (<ph id="ph2">`AddressOf`</ph> Visual basic에서).</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Automation.AddAutomationFocusChangedEventHandler(System.Windows.Automation.AutomationFocusChangedEventHandler)">
          <source>The following example shows this method being used to add an event handler for focus changes.</source>
          <target state="translated">다음 예제에서는 포커스 변경에 대 한 이벤트 처리기를 추가 하는 데 사용 되 고이 메서드를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.AddAutomationPropertyChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationPropertyChangedEventHandler,System.Windows.Automation.AutomationProperty[])">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> element with which to associate the event handler.</source>
          <target state="translated">이벤트 처리기를 연결할 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.AddAutomationPropertyChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationPropertyChangedEventHandler,System.Windows.Automation.AutomationProperty[])">
          <source>The scope of events to be handled; that is, whether they are on the element itself, or on its ancestors and children.</source>
          <target state="translated">처리할 이벤트의 범위입니다. 즉, 요소 자체에서만 발생할 수도 있고 상위 요소 및 자식에서 발생할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.AddAutomationPropertyChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationPropertyChangedEventHandler,System.Windows.Automation.AutomationProperty[])">
          <source>The method to call when the event occurs.</source>
          <target state="translated">이벤트가 발생할 때 호출할 메서드입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.AddAutomationPropertyChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationPropertyChangedEventHandler,System.Windows.Automation.AutomationProperty[])">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> properties of interest.</source>
          <target state="translated">해당 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.AddAutomationPropertyChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationPropertyChangedEventHandler,System.Windows.Automation.AutomationProperty[])">
          <source>Registers a method that will handle property-changed events.</source>
          <target state="translated">속성 변경 이벤트를 처리할 메서드를 등록합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Automation.AddAutomationPropertyChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationPropertyChangedEventHandler,System.Windows.Automation.AutomationProperty[])">
          <source>The <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> item specified by the supplied <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> element might not support the properties specified by the <ph id="ph3">`properties`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> 제공 된 지정 된 항목 <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 요소에서 지정 된 속성을 지원 하지 않을 수는 <ph id="ph3">`properties`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Automation.AddAutomationPropertyChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationPropertyChangedEventHandler,System.Windows.Automation.AutomationProperty[])">
          <source><ph id="ph1">`eventHandler`</ph> can be an instance of the method, or a reference to the method (<ph id="ph2">`AddressOf`</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">`eventHandler`</ph> 메서드나 메서드에 대 한 참조의 인스턴스가 될 수 있습니다 (<ph id="ph2">`AddressOf`</ph> Visual basic에서).</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Automation.AddAutomationPropertyChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationPropertyChangedEventHandler,System.Windows.Automation.AutomationProperty[])">
          <source>The following example code adds an event handler that listens for a change in the enabled state of a specified element.</source>
          <target state="translated">다음 코드 예제에서는 지정 된 요소의 활성화 된 상태 변경에 대 한 수신 대기 하는 이벤트 처리기를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.AddStructureChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.StructureChangedEventHandler)">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> element with which to associate the event handler.</source>
          <target state="translated">이벤트 처리기를 연결할 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.AddStructureChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.StructureChangedEventHandler)">
          <source>The scope of events to be handled; that is, whether they are on the element itself, or on its ancestors and descendants.</source>
          <target state="translated">처리할 이벤트의 범위입니다. 즉, 요소 자체에서만 발생할 수도 있고 상위 및 하위 요소에서 발생할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.AddStructureChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.StructureChangedEventHandler)">
          <source>The method to call when the structure-changed event occurs.</source>
          <target state="translated">구조 변경 이벤트가 발생할 때 호출할 메서드입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.AddStructureChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.StructureChangedEventHandler)">
          <source>Registers the method that will handle structure-changed events.</source>
          <target state="translated">구조 변경 이벤트를 처리할 메서드를 등록합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Automation.AddStructureChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.StructureChangedEventHandler)">
          <source><ph id="ph1">`eventHandler`</ph> can be an instance of the method, or a reference to the method (<ph id="ph2">`AddressOf`</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">`eventHandler`</ph> 메서드나 메서드에 대 한 참조의 인스턴스가 될 수 있습니다 (<ph id="ph2">`AddressOf`</ph> Visual basic에서).</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Automation.AddStructureChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.StructureChangedEventHandler)">
          <source>The following example shows a structure-changed event handler delegate that will be called whenever the subtree of the specified <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> changes.</source>
          <target state="translated">다음 예제에서는 구조 변경 이벤트 처리기 대리자 호출 될 때마다 지정 된 노드의 하위 트리에 <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> 변경 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Automation.AddStructureChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.StructureChangedEventHandler)">
          <source>The following example code adds an instance of the delegate.</source>
          <target state="translated">다음 코드 예제에서는 대리자의 인스턴스를 추가합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="T:System.Windows.Automation.Automation">
          <source>Compares the specified parameters to determine whether they refer to the same user interface (UI) element.</source>
          <target state="translated">지정된 매개 변수를 비교하여 같은 UI(사용자 인터페이스) 요소를 참조하는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.Compare(System.Int32[],System.Int32[])">
          <source>The first run-time ID to compare.</source>
          <target state="translated">비교할 첫 번째 런타임 ID입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.Compare(System.Int32[],System.Int32[])">
          <source>The second run-time ID to compare.</source>
          <target state="translated">비교할 두 번째 런타임 ID입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.Compare(System.Int32[],System.Int32[])">
          <source>Compares two integer arrays containing run-time <ph id="ph1">[!INCLUDE[TLA#tla_id#plural](~/includes/tlasharptla-idsharpplural-md.md)]</ph> to determine whether their content is the same.</source>
          <target state="translated">런타임 <ph id="ph1">[!INCLUDE[TLA#tla_id#plural](~/includes/tlasharptla-idsharpplural-md.md)]</ph>가 들어 있는 두 정수 배열을 비교하여 내용이 같은지 확인합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.Compare(System.Int32[],System.Int32[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the compared run-time <ph id="ph2">[!INCLUDE[TLA2#tla_id#plural](~/includes/tla2sharptla-idsharpplural-md.md)]</ph> refer to the same <ph id="ph3">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> element; otherwise <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">비교한 런타임 <ph id="ph2">[!INCLUDE[TLA2#tla_id#plural](~/includes/tla2sharptla-idsharpplural-md.md)]</ph>가 같은 <ph id="ph3">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> 요소를 참조하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Automation.Compare(System.Int32[],System.Int32[])">
          <source>If either of the arguments is a null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic), <ph id="ph2">&lt;xref:System.Windows.Automation.Automation.Compare%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.ArgumentNullException&gt;</ph> exception.</source>
          <target state="translated">경우 인수는 null 참조 (<ph id="ph1">`Nothing`</ph> Visual basic에서), <ph id="ph2">&lt;xref:System.Windows.Automation.Automation.Compare%2A&gt;</ph> throw는 <ph id="ph3">&lt;xref:System.ArgumentNullException&gt;</ph> 예외입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Automation.Compare(System.Int32[],System.Int32[])">
          <source>The following example function determines whether a run-time ID is in a list of run-time <ph id="ph1">[!INCLUDE[TLA2#tla_id#plural](~/includes/tla2sharptla-idsharpplural-md.md)]</ph>.</source>
          <target state="translated">다음 예제 함수는 런타임 목록에는 런타임에 ID 인지를 확인 <ph id="ph1">[!INCLUDE[TLA2#tla_id#plural](~/includes/tla2sharptla-idsharpplural-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.Compare(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)">
          <source>The first <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> element to compare.</source>
          <target state="translated">비교할 첫 번째 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.Compare(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)">
          <source>The second <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> element to compare.</source>
          <target state="translated">비교할 두 번째 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.Compare(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)">
          <source>Compares two <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> elements, returning <ph id="ph2">&lt;see langword="true" /&gt;</ph> if both refer to the same <ph id="ph3">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> element.</source>
          <target state="translated">두 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 요소를 비교하여 두 요소가 같은 <ph id="ph3">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> 요소를 참조하면 <ph id="ph2">&lt;see langword="true" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.Compare(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the run time identifiers of the <ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> elements are the same; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> 요소의 런타임 식별자가 서로 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Automation.Compare(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)">
          <source>If either of the arguments is a null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic), <ph id="ph2">&lt;xref:System.Windows.Automation.Automation.Compare%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.ArgumentNullException&gt;</ph> exception.</source>
          <target state="translated">경우 인수는 null 참조 (<ph id="ph1">`Nothing`</ph> Visual basic에서), <ph id="ph2">&lt;xref:System.Windows.Automation.Automation.Compare%2A&gt;</ph> throw는 <ph id="ph3">&lt;xref:System.ArgumentNullException&gt;</ph> 예외입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Automation.Compare(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)">
          <source>This method is equivalent to the equality operator for <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> objects.</source>
          <target state="translated">이 메서드는 같음 연산자에 대 한 해당 <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="F:System.Windows.Automation.Automation.ContentViewCondition">
          <source>Represents a predefined view of the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> tree that includes only <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> elements that can contain content.</source>
          <target state="translated">콘텐츠를 포함할 수 있는 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 요소만 포함된 미리 정의된 <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 트리 뷰를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Automation.Automation.ContentViewCondition">
          <source>In the following example, various static conditions including <ph id="ph1">&lt;xref:System.Windows.Automation.Automation.ContentViewCondition&gt;</ph> are used to retrieve elements.</source>
          <target state="translated">다음 예제를 포함 한 다양 한 고정 조건 <ph id="ph1">&lt;xref:System.Windows.Automation.Automation.ContentViewCondition&gt;</ph> 요소를 검색 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="F:System.Windows.Automation.Automation.ControlViewCondition">
          <source>Represents a predefined view of the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> tree that includes only <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> elements that are controls.</source>
          <target state="translated">컨트롤인 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 요소만 포함된 미리 정의된 <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 트리 뷰를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Automation.Automation.ControlViewCondition">
          <source>In the following example, various static conditions including <ph id="ph1">&lt;xref:System.Windows.Automation.Automation.ControlViewCondition&gt;</ph> are used to retrieve elements.</source>
          <target state="translated">다음 예제를 포함 한 다양 한 고정 조건 <ph id="ph1">&lt;xref:System.Windows.Automation.Automation.ControlViewCondition&gt;</ph> 요소를 검색 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.PatternName(System.Windows.Automation.AutomationPattern)">
          <source>The identifier of the control pattern.</source>
          <target state="translated">컨트롤 패턴의 식별자입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.PatternName(System.Windows.Automation.AutomationPattern)">
          <source>Retrieves the name of the specified control pattern.</source>
          <target state="translated">지정된 컨트롤 패턴의 이름을 검색합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.PatternName(System.Windows.Automation.AutomationPattern)">
          <source>The friendly name of the control pattern, or a null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic) if the specified pattern is not found.</source>
          <target state="translated">컨트롤 패턴의 이름 또는 지정된 패턴이 없는 경우 null 참조(Visual Basic의 경우 <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>)입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Automation.PatternName(System.Windows.Automation.AutomationPattern)">
          <source>The following example displays the name of each control pattern supported by an <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph>.</source>
          <target state="translated">다음 예제에서 지 원하는 각 컨트롤 패턴의 이름을 표시 한 <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Automation.PatternName(System.Windows.Automation.AutomationPattern)">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement.GetSupportedPatterns%2A&gt;</ph> requires a great deal of processing, as it queries the <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> for every possible pattern.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement.GetSupportedPatterns%2A&gt;</ph> 쿼리하므로 처리에 많은 시간이 소요 된 <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> 가능한 모든 패턴에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.PropertyName(System.Windows.Automation.AutomationProperty)">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> property identifier of the named property.</source>
          <target state="translated">지정된 속성의 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 속성 식별자입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.PropertyName(System.Windows.Automation.AutomationProperty)">
          <source>Retrieves the name of the specified <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> property.</source>
          <target state="translated">지정된 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 속성의 이름을 검색합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.PropertyName(System.Windows.Automation.AutomationProperty)">
          <source>The friendly name of the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> property, or a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic) if the specified <ph id="ph3">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> property is not found.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 속성의 이름이거나, 지정된 <ph id="ph3">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 속성을 찾을 수 없으면 null 참조(Visual Basic의 경우 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>)입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Automation.PropertyName(System.Windows.Automation.AutomationProperty)">
          <source>The following example displays the name of each property supported by an <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph>.</source>
          <target state="translated">다음 예제에서 지 원하는 각 속성의 이름을 표시 한 <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="F:System.Windows.Automation.Automation.RawViewCondition">
          <source>Represents a predefined view of the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> tree that includes all <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> elements.</source>
          <target state="translated">모든 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 요소가 포함된 미리 정의된 <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 트리 뷰를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Automation.Automation.RawViewCondition">
          <source>Used by itself, this condition is functionally identical to <ph id="ph1">&lt;xref:System.Windows.Automation.Condition.TrueCondition&gt;</ph>.</source>
          <target state="translated">단독으로 사용 하면 다음 조건이 기능적으로 동일 <ph id="ph1">&lt;xref:System.Windows.Automation.Condition.TrueCondition&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.RemoveAllEventHandlers">
          <source>Removes all registered <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> event handlers.</source>
          <target state="translated">등록된 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 이벤트 처리기를 모두 제거합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.RemoveAutomationEventHandler(System.Windows.Automation.AutomationEvent,System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationEventHandler)">
          <source>An event identifier.</source>
          <target state="translated">이벤트 식별자입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.RemoveAutomationEventHandler(System.Windows.Automation.AutomationEvent,System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationEventHandler)">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> element on which to remove the event handler.</source>
          <target state="translated">이벤트 처리기를 제거할 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.RemoveAutomationEventHandler(System.Windows.Automation.AutomationEvent,System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationEventHandler)">
          <source>The handler method that was passed to <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Automation.AddAutomationEventHandler(System.Windows.Automation.AutomationEvent,System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationEventHandler)" /&gt;</ph> for the specified event identifier and <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> element.</source>
          <target state="translated">지정된 이벤트 식별자 및 <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 요소를 사용하여 <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Automation.AddAutomationEventHandler(System.Windows.Automation.AutomationEvent,System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationEventHandler)" /&gt;</ph>에 전달한 처리기 메서드입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.RemoveAutomationEventHandler(System.Windows.Automation.AutomationEvent,System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationEventHandler)">
          <source>Removes the specified <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> event handler.</source>
          <target state="translated">지정된 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 이벤트 처리기를 제거합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Automation.RemoveAutomationEventHandler(System.Windows.Automation.AutomationEvent,System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationEventHandler)">
          <source>The following example code shows an event handler being added and removed.</source>
          <target state="translated">다음 예제 코드에서는 이벤트 처리기를 추가 하 고 제거 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.RemoveAutomationFocusChangedEventHandler(System.Windows.Automation.AutomationFocusChangedEventHandler)">
          <source>A handler method that was passed to <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Automation.AddAutomationFocusChangedEventHandler(System.Windows.Automation.AutomationFocusChangedEventHandler)" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Automation.Automation.AddAutomationFocusChangedEventHandler(System.Windows.Automation.AutomationFocusChangedEventHandler)" /&gt;</ph>에 전달한 처리기 메서드입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.RemoveAutomationFocusChangedEventHandler(System.Windows.Automation.AutomationFocusChangedEventHandler)">
          <source>Removes the specified focus-changed event handler.</source>
          <target state="translated">지정된 포커스 변경 이벤트 처리기를 제거합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Automation.RemoveAutomationFocusChangedEventHandler(System.Windows.Automation.AutomationFocusChangedEventHandler)">
          <source>The following example code shows a focus-changed event handler being added and removed.</source>
          <target state="translated">다음 예제 코드에서는 포커스 변경 이벤트 처리기를 추가 하 고 제거 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.RemoveAutomationPropertyChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationPropertyChangedEventHandler)">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> element from which to remove the event handler.</source>
          <target state="translated">이벤트 처리기를 제거할 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.RemoveAutomationPropertyChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationPropertyChangedEventHandler)">
          <source>A handler method that was passed to <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Automation.AddAutomationPropertyChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationPropertyChangedEventHandler,System.Windows.Automation.AutomationProperty[])" /&gt;</ph> for the specified <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> element.</source>
          <target state="translated">지정된 <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 요소를 사용하여 <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Automation.AddAutomationPropertyChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationPropertyChangedEventHandler,System.Windows.Automation.AutomationProperty[])" /&gt;</ph>에 전달한 처리기 메서드입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.RemoveAutomationPropertyChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationPropertyChangedEventHandler)">
          <source>Removes the specified property-changed event handler.</source>
          <target state="translated">지정된 속성 변경 이벤트 처리기를 제거합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Automation.RemoveAutomationPropertyChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationPropertyChangedEventHandler)">
          <source>The following example code shows a property-changed event handler being added and removed.</source>
          <target state="translated">다음 예제 코드에서는 속성 변경 이벤트 처리기를 추가 하 고 제거 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.RemoveStructureChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.StructureChangedEventHandler)">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> element from which to remove the event handler.</source>
          <target state="translated">이벤트 처리기를 제거할 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.RemoveStructureChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.StructureChangedEventHandler)">
          <source>A handler method that was passed to <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Automation.AddStructureChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.StructureChangedEventHandler)" /&gt;</ph> for the specified <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> element.</source>
          <target state="translated">지정된 <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 요소를 사용하여 <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Automation.AddStructureChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.StructureChangedEventHandler)" /&gt;</ph>에 전달한 처리기 메서드입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Automation.RemoveStructureChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.StructureChangedEventHandler)">
          <source>Removes the specified structure-changed event handler.</source>
          <target state="translated">지정된 구조 변경 이벤트 처리기를 제거합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>