<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ExpandCollapsePattern.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c9065bd5fa5e10d3ba34f6f6a3500d1472474041.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c9065bd5fa5e10d3ba34f6f6a3500d1472474041</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Automation.ExpandCollapsePattern">
          <source>Represents controls that visually expand to display content and collapse to hide content.</source>
          <target state="translated">시각적으로 확장되어 콘텐츠를 표시하거나 축소되어 콘텐츠를 숨기는 컨트롤을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.ExpandCollapsePattern">
          <source>Aggregate controls—built with child objects that provide the UI for expand/collapse functionality—must support the <ph id="ph1">&lt;xref:System.Windows.Automation.ExpandCollapsePattern&gt;</ph> control pattern while their child elements do not.</source>
          <target state="translated">집계 컨트롤-확장/축소 기능에 대 한 UI를 제공 하는 자식 개체를 사용 하 여 빌드한-지원 해야 합니다는 <ph id="ph1">&lt;xref:System.Windows.Automation.ExpandCollapsePattern&gt;</ph> 컨트롤 패턴 하지만 자식 요소는 그렇지 않습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.ExpandCollapsePattern">
          <source>For example, a combo box control is built with a combination of list box, button, and edit controls, but it is only the parent combo box that must support the <ph id="ph1">&lt;xref:System.Windows.Automation.ExpandCollapsePattern&gt;</ph>.</source>
          <target state="translated">예를 들어 콤보 상자 컨트롤은 목록 상자, 단추 및 편집 컨트롤 조합으로 빌드되지만 <ph id="ph1">&lt;xref:System.Windows.Automation.ExpandCollapsePattern&gt;</ph>을 지원해야 하는 부모 콤보 상자일 뿐입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.ExpandCollapsePattern">
          <source>A menu control, even though an aggregate of individual menu items, is an exception to this rule.</source>
          <target state="translated">메뉴 컨트롤을 개별 메뉴 항목에 대 한 집계는이 규칙의 예외입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.ExpandCollapsePattern">
          <source>The menu items support the <ph id="ph1">&lt;xref:System.Windows.Automation.ExpandCollapsePattern&gt;</ph> control pattern, but the parent menu control does not.</source>
          <target state="translated">메뉴 항목이 지원은 <ph id="ph1">&lt;xref:System.Windows.Automation.ExpandCollapsePattern&gt;</ph> 컨트롤 패턴을 있지만 부모 메뉴 컨트롤은 그렇지 않습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.ExpandCollapsePattern">
          <source>A similar exception applies to the tree and tree item controls.</source>
          <target state="translated">트리 및 트리 항목 컨트롤에도 유사한 예외가 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.ExpandCollapsePattern.Cached">
          <source>Gets the cached <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> property values for this <ph id="ph2">&lt;see cref="T:System.Windows.Automation.ExpandCollapsePattern" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Windows.Automation.ExpandCollapsePattern" /&gt;</ph>에 대해 캐시된 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 속성 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.ExpandCollapsePattern.Cached">
          <source>A structure containing the cached <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> property values for the control pattern.</source>
          <target state="translated">컨트롤 패턴에 대해 캐시된 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 속성 값을 포함하는 구조체입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.ExpandCollapsePattern.Cached">
          <source>Cached property values must have been previously requested using a <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph>.</source>
          <target state="translated">캐시 된 속성 값 해야 이전에 요청 된 사용 하는 <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.ExpandCollapsePattern.Cached">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Automation.SelectionPattern.Current%2A&gt;</ph> to get the current value of a property.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Automation.SelectionPattern.Current%2A&gt;</ph> 속성의 현재 값을 가져올 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.ExpandCollapsePattern.Cached">
          <source>For information on the properties available and their use, see <ph id="ph1">&lt;xref:System.Windows.Automation.SelectionPattern.SelectionPatternInformation&gt;</ph>.</source>
          <target state="translated">사용 가능한 속성 및 사용에 대 한 자세한 내용은 참조 하십시오. <ph id="ph1">&lt;xref:System.Windows.Automation.SelectionPattern.SelectionPatternInformation&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.ExpandCollapsePattern.Cached">
          <source>The requested property is not in the cache.</source>
          <target state="translated">요청한 속성이 캐시에 없습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.ExpandCollapsePattern.Collapse">
          <source>Hides all descendant nodes, controls, or content of the <ph id="ph1">&lt;see cref="T:System.Windows.Automation.AutomationElement" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Automation.AutomationElement" /&gt;</ph>의 모든 하위 노드, 컨트롤 또는 콘텐츠를 숨깁니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.ExpandCollapsePattern.Collapse">
          <source>This is a blocking method that returns after the UI Automation element has been collapsed.</source>
          <target state="translated">이 UI 자동화 요소가 축소 된 후 반환 되는 블로킹 메서드입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.ExpandCollapsePattern.Collapse">
          <source>There are cases when a UI Automation element that is marked as a leaf node might not know whether it has children until either the <ph id="ph1">&lt;xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A&gt;</ph> or the <ph id="ph2">&lt;xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A&gt;</ph> method is called.</source>
          <target state="translated">리프 노드로 표시 된 UI 자동화 요소 자식이 될 때까지 있는 여부를 모를 수도 고려할 때는 <ph id="ph1">&lt;xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.ExpandCollapsePattern.Collapse">
          <source>This behavior is possible with a tree view control that does delayed loading of its child items.</source>
          <target state="translated">이 동작은 트리 뷰 컨트롤을 지연 로드 해당 자식 항목으로 이전에 가능 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.ExpandCollapsePattern.Collapse">
          <source>For example, <ph id="ph1">[!INCLUDE[TLA#tla_winexpl](~/includes/tlasharptla-winexpl-md.md)]</ph> might display the expand icon for a node even though there are currently no child items; when the icon is clicked, the control polls for child items, finds none, and removes the expand icon.</source>
          <target state="translated">예를 들어 <ph id="ph1">[!INCLUDE[TLA#tla_winexpl](~/includes/tlasharptla-winexpl-md.md)]</ph> 현재 자식 항목이 없는 경우에 노드에 대 한 확장 아이콘을 표시 될 수 있습니다;는 아이콘을 클릭 하면 컨트롤이 하위 항목에 대해 폴링하에서 발견 되지 않아 확장 아이콘을 제거 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.ExpandCollapsePattern.Collapse">
          <source>In these cases clients should listen for a property-changed event on the <ph id="ph1">&lt;xref:System.Windows.Automation.ExpandCollapsePattern.ExpandCollapsePatternInformation.ExpandCollapseState%2A&gt;</ph> property by registering an event handler with the <ph id="ph2">&lt;xref:System.Windows.Automation.Automation.AddAutomationPropertyChangedEventHandler%2A&gt;</ph> method.</source>
          <target state="translated">이러한 경우에 클라이언트가 수신 대기할 속성 변경 이벤트에 대 한는 <ph id="ph1">&lt;xref:System.Windows.Automation.ExpandCollapsePattern.ExpandCollapsePatternInformation.ExpandCollapseState%2A&gt;</ph> 와 이벤트 처리기를 등록 하 여 속성의 <ph id="ph2">&lt;xref:System.Windows.Automation.Automation.AddAutomationPropertyChangedEventHandler%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.ExpandCollapsePattern.Collapse">
          <source>In the following example, a UI Automation element representing a menu item is passed to a function that attempts to expand or collapse the menu item based on its current <ph id="ph1">&lt;xref:System.Windows.Automation.ExpandCollapseState&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 메뉴 항목을 나타내는 UI 자동화 요소가 현재에 따라 메뉴 항목을 확장 또는 축소 하는 함수에 전달 됩니다 <ph id="ph1">&lt;xref:System.Windows.Automation.ExpandCollapseState&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.ExpandCollapsePattern.Collapse">
          <source><ph id="ph1">&lt;see cref="M:System.Windows.Automation.ExpandCollapsePattern.Collapse" /&gt;</ph> is called when the <ph id="ph2">&lt;see cref="T:System.Windows.Automation.ExpandCollapseState" /&gt;</ph><ph id="ph3"> = </ph><ph id="ph4">&lt;see cref="F:System.Windows.Automation.ExpandCollapseState.LeafNode" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Automation.ExpandCollapseState" /&gt;</ph><ph id="ph3"> = </ph><ph id="ph4">&lt;see cref="F:System.Windows.Automation.ExpandCollapseState.LeafNode" /&gt;</ph>인 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Automation.ExpandCollapsePattern.Collapse" /&gt;</ph>가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.ExpandCollapsePattern.Current">
          <source>Gets the current <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> property values for this <ph id="ph2">&lt;see cref="T:System.Windows.Automation.ExpandCollapsePattern" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Windows.Automation.ExpandCollapsePattern" /&gt;</ph>의 현재 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 속성 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.ExpandCollapsePattern.Current">
          <source>A structure containing the current <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> property values for the control pattern.</source>
          <target state="translated">컨트롤 패턴에 대한 현재 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 속성 값을 포함하는 구조체입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.ExpandCollapsePattern.Current">
          <source>This pattern must be from an <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> with an <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElementMode.Full&gt;</ph> reference in order to get current values.</source>
          <target state="translated">이 패턴에서 가져와야는 <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElementMode.Full&gt;</ph> 현재 값을 가져오기 위해 참조 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.ExpandCollapsePattern.Current">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> was obtained using <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElementMode.None&gt;</ph>, it contains only cached data, and attempting to get the current value of any property raises an exception.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> 사용 하 여 가져왔습니다 <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElementMode.None&gt;</ph>만 캐시 데이터를 포함 하 고 모든 속성의 현재 값을 가져오려고 하면 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.ExpandCollapsePattern.Current">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Automation.ExpandCollapsePattern.Cached%2A&gt;</ph> to get the cached value of a property that was previously specified using a <ph id="ph2">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph>.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Automation.ExpandCollapsePattern.Cached%2A&gt;</ph> 를 사용 하 여 이전에 지정 된 속성의 캐시 된 값을 가져올 수는 <ph id="ph2">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.ExpandCollapsePattern.Current">
          <source>For information on the properties available and their use, see <ph id="ph1">&lt;xref:System.Windows.Automation.ExpandCollapsePattern.ExpandCollapsePatternInformation&gt;</ph>.</source>
          <target state="translated">사용 가능한 속성 및 사용에 대 한 자세한 내용은 참조 하십시오. <ph id="ph1">&lt;xref:System.Windows.Automation.ExpandCollapsePattern.ExpandCollapsePatternInformation&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.ExpandCollapsePattern.Expand">
          <source>Displays all child nodes, controls, or content of the <ph id="ph1">&lt;see cref="T:System.Windows.Automation.AutomationElement" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Automation.AutomationElement" /&gt;</ph>의 모든 자식 노드, 컨트롤 또는 내용을 표시합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.ExpandCollapsePattern.Expand">
          <source>This is a blocking method that returns after the <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> has been expanded.</source>
          <target state="translated">이 차단 후 반환 하는 방법의 <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> 확장 되었습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.ExpandCollapsePattern.Expand">
          <source>There are cases when a <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> that is marked as a leaf node might not know whether it has children until either the <ph id="ph2">&lt;xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A&gt;</ph> or the <ph id="ph3">&lt;xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A&gt;</ph> method is called.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> 리프 노드 자식이 될 때까지 있는 여부를 모를 수도 것으로 표시 되어 있는 <ph id="ph2">&lt;xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.ExpandCollapsePattern.Expand">
          <source>This behavior is possible with a tree view control that does delayed loading of its child items.</source>
          <target state="translated">이 동작은 트리 뷰 컨트롤을 지연 로드 해당 자식 항목으로 이전에 가능 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.ExpandCollapsePattern.Expand">
          <source>For example, <ph id="ph1">[!INCLUDE[TLA#tla_winexpl](~/includes/tlasharptla-winexpl-md.md)]</ph> might display the expand icon for a node even though there are currently no child items; when the icon is clicked, the control polls for child items, finds none, and removes the expand icon.</source>
          <target state="translated">예를 들어 <ph id="ph1">[!INCLUDE[TLA#tla_winexpl](~/includes/tlasharptla-winexpl-md.md)]</ph> 현재 자식 항목이 없는 경우에 노드에 대 한 확장 아이콘을 표시 될 수 있습니다;는 아이콘을 클릭 하면 컨트롤이 하위 항목에 대해 폴링하에서 발견 되지 않아 확장 아이콘을 제거 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.ExpandCollapsePattern.Expand">
          <source>In these cases clients should listen for a property-changed event on the <ph id="ph1">&lt;xref:System.Windows.Automation.ExpandCollapsePattern.ExpandCollapsePatternInformation.ExpandCollapseState%2A&gt;</ph> property by registering an event handler with the <ph id="ph2">&lt;xref:System.Windows.Automation.Automation.AddAutomationPropertyChangedEventHandler%2A&gt;</ph> method.</source>
          <target state="translated">이러한 경우에 클라이언트가 수신 대기할 속성 변경 이벤트에 대 한는 <ph id="ph1">&lt;xref:System.Windows.Automation.ExpandCollapsePattern.ExpandCollapsePatternInformation.ExpandCollapseState%2A&gt;</ph> 와 이벤트 처리기를 등록 하 여 속성의 <ph id="ph2">&lt;xref:System.Windows.Automation.Automation.AddAutomationPropertyChangedEventHandler%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.ExpandCollapsePattern.Expand">
          <source>In the following example, an <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> representing a menu item is passed to a function that attempts to expand or collapse the menu item based on its current <ph id="ph2">&lt;xref:System.Windows.Automation.ExpandCollapseState&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph> 현재에 따라 메뉴 항목을 확장 또는 축소 하는 함수에 전달 되는 메뉴 항목을 나타내는 <ph id="ph2">&lt;xref:System.Windows.Automation.ExpandCollapseState&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.ExpandCollapsePattern.Expand">
          <source><ph id="ph1">&lt;see cref="M:System.Windows.Automation.ExpandCollapsePattern.Expand" /&gt;</ph> is called when the <ph id="ph2">&lt;see cref="T:System.Windows.Automation.ExpandCollapseState" /&gt;</ph><ph id="ph3"> = </ph><ph id="ph4">&lt;see cref="F:System.Windows.Automation.ExpandCollapseState.LeafNode" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Automation.ExpandCollapseState" /&gt;</ph><ph id="ph3"> = </ph><ph id="ph4">&lt;see cref="F:System.Windows.Automation.ExpandCollapseState.LeafNode" /&gt;</ph>인 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Automation.ExpandCollapsePattern.Expand" /&gt;</ph>가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="F:System.Windows.Automation.ExpandCollapsePattern.ExpandCollapseStateProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Automation.ExpandCollapsePattern.ExpandCollapsePatternInformation.ExpandCollapseState" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Automation.ExpandCollapsePattern.ExpandCollapsePatternInformation.ExpandCollapseState" /&gt;</ph> 속성을 식별합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Automation.ExpandCollapsePattern.ExpandCollapseStateProperty">
          <source>This identifier is used by UI Automation client applications.</source>
          <target state="translated">이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Automation.ExpandCollapsePattern.ExpandCollapseStateProperty">
          <source>UI Automation providers should use the equivalent field in <ph id="ph1">&lt;xref:System.Windows.Automation.ExpandCollapsePatternIdentifiers&gt;</ph>.</source>
          <target state="translated">UI 자동화 공급자의 해당 필드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Automation.ExpandCollapsePatternIdentifiers&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Automation.ExpandCollapsePattern.ExpandCollapseStateProperty">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.ExpandCollapseState&gt;</ph> refers to the visibility of immediate child objects only; it does not refer to the visibility of all descendant objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Automation.ExpandCollapseState&gt;</ph> 는 직계 자식 개체의 표시 유형을 나타내며, 모든 하위 개체의 표시 유형을 나타내지는 않습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Automation.ExpandCollapsePattern.ExpandCollapseStateProperty">
          <source>The default value is <ph id="ph1">&lt;xref:System.Windows.Automation.ExpandCollapseState.Expanded&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;xref:System.Windows.Automation.ExpandCollapseState.Expanded&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Automation.ExpandCollapsePattern.ExpandCollapseStateProperty">
          <source>In the following example, a root element is passed to a function that returns a collection of <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> elements that are descendants of the root and satisfy a set of property conditions.</source>
          <target state="translated">다음 예제에서는 루트 요소 컬렉션을 반환 하는 함수에 전달 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 은 루트의 하위 항목 및 속성 조건 집합을 만족 하는 요소입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="F:System.Windows.Automation.ExpandCollapsePattern.Pattern">
          <source>Identifies the <ph id="ph1">&lt;see cref="T:System.Windows.Automation.ExpandCollapsePattern" /&gt;</ph> control pattern.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Automation.ExpandCollapsePattern" /&gt;</ph> 컨트롤 패턴을 식별합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Automation.ExpandCollapsePattern.Pattern">
          <source>This identifier is used by UI Automation client applications.</source>
          <target state="translated">이 식별자는 UI 자동화 클라이언트 응용 프로그램에서 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Automation.ExpandCollapsePattern.Pattern">
          <source>UI Automation providers should use the equivalent field in <ph id="ph1">&lt;xref:System.Windows.Automation.ExpandCollapsePatternIdentifiers&gt;</ph>.</source>
          <target state="translated">UI 자동화 공급자의 해당 필드를 사용 해야 <ph id="ph1">&lt;xref:System.Windows.Automation.ExpandCollapsePatternIdentifiers&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Automation.ExpandCollapsePattern.Pattern">
          <source>The pattern <ph id="ph1">[!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)]</ph> is passed to methods such as <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A&gt;</ph> to retrieve the control pattern of interest from the specified <ph id="ph3">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph>.</source>
          <target state="translated">패턴 <ph id="ph1">[!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)]</ph> 와 같은 메서드에 전달 <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A&gt;</ph> 지정 된 위치에서 원하는 컨트롤 패턴을 검색할 <ph id="ph3">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Automation.ExpandCollapsePattern.Pattern">
          <source>In the following example, a <ph id="ph1">&lt;xref:System.Windows.Automation.ExpandCollapsePattern&gt;</ph> control pattern is obtained from a UI Automation element.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Automation.ExpandCollapsePattern&gt;</ph> 컨트롤 패턴 UI 자동화 요소에서 가져옵니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>