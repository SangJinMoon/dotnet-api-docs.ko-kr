<Type Name="AutomationIdentifier" FullName="System.Windows.Automation.AutomationIdentifier">
  <TypeSignature Language="C#" Value="public class AutomationIdentifier : IComparable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AutomationIdentifier extends System.Object implements class System.IComparable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.AutomationIdentifier" />
  <TypeSignature Language="VB.NET" Value="Public Class AutomationIdentifier&#xA;Implements IComparable" />
  <TypeSignature Language="C++ CLI" Value="public ref class AutomationIdentifier : IComparable" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationTypes</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="81109-101">UI Automation의 컨트롤 형식, 이벤트, 패턴, 속성 및 텍스트 특성을 식별하는 형식에 대한 기본 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="81109-101">Base class for types that identify control types, events, patterns, properties, and text attributes in UI Automation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81109-102"><xref:System.Windows.Automation.AutomationIdentifier> 생성자가 없는 하 고 응용 프로그램에서 인스턴스화할 수 없으므로 사실상 추상 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="81109-102">The <xref:System.Windows.Automation.AutomationIdentifier> class is effectively abstract, as it has no constructor and cannot be instantiated by applications.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationIdentifier.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="81109-103">이 개체와 비교할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="81109-103">The object to compare this one with.</span></span></param>
        <summary><span data-ttu-id="81109-104">이 <see cref="T:System.Windows.Automation.AutomationIdentifier" />를 다른 <see cref="T:System.Windows.Automation.AutomationIdentifier" />와 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="81109-104">Compares this <see cref="T:System.Windows.Automation.AutomationIdentifier" /> with another <see cref="T:System.Windows.Automation.AutomationIdentifier" />.</span></span></summary>
        <returns><span data-ttu-id="81109-105">이 개체의 해시 코드에서 <paramref name="obj" />의 해시 코드를 뺀 값입니다.</span><span class="sxs-lookup"><span data-stu-id="81109-105">The hash code of this object minus the hash code of <paramref name="obj" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="81109-106"><paramref name="obj" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="81109-106"><paramref name="obj" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationIdentifier.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="81109-107">이 식별자와 비교할 <see cref="T:System.Windows.Automation.AutomationIdentifier" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="81109-107">An <see cref="T:System.Windows.Automation.AutomationIdentifier" /> object to compare with this identifier.</span></span></param>
        <summary><span data-ttu-id="81109-108">지정된 <see cref="T:System.Windows.Automation.AutomationIdentifier" />가 이 <see cref="T:System.Windows.Automation.AutomationIdentifier" />와 같은지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="81109-108">Returns a value indicating whether the supplied <see cref="T:System.Windows.Automation.AutomationIdentifier" /> is equivalent to this <see cref="T:System.Windows.Automation.AutomationIdentifier" />.</span></span></summary>
        <returns>
          <span data-ttu-id="81109-109">개체가 서로 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="81109-109"><see langword="true" /> if the objects are equivalent; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationIdentifier.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="81109-110">이 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 식별자의 해시 코드를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="81109-110">Returns the hash code for this [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] identifier.</span></span></summary>
        <returns><span data-ttu-id="81109-111">부호 있는 32비트 정수 해시 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="81109-111">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81109-112">이 메서드를 재정의 <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="81109-112">This method overrides the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public int Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Id" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationIdentifier.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Id { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81109-113">내부 숫자 식별자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="81109-113">Gets the underlying numerical identifier.</span></span></summary>
        <value><span data-ttu-id="81109-114">내부 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="81109-114">The underlying identifier.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Automation.AutomationEvent.LookupById(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ProgrammaticName">
      <MemberSignature Language="C#" Value="public string ProgrammaticName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProgrammaticName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationIdentifier.ProgrammaticName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProgrammaticName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProgrammaticName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81109-115">등록된 프로그래밍 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="81109-115">Gets the registered programmatic name.</span></span></summary>
        <value><span data-ttu-id="81109-116">프로그래밍 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="81109-116">The programmatic name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81109-117"><xref:System.Windows.Automation.AutomationIdentifier.ProgrammaticName%2A> 디버깅 및 진단 용도로 됩니다.</span><span class="sxs-lookup"><span data-stu-id="81109-117"><xref:System.Windows.Automation.AutomationIdentifier.ProgrammaticName%2A> is intended for debugging and diagnostic purposes only.</span></span> <span data-ttu-id="81109-118">문자열 지역화 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="81109-118">The string is not localized.</span></span>  
  
 <span data-ttu-id="81109-119">이 속성은 문자열 비교에 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="81109-119">This property should not be used in string comparisons.</span></span> <span data-ttu-id="81109-120">두 개의 속성이 같은지 여부를 확인 하려면 속성 식별자를 직접 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="81109-120">To determine if two properties are the same, compare the property identifiers directly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81109-121">다음 예제에서 지 원하는 각 속성의 프로그래밍 이름 표시는 <xref:System.Windows.Automation.AutomationElement>합니다.</span><span class="sxs-lookup"><span data-stu-id="81109-121">The following example displays the programmatic name of each property supported by an <xref:System.Windows.Automation.AutomationElement>.</span></span>  
  
 [!code-csharp[UIAClient_snip#115](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#115)]
 [!code-vb[UIAClient_snip#115](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#115)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>