<Type Name="OdbcParameter" FullName="System.Data.Odbc.OdbcParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b182830d8ea844ee2780122fc5255e2bb44d7d35" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30390817" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OdbcParameter : System.Data.Common.DbParameter, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OdbcParameter extends System.Data.Common.DbParameter implements class System.Data.IDataParameter, class System.Data.IDbDataParameter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Odbc.OdbcParameter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OdbcParameter&#xA;Inherits DbParameter&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OdbcParameter sealed : System::Data::Common::DbParameter, ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Odbc</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbParameter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.Odbc.OdbcParameter/OdbcParameterConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>매개 변수를 <see cref="T:System.Data.Odbc.OdbcCommand" />에 나타내고, 선택적으로 <see cref="T:System.Data.DataColumn" />에 매핑합니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 매개 변수 이름은 대/소문자를 구분하지 않습니다.  
  
 Microsoft OLE DB Provider를 사용 하 여 Oracle MSDAORA () 및.NET Framework ODBC Data Provider는 Oracle 데이터베이스를 쿼리할 때 사용 하는 `LIKE` 절 쿼리 고정 길이 필드 값을 일치 하는 모든 필요한 항목을 반환할 수 없습니다. Oracle의 고정 길이 필드 값을 일치 하는 경우는 이유는는 `LIKE` 절 뒤쪽 채움 공백을 포함 하 여 문자열의 전체 길이 일치 합니다. 예를 들어 테이블에 Oracle 데이터베이스 필드가 "Field1"으로 정의 된 `char(3)`, 값을 입력 하 고 다음 코드를 해당 테이블의 행에 "a"는 행을 반환 하지 합니다.  
  
```vb  
Dim queryString As String = "SELECT * FROM Table1 WHERE Field1 LIKE ?"  
Dim command As OleDbCommand = New OleDbCommand(queryString, connection)  
command.Parameters.Add("@p1", OleDbType.Char, 3).Value = "a"  
Dim reader As OleDbDataReader = command.ExecuteReader()  
```  
  
```csharp  
string queryString = "SELECT * FROM Table1 WHERE Field1 LIKE ?";  
OleDbCommand command = new OleDbCommand(queryString, connection);  
command.Parameters.Add("@p1", OleDbType.Char, 3).Value = "a";  
OleDbDataReader reader = command.ExecuteReader();  
```  
  
 Oracle "a"로 서의 열 값을 저장 하기 때문에 이것이 (패딩 "a"와 후행 공백 3의 고정된 필드 길이), Oracle의 경우 "a"의 매개 변수 값에 대 한 일치 하는 항목으로 처리 하지 않습니다는 `LIKE` 고정 길이 필드의 비교 합니다.  
  
 이 문제를 해결 하려면 매개 변수 값에 백분율 ("%") 와일드 카드 문자를 추가 (`"a%"`), 하거나 SQL을 사용 하 여 `=` 비교 대신 합니다.  
  
   
  
## Examples  
 다음 예제에서는 여러 인스턴스의 <xref:System.Data.Odbc.OdbcParameter> 통해는 <xref:System.Data.Odbc.OdbcParameterCollection> 내는 <xref:System.Data.Odbc.OdbcDataAdapter>합니다. 이러한 매개 변수는 데이터를 데이터 원본에서 데이터를 선택 하는 데는 <xref:System.Data.DataSet>합니다. 이 예에서는 가정 하는 <xref:System.Data.DataSet> 및 <xref:System.Data.Odbc.OdbcDataAdapter> 적절 한 스키마, 명령 및 연결을 사용 하 여 이미 만들어져 있습니다.  
  
 [!code-csharp[Classic WebData OdbcParameter#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcParameter/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcParameter#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcParameter/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Data.Odbc.OdbcParameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Data.Odbc.OdbcParameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 생성자는 모든 필드를를 기본값으로 초기화합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.Odbc.OdbcParameter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData OdbcParameter.OdbcParameter#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.OdbcParameter/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcParameter.OdbcParameter#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.OdbcParameter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcParameter (string name, System.Data.Odbc.OdbcType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.Odbc.OdbcType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As OdbcType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcParameter(System::String ^ name, System::Data::Odbc::OdbcType type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Data.Odbc.OdbcType" />
      </Parameters>
      <Docs>
        <param name="name">매개 변수의 이름입니다.</param>
        <param name="type">
          <see cref="T:System.Data.Odbc.OdbcType" /> 값 중 하나입니다.</param>
        <summary>매개 변수 이름과 데이터 형식을 사용하여 <see cref="T:System.Data.Odbc.OdbcParameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 <xref:System.Data.Odbc.OdbcParameter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData OdbcParameter.OdbcParameter1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.OdbcParameter1/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcParameter.OdbcParameter1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.OdbcParameter1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="type" /> 매개 변수에 지정한 값이 올바르지 않은 백 엔드 데이터 형식입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcParameter (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcParameter(System::String ^ name, System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">매개 변수의 이름입니다.</param>
        <param name="value">
          <see cref="T:System.Data.Odbc.OdbcParameter" /> 개체입니다.</param>
        <summary>매개 변수 이름과 <see cref="T:System.Data.Odbc.OdbcParameter" /> 개체를 사용하여 <see cref="T:System.Data.Odbc.OdbcParameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 오버 로드를 사용 하는 경우 주의 해야는 <xref:System.Data.Odbc.OdbcParameter> 정수 매개 변수 값을 지정 하는 생성자입니다. 이 오버로드는 <xref:System.Object> 형식의 `value`를 사용하므로 다음 C# 예제와 같이 값이 0인 경우 정수 계열 값을 <xref:System.Object> 형식으로 변환해야 합니다.  
  
```  
Parameter = new OdbcParameter("@pname", Convert.ToInt32(0));  
```  
  
 이 변환을 수행 하지 않으면 컴파일러를 호출 하는 것을 가정은 <xref:System.Data.Odbc.OdbcParameter.%23ctor%2A?displayProperty=nameWithType> 생성자 오버 로드 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcParameter (string name, System.Data.Odbc.OdbcType type, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.Odbc.OdbcType type, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As OdbcType, size As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcParameter(System::String ^ name, System::Data::Odbc::OdbcType type, int size);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Data.Odbc.OdbcType" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">매개 변수의 이름입니다.</param>
        <param name="type">
          <see cref="T:System.Data.Odbc.OdbcType" /> 값 중 하나입니다.</param>
        <param name="size">매개 변수의 길이입니다.</param>
        <summary>매개 변수 이름, 데이터 형식 및 길이를 사용하여 <see cref="T:System.Data.Odbc.OdbcParameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 <xref:System.Data.Odbc.OdbcParameter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData OdbcParameter.OdbcParameter2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.OdbcParameter2/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcParameter.OdbcParameter2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.OdbcParameter2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="type" /> 매개 변수에 지정한 값이 올바르지 않은 백 엔드 데이터 형식입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcParameter (string name, System.Data.Odbc.OdbcType type, int size, string sourcecolumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.Odbc.OdbcType type, int32 size, string sourcecolumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As OdbcType, size As Integer, sourcecolumn As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcParameter(System::String ^ name, System::Data::Odbc::OdbcType type, int size, System::String ^ sourcecolumn);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Data.Odbc.OdbcType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="sourcecolumn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">매개 변수의 이름입니다.</param>
        <param name="type">
          <see cref="T:System.Data.Odbc.OdbcType" /> 값 중 하나입니다.</param>
        <param name="size">매개 변수의 길이입니다.</param>
        <param name="sourcecolumn">소스 열의 이름입니다.</param>
        <summary>매개 변수 이름, 데이터 형식, 길이 및 소스 열 이름을 사용하는 <see cref="T:System.Data.Odbc.OdbcParameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 <xref:System.Data.Odbc.OdbcParameter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData OdbcParameter.OdbcParameter3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.OdbcParameter3/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcParameter.OdbcParameter3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.OdbcParameter3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="type" /> 매개 변수에 지정한 값이 올바르지 않은 백 엔드 데이터 형식입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcParameter (string parameterName, System.Data.Odbc.OdbcType odbcType, int size, System.Data.ParameterDirection parameterDirection, bool isNullable, byte precision, byte scale, string srcColumn, System.Data.DataRowVersion srcVersion, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.Odbc.OdbcType odbcType, int32 size, valuetype System.Data.ParameterDirection parameterDirection, bool isNullable, unsigned int8 precision, unsigned int8 scale, string srcColumn, valuetype System.Data.DataRowVersion srcVersion, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcParameter(System::String ^ parameterName, System::Data::Odbc::OdbcType odbcType, int size, System::Data::ParameterDirection parameterDirection, bool isNullable, System::Byte precision, System::Byte scale, System::String ^ srcColumn, System::Data::DataRowVersion srcVersion, System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="odbcType" Type="System.Data.Odbc.OdbcType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="parameterDirection" Type="System.Data.ParameterDirection" />
        <Parameter Name="isNullable" Type="System.Boolean" />
        <Parameter Name="precision" Type="System.Byte" />
        <Parameter Name="scale" Type="System.Byte" />
        <Parameter Name="srcColumn" Type="System.String" />
        <Parameter Name="srcVersion" Type="System.Data.DataRowVersion" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameterName">매개 변수의 이름입니다.</param>
        <param name="odbcType">
          <see cref="T:System.Data.Odbc.OdbcType" /> 값 중 하나입니다.</param>
        <param name="size">매개 변수의 길이입니다.</param>
        <param name="parameterDirection">
          <see cref="T:System.Data.ParameterDirection" /> 값 중 하나입니다.</param>
        <param name="isNullable">
          필드 값에 null 값이 허용되면 <see langword="true" />이고, 허용되지 않으면 <see langword="false" />입니다.</param>
        <param name="precision">
          <see cref="P:System.Data.Odbc.OdbcParameter.Value" />가 확인되는 소수점 왼쪽과 오른쪽의 총 자릿수입니다.</param>
        <param name="scale">
          <see cref="P:System.Data.Odbc.OdbcParameter.Value" />가 확인되는 소수점 이하 총 자릿수입니다.</param>
        <param name="srcColumn">소스 열의 이름입니다.</param>
        <param name="srcVersion">
          <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다.</param>
        <param name="value">
          <see cref="T:System.Object" />의 값인 <see cref="T:System.Data.Odbc.OdbcParameter" />입니다.</param>
        <summary>매개 변수 이름, 데이터 형식, 길이, 소스 열 이름, 매개 변수 방향, 전체 자릿수 및 기타 속성을 사용하는 <see cref="T:System.Data.Odbc.OdbcParameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 <xref:System.Data.Odbc.OdbcParameter> 표시는 <xref:System.Data.Odbc.OdbcParameter.ParameterName%2A>합니다.  
  
 [!code-csharp[Classic WebData OdbcParameter.OdbcParameter4#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.OdbcParameter4/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcParameter.OdbcParameter4#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.OdbcParameter4/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="type" /> 매개 변수에 지정한 값이 올바르지 않은 백 엔드 데이터 형식입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcParameter (string parameterName, System.Data.Odbc.OdbcType odbcType, int size, System.Data.ParameterDirection parameterDirection, byte precision, byte scale, string sourceColumn, System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.Odbc.OdbcType odbcType, int32 size, valuetype System.Data.ParameterDirection parameterDirection, unsigned int8 precision, unsigned int8 scale, string sourceColumn, valuetype System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcParameter(System::String ^ parameterName, System::Data::Odbc::OdbcType odbcType, int size, System::Data::ParameterDirection parameterDirection, System::Byte precision, System::Byte scale, System::String ^ sourceColumn, System::Data::DataRowVersion sourceVersion, bool sourceColumnNullMapping, System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="odbcType" Type="System.Data.Odbc.OdbcType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="parameterDirection" Type="System.Data.ParameterDirection" />
        <Parameter Name="precision" Type="System.Byte" />
        <Parameter Name="scale" Type="System.Byte" />
        <Parameter Name="sourceColumn" Type="System.String" />
        <Parameter Name="sourceVersion" Type="System.Data.DataRowVersion" />
        <Parameter Name="sourceColumnNullMapping" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameterName">매개 변수의 이름입니다.</param>
        <param name="odbcType">
          <see cref="P:System.Data.Odbc.OdbcParameter.OdbcType" /> 값 중 하나입니다.</param>
        <param name="size">매개 변수의 길이입니다.</param>
        <param name="parameterDirection">
          <see cref="T:System.Data.ParameterDirection" /> 값 중 하나입니다.</param>
        <param name="precision">
          <see cref="P:System.Data.Odbc.OdbcParameter.Value" />가 확인되는 소수점 왼쪽과 오른쪽의 총 자릿수입니다.</param>
        <param name="scale">
          <see cref="P:System.Data.Odbc.OdbcParameter.Value" />가 확인되는 소수점 이하 총 자릿수입니다.</param>
        <param name="sourceColumn">소스 열의 이름입니다.</param>
        <param name="sourceVersion">
          <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다.</param>
        <param name="sourceColumnNullMapping">
          해당 소스 열에서 null을 허용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="value">
          <see cref="T:System.Object" />의 값인 <see cref="T:System.Data.Odbc.OdbcParameter" />입니다.</param>
        <summary>매개 변수 이름, 데이터 형식, 길이, 소스 열 이름, 매개 변수 방향, 전체 자릿수 및 기타 속성을 사용하는 <see cref="T:System.Data.Odbc.OdbcParameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 <xref:System.Data.Odbc.OdbcParameter> 표시는 <xref:System.Data.Odbc.OdbcParameter.ParameterName%2A>합니다.  
  
```vb  
Public Sub CreateOdbcParameter()  
  Dim parameter As New OdbcParameter("Description", OdbcType.VarChar, 11, ParameterDirection.Output, True, 0, 0, "Description", DataRowVersion.Current, False, "garden hose")  
  MessageBox.Show(parameter.ToString())  
End Sub  
```  
  
```csharp  
public void CreateOdbcParameter()   
{  
  OdbcParameter parameter = new OdbcParameter("Description",OdbcType.VarChar,  
              11,ParameterDirection.Output,true,0,0,"Description",  
              DataRowVersion.Current, false, "garden hose");  
  MessageBox.Show(parameter.ToString());  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="type" /> 매개 변수에 지정한 값이 올바르지 않은 백 엔드 데이터 형식입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public override System.Data.DbType DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DbType DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.DbType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DbType As DbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::DbType DbType { System::Data::DbType get(); void set(System::Data::DbType value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.DbType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>매개 변수의 <see cref="T:System.Data.DbType" />을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Data.DbType" /> 값 중 하나입니다. 기본값은 <see cref="T:System.String" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> 및 <xref:System.Data.Odbc.OdbcParameter.DbType%2A> 연결 됩니다. 설정의 <xref:System.Data.Odbc.OdbcParameter.DbType%2A> 변경은 <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> 을 지 원하는 <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>합니다.  
  
 지원 되는 데이터 형식의 목록에 대 한 적절 한 참조 <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> 멤버입니다. 자세한 내용은 참조 [DataAdapter 매개 변수](~/docs/framework/data/adonet/dataadapter-parameters.md)합니다.  
  
> [!NOTE]
>  <xref:System.Data.DbType.Object> 지원 되지 않습니다에서 Microsoft.NET Framework Data Provider for ODBC.  
  
   
  
## Examples  
 다음 예제에서는 한 **저장 프로시저** 관리 공급자를 ODBC를 사용 하 여 세 개의 매개 변수를 사용 합니다.  
  
 [!code-csharp[Classic WebData OdbcParameter.DbType#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.DbType/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcParameter.DbType#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcParameter.DbType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">속성이 유효한 <see cref="T:System.Data.DbType" />으로 설정되지 않은 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public override System.Data.ParameterDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ParameterDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Direction As ParameterDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ParameterDirection Direction { System::Data::ParameterDirection get(); void set(System::Data::ParameterDirection value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.Direction</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ParameterDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>매개 변수가 입력 전용, 출력 전용, 양방향 또는 저장 프로시저 반환 값 매개 변수인지 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Data.ParameterDirection" /> 값 중 하나입니다. 기본값은 <see langword="Input" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Data.ParameterDirection> 은 `Output`, 및 관련 된 실행 <xref:System.Data.Odbc.OdbcCommand> 는 값을 반환 하지 않습니다는 <xref:System.Data.Odbc.OdbcParameter> null 값이 포함 됩니다. Null 값을 사용 하 여 처리 하는 <xref:System.DBNull> 클래스입니다.  
  
 `Output``InputOut`, 및 `ReturnValue` 매개 변수를 호출 하 여 반환 된 <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> 호출할 때까지 액세스할 수 없습니다 <xref:System.Data.Odbc.OdbcDataReader.Close%2A> 또는 `Dispose` 에 <xref:System.Data.Odbc.OdbcDataReader>합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.Odbc.OdbcParameter> 속성 중 일부를 설정 합니다.  
  
```vb  
Public Sub CreateMyProc(connection As OdbcConnection)  
  
   Dim command As OdbcCommand = connection.CreateCommand()  
   command.CommandText = "{ call MyProc(?,?,?) }"  
   command.Parameters.Add("", OdbcType.Int).Value = 1  
   command.Parameters.Add("", OdbcType.Decimal).Value = 2  
   command.Parameters.Add("", OdbcType.Decimal).Value = 3  
  
End Sub  
```  
  
```csharp  
public void CreateMyProc(OdbcConnection connection)   
{  
   OdbcCommand command = connection.CreateCommand();  
   command.CommandText = "{ call MyProc(?,?,?) }";  
   command.Parameters.Add("", OdbcType.Int).Value = 1;  
   command.Parameters.Add("", OdbcType.Decimal).Value = 2;  
   command.Parameters.Add("", OdbcType.Decimal).Value = 3;  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">속성에 유효한 <see cref="T:System.Data.ParameterDirection" /> 값 중 하나를 설정하지 않은 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public override bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>매개 변수에 null 값이 허용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          null 값이 허용되면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Null 값을 사용 하 여 처리 하는 <xref:System.DBNull> 클래스입니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.Odbc.OdbcParameter> 속성 중 일부를 설정 합니다.  
  
```vb  
Public Sub CreateOdbcParameter()  
   Dim parameter As New OdbcParameter("Description", OdbcType.VarChar, 88)  
   parameter.IsNullable = True  
   parameter.Direction = ParameterDirection.Output  
End Sub  
```  
  
```csharp  
public void CreateOdbcParameter()   
{  
   OdbcParameter parameter = new OdbcParameter("Description", OdbcType.VarChar, 88);  
   parameter.IsNullable = true;  
   parameter.Direction = ParameterDirection.Output;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OdbcType">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcType OdbcType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Odbc.OdbcType OdbcType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.OdbcType" />
      <MemberSignature Language="VB.NET" Value="Public Property OdbcType As OdbcType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Odbc::OdbcType OdbcType { System::Data::Odbc::OdbcType get(); void set(System::Data::Odbc::OdbcType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Data.Common.DbProviderSpecificTypeProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>매개 변수의 <see cref="T:System.Data.Odbc.OdbcType" />을 가져오거나 설정합니다.</summary>
        <value>매개 변수의 <see cref="T:System.Data.Odbc.OdbcType" />인 <see cref="T:System.Data.Odbc.OdbcType" /> 값입니다. 기본값은 <see langword="Nchar" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> 및 <xref:System.Data.Odbc.OdbcParameter.DbType%2A> 연결 됩니다. 설정의 <xref:System.Data.Odbc.OdbcParameter.DbType%2A> 변경은 <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> 을 지 원하는 <xref:System.Data.Odbc.OdbcType>합니다.  
  
 지원 되는 데이터 형식의 목록에 대 한 적절 한 참조 <xref:System.Data.Odbc.OdbcType> 멤버입니다. 자세한 내용은 참조 [DataAdapter 매개 변수](~/docs/framework/data/adonet/dataadapter-parameters.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public int Offset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Offset" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.Offset" />
      <MemberSignature Language="VB.NET" Value="Public Property Offset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Offset { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterName">
      <MemberSignature Language="C#" Value="public override string ParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.ParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.ParameterName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Data.Odbc.OdbcParameter" />의 이름을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Data.Odbc.OdbcParameter" />의 이름입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 명명 된 매개 변수 대신 ODBC.NET 공급자는 명령 텍스트 구문에서 물음표 (?)로 표시 된 위치 매개 변수를 사용 합니다. 매개 변수 개체는 <xref:System.Data.Odbc.OdbcParameterCollection> 및 저장된 프로시저에 의해 허용 되는 실제 매개 변수 또는 매개 변수가 있는 SQL 문을 해당 하는 순서에 따라 서로 <xref:System.Data.Odbc.OdbcParameter> 개체는 순서가 아니라 컬렉션에 삽입 됩니다. 매개 변수 이름입니다. 매개 변수 이름은 지정할 수 있지만 매개 변수 개체 바인딩 중에 무시 됩니다.  
  
   
  
## Examples  
 다음 예에서는 데이터 원본 테이블 이름이 있음을 가정 **MyTable** 및으로에서는 라는 저장된 프로시저:  
  
```  
CREATE TABLE MyTable (col1 int, col2 smallmoney, col3 decimal)  
CREATE PROC MyProc (@p1 int, @p2 smallmoney, @p3 decimal) AS INSERT INTO MyTable VALUES (@p1, @p2, @p3)  
```  
  
 다음 예제에서는 매개 변수를 만들고를 MyProc 저장 프로시저를 호출 합니다.  
  
```vb  
Public Sub CreateMyProc(connection As OdbcConnection)  
  
   Dim command As OdbcCommand = connection.CreateCommand()  
  
   command.CommandText = "{ call MyProc(?,?,?) }"  
   command.Parameters.Add("", OdbcType.Int).Value = 1  
   command.Parameters.Add("", OdbcType.Decimal).Value = 2  
   command.Parameters.Add("", OdbcType.Decimal).Value = 3  
  
End Sub  
```  
  
```csharp  
public void CreateMyProc(OdbcConnection connection)   
{  
   OdbcCommand command = myConnection.CreateCommand();  
  
   command.CommandText = "{ call MyProc(?,?,?) }";  
   command.Parameters.Add("", OdbcType.Int).Value = 1;  
   command.Parameters.Add("", OdbcType.Decimal).Value = 2;  
   command.Parameters.Add("", OdbcType.Decimal).Value = 3;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Precision">
      <MemberSignature Language="C#" Value="public byte Precision { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Precision" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.Precision" />
      <MemberSignature Language="VB.NET" Value="Public Property Precision As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte Precision { System::Byte get(); void set(System::Byte value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Precision</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> 속성을 나타내는 데 사용된 숫자의 자릿수를 가져오거나 설정합니다.</summary>
        <value>
          <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> 속성을 나타내는 데 사용되는 최대 자릿수입니다. 기본값은 0으로, 이는 데이터 공급자가 <see cref="P:System.Data.Odbc.OdbcParameter.Value" />에 대한 자릿수를 설정한다는 것을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 데이터베이스의 값이 아닌 값으로이 속성을 설정 합니다. 데이터 공급자의 구현에 따라 및 오류 코드, truncate, 또는 라운드 데이터를 반환할 수 있습니다.  
  
 <xref:System.Data.Odbc.OdbcParameter.Precision%2A> 매개 변수 속성에만 영향을 가진 <xref:System.Data.Odbc.OdbcType> 은 `Decimal` 또는 `Numeric`합니다. 다른 데이터 형식에 대 한 <xref:System.Data.Odbc.OdbcParameter.Precision%2A> 는 무시 됩니다.  
  
> [!NOTE]
>  데이터베이스에 전달 되는 데이터를 강제 하려면이 속성의 사용이 지원 되지 않습니다. 반올림 하거나 그렇지 않으면 데이터베이스에 전달 하기 전에 데이터를 강제를 사용 하 여는 <xref:System.Math> 의 일부인 클래스는 `System` 네임 스페이스에 매개 변수의 값을 할당 하기 전에 `Value` 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.Odbc.OdbcParameter> 속성 중 일부를 설정 합니다.  
  
```vb  
Public Sub CreateOdbcParameter()  
    Dim parameter As New OdbcParameter("Price", OdbcType.Decimal)  
    parameter.Value = 3.1416  
    parameter.Precision = 8  
    parameter.Scale = 4  
End Sub   
```  
  
```csharp  
public void CreateOdbcParameter()   
 {  
    OdbcParameter parameter = new OdbcParameter("Price", OdbcType.Decimal);  
    parameter.Value = 3.1416;  
    parameter.Precision = 8;  
    parameter.Scale = 4;  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetDbType">
      <MemberSignature Language="C#" Value="public override void ResetDbType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetDbType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.ResetDbType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetDbType ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResetDbType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Data.Odbc.OdbcParameter" />와 관련된 형식을 다시 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 명령을 실행할 때 매개 변수 값을 포함 하는 코드 형식의 매개 변수를 명시적으로 설정 하거나 수 또는 매개 변수 값에서 형식을 유추할 수 있습니다. 이 메서드를 호출 하 여 다시 매개 변수에 전달 된 값에서 해당 형식을 유추할 수 있는 매개 변수 다시 설정 합니다. 둘 다이 메서드를 호출 하면는 <xref:System.Data.Odbc.OdbcParameter.DbType%2A> 및 <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> 의 속성은 <xref:System.Data.Odbc.OdbcParameter>합니다.  
  
 호출 <xref:System.Data.Odbc.OdbcParameter.ResetDbType%2A> 다시 설정 <xref:System.Data.Odbc.OdbcParameter.DbType%2A> 기본값으로 (String).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetOdbcType">
      <MemberSignature Language="C#" Value="public void ResetOdbcType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetOdbcType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.ResetOdbcType" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetOdbcType ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetOdbcType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Data.Odbc.OdbcParameter" />와 관련된 형식을 다시 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 명령을 실행할 때 매개 변수 값을 포함 하는 코드 형식의 매개 변수를 명시적으로 설정 하거나 수 또는 매개 변수 값에서 형식을 유추할 수 있습니다. 이 메서드를 호출 하 여 다시 매개 변수에 전달 된 값에서 해당 형식을 유추할 수 있는 매개 변수 다시 설정 합니다. 둘 다이 메서드를 호출 하면는 <xref:System.Data.Odbc.OdbcParameter.DbType%2A> 및 <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> 의 속성은 <xref:System.Data.Odbc.OdbcParameter>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public byte Scale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Scale" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.Scale" />
      <MemberSignature Language="VB.NET" Value="Public Property Scale As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte Scale { System::Byte get(); void set(System::Byte value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Scale</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Data.Odbc.OdbcParameter.Value" />가 확인되는 소수점 이하 자릿수를 가져오거나 설정합니다.</summary>
        <value>
          <see cref="P:System.Data.Odbc.OdbcParameter.Value" />가 확인되는 소수점 이하 자릿수입니다. 기본값은 0입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcParameter.Scale%2A> 속성은 10 진수 및 숫자 입력된 매개 변수에 대해서만 사용 됩니다.  
  
 데이터베이스의 값이 아닌 값으로이 속성을 설정할 때의 결과 데이터 공급자의 구현에 따라 및 오류 코드는 반환 또는 truncate 수도 있습니다 반올림 데이터.  
  
 <xref:System.Data.Odbc.OdbcParameter.Scale%2A> 매개 변수 속성에만 영향을 가진 <xref:System.Data.Odbc.OdbcType> 은 `Decimal` 또는 `Numeric`합니다. 다른 데이터 형식에 대 한 <xref:System.Data.Odbc.OdbcParameter.Scale%2A> 는 무시 됩니다.  
  
 SQL Server Native Client 10 (또는 이후 버전)를 사용 하는 경우 형식이 Decimal, Numeric, VarNumeric, DBDate, 또는 DBTimeStamp 변수인 매개 변수를 바인딩하려면 수동으로 적절 한 배율 값을 지정 해야 합니다.  
  
> [!NOTE]
>  데이터베이스에 전달 되는 데이터를 강제 하려면이 속성의 사용이 지원 되지 않습니다. 반올림 하거나 그렇지 않으면 데이터베이스에 전달 하기 전에 데이터를 강제를 사용 하 여는 <xref:System.Math> 의 일부인 클래스는 `System` 네임 스페이스에 매개 변수의 값을 할당 하기 전에 `Value` 속성입니다.  
  
> [!NOTE]
>  .NET Framework 버전 1.0에 포함 된.NET framework 데이터 공급자를 확인 하지 않습니다는 `scale` 의 <xref:System.Decimal> 매개 변수 값입니다. 이 인해 데이터 소스에 삽입 되는 수정 된 데이터가 있습니다. .NET Framework 버전 1.0 사용 하는 경우 유효성 검사는 s`cale` d`ecimal` 매개 변수 값을 설정 하기 전에 값입니다. .NET Framework 버전 1.1 또는 이상 버전에서 사용 하 여 `scale` 초과 하는 값은 `decimal` 매개 변수 소수 자릿수가 잘릴 수 있습니다, 규모에 맞게 기본 ODBC 드라이버의 동작입니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.Odbc.OdbcParameter> 속성 중 일부를 설정 합니다.  
  
```vb  
Public Sub CreateOdbcParameter()  
    Dim parameter As New OdbcParameter("Price", OdbcType.Decimal)  
    parameter.Value = 3.1416  
    parameter.Precision = 8  
    parameter.Scale = 4  
End Sub   
```  
  
```csharp  
public void CreateOdbcParameter()   
 {  
    OdbcParameter parameter = new OdbcParameter("Price", OdbcType.Decimal);  
    parameter.Value = 3.1416;  
    parameter.Precision = 8;  
    parameter.Scale = 4;  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public override int Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.Size" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Size As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Size { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Size</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열 내부에 있는 데이터의 최대 크기를 가져오거나 설정합니다.</summary>
        <value>열 내부에 있는 데이터의 최대 크기입니다. 기본값은 매개 변수 값에서 유추됩니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcParameter.Size%2A> 속성 이진 및 문자열 형식에 사용 됩니다.  
  
 문자열이 아닌 데이터 형식 및 ANSI 문자열 데이터에 대 한는 <xref:System.Data.Odbc.OdbcParameter.Size%2A> 속성 바이트 수를 나타냅니다. 유니코드 문자열 데이터에 대 한 <xref:System.Data.Odbc.OdbcParameter.Size%2A> 문자의 수를 나타냅니다. 문자열에 대 한 개수 종결 문자를 포함 하지 않습니다.  
  
 가변 길이 데이터 형식에 대 한 `Size` 서버에 전송할 데이터의 최대 양에 대해 설명 합니다. 유니코드 문자열 값에 대 한 예를 들어 `Size` 하나 백 먼저 자로 서버에 전송 되는 데이터의 양을 제한 하기 위해 사용할 수 있습니다.  
  
 양방향 및 출력 매개 변수 및 반환 값에 대 한 값을 설정 해야 `Size`합니다. 이 입력된 매개 변수에 대 한 명시적으로 설정의 값에서에서 유추 됩니다 지정된 된 매개 변수의 실제 크기 매개 변수가 있는 문을 실행 하 고 있습니다.  
  
 <xref:System.Data.Common.DbParameter.DbType%2A>, <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>, 및 <xref:System.Data.Odbc.OdbcParameter.Size%2A> 매개 변수 속성을 설정 하 여 유추할 수 <xref:System.Data.Odbc.OdbcParameter.Value%2A>합니다. 따라서는 지정할 필요가 없습니다. 그러나에 노출 되지 않습니다 <xref:System.Data.Odbc.OdbcParameter> 속성 설정 합니다. 예를 들어, 매개 변수의 크기 유추 된 경우 `Size` 문이 실행 된 다음 유추 된 값이 포함 되지 않습니다.  
  
> [!NOTE]
>  에 대 한 프로그램 `OdbcParameter` 와 <xref:System.Data.Odbc.OdbcParameter.Direction%2A> 의 `ParameterDirection.Output`, `ParameterDirection.InputOutput`, 또는 `ParameterDirection.ReturnValue`, 지정 된 데이터 원본에 의해 반환 되는 값의 크기를 초과 하는 경우에 명령이 실행 되 면 예외가 throw 됩니다 `Size` 는 의<xref:System.Data.Odbc.OdbcParameter>.  
  
 고정 길이 데이터 형식, 값에 대 한 `Size` 는 무시 됩니다. 정보 제공 목적으로 검색할 수 있습니다 하 고 공급자 서버에 매개 변수 값을 전송할 때 사용 하는 바이트의 최대 크기를 반환 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.Odbc.OdbcParameter> 속성 중 일부를 설정 합니다.  
  
```vb  
Public Sub CreateOdbcParameter()  
    Dim myValue As String = "12 foot scarf - multiple colors, one previous owner"  
    Dim parameter As New OdbcParameter("Description", OdbcType.VarChar)  
    parameter.Direction = ParameterDirection.Output  
    parameter.Size = myValue.Length  
    parameter.Value = myValue  
End Sub   
```  
  
```csharp  
public void CreateOdbcParameter()   
 {  
    string myValue = "12 foot scarf - multiple colors, one previous owner";  
    OdbcParameter parameter = new OdbcParameter("Description", OdbcType.VarChar);  
    parameter.Direction = ParameterDirection.Output;  
    parameter.Size = myValue.Length;  
    parameter.Value = myValue;  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumn">
      <MemberSignature Language="C#" Value="public override string SourceColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceColumn" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.SourceColumn" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceColumn As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SourceColumn { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.SourceColumn</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Data.DataSet" />에 매핑되어 <see cref="P:System.Data.Odbc.OdbcParameter.Value" />를 로드하거나 반환하기 위해 사용된 소스 열의 이름을 가져오거나 설정합니다.</summary>
        <value>이 매개 변수의 값을 설정하는 데 사용할 소스 열의 이름입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때 <xref:System.Data.Odbc.OdbcParameter.SourceColumn%2A> 인 열에서 검색 되는 빈 문자열이 매개 변수의 값 이외의 값으로 설정 되어는 `SourceColumn` 이름입니다. 경우 <xref:System.Data.Odbc.OdbcParameter.Direction%2A> 로 설정 된 `Input`에서 값을 가져옵니다는 <xref:System.Data.DataSet>합니다. 경우 `Direction` 로 설정 된 `Output`, 데이터 원본에서 값을 가져옵니다. A `Direction` 의 `InputOutput` 둘의 조합입니다.  
  
 사용 하는 방법에 대 한 자세한 내용은 <xref:System.Data.Odbc.OdbcParameter.SourceColumn%2A> 속성 참조 [DataAdapter 매개 변수](~/docs/framework/data/adonet/dataadapter-parameters.md) 및 [Dataadapter로 데이터 원본 업데이트](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.Odbc.OdbcParameter> 속성 중 일부를 설정 합니다.  
  
```vb  
Public Sub CreateOdbcParameter()  
    Dim parameter As New OdbcParameter("Description", OdbcType.VarChar, 88)  
    parameter.SourceColumn = "Description"  
End Sub   
```  
  
```csharp  
public void CreateOdbcParameter()   
 {  
    OdbcParameter parameter = new OdbcParameter("Description", OdbcType.VarChar, 88);  
    parameter.SourceColumn = "Description";  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumnNullMapping">
      <MemberSignature Language="C#" Value="public override bool SourceColumnNullMapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SourceColumnNullMapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.SourceColumnNullMapping" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceColumnNullMapping As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SourceColumnNullMapping { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>소스 열에 null이 허용되는지 여부를 나타내는 값을 가져오거나 설정합니다. 그러면 <see cref="T:System.Data.Common.DbCommandBuilder" />가 null 허용 열에 대해 Update 문을 올바르게 생성할 수 있습니다.</summary>
        <value>
          원본 열에 null이 허용되면 <see langword="true" />이고, 허용되지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcParameter.SourceColumnNullMapping%2A> 사용 되는 <xref:System.Data.Common.DbCommandBuilder> null 허용 열을 다룰 때 제대로 업데이트 명령을 생성 합니다. 일반적으로 사용의 <xref:System.Data.Odbc.OdbcParameter.SourceColumnNullMapping%2A> 으로 제한 됩니다 <xref:System.Data.Common.DbCommandBuilder>합니다.  
  
 <xref:System.Data.Common.DbCommandBuilder> 원본 열이 null을 허용 하 고이 속성을 설정 하는지 여부를 확인 하려면이 속성을 사용 하 여 `true` 은 null을 허용 하는 경우 및 `false` 없는 경우. 때 <xref:System.Data.Common.DbCommandBuilder> 가 검사 하는 Update 문을 생성는 <xref:System.Data.Odbc.OdbcParameter.SourceColumnNullMapping%2A> 각 매개 변수에 대 한 합니다. 속성이 `true`, <xref:System.Data.Common.DbCommandBuilder> 다음 예제와 같은 WHERE 절을 생성 합니다. 이 쿼리 식은 "FieldName" 필드의 이름을 나타냅니다.  
  
```  
((@IsNull_FieldName = 1 AND FieldName IS NULL) OR   
  (FieldName = @Original_FieldName))  
```  
  
 경우 <xref:System.Data.Odbc.OdbcParameter.SourceColumnNullMapping%2A> false 인 경우이 필드는에 대 한 <xref:System.Data.Common.DbCommandBuilder> 다음 WHERE 절을 생성 합니다.  
  
```  
FieldName = @OriginalFieldName  
```  
  
 또한 @IsNull_FieldName 원본 필드 및 포함 된 경우 null, 0 그렇지 않은 경우 1을 포함 합니다. 이 메커니즘의 SQL Server 성능 최적화 기능을 허용 하 고 여러 공급자 들 간에 작동 하는 일반적인 코드에 대 한 제공 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceVersion">
      <MemberSignature Language="C#" Value="public override System.Data.DataRowVersion SourceVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowVersion SourceVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.SourceVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceVersion As DataRowVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::DataRowVersion SourceVersion { System::Data::DataRowVersion get(); void set(System::Data::DataRowVersion value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.SourceVersion</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Data.DataRowVersion" />를 로드할 때 사용할 <see cref="P:System.Data.Odbc.OdbcParameter.Value" />을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다. 기본값은 Current입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `SourceVersion` ´ â <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A> 중는 <xref:System.Data.Common.DbDataAdapter.Update*> 매개 변수 값은 현재 버전 또는 원래 설정 되는지 여부를 결정 하는 작업입니다. 이렇게 하면 기본 키를 업데이트할 수 있습니다.  
  
 이 속성의 버전에는 <xref:System.Data.DataRow> 중 하나에서 사용 하는 `Item` 속성 (`DataRow` 인덱서), 또는 <xref:System.Data.DataRow.GetChildRows%2A> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.Odbc.OdbcParameter> 속성 중 일부를 설정 합니다.  
  
```vb  
Public Sub CreateOdbcParameter()  
    Dim parameter As New OdbcParameter("Description", OdbcType.VarChar, 88)  
    parameter.SourceColumn = "Description"  
    parameter.SourceVersion = DataRowVersion.Current  
End Sub   
```  
  
```csharp  
public void CreateOdbcParameter()   
 {  
    OdbcParameter parameter = new OdbcParameter("Description", OdbcType.VarChar, 88);  
    parameter.SourceColumn = "Description";  
    parameter.SourceVersion = DataRowVersion.Current;  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 멤버에 대한 설명은 <see cref="M:System.ICloneable.Clone" />를 참조하세요.</summary>
        <returns>이 인스턴스의 복사본인 새 <see cref="T:System.Object" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Data.Odbc.OdbcParameter> 인스턴스가 <xref:System.ICloneable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcParameter.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Data.Odbc.OdbcParameter.ParameterName" />이 포함된 문자열을 가져옵니다.</summary>
        <returns>
          <see cref="P:System.Data.Odbc.OdbcParameter.ParameterName" />이 포함된 문자열입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcParameter.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.Value</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>매개 변수의 값을 가져오거나 설정합니다.</summary>
        <value>매개 변수의 값인 <see cref="T:System.Object" />입니다. 기본값은 null입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 바인딩된 값에 대 한 입력된 매개 변수는 <xref:System.Data.Odbc.OdbcCommand> 서버로 보내집니다. 출력 및 반환 값 매개 변수의 값은이 설정의 완료는 <xref:System.Data.Odbc.OdbcCommand> 후의 <xref:System.Data.Odbc.OdbcDataReader> 닫힙니다.  
  
 서버에 null 매개 변수 값을 보낼 때 사용자를 지정 해야 <xref:System.DBNull>null입니다. 시스템에서 null 값은 값이 없는 빈 개체입니다. <xref:System.DBNull> 은 null 값을 나타내는 데 사용됩니다. 설정 하는 기본값이 지정 된 매개 변수가 있는 저장된 프로시저를 호출 하는 매개 변수를 사용 하는 <xref:System.Data.Odbc.OdbcParameter.Value%2A> 를 null로 설정 하면 기본값을 사용할 수 있습니다.  
  
 응용 프로그램 데이터베이스 형식을 지정 하는 경우 바인딩된 값 공급자가 서버에 데이터를 보낼 때 해당 형식으로 변환 됩니다. 공급자가 지 원하는 경우 모든 유형의 값을 변환 하는 <xref:System.IConvertible> 인터페이스입니다. 지정된 된 형식의 값과 호환 되지 않는 경우 변환 오류가 발생할 수 있습니다.  
  
 둘 다는 <xref:System.Data.Odbc.OdbcParameter.DbType%2A> 및 <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> 속성을 설정 하 여 유추할 수 <xref:System.Data.Odbc.OdbcParameter.Value%2A>합니다. 해당 되는 크기, 전체 자릿수 및 소수 자릿수도에서 유추 됩니다 <xref:System.Data.Odbc.OdbcParameter.Value%2A> 매개 변수가 있는 문을 실행 되는 시기입니다. 그러나 유추 된 값은 사용자에 게 노출 되지 않습니다.  
  
 <xref:System.Data.Odbc.OdbcParameter.Value%2A> 속성을 덮어씁니다는 `Update` 메서드.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.Odbc.OdbcParameter> 속성 중 일부를 설정 합니다.  
  
```vb  
Public Sub CreateOdbcParameter()  
    Dim parameter As New OdbcParameter("Description", OdbcType.VarChar, 88)  
    parameter.Value = "garden hose"  
End Sub   
```  
  
```csharp  
public void CreateOdbcParameter()   
 {  
    OdbcParameter parameter = new OdbcParameter("Description", OdbcType.VarChar, 88);  
    parameter.Value = "garden hose";  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>