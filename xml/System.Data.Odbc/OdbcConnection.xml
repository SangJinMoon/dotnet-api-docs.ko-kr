<Type Name="OdbcConnection" FullName="System.Data.Odbc.OdbcConnection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7f98f9e96e5aa591bc85cb637ff4b2b8de63a462" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34452114" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OdbcConnection : System.Data.Common.DbConnection, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OdbcConnection extends System.Data.Common.DbConnection implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Odbc.OdbcConnection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OdbcConnection&#xA;Inherits DbConnection&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OdbcConnection sealed : System::Data::Common::DbConnection, ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Odbc</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbConnection</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("InfoMessage")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6414a-101">데이터 소스에 대해 열려 있는 연결을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6414a-101">Represents an open connection to a data source.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6414a-102"><xref:System.Data.Odbc.OdbcConnection> 개체를 고유 하 게 연결할 연결 문자열 또는 ODBC 데이터 원본 이름 (DSN)를 사용 하 여 만든 데이터 소스에 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-102">An <xref:System.Data.Odbc.OdbcConnection> object represents a unique connection to a data source created by using a connection string or ODBC data source name (DSN).</span></span> <span data-ttu-id="6414a-103">클라이언트/서버 데이터베이스 시스템 이므로 네트워크 연결 서버에 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-103">With a client/server database system, it is equivalent to a network connection to the server.</span></span> <span data-ttu-id="6414a-104">일부 메서드 또는 속성을 네이티브 ODBC 드라이버에서 지 원하는 기능에 따라 프로그램 <xref:System.Data.Odbc.OdbcConnection> 개체를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-104">Depending on the functionality supported by the native ODBC driver, some methods or properties of an <xref:System.Data.Odbc.OdbcConnection> object may not be available.</span></span>  
  
 <span data-ttu-id="6414a-105"><xref:System.Data.Odbc.OdbcConnection> 개체가 ODBC 환경 및 연결 핸들 등의 네이티브 리소스를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-105">The <xref:System.Data.Odbc.OdbcConnection> object uses native resources such as ODBC environment and connection handles.</span></span> <span data-ttu-id="6414a-106">열려 있는 모두 항상 명시적으로 닫아야 <xref:System.Data.Odbc.OdbcConnection> 호출 하 여 개체 <xref:System.Data.Odbc.OdbcConnection.Close%2A> 또는 **Dispose** 하기 전에 <xref:System.Data.Odbc.OdbcConnection> 개체 라인으로 전환 범위를 벗어난 내에서 연결을 배치 하 여 한 `Using` 문.</span><span class="sxs-lookup"><span data-stu-id="6414a-106">You should always explicitly close any open <xref:System.Data.Odbc.OdbcConnection> objects by calling <xref:System.Data.Odbc.OdbcConnection.Close%2A> or **Dispose** before the <xref:System.Data.Odbc.OdbcConnection> object goes out of scope, or by placing the connection within a `Using` statement.</span></span> <span data-ttu-id="6414a-107">이렇게 하지 않으면 가비지 컬렉션에 이러한 네이티브 리소스를 해제 상태로 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-107">Not doing this leaves the freeing of these native resources to garbage collection.</span></span> <span data-ttu-id="6414a-108">그 수 하지 즉시 해제 합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-108">It might not free them immediately.</span></span> <span data-ttu-id="6414a-109">이 차례로 수 결국 리소스가 부족 하거나 최대 한도 도달 하는 기본 드라이버입니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-109">This, in turn, can eventually cause the underlying driver to run out of resources or reach a maximum limit.</span></span> <span data-ttu-id="6414a-110">일시적인 오류가 발생 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-110">This has resulted in intermittent failures.</span></span> <span data-ttu-id="6414a-111">예를 들어 발생할 수 있습니다 `Maximum Connections` -많은 연결이 가비지 수집기에 의해 삭제를 기다리고 있는 동안 합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-111">For example, you might experience `Maximum Connections` -related errors while many connections are waiting to be deleted by the garbage collector.</span></span> <span data-ttu-id="6414a-112">연결을 명시적으로 닫는 확장성 하 고 전체 응용 프로그램 성능을 향상 시키는 네이티브 리소스를 보다 효율적으로 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-112">Explicitly closing the connections allows for a more efficient use of native resources, enhancing scalability and improving overall application performance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6414a-113">고성능 응용 프로그램을 배포 하려면 자주 사용 해야 연결 풀링.</span><span class="sxs-lookup"><span data-stu-id="6414a-113">To deploy high-performance applications, you frequently must use connection pooling.</span></span> <span data-ttu-id="6414a-114">그러나.NET Framework Data Provider for ODBC를 사용 하면 않아도 공급자 자동으로이 관리 하기 때문에 연결 풀링을 사용할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-114">However, when you use the .NET Framework Data Provider for ODBC, you do not have to enable connection pooling because the provider manages this automatically.</span></span>  
  
 <span data-ttu-id="6414a-115">한 경우의 `Execute` 의 메서드는 <xref:System.Data.Odbc.OdbcCommand> 클래스 하면 심각한 <xref:System.Data.Odbc.OdbcException> (예를 들어 SQL Server 심각도 수준이 20 개 이상)는 <xref:System.Data.Odbc.OdbcConnection> 닫힐 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-115">If one of the `Execute` methods of the <xref:System.Data.Odbc.OdbcCommand> class causes a fatal <xref:System.Data.Odbc.OdbcException> (for example, a SQL Server severity level of 20 or greater), the <xref:System.Data.Odbc.OdbcConnection> may close.</span></span> <span data-ttu-id="6414a-116">그러나 사용자는 연결을 다시 열고 계속할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-116">However, the user can reopen the connection and continue.</span></span>  
  
 <span data-ttu-id="6414a-117">인스턴스를 생성 하는 응용 프로그램은 <xref:System.Data.Odbc.OdbcConnection> 개체 모든 직접 및 간접 호출자가 선언적 이거나 명령 보안 요청을 설정 하 여 코드에 충분 한 권한을 갖도록 요구할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-117">An application that creates an instance of the <xref:System.Data.Odbc.OdbcConnection> object can require all direct and indirect callers to have sufficient permission to the code by setting declarative or imperative security demands.</span></span> <span data-ttu-id="6414a-118"><xref:System.Data.Odbc.OdbcConnection> 사용 하 여 보안 요청을 만듭니다는 <xref:System.Data.Odbc.OdbcPermission> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-118"><xref:System.Data.Odbc.OdbcConnection> creates security demands by using the <xref:System.Data.Odbc.OdbcPermission> object.</span></span> <span data-ttu-id="6414a-119">사용자가 해당 코드를 사용 하 여 충분 한 권한이 있는지 확인할 수는 <xref:System.Data.Odbc.OdbcPermissionAttribute> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-119">Users can verify that their code has sufficient permissions by using the <xref:System.Data.Odbc.OdbcPermissionAttribute> object.</span></span> <span data-ttu-id="6414a-120">사용자와 관리자가 컴퓨터, 사용자 및 엔터프라이즈 수준에서 보안 정책을 수정 하려면 코드 액세스 보안 정책 도구 (Caspol.exe) 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-120">Users and administrators can also use the Code Access Security Policy Tool (Caspol.exe) to modify security policy at the computer, user, and enterprise levels.</span></span> <span data-ttu-id="6414a-121">자세한 내용은 [코드 액세스 보안 및 ADO.NET](~/docs/framework/data/adonet/code-access-security.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="6414a-121">For more information, see [Code Access Security and ADO.NET](~/docs/framework/data/adonet/code-access-security.md).</span></span>  
  
 <span data-ttu-id="6414a-122">데이터 소스에서 경고 및 정보 메시지를 처리 하는 방법에 대 한 자세한 내용은 참조 [연결 이벤트](~/docs/framework/data/adonet/connection-events.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-122">For more information about handling warning and informational messages from the data source, see [Connection Events](~/docs/framework/data/adonet/connection-events.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6414a-123">다음 예제에서는 <xref:System.Data.Odbc.OdbcCommand> 및 <xref:System.Data.Odbc.OdbcConnection>합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-123">The following example creates an <xref:System.Data.Odbc.OdbcCommand> and an <xref:System.Data.Odbc.OdbcConnection>.</span></span> <span data-ttu-id="6414a-124"><xref:System.Data.Odbc.OdbcConnection> 열리고으로 설정 된 <xref:System.Data.Odbc.OdbcCommand.Connection%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-124">The <xref:System.Data.Odbc.OdbcConnection> is opened and set as the <xref:System.Data.Odbc.OdbcCommand.Connection%2A> property.</span></span> <span data-ttu-id="6414a-125">이 예에서는 다음 호출 <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>, 연결을 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-125">The example then calls <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>, and closes the connection.</span></span> <span data-ttu-id="6414a-126">이 수행 하는 <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A> 연결 문자열과 쿼리 문자열은 SQL INSERT 문을 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-126">To accomplish this, the <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A> is passed a connection string and a query string that is an SQL INSERT statement.</span></span>  
  
 [!code-csharp[Classic WebData OdbcConnection#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcConnection/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcConnection#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcConnection/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6414a-127">
            <see cref="T:System.Data.Odbc.OdbcConnection" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-127">Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcConnection" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcConnection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6414a-128">
            <see cref="T:System.Data.Odbc.OdbcConnection" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-128">Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcConnection" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6414a-129">새 인스턴스 <xref:System.Data.Odbc.OdbcConnection> 만들어지면 쓰기 전용 및 읽기 전용 속성의 관련된 키워드를 사용 하 여 구체적으로 설정 되어 있지 않으면 다음 초기 값으로 설정 됩니다는 <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-129">When a new instance of <xref:System.Data.Odbc.OdbcConnection> is created, the write-only and read-only properties are set to the following initial values unless they are specifically set using their associated keywords in the <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> property.</span></span>  
  
|<span data-ttu-id="6414a-130">속성</span><span class="sxs-lookup"><span data-stu-id="6414a-130">Properties</span></span>|<span data-ttu-id="6414a-131">초기 값</span><span class="sxs-lookup"><span data-stu-id="6414a-131">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>|<span data-ttu-id="6414a-132">빈 문자열 ("")</span><span class="sxs-lookup"><span data-stu-id="6414a-132">empty string ("")</span></span>|  
|<xref:System.Data.Odbc.OdbcConnection.ConnectionTimeout%2A>|<span data-ttu-id="6414a-133">15</span><span class="sxs-lookup"><span data-stu-id="6414a-133">15</span></span>|  
|<xref:System.Data.Odbc.OdbcConnection.Database%2A>|<span data-ttu-id="6414a-134">빈 문자열 ("")</span><span class="sxs-lookup"><span data-stu-id="6414a-134">empty string ("")</span></span>|  
  
 <span data-ttu-id="6414a-135">사용 하 여 이러한 속성에 대 한 값을 변경할 수는 <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-135">You can change the value for these properties only by using the <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6414a-136">다음 예제는 <xref:System.Data.Odbc.OdbcConnection>합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-136">The following example creates and opens an <xref:System.Data.Odbc.OdbcConnection>.</span></span>  
  
 [!code-csharp[Classic WebData OdbcConnection.OdbcConnection#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.OdbcConnection/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcConnection.OdbcConnection#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.OdbcConnection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcConnection (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcConnection(System::String ^ connectionString);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">
          <span data-ttu-id="6414a-137">데이터 소스를 여는 데 사용하는 연결입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-137">The connection used to open the data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6414a-138">지정된 연결 문자열을 사용하여 <see cref="T:System.Data.Odbc.OdbcConnection" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-138">Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcConnection" /> class with the specified connection string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6414a-139">새 인스턴스 <xref:System.Data.Odbc.OdbcConnection> 만들어지면 쓰기 전용 및 읽기 전용 속성의 관련된 키워드를 사용 하 여 구체적으로 설정 되어 있지 않으면 다음 초기 값으로 설정 됩니다는 <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-139">When a new instance of <xref:System.Data.Odbc.OdbcConnection> is created, the write-only and read-only properties are set to the following initial values unless they are specifically set using their associated keywords in the <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> property.</span></span>  
  
|<span data-ttu-id="6414a-140">속성</span><span class="sxs-lookup"><span data-stu-id="6414a-140">Properties</span></span>|<span data-ttu-id="6414a-141">초기 값</span><span class="sxs-lookup"><span data-stu-id="6414a-141">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>|`connectionString`|  
|<xref:System.Data.Odbc.OdbcConnection.ConnectionTimeout%2A>|<span data-ttu-id="6414a-142">15</span><span class="sxs-lookup"><span data-stu-id="6414a-142">15</span></span>|  
|<xref:System.Data.Odbc.OdbcConnection.Database%2A>|<span data-ttu-id="6414a-143">빈 문자열 ("")</span><span class="sxs-lookup"><span data-stu-id="6414a-143">empty string ("")</span></span>|  
  
 <span data-ttu-id="6414a-144">사용 하 여 이러한 속성에 대 한 값을 변경할 수는 <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-144">You can change the value for these properties only by using the <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6414a-145">다음 예제는 <xref:System.Data.Odbc.OdbcConnection>합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-145">The following example creates and opens an <xref:System.Data.Odbc.OdbcConnection>.</span></span>  
  
 [!code-csharp[Classic WebData OdbcConnection.OdbcConnection1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.OdbcConnection1/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcConnection.OdbcConnection1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.OdbcConnection1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbTransaction BeginDbTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.BeginDbTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbTransaction ^ BeginDbTransaction(System::Data::IsolationLevel isolationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginTransaction">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6414a-146">데이터 소스에서 트랜잭션을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-146">Starts a transaction at the data source.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcTransaction BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcTransaction BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction () As OdbcTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcTransaction ^ BeginTransaction();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6414a-147">데이터 소스에서 트랜잭션을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-147">Starts a transaction at the data source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6414a-148">새 트랜잭션을 나타내는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-148">An object representing the new transaction.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6414a-149">커밋하거나 트랜잭션을 명시적으로 사용 해야는 <xref:System.Data.Odbc.OdbcTransaction.Commit%2A> 또는 <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6414a-149">To commit or roll back the transaction, you must explicitly use the <xref:System.Data.Odbc.OdbcTransaction.Commit%2A> or <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> methods.</span></span>  
  
 <span data-ttu-id="6414a-150">.NET Framework Data Provider for ODBC 트랜잭션 관리 모델을 올바르게 수행 되었는지 확인, 데이터 원본에서 제공 하는 다른 트랜잭션 관리 모델을 사용 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="6414a-150">To make sure that the .NET Framework Data Provider for ODBC transaction management model performs correctly, avoid using other transaction management models, such as those provided by the data source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6414a-151">격리 수준을 지정 하지 않으면 격리 수준은 사용 하 고 드라이버에 의해 결정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-151">If you do not specify an isolation level, the isolation level will be determined by the driver being used.</span></span> <span data-ttu-id="6414a-152">와 격리 수준을 지정 하는 <xref:System.Data.Odbc.OdbcConnection.BeginTransaction%2A> 메서드를 사용 하는 오버 로드를 사용 하 여는 `isolevel` 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="6414a-152">To specify an isolation level with the <xref:System.Data.Odbc.OdbcConnection.BeginTransaction%2A> method, use the overload that takes the `isolevel` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6414a-153">다음 예제에서는 <xref:System.Data.Odbc.OdbcConnection> 및 <xref:System.Data.Odbc.OdbcTransaction>합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-153">The following example creates an <xref:System.Data.Odbc.OdbcConnection> and an <xref:System.Data.Odbc.OdbcTransaction>.</span></span> <span data-ttu-id="6414a-154">사용 하는 방법을 보여 줍니다는 <xref:System.Data.Odbc.OdbcConnection.BeginTransaction%2A>, <xref:System.Data.Odbc.OdbcTransaction.Commit%2A>, 및 <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6414a-154">It also demonstrates how to use the <xref:System.Data.Odbc.OdbcConnection.BeginTransaction%2A>, <xref:System.Data.Odbc.OdbcTransaction.Commit%2A>, and <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> methods.</span></span>  
  
 [!code-csharp[Classic WebData OdbcConnection.BeginTransaction1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.BeginTransaction1/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcConnection.BeginTransaction1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.BeginTransaction1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6414a-155">트랜잭션이 현재 활성화되어 있는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-155">A transaction is currently active.</span>
          </span>
          <span data-ttu-id="6414a-156">병렬 트랜잭션은 지원되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-156">Parallel transactions are not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcTransaction BeginTransaction (System.Data.IsolationLevel isolevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcTransaction BeginTransaction(valuetype System.Data.IsolationLevel isolevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction (isolevel As IsolationLevel) As OdbcTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcTransaction ^ BeginTransaction(System::Data::IsolationLevel isolevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolevel">
          <span data-ttu-id="6414a-157">이 연결에 대한 트랜잭션 격리 수준입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-157">The transaction isolation level for this connection.</span>
          </span>
          <span data-ttu-id="6414a-158">격리 수준을 지정하지 않으면 드라이버의 기본 격리 수준이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-158">If you do not specify an isolation level, the default isolation level for the driver is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6414a-159">지정된 <see cref="T:System.Data.IsolationLevel" /> 값을 사용하여 데이터 소스에서 트랜잭션을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-159">Starts a transaction at the data source with the specified <see cref="T:System.Data.IsolationLevel" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6414a-160">새 트랜잭션을 나타내는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-160">An object representing the new transaction.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6414a-161">커밋하거나 트랜잭션을 명시적으로 사용 해야는 <xref:System.Data.Odbc.OdbcTransaction.Commit%2A> 또는 <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6414a-161">To commit or roll back the transaction, you must explicitly use the <xref:System.Data.Odbc.OdbcTransaction.Commit%2A> or <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> methods.</span></span>  
  
 <span data-ttu-id="6414a-162">.NET Framework Data Provider for ODBC 트랜잭션 관리 모델을 올바르게 수행 되었는지 확인, 데이터 원본에서 제공 하는 다른 트랜잭션 관리 모델을 사용 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="6414a-162">To make sure that the .NET Framework Data Provider for ODBC transaction management model performs correctly, avoid using other transaction management models, such as those provided by the data source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6414a-163">다음 예제에서는 <xref:System.Data.Odbc.OdbcConnection> 및 <xref:System.Data.Odbc.OdbcTransaction>합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-163">The following example creates an <xref:System.Data.Odbc.OdbcConnection> and an <xref:System.Data.Odbc.OdbcTransaction>.</span></span> <span data-ttu-id="6414a-164">사용 하는 방법을 보여 줍니다는 <xref:System.Data.Odbc.OdbcConnection.BeginTransaction%2A>, <xref:System.Data.Odbc.OdbcTransaction.Commit%2A>, 및 <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6414a-164">It also demonstrates how to use the <xref:System.Data.Odbc.OdbcConnection.BeginTransaction%2A>, <xref:System.Data.Odbc.OdbcTransaction.Commit%2A>, and <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> methods.</span></span>  
  
 [!code-csharp[Classic WebData OdbcConnection.BeginTransaction1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.BeginTransaction1/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcConnection.BeginTransaction1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.BeginTransaction1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6414a-165">트랜잭션이 현재 활성화되어 있는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-165">A transaction is currently active.</span>
          </span>
          <span data-ttu-id="6414a-166">병렬 트랜잭션은 지원되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-166">Parallel transactions are not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeDatabase">
      <MemberSignature Language="C#" Value="public override void ChangeDatabase (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ChangeDatabase(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.ChangeDatabase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ChangeDatabase (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ChangeDatabase(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="6414a-167">데이터베이스 이름.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-167">The database name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6414a-168">열려 있는 <see cref="T:System.Data.Odbc.OdbcConnection" />과 관련된 현재 데이터베이스를 변경합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-168">Changes the current database associated with an open <see cref="T:System.Data.Odbc.OdbcConnection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6414a-169">`value` 매개 변수는 유효한 데이터베이스 이름을 포함 해야 하며 null 값, 빈 문자열을 포함할 수 없습니다 (""), 또는 빈 문자로 구성 된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-169">The `value` parameter must contain a valid database name, and cannot contain a null value, an empty string (""), or a string with only blank characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6414a-170">다음 예제에서는 <xref:System.Data.Odbc.OdbcConnection> 현재 데이터베이스를 변경 하 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-170">The following example creates an <xref:System.Data.Odbc.OdbcConnection> and changes the current database.</span></span>  
  
 [!code-csharp[Classic WebData OdbcConnection.Database#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.Database/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcConnection.Database#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.Database/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6414a-171">데이터베이스 이름이 올바르지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-171">The database name is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6414a-172">연결이 열려 있지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-172">The connection is not open.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.Odbc.OdbcException">
          <span data-ttu-id="6414a-173">데이터베이스를 변경할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-173">Cannot change the database.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6414a-174">데이터 소스에 대한 연결을 닫습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-174">Closes the connection to the data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6414a-175"><xref:System.Data.Odbc.OdbcConnection.Close%2A> 메서드 보류 중인 트랜잭션을 모두 롤백합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-175">The <xref:System.Data.Odbc.OdbcConnection.Close%2A> method rolls back any pending transactions.</span></span> <span data-ttu-id="6414a-176">그런 다음 연결 풀에 대 한 연결을 해제 하거나 연결 풀링을 사용 하지 않도록 설정 하는 경우 연결을 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-176">It then releases the connection to the connection pool, or closes the connection if connection pooling is disabled.</span></span> <span data-ttu-id="6414a-177">경우 <xref:System.Data.Odbc.OdbcConnection.Close%2A> 처리 하는 동안 호출 되는 <xref:System.Data.Common.DbConnection.StateChange> 이벤트를 더 추가 <xref:System.Data.Common.DbConnection.StateChange> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-177">If <xref:System.Data.Odbc.OdbcConnection.Close%2A> is called while handling a <xref:System.Data.Common.DbConnection.StateChange> event, no additional <xref:System.Data.Common.DbConnection.StateChange> events are fired.</span></span>  
  
 <span data-ttu-id="6414a-178">응용 프로그램에서 호출할 수 <xref:System.Data.Odbc.OdbcConnection.Close%2A> 예외를 생성 하지 않고 둘 이상의 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-178">An application can call <xref:System.Data.Odbc.OdbcConnection.Close%2A> more than one time without generating an exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6414a-179">.NET Framework Data Provider for ODBC를 사용 하면 ODBC 드라이버 관리자는 자동으로이 관리 하기 때문에 연결 풀링을 사용할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-179">When you use the .NET Framework Data Provider for ODBC, you do not have to enable connection pooling because the ODBC Driver Manager manages this automatically.</span></span> <span data-ttu-id="6414a-180">사용 하도록 설정 하는 방법 및 연결 풀링을 사용 하지 않도록 설정 하는 방법에 대 한 자세한 내용은 Microsoft ODBC Open Database Connectivity () 설명서를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-180">For more information about how to enable and disabling connection pooling, see the Microsoft Open Database Connectivity (ODBC) documentation.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="6414a-181">호출 하지 마십시오 <xref:System.Data.Odbc.OdbcConnection.Close%2A> 또는 `Dispose` 연결, DataReader, 또는 다른 관리 개체에는 `Finalize` 클래스의 메서드로 합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-181">Do not call <xref:System.Data.Odbc.OdbcConnection.Close%2A> or `Dispose` on a Connection, a DataReader, or any other managed object in the `Finalize` method of your class.</span></span> <span data-ttu-id="6414a-182">종료자에서만 클래스에 직접 속한 관리 되지 않는 리소스를 해제 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-182">In a finalizer, you should only release unmanaged resources that your class owns directly.</span></span> <span data-ttu-id="6414a-183">클래스에 관리되지 않는 리소스가 없는 경우 클래스 정의에 `Finalize` 메서드를 포함하지 마세요.</span><span class="sxs-lookup"><span data-stu-id="6414a-183">If your class does not own any unmanaged resources, do not include a `Finalize` method in your class definition.</span></span> <span data-ttu-id="6414a-184">자세한 내용은 참조 [가비지 수집](~/docs/standard/garbage-collection/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-184">For more information, see [Garbage Collection](~/docs/standard/garbage-collection/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6414a-185">다음 예제에서는 <xref:System.Data.Odbc.OdbcConnection>을 열, 해당 속성 중 일부를 표시 하 고 다음 연결을 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-185">The following example creates an <xref:System.Data.Odbc.OdbcConnection>, opens it, displays some of its properties, and then closes the connection.</span></span>  
  
 [!code-csharp[Classic WebData OdbcConnection.Close#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.Close/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcConnection.Close#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.Close/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public override string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcConnection.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Odbc.Design.OdbcConnectionStringEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6414a-186">데이터 소스를 여는 데 사용되는 문자열을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-186">Gets or sets the string used to open a data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6414a-187">초기 연결을 설정하는 데 필요한 데이터 소스 이름 같은 설정을 포함하는 ODBC 드라이버 연결 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-187">The ODBC driver connection string that includes settings, such as the data source name, needed to establish the initial connection.</span>
          </span>
          <span data-ttu-id="6414a-188">기본값은 빈 문자열("")입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-188">The default value is an empty string ("").</span>
          </span>
          <span data-ttu-id="6414a-189">최대 길이는 1024 문자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-189">The maximum length is 1024 characters.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6414a-190"><xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> 속성은 ODBC 연결 문자열 형식에 최대한 일치 하도록 설계 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-190">The <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> property is designed to match ODBC connection string format as closely as possible.</span></span> <span data-ttu-id="6414a-191"><xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> 설정할 수 있습니다는 연결이 닫히면 설정 되는 즉시 전달, 경우에 기본 드라이버 및 드라이버 관리자는 변경 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-191">The <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> can be set only when the connection is closed, and as soon as it is set it is passed, unchanged, to the Driver Manager and the underlying driver.</span></span> <span data-ttu-id="6414a-192">따라서 구문은 <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> 드라이버 관리자와 정확히 일치 해야 및 드라이버 지원의 기본입니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-192">Therefore, the syntax for the <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> must exactly match what the Driver Manager and underlying driver support.</span></span>  
  
 <span data-ttu-id="6414a-193">사용할 수는 <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> 다양 한 데이터 원본에 연결 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-193">You can use the <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> property to connect to a variety of data sources.</span></span> <span data-ttu-id="6414a-194">여기에 ODBC 데이터 원본 이름 (DSN)이 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-194">This includes an ODBC data source name (DSN).</span></span> <span data-ttu-id="6414a-195">다음 예제에서는 몇 가지 가능한 연결 문자열을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-195">The following example illustrates several possible connection strings.</span></span>  
  
```  
"Driver={SQL Server};Server=(local);Trusted_Connection=Yes;Database=AdventureWorks;"  
  
"Driver={Microsoft ODBC for Oracle};Server=ORACLE8i7;Persist Security Info=False;Trusted_Connection=Yes"  
  
"Driver={Microsoft Access Driver (*.mdb)};DBQ=c:\bin\Northwind.mdb"  
  
"Driver={Microsoft Excel Driver (*.xls)};DBQ=c:\bin\book1.xls"  
  
"Driver={Microsoft Text Driver (*.txt; *.csv)};DBQ=c:\bin"  
  
"DSN=dsnname"  
```  
  
> [!NOTE]
>  <span data-ttu-id="6414a-196">.NET Framework Data Provider for ODBC 지원 하지 않습니다는 `Persist Security Info` 다른.NET Framework 데이터 공급자에서 지원 되는 키워드입니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-196">The .NET Framework Data Provider for ODBC does not support the `Persist Security Info` keyword that is supported by other .NET Framework data providers.</span></span> <span data-ttu-id="6414a-197">그러나는 <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> 속성 작동 처럼 `Persist Security Info` 로 설정 된 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-197">However, the <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> property behaves as if `Persist Security Info` were set to `false`.</span></span> <span data-ttu-id="6414a-198">즉,에서 암호를 검색할 수 없습니다는 <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> 연결 된 경우 속성을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-198">This means that you cannot retrieve the password from the <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> property if the connection has been opened.</span></span> <span data-ttu-id="6414a-199">경우는 <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> 에서 속성은 읽기는 <xref:System.Data.Odbc.OdbcConnection> 열려 있는 개체를 연결 문자열 암호 뺀 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-199">When the <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> property is read from an <xref:System.Data.Odbc.OdbcConnection> object that has been opened, the connection string is returned minus the password.</span></span> <span data-ttu-id="6414a-200">이 동작을 변경할 수 없습니다. 따라서 응용 프로그램에서 암호를 필요로 하는 경우 개별적으로 저장할 호출 하기 전에 <xref:System.Data.Odbc.OdbcConnection.Open%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-200">You cannot change this behavior; therefore, if the application requires the password, store it separately before calling <xref:System.Data.Odbc.OdbcConnection.Open%2A>.</span></span>  
  
 <span data-ttu-id="6414a-201">문자열에 지정 된 설정 중 대부분에 해당 읽기 전용 속성이 (예를 들어 `Server=(local)`에 해당 하는 <xref:System.Data.Odbc.OdbcConnection.DataSource%2A> 속성).</span><span class="sxs-lookup"><span data-stu-id="6414a-201">Many of the settings specified in the string have corresponding read-only properties (for example, `Server=(local)`, which corresponds to the <xref:System.Data.Odbc.OdbcConnection.DataSource%2A> property).</span></span> <span data-ttu-id="6414a-202">오류가 발견 된 경우를 제외 하 고 연결을 연 후에 이러한 속성이 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-202">These properties are updated after the connection is opened, except when an error is detected.</span></span> <span data-ttu-id="6414a-203">이 경우 어떤 속성도 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-203">In this case, none of the properties are updated.</span></span> <span data-ttu-id="6414a-204"><xref:System.Data.Odbc.OdbcConnection> 속성 (예: <xref:System.Data.Odbc.OdbcConnection.Database%2A>)에 지정 된 문자열이 나 기본 설정을 반환는 <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-204"><xref:System.Data.Odbc.OdbcConnection> properties (such as <xref:System.Data.Odbc.OdbcConnection.Database%2A>) return only default settings or those settings specified in the <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>.</span></span>  
  
 <span data-ttu-id="6414a-205">Microsoft.NET Framework 버전 1.0에서에서 연결 문자열의 유효성 검사가 발생 하지 않습니다 응용 프로그램이 호출 될 때까지 <xref:System.Data.Odbc.OdbcConnection.Open%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6414a-205">In the Microsoft .NET Framework version 1.0, validation of the connection string does not occur until an application calls the <xref:System.Data.Odbc.OdbcConnection.Open%2A> method.</span></span> <span data-ttu-id="6414a-206">것은 기본 ODBC 드라이버가 연결 문자열의 유효성을 검사를 담당 합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-206">It is the responsibility of the underlying ODBC driver to validate the connection string.</span></span> <span data-ttu-id="6414a-207">연결 문자열에 잘못 되었거나 지원 되지 않는 속성이 있으면 드라이버를 발생 시킬 수는 <xref:System.Data.Odbc.OdbcException> 런타임 시.</span><span class="sxs-lookup"><span data-stu-id="6414a-207">If the connection string contains invalid or unsupported properties, the driver may raise an <xref:System.Data.Odbc.OdbcException> at run time.</span></span>  
  
 <span data-ttu-id="6414a-208">하지만.NET Framework 버전 1.1 및 이상 버전에서는 연결 문자열의 일부 기본 유효성 검사 수행 되는 설정으로 <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-208">However, in the .NET Framework version 1.1 and later versions, some basic validation of the connection string occurs as soon as you set the <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> property.</span></span> <span data-ttu-id="6414a-209">이때 데이터 공급자 연결 문자열에 맞는지 확인 된 "키워드 = value;..." 형식, 그러나 않습니다 키워드 또는 값 유효한 지 여부를 확인 하지 합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-209">At that time, the data provider verifies that the connection string meets the "keyword=value;..." format, but it does not verify whether keywords or values are valid.</span></span> <span data-ttu-id="6414a-210">응용 프로그램 호출 때 기본 ODBC 드라이버 나머지 확인 수행는 <xref:System.Data.Odbc.OdbcConnection.Open%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6414a-210">The remaining verification is performed by the underlying ODBC driver when the application calls the <xref:System.Data.Odbc.OdbcConnection.Open%2A> method.</span></span>  
  
 <span data-ttu-id="6414a-211">ODBC 연결 문자열에는 다음 구문을 가집니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-211">An ODBC connection string has the following syntax:</span></span>  
  
```  
connection-string ::= empty-string[;] | attribute[;] | attribute; connection-string  
empty-string ::=  
attribute ::= attribute-keyword=attribute-value | DRIVER=[{]attribute-value[}]  
attribute-keyword ::= DSN | UID | PWD  
 | driver-defined-attribute-keyword  
attribute-value ::= character-string  
driver-defined-attribute-keyword ::= identifier  
```  
  
 <span data-ttu-id="6414a-212">여기서 `character-string` 에 0 개 이상의 문자가; `identifier` 에 하나 이상의 문자가; `attribute-keyword` 대/소문자가 있습니다. `attribute-value` 대/소문자를 구분; 수 있으며 DSN 키워드의 값만 공백의 구성 되어 있지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-212">where `character-string` has zero or more characters; `identifier` has one or more characters; `attribute-keyword` is not case sensitive; `attribute-value` can be case sensitive; and the value of the DSN keyword does not consist only of blanks.</span></span>  
  
 <span data-ttu-id="6414a-213">연결 문자열 및 초기화 파일 문법 인해 키워드 및 특성 값 피해 야 문자 포함 하는{}(),? \* =! @ 키워드가 중괄호와 함께 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-213">Because of connection string and initialization file grammar, keywords and attribute values should be avoided that contain the characters []{}(),;?\*=!@ not enclosed with braces.</span></span> <span data-ttu-id="6414a-214">DSN 키워드의 값 공백의 구성 될 수 없습니다 하며 선행 공백을 포함할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-214">The value of the DSN keyword cannot consist only of blanks and should not contain leading blanks.</span></span> <span data-ttu-id="6414a-215">시스템 정보 문법, 인해 키워드 및 데이터 원본 이름은 백슬래시를 포함할 수 없습니다 (\\) 문자.</span><span class="sxs-lookup"><span data-stu-id="6414a-215">Because of the grammar of the system information, keywords and data source names cannot contain the backslash (\\) character.</span></span>  
  
 <span data-ttu-id="6414a-216">응용 프로그램 특성에는 세미콜론 (;)을 포함 하지 않는 한 특성 값 주변에 중괄호가 Driver 키워드 뒤에 추가 하려면에 없는 경우 중괄호는 필수입니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-216">Applications do not have to add braces around the attribute value after the Driver keyword unless the attribute contains a semicolon (;), in which case the braces are required.</span></span> <span data-ttu-id="6414a-217">특성 값을 수신 하는 중괄호를 포함 하는 경우 드라이버를 제거 하지 않아야 하지만 반환 된 연결 문자열의 일부 수 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-217">If the attribute value that the driver receives includes braces, the driver should not remove them but they should be part of the returned connection string.</span></span>  
  
 <span data-ttu-id="6414a-218">중괄호로 묶인 DSN 또는 연결 문자열 값 ({}) 문자 중 하나를 포함 하는{}(),? \* =! @은 그대로 드라이버에 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-218">A DSN or connection string value enclosed with braces ({}) that contains any of the characters []{}(),;?\*=!@ is passed intact to the driver.</span></span> <span data-ttu-id="6414a-219">그러나 키워드에 이러한 문자를 사용할 때 드라이버 관리자 파일 Dsn 사용 하 여 작업할 때 오류를 반환 하지만 일반 연결 문자열에 대 한 드라이버에 연결 문자열을 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-219">However, when you use these characters in a keyword, the Driver Manager returns an error when you work with file DSNs, but passes the connection string to the driver for regular connection strings.</span></span> <span data-ttu-id="6414a-220">키워드 값에 포함 된 중괄호를 사용 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="6414a-220">Avoid using embedded braces in a keyword value.</span></span>  
  
 <span data-ttu-id="6414a-221">연결 문자열에는 드라이버 정의 된 키워드를 개수에 관계 없이 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-221">The connection string may include any number of driver-defined keywords.</span></span> <span data-ttu-id="6414a-222">DRIVER 키워드는 시스템에서 정보를 사용 하지 않으므로, 드라이버는 드라이버는 연결 문자열에 정보만 사용 하 여 데이터 원본에 연결할 수 있도록 충분 한 키워드를 정의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-222">Because the DRIVER keyword does not use information from the system, the driver must define enough keywords so that a driver can connect to a data source using only the information in the connection string.</span></span> <span data-ttu-id="6414a-223">드라이버는 데이터 원본에 연결 하는 데 필요한 어떤 키워드를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-223">The driver defines which keywords are required to connect to the data source.</span></span>  
  
 <span data-ttu-id="6414a-224">키워드는 연결 문자열에 반복 하는 경우 보장이 없습니다 어떤 값이 선택 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-224">If any keywords are repeated in the connection string, there is no guarantee which value will be selected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6414a-225">ODBC 드라이버는 1024 자 보다 긴 연결 문자열을 지 원하는 경우에 최대 길이 제한을 초과 하는 데이터 원본 이름 (DSN)를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-225">If an ODBC driver supports connection strings longer than 1024 characters, you can use a data source name (DSN) to exceed the maximum length limitation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionTimeout">
      <MemberSignature Language="C#" Value="public int ConnectionTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcConnection.ConnectionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectionTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ConnectionTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(15)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6414a-226">시도를 종료하고 오류를 생성하기 전에 연결하는 동안 대기할 시간을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-226">Gets or sets the time to wait while trying to establish a connection before terminating the attempt and generating an error.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6414a-227">연결이 열릴 때까지 대기하는 시간(초)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-227">The time in seconds to wait for a connection to open.</span>
          </span>
          <span data-ttu-id="6414a-228">기본값은 15초입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-228">The default value is 15 seconds.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6414a-229">SQL Server 및 OLE DB 용.NET Framework 데이터 공급자와 달리.NET Framework Data Provider for ODBC 지원 하지 않습니다는 연결 문자열 값으로이 속성을 설정할 유효한 ODBC 연결 키워드 이기 때문에.</span><span class="sxs-lookup"><span data-stu-id="6414a-229">Unlike the .NET Framework data providers for SQL Server and OLE DB, the .NET Framework Data Provider for ODBC does not support setting this property as a connection string value, because it is not a valid ODBC connection keyword.</span></span> <span data-ttu-id="6414a-230">연결 제한 시간을 지정 하려면는 <xref:System.Data.Odbc.OdbcConnection.ConnectionTimeout%2A> 호출 하기 전에 속성 <xref:System.Data.Odbc.OdbcConnection.Open%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-230">To specify a connection time-out, set the <xref:System.Data.Odbc.OdbcConnection.ConnectionTimeout%2A> property before calling <xref:System.Data.Odbc.OdbcConnection.Open%2A>.</span></span> <span data-ttu-id="6414a-231">이 ODBC를 설정 하는 `SQLSetConnectAttr` SQL_ATTR_LOGIN_TIMOUT 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-231">This is equivalent to setting the ODBC `SQLSetConnectAttr` SQL_ATTR_LOGIN_TIMOUT attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6414a-232">설정한 값이 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-232">The value set is less than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcCommand CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCommand () As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcCommand ^ CreateCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6414a-233">
            <see cref="T:System.Data.Odbc.OdbcCommand" />과 관련된 <see cref="T:System.Data.Odbc.OdbcConnection" /> 개체를 만들거나 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-233">Creates and returns an <see cref="T:System.Data.Odbc.OdbcCommand" /> object associated with the <see cref="T:System.Data.Odbc.OdbcConnection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6414a-234">
            <see cref="T:System.Data.Odbc.OdbcCommand" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-234">An <see cref="T:System.Data.Odbc.OdbcCommand" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDbCommand">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbCommand CreateDbCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbCommand CreateDbCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.CreateDbCommand" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbCommand ^ CreateDbCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Database">
      <MemberSignature Language="C#" Value="public override string Database { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Database" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcConnection.Database" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Database As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Database { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6414a-235">현재 데이터베이스 이름이나 연결이 열린 후 사용할 데이터베이스의 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-235">Gets the name of the current database or the database to be used after a connection is opened.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6414a-236">현재 데이터베이스 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-236">The name of the current database.</span>
          </span>
          <span data-ttu-id="6414a-237">기본값은 연결이 열릴 때까지 빈 문자열("")입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-237">The default value is an empty string ("") until the connection is opened.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6414a-238">처음에 <xref:System.Data.Odbc.OdbcConnection.Database%2A> 연결 문자열에 속성이 설정 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-238">At first, the <xref:System.Data.Odbc.OdbcConnection.Database%2A> property is set in the connection string.</span></span> <span data-ttu-id="6414a-239"><xref:System.Data.Odbc.OdbcConnection.Database%2A> 속성을 사용 하 여 업데이트할 수는 <xref:System.Data.Odbc.OdbcConnection.ChangeDatabase%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6414a-239">The <xref:System.Data.Odbc.OdbcConnection.Database%2A> property can be updated by using the <xref:System.Data.Odbc.OdbcConnection.ChangeDatabase%2A> method.</span></span> <span data-ttu-id="6414a-240">SQL 문을 사용 하 여 현재 데이터베이스를 변경 하면 또는 <xref:System.Data.Odbc.OdbcConnection.ChangeDatabase%2A> 정보 메시지가 전송 되는 메서드와 다음 속성이 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-240">If you change the current database using an SQL statement or the <xref:System.Data.Odbc.OdbcConnection.ChangeDatabase%2A> method, an informational message is sent and then the property is updated.</span></span>  
  
 <span data-ttu-id="6414a-241">검색 하는 <xref:System.Data.Odbc.OdbcConnection.Database%2A> 속성은 ODBC 함수를 호출 `SQLGetInfo` 와 `Attribute` 매개 변수가 SQL_ATTR_CURRENT_CATALOG로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-241">Retrieving the <xref:System.Data.Odbc.OdbcConnection.Database%2A> property is equivalent to calling the ODBC function `SQLGetInfo` with the `Attribute` parameter set to SQL_ATTR_CURRENT_CATALOG.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6414a-242">다음 예제에서는 <xref:System.Data.Odbc.OdbcConnection> 현재 데이터베이스를 변경 하 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-242">The following example creates an <xref:System.Data.Odbc.OdbcConnection> and changes the current database.</span></span>  
  
 [!code-csharp[Classic WebData OdbcConnection.Database#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.Database/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcConnection.Database#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.Database/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public override string DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcConnection.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DataSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataSource { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6414a-243">데이터 소스의 파일 이름 또는 서버 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-243">Gets the server name or file name of the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6414a-244">데이터 소스의 파일 이름 또는 서버 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-244">The server name or file name of the data source.</span>
          </span>
          <span data-ttu-id="6414a-245">기본값은 연결이 열릴 때까지 빈 문자열("")입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-245">The default value is an empty string ("") until the connection is opened.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6414a-246">검색 하는 <xref:System.Data.Odbc.OdbcConnection.DataSource%2A> 속성은 ODBC 함수를 호출 `SQLGetInfo` 와 `InfoType` 매개 변수가 SQL_SERVER_NAME로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-246">Retrieving the <xref:System.Data.Odbc.OdbcConnection.DataSource%2A> property is equivalent to calling the ODBC function `SQLGetInfo` with the `InfoType` parameter set to SQL_SERVER_NAME.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6414a-247">다음 예제에서는 <xref:System.Data.Odbc.OdbcConnection> 백 엔드 데이터 원본 이름을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-247">The following example creates an <xref:System.Data.Odbc.OdbcConnection> and displays the backend data source name.</span></span>  
  
 [!code-csharp[Classic WebData OdbcConnection.DataSource#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.DataSource/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcConnection.DataSource#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.DataSource/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Driver">
      <MemberSignature Language="C#" Value="public string Driver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Driver" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcConnection.Driver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Driver As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Driver { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6414a-248">현재 연결에 대해 지정된 ODBC 드라이버의 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-248">Gets the name of the ODBC driver specified for the current connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6414a-249">ODBC 드라이버의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-249">The name of the ODBC driver.</span>
          </span>
          <span data-ttu-id="6414a-250">일반적으로 DLL 이름(예: Sqlsrv32.dll)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-250">This typically is the DLL name (for example, Sqlsrv32.dll).</span>
          </span>
          <span data-ttu-id="6414a-251">기본값은 연결이 열릴 때까지 빈 문자열("")입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-251">The default value is an empty string ("") until the connection is opened.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6414a-252">검색 하는 <xref:System.Data.Odbc.OdbcConnection.Driver%2A> 속성은 ODBC 함수를 호출 `SQLGetInfo` 와 `InfoType` 매개 변수가 SQL_DRIVER_NAME로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-252">Retrieving the <xref:System.Data.Odbc.OdbcConnection.Driver%2A> property is equivalent to calling the ODBC function `SQLGetInfo` with the `InfoType` parameter set to SQL_DRIVER_NAME.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistDistributedTransaction">
      <MemberSignature Language="C#" Value="public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnlistDistributedTransaction(class System.EnterpriseServices.ITransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnlistDistributedTransaction (transaction As ITransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnlistDistributedTransaction(System::EnterpriseServices::ITransaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.EnterpriseServices.ITransaction" />
      </Parameters>
      <Docs>
        <param name="transaction">
          <span data-ttu-id="6414a-253">등록할 기존 <see cref="T:System.EnterpriseServices.ITransaction" />에 대한 참조입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-253">A reference to an existing <see cref="T:System.EnterpriseServices.ITransaction" /> in which to enlist.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6414a-254">지정된 트랜잭션에 분산 트랜잭션으로 참여합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-254">Enlists in the specified transaction as a distributed transaction.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6414a-255">새 ADO.NET 2.0에서 지원은 사용에 대 한는 <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> 메서드를 분산된 트랜잭션에 참여 합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-255">New in ADO.NET 2.0 is support for using the <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> method to enlist in a distributed transaction.</span></span> <span data-ttu-id="6414a-256">연결을 참여 하기 때문에 <xref:System.Transactions.Transaction> 인스턴스에 **EnlistTransaction** 에서 사용할 수 있는 기능을 활용는 <xref:System.Transactions> 분산 트랜잭션에서, 보다선호하는네임스페이스를관리하기위한** 참여가** 이 목적을 위해 합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-256">Because it enlists a connection in a <xref:System.Transactions.Transaction> instance, **EnlistTransaction** takes advantage of functionality available in the <xref:System.Transactions> namespace for managing distributed transactions, making it preferable to **EnlistDistributedTransaction** for this purpose.</span></span> <span data-ttu-id="6414a-257">자세한 내용은 참조 [분산 트랜잭션](~/docs/framework/data/adonet/distributed-transactions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-257">For more information, see [Distributed Transactions](~/docs/framework/data/adonet/distributed-transactions.md).</span></span>  
  
 <span data-ttu-id="6414a-258">계속 사용 하 여 기존 분산된 트랜잭션에 참여할 수 있습니다는 <xref:System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction*> 메서드 자동 인 리스트 먼 트를 사용 하지 않도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-258">You can continue to enlist in an existing distributed transaction using the <xref:System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction*> method if auto-enlistment is disabled.</span></span> <span data-ttu-id="6414a-259">기존 분산된 트랜잭션에 인 리스트 먼 트 하면 즉, 트랜잭션이 커밋되거나 롤백될 경우 데이터 소스에서 코드에 의해 수정 된도 트랜잭션이 커밋 또는 롤백됨.</span><span class="sxs-lookup"><span data-stu-id="6414a-259">Enlisting in an existing distributed transaction makes sure that, if the transaction is committed or rolled back, modifications made by the code at the data source are also committed or rolled back.</span></span> <span data-ttu-id="6414a-260">분산된 트랜잭션에 대 한 자세한 내용은 참조 [분산 트랜잭션을](~/docs/framework/data/adonet/distributed-transactions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-260">For more information about distributed transactions, see [Distributed Transactions](~/docs/framework/data/adonet/distributed-transactions.md).</span></span>  
  
 <span data-ttu-id="6414a-261"><xref:System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction%2A> 경우 예외를 반환 된 <xref:System.Data.Odbc.OdbcConnection> 이미 사용 하 여 트랜잭션을 시작 <xref:System.Data.Odbc.OdbcConnection.BeginTransaction*>합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-261"><xref:System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction%2A> returns an exception if the <xref:System.Data.Odbc.OdbcConnection> has already started a transaction using <xref:System.Data.Odbc.OdbcConnection.BeginTransaction*>.</span></span> <span data-ttu-id="6414a-262">그러나 트랜잭션이 데이터 소스에서 시작 된 로컬 트랜잭션 인지 (명시적으로 사용 하 여 BEGIN TRANSACTION 문을 실행 하는 예를 들어 여는 <xref:System.Data.Odbc.OdbcCommand> 개체), <xref:System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction%2A> 로컬 트랜잭션을 롤백하고 기존 트랜잭션에 참여 분산된 트랜잭션 요청한으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-262">However, if the transaction is a local transaction started at the data source (for example, by explicitly executing the BEGIN TRANSACTION statement using an <xref:System.Data.Odbc.OdbcCommand> object), <xref:System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction%2A> rolls back the local transaction and enlists in the existing distributed transaction as requested.</span></span> <span data-ttu-id="6414a-263">로컬 트랜잭션이 롤백 되었습니다 및 사용 하 여 시작 되지 않는 모든 로컬 트랜잭션을 관리 해야 하는 통지를 받지 못할 <xref:System.Data.Odbc.OdbcConnection.BeginTransaction*>합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-263">You will not receive notice that the local transaction was rolled back, and are responsible for managing any local transactions not started using <xref:System.Data.Odbc.OdbcConnection.BeginTransaction*>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistTransaction">
      <MemberSignature Language="C#" Value="public override void EnlistTransaction (System.Transactions.Transaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnlistTransaction(class System.Transactions.Transaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.EnlistTransaction(System.Transactions.Transaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EnlistTransaction(System::Transactions::Transaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
      </Parameters>
      <Docs>
        <param name="transaction">
          <span data-ttu-id="6414a-264">등록할 기존 <see cref="T:System.Transactions.Transaction" />에 대한 참조입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-264">A reference to an existing <see cref="T:System.Transactions.Transaction" /> in which to enlist.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6414a-265">지정된 트랜잭션에 분산 트랜잭션으로 참여합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-265">Enlists in the specified transaction as a distributed transaction.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6414a-266">새 ADO.NET 2.0에서 지원은 사용에 대 한는 <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> 메서드를 분산된 트랜잭션에 참여 합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-266">New in ADO.NET 2.0 is support for using the <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> method to enlist in a distributed transaction.</span></span> <span data-ttu-id="6414a-267">연결을 참여 하기 때문에 <xref:System.Transactions.Transaction> 인스턴스에 **EnlistTransaction** 에서 사용할 수 있는 기능을 활용는 <xref:System.Transactions> 분산 트랜잭션에서, 보다선호하는네임스페이스를관리하기위한** 참여가**를 사용 하는 **System.EnterpriseServices.ITransaction** 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-267">Because it enlists a connection in a <xref:System.Transactions.Transaction> instance, **EnlistTransaction** takes advantage of functionality available in the <xref:System.Transactions> namespace for managing distributed transactions, making it preferable to **EnlistDistributedTransaction**, which uses a **System.EnterpriseServices.ITransaction** object.</span></span> <span data-ttu-id="6414a-268">역시 약간 다른 의미 체계: 트랜잭션에 연결을 명시적으로 등록 된, 등록 취소 하거나 수 첫 번째 트랜잭션이 완료 될 때까지 다른 트랜잭션에 참여 합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-268">It also has slightly different semantics: once a connection is explicitly enlisted on a transaction, it cannot be unenlisted or enlisted in another transaction until the first transaction finishes.</span></span> <span data-ttu-id="6414a-269">분산된 트랜잭션에 대 한 자세한 내용은 참조 [분산 트랜잭션을](~/docs/framework/data/adonet/distributed-transactions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-269">For more information about distributed transactions, see [Distributed Transactions](~/docs/framework/data/adonet/distributed-transactions.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6414a-270">이 <see cref="T:System.Data.Odbc.OdbcConnection" />의 데이터 소스에 대한 스키마 정보를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-270">Returns schema information for the data source of this <see cref="T:System.Data.Odbc.OdbcConnection" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6414a-271">이 <see cref="T:System.Data.Odbc.OdbcConnection" />의 데이터 소스에 대한 스키마 정보를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-271">Returns schema information for the data source of this <see cref="T:System.Data.Odbc.OdbcConnection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6414a-272">스키마 정보를 포함하는 <see cref="T:System.Data.DataTable" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-272">A <see cref="T:System.Data.DataTable" /> that contains schema information.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.GetSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="collectionName">
          <span data-ttu-id="6414a-273">반환할 스키마의 이름을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-273">Specifies the name of the schema to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6414a-274">스키마 이름에 지정된 이름을 사용하여 이 <see cref="T:System.Data.Odbc.OdbcConnection" />의 데이터 소스에 대한 스키마 정보를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-274">Returns schema information for the data source of this <see cref="T:System.Data.Odbc.OdbcConnection" /> using the specified name for the schema name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6414a-275">스키마 정보를 포함하는 <see cref="T:System.Data.DataTable" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-275">A <see cref="T:System.Data.DataTable" /> that contains schema information.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6414a-276">때 `collectionName` 매개 변수가 null 이면는 <xref:System.Data.DataTable> 사용 가능한 모든 메타 데이터 및 모든 제한 사항에 대 한 정보를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-276">When `collectionName` is null, the <xref:System.Data.DataTable> contains information about all available metadata and any restrictions.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6414a-277">에 적용 되는 모든 제한은 `SQLStatistics` 에 적용 된 메서드는 `ODBCConnection.GetSchema("indexes")` 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-277">All restrictions that apply to the `SQLStatistics` method also apply to the `ODBCConnection.GetSchema("indexes")` collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName, string[] restrictionValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.GetSchema(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String, restrictionValues As String()) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName, cli::array &lt;System::String ^&gt; ^ restrictionValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" />
        <Parameter Name="restrictionValues" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="collectionName">
          <span data-ttu-id="6414a-278">반환할 스키마의 이름을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-278">Specifies the name of the schema to return.</span>
          </span>
        </param>
        <param name="restrictionValues">
          <span data-ttu-id="6414a-279">요청된 스키마에 대한 제한 값의 집합을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-279">Specifies a set of restriction values for the requested schema.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6414a-280">스키마 이름에 대해 지정된 문자열과 제한 값에 대해 지정된 문자열 배열을 사용하여 이 <see cref="T:System.Data.Odbc.OdbcConnection" />의 데이터 소스에 대한 스키마 정보를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-280">Returns schema information for the data source of this <see cref="T:System.Data.Odbc.OdbcConnection" /> using the specified string for the schema name and the specified string array for the restriction values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6414a-281">스키마 정보를 포함하는 <see cref="T:System.Data.DataTable" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-281">A <see cref="T:System.Data.DataTable" /> that contains schema information.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6414a-282">때 `collectionName` null로 지정 된 <xref:System.Data.DataTable> 를 사용할 수 있는 모든 메타 데이터 및 해당 제한 사항에 대 한 정보를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-282">When `collectionName` is specified as null, the <xref:System.Data.DataTable> contains information about all the metadata that is available, and its restrictions.</span></span>  
  
 <span data-ttu-id="6414a-283">`restrictionValues` 매개 변수 제공 *n* 수준의 특정 컬렉션에 대 한 제한 컬렉션에서 지정 된 값입니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-283">The `restrictionValues` parameter can supply *n* depth of values which are specified by the restrictions collection for a specific collection.</span></span> <span data-ttu-id="6414a-284">특정된 제한에 값을 설정 하 고 다른 제한 값을 설정 하지 않으려면, 앞의 제한을 null 하 고 다음 값을 지정 하려면 원하는 제한에 적절 한 값을 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-284">In order to set values on a given restriction, and not set the values of other restrictions, you must set the preceding restrictions to null and then put the appropriate value in for the restriction that you would like to specify a value for.</span></span>  
  
 <span data-ttu-id="6414a-285">이 예는 "Table" 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-285">An example of this is the "Tables" collection.</span></span> <span data-ttu-id="6414a-286">"Table" 컬렉션에 세 가지 제한 (데이터베이스, 소유자 및 테이블 이름) 및 "칼" 소유자와 연결 된 테이블에만 다시 확보 하려는 경우 적어도 다음 값에 전달 해야: null, "칼"입니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-286">If the "Tables" collection has three restrictions (database, owner, and table name), and you want to get back only the tables associated with the owner "Carl," then you would need to pass in at least the following values: null, "Carl".</span></span> <span data-ttu-id="6414a-287">에 제한 값이 전달 되지 않으면, 기본 값은 해당 제한에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-287">If a restriction value is not passed in, the default values are used for that restriction.</span></span> <span data-ttu-id="6414a-288">이 null 전달 하는 대로 동일한 매핑을 매개 변수 값에 대 한 빈 문자열을 전달과에서는 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-288">This is the same mapping as passing in null, which is different from passing in an empty string for the parameter value.</span></span> <span data-ttu-id="6414a-289">그러면 빈 문자열 ("")의 지정된 된 매개 변수 값으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-289">In that case, the empty string ("") is considered to be the value for the specified parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6414a-290">SQLStatistics 메서드에 적용 되는 모든 제한은 ODBCConnection.GetSchema("indexes") 컬렉션에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-290">All restrictions that apply to SQLStatistics method will apply to the ODBCConnection.GetSchema("indexes") collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InfoMessage">
      <MemberSignature Language="C#" Value="public event System.Data.Odbc.OdbcInfoMessageEventHandler InfoMessage;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.Odbc.OdbcInfoMessageEventHandler InfoMessage" />
      <MemberSignature Language="DocId" Value="E:System.Data.Odbc.OdbcConnection.InfoMessage" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InfoMessage As OdbcInfoMessageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::Odbc::OdbcInfoMessageEventHandler ^ InfoMessage;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcInfoMessageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6414a-291">ODBC 드라이버가 경고나 정보 메시지를 보내면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-291">Occurs when the ODBC driver sends a warning or an informational message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6414a-292">서버에서 보낸 정보 메시지를 처리 하는 클라이언트를 만들어야는 <xref:System.Data.Odbc.OdbcInfoMessageEventHandler> 이 이벤트를 수신 하는 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-292">Clients that want to process warnings or informational messages sent by the server should create an <xref:System.Data.Odbc.OdbcInfoMessageEventHandler> delegate to listen to this event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public override void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.Open" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Open();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6414a-293">
            <see cref="P:System.Data.Odbc.OdbcConnection.ConnectionString" />이 지정하는 속성 설정을 사용하여 데이터 소스에 대한 연결을 엽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-293">Opens a connection to a data source with the property settings specified by the <see cref="P:System.Data.Odbc.OdbcConnection.ConnectionString" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6414a-294"><xref:System.Data.Odbc.OdbcConnection> 사용 가능한 경우 연결 풀에서 열려 있는 연결을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-294">The <xref:System.Data.Odbc.OdbcConnection> draws an open connection from the connection pool if one is available.</span></span> <span data-ttu-id="6414a-295">그렇지 않으면 데이터 원본에 새 연결을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-295">Otherwise, it establishes a new connection to the data source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6414a-296">경우는 <xref:System.Data.Odbc.OdbcConnection> 범위를 벗어나면 나타나는 연결은 자동으로 닫히지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-296">If the <xref:System.Data.Odbc.OdbcConnection> goes out of scope, the connection it represents does not close automatically.</span></span> <span data-ttu-id="6414a-297">따라서 명시적으로 닫아야 연결 호출 하 여 <xref:System.Data.Odbc.OdbcConnection.Close%2A>, **Dispose**, 내에서 연결을 배치 하 여 한 `Using` 문.</span><span class="sxs-lookup"><span data-stu-id="6414a-297">Therefore, you must explicitly close the connection by calling <xref:System.Data.Odbc.OdbcConnection.Close%2A>, **Dispose**, or by placing the connection within a `Using` statement.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="6414a-298">이 메서드의 기능은 기본 클래스에서 지원되지 않으므로 대신에 파생된 클래스에서 구현해야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-298">The functionality of this method is unsupported in the base class and must be implemented in a derived class instead.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReleaseObjectPool">
      <MemberSignature Language="C#" Value="public static void ReleaseObjectPool ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReleaseObjectPool() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.ReleaseObjectPool" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReleaseObjectPool ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReleaseObjectPool();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6414a-299">마지막 원본 연결이 해제될 때 ODBC 드라이버 관리자 환경 핸들이 해제될 수 있음을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-299">Indicates that the ODBC Driver Manager environment handle can be released when the last underlying connection is released.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6414a-300">`ReleaseObjectPool` ODBC 환경 핸들을 해제 하기 위해 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-300">`ReleaseObjectPool` can be called to release the ODBC environment handle.</span></span> <span data-ttu-id="6414a-301">예를 들어 연결 개체는 다시 사용할 수 없습니다 하는 경우이 메서드를 호출 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-301">You might want to call this method if, for example, the connection object will not be used again.</span></span> <span data-ttu-id="6414a-302">환경에서 모든 연결이 닫히면 환경이 삭제 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-302">When all connections in the environment are closed, the environment can be disposed.</span></span> <span data-ttu-id="6414a-303">참고 메서드 호출, 환경에는 활성 연결 실제로 해제 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-303">Note that calling the method alone does not actually release the active connections that exist in the environment.</span></span>  
  
 <span data-ttu-id="6414a-304">환경을 마지막으로 삭제 하기 전에 다음이 발생 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-304">The following must occur before the environment is finally disposed:</span></span>  
  
1.  <span data-ttu-id="6414a-305">호출 <xref:System.Data.Odbc.OdbcConnection.Close%2A> 를 해제 하는 <xref:System.Data.Odbc.OdbcConnection> 환경에서 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-305">Call <xref:System.Data.Odbc.OdbcConnection.Close%2A> to release the <xref:System.Data.Odbc.OdbcConnection> object from the environment.</span></span>  
  
2.  <span data-ttu-id="6414a-306">제한 시간이 초과 각 연결 개체를 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-306">Allow each connection object to time out.</span></span>  
  
3.  <span data-ttu-id="6414a-307"><xref:System.Data.Odbc.OdbcConnection.ReleaseObjectPool%2A>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-307">Call <xref:System.Data.Odbc.OdbcConnection.ReleaseObjectPool%2A>.</span></span>  
  
4.  <span data-ttu-id="6414a-308">가비지 수집을 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-308">Invoke garbage collection.</span></span>  
  
 <span data-ttu-id="6414a-309">반대로, 호출 하는 경우 <xref:System.Data.Odbc.OdbcConnection.Close%2A> 모든 활성 연결에서 및 가비지 수집을 호출 하지만 호출 하지 않으면 <xref:System.Data.Odbc.OdbcConnection.ReleaseObjectPool%2A>, 환경에 대해 예약 된 리소스를 사용할 수 있는 상태로 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-309">Conversely, if you call <xref:System.Data.Odbc.OdbcConnection.Close%2A> on all active connections, and invoke garbage collection, but do not call <xref:System.Data.Odbc.OdbcConnection.ReleaseObjectPool%2A>, the resources reserved for the environment remain available.</span></span>  
  
 <span data-ttu-id="6414a-310">환경 핸들 해제 된 후 새에 대 한 요청 <xref:System.Data.Odbc.OdbcConnection> 새 환경을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-310">After an environment handle is released, a request for a new <xref:System.Data.Odbc.OdbcConnection> creates a new environment.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerVersion">
      <MemberSignature Language="C#" Value="public override string ServerVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcConnection.ServerVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ServerVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ServerVersion { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6414a-311">클라이언트가 연결되는 서버 버전을 포함하는 문자열을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-311">Gets a string that contains the version of the server to which the client is connected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6414a-312">연결된 서버의 버전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-312">The version of the connected server.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6414a-313">경우 <xref:System.Data.Odbc.OdbcConnection.ServerVersion%2A> 빈 문자열 기본 ODBC 드라이버에서 지원 되지 않습니다 ("")이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-313">If <xref:System.Data.Odbc.OdbcConnection.ServerVersion%2A> is not supported by the underlying ODBC driver, an empty string ("") is returned.</span></span>  
  
 <span data-ttu-id="6414a-314"><xref:System.Data.Odbc.OdbcConnection.ServerVersion%2A> 속성의 형식은 '*# #. # #. # # #*,' 여기서 처음 두 자리는 주 버전, 다음 두 자리는 부 버전 및 마지막 4 자리는 릴리스 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-314">The <xref:System.Data.Odbc.OdbcConnection.ServerVersion%2A> property takes the form '*##.##.####*,' where the first two digits are the major version, the next two digits are the minor version, and the last four digits are the release version.</span></span> <span data-ttu-id="6414a-315">드라이버는 제품 버전을이 형식으로 렌더링 해야 하지만 제품 관련 버전 문자열을 추가할 수도 있습니다 (예를 들어 "04.01.0000 4.1 Rdb").</span><span class="sxs-lookup"><span data-stu-id="6414a-315">The driver must render the product version in this form but can also append the product-specific version as a string (for example, "04.01.0000 Rdb 4.1").</span></span> <span data-ttu-id="6414a-316">이 문자열의 형식은 '*major.minor.build*' 여기서 *주요* 및 *부* 는 정확히 두 자리로 및 *빌드* 는 정확 하 게 4 자리 수입니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-316">This string takes the form '*major.minor.build*' where *major* and *minor* are exactly two digits and *build* is exactly four digits.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6414a-317">연결이 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-317">The connection is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Data.ConnectionState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ConnectionState State" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcConnection.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As ConnectionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ConnectionState State { System::Data::ConnectionState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConnectionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6414a-318">연결의 현재 상태를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-318">Gets the current state of the connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6414a-319">
            <see cref="T:System.Data.ConnectionState" /> 값의 비트 조합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-319">A bitwise combination of the <see cref="T:System.Data.ConnectionState" /> values.</span>
          </span>
          <span data-ttu-id="6414a-320">기본값은 <see langword="Closed" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-320">The default is <see langword="Closed" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6414a-321">다음은 상태 변경은 허용:</span><span class="sxs-lookup"><span data-stu-id="6414a-321">The following are allowed state changes:</span></span>  
  
-   <span data-ttu-id="6414a-322">`Closed` 를 `Open`를 사용 하 여는 <xref:System.Data.Odbc.OdbcConnection.Open%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6414a-322">From `Closed` to `Open`, using the <xref:System.Data.Odbc.OdbcConnection.Open%2A> method.</span></span>  
  
-   <span data-ttu-id="6414a-323">`Open` 를 `Closed`, 하나를 사용 하는 <xref:System.Data.Odbc.OdbcConnection.Close%2A> 또는 **Dispose** 메서드.</span><span class="sxs-lookup"><span data-stu-id="6414a-323">From `Open` to `Closed`, using either the <xref:System.Data.Odbc.OdbcConnection.Close%2A> or **Dispose** method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6414a-324">호출 된 <xref:System.Data.Odbc.OdbcConnection.State%2A> 속성에 대해 열린 연결에 이러한 호출이 각 연결이 여전히 유효한 지 여부를 확인 하려면 기본 ODBC 드라이버에 대 한 SQL_ATTR_CONNECTION_DEAD 호출 하기 때문에 응용 프로그램 오버 헤드가 증가 합니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-324">Calling the <xref:System.Data.Odbc.OdbcConnection.State%2A> property on an open connection increases application overhead because each such call causes a SQL_ATTR_CONNECTION_DEAD call to the underlying ODBC driver to determine whether the connection is still valid.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6414a-325">이 멤버에 대한 설명은 <see cref="M:System.ICloneable.Clone" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-325">For a description of this member, see <see cref="M:System.ICloneable.Clone" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6414a-326">이 인스턴스의 복사본인 새 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6414a-326">A new <see cref="T:System.Object" /> that is a copy of this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6414a-327">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="6414a-327">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6414a-328"><xref:System.Data.Odbc.OdbcConnection> 인스턴스가 <xref:System.ICloneable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6414a-328">It can be used only when the <xref:System.Data.Odbc.OdbcConnection> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>