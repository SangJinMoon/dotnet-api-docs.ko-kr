<Type Name="OdbcTransaction" FullName="System.Data.Odbc.OdbcTransaction">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="aa5cd2d2dd883e0482ffb85c9730cfdde70959ba" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OdbcTransaction : System.Data.Common.DbTransaction" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OdbcTransaction extends System.Data.Common.DbTransaction" />
  <TypeSignature Language="DocId" Value="T:System.Data.Odbc.OdbcTransaction" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OdbcTransaction&#xA;Inherits DbTransaction" />
  <TypeSignature Language="C++ CLI" Value="public ref class OdbcTransaction sealed : System::Data::Common::DbTransaction" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Odbc</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbTransaction</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="9ade4-101">데이터 원본에서 만들어지는 SQL 트랜잭션을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9ade4-101">Represents an SQL transaction to be made at a data source.</span>
      </span>
      <span data-ttu-id="9ade4-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9ade4-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ade4-103">응용 프로그램을 만듭니다는 <xref:System.Data.Odbc.OdbcTransaction> 호출 하 여 개체 <xref:System.Data.Odbc.OdbcConnection.BeginTransaction%2A> 에 <xref:System.Data.Odbc.OdbcConnection> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9ade4-103">The application creates an <xref:System.Data.Odbc.OdbcTransaction> object by calling <xref:System.Data.Odbc.OdbcConnection.BeginTransaction%2A> on the <xref:System.Data.Odbc.OdbcConnection> object.</span></span> <span data-ttu-id="9ade4-104">트랜잭션 (예를 들어, 커밋 또는 트랜잭션을 중단)와 관련 된 모든 후속 작업이 수행 되는 <xref:System.Data.Odbc.OdbcTransaction> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9ade4-104">All subsequent operations associated with the transaction (for example, committing or aborting the transaction) are performed on the <xref:System.Data.Odbc.OdbcTransaction> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ade4-105">다음 예제에서는 <xref:System.Data.Odbc.OdbcConnection> 및 <xref:System.Data.Odbc.OdbcTransaction>합니다.</span><span class="sxs-lookup"><span data-stu-id="9ade4-105">The following example creates an <xref:System.Data.Odbc.OdbcConnection> and an <xref:System.Data.Odbc.OdbcTransaction>.</span></span> <span data-ttu-id="9ade4-106">사용 하는 방법을 보여 줍니다는 <xref:System.Data.Odbc.OdbcConnection.BeginTransaction%2A>, <xref:System.Data.Odbc.OdbcTransaction.Commit%2A>, 및 <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9ade4-106">It also demonstrates how to use the <xref:System.Data.Odbc.OdbcConnection.BeginTransaction%2A>, <xref:System.Data.Odbc.OdbcTransaction.Commit%2A>, and <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> methods.</span></span>  
  
 [!code-csharp[Classic WebData OdbcConnection.BeginTransaction#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.BeginTransaction/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcConnection.BeginTransaction#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.BeginTransaction/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.Odbc.OdbcDataAdapter" />
    <altmember cref="T:System.Data.Odbc.OdbcConnection" />
  </Docs>
  <Members>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public override void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Commit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcTransaction.Commit" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Commit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Commit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9ade4-107">데이터베이스 트랜잭션을 커밋합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ade4-107">Commits the database transaction.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9ade4-108">다음 예제에서는 <xref:System.Data.Odbc.OdbcConnection> 및 <xref:System.Data.Odbc.OdbcTransaction>합니다.</span><span class="sxs-lookup"><span data-stu-id="9ade4-108">The following example creates an <xref:System.Data.Odbc.OdbcConnection> and an <xref:System.Data.Odbc.OdbcTransaction>.</span></span> <span data-ttu-id="9ade4-109">사용 하는 방법을 보여 줍니다는 <xref:System.Data.Odbc.OdbcConnection.BeginTransaction%2A>, <xref:System.Data.Odbc.OdbcTransaction.Commit%2A>, 및 <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9ade4-109">It also demonstrates how to use the <xref:System.Data.Odbc.OdbcConnection.BeginTransaction%2A>, <xref:System.Data.Odbc.OdbcTransaction.Commit%2A>, and <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> methods.</span></span>  
  
 [!code-csharp[Classic WebData OdbcConnection.BeginTransaction1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.BeginTransaction1/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcConnection.BeginTransaction1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.BeginTransaction1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="9ade4-110">트랜잭션을 커밋하는 동안 오류가 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ade4-110">An error occurred while trying to commit the transaction.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9ade4-111">트랜잭션이 이미 커밋 또는 롤백된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ade4-111">The transaction has already been committed or rolled back.</span>
          </span>
          <span data-ttu-id="9ade4-112">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ade4-112">-or-</span>
          </span>
          <span data-ttu-id="9ade4-113">연결이 손상된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ade4-113">The connection is broken.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Odbc.OdbcConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcTransaction.Connection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connection As OdbcConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Odbc::OdbcConnection ^ Connection { System::Data::Odbc::OdbcConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9ade4-114">트랜잭션과 관련된 <see cref="T:System.Data.Odbc.OdbcConnection" /> 개체를 가져오거나 트랜잭션이 더 이상 유효하지 않으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ade4-114">Gets the <see cref="T:System.Data.Odbc.OdbcConnection" /> object associated with the transaction, or <see langword="null" /> if the transaction is no longer valid.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9ade4-115">트랜잭션과 연결된 <see cref="T:System.Data.Odbc.OdbcConnection" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ade4-115">The <see cref="T:System.Data.Odbc.OdbcConnection" /> object associated with the transaction.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ade4-116">단일 응용 프로그램에는 각각 0 개 이상의 트랜잭션을 사용 하 여 여러 데이터베이스 연결을 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9ade4-116">A single application may have multiple database connections, each with zero or more transactions.</span></span> <span data-ttu-id="9ade4-117">이 속성을 사용 하 여 만든 특정 트랜잭션에 연결 된 연결 개체를 결정할 수 <xref:System.Data.Odbc.OdbcConnection.BeginTransaction%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="9ade4-117">This property lets you determine the connection object associated with a particular transaction created by <xref:System.Data.Odbc.OdbcConnection.BeginTransaction%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbConnection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbConnection DbConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection DbConnection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcTransaction.DbConnection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbConnection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbConnection ^ DbConnection { System::Data::Common::DbConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcTransaction.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsolationLevel">
      <MemberSignature Language="C#" Value="public override System.Data.IsolationLevel IsolationLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.IsolationLevel IsolationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcTransaction.IsolationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsolationLevel As IsolationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::IsolationLevel IsolationLevel { System::Data::IsolationLevel get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9ade4-118">이 트랜잭션에 대한 <see cref="T:System.Data.IsolationLevel" />을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ade4-118">Specifies the <see cref="T:System.Data.IsolationLevel" /> for this transaction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9ade4-119">이 트랜잭션에 대한 <see cref="T:System.Data.IsolationLevel" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ade4-119">The <see cref="T:System.Data.IsolationLevel" /> for this transaction.</span>
          </span>
          <span data-ttu-id="9ade4-120">기본값은 기본 ODBC 드라이버에 따라 다릅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ade4-120">The default depends on the underlying ODBC driver.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ade4-121">병렬 트랜잭션은 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9ade4-121">Parallel transactions are not supported.</span></span> <span data-ttu-id="9ade4-122">따라서는 <xref:System.Data.IsolationLevel> 전체 트랜잭션에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9ade4-122">Therefore, the <xref:System.Data.IsolationLevel> applies to the whole transaction.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcTransaction.Rollback" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9ade4-123">보류 상태에서 트랜잭션을 롤백합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ade4-123">Rolls back a transaction from a pending state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ade4-124">트랜잭션을 롤백할 수 보류 중 상태 에서만에서 (후 <xref:System.Data.Odbc.OdbcConnection.BeginTransaction%2A> 호출 하기 전에 <xref:System.Data.Odbc.OdbcTransaction.Commit%2A> 라고).</span><span class="sxs-lookup"><span data-stu-id="9ade4-124">The transaction can be rolled back only from a pending state (after <xref:System.Data.Odbc.OdbcConnection.BeginTransaction%2A> has been called, but before <xref:System.Data.Odbc.OdbcTransaction.Commit%2A> is called).</span></span> <span data-ttu-id="9ade4-125">다시 이벤트 하기 전에 삭제 되 고 트랜잭션이 롤백됩니다 `Commit` 또는 `Rollback` 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="9ade4-125">The transaction will be rolled back in the event it is disposed before `Commit` or `Rollback` is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ade4-126">다음 예제에서는 <xref:System.Data.Odbc.OdbcConnection> 및 <xref:System.Data.Odbc.OdbcTransaction>합니다.</span><span class="sxs-lookup"><span data-stu-id="9ade4-126">The following example creates an <xref:System.Data.Odbc.OdbcConnection> and an <xref:System.Data.Odbc.OdbcTransaction>.</span></span> <span data-ttu-id="9ade4-127">사용 하는 방법을 보여 줍니다는 <xref:System.Data.Odbc.OdbcConnection.BeginTransaction%2A>, <xref:System.Data.Odbc.OdbcTransaction.Commit%2A>, 및 <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9ade4-127">It also demonstrates how to use the <xref:System.Data.Odbc.OdbcConnection.BeginTransaction%2A>, <xref:System.Data.Odbc.OdbcTransaction.Commit%2A>, and <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> methods.</span></span>  
  
 [!code-csharp[Classic WebData OdbcConnection.BeginTransaction1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.BeginTransaction1/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcConnection.BeginTransaction1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.BeginTransaction1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="9ade4-128">트랜잭션을 커밋하는 동안 오류가 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ade4-128">An error occurred while trying to commit the transaction.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9ade4-129">트랜잭션이 이미 커밋 또는 롤백된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ade4-129">The transaction has already been committed or rolled back.</span>
          </span>
          <span data-ttu-id="9ade4-130">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ade4-130">-or-</span>
          </span>
          <span data-ttu-id="9ade4-131">연결이 손상된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ade4-131">The connection is broken.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>