<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="OdbcConnectionStringBuilder.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58c062a863f6868f814d393c5af0df7c33339dc06.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8c062a863f6868f814d393c5af0df7c33339dc06</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.Odbc.OdbcConnectionStringBuilder">
          <source>Provides a simple way to create and manage the contents of connection strings used by the <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcConnection" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcConnection" /&gt;</ph> 클래스에서 사용하는 연결 문자열의 내용을 손쉽게 만들고 관리할 수 있는 방법을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcConnectionStringBuilder">
          <source>The connection string builders let developers programmatically create syntactically correct connection strings, and parse and rebuild existing connection strings, using properties and methods of the class.</source>
          <target state="translated">연결 문자열 작성기 클래스의 메서드와 속성을 사용 하 여 프로그래밍 방식으로 올바른 구문의 연결 문자열을 만들고 및 구문 분석 하 고 기존 연결 문자열을 다시 작성 하는 개발자를 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcConnectionStringBuilder">
          <source>The connection string builder provides strongly typed properties corresponding to the known key/value pairs allowed by ODBC connections, and developers can add arbitrary key/value pairs for any other connection string values.</source>
          <target state="translated">ODBC 연결에서 허용 되는 알려진된 키/값 쌍에 해당 하는 속성 및 개발자가 다른 연결 문자열 값에 대 한 임의의 키/값 쌍을 추가할 수 강력한 형식의 연결 문자열 작성기를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcConnectionStringBuilder">
          <source>Developers needing to create connection strings as part of applications can use the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph> class to build and modify connection strings.</source>
          <target state="translated">응용 프로그램에서 연결 문자열을 만들어야 하는 개발자는 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph> 클래스를 사용하여 연결 문자열을 빌드하고 수정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcConnectionStringBuilder">
          <source>The class also makes it easy to manage connection strings stored in an application configuration file.</source>
          <target state="translated">이 클래스를 사용하여 응용 프로그램 구성 파일에 저장된 연결 문자열을 쉽게 관리할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcConnectionStringBuilder">
          <source><ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph> performs checks only for the limited set of known key/value pairs.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph> 알려진된 키/값 쌍의 제한 된 집합에 대해서만 검사를 수행합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcConnectionStringBuilder">
          <source>Therefore, this class can be used to create invalid connection strings.</source>
          <target state="translated">따라서이 클래스 잘못 된 연결 문자열을 만드는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcConnectionStringBuilder">
          <source>The following table lists the specific known keys together with their corresponding properties within the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph> class, and their default values.</source>
          <target state="translated">다음 표에서 해당 속성 내에서 함께 알려진된 키의 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph> 클래스 및 해당 기본값입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcConnectionStringBuilder">
          <source>Besides these specific values, developers can add any key/value pairs to the collection that is contained within the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph> instance.</source>
          <target state="translated">이러한 특정 값 외에도 개발자가 모든 키/값 쌍 컬렉션에 추가할 수는에 포함 된는 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcConnectionStringBuilder">
          <source>Key</source>
          <target state="translated">Key</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcConnectionStringBuilder">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcConnectionStringBuilder">
          <source>Comment</source>
          <target state="translated">주석</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcConnectionStringBuilder">
          <source>Default value</source>
          <target state="translated">기본값</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcConnectionStringBuilder">
          <source>Driver</source>
          <target state="translated">드라이버</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcConnectionStringBuilder">
          <source>Developers should not include the braces surrounding the driver name when they set the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Driver%2A&gt;</ph> property.</source>
          <target state="translated">개발자는 중괄호로 드라이버 이름을 설정할 때를 포함 하지 않아야는 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Driver%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcConnectionStringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph> instance adds braces as needed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph> 필요에 따라 인스턴스에서 중괄호를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcConnectionStringBuilder">
          <source>Empty string</source>
          <target state="translated">빈 문자열</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcConnectionStringBuilder">
          <source>DSN</source>
          <target state="translated">DSN</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcConnectionStringBuilder">
          <source>Empty string</source>
          <target state="translated">빈 문자열</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcConnectionStringBuilder">
          <source>If any value (other than the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Driver%2A&gt;</ph> value) within the connection string contains a semicolon (;), the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph> surrounds the value with quotation marks in the connection string.</source>
          <target state="translated">모든 값 (이외의 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Driver%2A&gt;</ph> 값) 연결 내에서 문자열에는 세미콜론 (;)이 포함 되어는 <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph> 값을 연결 문자열을 따옴표로 묶습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcConnectionStringBuilder">
          <source>In order to avoid this issue with the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Driver%2A&gt;</ph> value that frequently contains a semicolon, the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph> class always surrounds this value with braces.</source>
          <target state="translated">이 문제를 방지 하기 위해는 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Driver%2A&gt;</ph> 자주 세미콜론을 포함 하는 값은 <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph> 클래스에는 항상이 값을 중괄호로 묶습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcConnectionStringBuilder">
          <source>The ODBC specification indicates that driver values that contain semicolons must be surrounded with braces, and this class handles this for you.</source>
          <target state="translated">ODBC 사양 중괄호와 세미콜론을 포함 하는 드라이버 값 묶어야이 클래스 자동으로 처리 함을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcConnectionStringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Item%2A&gt;</ph> property handles attempts to insert malicious code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Item%2A&gt;</ph> 속성 악성 코드를 삽입 하는 시도 처리 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcConnectionStringBuilder">
          <source>For example, the following code, using the default <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Item%2A&gt;</ph> property (the indexer, in C#) correctly escapes the nested key/value pair.</source>
          <target state="translated">예를 들어 다음 코드를 기본값을 사용 하 여 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Item%2A&gt;</ph> 속성 (C# 인덱서) 중첩 된 키/값 쌍을 올바르게 이스케이프 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcConnectionStringBuilder">
          <source>The result is the following connection string that handles the invalid value in a safe manner:</source>
          <target state="translated">결과는 안전한 방식으로 잘못된 값을 처리하는 다음 연결 문자열입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcConnectionStringBuilder">
          <source>The following console application builds connection strings for several ODBC databases.</source>
          <target state="translated">다음 콘솔 응용 프로그램은 여러 ODBC 데이터베이스에 대 한 연결 문자열을 작성 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcConnectionStringBuilder">
          <source>First, the example creates a connection string for a Microsoft Access database.</source>
          <target state="translated">먼저,이 예제에서는 Microsoft Access 데이터베이스에 대 한 연결 문자열을 만듭니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcConnectionStringBuilder">
          <source>It then creates a connection string for an IBM DB2 database.</source>
          <target state="translated">그런 다음 IBM DB2 데이터베이스에 대 한 연결 문자열을 만듭니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcConnectionStringBuilder">
          <source>The example also parses an existing connection string, and demonstrates various ways of manipulating the contents of the connection string.</source>
          <target state="translated">또한이 예제에서는 기존 연결 문자열을 구문 분석 하 고 연결 문자열의 내용을 조작 하는 다양 한 방법을 보여 줍니다. 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcConnectionStringBuilder">
          <source>This example includes a password to demonstrate how <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph> works with connection strings.</source>
          <target state="translated">이 예제에는 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph>가 연결 문자열로 작업하는 방법을 보여 주기 위한 암호가 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcConnectionStringBuilder">
          <source>In your applications, we recommend that you use Windows Authentication.</source>
          <target state="translated">응용 프로그램에서는 Windows 인증을 사용하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcConnectionStringBuilder">
          <source>If you must use a password, do not include a hard-coded password in your application.</source>
          <target state="translated">암호를 사용해야 하는 경우에는 응용 프로그램에 하드 코드된 암호를 포함하지 마십시오.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="T:System.Data.Odbc.OdbcConnectionStringBuilder">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcConnectionStringBuilder.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcConnectionStringBuilder.#ctor(System.String)">
          <source>The basis for the object's internal connection information.</source>
          <target state="translated">개체의 내부 연결 정보를 위한 기초로 사용됩니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcConnectionStringBuilder.#ctor(System.String)">
          <source>Parsed into key/value pairs.</source>
          <target state="translated">키/값 쌍으로 구문 분석됩니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcConnectionStringBuilder.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcConnectionStringBuilder.#ctor(System.String)">
          <source>The provided connection string provides the data for the instance's internal connection information.</source>
          <target state="translated">제공된 연결 문자열에서는 인스턴스의 내부 연결 정보에 대한 데이터를 제공합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcConnectionStringBuilder.#ctor(System.String)">
          <source>You can pass a connection string in the constructor, or you can set the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A&gt;</ph> property explicitly.</source>
          <target state="translated">연결 문자열을 생성자에 전달 하거나 설정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A&gt;</ph> 속성이 명시적으로 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcConnectionStringBuilder.#ctor(System.String)">
          <source>The behavior is the same either way.</source>
          <target state="translated">동작은 동일한 어떤 방법을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcConnectionStringBuilder.#ctor(System.String)">
          <source>The following example creates multiple <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph> instances, passing a different connection string to the constructor in each case.</source>
          <target state="translated">다음 예제에서는 여러 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph> 인스턴스를 다른 연결 문자열을 각각의 경우에서 생성자에 전달 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcConnectionStringBuilder.#ctor(System.String)">
          <source>Note that the ordering of elements within the connection string may be modified when you retrieve the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A&gt;</ph> property.</source>
          <target state="translated">연결 문자열 내의 요소의 순서 수정 될 수 있습니다를 검색할 때 참고는 <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcConnectionStringBuilder.#ctor(System.String)">
          <source>Also note that keys other than the predefined "Dsn" and "Driver" keys are converted to lowercase by the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph> class.</source>
          <target state="translated">또한 미리 정의 된 "Dsn"와 "Driver" 키 이외의 키를 소문자로 변환 됩니다에 유의 하 여는 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcConnectionStringBuilder.#ctor(System.String)">
          <source>This example includes a password to demonstrate how <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph> works with connection strings.</source>
          <target state="translated">이 예제에는 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph>가 연결 문자열로 작업하는 방법을 보여 주기 위한 암호가 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcConnectionStringBuilder.#ctor(System.String)">
          <source>In your applications, we recommend that you use Windows Authentication.</source>
          <target state="translated">응용 프로그램에서는 Windows 인증을 사용하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcConnectionStringBuilder.#ctor(System.String)">
          <source>If you must use a password, do not include a hard-coded password in your application.</source>
          <target state="translated">암호를 사용해야 하는 경우에는 응용 프로그램에 하드 코드된 암호를 포함하지 마십시오.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcConnectionStringBuilder.#ctor(System.String)">
          <source>The connection string is incorrectly formatted (perhaps missing the required "=" within a key/value pair).</source>
          <target state="translated">연결 문자열의 형식이 잘못된 경우(예: 키/값 쌍에서 필수 "="가 누락된 경우)</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcConnectionStringBuilder.Clear">
          <source>Clears the contents of the <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /&gt;</ph> 인스턴스의 콘텐츠를 지웁니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcConnectionStringBuilder.Clear">
          <source>The <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Clear%2A&gt;</ph> method removes all key/value pairs from the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph> and resets the <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Driver%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Dsn%2A&gt;</ph> properties to their default values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Clear%2A&gt;</ph> 모든 키/값 쌍을 제거 하는 메서드는 <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph> 다시 설정 하 고는 <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Driver%2A&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Dsn%2A&gt;</ph> 속성을 기본값으로 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcConnectionStringBuilder.Clear">
          <source>The <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Clear%2A&gt;</ph> method also sets the <ph id="ph2">&lt;xref:System.Data.Common.DbConnectionStringBuilder.Count%2A&gt;</ph> property to 0 and the <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcConnection.ConnectionString*&gt;</ph> property to an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Clear%2A&gt;</ph> 메서드 설정는 <ph id="ph2">&lt;xref:System.Data.Common.DbConnectionStringBuilder.Count%2A&gt;</ph> 속성을 0 및 <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcConnection.ConnectionString*&gt;</ph> 속성을 빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcConnectionStringBuilder.ContainsKey(System.String)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /&gt;</ph>에서 찾을 수 있는 키입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcConnectionStringBuilder.ContainsKey(System.String)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /&gt;</ph> contains a specific key.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /&gt;</ph>에 특정 키가 들어 있는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcConnectionStringBuilder.ContainsKey(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /&gt;</ph> contains an element that has the specified key; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /&gt;</ph>에 지정한 키를 가진 요소가 포함되어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcConnectionStringBuilder.ContainsKey(System.String)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph> instance, sets some of its properties, and then tries to determine whether various keys exist within the object by calling the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.ContainsKey%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph> 인스턴스를 만들고 해당 속성 중 일부를 설정한 다음 호출 하 여 개체 내에 다양 한 키가 있는지 확인 하려고는 <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.ContainsKey%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcConnectionStringBuilder.ContainsKey(System.String)">
          <source><ph id="ph1">&lt;paramref name="keyword" /&gt;</ph> is null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="keyword" /&gt;</ph>가 null(Visual Basic에서는 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>)인 경우</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="P:System.Data.Odbc.OdbcConnectionStringBuilder.Driver">
          <source>Gets or sets the name of the ODBC driver associated with the connection.</source>
          <target state="translated">연결과 관련된 ODBC 드라이버의 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcConnectionStringBuilder.Driver">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Data.Odbc.OdbcConnectionStringBuilder.Driver" /&gt;</ph> property, or <ph id="ph2">&lt;see langword="String.Empty" /&gt;</ph> if none has been supplied.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.Odbc.OdbcConnectionStringBuilder.Driver" /&gt;</ph> 속성의 값이거나, 제공된 값이 없으면 <ph id="ph2">&lt;see langword="String.Empty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcConnectionStringBuilder.Driver">
          <source>If the value passed in is null when you try to set the property, the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Driver%2A&gt;</ph> property is reset.</source>
          <target state="translated">속성을 설정하려고 할 때 전달된 값이 null이면 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Driver%2A&gt;</ph> 속성이 다시 설정됩니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcConnectionStringBuilder.Driver">
          <source>If the value has not been set and the developer tries to retrieve the property, the return value is <ph id="ph1">`String.Empty`</ph>.</source>
          <target state="translated">반환 값은 값이 설정 하는 경우 개발자가 속성을 검색 하려고 <ph id="ph1">`String.Empty`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcConnectionStringBuilder.Driver">
          <source>This property corresponds to the "Driver" key within the connection string.</source>
          <target state="translated">이 속성은 연결 문자열 내의 "드라이버" 키에 해당 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:System.Data.Odbc.OdbcConnectionStringBuilder.Dsn">
          <source>Gets or sets the name of the data source name (DSN) associated with the connection.</source>
          <target state="translated">연결과 관련된 DSN(데이터 소스 이름)의 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcConnectionStringBuilder.Dsn">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Data.Odbc.OdbcConnectionStringBuilder.Dsn" /&gt;</ph> property, or <ph id="ph2">&lt;see langword="String.Empty" /&gt;</ph> if none has been supplied.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.Odbc.OdbcConnectionStringBuilder.Dsn" /&gt;</ph> 속성의 값이거나, 제공된 값이 없으면 <ph id="ph2">&lt;see langword="String.Empty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcConnectionStringBuilder.Dsn">
          <source>If the value passed in is null when you try to set the property, the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Dsn%2A&gt;</ph> property is reset.</source>
          <target state="translated">속성을 설정하려고 할 때 전달된 값이 null이면 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Dsn%2A&gt;</ph> 속성이 다시 설정됩니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcConnectionStringBuilder.Dsn">
          <source>If the value has not been set and the developer tries to retrieve the property, the return value is <ph id="ph1">`String.Empty`</ph>.</source>
          <target state="translated">반환 값은 값이 설정 하는 경우 개발자가 속성을 검색 하려고 <ph id="ph1">`String.Empty`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcConnectionStringBuilder.Dsn">
          <source>This property corresponds to the "Dsn" key within the connection string.</source>
          <target state="translated">이 속성은 연결 문자열 내의 "Dsn" 키에 해당 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.Data.Odbc.OdbcConnectionStringBuilder.Item(System.String)">
          <source>The key of the item to get or set.</source>
          <target state="translated">가져오거나 설정할 항목의 키입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.Data.Odbc.OdbcConnectionStringBuilder.Item(System.String)">
          <source>Gets or sets the value associated with the specified key.</source>
          <target state="translated">지정된 키에 연결된 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Data.Odbc.OdbcConnectionStringBuilder.Item(System.String)">
          <source>In C#, this property is the indexer.</source>
          <target state="translated">C#에서는 이 속성이 인덱서입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcConnectionStringBuilder.Item(System.String)">
          <source>The value associated with the specified key.</source>
          <target state="translated">지정한 키와 연결된 값입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcConnectionStringBuilder.Item(System.String)">
          <source>When you set this property, if the specified key already exists in the dictionary, the value is replaced; otherwise, a new element is created.</source>
          <target state="translated">지정된 된 키가 사전에 이미 있는 경우이 속성을 설정 하면 해당 값이 바뀝니다. 그렇지 않으면 새 요소가 만들어집니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcConnectionStringBuilder.Item(System.String)">
          <source>The following code, in a console application, creates a new <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph> and adds key/value pairs to its connection string, using the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Item%2A&gt;</ph> property.</source>
          <target state="translated">다음 콘솔 응용 프로그램 코드에서는 새 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph>를 만들고 <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Item%2A&gt;</ph> 속성을 사용하여 키/값 쌍을 연결 문자열에 추가합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.Data.Odbc.OdbcConnectionStringBuilder.Item(System.String)">
          <source>The connection string is incorrectly formatted (perhaps missing the required "=" within a key/value pair).</source>
          <target state="translated">연결 문자열의 형식이 잘못된 경우(예: 키/값 쌍에서 필수 "="가 누락된 경우)</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.Data.Odbc.OdbcConnectionStringBuilder.Item(System.String)">
          <source><ph id="ph1">&lt;paramref name="keyword" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="keyword" /&gt;</ph>이 null 참조(Visual Basic의 경우 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>)인 경우</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Data.Odbc.OdbcConnectionStringBuilder.Keys">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> that contains the keys in the <ph id="ph2">&lt;see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>의 키를 포함하는 <ph id="ph2">&lt;see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /&gt;</ph>을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcConnectionStringBuilder.Keys">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> that contains the keys in the <ph id="ph2">&lt;see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>의 키를 포함하는 <ph id="ph2">&lt;see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcConnectionStringBuilder.Keys">
          <source>The order of the values in the <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> is the same order as the associated values in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Data.Common.DbConnectionStringBuilder.Values%2A&gt;</ph> property.</source>
          <target state="translated">에 있는 값의 순서는 <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> 에 연결 된 값과 순서가 동일는 <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> 에서 반환 되는 <ph id="ph3">&lt;xref:System.Data.Common.DbConnectionStringBuilder.Values%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcConnectionStringBuilder.Keys">
          <source>The following console application example creates a new <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph>.</source>
          <target state="translated">다음 콘솔 응용 프로그램 예제에서는 새 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcConnectionStringBuilder.Keys">
          <source>The code loops through the <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Keys%2A&gt;</ph> property displaying the key/value pairs.</source>
          <target state="translated">이 코드에서는 <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> 속성이 반환하는 <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Keys%2A&gt;</ph>을 반복하여 키/값 쌍을 표시합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcConnectionStringBuilder.Keys">
          <source>This example includes a password to demonstrate how <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph> works with connection strings.</source>
          <target state="translated">이 예제에는 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph>가 연결 문자열로 작업하는 방법을 보여 주기 위한 암호가 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcConnectionStringBuilder.Keys">
          <source>In your applications, we recommend that you use Windows Authentication.</source>
          <target state="translated">응용 프로그램에서는 Windows 인증을 사용하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcConnectionStringBuilder.Keys">
          <source>If you must use a password, do not include a hard-coded password in your application.</source>
          <target state="translated">암호를 사용해야 하는 경우에는 응용 프로그램에 하드 코드된 암호를 포함하지 마십시오.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcConnectionStringBuilder.Remove(System.String)">
          <source>The key of the key/value pair to be removed from the connection string in this <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /&gt;</ph>의 연결 문자열에서 제거할 키/값 쌍의 키입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcConnectionStringBuilder.Remove(System.String)">
          <source>Removes the entry with the specified key from the <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /&gt;</ph> instance.</source>
          <target state="translated">지정된 키를 가진 항목을 <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /&gt;</ph> 인스턴스에서 제거합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcConnectionStringBuilder.Remove(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key existed within the connection string and was removed; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the key did not exist.</source>
          <target state="translated">연결 문자열에 키가 존재하여 이를 제거했으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 키가 존재하지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcConnectionStringBuilder.Remove(System.String)">
          <source>Because the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Remove%2A&gt;</ph> method returns a value that indicates its success, it is not required to look for the existence of a key before trying to remove the key/value pair from the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph> instance.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Remove%2A&gt;</ph> 는 성공을 나타내는 값을 반환 하는 메서드, 키를 키/값 쌍을 제거 하려고 하기 전에 있는지 여부를 확인 하지 않아도 됩니다는 <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcConnectionStringBuilder.Remove(System.String)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph> instance and demonstrates the behavior of the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Remove%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph> 인스턴스 및 동작을 보여 줍니다는 <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Remove%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcConnectionStringBuilder.Remove(System.String)">
          <source><ph id="ph1">&lt;paramref name="keyword" /&gt;</ph> is null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="keyword" /&gt;</ph>가 null(Visual Basic에서는 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>)인 경우</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
          <source>The key of the item to retrieve.</source>
          <target state="translated">검색할 항목의 키입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
          <source>The value corresponding to <bpt id="p1">&lt;c&gt;</bpt>keyword.<ept id="p1">&lt;/c&gt;</ept></source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>keyword<ept id="p1">&lt;/c&gt;</ept>에 해당하는 값입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
          <source>Retrieves a value corresponding to the supplied key from this <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /&gt;</ph>에서 제공된 키에 해당하는 값을 검색합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="keyword" /&gt;</ph> was found within the connection string; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="keyword" /&gt;</ph>가 연결 문자열에 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.TryGetValue%2A&gt;</ph> method lets developers safely retrieve a value from a <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph> without needing to verify that the supplied key name is a valid key name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.TryGetValue%2A&gt;</ph> 메서드를 사용하면 제공된 키 이름이 올바른 키 이름인지 확인하지 않고도 <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph>에서 값을 안전하게 검색할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
          <source>Because <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.TryGetValue%2A&gt;</ph> does not raise an exception when you pass in a nonexistent key, you do not have to look for a key before retrieving its value.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.TryGetValue%2A&gt;</ph> 예외가 발생 하지 않으므로 존재 하지 않는 키에 전달 하는 경우 해당 값을 검색 하기 전에 키를 찾이 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
          <source>Calling <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.TryGetValue%2A&gt;</ph> with a nonexistent key places the value null (<ph id="ph2">`Nothing`</ph> in Visual Basic) in the <ph id="ph3">`value`</ph> parameter.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.TryGetValue%2A&gt;</ph> 존재 하지 않는 키와 값이 null을 배치 (<ph id="ph2">`Nothing`</ph> Visual basic에서)에 <ph id="ph3">`value`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
          <source>The following example demonstrates the behavior of the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.TryGetValue%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 동작을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.TryGetValue%2A&gt;</ph> 메서드.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>