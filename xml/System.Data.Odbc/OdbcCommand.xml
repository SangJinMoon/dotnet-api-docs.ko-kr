<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="OdbcCommand.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a32b600318bf52a50113d6d84e46df94ff49822a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a32b600318bf52a50113d6d84e46df94ff49822a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.Odbc.OdbcCommand">
          <source>Represents an SQL statement or stored procedure to execute against a data source.</source>
          <target state="translated">데이터 원본에 대해 실행할 SQL 문이나 저장된 프로시저를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.Odbc.OdbcCommand">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommand">
          <source>The <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph> class provides the following methods for executing commands against a data source:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph> 클래스는 데이터 원본에 대해 명령을 실행 하기 위한 다음 메서드를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommand">
          <source>Item</source>
          <target state="translated">항목</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommand">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommand">
          <source>Executes commands that return rows.</source>
          <target state="translated">행을 반환 하는 명령을 실행 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommand">
          <source>Executes commands such as SQL INSERT, DELETE, UPDATE, and SET statements.</source>
          <target state="translated">SQL INSERT, DELETE, UPDATE 및 SET 문과 같은 명령을 실행합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommand">
          <source>Retrieves a single value, for example, an aggregate value, from a database.</source>
          <target state="translated">예를 들어 집계 값을 단일 값을 데이터베이스에서 검색 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommand">
          <source>You can reset the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt;</ph> property and reuse the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph> object.</source>
          <target state="translated">다시 설정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt;</ph> 속성 및 재사용은 <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommand">
          <source>However, you must close the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataReader&gt;</ph> before you can execute a new or previous command.</source>
          <target state="translated">그러나를 닫아야는 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataReader&gt;</ph> 전에 이전 또는 새 명령을 실행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommand">
          <source>If execution of the command causes a fatal <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcException&gt;</ph> such as a SQL Server severity level of 20 or more, <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph> may close.</source>
          <target state="translated">명령 실행으로 인해 심각한 경우 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcException&gt;</ph> 등 SQL Server 심각도 20 이상의 <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph> 닫힐 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommand">
          <source>However, the user can reopen the connection and continue.</source>
          <target state="translated">그러나 사용자는 연결을 다시 열고 계속할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Odbc.OdbcCommand">
          <source>The following example uses <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="T:System.Data.Odbc.OdbcCommand">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommand.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.#ctor">
          <source>The base constructor initializes all fields to their default values.</source>
          <target state="translated">기본 생성자는 모든 필드를를 기본값으로 초기화합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.#ctor">
          <source>The following table shows initial property values for an instance of <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph>.</source>
          <target state="translated">다음 표에서의 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.#ctor">
          <source>Properties</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.#ctor">
          <source>Initial Value</source>
          <target state="translated">초기 값</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.#ctor">
          <source>empty string ("")</source>
          <target state="translated">빈 문자열 ("")</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.#ctor">
          <source>30</source>
          <target state="translated">30</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.#ctor">
          <source>null</source>
          <target state="translated">null</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommand.#ctor(System.String)">
          <source>The text of the query.</source>
          <target state="translated">쿼리 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommand.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> class with the text of the query.</source>
          <target state="translated">쿼리 텍스트를 사용하여 <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection)">
          <source>The text of the query.</source>
          <target state="translated">쿼리 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcConnection" /&gt;</ph> object that represents the connection to a data source.</source>
          <target state="translated">데이터 소스에 대한 연결을 나타내는 <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcConnection" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> class with the text of the query and an <ph id="ph2">&lt;see cref="T:System.Data.Odbc.OdbcConnection" /&gt;</ph> object.</source>
          <target state="translated">쿼리 텍스트와 <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> 개체를 사용하여 <ph id="ph2">&lt;see cref="T:System.Data.Odbc.OdbcConnection" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection,System.Data.Odbc.OdbcTransaction)">
          <source>The text of the query.</source>
          <target state="translated">쿼리 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection,System.Data.Odbc.OdbcTransaction)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcConnection" /&gt;</ph> object that represents the connection to a data source.</source>
          <target state="translated">데이터 소스에 대한 연결을 나타내는 <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcConnection" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection,System.Data.Odbc.OdbcTransaction)">
          <source>The transaction in which the <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> executes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph>가 실행되는 트랜잭션입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection,System.Data.Odbc.OdbcTransaction)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> class with the text of the query, an <ph id="ph2">&lt;see cref="T:System.Data.Odbc.OdbcConnection" /&gt;</ph> object, and the <ph id="ph3">&lt;see cref="P:System.Data.Odbc.OdbcCommand.Transaction" /&gt;</ph>.</source>
          <target state="translated">쿼리의 텍스트, <ph id="ph2">&lt;see cref="T:System.Data.Odbc.OdbcConnection" /&gt;</ph> 개체 및 <ph id="ph3">&lt;see cref="P:System.Data.Odbc.OdbcCommand.Transaction" /&gt;</ph>을 사용하여 <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection,System.Data.Odbc.OdbcTransaction)">
          <source>The following table shows initial property values for an instance of this implementation of the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph>.</source>
          <target state="translated">다음 표에서이 구현의 인스턴스에 대 한 초기 속성 값을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection,System.Data.Odbc.OdbcTransaction)">
          <source>Properties</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection,System.Data.Odbc.OdbcTransaction)">
          <source>Initial Value</source>
          <target state="translated">초기 값</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection,System.Data.Odbc.OdbcTransaction)">
          <source>30</source>
          <target state="translated">30</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection,System.Data.Odbc.OdbcTransaction)">
          <source>A new <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph> that is the value for the <ph id="ph2">`connection`</ph> parameter.</source>
          <target state="translated">새 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph> 즉에 대 한 값은 <ph id="ph2">`connection`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection,System.Data.Odbc.OdbcTransaction)">
          <source>You can change the value for any one of these parameters by setting the related property.</source>
          <target state="translated">관련된 속성을 설정 하 여 이러한 매개 변수 중 하나에 대 한 값을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommand.Cancel">
          <source>Tries to cancel the execution of an <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph>의 실행을 취소하려고 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.Cancel">
          <source>If there is nothing to cancel, nothing occurs.</source>
          <target state="translated">취소할 명령이 없으면 아무 동작도 발생하지 않습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.Cancel">
          <source>However, if there is a command in process, and the cancellation try fails, no exception is generated.</source>
          <target state="translated">그러나 처리 중인 명령을 취소 시도가 실패 하는 경우 예외가 생성 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.Cancel">
          <source>To cancel a query on one thread, <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.Cancel%2A&gt;</ph> must be called from another thread.</source>
          <target state="translated">스레드 하나에 대 한 쿼리를 취소 하려면 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.Cancel%2A&gt;</ph> 다른 스레드에서 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.Cancel">
          <source>Because you cannot execute commands asynchronously with <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph>, to cancel a command from another thread, one thread must be running synchronously.</source>
          <target state="translated">비동기적으로 명령을 실행할 수 없습니다 때문에 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph>, 다른 스레드에서 명령을 취소 하려면 하나의 스레드를 동기적으로 실행 해야 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.Cancel">
          <source>This means that the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph> object must be accessible from both threads.</source>
          <target state="translated">즉는 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph> 개체 두 스레드에서 액세스할 수 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.Data.Odbc.OdbcCommand.CommandText">
          <source>Gets or sets the SQL statement or stored procedure to execute against the data source.</source>
          <target state="translated">데이터 소스에 대해 실행할 SQL 문이나 저장 프로시저를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandText">
          <source>The SQL statement or stored procedure to execute.</source>
          <target state="translated">실행할 SQL 문 또는 저장 프로시저입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandText">
          <source>The default value is an empty string ("").</source>
          <target state="translated">기본값은 빈 문자열("")입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandText">
          <source>When the <ph id="ph1">&lt;xref:System.Data.IDbCommand.CommandType%2A&gt;</ph> property is set to <ph id="ph2">`StoredProcedure`</ph>, the <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt;</ph> property should be set using standard ODBC stored procedure escape sequences.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.IDbCommand.CommandType%2A&gt;</ph> 속성이 <ph id="ph2">`StoredProcedure`</ph>, <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt;</ph> 표준 ODBC 저장 프로시저 이스케이프 시퀀스를 사용 하 여 속성을 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandText">
          <source>Setting the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt;</ph> to the name of the stored procedure does not function as it does for other .NET Framework data providers.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt;</ph> 저장된 프로시저의 이름으로 작동 하지 않습니다 다른.NET Framework 데이터 공급자에 대해서와 마찬가지로 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandText">
          <source>Many language features, such as outer joins and scalar function calls, are generally implemented by data sources.</source>
          <target state="translated">외부 조인 및 스칼라 함수 호출 등의 여러 언어 기능은 데이터 원본에 일반적으로 구현 됩니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandText">
          <source>Even the syntax for these features is generally data source-specific.</source>
          <target state="translated">이러한 기능에 대 한 구문에도 일반적으로 데이터 소스 관련 됩니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandText">
          <source>Therefore, ODBC defines escape sequences that contain standard syntax for the following language features:</source>
          <target state="translated">따라서 ODBC는 다음 언어 기능에 대 한 표준 구문을 포함 하는 이스케이프 시퀀스를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandText">
          <source>Date, time, timestamp, and datetime interval literals</source>
          <target state="translated">날짜, 시간, 타임 스탬프 및 날짜/시간 간격 리터럴</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandText">
          <source>Scalar functions such as numeric, string, and data type conversion functions</source>
          <target state="translated">숫자와 같이 스칼라 함수, 문자열 및 데이터 형식 변환 함수</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandText">
          <source>LIKE predicate escape character</source>
          <target state="translated">마찬가지로 조건자 이스케이프 문자</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandText">
          <source>Outer joins</source>
          <target state="translated">외부 조인</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandText">
          <source>Procedure calls</source>
          <target state="translated">프로시저 호출</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandText">
          <source>The escape sequence used by ODBC is as follows:</source>
          <target state="translated">ODBC에서 사용 되는 이스케이프 시퀀스는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandText">
          <source>This escape sequence is recognized and parsed by ODBC drivers.</source>
          <target state="translated">이 이스케이프 시퀀스를 인식 하 고 ODBC 드라이버에서 구문 분석 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandText">
          <source>They then replace any escape sequences with data source-specific grammar.</source>
          <target state="translated">그런 다음 데이터 소스 관련 문법와 이스케이프 시퀀스 대체합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandText">
          <source>A procedure is an executable object stored at the data source.</source>
          <target state="translated">프로시저는 실행 가능한 개체 데이터 소스에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandText">
          <source>Generally, it is one or more SQL statements that have been precompiled.</source>
          <target state="translated">일반적으로 미리 컴파일된 하나 이상의 SQL 문</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandText">
          <source>The escape sequence for calling a procedure is</source>
          <target state="translated">프로시저 호출에 대 한 이스케이프 시퀀스는</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandText">
          <source>where <ph id="ph1">`procedure-name`</ph> specifies the name of a procedure and <ph id="ph2">`parameter`</ph> specifies a procedure parameter.</source>
          <target state="translated">여기서 <ph id="ph1">`procedure-name`</ph> 프로시저의 이름을 지정 하 고 <ph id="ph2">`parameter`</ph> 프로시저 매개 변수를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandText">
          <source>The command executes this stored procedure when you call one of the Execute methods (for example, <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A&gt;</ph>).</source>
          <target state="translated">명령이 Execute 메서드 중 하나를 호출 하면이 저장된 프로시저를 실행 합니다 (예를 들어 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandText">
          <source>You cannot set the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.Connection%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand.CommandType%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt;</ph> properties if the current connection is performing an execute or fetch operation.</source>
          <target state="translated">설정할 수 없습니다.는 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.Connection%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand.CommandType%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt;</ph> 속성은 현재 연결 execute 또는 인출 작업을 수행 하는 경우.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandText">
          <source>The ODBC.NET Provider does not support named parameters for passing parameters to an SQL statement or a stored procedure called by an <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph> when <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand.CommandType%2A&gt;</ph> is set to <ph id="ph3">`Text`</ph>.</source>
          <target state="translated">ODBC.NET 공급자는 SQL 문 또는 저장된 프로시저에 의해 호출에 매개 변수 전달에 대 한 명명 된 매개 변수를 지원 하지 않습니다는 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph> 때 <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand.CommandType%2A&gt;</ph> 로 설정 된 <ph id="ph3">`Text`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandText">
          <source>In this case, the question mark (?) placeholder must be used.</source>
          <target state="translated">이 경우 물음표 (?) 자리 표시자를 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandText">
          <source>For example:</source>
          <target state="translated">예:</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandText">
          <source>Therefore, the order in which <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcParameter&gt;</ph> objects are added to the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcParameterCollection&gt;</ph> must directly correspond to the position of the question mark placeholder for the parameter.</source>
          <target state="translated">따라서 순서 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcParameter&gt;</ph> 개체에 추가 됩니다는 <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcParameterCollection&gt;</ph> 매개 변수에 물음표 자리 표시자의 위치와 직접 일치 해야 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandText">
          <source>If a parameter contains a null value, the .NET Framework Data Provider for ODBC still binds that parameter, but uses a default parameter, if one has been defined by using SQL_DEFAULT_PARAM, instead of the null value.</source>
          <target state="translated">매개 변수에 null 값이 있으면.NET Framework Data Provider for ODBC 여전히 해당 매개 변수를 바인딩합니다 하지만 null 값이 아니라 SQL_DEFAULT_PARAM을 사용 하 여 정의 된 기본 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandText">
          <source>For example, the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcParameterCollection&gt;</ph>:</source>
          <target state="translated">예를 들어는 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcParameterCollection&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandText">
          <source>passed into the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt;</ph> property:</source>
          <target state="translated">에 전달 되는 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt;</ph> 속성:</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandText">
          <source>causes the .NET Framework Data Provider for ODBC binding the first parameter to the value 1, the third parameter to the value 2, and the second parameter as SQL_DEFAULT_PARAM.</source>
          <target state="translated">.NET Framework Data Provider for ODBC는 첫 번째 매개 변수 값 1, 2, 값에 세 번째 매개 변수 및 SQL_DEFAULT_PARAM으로 두 번째 매개 변수 바인딩 하면 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandText">
          <source>However, this behavior is driver-dependent.</source>
          <target state="translated">그러나이 동작은 드라이버에 따라 다릅니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandText">
          <source>If the driver does not support this functionality, just do not pass in a value for the parameter.</source>
          <target state="translated">드라이버는이 기능을 지원 하지 않는 경우 바로 전달 하지 마십시오 값에서 매개 변수.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandText">
          <source>For example, use the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcParameterCollection&gt;</ph>:</source>
          <target state="translated">예를 들어, 사용 된 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcParameterCollection&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandText">
          <source>and set the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt;</ph> property to the following:</source>
          <target state="translated">설정 된 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt;</ph> 속성을 다음:</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandText">
          <source>If a parameter is omitted, the comma delimiting it from other parameters must still appear.</source>
          <target state="translated">매개 변수를 생략 하면 다른 매개 변수에서 구분 하는 쉼표 여전히 나타나야 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandText">
          <source>If an input or input/output parameter is omitted, the procedure uses the default value of the parameter.</source>
          <target state="translated">입력 또는 입/출력 매개 변수를 생략 하면 프로시저는 매개 변수의 기본값을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandText">
          <source>Another way to specify the default value of an input or input/output parameter is to set the value of the length/indicator buffer bound to the parameter to SQL_DEFAULT_PARAM.</source>
          <target state="translated">SQL_DEFAULT_PARAM으로 매개 변수에 바인딩된 길이/표시기 버퍼의 값을 설정 하는 입력 또는 입/출력 매개 변수의 기본값을 지정 하는 다른 방법은 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="P:System.Data.Odbc.OdbcCommand.CommandTimeout">
          <source>Gets or sets the wait time before terminating an attempt to execute a command and generating an error.</source>
          <target state="translated">명령 실행을 종료하고 오류를 생성하기 전에 대기 시간을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandTimeout">
          <source>The time in seconds to wait for the command to execute.</source>
          <target state="translated">명령이 실행될 때까지 대기하는 시간(초)입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandTimeout">
          <source>The default is 30 seconds.</source>
          <target state="translated">기본값은 30초입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandTimeout">
          <source>A value of zero (0) specifies no limit to the wait time, instead of no wait time, and therefore should be avoided.</source>
          <target state="translated">영 (0)의 값은 대기 시간이 없는 아니라 대기 시간에 제한이 없음을 지정을 피해 야 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="P:System.Data.Odbc.OdbcCommand.CommandType">
          <source>Gets or sets a value that indicates how the <ph id="ph1">&lt;see cref="P:System.Data.Odbc.OdbcCommand.CommandText" /&gt;</ph> property is interpreted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.Odbc.OdbcCommand.CommandText" /&gt;</ph> 속성의 해석 방법을 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandType">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.CommandType" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.CommandType" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandType">
          <source>The default is <ph id="ph1">&lt;see langword="Text" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="Text" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandType">
          <source>When the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.CommandType%2A&gt;</ph> property is set to <ph id="ph2">`StoredProcedure`</ph>, you should set the <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt;</ph> property to the full ODBC call syntax.</source>
          <target state="translated">때는 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.CommandType%2A&gt;</ph> 속성이 <ph id="ph2">`StoredProcedure`</ph>를 설정 해야는 <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt;</ph> 속성을 전체 ODBC 호출 구문입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandType">
          <source>The command then executes this stored procedure when you call one of the Execute methods (for example, <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A&gt;</ph>).</source>
          <target state="translated">Execute 메서드 중 하나를 호출 하면 다음 명령이이 저장된 프로시저 실행 (예를 들어 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandType">
          <source>The <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.Connection%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand.CommandType%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt;</ph> properties cannot be set if the current connection is performing an execute or fetch operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.Connection%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand.CommandType%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt;</ph> 현재 연결 execute 또는 인출 작업을 수행 하는 경우 속성을 설정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandType">
          <source>The .NET Framework Data Provider for ODBC does not support passing named parameters to an SQL statement or to a stored procedure called by an <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph>.</source>
          <target state="translated">.NET Framework Data Provider for ODBC에 명명 된 전달은 지원 되지 않습니다 SQL 문 또는 저장된 프로시저에서 호출 하는 매개 변수는 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandType">
          <source>In either of these cases, use the question mark (?) placeholder.</source>
          <target state="translated">두이 경우 모두에서 물음표 (?) 자리 표시자를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandType">
          <source>For example:</source>
          <target state="translated">예:</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandType">
          <source>The order in which <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcParameter&gt;</ph> objects are added to the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcParameterCollection&gt;</ph> must directly correspond to the position of the question mark placeholder for the parameter.</source>
          <target state="translated">순서를 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcParameter&gt;</ph> 개체에 추가 됩니다는 <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcParameterCollection&gt;</ph> 매개 변수에 물음표 자리 표시자의 위치와 직접 일치 해야 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.CommandType">
          <source>The .NET Framework Data Provider for ODBC does not support the <ph id="ph1">&lt;xref:System.Data.CommandType&gt;</ph> setting of <ph id="ph2">`TableDirect`</ph>.</source>
          <target state="translated">.NET Framework Data Provider for ODBC 지원 하지 않습니다는 <ph id="ph1">&lt;xref:System.Data.CommandType&gt;</ph> 설정인 <ph id="ph2">`TableDirect`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="P:System.Data.Odbc.OdbcCommand.CommandType">
          <source>The value was not a valid <ph id="ph1">&lt;see cref="T:System.Data.CommandType" /&gt;</ph>.</source>
          <target state="translated">값이 유효한 <ph id="ph1">&lt;see cref="T:System.Data.CommandType" /&gt;</ph>이 아닙니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="P:System.Data.Odbc.OdbcCommand.Connection">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcConnection" /&gt;</ph> used by this instance of the <ph id="ph2">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph>의 이 인스턴스에서 사용되는 <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcConnection" /&gt;</ph>을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.Connection">
          <source>The connection to a data source.</source>
          <target state="translated">데이터 소스와의 연결입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.Connection">
          <source>The default is a null value.</source>
          <target state="translated">기본값은 null입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.Connection">
          <source>You cannot set the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.Connection%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand.CommandType%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt;</ph> properties if the current connection is performing an execute or fetch operation.</source>
          <target state="translated">설정할 수 없습니다.는 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.Connection%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand.CommandType%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt;</ph> 속성은 현재 연결 execute 또는 인출 작업을 수행 하는 경우.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.Connection">
          <source>If you set <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.Connection%2A&gt;</ph> while a transaction is in progress and the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand.Transaction%2A&gt;</ph> property is not null, an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> is generated.</source>
          <target state="translated">트랜잭션이 처리되는 중에 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.Connection%2A&gt;</ph>을 설정한 경우 <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand.Transaction%2A&gt;</ph> 속성이 null이 아니면 <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>이 생성됩니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.Connection">
          <source>If you set <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.Connection%2A&gt;</ph> after the transaction has been committed or rolled back, and the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand.Transaction%2A&gt;</ph> property is not null, the <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcCommand.Transaction%2A&gt;</ph> property is then set to a null value.</source>
          <target state="translated">설정 하는 경우 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.Connection%2A&gt;</ph> 트랜잭션이 커밋 또는 롤백 후 및 <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand.Transaction%2A&gt;</ph> 속성이 null이 아니면는 <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcCommand.Transaction%2A&gt;</ph> 속성은 null 값으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="P:System.Data.Odbc.OdbcCommand.Connection">
          <source>The <ph id="ph1">&lt;see cref="P:System.Data.Odbc.OdbcCommand.Connection" /&gt;</ph> property was changed while a transaction was in progress.</source>
          <target state="translated">트랜잭션을 진행하는 동안 <ph id="ph1">&lt;see cref="P:System.Data.Odbc.OdbcCommand.Connection" /&gt;</ph> 속성이 변경되었습니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommand.CreateParameter">
          <source>Creates a new instance of an <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcParameter" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcParameter" /&gt;</ph> 개체의 새 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommand.CreateParameter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcParameter" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcParameter" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.CreateParameter">
          <source>The <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.CreateParameter%2A&gt;</ph> method is a strongly-typed version of <ph id="ph2">&lt;xref:System.Data.IDbCommand.CreateParameter%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.CreateParameter%2A&gt;</ph> 메서드는 강력한 형식의 버전의 <ph id="ph2">&lt;xref:System.Data.IDbCommand.CreateParameter%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="P:System.Data.Odbc.OdbcCommand.DesignTimeVisible">
          <source>Gets or sets a value that indicates whether the command object should be visible in a customized interface control.</source>
          <target state="translated">명령 개체를 사용자 지정된 인터페이스 컨트롤에서 표시할지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.DesignTimeVisible">
          <source><bpt id="p1">**</bpt>true<ept id="p1">**</ept>, if the command object should be visible in a control; otherwise <bpt id="p2">**</bpt>false<ept id="p2">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>true 이면<ept id="p1">**</ept>명령 개체를 컨트롤에 표시 되지 않으면 해야 하면, <bpt id="p2">**</bpt>false<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.DesignTimeVisible">
          <source>The default is <bpt id="p1">**</bpt>true<ept id="p1">**</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">**</bpt>true<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommand.ExecuteNonQuery">
          <source>Executes an SQL statement against the <ph id="ph1">&lt;see cref="P:System.Data.Odbc.OdbcCommand.Connection" /&gt;</ph> and returns the number of rows affected.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.Odbc.OdbcCommand.Connection" /&gt;</ph>에 대해 SQL 문을 실행하고 영향을 받는 행의 수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommand.ExecuteNonQuery">
          <source>For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</source>
          <target state="translated">UPDATE, INSERT 및 DELETE 문의 경우, 반환 값은 해당 명령의 영향을 받는 행의 수입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommand.ExecuteNonQuery">
          <source>For all other types of statements, the return value is -1.</source>
          <target state="translated">다른 형식의 문의 경우에는 반환 값이 -1입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.ExecuteNonQuery">
          <source>You can use <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A&gt;</ph> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables); or to change the data in a database, without using a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, by executing UPDATE, INSERT, or DELETE statements.</source>
          <target state="translated">사용할 수 있습니다 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A&gt;</ph> (예를 들어 데이터베이스의 구조를 쿼리 또는 테이블과 같은 데이터베이스 개체 만들기); 카탈로그 작업을 수행 하거나 사용 하지 않고는 데이터베이스의 데이터를 변경 하려면는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>,으로 UPDATE, INSERT, 실행 또는 삭제 문입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.ExecuteNonQuery">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A&gt;</ph> to execute multiple SQL statements if the underlying ODBC driver supports this functionality.</source>
          <target state="translated">사용할 수도 있습니다 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A&gt;</ph> 기본 ODBC 드라이버에서이 기능을 지 원하는 경우 여러 SQL 문을 실행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.ExecuteNonQuery">
          <source>In this case, the return value is the number of rows affected by all statements in the command.</source>
          <target state="translated">이 경우 반환 값은 명령에 모든 문의 영향을 받는 행의 수입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.ExecuteNonQuery">
          <source>Although <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A&gt;</ph> returns no rows, any output parameters or return values mapped to parameters are populated with data.</source>
          <target state="translated">하지만 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A&gt;</ph> 행을 모든 출력 매개 변수가 반환 하지 또는 반환 값 매개 변수에 매핑된 데이터 채워집니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.ExecuteNonQuery">
          <source>For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</source>
          <target state="translated">UPDATE, INSERT 및 DELETE 문의 경우, 반환 값은 해당 명령의 영향을 받는 행의 수입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.ExecuteNonQuery">
          <source>For all other types of statements, the return value is -1.</source>
          <target state="translated">다른 형식의 문의 경우에는 반환 값이 -1입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.ExecuteNonQuery">
          <source>If a rollback occurs, the return value is also -1.</source>
          <target state="translated">롤백이 발생 하는 경우 반환 값-1 이기도 합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.ExecuteNonQuery">
          <source>When a trigger exists on a table and data is being added or changed in the table, the return value includes the number of rows affected by both the insert or update operation and the number of rows affected by the trigger or triggers.</source>
          <target state="translated">트리거가 있으면 테이블 및 데이터에 추가 되거나 테이블에서 변경 되는, 반환 값에는 트리거의 영향을 받는 행의 수와 삽입 또는 업데이트 작업을 모두 영향을 받는 행 수가 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommand.ExecuteNonQuery">
          <source>The connection does not exist.</source>
          <target state="translated">연결이 존재하지 않습니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommand.ExecuteNonQuery">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommand.ExecuteNonQuery">
          <source>The connection is not open.</source>
          <target state="translated">연결이 열려 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="T:System.Data.Odbc.OdbcCommand">
          <source>Sends the <ph id="ph1">&lt;see cref="P:System.Data.Odbc.OdbcCommand.CommandText" /&gt;</ph> to the <ph id="ph2">&lt;see cref="P:System.Data.Odbc.OdbcCommand.Connection" /&gt;</ph> and builds an <ph id="ph3">&lt;see cref="T:System.Data.Odbc.OdbcDataReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.Odbc.OdbcCommand.CommandText" /&gt;</ph>를 <ph id="ph2">&lt;see cref="P:System.Data.Odbc.OdbcCommand.Connection" /&gt;</ph>에 보내고 <ph id="ph3">&lt;see cref="T:System.Data.Odbc.OdbcDataReader" /&gt;</ph>를 빌드합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommand.ExecuteReader">
          <source>Sends the <ph id="ph1">&lt;see cref="P:System.Data.Odbc.OdbcCommand.CommandText" /&gt;</ph> to the <ph id="ph2">&lt;see cref="P:System.Data.Odbc.OdbcCommand.Connection" /&gt;</ph> and builds an <ph id="ph3">&lt;see cref="T:System.Data.Odbc.OdbcDataReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.Odbc.OdbcCommand.CommandText" /&gt;</ph>를 <ph id="ph2">&lt;see cref="P:System.Data.Odbc.OdbcCommand.Connection" /&gt;</ph>에 보내고 <ph id="ph3">&lt;see cref="T:System.Data.Odbc.OdbcDataReader" /&gt;</ph>를 빌드합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommand.ExecuteReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcDataReader" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcDataReader" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.ExecuteReader">
          <source>You should set the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt;</ph> property to the full ODBC call syntax for stored procedures.</source>
          <target state="translated">설정 해야는 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt;</ph> 속성을 저장된 프로시저에 대 한 전체 ODBC 호출 구문입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.ExecuteReader">
          <source>The command executes this stored procedure when you call <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A&gt;</ph>.</source>
          <target state="translated">명령이 호출 하는 경우이 저장된 프로시저를 실행 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.ExecuteReader">
          <source>While the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataReader&gt;</ph> is used, the associated <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph> is busy serving the <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcDataReader&gt;</ph>.</source>
          <target state="translated">반면는 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataReader&gt;</ph> 을 사용 하는 연결 된 <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph> 역할을 수행는 <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcDataReader&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.ExecuteReader">
          <source>While in this state, no other operations can be performed on the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph> other than closing it.</source>
          <target state="translated">이 상태 동안에 없는 다른 작업을 수행할 수에 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph> 닫지 합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.ExecuteReader">
          <source>This is the case until the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataReader.Close%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcDataReader&gt;</ph> is called.</source>
          <target state="translated">이 때 까지는 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataReader.Close%2A&gt;</ph> 의 메서드는 <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcDataReader&gt;</ph> 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>One of the <ph id="ph1">&lt;see langword="System.Data.CommandBehavior" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="System.Data.CommandBehavior" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>Sends the <ph id="ph1">&lt;see cref="P:System.Data.Odbc.OdbcCommand.CommandText" /&gt;</ph> to the <ph id="ph2">&lt;see cref="P:System.Data.Odbc.OdbcCommand.Connection" /&gt;</ph>, and builds an <ph id="ph3">&lt;see cref="T:System.Data.Odbc.OdbcDataReader" /&gt;</ph> using one of the <ph id="ph4">&lt;see langword="CommandBehavior" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.Odbc.OdbcCommand.CommandText" /&gt;</ph>를 <ph id="ph2">&lt;see cref="P:System.Data.Odbc.OdbcCommand.Connection" /&gt;</ph>에 보내고 <ph id="ph4">&lt;see langword="CommandBehavior" /&gt;</ph> 값 중 하나를 사용하여 <ph id="ph3">&lt;see cref="T:System.Data.Odbc.OdbcDataReader" /&gt;</ph>를 빌드합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcDataReader" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcDataReader" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>If you expect your SQL statement to return only a single row, specifying <ph id="ph1">`SingleRow`</ph> as the <ph id="ph2">&lt;xref:System.Data.CommandBehavior&gt;</ph> value may improve application performance.</source>
          <target state="translated">SQL 문의 단일 행만 반환 될 경우 지정 <ph id="ph1">`SingleRow`</ph> 로 <ph id="ph2">&lt;xref:System.Data.CommandBehavior&gt;</ph> 값에는 응용 프로그램의 성능을 향상 시킬 수 있습니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>You should set the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt;</ph> property to the full ODBC call syntax for stored procedures.</source>
          <target state="translated">설정 해야는 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.CommandText%2A&gt;</ph> 속성을 저장된 프로시저에 대 한 전체 ODBC 호출 구문입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>The command executes this stored procedure when you call <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A&gt;</ph>.</source>
          <target state="translated">명령이 호출 하는 경우이 저장된 프로시저를 실행 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataReader&gt;</ph> supports a special mode that enables large binary values to be read efficiently.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataReader&gt;</ph> 크기가 큰 이진 값를 효율적으로 읽을 수 있는 특별 한 모드를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>For more information, see the <ph id="ph1">`SequentialAccess`</ph> setting for <ph id="ph2">&lt;xref:System.Data.CommandBehavior&gt;</ph>.</source>
          <target state="translated">자세한 내용은 참조는 <ph id="ph1">`SequentialAccess`</ph> 에 대 한 설정 <ph id="ph2">&lt;xref:System.Data.CommandBehavior&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>The <ph id="ph1">`SequentialAccess`</ph> value of <ph id="ph2">&lt;xref:System.Data.CommandBehavior&gt;</ph> is not a limiting setting; it just means that you will have at least sequential access to the <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcDataReader&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`SequentialAccess`</ph> 값 <ph id="ph2">&lt;xref:System.Data.CommandBehavior&gt;</ph> 제한 되지 않습니다는 설정; 할 대 이상 순차적 액세스를 해야 합니다는 <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcDataReader&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>For example, when you use the SQL Server ODBC Driver in <ph id="ph1">`SequentialAccess`</ph> mode, you can still move to the first column of an <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcDataReader&gt;</ph> row after having read through all the other columns sequentially.</source>
          <target state="translated">예를 들어 SQL Server ODBC 드라이버에서을 사용 하는 하면 <ph id="ph1">`SequentialAccess`</ph> 모드로 이동할 수 있습니다의 첫 번째 열에는 <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcDataReader&gt;</ph> 를 읽은 후 다른 모든 열을 통해 순차적으로 행.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>While the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataReader&gt;</ph> is used, the associated <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph> is busy serving the <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcDataReader&gt;</ph>.</source>
          <target state="translated">반면는 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataReader&gt;</ph> 을 사용 하는 연결 된 <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph> 역할을 수행는 <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcDataReader&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>While in this state, no other operations can be performed on the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph> other than closing it.</source>
          <target state="translated">이 상태 동안에 없는 다른 작업을 수행할 수에 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph> 닫지 합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>This is the case until you call the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataReader.Close%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">이 대/소문자를 호출 하기 전에 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataReader.Close%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataReader&gt;</ph> is created with <ph id="ph2">&lt;xref:System.Data.CommandBehavior&gt;</ph> set to <ph id="ph3">`CloseConnection`</ph>, closing the <ph id="ph4">&lt;xref:System.Data.Odbc.OdbcDataReader&gt;</ph> closes the connection automatically.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataReader&gt;</ph> 사용 하 여 만든 <ph id="ph2">&lt;xref:System.Data.CommandBehavior&gt;</ph> 로 설정 <ph id="ph3">`CloseConnection`</ph>닫는는 <ph id="ph4">&lt;xref:System.Data.Odbc.OdbcDataReader&gt;</ph> 자동으로 연결을 닫습니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommand.ExecuteScalar">
          <source>Executes the query, and returns the first column of the first row in the result set returned by the query.</source>
          <target state="translated">쿼리를 실행하고 쿼리에서 반환된 결과 집합에서 첫 번째 행의 첫 번째 열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommand.ExecuteScalar">
          <source>Additional columns or rows are ignored.</source>
          <target state="translated">다른 열이나 행은 무시됩니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommand.ExecuteScalar">
          <source>The first column of the first row in the result set, or a null reference if the result set is empty.</source>
          <target state="translated">결과 집합의 첫 행의 첫 열 또는 결과 집합이 비어있을 경우 null 참조입니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.ExecuteScalar">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.ExecuteScalar%2A&gt;</ph> method to retrieve a single value (for example, an aggregate value) from a data source.</source>
          <target state="translated">사용 된 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.ExecuteScalar%2A&gt;</ph> 데이터 원본에서 단일 값 (예를 들어 집계 값)를 검색 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.ExecuteScalar">
          <source>This requires less code than using the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A&gt;</ph> method, and then performing the operations required to generate the single value from the data returned by an <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcDataReader&gt;</ph>.</source>
          <target state="translated">사용 하 여 보다 적은 코드가 필요는 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A&gt;</ph> 메서드를 다음에서 반환 된 데이터에서 단일 값을 생성 하는 데 필요한 작업을 수행 하는 <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcDataReader&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="P:System.Data.Odbc.OdbcCommand.Parameters">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcParameterCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcParameterCollection" /&gt;</ph>를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.Parameters">
          <source>The parameters of the SQL statement or stored procedure.</source>
          <target state="translated">SQL 문 또는 저장 프로시저의 매개 변수</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.Parameters">
          <source>The default is an empty collection.</source>
          <target state="translated">기본값은 빈 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.Parameters">
          <source>When <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.CommandType%2A&gt;</ph> is set to <ph id="ph2">`Text`</ph>, the .NET Framework Data Provider for ODBC does not support passing named parameters to an SQL statement or to a stored procedure called by an <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph>.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.CommandType%2A&gt;</ph> 로 설정 된 <ph id="ph2">`Text`</ph>,.NET Framework Data Provider for ODBC에 명명 된 전달은 지원 되지 않습니다 SQL 문 또는 저장된 프로시저에서 호출 하는 매개 변수는 <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.Parameters">
          <source>In either of these cases, use the question mark (?) placeholder.</source>
          <target state="translated">두이 경우 모두에서 물음표 (?) 자리 표시자를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.Parameters">
          <source>For example:</source>
          <target state="translated">예:</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.Parameters">
          <source>The order in which <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcParameter&gt;</ph> objects are added to the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcParameterCollection&gt;</ph> must directly correspond to the position of the question mark placeholder for the parameter in the command text.</source>
          <target state="translated">순서를 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcParameter&gt;</ph> 개체에 추가 됩니다는 <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcParameterCollection&gt;</ph> 명령 텍스트에서 매개 변수에 물음표 자리 표시자의 위치와 직접 일치 해야 합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.Parameters">
          <source>If the parameters in the collection do not match the requirements of the query to be executed, an error may result.</source>
          <target state="translated">컬렉션의 매개 변수를 실행 하면 쿼리의 요구 사항을 일치 하지 않으면 오류가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommand.Prepare">
          <source>Creates a prepared or compiled version of the command at the data source.</source>
          <target state="translated">데이터 소스에 대해 명령의 준비된 또는 컴파일된 버전을 만듭니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.Prepare">
          <source>The <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.Prepare%2A&gt;</ph> method calls the ODBC <ph id="ph2">`SQLPrepare`</ph> function.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.Prepare%2A&gt;</ph> 메서드 호출 ODBC <ph id="ph2">`SQLPrepare`</ph> 함수입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.Prepare">
          <source>Depending on the capabilities of the underlying ODBC driver and data source, parameter information such as data types may be checked when the statement is prepared, if all parameters have been bound, or when it is executed if not all parameters have been bound.</source>
          <target state="translated">데이터 원본 및 기본 ODBC 드라이버의 기능에 따라 데이터 형식 같은 매개 변수 정보 문이 준비 되거나 실행 되지 않은 경우 모든 매개 변수가 바인딩되면 모든 매개 변수에 연결 되어 있으면 때 체크 수 있습니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.Prepare">
          <source>For maximum interoperability, an application should unbind all parameters that applied to a previous SQL statement before preparing a new SQL statement on the same <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph>.</source>
          <target state="translated">응용 프로그램에 동일한 SQL 문을 준비 하기 전에 SQL 문을 이전에 적용 하는 모든 매개 변수 바인딩 해제 해야 점에 상호 운용성을 극대화 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.Prepare">
          <source>This prevents errors that are caused by previous parameter information being applied to the new SQL statement.</source>
          <target state="translated">이 새 SQL 문에 적용 되 고 이전 매개 변수 정보가 발생 하는 오류를 방지할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.Prepare">
          <source>If you call an Execute method after you call <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.Prepare%2A&gt;</ph>, any parameter value that is larger than the value specified by the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcParameter.Size%2A&gt;</ph> property is automatically truncated to the original specified size of the parameter, and no truncation errors are returned.</source>
          <target state="translated">호출한 후 Execute 메서드를 호출 하는 경우 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.Prepare%2A&gt;</ph>에 지정 된 값 보다 큰 모든 매개 변수 값은 <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcParameter.Size%2A&gt;</ph> 속성이 자동으로 매개 변수의 원래 지정 된 크기로 잘리고 잘림 오류가 반환 되지 않습니다 .</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.Prepare">
          <source>Output parameters (whether prepared or not) must have a user-specified data type.</source>
          <target state="translated">출력 매개 변수 (준비) 여부는 사용자 지정 데이터 형식이 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.Prepare">
          <source>If you specify a variable length data type, you must also specify the maximum <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcParameter.Size%2A&gt;</ph>.</source>
          <target state="translated">최대 가변 길이 데이터 형식 지정도 지정 해야 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcParameter.Size%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommand.Prepare">
          <source>The <ph id="ph1">&lt;see cref="P:System.Data.Odbc.OdbcCommand.Connection" /&gt;</ph> is not set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.Odbc.OdbcCommand.Connection" /&gt;</ph>이 설정되지 않은 경우</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommand.Prepare">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommand.Prepare">
          <source>The <ph id="ph1">&lt;see cref="P:System.Data.Odbc.OdbcCommand.Connection" /&gt;</ph> is not <ph id="ph2">&lt;see cref="M:System.Data.Odbc.OdbcConnection.Open" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.Odbc.OdbcCommand.Connection" /&gt;</ph>이 <ph id="ph2">&lt;see cref="M:System.Data.Odbc.OdbcConnection.Open" /&gt;</ph>이 아닌 경우</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommand.ResetCommandTimeout">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Data.Odbc.OdbcCommand.CommandTimeout" /&gt;</ph> property to the default value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.Odbc.OdbcCommand.CommandTimeout" /&gt;</ph> 속성을 기본값으로 다시 설정합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.ResetCommandTimeout">
          <source>The default value of the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A&gt;</ph> is 30 seconds.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A&gt;</ph> 30 초입니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommand.System#ICloneable#Clone">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.ICloneable.Clone" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.ICloneable.Clone" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Data.Odbc.OdbcCommand.System#ICloneable#Clone">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that is a copy of this instance.</source>
          <target state="translated">이 인스턴스의 복사본인 새 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.System#ICloneable#Clone">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Odbc.OdbcCommand.System#ICloneable#Clone">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ICloneable&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.ICloneable&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="P:System.Data.Odbc.OdbcCommand.Transaction">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcTransaction" /&gt;</ph> within which the <ph id="ph2">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph> executes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcTransaction" /&gt;</ph>가 실행되는 <ph id="ph2">&lt;see cref="T:System.Data.Odbc.OdbcCommand" /&gt;</ph>을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.Transaction">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcTransaction" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Odbc.OdbcTransaction" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.Transaction">
          <source>The default is a null value.</source>
          <target state="translated">기본값은 null입니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.Transaction">
          <source>You cannot set the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.Transaction%2A&gt;</ph> property if it is already set to a specific value, and the command is in the process of executing.</source>
          <target state="translated">설정할 수 없습니다.는 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.Transaction%2A&gt;</ph> 특정 값으로 이미 설정 되어 있으며 명령을 실행 중 경우 속성을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.Transaction">
          <source>If you set the transaction property to an <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcTransaction&gt;</ph> object that is not connected to the same <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph> as the <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph> object, an exception will be thrown the next time that you try to execute a statement.</source>
          <target state="translated">트랜잭션 속성을 설정 하는 경우는 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcTransaction&gt;</ph> 동일 하 게 연결 되어 있지 않은 개체 <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph> 로 <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph> 개체 문을 실행 하려고 하면 다음에 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="P:System.Data.Odbc.OdbcCommand.UpdatedRowSource">
          <source>Gets or sets a value that specifies how the <bpt id="p1">**</bpt>Update<ept id="p1">**</ept> method should apply command results to the <bpt id="p2">**</bpt>DataRow<ept id="p2">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>Update<ept id="p1">**</ept> 메서드가 <bpt id="p2">**</bpt>DataRow<ept id="p2">**</ept>에 명령 결과를 적용하는 방식을 지정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.UpdatedRowSource">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.UpdateRowSource" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.UpdateRowSource" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.UpdatedRowSource">
          <source>The default <ph id="ph1">&lt;xref:System.Data.UpdateRowSource&gt;</ph> value is <bpt id="p1">**</bpt>Both<ept id="p1">**</ept> unless the command is automatically generated, as with the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;</ph>, in which case the default is <bpt id="p2">**</bpt>None<ept id="p2">**</ept>.</source>
          <target state="translated">기본 <ph id="ph1">&lt;xref:System.Data.UpdateRowSource&gt;</ph> 값은 <bpt id="p1">**</bpt>둘 다<ept id="p1">**</ept> 명령이 자동으로 생성, 하지 않는 한와 마찬가지로 <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;</ph>,이 경우 기본값은 <bpt id="p2">**</bpt>None<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Odbc.OdbcCommand.UpdatedRowSource">
          <source>For more information about how to use the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.UpdatedRowSource%2A&gt;</ph> property, see <bpt id="p1">[</bpt>DataAdapter Parameters<ept id="p1">](~/docs/framework/data/adonet/dataadapter-parameters.md)</ept>.</source>
          <target state="translated">사용 하는 방법에 대 한 자세한 내용은 <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcCommand.UpdatedRowSource%2A&gt;</ph> 속성 참조 <bpt id="p1">[</bpt>DataAdapter 매개 변수<ept id="p1">](~/docs/framework/data/adonet/dataadapter-parameters.md)</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>