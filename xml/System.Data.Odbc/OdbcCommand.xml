<Type Name="OdbcCommand" FullName="System.Data.Odbc.OdbcCommand">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a32b600318bf52a50113d6d84e46df94ff49822a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OdbcCommand : System.Data.Common.DbCommand, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OdbcCommand extends System.Data.Common.DbCommand implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Odbc.OdbcCommand" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OdbcCommand&#xA;Inherits DbCommand&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OdbcCommand sealed : System::Data::Common::DbCommand, ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Odbc</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommand</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("RecordsAffected")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OdbcCommandDesigner, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4fabf-101">데이터 원본에 대해 실행할 SQL 문이나 저장된 프로시저를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4fabf-101">Represents an SQL statement or stored procedure to execute against a data source.</span>
      </span>
      <span data-ttu-id="4fabf-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4fabf-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fabf-103"><xref:System.Data.Odbc.OdbcCommand> 클래스는 데이터 원본에 대해 명령을 실행 하기 위한 다음 메서드를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-103">The <xref:System.Data.Odbc.OdbcCommand> class provides the following methods for executing commands against a data source:</span></span>  
  
|<span data-ttu-id="4fabf-104">항목</span><span class="sxs-lookup"><span data-stu-id="4fabf-104">Item</span></span>|<span data-ttu-id="4fabf-105">설명</span><span class="sxs-lookup"><span data-stu-id="4fabf-105">Description</span></span>|  
|----------|-----------------|  
|<xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>|<span data-ttu-id="4fabf-106">행을 반환 하는 명령을 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-106">Executes commands that return rows.</span></span>|  
|<xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>|<span data-ttu-id="4fabf-107">SQL INSERT, DELETE, UPDATE 및 SET 문과 같은 명령을 실행합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-107">Executes commands such as SQL INSERT, DELETE, UPDATE, and SET statements.</span></span>|  
|<xref:System.Data.Odbc.OdbcCommand.ExecuteScalar%2A>|<span data-ttu-id="4fabf-108">예를 들어 집계 값을 단일 값을 데이터베이스에서 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-108">Retrieves a single value, for example, an aggregate value, from a database.</span></span>|  
  
 <span data-ttu-id="4fabf-109">다시 설정할 수 있습니다는 <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> 속성 및 재사용은 <xref:System.Data.Odbc.OdbcCommand> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-109">You can reset the <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> property and reuse the <xref:System.Data.Odbc.OdbcCommand> object.</span></span> <span data-ttu-id="4fabf-110">그러나를 닫아야는 <xref:System.Data.Odbc.OdbcDataReader> 전에 이전 또는 새 명령을 실행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-110">However, you must close the <xref:System.Data.Odbc.OdbcDataReader> before you can execute a new or previous command.</span></span>  
  
 <span data-ttu-id="4fabf-111">명령 실행으로 인해 심각한 경우 <xref:System.Data.Odbc.OdbcException> 등 SQL Server 심각도 20 이상의 <xref:System.Data.Odbc.OdbcConnection> 닫힐 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-111">If execution of the command causes a fatal <xref:System.Data.Odbc.OdbcException> such as a SQL Server severity level of 20 or more, <xref:System.Data.Odbc.OdbcConnection> may close.</span></span> <span data-ttu-id="4fabf-112">그러나 사용자는 연결을 다시 열고 계속할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-112">However, the user can reopen the connection and continue.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fabf-113">다음 예제에서는 <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-113">The following example uses <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>.</span></span>  
  
 [!code-csharp[Classic WebData OdbcCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcCommand/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcCommand/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.Odbc.OdbcDataAdapter" />
    <altmember cref="T:System.Data.Odbc.OdbcConnection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4fabf-114">
            <see cref="T:System.Data.Odbc.OdbcCommand" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-114">Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcCommand" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcCommand();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4fabf-115">
            <see cref="T:System.Data.Odbc.OdbcCommand" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-115">Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcCommand" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fabf-116">기본 생성자는 모든 필드를를 기본값으로 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-116">The base constructor initializes all fields to their default values.</span></span> <span data-ttu-id="4fabf-117">다음 표에서의 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Data.Odbc.OdbcCommand>합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-117">The following table shows initial property values for an instance of <xref:System.Data.Odbc.OdbcCommand>.</span></span>  
  
|<span data-ttu-id="4fabf-118">속성</span><span class="sxs-lookup"><span data-stu-id="4fabf-118">Properties</span></span>|<span data-ttu-id="4fabf-119">초기 값</span><span class="sxs-lookup"><span data-stu-id="4fabf-119">Initial Value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Odbc.OdbcCommand.CommandText%2A>|<span data-ttu-id="4fabf-120">빈 문자열 ("")</span><span class="sxs-lookup"><span data-stu-id="4fabf-120">empty string ("")</span></span>|  
|<xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>|<span data-ttu-id="4fabf-121">30</span><span class="sxs-lookup"><span data-stu-id="4fabf-121">30</span></span>|  
|<xref:System.Data.Odbc.OdbcCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.Odbc.OdbcCommand.Connection%2A>|<span data-ttu-id="4fabf-122">null</span><span class="sxs-lookup"><span data-stu-id="4fabf-122">null</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.Odbc.OdbcDataAdapter" />
        <altmember cref="T:System.Data.Odbc.OdbcConnection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcCommand (string cmdText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcCommand(System::String ^ cmdText);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cmdText">
          <span data-ttu-id="4fabf-123">쿼리 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-123">The text of the query.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4fabf-124">쿼리 텍스트를 사용하여 <see cref="T:System.Data.Odbc.OdbcCommand" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-124">Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcCommand" /> class with the text of the query.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcCommand (string cmdText, System.Data.Odbc.OdbcConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText, class System.Data.Odbc.OdbcConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String, connection As OdbcConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcCommand(System::String ^ cmdText, System::Data::Odbc::OdbcConnection ^ connection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.Odbc.OdbcConnection" />
      </Parameters>
      <Docs>
        <param name="cmdText">
          <span data-ttu-id="4fabf-125">쿼리 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-125">The text of the query.</span>
          </span>
        </param>
        <param name="connection">
          <span data-ttu-id="4fabf-126">데이터 소스에 대한 연결을 나타내는 <see cref="T:System.Data.Odbc.OdbcConnection" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-126">An <see cref="T:System.Data.Odbc.OdbcConnection" /> object that represents the connection to a data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4fabf-127">쿼리 텍스트와 <see cref="T:System.Data.Odbc.OdbcCommand" /> 개체를 사용하여 <see cref="T:System.Data.Odbc.OdbcConnection" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-127">Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcCommand" /> class with the text of the query and an <see cref="T:System.Data.Odbc.OdbcConnection" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcCommand (string cmdText, System.Data.Odbc.OdbcConnection connection, System.Data.Odbc.OdbcTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText, class System.Data.Odbc.OdbcConnection connection, class System.Data.Odbc.OdbcTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection,System.Data.Odbc.OdbcTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String, connection As OdbcConnection, transaction As OdbcTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcCommand(System::String ^ cmdText, System::Data::Odbc::OdbcConnection ^ connection, System::Data::Odbc::OdbcTransaction ^ transaction);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.Odbc.OdbcConnection" />
        <Parameter Name="transaction" Type="System.Data.Odbc.OdbcTransaction" />
      </Parameters>
      <Docs>
        <param name="cmdText">
          <span data-ttu-id="4fabf-128">쿼리 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-128">The text of the query.</span>
          </span>
        </param>
        <param name="connection">
          <span data-ttu-id="4fabf-129">데이터 소스에 대한 연결을 나타내는 <see cref="T:System.Data.Odbc.OdbcConnection" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-129">An <see cref="T:System.Data.Odbc.OdbcConnection" /> object that represents the connection to a data source.</span>
          </span>
        </param>
        <param name="transaction">
          <span data-ttu-id="4fabf-130">
            <see cref="T:System.Data.Odbc.OdbcCommand" />가 실행되는 트랜잭션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-130">The transaction in which the <see cref="T:System.Data.Odbc.OdbcCommand" /> executes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4fabf-131">쿼리의 텍스트, <see cref="T:System.Data.Odbc.OdbcConnection" /> 개체 및 <see cref="P:System.Data.Odbc.OdbcCommand.Transaction" />을 사용하여 <see cref="T:System.Data.Odbc.OdbcCommand" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-131">Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcCommand" /> class with the text of the query, an <see cref="T:System.Data.Odbc.OdbcConnection" /> object, and the <see cref="P:System.Data.Odbc.OdbcCommand.Transaction" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fabf-132">다음 표에서이 구현의 인스턴스에 대 한 초기 속성 값을 보여 줍니다.는 <xref:System.Data.Odbc.OdbcCommand>합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-132">The following table shows initial property values for an instance of this implementation of the <xref:System.Data.Odbc.OdbcCommand>.</span></span>  
  
|<span data-ttu-id="4fabf-133">속성</span><span class="sxs-lookup"><span data-stu-id="4fabf-133">Properties</span></span>|<span data-ttu-id="4fabf-134">초기 값</span><span class="sxs-lookup"><span data-stu-id="4fabf-134">Initial Value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Odbc.OdbcCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>|<span data-ttu-id="4fabf-135">30</span><span class="sxs-lookup"><span data-stu-id="4fabf-135">30</span></span>|  
|<xref:System.Data.Odbc.OdbcCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.Odbc.OdbcCommand.Connection%2A>|<span data-ttu-id="4fabf-136">새 <xref:System.Data.Odbc.OdbcConnection> 즉에 대 한 값은 `connection` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-136">A new <xref:System.Data.Odbc.OdbcConnection> that is the value for the `connection` parameter.</span></span>|  
  
 <span data-ttu-id="4fabf-137">관련된 속성을 설정 하 여 이러한 매개 변수 중 하나에 대 한 값을 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-137">You can change the value for any one of these parameters by setting the related property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public override void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Cancel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4fabf-138">
            <see cref="T:System.Data.Odbc.OdbcCommand" />의 실행을 취소하려고 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-138">Tries to cancel the execution of an <see cref="T:System.Data.Odbc.OdbcCommand" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fabf-139">취소할 명령이 없으면 아무 동작도 발생하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-139">If there is nothing to cancel, nothing occurs.</span></span> <span data-ttu-id="4fabf-140">그러나 처리 중인 명령을 취소 시도가 실패 하는 경우 예외가 생성 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-140">However, if there is a command in process, and the cancellation try fails, no exception is generated.</span></span>  
  
 <span data-ttu-id="4fabf-141">스레드 하나에 대 한 쿼리를 취소 하려면 <xref:System.Data.Odbc.OdbcCommand.Cancel%2A> 다른 스레드에서 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-141">To cancel a query on one thread, <xref:System.Data.Odbc.OdbcCommand.Cancel%2A> must be called from another thread.</span></span> <span data-ttu-id="4fabf-142">비동기적으로 명령을 실행할 수 없습니다 때문에 <xref:System.Data.Odbc.OdbcCommand>, 다른 스레드에서 명령을 취소 하려면 하나의 스레드를 동기적으로 실행 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-142">Because you cannot execute commands asynchronously with <xref:System.Data.Odbc.OdbcCommand>, to cancel a command from another thread, one thread must be running synchronously.</span></span> <span data-ttu-id="4fabf-143">즉는 <xref:System.Data.Odbc.OdbcCommand> 개체 두 스레드에서 액세스할 수 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-143">This means that the <xref:System.Data.Odbc.OdbcCommand> object must be accessible from both threads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public override string CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Odbc.Design.OdbcCommandTextEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4fabf-144">데이터 소스에 대해 실행할 SQL 문이나 저장 프로시저를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-144">Gets or sets the SQL statement or stored procedure to execute against the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4fabf-145">실행할 SQL 문 또는 저장 프로시저입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-145">The SQL statement or stored procedure to execute.</span>
          </span>
          <span data-ttu-id="4fabf-146">기본값은 빈 문자열("")입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-146">The default value is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fabf-147">경우는 <xref:System.Data.IDbCommand.CommandType%2A> 속성이 `StoredProcedure`, <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> 표준 ODBC 저장 프로시저 이스케이프 시퀀스를 사용 하 여 속성을 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-147">When the <xref:System.Data.IDbCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> property should be set using standard ODBC stored procedure escape sequences.</span></span> <span data-ttu-id="4fabf-148">설정의 <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> 저장된 프로시저의 이름으로 작동 하지 않습니다 다른.NET Framework 데이터 공급자에 대해서와 마찬가지로 합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-148">Setting the <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> to the name of the stored procedure does not function as it does for other .NET Framework data providers.</span></span>  
  
 <span data-ttu-id="4fabf-149">외부 조인 및 스칼라 함수 호출 등의 여러 언어 기능은 데이터 원본에 일반적으로 구현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-149">Many language features, such as outer joins and scalar function calls, are generally implemented by data sources.</span></span> <span data-ttu-id="4fabf-150">이러한 기능에 대 한 구문에도 일반적으로 데이터 소스 관련 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-150">Even the syntax for these features is generally data source-specific.</span></span> <span data-ttu-id="4fabf-151">따라서 ODBC는 다음 언어 기능에 대 한 표준 구문을 포함 하는 이스케이프 시퀀스를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-151">Therefore, ODBC defines escape sequences that contain standard syntax for the following language features:</span></span>  
  
-   <span data-ttu-id="4fabf-152">날짜, 시간, 타임 스탬프 및 날짜/시간 간격 리터럴</span><span class="sxs-lookup"><span data-stu-id="4fabf-152">Date, time, timestamp, and datetime interval literals</span></span>  
  
-   <span data-ttu-id="4fabf-153">숫자와 같이 스칼라 함수, 문자열 및 데이터 형식 변환 함수</span><span class="sxs-lookup"><span data-stu-id="4fabf-153">Scalar functions such as numeric, string, and data type conversion functions</span></span>  
  
-   <span data-ttu-id="4fabf-154">마찬가지로 조건자 이스케이프 문자</span><span class="sxs-lookup"><span data-stu-id="4fabf-154">LIKE predicate escape character</span></span>  
  
-   <span data-ttu-id="4fabf-155">외부 조인</span><span class="sxs-lookup"><span data-stu-id="4fabf-155">Outer joins</span></span>  
  
-   <span data-ttu-id="4fabf-156">프로시저 호출</span><span class="sxs-lookup"><span data-stu-id="4fabf-156">Procedure calls</span></span>  
  
 <span data-ttu-id="4fabf-157">ODBC에서 사용 되는 이스케이프 시퀀스는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-157">The escape sequence used by ODBC is as follows:</span></span>  
  
```  
{extension}  
```  
  
 <span data-ttu-id="4fabf-158">이 이스케이프 시퀀스를 인식 하 고 ODBC 드라이버에서 구문 분석 합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-158">This escape sequence is recognized and parsed by ODBC drivers.</span></span> <span data-ttu-id="4fabf-159">그런 다음 데이터 소스 관련 문법와 이스케이프 시퀀스 대체합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-159">They then replace any escape sequences with data source-specific grammar.</span></span>  
  
 <span data-ttu-id="4fabf-160">프로시저는 실행 가능한 개체 데이터 소스에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-160">A procedure is an executable object stored at the data source.</span></span> <span data-ttu-id="4fabf-161">일반적으로 미리 컴파일된 하나 이상의 SQL 문</span><span class="sxs-lookup"><span data-stu-id="4fabf-161">Generally, it is one or more SQL statements that have been precompiled.</span></span> <span data-ttu-id="4fabf-162">프로시저 호출에 대 한 이스케이프 시퀀스는</span><span class="sxs-lookup"><span data-stu-id="4fabf-162">The escape sequence for calling a procedure is</span></span>  
  
```  
{[?=]call procedure-name[([parameter][,[parameter]]...)]}  
```  
  
 <span data-ttu-id="4fabf-163">여기서 `procedure-name` 프로시저의 이름을 지정 하 고 `parameter` 프로시저 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-163">where `procedure-name` specifies the name of a procedure and `parameter` specifies a procedure parameter.</span></span>  
  
 <span data-ttu-id="4fabf-164">명령이 Execute 메서드 중 하나를 호출 하면이 저장된 프로시저를 실행 합니다 (예를 들어 <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> 또는 <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>).</span><span class="sxs-lookup"><span data-stu-id="4fabf-164">The command executes this stored procedure when you call one of the Execute methods (for example, <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> or <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>).</span></span>  
  
 <span data-ttu-id="4fabf-165">설정할 수 없습니다.는 <xref:System.Data.Odbc.OdbcCommand.Connection%2A>, <xref:System.Data.Odbc.OdbcCommand.CommandType%2A> 및 <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> 속성은 현재 연결 execute 또는 인출 작업을 수행 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="4fabf-165">You cannot set the <xref:System.Data.Odbc.OdbcCommand.Connection%2A>, <xref:System.Data.Odbc.OdbcCommand.CommandType%2A> and <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> properties if the current connection is performing an execute or fetch operation.</span></span>  
  
 <span data-ttu-id="4fabf-166">ODBC.NET 공급자는 SQL 문 또는 저장된 프로시저에 의해 호출에 매개 변수 전달에 대 한 명명 된 매개 변수를 지원 하지 않습니다는 <xref:System.Data.Odbc.OdbcCommand> 때 <xref:System.Data.Odbc.OdbcCommand.CommandType%2A> 로 설정 된 `Text`합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-166">The ODBC.NET Provider does not support named parameters for passing parameters to an SQL statement or a stored procedure called by an <xref:System.Data.Odbc.OdbcCommand> when <xref:System.Data.Odbc.OdbcCommand.CommandType%2A> is set to `Text`.</span></span> <span data-ttu-id="4fabf-167">이 경우 물음표 (?) 자리 표시자를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-167">In this case, the question mark (?) placeholder must be used.</span></span> <span data-ttu-id="4fabf-168">예:</span><span class="sxs-lookup"><span data-stu-id="4fabf-168">For example:</span></span>  
  
```  
SELECT * FROM Customers WHERE CustomerID = ?  
```  
  
 <span data-ttu-id="4fabf-169">따라서 순서 <xref:System.Data.Odbc.OdbcParameter> 개체에 추가 됩니다는 <xref:System.Data.Odbc.OdbcParameterCollection> 매개 변수에 물음표 자리 표시자의 위치와 직접 일치 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-169">Therefore, the order in which <xref:System.Data.Odbc.OdbcParameter> objects are added to the <xref:System.Data.Odbc.OdbcParameterCollection> must directly correspond to the position of the question mark placeholder for the parameter.</span></span>  
  
 <span data-ttu-id="4fabf-170">매개 변수에 null 값이 있으면.NET Framework Data Provider for ODBC 여전히 해당 매개 변수를 바인딩합니다 하지만 null 값이 아니라 SQL_DEFAULT_PARAM을 사용 하 여 정의 된 기본 매개 변수를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-170">If a parameter contains a null value, the .NET Framework Data Provider for ODBC still binds that parameter, but uses a default parameter, if one has been defined by using SQL_DEFAULT_PARAM, instead of the null value.</span></span> <span data-ttu-id="4fabf-171">예를 들어는 <xref:System.Data.Odbc.OdbcParameterCollection>:</span><span class="sxs-lookup"><span data-stu-id="4fabf-171">For example, the <xref:System.Data.Odbc.OdbcParameterCollection>:</span></span>  
  
```  
{1, null, 2}  
```  
  
 <span data-ttu-id="4fabf-172">에 전달 되는 <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> 속성:</span><span class="sxs-lookup"><span data-stu-id="4fabf-172">passed into the <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> property:</span></span>  
  
```  
{call sp(?, ?, ?)}  
```  
  
 <span data-ttu-id="4fabf-173">.NET Framework Data Provider for ODBC는 첫 번째 매개 변수 값 1, 2, 값에 세 번째 매개 변수 및 SQL_DEFAULT_PARAM으로 두 번째 매개 변수 바인딩 하면 합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-173">causes the .NET Framework Data Provider for ODBC binding the first parameter to the value 1, the third parameter to the value 2, and the second parameter as SQL_DEFAULT_PARAM.</span></span> <span data-ttu-id="4fabf-174">그러나이 동작은 드라이버에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-174">However, this behavior is driver-dependent.</span></span> <span data-ttu-id="4fabf-175">드라이버는이 기능을 지원 하지 않는 경우 바로 전달 하지 마십시오 값에서 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="4fabf-175">If the driver does not support this functionality, just do not pass in a value for the parameter.</span></span> <span data-ttu-id="4fabf-176">예를 들어, 사용 된 <xref:System.Data.Odbc.OdbcParameterCollection>:</span><span class="sxs-lookup"><span data-stu-id="4fabf-176">For example, use the <xref:System.Data.Odbc.OdbcParameterCollection>:</span></span>  
  
```  
{1, 2}  
```  
  
 <span data-ttu-id="4fabf-177">설정 된 <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> 속성을 다음:</span><span class="sxs-lookup"><span data-stu-id="4fabf-177">and set the <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> property to the following:</span></span>  
  
```  
{call sp(?, null, ?)}  
```  
  
> [!NOTE]
>  <span data-ttu-id="4fabf-178">매개 변수를 생략 하면 다른 매개 변수에서 구분 하는 쉼표 여전히 나타나야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-178">If a parameter is omitted, the comma delimiting it from other parameters must still appear.</span></span> <span data-ttu-id="4fabf-179">입력 또는 입/출력 매개 변수를 생략 하면 프로시저는 매개 변수의 기본값을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-179">If an input or input/output parameter is omitted, the procedure uses the default value of the parameter.</span></span> <span data-ttu-id="4fabf-180">SQL_DEFAULT_PARAM으로 매개 변수에 바인딩된 길이/표시기 버퍼의 값을 설정 하는 입력 또는 입/출력 매개 변수의 기본값을 지정 하는 다른 방법은 합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-180">Another way to specify the default value of an input or input/output parameter is to set the value of the length/indicator buffer bound to the parameter to SQL_DEFAULT_PARAM.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.Odbc.OdbcCommand.Connection" />
        <altmember cref="P:System.Data.Odbc.OdbcCommand.CommandTimeout" />
        <altmember cref="P:System.Data.Odbc.OdbcCommand.CommandType" />
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public override int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CommandTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4fabf-181">명령 실행을 종료하고 오류를 생성하기 전에 대기 시간을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-181">Gets or sets the wait time before terminating an attempt to execute a command and generating an error.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4fabf-182">명령이 실행될 때까지 대기하는 시간(초)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-182">The time in seconds to wait for the command to execute.</span>
          </span>
          <span data-ttu-id="4fabf-183">기본값은 30초입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-183">The default is 30 seconds.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fabf-184">영 (0)의 값은 대기 시간이 없는 아니라 대기 시간에 제한이 없음을 지정을 피해 야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-184">A value of zero (0) specifies no limit to the wait time, instead of no wait time, and therefore should be avoided.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandType">
      <MemberSignature Language="C#" Value="public override System.Data.CommandType CommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandType CommandType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.CommandType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandType As CommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::CommandType CommandType { System::Data::CommandType get(); void set(System::Data::CommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4fabf-185">
            <see cref="P:System.Data.Odbc.OdbcCommand.CommandText" /> 속성의 해석 방법을 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-185">Gets or sets a value that indicates how the <see cref="P:System.Data.Odbc.OdbcCommand.CommandText" /> property is interpreted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4fabf-186">
            <see cref="T:System.Data.CommandType" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-186">One of the <see cref="T:System.Data.CommandType" /> values.</span>
          </span>
          <span data-ttu-id="4fabf-187">기본값은 <see langword="Text" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-187">The default is <see langword="Text" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fabf-188">때는 <xref:System.Data.Odbc.OdbcCommand.CommandType%2A> 속성이 `StoredProcedure`를 설정 해야는 <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> 속성을 전체 ODBC 호출 구문입니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-188">When the <xref:System.Data.Odbc.OdbcCommand.CommandType%2A> property is set to `StoredProcedure`, you should set the <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> property to the full ODBC call syntax.</span></span> <span data-ttu-id="4fabf-189">Execute 메서드 중 하나를 호출 하면 다음 명령이이 저장된 프로시저 실행 (예를 들어 <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> 또는 <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>).</span><span class="sxs-lookup"><span data-stu-id="4fabf-189">The command then executes this stored procedure when you call one of the Execute methods (for example, <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> or <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>).</span></span>  
  
 <span data-ttu-id="4fabf-190"><xref:System.Data.Odbc.OdbcCommand.Connection%2A>, <xref:System.Data.Odbc.OdbcCommand.CommandType%2A> 및 <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> 현재 연결 execute 또는 인출 작업을 수행 하는 경우 속성을 설정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-190">The <xref:System.Data.Odbc.OdbcCommand.Connection%2A>, <xref:System.Data.Odbc.OdbcCommand.CommandType%2A> and <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> properties cannot be set if the current connection is performing an execute or fetch operation.</span></span>  
  
 <span data-ttu-id="4fabf-191">.NET Framework Data Provider for ODBC에 명명 된 전달은 지원 되지 않습니다 SQL 문 또는 저장된 프로시저에서 호출 하는 매개 변수는 <xref:System.Data.Odbc.OdbcCommand>합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-191">The .NET Framework Data Provider for ODBC does not support passing named parameters to an SQL statement or to a stored procedure called by an <xref:System.Data.Odbc.OdbcCommand>.</span></span> <span data-ttu-id="4fabf-192">두이 경우 모두에서 물음표 (?) 자리 표시자를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-192">In either of these cases, use the question mark (?) placeholder.</span></span> <span data-ttu-id="4fabf-193">예:</span><span class="sxs-lookup"><span data-stu-id="4fabf-193">For example:</span></span>  
  
```  
SELECT * FROM Customers WHERE CustomerID = ?  
```  
  
 <span data-ttu-id="4fabf-194">순서를 <xref:System.Data.Odbc.OdbcParameter> 개체에 추가 됩니다는 <xref:System.Data.Odbc.OdbcParameterCollection> 매개 변수에 물음표 자리 표시자의 위치와 직접 일치 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-194">The order in which <xref:System.Data.Odbc.OdbcParameter> objects are added to the <xref:System.Data.Odbc.OdbcParameterCollection> must directly correspond to the position of the question mark placeholder for the parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4fabf-195">.NET Framework Data Provider for ODBC 지원 하지 않습니다는 <xref:System.Data.CommandType> 설정인 `TableDirect`합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-195">The .NET Framework Data Provider for ODBC does not support the <xref:System.Data.CommandType> setting of `TableDirect`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4fabf-196">값이 유효한 <see cref="T:System.Data.CommandType" />이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-196">The value was not a valid <see cref="T:System.Data.CommandType" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.Odbc.OdbcCommand.CommandText" />
        <altmember cref="P:System.Data.Odbc.OdbcCommand.UpdatedRowSource" />
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcConnection Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Odbc.OdbcConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As OdbcConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Odbc::OdbcConnection ^ Connection { System::Data::Odbc::OdbcConnection ^ get(); void set(System::Data::Odbc::OdbcConnection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4fabf-197">
            <see cref="T:System.Data.Odbc.OdbcCommand" />의 이 인스턴스에서 사용되는 <see cref="T:System.Data.Odbc.OdbcConnection" />을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-197">Gets or sets the <see cref="T:System.Data.Odbc.OdbcConnection" /> used by this instance of the <see cref="T:System.Data.Odbc.OdbcCommand" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4fabf-198">데이터 소스와의 연결입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-198">The connection to a data source.</span>
          </span>
          <span data-ttu-id="4fabf-199">기본값은 null입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-199">The default is a null value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fabf-200">설정할 수 없습니다.는 <xref:System.Data.Odbc.OdbcCommand.Connection%2A>, <xref:System.Data.Odbc.OdbcCommand.CommandType%2A>, 및 <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> 속성은 현재 연결 execute 또는 인출 작업을 수행 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="4fabf-200">You cannot set the <xref:System.Data.Odbc.OdbcCommand.Connection%2A>, <xref:System.Data.Odbc.OdbcCommand.CommandType%2A>, and <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> properties if the current connection is performing an execute or fetch operation.</span></span>  
  
 <span data-ttu-id="4fabf-201">트랜잭션이 처리되는 중에 <xref:System.Data.Odbc.OdbcCommand.Connection%2A>을 설정한 경우 <xref:System.Data.Odbc.OdbcCommand.Transaction%2A> 속성이 null이 아니면 <xref:System.InvalidOperationException>이 생성됩니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-201">If you set <xref:System.Data.Odbc.OdbcCommand.Connection%2A> while a transaction is in progress and the <xref:System.Data.Odbc.OdbcCommand.Transaction%2A> property is not null, an <xref:System.InvalidOperationException> is generated.</span></span> <span data-ttu-id="4fabf-202">설정 하는 경우 <xref:System.Data.Odbc.OdbcCommand.Connection%2A> 트랜잭션이 커밋 또는 롤백 후 및 <xref:System.Data.Odbc.OdbcCommand.Transaction%2A> 속성이 null이 아니면는 <xref:System.Data.Odbc.OdbcCommand.Transaction%2A> 속성은 null 값으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-202">If you set <xref:System.Data.Odbc.OdbcCommand.Connection%2A> after the transaction has been committed or rolled back, and the <xref:System.Data.Odbc.OdbcCommand.Transaction%2A> property is not null, the <xref:System.Data.Odbc.OdbcCommand.Transaction%2A> property is then set to a null value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4fabf-203">트랜잭션을 진행하는 동안 <see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> 속성이 변경되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-203">The <see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> property was changed while a transaction was in progress.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.Odbc.OdbcCommand.CommandText" />
        <altmember cref="P:System.Data.Odbc.OdbcCommand.CommandTimeout" />
        <altmember cref="P:System.Data.Odbc.OdbcCommand.CommandType" />
      </Docs>
    </Member>
    <Member MemberName="CreateDbParameter">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameter CreateDbParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbParameter CreateDbParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.CreateDbParameter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbParameter () As DbParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbParameter ^ CreateDbParameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcParameter CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcParameter CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateParameter () As OdbcParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcParameter ^ CreateParameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4fabf-204">
            <see cref="T:System.Data.Odbc.OdbcParameter" /> 개체의 새 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-204">Creates a new instance of an <see cref="T:System.Data.Odbc.OdbcParameter" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4fabf-205">
            <see cref="T:System.Data.Odbc.OdbcParameter" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-205">An <see cref="T:System.Data.Odbc.OdbcParameter" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fabf-206"><xref:System.Data.Odbc.OdbcCommand.CreateParameter%2A> 메서드는 강력한 형식의 버전의 <xref:System.Data.IDbCommand.CreateParameter%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-206">The <xref:System.Data.Odbc.OdbcCommand.CreateParameter%2A> method is a strongly-typed version of <xref:System.Data.IDbCommand.CreateParameter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbConnection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbConnection DbConnection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection DbConnection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.DbConnection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbConnection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbConnection ^ DbConnection { System::Data::Common::DbConnection ^ get(); void set(System::Data::Common::DbConnection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbParameterCollection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbParameterCollection DbParameterCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.DbParameterCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbParameterCollection As DbParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbParameterCollection ^ DbParameterCollection { System::Data::Common::DbParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction DbTransaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbTransaction DbTransaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.DbTransaction" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbTransaction As DbTransaction" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbTransaction ^ DbTransaction { System::Data::Common::DbTransaction ^ get(); void set(System::Data::Common::DbTransaction ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeVisible">
      <MemberSignature Language="C#" Value="public override bool DesignTimeVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignTimeVisible" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.DesignTimeVisible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DesignTimeVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DesignTimeVisible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4fabf-207">명령 개체를 사용자 지정된 인터페이스 컨트롤에서 표시할지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-207">Gets or sets a value that indicates whether the command object should be visible in a customized interface control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4fabf-208">**true 이면**명령 개체를 컨트롤에 표시 되지 않으면 해야 하면, **false**합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-208">**true**, if the command object should be visible in a control; otherwise **false**.</span>
          </span>
          <span data-ttu-id="4fabf-209">기본값은 **true**합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-209">The default is **true**.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDbDataReader">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbDataReader ExecuteDbDataReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.ExecuteDbDataReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDbDataReader (behavior As CommandBehavior) As DbDataReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbDataReader ^ ExecuteDbDataReader(System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQuery">
      <MemberSignature Language="C#" Value="public override int ExecuteNonQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ExecuteNonQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.ExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteNonQuery () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ExecuteNonQuery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4fabf-210">
            <see cref="P:System.Data.Odbc.OdbcCommand.Connection" />에 대해 SQL 문을 실행하고 영향을 받는 행의 수를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-210">Executes an SQL statement against the <see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> and returns the number of rows affected.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4fabf-211">UPDATE, INSERT 및 DELETE 문의 경우, 반환 값은 해당 명령의 영향을 받는 행의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-211">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span>
          </span>
          <span data-ttu-id="4fabf-212">다른 형식의 문의 경우에는 반환 값이 -1입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-212">For all other types of statements, the return value is -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fabf-213">사용할 수 있습니다 <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A> (예를 들어 데이터베이스의 구조를 쿼리 또는 테이블과 같은 데이터베이스 개체 만들기); 카탈로그 작업을 수행 하거나 사용 하지 않고는 데이터베이스의 데이터를 변경 하려면는 <xref:System.Data.DataSet>,으로 UPDATE, INSERT, 실행 또는 삭제 문입니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-213">You can use <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables); or to change the data in a database, without using a <xref:System.Data.DataSet>, by executing UPDATE, INSERT, or DELETE statements.</span></span>  
  
 <span data-ttu-id="4fabf-214">사용할 수도 있습니다 <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A> 기본 ODBC 드라이버에서이 기능을 지 원하는 경우 여러 SQL 문을 실행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-214">You can also use <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A> to execute multiple SQL statements if the underlying ODBC driver supports this functionality.</span></span> <span data-ttu-id="4fabf-215">이 경우 반환 값은 명령에 모든 문의 영향을 받는 행의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-215">In this case, the return value is the number of rows affected by all statements in the command.</span></span>  
  
 <span data-ttu-id="4fabf-216">하지만 <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A> 행을 모든 출력 매개 변수가 반환 하지 또는 반환 값 매개 변수에 매핑된 데이터 채워집니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-216">Although <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A> returns no rows, any output parameters or return values mapped to parameters are populated with data.</span></span>  
  
 <span data-ttu-id="4fabf-217">UPDATE, INSERT 및 DELETE 문의 경우, 반환 값은 해당 명령의 영향을 받는 행의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-217">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span></span> <span data-ttu-id="4fabf-218">다른 형식의 문의 경우에는 반환 값이 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-218">For all other types of statements, the return value is -1.</span></span> <span data-ttu-id="4fabf-219">롤백이 발생 하는 경우 반환 값-1 이기도 합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-219">If a rollback occurs, the return value is also -1.</span></span>  
  
 <span data-ttu-id="4fabf-220">트리거가 있으면 테이블 및 데이터에 추가 되거나 테이블에서 변경 되는, 반환 값에는 트리거의 영향을 받는 행의 수와 삽입 또는 업데이트 작업을 모두 영향을 받는 행 수가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-220">When a trigger exists on a table and data is being added or changed in the table, the return value includes the number of rows affected by both the insert or update operation and the number of rows affected by the trigger or triggers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4fabf-221">연결이 존재하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-221">The connection does not exist.</span>
          </span>
          <span data-ttu-id="4fabf-222">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-222">-or-</span>
          </span>
          <span data-ttu-id="4fabf-223">연결이 열려 있지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-223">The connection is not open.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4fabf-224">
            <see cref="P:System.Data.Odbc.OdbcCommand.CommandText" />를 <see cref="P:System.Data.Odbc.OdbcCommand.Connection" />에 보내고 <see cref="T:System.Data.Odbc.OdbcDataReader" />를 빌드합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-224">Sends the <see cref="P:System.Data.Odbc.OdbcCommand.CommandText" /> to the <see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> and builds an <see cref="T:System.Data.Odbc.OdbcDataReader" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcDataReader ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcDataReader ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader () As OdbcDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcDataReader ^ ExecuteReader();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4fabf-225">
            <see cref="P:System.Data.Odbc.OdbcCommand.CommandText" />를 <see cref="P:System.Data.Odbc.OdbcCommand.Connection" />에 보내고 <see cref="T:System.Data.Odbc.OdbcDataReader" />를 빌드합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-225">Sends the <see cref="P:System.Data.Odbc.OdbcCommand.CommandText" /> to the <see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> and builds an <see cref="T:System.Data.Odbc.OdbcDataReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4fabf-226">
            <see cref="T:System.Data.Odbc.OdbcDataReader" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-226">An <see cref="T:System.Data.Odbc.OdbcDataReader" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fabf-227">설정 해야는 <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> 속성을 저장된 프로시저에 대 한 전체 ODBC 호출 구문입니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-227">You should set the <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> property to the full ODBC call syntax for stored procedures.</span></span> <span data-ttu-id="4fabf-228">명령이 호출 하는 경우이 저장된 프로시저를 실행 <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-228">The command executes this stored procedure when you call <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>.</span></span>  
  
 <span data-ttu-id="4fabf-229">반면는 <xref:System.Data.Odbc.OdbcDataReader> 을 사용 하는 연결 된 <xref:System.Data.Odbc.OdbcConnection> 역할을 수행는 <xref:System.Data.Odbc.OdbcDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-229">While the <xref:System.Data.Odbc.OdbcDataReader> is used, the associated <xref:System.Data.Odbc.OdbcConnection> is busy serving the <xref:System.Data.Odbc.OdbcDataReader>.</span></span> <span data-ttu-id="4fabf-230">이 상태 동안에 없는 다른 작업을 수행할 수에 <xref:System.Data.Odbc.OdbcConnection> 닫지 합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-230">While in this state, no other operations can be performed on the <xref:System.Data.Odbc.OdbcConnection> other than closing it.</span></span> <span data-ttu-id="4fabf-231">이 때 까지는 <xref:System.Data.Odbc.OdbcDataReader.Close%2A> 의 메서드는 <xref:System.Data.Odbc.OdbcDataReader> 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-231">This is the case until the <xref:System.Data.Odbc.OdbcDataReader.Close%2A> method of the <xref:System.Data.Odbc.OdbcDataReader> is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcDataReader ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcDataReader ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader (behavior As CommandBehavior) As OdbcDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcDataReader ^ ExecuteReader(System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">
          <span data-ttu-id="4fabf-232">
            <see langword="System.Data.CommandBehavior" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-232">One of the <see langword="System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4fabf-233">
            <see cref="P:System.Data.Odbc.OdbcCommand.CommandText" />를 <see cref="P:System.Data.Odbc.OdbcCommand.Connection" />에 보내고 <see langword="CommandBehavior" /> 값 중 하나를 사용하여 <see cref="T:System.Data.Odbc.OdbcDataReader" />를 빌드합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-233">Sends the <see cref="P:System.Data.Odbc.OdbcCommand.CommandText" /> to the <see cref="P:System.Data.Odbc.OdbcCommand.Connection" />, and builds an <see cref="T:System.Data.Odbc.OdbcDataReader" /> using one of the <see langword="CommandBehavior" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4fabf-234">
            <see cref="T:System.Data.Odbc.OdbcDataReader" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-234">An <see cref="T:System.Data.Odbc.OdbcDataReader" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fabf-235">SQL 문의 단일 행만 반환 될 경우 지정 `SingleRow` 로 <xref:System.Data.CommandBehavior> 값에는 응용 프로그램의 성능을 향상 시킬 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-235">If you expect your SQL statement to return only a single row, specifying `SingleRow` as the <xref:System.Data.CommandBehavior> value may improve application performance.</span></span>  
  
 <span data-ttu-id="4fabf-236">설정 해야는 <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> 속성을 저장된 프로시저에 대 한 전체 ODBC 호출 구문입니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-236">You should set the <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> property to the full ODBC call syntax for stored procedures.</span></span> <span data-ttu-id="4fabf-237">명령이 호출 하는 경우이 저장된 프로시저를 실행 <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-237">The command executes this stored procedure when you call <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>.</span></span>  
  
 <span data-ttu-id="4fabf-238"><xref:System.Data.Odbc.OdbcDataReader> 크기가 큰 이진 값를 효율적으로 읽을 수 있는 특별 한 모드를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-238">The <xref:System.Data.Odbc.OdbcDataReader> supports a special mode that enables large binary values to be read efficiently.</span></span> <span data-ttu-id="4fabf-239">자세한 내용은 참조는 `SequentialAccess` 에 대 한 설정 <xref:System.Data.CommandBehavior>합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-239">For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4fabf-240">`SequentialAccess` 값 <xref:System.Data.CommandBehavior> 제한 되지 않습니다는 설정; 할 대 이상 순차적 액세스를 해야 합니다는 <xref:System.Data.Odbc.OdbcDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-240">The `SequentialAccess` value of <xref:System.Data.CommandBehavior> is not a limiting setting; it just means that you will have at least sequential access to the <xref:System.Data.Odbc.OdbcDataReader>.</span></span> <span data-ttu-id="4fabf-241">예를 들어 SQL Server ODBC 드라이버에서을 사용 하는 하면 `SequentialAccess` 모드로 이동할 수 있습니다의 첫 번째 열에는 <xref:System.Data.Odbc.OdbcDataReader> 를 읽은 후 다른 모든 열을 통해 순차적으로 행.</span><span class="sxs-lookup"><span data-stu-id="4fabf-241">For example, when you use the SQL Server ODBC Driver in `SequentialAccess` mode, you can still move to the first column of an <xref:System.Data.Odbc.OdbcDataReader> row after having read through all the other columns sequentially.</span></span>  
  
 <span data-ttu-id="4fabf-242">반면는 <xref:System.Data.Odbc.OdbcDataReader> 을 사용 하는 연결 된 <xref:System.Data.Odbc.OdbcConnection> 역할을 수행는 <xref:System.Data.Odbc.OdbcDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-242">While the <xref:System.Data.Odbc.OdbcDataReader> is used, the associated <xref:System.Data.Odbc.OdbcConnection> is busy serving the <xref:System.Data.Odbc.OdbcDataReader>.</span></span> <span data-ttu-id="4fabf-243">이 상태 동안에 없는 다른 작업을 수행할 수에 <xref:System.Data.Odbc.OdbcConnection> 닫지 합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-243">While in this state, no other operations can be performed on the <xref:System.Data.Odbc.OdbcConnection> other than closing it.</span></span> <span data-ttu-id="4fabf-244">이 대/소문자를 호출 하기 전에 <xref:System.Data.Odbc.OdbcDataReader.Close%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="4fabf-244">This is the case until you call the <xref:System.Data.Odbc.OdbcDataReader.Close%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4fabf-245">경우는 <xref:System.Data.Odbc.OdbcDataReader> 사용 하 여 만든 <xref:System.Data.CommandBehavior> 로 설정 `CloseConnection`닫는는 <xref:System.Data.Odbc.OdbcDataReader> 자동으로 연결을 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-245">If the <xref:System.Data.Odbc.OdbcDataReader> is created with <xref:System.Data.CommandBehavior> set to `CloseConnection`, closing the <xref:System.Data.Odbc.OdbcDataReader> closes the connection automatically.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalar">
      <MemberSignature Language="C#" Value="public override object ExecuteScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ExecuteScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.ExecuteScalar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ExecuteScalar();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4fabf-246">쿼리를 실행하고 쿼리에서 반환된 결과 집합에서 첫 번째 행의 첫 번째 열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-246">Executes the query, and returns the first column of the first row in the result set returned by the query.</span>
          </span>
          <span data-ttu-id="4fabf-247">다른 열이나 행은 무시됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-247">Additional columns or rows are ignored.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4fabf-248">결과 집합의 첫 행의 첫 열 또는 결과 집합이 비어있을 경우 null 참조입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-248">The first column of the first row in the result set, or a null reference if the result set is empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fabf-249">사용 된 <xref:System.Data.Odbc.OdbcCommand.ExecuteScalar%2A> 데이터 원본에서 단일 값 (예를 들어 집계 값)를 검색 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-249">Use the <xref:System.Data.Odbc.OdbcCommand.ExecuteScalar%2A> method to retrieve a single value (for example, an aggregate value) from a data source.</span></span> <span data-ttu-id="4fabf-250">사용 하 여 보다 적은 코드가 필요는 <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> 메서드를 다음에서 반환 된 데이터에서 단일 값을 생성 하는 데 필요한 작업을 수행 하는 <xref:System.Data.Odbc.OdbcDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-250">This requires less code than using the <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> method, and then performing the operations required to generate the single value from the data returned by an <xref:System.Data.Odbc.OdbcDataReader>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Odbc.OdbcParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As OdbcParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Odbc::OdbcParameterCollection ^ Parameters { System::Data::Odbc::OdbcParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4fabf-251">
            <see cref="T:System.Data.Odbc.OdbcParameterCollection" />를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-251">Gets the <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4fabf-252">SQL 문 또는 저장 프로시저의 매개 변수</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-252">The parameters of the SQL statement or stored procedure.</span>
          </span>
          <span data-ttu-id="4fabf-253">기본값은 빈 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-253">The default is an empty collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fabf-254">때 <xref:System.Data.Odbc.OdbcCommand.CommandType%2A> 로 설정 된 `Text`,.NET Framework Data Provider for ODBC에 명명 된 전달은 지원 되지 않습니다 SQL 문 또는 저장된 프로시저에서 호출 하는 매개 변수는 <xref:System.Data.Odbc.OdbcCommand>합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-254">When <xref:System.Data.Odbc.OdbcCommand.CommandType%2A> is set to `Text`, the .NET Framework Data Provider for ODBC does not support passing named parameters to an SQL statement or to a stored procedure called by an <xref:System.Data.Odbc.OdbcCommand>.</span></span> <span data-ttu-id="4fabf-255">두이 경우 모두에서 물음표 (?) 자리 표시자를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-255">In either of these cases, use the question mark (?) placeholder.</span></span> <span data-ttu-id="4fabf-256">예:</span><span class="sxs-lookup"><span data-stu-id="4fabf-256">For example:</span></span>  
  
```  
SELECT * FROM Customers WHERE CustomerID = ?  
```  
  
 <span data-ttu-id="4fabf-257">순서를 <xref:System.Data.Odbc.OdbcParameter> 개체에 추가 됩니다는 <xref:System.Data.Odbc.OdbcParameterCollection> 명령 텍스트에서 매개 변수에 물음표 자리 표시자의 위치와 직접 일치 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-257">The order in which <xref:System.Data.Odbc.OdbcParameter> objects are added to the <xref:System.Data.Odbc.OdbcParameterCollection> must directly correspond to the position of the question mark placeholder for the parameter in the command text.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4fabf-258">컬렉션의 매개 변수를 실행 하면 쿼리의 요구 사항을 일치 하지 않으면 오류가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-258">If the parameters in the collection do not match the requirements of the query to be executed, an error may result.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.Odbc.OdbcParameter" />
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public override void Prepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Prepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.Prepare" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Prepare ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Prepare();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4fabf-259">데이터 소스에 대해 명령의 준비된 또는 컴파일된 버전을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-259">Creates a prepared or compiled version of the command at the data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fabf-260"><xref:System.Data.Odbc.OdbcCommand.Prepare%2A> 메서드 호출 ODBC `SQLPrepare` 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-260">The <xref:System.Data.Odbc.OdbcCommand.Prepare%2A> method calls the ODBC `SQLPrepare` function.</span></span> <span data-ttu-id="4fabf-261">데이터 원본 및 기본 ODBC 드라이버의 기능에 따라 데이터 형식 같은 매개 변수 정보 문이 준비 되거나 실행 되지 않은 경우 모든 매개 변수가 바인딩되면 모든 매개 변수에 연결 되어 있으면 때 체크 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-261">Depending on the capabilities of the underlying ODBC driver and data source, parameter information such as data types may be checked when the statement is prepared, if all parameters have been bound, or when it is executed if not all parameters have been bound.</span></span> <span data-ttu-id="4fabf-262">응용 프로그램에 동일한 SQL 문을 준비 하기 전에 SQL 문을 이전에 적용 하는 모든 매개 변수 바인딩 해제 해야 점에 상호 운용성을 극대화 <xref:System.Data.Odbc.OdbcCommand>합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-262">For maximum interoperability, an application should unbind all parameters that applied to a previous SQL statement before preparing a new SQL statement on the same <xref:System.Data.Odbc.OdbcCommand>.</span></span> <span data-ttu-id="4fabf-263">이 새 SQL 문에 적용 되 고 이전 매개 변수 정보가 발생 하는 오류를 방지할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-263">This prevents errors that are caused by previous parameter information being applied to the new SQL statement.</span></span>  
  
 <span data-ttu-id="4fabf-264">호출한 후 Execute 메서드를 호출 하는 경우 <xref:System.Data.Odbc.OdbcCommand.Prepare%2A>에 지정 된 값 보다 큰 모든 매개 변수 값은 <xref:System.Data.Odbc.OdbcParameter.Size%2A> 속성이 자동으로 매개 변수의 원래 지정 된 크기로 잘리고 잘림 오류가 반환 되지 않습니다 .</span><span class="sxs-lookup"><span data-stu-id="4fabf-264">If you call an Execute method after you call <xref:System.Data.Odbc.OdbcCommand.Prepare%2A>, any parameter value that is larger than the value specified by the <xref:System.Data.Odbc.OdbcParameter.Size%2A> property is automatically truncated to the original specified size of the parameter, and no truncation errors are returned.</span></span>  
  
 <span data-ttu-id="4fabf-265">출력 매개 변수 (준비) 여부는 사용자 지정 데이터 형식이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-265">Output parameters (whether prepared or not) must have a user-specified data type.</span></span> <span data-ttu-id="4fabf-266">최대 가변 길이 데이터 형식 지정도 지정 해야 <xref:System.Data.Odbc.OdbcParameter.Size%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-266">If you specify a variable length data type, you must also specify the maximum <xref:System.Data.Odbc.OdbcParameter.Size%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4fabf-267">
            <see cref="P:System.Data.Odbc.OdbcCommand.Connection" />이 설정되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-267">The <see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> is not set.</span>
          </span>
          <span data-ttu-id="4fabf-268">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-268">-or-</span>
          </span>
          <span data-ttu-id="4fabf-269">
            <see cref="P:System.Data.Odbc.OdbcCommand.Connection" />이 <see cref="M:System.Data.Odbc.OdbcConnection.Open" />이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-269">The <see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> is not <see cref="M:System.Data.Odbc.OdbcConnection.Open" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResetCommandTimeout">
      <MemberSignature Language="C#" Value="public void ResetCommandTimeout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetCommandTimeout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.ResetCommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetCommandTimeout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetCommandTimeout();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4fabf-270">
            <see cref="P:System.Data.Odbc.OdbcCommand.CommandTimeout" /> 속성을 기본값으로 다시 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-270">Resets the <see cref="P:System.Data.Odbc.OdbcCommand.CommandTimeout" /> property to the default value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fabf-271">기본값은 <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> 30 초입니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-271">The default value of the <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> is 30 seconds.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4fabf-272">이 멤버에 대한 설명은 <see cref="M:System.ICloneable.Clone" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-272">For a description of this member, see <see cref="M:System.ICloneable.Clone" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4fabf-273">이 인스턴스의 복사본인 새 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-273">A new <see cref="T:System.Object" /> that is a copy of this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fabf-274">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="4fabf-274">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4fabf-275"><xref:System.Data.Odbc.OdbcCommand> 인스턴스가 <xref:System.ICloneable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-275">It can be used only when the <xref:System.Data.Odbc.OdbcCommand> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Odbc.OdbcTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As OdbcTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Odbc::OdbcTransaction ^ Transaction { System::Data::Odbc::OdbcTransaction ^ get(); void set(System::Data::Odbc::OdbcTransaction ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4fabf-276">
            <see cref="T:System.Data.Odbc.OdbcTransaction" />가 실행되는 <see cref="T:System.Data.Odbc.OdbcCommand" />을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-276">Gets or sets the <see cref="T:System.Data.Odbc.OdbcTransaction" /> within which the <see cref="T:System.Data.Odbc.OdbcCommand" /> executes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4fabf-277">
            <see cref="T:System.Data.Odbc.OdbcTransaction" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-277">An <see cref="T:System.Data.Odbc.OdbcTransaction" />.</span>
          </span>
          <span data-ttu-id="4fabf-278">기본값은 null입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-278">The default is a null value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fabf-279">설정할 수 없습니다.는 <xref:System.Data.Odbc.OdbcCommand.Transaction%2A> 특정 값으로 이미 설정 되어 있으며 명령을 실행 중 경우 속성을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-279">You cannot set the <xref:System.Data.Odbc.OdbcCommand.Transaction%2A> property if it is already set to a specific value, and the command is in the process of executing.</span></span> <span data-ttu-id="4fabf-280">트랜잭션 속성을 설정 하는 경우는 <xref:System.Data.Odbc.OdbcTransaction> 동일 하 게 연결 되어 있지 않은 개체 <xref:System.Data.Odbc.OdbcConnection> 로 <xref:System.Data.Odbc.OdbcCommand> 개체 문을 실행 하려고 하면 다음에 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-280">If you set the transaction property to an <xref:System.Data.Odbc.OdbcTransaction> object that is not connected to the same <xref:System.Data.Odbc.OdbcConnection> as the <xref:System.Data.Odbc.OdbcCommand> object, an exception will be thrown the next time that you try to execute a statement.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedRowSource">
      <MemberSignature Language="C#" Value="public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.UpdateRowSource UpdatedRowSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.UpdatedRowSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UpdatedRowSource As UpdateRowSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::UpdateRowSource UpdatedRowSource { System::Data::UpdateRowSource get(); void set(System::Data::UpdateRowSource value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.UpdateRowSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4fabf-281">**Update** 메서드가 **DataRow**에 명령 결과를 적용하는 방식을 지정하는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-281">Gets or sets a value that specifies how the **Update** method should apply command results to the **DataRow**.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4fabf-282">
            <see cref="T:System.Data.UpdateRowSource" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fabf-282">One of the <see cref="T:System.Data.UpdateRowSource" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fabf-283">기본 <xref:System.Data.UpdateRowSource> 값은 **둘 다** 명령이 자동으로 생성, 하지 않는 한와 마찬가지로 <xref:System.Data.Odbc.OdbcCommandBuilder>,이 경우 기본값은 **None**합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-283">The default <xref:System.Data.UpdateRowSource> value is **Both** unless the command is automatically generated, as with the <xref:System.Data.Odbc.OdbcCommandBuilder>, in which case the default is **None**.</span></span>  
  
 <span data-ttu-id="4fabf-284">사용 하는 방법에 대 한 자세한 내용은 <xref:System.Data.Odbc.OdbcCommand.UpdatedRowSource%2A> 속성 참조 [DataAdapter 매개 변수](~/docs/framework/data/adonet/dataadapter-parameters.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="4fabf-284">For more information about how to use the <xref:System.Data.Odbc.OdbcCommand.UpdatedRowSource%2A> property, see [DataAdapter Parameters](~/docs/framework/data/adonet/dataadapter-parameters.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>