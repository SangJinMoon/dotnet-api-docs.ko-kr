<Type Name="OdbcCommandBuilder" FullName="System.Data.Odbc.OdbcCommandBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="754ba74c3af6b88ffda378f845dd52a3dc15dff0" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OdbcCommandBuilder : System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OdbcCommandBuilder extends System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Data.Odbc.OdbcCommandBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OdbcCommandBuilder&#xA;Inherits DbCommandBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class OdbcCommandBuilder sealed : System::Data::Common::DbCommandBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Odbc</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommandBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="6b7f9-101">연결된 데이터 소스로 <see cref="T:System.Data.DataSet" />의 변경 내용을 조정하는 데 사용되는 단일 테이블 명령을 자동으로 생성합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6b7f9-101">Automatically generates single-table commands that are used to reconcile changes made to a <see cref="T:System.Data.DataSet" /> with the associated data source.</span>
      </span>
      <span data-ttu-id="6b7f9-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6b7f9-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b7f9-103"><xref:System.Data.Odbc.OdbcDataAdapter> 변경 내용을 조정 하는 데 필요한 SQL 문을 자동으로 생성 되지 않습니다는 <xref:System.Data.DataSet> 데이터 원본과 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-103">The <xref:System.Data.Odbc.OdbcDataAdapter> does not automatically generate the SQL statements required to reconcile changes made to a <xref:System.Data.DataSet> associated with the data source.</span></span> <span data-ttu-id="6b7f9-104">만들 수 있습니다는 <xref:System.Data.Odbc.OdbcCommandBuilder> 설정 하 여 단일 테이블 업데이트에 대 한 SQL 문을 생성 하는 개체는 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> 의 속성은 <xref:System.Data.Odbc.OdbcDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-104">However, you can create an <xref:System.Data.Odbc.OdbcCommandBuilder> object that generates SQL statements for single-table updates by setting the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> property of the <xref:System.Data.Odbc.OdbcDataAdapter>.</span></span> <span data-ttu-id="6b7f9-105"><xref:System.Data.Odbc.OdbcCommandBuilder> 설정 하지 않는 추가적인 모든 SQL 문을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-105">The <xref:System.Data.Odbc.OdbcCommandBuilder> then generates any additional SQL statements that you do not set.</span></span>  
  
 <span data-ttu-id="6b7f9-106">간의 관계는 <xref:System.Data.Odbc.OdbcDataAdapter> 와 해당 <xref:System.Data.Odbc.OdbcCommandBuilder> 일대일은 항상 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-106">The relationship between an <xref:System.Data.Odbc.OdbcDataAdapter> and its corresponding <xref:System.Data.Odbc.OdbcCommandBuilder> is always one-to-one.</span></span> <span data-ttu-id="6b7f9-107">설정 하면이 관계를 만들려면는 <xref:System.Data.Odbc.OdbcDataAdapter> 의 속성은 <xref:System.Data.Odbc.OdbcCommandBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-107">To create this correspondence, you set the <xref:System.Data.Odbc.OdbcDataAdapter> property of the <xref:System.Data.Odbc.OdbcCommandBuilder> object.</span></span> <span data-ttu-id="6b7f9-108">이 인해는 <xref:System.Data.Odbc.OdbcCommandBuilder> 의 출력을 생성 하는 수신기로 등록 <xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating> 에 영향을 주는 이벤트는 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-108">This causes the <xref:System.Data.Odbc.OdbcCommandBuilder> to register itself as a listener, which produces the output of <xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating> events that affect the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="6b7f9-109">INSERT, UPDATE 또는 DELETE 문을 생성 하는 <xref:System.Data.Odbc.OdbcCommandBuilder> 사용 하 여는 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> 속성을 필수 메타 데이터 집합을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-109">To generate INSERT, UPDATE, or DELETE statements, the <xref:System.Data.Odbc.OdbcCommandBuilder> uses the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> property to retrieve a required set of metadata.</span></span> <span data-ttu-id="6b7f9-110">값을 변경 하면 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> 후 메타 데이터를 검색 한 첫 번째 업데이트 이후 호출 해야 하는 등의 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 메서드 메타 데이터를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-110">If you change the value of <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> after the metadata has been retrieved, such as after the first update, you should then call the <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> method to update the metadata.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6b7f9-111">SELECT 문은에 할당 된 경우는 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> 속성 별칭이 지정 된 열 이름, 결과 삽입, 업데이트, 사용 및 DELETE 문을 수 정확 하지 않을 수 또는 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-111">If the SELECT statement assigned to the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> property uses aliased column names, the resulting INSERT, UPDATE, and DELETE statements may be inaccurate or fail.</span></span> <span data-ttu-id="6b7f9-112">기본 ODBC 드라이버는 열 별칭에 대 한 적절 한 기본 열 이름을 제공할 수 없는 경우 (SQL_DESC_BASE_COLUMN_NAME 값을 사용 하 여 `SQLColAttribute`), 별칭 이름을 생성 된 INSERT, UPDATE 및 DELETE 문에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-112">If the underlying ODBC driver cannot provide the appropriate base column name for the alias column name (using the SQL_DESC_BASE_COLUMN_NAME value of `SQLColAttribute`), the alias name could be used in the generated INSERT, UPDATE, and DELETE statements.</span></span> <span data-ttu-id="6b7f9-113">예를 들어 Microsoft ODBC Driver for Oracle 기본 열 이름으로 별칭 이름을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-113">For example, the Microsoft ODBC Driver for Oracle returns the alias name as the base column name.</span></span> <span data-ttu-id="6b7f9-114">따라서 생성 된 INSERT, UPDATE 및 DELETE 문은 오류가 발생 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-114">Therefore, the generated INSERT, UPDATE, and DELETE statements would cause errors.</span></span>  
  
 <span data-ttu-id="6b7f9-115"><xref:System.Data.Odbc.OdbcCommandBuilder> 또한 사용 하 여는 <xref:System.Data.Odbc.OdbcCommand.Connection%2A>, <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>, 및 <xref:System.Data.Odbc.OdbcCommand.Transaction%2A> 속성에서 참조 되는 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-115">The <xref:System.Data.Odbc.OdbcCommandBuilder> also uses the <xref:System.Data.Odbc.OdbcCommand.Connection%2A>, <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>, and <xref:System.Data.Odbc.OdbcCommand.Transaction%2A> properties referenced by the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="6b7f9-116">호출 해야 합니다 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 이러한 속성 중 하나 이상이 수정 되는 경우 또는 경우의 값은 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> 자체 속성을 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-116">The user should call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if one or more of these properties are modified, or if the value of the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> property itself is changed.</span></span> <span data-ttu-id="6b7f9-117">그렇지 않은 경우는 <xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A>, <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A>, 및 <xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A> 속성 이전 값을 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-117">Otherwise the <xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A>, <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A>, and <xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A> properties retain their previous values.</span></span>  
  
 <span data-ttu-id="6b7f9-118">호출 하는 경우 <xref:System.ComponentModel.Component.Dispose%2A>, <xref:System.Data.Odbc.OdbcCommandBuilder> 에서 분리는 <xref:System.Data.Odbc.OdbcDataAdapter>, 생성된 된 명령을 더 이상 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-118">If you call <xref:System.ComponentModel.Component.Dispose%2A>, the <xref:System.Data.Odbc.OdbcCommandBuilder> is disassociated from the <xref:System.Data.Odbc.OdbcDataAdapter>, and the generated commands are no longer used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b7f9-119">다음 예제에서는 <xref:System.Data.Odbc.OdbcCommand>함께 <xref:System.Data.Odbc.OdbcDataAdapter> 및 <xref:System.Data.Odbc.OdbcConnection>, 데이터 원본에서 행을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-119">The following example uses <xref:System.Data.Odbc.OdbcCommand>, together with <xref:System.Data.Odbc.OdbcDataAdapter> and <xref:System.Data.Odbc.OdbcConnection>, to select rows from a data source.</span></span> <span data-ttu-id="6b7f9-120">이 예제에서는 초기화 된 전달 <xref:System.Data.DataSet>, 연결 문자열, 쿼리 문자열을는 SQL SELECT 문 및 데이터 원본 테이블의 이름을 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-120">The example is passed an initialized <xref:System.Data.DataSet>, a connection string, a query string that is an SQL SELECT statement, and a string that is the name of the data source table.</span></span> <span data-ttu-id="6b7f9-121">이 예에서는 다음 만듭니다는 <xref:System.Data.Odbc.OdbcCommandBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-121">The example then creates an <xref:System.Data.Odbc.OdbcCommandBuilder>.</span></span>  
  
 [!code-csharp[Classic WebData OdbcCommandBuilder#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcCommandBuilder/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OdbcCommandBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcCommandBuilder/VB/mysample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6b7f9-122">
            <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-122">Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcCommandBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcCommandBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6b7f9-123">
            <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-123">Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b7f9-124">기본 생성자는 모든 필드를를 기본값으로 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-124">The base constructor initializes all fields to their default values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcCommandBuilder (System.Data.Odbc.OdbcDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Odbc.OdbcDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.#ctor(System.Data.Odbc.OdbcDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (adapter As OdbcDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcCommandBuilder(System::Data::Odbc::OdbcDataAdapter ^ adapter);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Odbc.OdbcDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">
          <span data-ttu-id="6b7f9-125">이 <see cref="T:System.Data.Odbc.OdbcDataAdapter" />와 연결할 <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-125">An <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> object to associate with this <see cref="T:System.Data.Odbc.OdbcCommandBuilder" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b7f9-126">관련 <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> 개체를 사용하여 <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-126">Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> class with the associated <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b7f9-127"><xref:System.Data.Odbc.OdbcCommandBuilder> 자체에 대 한 수신기로 등록 <xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating> 에서 생성 되는 이벤트는 <xref:System.Data.Odbc.OdbcDataAdapter> 이 속성에 지정 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-127">The <xref:System.Data.Odbc.OdbcCommandBuilder> registers itself as a listener for <xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating> events that are generated by the <xref:System.Data.Odbc.OdbcDataAdapter> specified in this property.</span></span>  
  
 <span data-ttu-id="6b7f9-128">새 인스턴스를 만들 때 <xref:System.Data.Odbc.OdbcCommandBuilder>, 모든 기존 <xref:System.Data.Odbc.OdbcCommandBuilder> 이 연관 <xref:System.Data.Odbc.OdbcDataAdapter> 해제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-128">When you create a new instance of <xref:System.Data.Odbc.OdbcCommandBuilder>, any existing <xref:System.Data.Odbc.OdbcCommandBuilder> associated with this <xref:System.Data.Odbc.OdbcDataAdapter> is released.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyParameterInfo">
      <MemberSignature Language="C#" Value="protected override void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow datarow, System.Data.StatementType statementType, bool whereClause);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ApplyParameterInfo(class System.Data.Common.DbParameter parameter, class System.Data.DataRow datarow, valuetype System.Data.StatementType statementType, bool whereClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ApplyParameterInfo(System::Data::Common::DbParameter ^ parameter, System::Data::DataRow ^ datarow, System::Data::StatementType statementType, bool whereClause);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Common.DbParameter" />
        <Parameter Name="datarow" Type="System.Data.DataRow" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="whereClause" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parameter">To be added.</param>
        <param name="datarow">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="whereClause">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataAdapter">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcDataAdapter DataAdapter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Odbc.OdbcDataAdapter DataAdapter" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommandBuilder.DataAdapter" />
      <MemberSignature Language="VB.NET" Value="Public Property DataAdapter As OdbcDataAdapter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Odbc::OdbcDataAdapter ^ DataAdapter { System::Data::Odbc::OdbcDataAdapter ^ get(); void set(System::Data::Odbc::OdbcDataAdapter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcDataAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b7f9-129">이 <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> 개체에서 SQL 문을 만들 대상 <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> 개체를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-129">Gets or sets an <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> object for which this <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> object will generate SQL statements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b7f9-130">이 <see cref="T:System.Data.Odbc.OdbcDataAdapter" />와 관련된 <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-130">An <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> object that is associated with this <see cref="T:System.Data.Odbc.OdbcCommandBuilder" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b7f9-131"><xref:System.Data.Odbc.OdbcCommandBuilder> 자체에 대 한 수신기로 등록 <xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating> 에서 생성 되는 이벤트는 <xref:System.Data.Odbc.OdbcDataAdapter> 이 속성에 지정 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-131">The <xref:System.Data.Odbc.OdbcCommandBuilder> registers itself as a listener for <xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating> events that are generated by the <xref:System.Data.Odbc.OdbcDataAdapter> specified in this property.</span></span>  
  
 <span data-ttu-id="6b7f9-132">새 인스턴스를 만들 때 <xref:System.Data.Odbc.OdbcCommandBuilder>, 모든 기존 <xref:System.Data.Odbc.OdbcCommandBuilder> 이 연관 <xref:System.Data.Odbc.OdbcDataAdapter> 해제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-132">When you create a new instance of <xref:System.Data.Odbc.OdbcCommandBuilder>, any existing <xref:System.Data.Odbc.OdbcCommandBuilder> associated with this <xref:System.Data.Odbc.OdbcDataAdapter> is released.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeriveParameters">
      <MemberSignature Language="C#" Value="public static void DeriveParameters (System.Data.Odbc.OdbcCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeriveParameters(class System.Data.Odbc.OdbcCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters(System.Data.Odbc.OdbcCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeriveParameters (command As OdbcCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeriveParameters(System::Data::Odbc::OdbcCommand ^ command);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Odbc.OdbcCommand" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="6b7f9-133">매개 변수 정보가 파생될 저장 프로시저를 참조하는 <see cref="T:System.Data.Odbc.OdbcCommand" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-133">The <see cref="T:System.Data.Odbc.OdbcCommand" /> referencing the stored procedure from which the parameter information is to be derived.</span>
          </span>
          <span data-ttu-id="6b7f9-134">파생된 매개 변수는 <see cref="P:System.Data.Odbc.OdbcCommand.Parameters" />의 <see cref="T:System.Data.Odbc.OdbcCommand" /> 컬렉션에 추가됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-134">The derived parameters are added to the <see cref="P:System.Data.Odbc.OdbcCommand.Parameters" /> collection of the <see cref="T:System.Data.Odbc.OdbcCommand" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b7f9-135">
            <see cref="T:System.Data.Odbc.OdbcCommand" />에 지정된 저장 프로시저의 매개 변수 정보를 검색하여 지정된 <see cref="P:System.Data.Odbc.OdbcCommand.Parameters" /> 개체의 <see cref="T:System.Data.Odbc.OdbcCommand" /> 컬렉션을 채웁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-135">Retrieves parameter information from the stored procedure specified in the <see cref="T:System.Data.Odbc.OdbcCommand" /> and populates the <see cref="P:System.Data.Odbc.OdbcCommand.Parameters" /> collection of the specified <see cref="T:System.Data.Odbc.OdbcCommand" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b7f9-136"><xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A> 에 대 한 모든 기존 매개 변수 정보는 <xref:System.Data.Odbc.OdbcCommand>합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-136"><xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A> overwrites any existing parameter information for the <xref:System.Data.Odbc.OdbcCommand>.</span></span>  
  
 <span data-ttu-id="6b7f9-137"><xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A> 정보를 가져오는 데이터 원본에 추가로 호출을 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-137"><xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A> requires an additional call to the data source to obtain the information.</span></span> <span data-ttu-id="6b7f9-138">매개 변수 정보는 사전에 알고 있는 경우 정보를 명시적으로 설정 하 여 매개 변수 컬렉션을 채우는 데 더 효율적입니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-138">If the parameter information is known in advance, it is more efficient to populate the parameters collection by setting the information explicitly.</span></span>  
  
 <span data-ttu-id="6b7f9-139">만 사용할 수 있습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A> 저장된 프로시저와 함께 합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-139">You can only use <xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A> with stored procedures.</span></span> <span data-ttu-id="6b7f9-140">사용할 수 없습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A> 채우는 데는 <xref:System.Data.Odbc.OdbcParameterCollection> 임의의 Transact SQL 문, 매개 변수가 있는 SELECT 문 처럼 합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-140">You cannot use <xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A> to populate the <xref:System.Data.Odbc.OdbcParameterCollection> with arbitrary Transact-SQL statements, such as a parameterized SELECT statement.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6b7f9-141">내부 ODBC 드라이버가 저장 프로시저 매개 변수 정보 반환을 지원하지 않거나, 명령 텍스트가 유효한 저장 프로시저 이름이 아니거나, 지정된 <see cref="T:System.Data.CommandType" />이 <see langword="CommandType.StoredProcedure" />가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-141">The underlying ODBC driver does not support returning stored procedure parameter information, or the command text is not a valid stored procedure name, or the <see cref="T:System.Data.CommandType" /> specified was not <see langword="CommandType.StoredProcedure" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDeleteCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6b7f9-142">데이터 소스에서 삭제하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Odbc.OdbcCommand" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-142">Gets the automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform deletions at the data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b7f9-143">사용할 수 있습니다는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Odbc.OdbcCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-143">You can use the <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Odbc.OdbcCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="6b7f9-144">사용할 수도 있습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> 의 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-144">You can also use <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="6b7f9-145">예를 들어, 호출할 수 있습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> 및 수정 된 <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> 값을 복사한 다음에 명시적으로 설정 하는 <xref:System.Data.Odbc.OdbcDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-145">For example, you might call <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> and modify the <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.Odbc.OdbcDataAdapter>.</span></span>  
  
 <span data-ttu-id="6b7f9-146">명시적으로 호출 해야 SQL 문을 처음 생성 후 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-146">After the SQL statement is first generated, you must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="6b7f9-147">그렇지 않은 경우는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> 여전히 됩니다 수 정보를에서 사용 하는 이전 문을 올바르지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-147">Otherwise, the <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> still will be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="6b7f9-148">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-148">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand GetDeleteCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcCommand GetDeleteCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand () As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcCommand ^ GetDeleteCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6b7f9-149">데이터 소스에서 삭제하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Odbc.OdbcCommand" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-149">Gets the automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform deletions at the data source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b7f9-150">삭제하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Odbc.OdbcCommand" /> 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-150">The automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform deletions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b7f9-151">사용할 수 있습니다는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Odbc.OdbcCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-151">You can use the <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Odbc.OdbcCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="6b7f9-152">사용할 수도 있습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> 의 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-152">You can also use <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="6b7f9-153">예를 들어, 호출할 수 있습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> 및 수정 된 <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> 값을 복사한 다음에 명시적으로 설정 하는 <xref:System.Data.Odbc.OdbcDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-153">For example, you might call <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> and modify the <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.Odbc.OdbcDataAdapter>.</span></span>  
  
 <span data-ttu-id="6b7f9-154">명시적으로 호출 해야 SQL 문을 처음 생성 후 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-154">After the SQL statement is first generated, you must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="6b7f9-155">그렇지 않은 경우는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> 이전 문의 올바르지 않을 수 있는 정보를에서 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-155">Otherwise, the <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> will be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="6b7f9-156">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-156">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand GetDeleteCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcCommand GetDeleteCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand (useColumnsForParameterNames As Boolean) As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcCommand ^ GetDeleteCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">
          <span data-ttu-id="6b7f9-157">
            <see langword="true" />인 경우 가능하면 열 이름과 일치하는 매개 변수 이름을 생성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-157">If <see langword="true" />, generate parameter names matching column names, if it is possible.</span>
          </span>
          <span data-ttu-id="6b7f9-158">
            <see langword="false" />이면 @p1, @p2 등을 생성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-158">If <see langword="false" />, generate @p1, @p2, and so on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b7f9-159">데이터 소스에서 삭제하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Odbc.OdbcCommand" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-159">Gets the automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform deletions at the data source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b7f9-160">삭제하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Odbc.OdbcCommand" /> 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-160">The automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform deletions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b7f9-161">사용할 수 있습니다는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Odbc.OdbcCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-161">You can use the <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Odbc.OdbcCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="6b7f9-162">사용할 수도 있습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> 의 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-162">You can also use <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="6b7f9-163">예를 들어, 호출할 수 있습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> 및 수정 된 <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> 값을 복사한 다음에 명시적으로 설정 하는 <xref:System.Data.Odbc.OdbcDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-163">For example, you might call <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> and modify the <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.Odbc.OdbcDataAdapter>.</span></span>  
  
 <span data-ttu-id="6b7f9-164">명시적으로 호출 해야 SQL 문을 처음 생성 후 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-164">After the SQL statement is first generated, you must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="6b7f9-165">그렇지 않은 경우는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> 이전 문의 올바르지 않을 수 있는 정보를에서 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-165">Otherwise, the <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> will be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="6b7f9-166">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-166">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>.</span></span>  
  
 <span data-ttu-id="6b7f9-167">매개 변수 이름을 생성할 때의 기본 동작을 사용 하는 @p1, @p2, 다양 한 매개 변수 대.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-167">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="6b7f9-168">전달 `true` 에 대 한는 `useColumnsForParameterNames` 매개 변수에 <xref:System.Data.Odbc.OdbcCommandBuilder> 대신 열 이름에 따라 매개 변수를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-168">Passing `true` for the `useColumnsForParameterNames` parameter lets you force the <xref:System.Data.Odbc.OdbcCommandBuilder> to generate parameters based on the column names instead.</span></span> <span data-ttu-id="6b7f9-169">다음 조건에 해당 하는 경우에 성공 합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-169">This succeeds only if the following conditions are met:</span></span>  
  
-   <span data-ttu-id="6b7f9-170"><xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> 를 지정 하면이 고 길이 생성 된 매개 변수 이름 보다 크거나 같은 합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-170">The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> has been specified, and its length is equal to or greater than the generated parameter name.</span></span>  
  
-   <span data-ttu-id="6b7f9-171">생성 된 매개 변수 이름에 지정 된 조건에 부합는 <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> 정규식입니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-171">The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> regular expression.</span></span>  
  
-   <span data-ttu-id="6b7f9-172">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-172">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> is specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInsertCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6b7f9-173">데이터 소스에서 삽입하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Odbc.OdbcCommand" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-173">Gets the automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform insertions at the data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b7f9-174">사용할 수 있습니다는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Odbc.OdbcCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-174">You can use the <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Odbc.OdbcCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="6b7f9-175">사용할 수도 있습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> 의 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-175">You can also use <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="6b7f9-176">예를 들어, 호출할 수 있습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> 및 수정 된 <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> 값을 복사한 다음에 명시적으로 설정 하는 <xref:System.Data.Odbc.OdbcDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-176">For example, you might call <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> and modify the <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.Odbc.OdbcDataAdapter>.</span></span>  
  
 <span data-ttu-id="6b7f9-177">명시적으로 호출 해야 SQL 문을 처음 생성 후 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-177">After the SQL statement is first generated, you must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="6b7f9-178">그렇지 않은 경우는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> 이전 문의 올바르지 않을 수 있는 정보를에서 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-178">Otherwise, the <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> will be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="6b7f9-179">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-179">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand GetInsertCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcCommand GetInsertCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand () As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcCommand ^ GetInsertCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6b7f9-180">데이터 소스에서 삽입하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Odbc.OdbcCommand" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-180">Gets the automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform insertions at the data source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b7f9-181">삽입하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Odbc.OdbcCommand" /> 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-181">The automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform insertions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b7f9-182">사용할 수 있습니다는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Odbc.OdbcCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-182">You can use the <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Odbc.OdbcCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="6b7f9-183">사용할 수도 있습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> 의 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-183">You can also use <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="6b7f9-184">예를 들어, 호출할 수 있습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> 및 수정 된 <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> 값을 복사한 다음에 명시적으로 설정 하는 <xref:System.Data.Odbc.OdbcDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-184">For example, you might call <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> and modify the <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.Odbc.OdbcDataAdapter>.</span></span>  
  
 <span data-ttu-id="6b7f9-185">명시적으로 호출 해야 SQL 문을 처음 생성 후 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-185">After the SQL statement is first generated, you must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="6b7f9-186">그렇지 않은 경우는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> 여전히 됩니다 수 정보를에서 사용 하는 이전 문을 올바르지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-186">Otherwise, the <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> still will be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="6b7f9-187">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-187">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand GetInsertCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcCommand GetInsertCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand (useColumnsForParameterNames As Boolean) As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcCommand ^ GetInsertCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">
          <span data-ttu-id="6b7f9-188">
            <see langword="true" />인 경우 가능하면 열 이름과 일치하는 매개 변수 이름을 생성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-188">If <see langword="true" />, generate parameter names matching column names, if it is possible.</span>
          </span>
          <span data-ttu-id="6b7f9-189">
            <see langword="false" />이면 @p1, @p2 등을 생성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-189">If <see langword="false" />, generate @p1, @p2, and so on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b7f9-190">데이터 소스에서 삽입하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Odbc.OdbcCommand" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-190">Gets the automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform insertions at the data source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b7f9-191">삽입하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Odbc.OdbcCommand" /> 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-191">The automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform insertions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b7f9-192">사용할 수 있습니다는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Odbc.OdbcCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-192">You can use the <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Odbc.OdbcCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="6b7f9-193">사용할 수도 있습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> 의 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-193">You can also use <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="6b7f9-194">예를 들어, 호출할 수 있습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> 및 수정 된 <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> 값을 복사한 다음에 명시적으로 설정 하는 <xref:System.Data.Odbc.OdbcDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-194">For example, you might call <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> and modify the <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.Odbc.OdbcDataAdapter>.</span></span>  
  
 <span data-ttu-id="6b7f9-195">명시적으로 호출 해야 SQL 문을 처음 생성 후 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-195">After the SQL statement is first generated, you must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="6b7f9-196">그렇지 않은 경우는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> 이전 문의 올바르지 않을 수 있는 정보를에서 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-196">Otherwise, the <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> will be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="6b7f9-197">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-197">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>.</span></span>  
  
 <span data-ttu-id="6b7f9-198">매개 변수 이름을 생성할 때의 기본 동작을 사용 하는 @p1, @p2, 다양 한 매개 변수 대.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-198">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="6b7f9-199">전달 `true` 에 대 한는 `useColumnsForParameterNames` 매개 변수에 <xref:System.Data.Common.DbCommandBuilder> 대신 열 이름에 따라 매개 변수를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-199">Passing `true` for the `useColumnsForParameterNames` parameter lets you force the <xref:System.Data.Common.DbCommandBuilder> to generate parameters based on the column names instead.</span></span> <span data-ttu-id="6b7f9-200">다음 조건에 해당 하는 경우에 성공 합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-200">This succeeds only if the following conditions are met:</span></span>  
  
-   <span data-ttu-id="6b7f9-201"><xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> 를 지정 하면이 고 길이 생성 된 매개 변수 이름 보다 크거나 같은 합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-201">The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> has been specified, and its length is equal to or greater than the generated parameter name.</span></span>  
  
-   <span data-ttu-id="6b7f9-202">생성 된 매개 변수 이름에 지정 된 조건에 부합는 <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> 정규식입니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-202">The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> regular expression.</span></span>  
  
-   <span data-ttu-id="6b7f9-203">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-203">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> is specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected override string GetParameterName (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterName(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterName (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterName(int parameterOrdinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected override string GetParameterName (string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterName(string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterName (parameterName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterName(System::String ^ parameterName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterPlaceholder">
      <MemberSignature Language="C#" Value="protected override string GetParameterPlaceholder (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterPlaceholder(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetParameterPlaceholder(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterPlaceholder (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterPlaceholder(int parameterOrdinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUpdateCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6b7f9-204">데이터 소스에서 업데이트하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Odbc.OdbcCommand" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-204">Gets the automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform updates at the data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b7f9-205">사용할 수 있습니다는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Odbc.OdbcCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-205">You can use the <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Odbc.OdbcCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="6b7f9-206">사용할 수도 있습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> 의 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-206">You can also use <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="6b7f9-207">예를 들어, 호출할 수 있습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> 및 수정 된 <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> 값을 복사한 다음에 명시적으로 설정 하는 <xref:System.Data.Odbc.OdbcDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-207">For example, you might call <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> and modify the <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.Odbc.OdbcDataAdapter>.</span></span>  
  
 <span data-ttu-id="6b7f9-208">명시적으로 호출 해야 SQL 문을 처음 생성 후 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-208">After the SQL statement is first generated, you must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="6b7f9-209">그렇지 않은 경우는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> 이전 문의 올바르지 않을 수 있는 정보를에서 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-209">Otherwise, the <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> will be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="6b7f9-210">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-210">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand GetUpdateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcCommand GetUpdateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand () As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcCommand ^ GetUpdateCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6b7f9-211">데이터 소스에서 업데이트하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Odbc.OdbcCommand" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-211">Gets the automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform updates at the data source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b7f9-212">업데이트하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Odbc.OdbcCommand" /> 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-212">The automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform updates.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b7f9-213">사용할 수 있습니다는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Odbc.OdbcCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-213">You can use the <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Odbc.OdbcCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="6b7f9-214">사용할 수도 있습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> 의 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-214">You can also use <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="6b7f9-215">예를 들어, 호출할 수 있습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> 및 수정 된 <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> 값을 복사한 다음에 명시적으로 설정 하는 <xref:System.Data.Odbc.OdbcDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-215">For example, you might call <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> and modify the <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.Odbc.OdbcDataAdapter>.</span></span>  
  
 <span data-ttu-id="6b7f9-216">명시적으로 호출 해야 SQL 문을 처음 생성 후 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-216">After the SQL statement is first generated, you must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="6b7f9-217">그렇지 않은 경우는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> 여전히 됩니다 수 정보를에서 사용 하는 이전 문을 올바르지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-217">Otherwise, the <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> still will be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="6b7f9-218">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-218">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand GetUpdateCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcCommand GetUpdateCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand (useColumnsForParameterNames As Boolean) As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcCommand ^ GetUpdateCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">
          <span data-ttu-id="6b7f9-219">
            <see langword="true" />인 경우 가능하면 열 이름과 일치하는 매개 변수 이름을 생성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-219">If <see langword="true" />, generate parameter names matching column names, if it is possible.</span>
          </span>
          <span data-ttu-id="6b7f9-220">
            <see langword="false" />이면 @p1, @p2 등을 생성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-220">If <see langword="false" />, generate @p1, @p2, and so on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b7f9-221">데이터 소스에서 업데이트하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Odbc.OdbcCommand" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-221">Gets the automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform updates at the data source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b7f9-222">업데이트하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Odbc.OdbcCommand" /> 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-222">The automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform updates.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b7f9-223">사용할 수 있습니다는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Odbc.OdbcCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-223">You can use the <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Odbc.OdbcCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="6b7f9-224">사용할 수도 있습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> 의 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-224">You can also use <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="6b7f9-225">예를 들어, 호출할 수 있습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> 및 수정 된 <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> 값을 복사한 다음에 명시적으로 설정 하는 <xref:System.Data.Odbc.OdbcDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-225">For example, you might call <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> and modify the <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.Odbc.OdbcDataAdapter>.</span></span>  
  
 <span data-ttu-id="6b7f9-226">명시적으로 호출 해야 SQL 문을 처음 생성 후 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-226">After the SQL statement is first generated, you must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="6b7f9-227">그렇지 않은 경우는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> 여전히 됩니다 수 정보를에서 사용 하는 이전 문을 올바르지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-227">Otherwise, the <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> still will be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="6b7f9-228">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-228">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>.</span></span>  
  
 <span data-ttu-id="6b7f9-229">매개 변수 이름을 생성할 때의 기본 동작을 사용 하는 @p1, @p2, 다양 한 매개 변수 대.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-229">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="6b7f9-230">전달 `true` 에 대 한는 `useColumnsForParameterNames` 매개 변수에 <xref:System.Data.Common.DbCommandBuilder> 대신 열 이름에 따라 매개 변수를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-230">Passing `true` for the `useColumnsForParameterNames` parameter lets you force the <xref:System.Data.Common.DbCommandBuilder> to generate parameters based on the column names instead.</span></span> <span data-ttu-id="6b7f9-231">다음 조건에 해당 하는 경우에 성공 합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-231">This succeeds only if the following conditions are met:</span></span>  
  
-   <span data-ttu-id="6b7f9-232"><xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> 를 지정 하면이 고 길이 생성 된 매개 변수 이름 보다 크거나 같은 합니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-232">The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> has been specified, and its length is equal to or greater than the generated parameter name.</span></span>  
  
-   <span data-ttu-id="6b7f9-233">생성 된 매개 변수 이름에 지정 된 조건에 부합는 <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> 정규식입니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-233">The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> regular expression.</span></span>  
  
-   <span data-ttu-id="6b7f9-234">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6b7f9-234">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> is specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="QuoteIdentifier">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6b7f9-235">올바른 카탈로그에서 따옴표 붙지 않은 식별자가 제공되는 경우 따옴표 붙은 올바른 형식의 해당 식별자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-235">Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier.</span>
          </span>
          <span data-ttu-id="6b7f9-236">여기에는 식별자에 포함된 모든 따옴표를 이스케이프하는 작업이 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-236">This includes correctly escaping any embedded quotes in the identifier.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="QuoteIdentifier">
      <MemberSignature Language="C#" Value="public override string QuoteIdentifier (string unquotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string QuoteIdentifier(string unquotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function QuoteIdentifier (unquotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ QuoteIdentifier(System::String ^ unquotedIdentifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unquotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unquotedIdentifier">
          <span data-ttu-id="6b7f9-237">따옴표 붙지 않은 원래 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-237">The original unquoted identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b7f9-238">올바른 카탈로그에서 따옴표 붙지 않은 식별자가 제공되는 경우 따옴표 붙은 올바른 형식의 해당 식별자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-238">Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier.</span>
          </span>
          <span data-ttu-id="6b7f9-239">여기에는 식별자에 포함된 모든 따옴표를 이스케이프하는 작업이 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-239">This includes correctly escaping any embedded quotes in the identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b7f9-240">따옴표를 사용한 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-240">The quoted version of the identifier.</span>
          </span>
          <span data-ttu-id="6b7f9-241">식별자에 포함된 따옴표가 올바르게 이스케이프되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-241">Embedded quotes within the identifier are correctly escaped.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteIdentifier">
      <MemberSignature Language="C#" Value="public string QuoteIdentifier (string unquotedIdentifier, System.Data.Odbc.OdbcConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string QuoteIdentifier(string unquotedIdentifier, class System.Data.Odbc.OdbcConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Function QuoteIdentifier (unquotedIdentifier As String, connection As OdbcConnection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ QuoteIdentifier(System::String ^ unquotedIdentifier, System::Data::Odbc::OdbcConnection ^ connection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unquotedIdentifier" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.Odbc.OdbcConnection" />
      </Parameters>
      <Docs>
        <param name="unquotedIdentifier">
          <span data-ttu-id="6b7f9-242">따옴표 붙지 않은 원래 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-242">The original unquoted identifier.</span>
          </span>
        </param>
        <param name="connection">
          <span data-ttu-id="6b7f9-243">연결이 전달되면 관리 래퍼가 SQLGetInfo(SQL_IDENTIFIER_QUOTE_CHAR)를 호출하여 ODBC 드라이버에서 따옴표 문자를 가져오게 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-243">When a connection is passed, causes the managed wrapper to get the quote character from the ODBC driver, calling SQLGetInfo(SQL_IDENTIFIER_QUOTE_CHAR).</span>
          </span>
          <span data-ttu-id="6b7f9-244">전달되는 연결이 없을 경우 <see cref="P:System.Data.Common.DbCommandBuilder.QuotePrefix" /> 및 <see cref="P:System.Data.Common.DbCommandBuilder.QuoteSuffix" />의 값을 사용하여 따옴표가 붙습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-244">When no connection is passed, the string is quoted using values from <see cref="P:System.Data.Common.DbCommandBuilder.QuotePrefix" /> and <see cref="P:System.Data.Common.DbCommandBuilder.QuoteSuffix" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b7f9-245">올바른 카탈로그에서 따옴표 붙지 않은 식별자가 제공되는 경우 따옴표 붙은 올바른 형식의 해당 식별자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-245">Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier.</span>
          </span>
          <span data-ttu-id="6b7f9-246">여기에는 식별자에 포함된 모든 따옴표를 이스케이프하는 작업이 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-246">This includes correctly escaping any embedded quotes in the identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b7f9-247">따옴표를 사용한 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-247">The quoted version of the identifier.</span>
          </span>
          <span data-ttu-id="6b7f9-248">식별자에 포함된 따옴표가 올바르게 이스케이프되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-248">Embedded quotes within the identifier are correctly escaped.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRowUpdatingHandler">
      <MemberSignature Language="C#" Value="protected override void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetRowUpdatingHandler(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetRowUpdatingHandler (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetRowUpdatingHandler(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UnquoteIdentifier">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6b7f9-249">따옴표 붙은 식별자가 제공된 경우 따옴표 붙지 않은 올바른 형식의 해당 식별자를 반환합니다. 여기에는 식별자에 포함된 모든 따옴표를 이스케이프 해제하는 작업이 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-249">Given a quoted identifier, returns the correct unquoted form of that identifier, including correctly unescaping any embedded quotes in the identifier.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UnquoteIdentifier">
      <MemberSignature Language="C#" Value="public override string UnquoteIdentifier (string quotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string UnquoteIdentifier(string quotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function UnquoteIdentifier (quotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ UnquoteIdentifier(System::String ^ quotedIdentifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="quotedIdentifier">
          <span data-ttu-id="6b7f9-250">포함된 따옴표를 제거할 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-250">The identifier that will have its embedded quotes removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b7f9-251">따옴표 붙은 식별자가 제공된 경우 따옴표 붙지 않은 올바른 형식의 해당 식별자를 반환합니다. 여기에는 식별자에 포함된 모든 따옴표를 이스케이프 해제하는 작업이 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-251">Given a quoted identifier, returns the correct unquoted form of that identifier, including correctly unescaping any embedded quotes in the identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b7f9-252">포함된 따옴표가 이스케이프 해제된, 따옴표 붙지 않은 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-252">The unquoted identifier, with embedded quotes correctly unescaped.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnquoteIdentifier">
      <MemberSignature Language="C#" Value="public string UnquoteIdentifier (string quotedIdentifier, System.Data.Odbc.OdbcConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UnquoteIdentifier(string quotedIdentifier, class System.Data.Odbc.OdbcConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UnquoteIdentifier (quotedIdentifier As String, connection As OdbcConnection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UnquoteIdentifier(System::String ^ quotedIdentifier, System::Data::Odbc::OdbcConnection ^ connection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotedIdentifier" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.Odbc.OdbcConnection" />
      </Parameters>
      <Docs>
        <param name="quotedIdentifier">
          <span data-ttu-id="6b7f9-253">포함된 따옴표를 제거할 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-253">The identifier that will have its embedded quotes removed.</span>
          </span>
        </param>
        <param name="connection">
          <span data-ttu-id="6b7f9-254">
            <see cref="T:System.Data.Odbc.OdbcConnection" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-254">The <see cref="T:System.Data.Odbc.OdbcConnection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b7f9-255">따옴표 붙은 식별자가 제공된 경우 따옴표 붙지 않은 올바른 형식의 해당 식별자를 반환합니다. 여기에는 식별자에 포함된 모든 따옴표를 이스케이프 해제하는 작업이 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-255">Given a quoted identifier, returns the correct unquoted form of that identifier, including correctly unescaping any embedded quotes in the identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b7f9-256">포함된 따옴표가 이스케이프 해제된, 따옴표 붙지 않은 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7f9-256">The unquoted identifier, with embedded quotes correctly unescaped.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>