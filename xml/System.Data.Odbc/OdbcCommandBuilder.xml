<Type Name="OdbcCommandBuilder" FullName="System.Data.Odbc.OdbcCommandBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="754ba74c3af6b88ffda378f845dd52a3dc15dff0" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30390357" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OdbcCommandBuilder : System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OdbcCommandBuilder extends System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Data.Odbc.OdbcCommandBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OdbcCommandBuilder&#xA;Inherits DbCommandBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class OdbcCommandBuilder sealed : System::Data::Common::DbCommandBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Odbc</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommandBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>연결된 데이터 소스로 <see cref="T:System.Data.DataSet" />의 변경 내용을 조정하는 데 사용되는 단일 테이블 명령을 자동으로 생성합니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcDataAdapter> 변경 내용을 조정 하는 데 필요한 SQL 문을 자동으로 생성 되지 않습니다는 <xref:System.Data.DataSet> 데이터 원본과 연결 합니다. 만들 수 있습니다는 <xref:System.Data.Odbc.OdbcCommandBuilder> 설정 하 여 단일 테이블 업데이트에 대 한 SQL 문을 생성 하는 개체는 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> 의 속성은 <xref:System.Data.Odbc.OdbcDataAdapter>합니다. <xref:System.Data.Odbc.OdbcCommandBuilder> 설정 하지 않는 추가적인 모든 SQL 문을 생성 합니다.  
  
 간의 관계는 <xref:System.Data.Odbc.OdbcDataAdapter> 와 해당 <xref:System.Data.Odbc.OdbcCommandBuilder> 일대일은 항상 있습니다. 설정 하면이 관계를 만들려면는 <xref:System.Data.Odbc.OdbcDataAdapter> 의 속성은 <xref:System.Data.Odbc.OdbcCommandBuilder> 개체입니다. 이 인해는 <xref:System.Data.Odbc.OdbcCommandBuilder> 의 출력을 생성 하는 수신기로 등록 <xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating> 에 영향을 주는 이벤트는 <xref:System.Data.DataSet>합니다.  
  
 INSERT, UPDATE 또는 DELETE 문을 생성 하는 <xref:System.Data.Odbc.OdbcCommandBuilder> 사용 하 여는 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> 속성을 필수 메타 데이터 집합을 검색 합니다. 값을 변경 하면 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> 후 메타 데이터를 검색 한 첫 번째 업데이트 이후 호출 해야 하는 등의 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 메서드 메타 데이터를 업데이트 합니다.  
  
> [!NOTE]
>  SELECT 문은에 할당 된 경우는 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> 속성 별칭이 지정 된 열 이름, 결과 삽입, 업데이트, 사용 및 DELETE 문을 수 정확 하지 않을 수 또는 실패 합니다. 기본 ODBC 드라이버는 열 별칭에 대 한 적절 한 기본 열 이름을 제공할 수 없는 경우 (SQL_DESC_BASE_COLUMN_NAME 값을 사용 하 여 `SQLColAttribute`), 별칭 이름을 생성 된 INSERT, UPDATE 및 DELETE 문에서 사용할 수 없습니다. 예를 들어 Microsoft ODBC Driver for Oracle 기본 열 이름으로 별칭 이름을 반환합니다. 따라서 생성 된 INSERT, UPDATE 및 DELETE 문은 오류가 발생 하 합니다.  
  
 <xref:System.Data.Odbc.OdbcCommandBuilder> 또한 사용 하 여는 <xref:System.Data.Odbc.OdbcCommand.Connection%2A>, <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>, 및 <xref:System.Data.Odbc.OdbcCommand.Transaction%2A> 속성에서 참조 되는 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>합니다. 호출 해야 합니다 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 이러한 속성 중 하나 이상이 수정 되는 경우 또는 경우의 값은 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> 자체 속성을 변경 합니다. 그렇지 않은 경우는 <xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A>, <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A>, 및 <xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A> 속성 이전 값을 유지 합니다.  
  
 호출 하는 경우 <xref:System.ComponentModel.Component.Dispose%2A>, <xref:System.Data.Odbc.OdbcCommandBuilder> 에서 분리는 <xref:System.Data.Odbc.OdbcDataAdapter>, 생성된 된 명령을 더 이상 사용 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.Odbc.OdbcCommand>함께 <xref:System.Data.Odbc.OdbcDataAdapter> 및 <xref:System.Data.Odbc.OdbcConnection>, 데이터 원본에서 행을 선택 합니다. 이 예제에서는 초기화 된 전달 <xref:System.Data.DataSet>, 연결 문자열, 쿼리 문자열을는 SQL SELECT 문 및 데이터 원본 테이블의 이름을 나타내는 문자열입니다. 이 예에서는 다음 만듭니다는 <xref:System.Data.Odbc.OdbcCommandBuilder>합니다.  
  
 [!code-csharp[Classic WebData OdbcCommandBuilder#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcCommandBuilder/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OdbcCommandBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcCommandBuilder/VB/mysample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcCommandBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcCommandBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 생성자는 모든 필드를를 기본값으로 초기화합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcCommandBuilder (System.Data.Odbc.OdbcDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Odbc.OdbcDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.#ctor(System.Data.Odbc.OdbcDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (adapter As OdbcDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcCommandBuilder(System::Data::Odbc::OdbcDataAdapter ^ adapter);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Odbc.OdbcDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">이 <see cref="T:System.Data.Odbc.OdbcDataAdapter" />와 연결할 <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> 개체입니다.</param>
        <summary>관련 <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> 개체를 사용하여 <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcCommandBuilder> 자체에 대 한 수신기로 등록 <xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating> 에서 생성 되는 이벤트는 <xref:System.Data.Odbc.OdbcDataAdapter> 이 속성에 지정 된 합니다.  
  
 새 인스턴스를 만들 때 <xref:System.Data.Odbc.OdbcCommandBuilder>, 모든 기존 <xref:System.Data.Odbc.OdbcCommandBuilder> 이 연관 <xref:System.Data.Odbc.OdbcDataAdapter> 해제 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyParameterInfo">
      <MemberSignature Language="C#" Value="protected override void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow datarow, System.Data.StatementType statementType, bool whereClause);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ApplyParameterInfo(class System.Data.Common.DbParameter parameter, class System.Data.DataRow datarow, valuetype System.Data.StatementType statementType, bool whereClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ApplyParameterInfo(System::Data::Common::DbParameter ^ parameter, System::Data::DataRow ^ datarow, System::Data::StatementType statementType, bool whereClause);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Common.DbParameter" />
        <Parameter Name="datarow" Type="System.Data.DataRow" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="whereClause" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parameter">To be added.</param>
        <param name="datarow">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="whereClause">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataAdapter">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcDataAdapter DataAdapter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Odbc.OdbcDataAdapter DataAdapter" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommandBuilder.DataAdapter" />
      <MemberSignature Language="VB.NET" Value="Public Property DataAdapter As OdbcDataAdapter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Odbc::OdbcDataAdapter ^ DataAdapter { System::Data::Odbc::OdbcDataAdapter ^ get(); void set(System::Data::Odbc::OdbcDataAdapter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcDataAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> 개체에서 SQL 문을 만들 대상 <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> 개체를 가져오거나 설정합니다.</summary>
        <value>이 <see cref="T:System.Data.Odbc.OdbcDataAdapter" />와 관련된 <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcCommandBuilder> 자체에 대 한 수신기로 등록 <xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating> 에서 생성 되는 이벤트는 <xref:System.Data.Odbc.OdbcDataAdapter> 이 속성에 지정 된 합니다.  
  
 새 인스턴스를 만들 때 <xref:System.Data.Odbc.OdbcCommandBuilder>, 모든 기존 <xref:System.Data.Odbc.OdbcCommandBuilder> 이 연관 <xref:System.Data.Odbc.OdbcDataAdapter> 해제 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeriveParameters">
      <MemberSignature Language="C#" Value="public static void DeriveParameters (System.Data.Odbc.OdbcCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeriveParameters(class System.Data.Odbc.OdbcCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters(System.Data.Odbc.OdbcCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeriveParameters (command As OdbcCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeriveParameters(System::Data::Odbc::OdbcCommand ^ command);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Odbc.OdbcCommand" />
      </Parameters>
      <Docs>
        <param name="command">매개 변수 정보가 파생될 저장 프로시저를 참조하는 <see cref="T:System.Data.Odbc.OdbcCommand" />입니다. 파생된 매개 변수는 <see cref="P:System.Data.Odbc.OdbcCommand.Parameters" />의 <see cref="T:System.Data.Odbc.OdbcCommand" /> 컬렉션에 추가됩니다.</param>
        <summary>
          <see cref="T:System.Data.Odbc.OdbcCommand" />에 지정된 저장 프로시저의 매개 변수 정보를 검색하여 지정된 <see cref="P:System.Data.Odbc.OdbcCommand.Parameters" /> 개체의 <see cref="T:System.Data.Odbc.OdbcCommand" /> 컬렉션을 채웁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A> 에 대 한 모든 기존 매개 변수 정보는 <xref:System.Data.Odbc.OdbcCommand>합니다.  
  
 <xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A> 정보를 가져오는 데이터 원본에 추가로 호출을 해야 합니다. 매개 변수 정보는 사전에 알고 있는 경우 정보를 명시적으로 설정 하 여 매개 변수 컬렉션을 채우는 데 더 효율적입니다.  
  
 만 사용할 수 있습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A> 저장된 프로시저와 함께 합니다. 사용할 수 없습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A> 채우는 데는 <xref:System.Data.Odbc.OdbcParameterCollection> 임의의 Transact SQL 문, 매개 변수가 있는 SELECT 문 처럼 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">내부 ODBC 드라이버가 저장 프로시저 매개 변수 정보 반환을 지원하지 않거나, 명령 텍스트가 유효한 저장 프로시저 이름이 아니거나, 지정된 <see cref="T:System.Data.CommandType" />이 <see langword="CommandType.StoredProcedure" />가 아닌 경우</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDeleteCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>데이터 소스에서 삭제하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Odbc.OdbcCommand" /> 개체를 가져옵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수 있습니다는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Odbc.OdbcCommand> 실행할 개체입니다.  
  
 사용할 수도 있습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> 의 수정 된 명령 기반으로 합니다. 예를 들어, 호출할 수 있습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> 및 수정 된 <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> 값을 복사한 다음에 명시적으로 설정 하는 <xref:System.Data.Odbc.OdbcDataAdapter>합니다.  
  
 명시적으로 호출 해야 SQL 문을 처음 생성 후 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우. 그렇지 않은 경우는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> 여전히 됩니다 수 정보를에서 사용 하는 이전 문을 올바르지 않을 수 있습니다. 응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand GetDeleteCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcCommand GetDeleteCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand () As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcCommand ^ GetDeleteCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>데이터 소스에서 삭제하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Odbc.OdbcCommand" /> 개체를 가져옵니다.</summary>
        <returns>삭제하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Odbc.OdbcCommand" /> 개체를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수 있습니다는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Odbc.OdbcCommand> 실행할 개체입니다.  
  
 사용할 수도 있습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> 의 수정 된 명령 기반으로 합니다. 예를 들어, 호출할 수 있습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> 및 수정 된 <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> 값을 복사한 다음에 명시적으로 설정 하는 <xref:System.Data.Odbc.OdbcDataAdapter>합니다.  
  
 명시적으로 호출 해야 SQL 문을 처음 생성 후 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우. 그렇지 않은 경우는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> 이전 문의 올바르지 않을 수 있는 정보를에서 사용 합니다. 응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand GetDeleteCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcCommand GetDeleteCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand (useColumnsForParameterNames As Boolean) As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcCommand ^ GetDeleteCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">
          <see langword="true" />인 경우 가능하면 열 이름과 일치하는 매개 변수 이름을 생성합니다. <see langword="false" />이면 @p1, @p2 등을 생성합니다.</param>
        <summary>데이터 소스에서 삭제하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Odbc.OdbcCommand" /> 개체를 가져옵니다.</summary>
        <returns>삭제하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Odbc.OdbcCommand" /> 개체를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수 있습니다는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Odbc.OdbcCommand> 실행할 개체입니다.  
  
 사용할 수도 있습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> 의 수정 된 명령 기반으로 합니다. 예를 들어, 호출할 수 있습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> 및 수정 된 <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> 값을 복사한 다음에 명시적으로 설정 하는 <xref:System.Data.Odbc.OdbcDataAdapter>합니다.  
  
 명시적으로 호출 해야 SQL 문을 처음 생성 후 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우. 그렇지 않은 경우는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> 이전 문의 올바르지 않을 수 있는 정보를에서 사용 합니다. 응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>합니다.  
  
 매개 변수 이름을 생성할 때의 기본 동작을 사용 하는 @p1, @p2, 다양 한 매개 변수 대. 전달 `true` 에 대 한는 `useColumnsForParameterNames` 매개 변수에 <xref:System.Data.Odbc.OdbcCommandBuilder> 대신 열 이름에 따라 매개 변수를 생성 합니다. 다음 조건에 해당 하는 경우에 성공 합니다.  
  
-   <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> 를 지정 하면이 고 길이 생성 된 매개 변수 이름 보다 크거나 같은 합니다.  
  
-   생성 된 매개 변수 이름에 지정 된 조건에 부합는 <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> 정규식입니다.  
  
-   A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> 지정 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInsertCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>데이터 소스에서 삽입하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Odbc.OdbcCommand" /> 개체를 가져옵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수 있습니다는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Odbc.OdbcCommand> 실행할 개체입니다.  
  
 사용할 수도 있습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> 의 수정 된 명령 기반으로 합니다. 예를 들어, 호출할 수 있습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> 및 수정 된 <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> 값을 복사한 다음에 명시적으로 설정 하는 <xref:System.Data.Odbc.OdbcDataAdapter>합니다.  
  
 명시적으로 호출 해야 SQL 문을 처음 생성 후 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우. 그렇지 않은 경우는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> 이전 문의 올바르지 않을 수 있는 정보를에서 사용 합니다. 응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand GetInsertCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcCommand GetInsertCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand () As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcCommand ^ GetInsertCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>데이터 소스에서 삽입하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Odbc.OdbcCommand" /> 개체를 가져옵니다.</summary>
        <returns>삽입하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Odbc.OdbcCommand" /> 개체를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수 있습니다는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Odbc.OdbcCommand> 실행할 개체입니다.  
  
 사용할 수도 있습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> 의 수정 된 명령 기반으로 합니다. 예를 들어, 호출할 수 있습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> 및 수정 된 <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> 값을 복사한 다음에 명시적으로 설정 하는 <xref:System.Data.Odbc.OdbcDataAdapter>합니다.  
  
 명시적으로 호출 해야 SQL 문을 처음 생성 후 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우. 그렇지 않은 경우는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> 여전히 됩니다 수 정보를에서 사용 하는 이전 문을 올바르지 않을 수 있습니다. 응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand GetInsertCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcCommand GetInsertCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand (useColumnsForParameterNames As Boolean) As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcCommand ^ GetInsertCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">
          <see langword="true" />인 경우 가능하면 열 이름과 일치하는 매개 변수 이름을 생성합니다. <see langword="false" />이면 @p1, @p2 등을 생성합니다.</param>
        <summary>데이터 소스에서 삽입하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Odbc.OdbcCommand" /> 개체를 가져옵니다.</summary>
        <returns>삽입하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Odbc.OdbcCommand" /> 개체를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수 있습니다는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Odbc.OdbcCommand> 실행할 개체입니다.  
  
 사용할 수도 있습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> 의 수정 된 명령 기반으로 합니다. 예를 들어, 호출할 수 있습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> 및 수정 된 <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> 값을 복사한 다음에 명시적으로 설정 하는 <xref:System.Data.Odbc.OdbcDataAdapter>합니다.  
  
 명시적으로 호출 해야 SQL 문을 처음 생성 후 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우. 그렇지 않은 경우는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> 이전 문의 올바르지 않을 수 있는 정보를에서 사용 합니다. 응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>합니다.  
  
 매개 변수 이름을 생성할 때의 기본 동작을 사용 하는 @p1, @p2, 다양 한 매개 변수 대. 전달 `true` 에 대 한는 `useColumnsForParameterNames` 매개 변수에 <xref:System.Data.Common.DbCommandBuilder> 대신 열 이름에 따라 매개 변수를 생성 합니다. 다음 조건에 해당 하는 경우에 성공 합니다.  
  
-   <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> 를 지정 하면이 고 길이 생성 된 매개 변수 이름 보다 크거나 같은 합니다.  
  
-   생성 된 매개 변수 이름에 지정 된 조건에 부합는 <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> 정규식입니다.  
  
-   A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> 지정 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected override string GetParameterName (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterName(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterName (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterName(int parameterOrdinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected override string GetParameterName (string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterName(string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterName (parameterName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterName(System::String ^ parameterName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterPlaceholder">
      <MemberSignature Language="C#" Value="protected override string GetParameterPlaceholder (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterPlaceholder(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetParameterPlaceholder(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterPlaceholder (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterPlaceholder(int parameterOrdinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUpdateCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>데이터 소스에서 업데이트하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Odbc.OdbcCommand" /> 개체를 가져옵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수 있습니다는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Odbc.OdbcCommand> 실행할 개체입니다.  
  
 사용할 수도 있습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> 의 수정 된 명령 기반으로 합니다. 예를 들어, 호출할 수 있습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> 및 수정 된 <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> 값을 복사한 다음에 명시적으로 설정 하는 <xref:System.Data.Odbc.OdbcDataAdapter>합니다.  
  
 명시적으로 호출 해야 SQL 문을 처음 생성 후 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우. 그렇지 않은 경우는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> 이전 문의 올바르지 않을 수 있는 정보를에서 사용 합니다. 응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand GetUpdateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcCommand GetUpdateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand () As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcCommand ^ GetUpdateCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>데이터 소스에서 업데이트하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Odbc.OdbcCommand" /> 개체를 가져옵니다.</summary>
        <returns>업데이트하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Odbc.OdbcCommand" /> 개체를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수 있습니다는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Odbc.OdbcCommand> 실행할 개체입니다.  
  
 사용할 수도 있습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> 의 수정 된 명령 기반으로 합니다. 예를 들어, 호출할 수 있습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> 및 수정 된 <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> 값을 복사한 다음에 명시적으로 설정 하는 <xref:System.Data.Odbc.OdbcDataAdapter>합니다.  
  
 명시적으로 호출 해야 SQL 문을 처음 생성 후 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우. 그렇지 않은 경우는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> 여전히 됩니다 수 정보를에서 사용 하는 이전 문을 올바르지 않을 수 있습니다. 응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand GetUpdateCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcCommand GetUpdateCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand (useColumnsForParameterNames As Boolean) As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcCommand ^ GetUpdateCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">
          <see langword="true" />인 경우 가능하면 열 이름과 일치하는 매개 변수 이름을 생성합니다. <see langword="false" />이면 @p1, @p2 등을 생성합니다.</param>
        <summary>데이터 소스에서 업데이트하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Odbc.OdbcCommand" /> 개체를 가져옵니다.</summary>
        <returns>업데이트하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.Odbc.OdbcCommand" /> 개체를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수 있습니다는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.Odbc.OdbcCommand> 실행할 개체입니다.  
  
 사용할 수도 있습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> 의 수정 된 명령 기반으로 합니다. 예를 들어, 호출할 수 있습니다 <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> 및 수정 된 <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> 값을 복사한 다음에 명시적으로 설정 하는 <xref:System.Data.Odbc.OdbcDataAdapter>합니다.  
  
 명시적으로 호출 해야 SQL 문을 처음 생성 후 <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> 문을 어떤 식으로든에서 변경 하는 경우. 그렇지 않은 경우는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> 여전히 됩니다 수 정보를에서 사용 하는 이전 문을 올바르지 않을 수 있습니다. 응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>합니다.  
  
 매개 변수 이름을 생성할 때의 기본 동작을 사용 하는 @p1, @p2, 다양 한 매개 변수 대. 전달 `true` 에 대 한는 `useColumnsForParameterNames` 매개 변수에 <xref:System.Data.Common.DbCommandBuilder> 대신 열 이름에 따라 매개 변수를 생성 합니다. 다음 조건에 해당 하는 경우에 성공 합니다.  
  
-   <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> 를 지정 하면이 고 길이 생성 된 매개 변수 이름 보다 크거나 같은 합니다.  
  
-   생성 된 매개 변수 이름에 지정 된 조건에 부합는 <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> 정규식입니다.  
  
-   A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> 지정 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="QuoteIdentifier">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>올바른 카탈로그에서 따옴표 붙지 않은 식별자가 제공되는 경우 따옴표 붙은 올바른 형식의 해당 식별자를 반환합니다. 여기에는 식별자에 포함된 모든 따옴표를 이스케이프하는 작업이 포함됩니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="QuoteIdentifier">
      <MemberSignature Language="C#" Value="public override string QuoteIdentifier (string unquotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string QuoteIdentifier(string unquotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function QuoteIdentifier (unquotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ QuoteIdentifier(System::String ^ unquotedIdentifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unquotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unquotedIdentifier">따옴표 붙지 않은 원래 식별자입니다.</param>
        <summary>올바른 카탈로그에서 따옴표 붙지 않은 식별자가 제공되는 경우 따옴표 붙은 올바른 형식의 해당 식별자를 반환합니다. 여기에는 식별자에 포함된 모든 따옴표를 이스케이프하는 작업이 포함됩니다.</summary>
        <returns>따옴표를 사용한 식별자입니다. 식별자에 포함된 따옴표가 올바르게 이스케이프되었습니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteIdentifier">
      <MemberSignature Language="C#" Value="public string QuoteIdentifier (string unquotedIdentifier, System.Data.Odbc.OdbcConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string QuoteIdentifier(string unquotedIdentifier, class System.Data.Odbc.OdbcConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Function QuoteIdentifier (unquotedIdentifier As String, connection As OdbcConnection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ QuoteIdentifier(System::String ^ unquotedIdentifier, System::Data::Odbc::OdbcConnection ^ connection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unquotedIdentifier" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.Odbc.OdbcConnection" />
      </Parameters>
      <Docs>
        <param name="unquotedIdentifier">따옴표 붙지 않은 원래 식별자입니다.</param>
        <param name="connection">연결이 전달되면 관리 래퍼가 SQLGetInfo(SQL_IDENTIFIER_QUOTE_CHAR)를 호출하여 ODBC 드라이버에서 따옴표 문자를 가져오게 됩니다. 전달되는 연결이 없을 경우 <see cref="P:System.Data.Common.DbCommandBuilder.QuotePrefix" /> 및 <see cref="P:System.Data.Common.DbCommandBuilder.QuoteSuffix" />의 값을 사용하여 따옴표가 붙습니다.</param>
        <summary>올바른 카탈로그에서 따옴표 붙지 않은 식별자가 제공되는 경우 따옴표 붙은 올바른 형식의 해당 식별자를 반환합니다. 여기에는 식별자에 포함된 모든 따옴표를 이스케이프하는 작업이 포함됩니다.</summary>
        <returns>따옴표를 사용한 식별자입니다. 식별자에 포함된 따옴표가 올바르게 이스케이프되었습니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRowUpdatingHandler">
      <MemberSignature Language="C#" Value="protected override void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetRowUpdatingHandler(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetRowUpdatingHandler (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetRowUpdatingHandler(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UnquoteIdentifier">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>따옴표 붙은 식별자가 제공된 경우 따옴표 붙지 않은 올바른 형식의 해당 식별자를 반환합니다. 여기에는 식별자에 포함된 모든 따옴표를 이스케이프 해제하는 작업이 포함됩니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UnquoteIdentifier">
      <MemberSignature Language="C#" Value="public override string UnquoteIdentifier (string quotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string UnquoteIdentifier(string quotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function UnquoteIdentifier (quotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ UnquoteIdentifier(System::String ^ quotedIdentifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="quotedIdentifier">포함된 따옴표를 제거할 식별자입니다.</param>
        <summary>따옴표 붙은 식별자가 제공된 경우 따옴표 붙지 않은 올바른 형식의 해당 식별자를 반환합니다. 여기에는 식별자에 포함된 모든 따옴표를 이스케이프 해제하는 작업이 포함됩니다.</summary>
        <returns>포함된 따옴표가 이스케이프 해제된, 따옴표 붙지 않은 식별자입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnquoteIdentifier">
      <MemberSignature Language="C#" Value="public string UnquoteIdentifier (string quotedIdentifier, System.Data.Odbc.OdbcConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UnquoteIdentifier(string quotedIdentifier, class System.Data.Odbc.OdbcConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UnquoteIdentifier (quotedIdentifier As String, connection As OdbcConnection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UnquoteIdentifier(System::String ^ quotedIdentifier, System::Data::Odbc::OdbcConnection ^ connection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotedIdentifier" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.Odbc.OdbcConnection" />
      </Parameters>
      <Docs>
        <param name="quotedIdentifier">포함된 따옴표를 제거할 식별자입니다.</param>
        <param name="connection">
          <see cref="T:System.Data.Odbc.OdbcConnection" />
        </param>
        <summary>따옴표 붙은 식별자가 제공된 경우 따옴표 붙지 않은 올바른 형식의 해당 식별자를 반환합니다. 여기에는 식별자에 포함된 모든 따옴표를 이스케이프 해제하는 작업이 포함됩니다.</summary>
        <returns>포함된 따옴표가 이스케이프 해제된, 따옴표 붙지 않은 식별자입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>