<Type Name="OdbcDataReader" FullName="System.Data.Odbc.OdbcDataReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a657d6d2ee7aa66c06036c87348b2e2c88f88f10" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36686144" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OdbcDataReader : System.Data.Common.DbDataReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OdbcDataReader extends System.Data.Common.DbDataReader" />
  <TypeSignature Language="DocId" Value="T:System.Data.Odbc.OdbcDataReader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OdbcDataReader&#xA;Inherits DbDataReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class OdbcDataReader sealed : System::Data::Common::DbDataReader" />
  <TypeSignature Language="F#" Value="type OdbcDataReader = class&#xA;    inherit DbDataReader" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Odbc</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="880a9-101">데이터 소스에서 데이터 행의 앞으로만 이동 가능한 스트림을 읽는 방법을 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="880a9-101">Provides a way of reading a forward-only stream of data rows from a data source.</span>
      </span>
      <span data-ttu-id="880a9-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="880a9-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="880a9-103">만들려면는 <xref:System.Data.Odbc.OdbcDataReader>를 호출 해야 합니다는 <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> 의 메서드는 <xref:System.Data.Odbc.OdbcCommand> 직접 생성자를 사용 하는 대신 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-103">To create an <xref:System.Data.Odbc.OdbcDataReader>, you must call the <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> method of the <xref:System.Data.Odbc.OdbcCommand> object, instead of directly using a constructor.</span></span>  
  
 <span data-ttu-id="880a9-104">동안는 <xref:System.Data.Odbc.OdbcDataReader> 사용 되는 연결 된 <xref:System.Data.Odbc.OdbcConnection> 역할을 수행는 <xref:System.Data.Odbc.OdbcDataReader>, 되며 다른 작업이 없을 수행할 수 있습니다는 <xref:System.Data.Odbc.OdbcConnection> 닫지 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-104">While the <xref:System.Data.Odbc.OdbcDataReader> is being used, the associated <xref:System.Data.Odbc.OdbcConnection> is busy serving the <xref:System.Data.Odbc.OdbcDataReader>, and no other operations can be performed on the <xref:System.Data.Odbc.OdbcConnection> other than closing it.</span></span> <span data-ttu-id="880a9-105">이 때 까지는 <xref:System.Data.Odbc.OdbcDataReader.Close%2A> 의 메서드는 <xref:System.Data.Odbc.OdbcDataReader> 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-105">This is the case until the <xref:System.Data.Odbc.OdbcDataReader.Close%2A> method of the <xref:System.Data.Odbc.OdbcDataReader> is called.</span></span> <span data-ttu-id="880a9-106">호출한 후까지 출력 매개 변수를 검색할 수 없습니다 예를 들어 <xref:System.Data.Odbc.OdbcDataReader.Close%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-106">For example, you cannot retrieve output parameters until after you call <xref:System.Data.Odbc.OdbcDataReader.Close%2A>.</span></span>  
  
 <span data-ttu-id="880a9-107">변경 내용을 결과 데이터를 읽는 동안 다른 프로세스 또는 스레드별로 집합의 사용자에 게 표시 될 수 있습니다는 <xref:System.Data.Odbc.OdbcDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-107">Changes made to a result set by another process or thread while data is being read may be visible to the user of the <xref:System.Data.Odbc.OdbcDataReader>.</span></span> <span data-ttu-id="880a9-108">그러나 정확한 동작은 드라이버와 시간에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-108">However, the precise behavior is both driver and timing dependent.</span></span>  
  
 <span data-ttu-id="880a9-109"><xref:System.Data.Odbc.OdbcDataReader.IsClosed%2A> 및 <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A> 후 호출할 수 있는 속성만 <xref:System.Data.Odbc.OdbcDataReader> 닫힙니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-109"><xref:System.Data.Odbc.OdbcDataReader.IsClosed%2A> and <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.Odbc.OdbcDataReader> is closed.</span></span> <span data-ttu-id="880a9-110">호출 해야 경우에 따라 <xref:System.Data.Odbc.OdbcDataReader.Close%2A> 호출 하기 전에 <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-110">Sometimes, you must call <xref:System.Data.Odbc.OdbcDataReader.Close%2A> before you can call <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="880a9-111">다음 예제에서는 <xref:System.Data.Odbc.OdbcConnection>, <xref:System.Data.Odbc.OdbcCommand>, 및 <xref:System.Data.Odbc.OdbcDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-111">The following example creates an <xref:System.Data.Odbc.OdbcConnection>, an <xref:System.Data.Odbc.OdbcCommand>, and an <xref:System.Data.Odbc.OdbcDataReader>.</span></span> <span data-ttu-id="880a9-112">이 예제에서는 콘솔에이 작성 하는 데이터를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-112">The example reads through the data, writing it out to the console.</span></span> <span data-ttu-id="880a9-113">마지막는 <xref:System.Data.Odbc.OdbcDataReader>, 한 다음은 <xref:System.Data.Odbc.OdbcConnection>합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-113">Finally, the example closes the <xref:System.Data.Odbc.OdbcDataReader>, and then the <xref:System.Data.Odbc.OdbcConnection>.</span></span>  
  
 [!code-csharp[Classic WebData OdbcDataReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcDataReader/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcDataReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcDataReader/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="odbcDataReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="880a9-114">
            <see cref="T:System.Data.Odbc.OdbcDataReader" /> 개체를 닫습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-114">Closes the <see cref="T:System.Data.Odbc.OdbcDataReader" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="880a9-115">명시적으로 호출 해야는 <xref:System.Data.Odbc.OdbcDataReader.Close%2A> 했으면 메서드를 사용 하는 <xref:System.Data.Odbc.OdbcDataReader> 연결 된 사용 하도록 <xref:System.Data.Odbc.OdbcConnection> 다른 용도로 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-115">You must explicitly call the <xref:System.Data.Odbc.OdbcDataReader.Close%2A> method when you are finished using the <xref:System.Data.Odbc.OdbcDataReader> to use the associated <xref:System.Data.Odbc.OdbcConnection> for any other purpose.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="880a9-116">호출 하지 마십시오 `Close` 또는 `Dispose` 연결, DataReader, 또는 다른 관리 개체에는 `Finalize` 클래스의 메서드로 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-116">Do not call `Close` or `Dispose` on a Connection, a DataReader, or any other managed object in the `Finalize` method of your class.</span></span> <span data-ttu-id="880a9-117">종료자에서만 클래스에 직접 속한 관리 되지 않는 리소스를 해제 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-117">In a finalizer, you should only release unmanaged resources that your class owns directly.</span></span> <span data-ttu-id="880a9-118">클래스에 관리되지 않는 리소스가 없는 경우 클래스 정의에 `Finalize` 메서드를 포함하지 마세요.</span><span class="sxs-lookup"><span data-stu-id="880a9-118">If your class does not own any unmanaged resources, do not include a `Finalize` method in your class definition.</span></span> <span data-ttu-id="880a9-119">자세한 내용은 참조 [가비지 수집](~/docs/standard/garbage-collection/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-119">For more information, see [Garbage Collection](~/docs/standard/garbage-collection/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="880a9-120">다음 예제에서는 <xref:System.Data.Odbc.OdbcConnection>, <xref:System.Data.Odbc.OdbcCommand>, 및 <xref:System.Data.Odbc.OdbcDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-120">The following example creates an <xref:System.Data.Odbc.OdbcConnection>, an <xref:System.Data.Odbc.OdbcCommand>, and an <xref:System.Data.Odbc.OdbcDataReader>.</span></span> <span data-ttu-id="880a9-121">이 예제에서는 콘솔에이 작성 하는 데이터를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-121">The example reads through the data, writing it out to the console.</span></span> <span data-ttu-id="880a9-122">마지막는 <xref:System.Data.Odbc.OdbcDataReader>, 한 다음은 <xref:System.Data.Odbc.OdbcConnection>합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-122">Finally, the example closes the <xref:System.Data.Odbc.OdbcDataReader>, and then the <xref:System.Data.Odbc.OdbcConnection>.</span></span>  
  
 [!code-csharp[Classic WebData IDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Data.Odbc.OdbcDataReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="880a9-123">현재 행의 중첩 수준을 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-123">Gets a value that indicates the depth of nesting for the current row.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="880a9-124">현재 행의 중첩 수준입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-124">The depth of nesting for the current row.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="880a9-125">가장 바깥쪽 테이블의 중첩 수준은 0입니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-125">The outermost table has a depth of zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="odbcDataReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldCount">
      <MemberSignature Language="C#" Value="public override int FieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataReader.FieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FieldCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldCount : int" Usage="System.Data.Odbc.OdbcDataReader.FieldCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="880a9-126">현재 행의 열 수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-126">Gets the number of columns in the current row.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="880a9-127">유효한 레코드 집합에 위치하지 않은 경우에는 0이고, 그렇지 않으면 현재 레코드에 있는 열의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-127">When not positioned in a valid record set, 0; otherwise the number of columns in the current record.</span>
          </span>
          <span data-ttu-id="880a9-128">기본값은 -1입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-128">The default is -1.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="880a9-129">숨김 필드도 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-129">Includes hidden fields.</span></span> <span data-ttu-id="880a9-130">숨김 필드를 제외하려면 <xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A>를 사용하십시오.</span><span class="sxs-lookup"><span data-stu-id="880a9-130">Use <xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A> to exclude hidden fields.</span></span>  
  
 <span data-ttu-id="880a9-131">행을 반환 하지 않는 쿼리를 실행 하 고 나면 <xref:System.Data.Odbc.OdbcDataReader.FieldCount%2A> 0을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-131">After you execute a query that does not return rows, <xref:System.Data.Odbc.OdbcDataReader.FieldCount%2A> returns 0.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="880a9-132">데이터 소스에 대한 연결이 현재 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-132">There is no current connection to a data source.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public override bool GetBoolean (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetBoolean(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBoolean (i As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetBoolean(int i);" />
      <MemberSignature Language="F#" Value="override this.GetBoolean : int -&gt; bool" Usage="odbcDataReader.GetBoolean i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="880a9-133">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-133">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="880a9-134">지정된 열의 값에 해당하는 Boolean 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-134">Gets the value of the specified column as a Boolean.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="880a9-135">열의 값인 부울입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-135">A Boolean that is the value of the column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="880a9-136">변환은은 ODBC 드라이버의 기본 기능에 따라 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-136">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="880a9-137">변환이 지원 되지 않는 경우 메서드 호출이 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-137">If the conversion is not supported then the method call will fail.</span></span>  
  
 <span data-ttu-id="880a9-138">호출 <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값을 찾도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-138">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="880a9-139">지정된 캐스트가 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-139">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public override byte GetByte (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8 GetByte(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByte (i As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Byte GetByte(int i);" />
      <MemberSignature Language="F#" Value="override this.GetByte : int -&gt; byte" Usage="odbcDataReader.GetByte i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="880a9-140">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-140">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="880a9-141">지정된 열의 값에 해당하는 바이트 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-141">Gets the value of the specified column as a byte.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="880a9-142">바이트로 지정된 열의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-142">The value of the specified column as a byte.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="880a9-143">변환은은 ODBC 드라이버의 기본 기능에 따라 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-143">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="880a9-144">변환이 지원 되지 않는 경우 메서드 호출이 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-144">If the conversion is not supported, the method call fails.</span></span>  
  
 <span data-ttu-id="880a9-145">호출 <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값을 찾도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-145">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="880a9-146">지정된 캐스트가 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-146">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override long GetBytes (int i, long dataIndex, byte[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetBytes(int32 i, int64 dataIndex, unsigned int8[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (i As Integer, dataIndex As Long, buffer As Byte(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetBytes(int i, long dataIndex, cli::array &lt;System::Byte&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : int * int64 * byte[] * int * int -&gt; int64" Usage="odbcDataReader.GetBytes (i, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="880a9-147">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-147">The zero-based column ordinal.</span>
          </span>
        </param>
        <param name="dataIndex">
          <span data-ttu-id="880a9-148">읽기 작업을 시작할 필드 내 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-148">The index within the field where the read operation is to start.</span>
          </span>
        </param>
        <param name="buffer">
          <span data-ttu-id="880a9-149">바이트 스트림을 읽을 버퍼입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-149">The buffer into which to read the stream of bytes.</span>
          </span>
        </param>
        <param name="bufferIndex">
          <span data-ttu-id="880a9-150">쓰기 작업을 시작할 <c>buffer</c> 내 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-150">The index within the <c>buffer</c> where the write operation is to start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="880a9-151">읽을 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-151">The number of bytes to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="880a9-152">특정 버퍼 오프셋에서 시작하여 지정된 열 오프셋의 바이트 스트림을 버퍼에 배열로 읽어 들입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-152">Reads a stream of bytes from the specified column offset into the buffer as an array, starting at the particular buffer offset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="880a9-153">읽은 실제 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-153">The actual number of bytes read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="880a9-154"><xref:System.Data.Odbc.OdbcDataReader.GetBytes%2A> 필드에 사용 가능한 바이트 수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-154"><xref:System.Data.Odbc.OdbcDataReader.GetBytes%2A> returns the number of available bytes in the field.</span></span> <span data-ttu-id="880a9-155">대부분의 경우 이것은 필드의 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-155">Most of the time this is the exact length of the field.</span></span> <span data-ttu-id="880a9-156">그러나 반환 된 숫자 보다 작을 수도 있습니다는 필드의 길이 경우 <xref:System.Data.Odbc.OdbcDataReader.GetBytes%2A> 바이트를 얻는 필드에서 이미 사용 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-156">However, the number returned may be less than the true length of the field if <xref:System.Data.Odbc.OdbcDataReader.GetBytes%2A> has already been used to obtain bytes from the field.</span></span> <span data-ttu-id="880a9-157">수도 있는 경우 예를 들어 경우는 <xref:System.Data.Odbc.OdbcDataReader> 버퍼에 대형 데이터 구조를 읽고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-157">This may be the case, for example, if the <xref:System.Data.Odbc.OdbcDataReader> is reading a large data structure into a buffer.</span></span> <span data-ttu-id="880a9-158">자세한 내용은 참조는 `SequentialAccess` 에 대 한 설정 <xref:System.Data.CommandBehavior>합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-158">For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.</span></span>  
  
 <span data-ttu-id="880a9-159">버퍼를 null 값을 전달 하는 경우 <xref:System.Data.Odbc.OdbcDataReader.GetBytes%2A> 필드의 길이 바이트 단위로 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-159">If you pass a buffer that is a null value, <xref:System.Data.Odbc.OdbcDataReader.GetBytes%2A> returns the length of the field in bytes.</span></span>  
  
 <span data-ttu-id="880a9-160">변환은은 ODBC 드라이버의 기본 기능에 따라 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-160">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="880a9-161">변환이 지원 되지 않는 경우 메서드 호출이 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-161">If the conversion is not supported then the method call will fail.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="880a9-162">하면 예외가 throw 됩니다 값 `bufferIndex` 배열 밖에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-162">No exception will be thrown if the value of `bufferIndex` is outside the array.</span></span> <span data-ttu-id="880a9-163">없는 데이터를 읽 및 메서드가 0을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-163">No data will be read and the method will return 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public override char GetChar (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetChar(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChar (i As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override char GetChar(int i);" />
      <MemberSignature Language="F#" Value="override this.GetChar : int -&gt; char" Usage="odbcDataReader.GetChar i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="880a9-164">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-164">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="880a9-165">지정된 열의 값을 문자로 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-165">Gets the value of the specified column as a character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="880a9-166">지정된 열의 값을 문자로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-166">The value of the specified column as a character.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="880a9-167">변환은은 ODBC 드라이버의 기본 기능에 따라 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-167">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="880a9-168">변환이 지원 되지 않는 경우 메서드 호출이 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-168">If the conversion is not supported, the method call fails.</span></span>  
  
 <span data-ttu-id="880a9-169">호출 <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값을 찾도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-169">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="880a9-170">지정된 캐스트가 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-170">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override long GetChars (int i, long dataIndex, char[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetChars(int32 i, int64 dataIndex, char[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (i As Integer, dataIndex As Long, buffer As Char(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetChars(int i, long dataIndex, cli::array &lt;char&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetChars : int * int64 * char[] * int * int -&gt; int64" Usage="odbcDataReader.GetChars (i, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="880a9-171">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-171">The zero-based column ordinal.</span>
          </span>
        </param>
        <param name="dataIndex">
          <span data-ttu-id="880a9-172">읽기 작업을 시작할 행 내 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-172">The index within the row where the read operation is to start.</span>
          </span>
        </param>
        <param name="buffer">
          <span data-ttu-id="880a9-173">데이터를 복사해 올 버퍼입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-173">The buffer into which to copy data.</span>
          </span>
        </param>
        <param name="bufferIndex">
          <span data-ttu-id="880a9-174">쓰기 작업을 시작할 <c>buffer</c> 내 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-174">The index within the <c>buffer</c> where the write operation is to start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="880a9-175">읽을 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-175">The number of characters to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="880a9-176">특정 버퍼 오프셋에서 시작하여 지정된 열 오프셋의 문자 스트림을 버퍼에 배열로 읽어 들입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-176">Reads a stream of characters from the specified column offset into the buffer as an array, starting at the particular buffer offset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="880a9-177">읽은 실제 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-177">The actual number of characters read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="880a9-178"><xref:System.Data.Odbc.OdbcDataReader.GetChars%2A> 필드에 사용할 수 있는 문자 수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-178"><xref:System.Data.Odbc.OdbcDataReader.GetChars%2A> returns the number of available characters in the field.</span></span> <span data-ttu-id="880a9-179">대부분의 경우 이것은 필드의 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-179">Most of the time this is the exact length of the field.</span></span> <span data-ttu-id="880a9-180">그러나 반환 된 숫자 보다 작을 수도 있습니다는 필드의 길이 경우 <xref:System.Data.Odbc.OdbcDataReader.GetChars%2A> 문자를 가져올 필드에서 이미 사용 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-180">However, the number returned may be less than the true length of the field if <xref:System.Data.Odbc.OdbcDataReader.GetChars%2A> has already been used to obtain characters from the field.</span></span> <span data-ttu-id="880a9-181">수도 있는 경우 예를 들어 경우는 <xref:System.Data.Odbc.OdbcDataReader> 버퍼에 대형 데이터 구조를 읽고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-181">This may be the case, for example, if the <xref:System.Data.Odbc.OdbcDataReader> is reading a large data structure into a buffer.</span></span> <span data-ttu-id="880a9-182">자세한 내용은 참조는 `SequentialAccess` 에 대 한 설정 <xref:System.Data.CommandBehavior>합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-182">For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.</span></span>  
  
 <span data-ttu-id="880a9-183">버퍼를 null 값을 전달 하는 경우 <xref:System.Data.Odbc.OdbcDataReader.GetChars%2A> 필드의 길이 문자 단위로 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-183">If you pass a buffer that is a null value, <xref:System.Data.Odbc.OdbcDataReader.GetChars%2A> returns the length of the field in characters.</span></span>  
  
 <span data-ttu-id="880a9-184">변환은은 ODBC 드라이버의 기본 기능에 따라 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-184">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="880a9-185">변환이 지원 되지 않는 경우 메서드 호출이 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-185">If the conversion is not supported then the method call will fail.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="880a9-186">하면 예외가 throw 됩니다 값 `bufferIndex` 배열 밖에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-186">No exception will be thrown if the value of `bufferIndex` is outside the array.</span></span> <span data-ttu-id="880a9-187">없는 데이터를 읽 및 메서드가 0을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-187">No data will be read and the method will return 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataTypeName">
      <MemberSignature Language="C#" Value="public override string GetDataTypeName (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDataTypeName(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetDataTypeName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDataTypeName (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetDataTypeName(int i);" />
      <MemberSignature Language="F#" Value="override this.GetDataTypeName : int -&gt; string" Usage="odbcDataReader.GetDataTypeName i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="880a9-188">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-188">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="880a9-189">소스 데이터 형식의 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-189">Gets the name of the source data type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="880a9-190">소스 데이터 형식의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-190">The name of the source data type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDate">
      <MemberSignature Language="C#" Value="public DateTime GetDate (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime GetDate(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetDate(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDate (i As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime GetDate(int i);" />
      <MemberSignature Language="F#" Value="member this.GetDate : int -&gt; DateTime" Usage="odbcDataReader.GetDate i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="880a9-191">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-191">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="880a9-192">지정된 열의 값에 해당하는 <see cref="T:System.DateTime" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-192">Gets the value of the specified column as a <see cref="T:System.DateTime" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="880a9-193">지정된 열의 값을 <see cref="T:System.DateTime" /> 개체로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-193">The value of the specified column as a <see cref="T:System.DateTime" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public override DateTime GetDateTime (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime GetDateTime(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDateTime (i As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime GetDateTime(int i);" />
      <MemberSignature Language="F#" Value="override this.GetDateTime : int -&gt; DateTime" Usage="odbcDataReader.GetDateTime i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="880a9-194">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-194">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="880a9-195">지정된 열의 값에 해당하는 <see cref="T:System.DateTime" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-195">Gets the value of the specified column as a <see cref="T:System.DateTime" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="880a9-196">지정된 열의 값을 <see cref="T:System.DateTime" /> 개체로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-196">The value of the specified column as a <see cref="T:System.DateTime" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="880a9-197">변환은은 ODBC 드라이버의 기본 기능에 따라 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-197">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="880a9-198">변환이 지원 되지 않는 경우 메서드 호출이 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-198">If the conversion is not supported then the method call will fail.</span></span>  
  
 <span data-ttu-id="880a9-199">호출 <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값을 찾도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-199">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="880a9-200">지정된 캐스트가 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-200">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public override decimal GetDecimal (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Decimal GetDecimal(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecimal (i As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Decimal GetDecimal(int i);" />
      <MemberSignature Language="F#" Value="override this.GetDecimal : int -&gt; decimal" Usage="odbcDataReader.GetDecimal i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="880a9-201">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-201">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="880a9-202">지정된 열의 값에 해당하는 <see cref="T:System.Decimal" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-202">Gets the value of the specified column as a <see cref="T:System.Decimal" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="880a9-203">지정된 열의 값을 <see cref="T:System.Decimal" /> 개체로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-203">The value of the specified column as a <see cref="T:System.Decimal" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="880a9-204">변환은은 ODBC 드라이버의 기본 기능에 따라 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-204">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="880a9-205">변환이 지원 되지 않는 경우 메서드 호출이 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-205">If the conversion is not supported then the method call will fail.</span></span>  
  
 <span data-ttu-id="880a9-206">호출 <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값을 찾도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-206">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 <span data-ttu-id="880a9-207"><xref:System.Data.Odbc.OdbcDataReader.GetDecimal%2A> 최대 전체 자릿수는 28 사이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-207"><xref:System.Data.Odbc.OdbcDataReader.GetDecimal%2A> has a maximum precision of 28.</span></span> <span data-ttu-id="880a9-208">더 큰 전체 자릿수를 사용 하 여 10 진수 데이터를 검색 하려고 하면 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-208">Attempting to retrieve decimal data with a larger precision will cause an exception.</span></span> <span data-ttu-id="880a9-209">한 가지 해결 더 작은 데이터 형식에 10 진수 형식을 캐스팅 하도록 쿼리를 변경 하거나 문자열 또는 이진으로 변환 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-209">One solution would be to change the query to cast the decimal type to either a smaller datatype or convert to string or binary.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="880a9-210">지정된 캐스트가 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-210">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public override double GetDouble (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float64 GetDouble(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDouble (i As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override double GetDouble(int i);" />
      <MemberSignature Language="F#" Value="override this.GetDouble : int -&gt; double" Usage="odbcDataReader.GetDouble i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="880a9-211">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-211">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="880a9-212">지정된 열의 값을 배정밀도 부동 소수점 숫자로 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-212">Gets the value of the specified column as a double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="880a9-213">배정밀도 부동 소수점 숫자로 나타낸 지정된 열의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-213">The value of the specified column as a double-precision floating-point number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="880a9-214">변환은은 ODBC 드라이버의 기본 기능에 따라 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-214">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="880a9-215">변환이 지원 되지 않는 경우 메서드 호출이 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-215">If the conversion is not supported, the method call fails.</span></span>  
  
 <span data-ttu-id="880a9-216">호출 <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값을 찾도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-216">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="880a9-217">지정된 캐스트가 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-217">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="odbcDataReader.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="880a9-218">데이터 판독기의 행을 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.IEnumerator" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-218">Returns an <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the rows in the data reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="880a9-219">데이터 판독기의 행을 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.IEnumerator" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-219">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the rows in the data reader.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="880a9-220">이 메서드를 사용 하 여 명시적 열거자를 검색할 수 있지만 지 원하는 언어는 `foreach` 구성 하는 것이 데이터 판독기의 행을 반복 하는 직접 루프 구문을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-220">Although you can use this method to retrieve an explicit enumerator, in languages that support a `foreach` construct, it is simpler to use the looping construct directly in order to iterate through the rows in the data reader.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFieldType">
      <MemberSignature Language="C#" Value="public override Type GetFieldType (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetFieldType(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFieldType (i As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetFieldType(int i);" />
      <MemberSignature Language="F#" Value="override this.GetFieldType : int -&gt; Type" Usage="odbcDataReader.GetFieldType i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="880a9-221">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-221">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="880a9-222">개체의 데이터 형식인 <see cref="T:System.Type" />을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-222">Gets the <see cref="T:System.Type" /> that is the data type of the object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="880a9-223">개체의 데이터 형식인 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-223">The <see cref="T:System.Type" /> that is the data type of the object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public override float GetFloat (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 GetFloat(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetFloat(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFloat (i As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override float GetFloat(int i);" />
      <MemberSignature Language="F#" Value="override this.GetFloat : int -&gt; single" Usage="odbcDataReader.GetFloat i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="880a9-224">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-224">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="880a9-225">지정된 열의 값을 단정밀도 부동 소수점 숫자로 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-225">Gets the value of the specified column as a single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="880a9-226">지정된 열의 값을 단정밀도 부동 소수점 숫자로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-226">The value of the specified column as a single-precision floating-point number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="880a9-227">변환은은 ODBC 드라이버의 기본 기능에 따라 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-227">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="880a9-228">변환이 지원 되지 않는 경우 메서드 호출이 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-228">If the conversion is not supported then the method call will fail.</span></span>  
  
 <span data-ttu-id="880a9-229">호출 <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값을 찾도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-229">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="880a9-230">지정된 캐스트가 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-230">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public override Guid GetGuid (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Guid GetGuid(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGuid (i As Integer) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Guid GetGuid(int i);" />
      <MemberSignature Language="F#" Value="override this.GetGuid : int -&gt; Guid" Usage="odbcDataReader.GetGuid i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="880a9-231">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-231">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="880a9-232">지정된 열의 값을 GUID(Globally Unique Identifier)로 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-232">Gets the value of the specified column as a globally unique identifier (GUID).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="880a9-233">지정된 열의 값을 GUID로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-233">The value of the specified column as a GUID.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="880a9-234">변환은은 ODBC 드라이버의 기본 기능에 따라 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-234">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="880a9-235">변환이 지원 되지 않는 경우 메서드 호출이 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-235">If the conversion is not supported, the method call fails.</span></span>  
  
 <span data-ttu-id="880a9-236">호출 <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값을 찾도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-236">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="880a9-237">지정된 캐스트가 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-237">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public override short GetInt16 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int16 GetInt16(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt16 (i As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override short GetInt16(int i);" />
      <MemberSignature Language="F#" Value="override this.GetInt16 : int -&gt; int16" Usage="odbcDataReader.GetInt16 i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="880a9-238">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-238">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="880a9-239">지정된 열의 값을 16비트 부호 있는 정수로 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-239">Gets the value of the specified column as a 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="880a9-240">지정된 열의 값을 16비트 부호 있는 정수로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-240">The value of the specified column as a 16-bit signed integer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="880a9-241">변환은은 ODBC 드라이버의 기본 기능에 따라 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-241">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="880a9-242">변환이 지원 되지 않는 경우 메서드 호출이 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-242">If the conversion is not supported, the method call fails.</span></span>  
  
 <span data-ttu-id="880a9-243">호출 <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값을 찾도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-243">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="880a9-244">지정된 캐스트가 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-244">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public override int GetInt32 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetInt32(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt32 (i As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetInt32(int i);" />
      <MemberSignature Language="F#" Value="override this.GetInt32 : int -&gt; int" Usage="odbcDataReader.GetInt32 i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="880a9-245">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-245">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="880a9-246">지정된 열의 값에 해당하는 32비트 부호 있는 정수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-246">Gets the value of the specified column as a 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="880a9-247">32비트 부호 있는 정수인 지정된 열의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-247">The value of the specified column as a 32-bit signed integer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="880a9-248">변환은은 ODBC 드라이버의 기본 기능에 따라 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-248">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="880a9-249">변환이 지원 되지 않는 경우 메서드 호출이 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-249">If the conversion is not supported, the method call fails.</span></span>  
  
 <span data-ttu-id="880a9-250">호출 <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값을 찾도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-250">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="880a9-251">지정된 캐스트가 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-251">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public override long GetInt64 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetInt64(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt64 (i As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetInt64(int i);" />
      <MemberSignature Language="F#" Value="override this.GetInt64 : int -&gt; int64" Usage="odbcDataReader.GetInt64 i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="880a9-252">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-252">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="880a9-253">지정된 열의 값에 해당하는 64비트 부호 있는 정수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-253">Gets the value of the specified column as a 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="880a9-254">64비트 부호 있는 정수인 지정된 열의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-254">The value of the specified column as a 64-bit signed integer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="880a9-255">변환은은 ODBC 드라이버의 기본 기능에 따라 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-255">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="880a9-256">변환이 지원 되지 않는 경우 메서드 호출이 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-256">If the conversion is not supported, the method call fails.</span></span>  
  
 <span data-ttu-id="880a9-257">호출 <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값을 찾도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-257">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="880a9-258">지정된 캐스트가 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-258">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public override string GetName (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetName(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetName (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetName(int i);" />
      <MemberSignature Language="F#" Value="override this.GetName : int -&gt; string" Usage="odbcDataReader.GetName i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="880a9-259">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-259">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="880a9-260">지정된 열의 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-260">Gets the name of the specified column.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="880a9-261">지정된 열의 이름인 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-261">A string that is the name of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Data.Odbc.OdbcDataReader.GetOrdinal(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetOrdinal">
      <MemberSignature Language="C#" Value="public override int GetOrdinal (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetOrdinal(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetOrdinal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOrdinal (value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetOrdinal(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.GetOrdinal : string -&gt; int" Usage="odbcDataReader.GetOrdinal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="880a9-262">열 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-262">The name of the column.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="880a9-263">열 이름이 지정된 경우 열 서수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-263">Gets the column ordinal, given the name of the column.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="880a9-264">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-264">The zero-based column ordinal.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="880a9-265"><xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> 대/소문자 구분 조회를 먼저 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-265"><xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> performs a case-sensitive lookup first.</span></span> <span data-ttu-id="880a9-266">실패 한 경우에 두 번째 대/소문자 구분 검색이 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-266">If it fails, a second case-insensitive search is made.</span></span> <span data-ttu-id="880a9-267">메서드에서 throw 된 `IndexOutOfRange` 서 수는 0부터 시작 하는 열을 찾을 수 없는 경우 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-267">The method throws an `IndexOutOfRange` exception if the zero-based column ordinal is not found.</span></span>  
  
 <span data-ttu-id="880a9-268"><xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> 가 되지 일본어가 나 너비 구분 됩니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-268"><xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> is kana-width insensitive.</span></span>  
  
 <span data-ttu-id="880a9-269">서 수 기반 조회가 명명 된 조회 보다 효율적 이므로, 것이 없습니다 효율적 호출 <xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> 루프 내에서.</span><span class="sxs-lookup"><span data-stu-id="880a9-269">Because ordinal-based lookups are more efficient than named lookups, it is inefficient to call <xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> within a loop.</span></span> <span data-ttu-id="880a9-270">대신, 호출 <xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> 루프 내에서 결과 대 한 정수 변수를 사용 하 여 다음 할당을 한 번입니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-270">Instead, call <xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> one time and then assign the results to an integer variable for use within the loop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="880a9-271">다음 예제에서는 <xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-271">The following example demonstrates how to use the <xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData OdbcDataReader.GetOrdinal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcDataReader.GetOrdinal/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcDataReader.GetOrdinal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcDataReader.GetOrdinal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.Odbc.OdbcDataReader.GetName(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchemaTable();" />
      <MemberSignature Language="F#" Value="override this.GetSchemaTable : unit -&gt; System.Data.DataTable" Usage="odbcDataReader.GetSchemaTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="880a9-272">
            <see cref="T:System.Data.DataTable" />의 열 메타데이터를 정의하는 <see cref="T:System.Data.Odbc.OdbcDataReader" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-272">Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the <see cref="T:System.Data.Odbc.OdbcDataReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="880a9-273">열 메타데이터를 정의하는 <see cref="T:System.Data.DataTable" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-273">A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="880a9-274"><xref:System.Data.Odbc.OdbcDataReader.GetSchemaTable%2A> 메서드는 다음 순서 대로 각 열에 대 한 메타 데이터를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-274">The <xref:System.Data.Odbc.OdbcDataReader.GetSchemaTable%2A> method returns metadata about each column in the following order:</span></span>  
  
|<span data-ttu-id="880a9-275">DataReader 열</span><span class="sxs-lookup"><span data-stu-id="880a9-275">DataReader column</span></span>|<span data-ttu-id="880a9-276">설명</span><span class="sxs-lookup"><span data-stu-id="880a9-276">Description</span></span>|  
|-----------------------|-----------------|  
|<span data-ttu-id="880a9-277">열 이름</span><span class="sxs-lookup"><span data-stu-id="880a9-277">ColumnName</span></span>|<span data-ttu-id="880a9-278">열의 이름입니다. 이 고유 아닐 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-278">The name of the column; this might not be unique.</span></span> <span data-ttu-id="880a9-279">열 이름을 확인할 수 없으면 null 값이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-279">If the column name cannot be determined, a null value is returned.</span></span> <span data-ttu-id="880a9-280">이 이름은 항상 현재 보기 또는 명령 텍스트에 있는 열의 최근 이름 지정을 반영 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-280">This name always reflects the most recent naming of the column in the current view or command text.</span></span>|  
|<span data-ttu-id="880a9-281">ColumnOrdinal</span><span class="sxs-lookup"><span data-stu-id="880a9-281">ColumnOrdinal</span></span>|<span data-ttu-id="880a9-282">열의 0부터 시작하는 서수입니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-282">The zero-based ordinal of the column.</span></span> <span data-ttu-id="880a9-283">이 열에 null 값을 포함할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-283">This column cannot contain a null value.</span></span>|  
|<span data-ttu-id="880a9-284">ColumnSize</span><span class="sxs-lookup"><span data-stu-id="880a9-284">ColumnSize</span></span>|<span data-ttu-id="880a9-285">열에 있는 값의 가능한 최대 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-285">The maximum possible length of a value in the column.</span></span> <span data-ttu-id="880a9-286">고정 길이 데이터 형식을 사용 하는 열에 대 한 데이터 형식의 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-286">For columns that use a fixed-length data type, this is the size of the data type.</span></span>|  
|<span data-ttu-id="880a9-287">NumericPrecision</span><span class="sxs-lookup"><span data-stu-id="880a9-287">NumericPrecision</span></span>|<span data-ttu-id="880a9-288">경우 <xref:System.Data.DbType> 숫자 데이터 형식 열의 최대 전체 자릿수입니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-288">If <xref:System.Data.DbType> is a numeric data type, this is the maximum precision of the column.</span></span> <span data-ttu-id="880a9-289">전체 자릿수는 열의 정의에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-289">The precision depends on the definition of the column.</span></span> <span data-ttu-id="880a9-290">경우 <xref:System.Data.DbType> 없는 숫자 데이터 형식,이 열에 데이터를 사용 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="880a9-290">If <xref:System.Data.DbType> is not a numeric data type, do not use the data in this column.</span></span> <span data-ttu-id="880a9-291">기본 ODBC 드라이버에서 숫자가 아닌 데이터 형식에 대 한 전체 자릿수 값을 반환 하는 경우이 값은 스키마 테이블에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-291">If the underlying ODBC driver returns a precision value for a non-numeric data type, this value is used in the schema table.</span></span>|  
|<span data-ttu-id="880a9-292">NumericScale</span><span class="sxs-lookup"><span data-stu-id="880a9-292">NumericScale</span></span>|<span data-ttu-id="880a9-293">경우 <xref:System.Data.DbType> 은 <xref:System.Data.DbType.Decimal>, 소수점 오른쪽 자릿수입니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-293">If <xref:System.Data.DbType> is <xref:System.Data.DbType.Decimal>, the number of digits to the right of the decimal point.</span></span> <span data-ttu-id="880a9-294">그렇지 않으면 null 값입니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-294">Otherwise, this is a null value.</span></span> <span data-ttu-id="880a9-295">기본 ODBC 드라이버에서 숫자가 아닌 데이터 형식에 대 한 전체 자릿수 값을 반환 하는 경우이 값은 스키마 테이블에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-295">If the underlying ODBC driver returns a precision value for a non-numeric data type, this value is used in the schema table.</span></span>|  
|<span data-ttu-id="880a9-296">데이터 형식</span><span class="sxs-lookup"><span data-stu-id="880a9-296">DataType</span></span>|<span data-ttu-id="880a9-297">공용 언어 런타임 형식에 매핑됩니다 <xref:System.Data.DbType>합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-297">Maps to the common language runtime type of <xref:System.Data.DbType>.</span></span>|  
|<span data-ttu-id="880a9-298">ProviderType</span><span class="sxs-lookup"><span data-stu-id="880a9-298">ProviderType</span></span>|<span data-ttu-id="880a9-299">내부 드라이버 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-299">The underlying driver type.</span></span>|  
|<span data-ttu-id="880a9-300">IsLong</span><span class="sxs-lookup"><span data-stu-id="880a9-300">IsLong</span></span>|<span data-ttu-id="880a9-301">`true` 열이 포함 된 긴 BLOB (Binary Object) 데이터가 포함 된 경우 매우 긴 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-301">`true` if the column contains a Binary Long Object (BLOB) that contains very long data.</span></span> <span data-ttu-id="880a9-302">매우 긴 데이터의 정의 드라이버 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-302">The definition of very long data is driver-specific.</span></span>|  
|<span data-ttu-id="880a9-303">AllowDBNull</span><span class="sxs-lookup"><span data-stu-id="880a9-303">AllowDBNull</span></span>|<span data-ttu-id="880a9-304">`true` 소비자가 null 값으로는 열을 설정할 수 또는 드라이버는 소비자가 열을 null 값으로 설정할 수 있는지 여부를 확인할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-304">`true` if the consumer can set the column to a null value or if the driver cannot determine whether the consumer can set the column to a null value.</span></span> <span data-ttu-id="880a9-305">그렇지 않으면 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-305">Otherwise, `false`.</span></span> <span data-ttu-id="880a9-306">Null 값으로 설정할 수 없습니다 하는 경우에 열에서 null 값을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-306">A column may contain null values, even if it cannot be set to a null value.</span></span>|  
|<span data-ttu-id="880a9-307">IsReadOnly</span><span class="sxs-lookup"><span data-stu-id="880a9-307">IsReadOnly</span></span>|<span data-ttu-id="880a9-308">`true` 열을 수정할 수 없습니다. 그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-308">`true` if the column cannot be modified; otherwise `false`.</span></span>|  
|<span data-ttu-id="880a9-309">IsRowVersion</span><span class="sxs-lookup"><span data-stu-id="880a9-309">IsRowVersion</span></span>|<span data-ttu-id="880a9-310">열에 쓸 수 없는 영구 행 식별자를 포함 하 고 행 id에만 의미가 경우 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-310">Set if the column contains a persistent row identifier that cannot be written to, and has no meaningful value except to identity the row.</span></span>|  
|<span data-ttu-id="880a9-311">IsUnique</span><span class="sxs-lookup"><span data-stu-id="880a9-311">IsUnique</span></span>|<span data-ttu-id="880a9-312">`true`:이 열에 동일한 값 기본 테이블의 각 행을 가질 수 (BaseTableName에서 반환 된 테이블).</span><span class="sxs-lookup"><span data-stu-id="880a9-312">`true`: No two rows in the base table (the table returned in BaseTableName) can have the same value in this column.</span></span> <span data-ttu-id="880a9-313">IsUnique 되도록 보장 `true` 열 자체 키를 나타내는 경우 또는이 열에만 적용 되는 UNIQUE 유형의 제약 조건이 있는 경우.</span><span class="sxs-lookup"><span data-stu-id="880a9-313">IsUnique is guaranteed to be `true` if the column represents a key by itself or if there is a constraint of type UNIQUE that applies only to this column.</span></span><br /><br /> <span data-ttu-id="880a9-314">`false`:이 열은 기본 테이블에서 중복 값을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-314">`false`: The column can contain duplicate values in the base table.</span></span> <span data-ttu-id="880a9-315">이 열에 대 한 기본값은 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-315">The default for this column is `false`.</span></span>|  
|<span data-ttu-id="880a9-316">IsKey</span><span class="sxs-lookup"><span data-stu-id="880a9-316">IsKey</span></span>|<span data-ttu-id="880a9-317">`true`: 열이 행 집합의 열 집합 중 하나를 전체적으로 볼 때, 해당 행을 고유 하 게 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-317">`true`: The column is one of a set of columns in the rowset that, taken together, uniquely identify the row.</span></span> <span data-ttu-id="880a9-318">IsKey 된 열 집합으로 설정 `true` 행 집합의 행을 고유 하 게 식별 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-318">The set of columns with IsKey set to `true` must uniquely identify a row in the rowset.</span></span> <span data-ttu-id="880a9-319">이 열 집합이 열의 최소 집합 임을 않아도가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-319">There is no requirement that this set of columns is a minimal set of columns.</span></span> <span data-ttu-id="880a9-320">기본 테이블 기본 키, 고유 제약 조건 또는 고유 인덱스에서이 열 집합을 생성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-320">This set of columns may be generated from a base table primary key, a unique constraint, or a unique index.</span></span><br /><br /> <span data-ttu-id="880a9-321">`false`:이 열은 행을 식별할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-321">`false`: The column is not required to uniquely identify the row.</span></span>|  
|<span data-ttu-id="880a9-322">IsAutoIncrement</span><span class="sxs-lookup"><span data-stu-id="880a9-322">IsAutoIncrement</span></span>|<span data-ttu-id="880a9-323">`true` 열 고정 된 증가분; 새 행에 값을 할당 하는 경우 그렇지 않으면 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-323">`true` if the column assigns values to new rows in fixed increments; otherwise `false`.</span></span> <span data-ttu-id="880a9-324">이 열에 대 한 기본값은 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-324">The default for this column is `false`.</span></span>|  
|<span data-ttu-id="880a9-325">BaseSchemaName</span><span class="sxs-lookup"><span data-stu-id="880a9-325">BaseSchemaName</span></span>|<span data-ttu-id="880a9-326">열이 포함 된 데이터 원본에 있는 스키마의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-326">The name of the schema in the data source that contains the column.</span></span> <span data-ttu-id="880a9-327">기본 카탈로그 이름을 확인할 수 없는 경우 NULL입니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-327">NULL if the base catalog name cannot be determined.</span></span> <span data-ttu-id="880a9-328">이 열에 대 한 기본값은 null 값입니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-328">The default for this column is a null value.</span></span>|  
|<span data-ttu-id="880a9-329">BaseCatalogName</span><span class="sxs-lookup"><span data-stu-id="880a9-329">BaseCatalogName</span></span>|<span data-ttu-id="880a9-330">열이 포함 된 데이터 저장소에 있는 카탈로그의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-330">The name of the catalog in the data store that contains the column.</span></span> <span data-ttu-id="880a9-331">기본 카탈로그 이름을 확인할 수 없는 경우 NULL입니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-331">NULL if the base catalog name cannot be determined.</span></span> <span data-ttu-id="880a9-332">이 열에 대 한 기본값은 null 값입니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-332">The default for this column is a null value.</span></span>|  
|<span data-ttu-id="880a9-333">BaseTableName</span><span class="sxs-lookup"><span data-stu-id="880a9-333">BaseTableName</span></span>|<span data-ttu-id="880a9-334">테이블 또는 뷰의 열이 포함 된 데이터 저장소의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-334">The name of the table or view in the data store that contains the column.</span></span> <span data-ttu-id="880a9-335">기본 테이블 이름을 확인할 수 없는 경우 null 값입니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-335">A null value if the base table name cannot be determined.</span></span> <span data-ttu-id="880a9-336">이 열의 기본값은 null 값입니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-336">The default of this column is a null value.</span></span>|  
|<span data-ttu-id="880a9-337">BaseColumnName</span><span class="sxs-lookup"><span data-stu-id="880a9-337">BaseColumnName</span></span>|<span data-ttu-id="880a9-338">데이터 저장소의 열 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-338">The name of the column in the data store.</span></span> <span data-ttu-id="880a9-339">별칭이 사용 된 경우 열 이름 열에 반환 된 열 이름과 다를 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-339">This might be different from the column name returned in the ColumnName column if an alias was used.</span></span> <span data-ttu-id="880a9-340">데이터의 열 저장소 행 집합 열이 파생 되지만 동일 하지는 않습니다, 하는 경우 또는 기본 열 이름을 확인할 수 없는 경우 null 값입니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-340">A null value if the base column name cannot be determined or if the rowset column is derived, but not identical to, a column in the data store.</span></span> <span data-ttu-id="880a9-341">이 열에 대 한 기본값은 null 값입니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-341">The default for this column is a null value.</span></span>|  
  
 <span data-ttu-id="880a9-342">결과 집합의 모든 열에 대해 행이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-342">A row is returned for every column in the results set.</span></span>  
  
 <span data-ttu-id="880a9-343">.NET Framework Data Provider for ODBC 중 한 가지 메타 데이터 정보는 ODBC 드라이버에서 사용할 수 있는 것으로 가정 **SQLPrepare**, **SQLExecute**, 또는 **SQLExecuteDirect**함수가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-343">The .NET Framework Data Provider for ODBC assumes that metadata information is available from an ODBC driver after one of **SQLPrepare**, **SQLExecute**, or **SQLExecuteDirect** functions are called.</span></span> <span data-ttu-id="880a9-344">"SchemaOnly"에 대 한 명령을 제대로 작동 하려면 동작 **SQLPrepare** 필요한 메타 데이터 정보를 반환 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-344">For "SchemaOnly" command behavior to work correctly, **SQLPrepare** must return the required metadata information.</span></span> <span data-ttu-id="880a9-345">일부 ODBC 드라이버는이 기능을 지원 하거나 메타 데이터 정보를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-345">Not all ODBC drivers support this function or return metadata information.</span></span> <span data-ttu-id="880a9-346">이 경우 일부 또는 모든 SchemaTable에 정보가 누락 됩니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-346">In these cases, part or all of the information in the SchemaTable will be missing.</span></span> <span data-ttu-id="880a9-347">호출한 후 **SQLPrepare**, 데이터 공급자는 ODBC 호출 **SQLColAttribute** (예를 들어 IsLong, 고유 이면 쿼리 결과의 각 열에 관한 메타 데이터 정보를 찾을 수 함수 AllowDBNull BaseTableName, BaseColumnName)입니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-347">After calling **SQLPrepare**, The data provider calls the ODBC **SQLColAttribute** function to find the metadata information related to each column in the query results (for example, IsLong, IsUnique, AllowDBNull, BaseTableName, BaseColumnName).</span></span> <span data-ttu-id="880a9-348">기본 드라이버를 반환 하지 않으면이 정보 중 일부가 SchemaTable의 해당 값 올바르게 설정 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-348">If the underlying driver does not return some of this information, the corresponding values in the SchemaTable will not be set correctly.</span></span>  
  
 <span data-ttu-id="880a9-349">.NET Framework Data Provider for ODBC 호출 또한 **SQLPrimaryKeys** 모든 테이블에 대 한 주요 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-349">The .NET Framework Data Provider for ODBC also calls **SQLPrimaryKeys** to retrieve the key information for every table.</span></span> <span data-ttu-id="880a9-350">데이터 공급자를 호출 하는 기본 ODBC 드라이버는이 함수를 지원 하지 않습니다, **SQLStatistics** 고유 인덱스 중 하나는 테이블에 대 한 기본 키로 선택 하 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-350">If the underlying ODBC driver does not support this function, the data provider calls **SQLStatistics** and chooses one of the unique indexes as the primary key for the table.</span></span> <span data-ttu-id="880a9-351">이 항상 올바르게 원하는 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-351">This may not always give the results that you want.</span></span>  
  
 <span data-ttu-id="880a9-352"><xref:System.Data.Odbc.OdbcCommandBuilder> 올바르게 작동 하려면 테이블의 기본 키를 올바로 식별을 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-352"><xref:System.Data.Odbc.OdbcCommandBuilder> needs the correct identification of the primary keys of the table in order to work correctly.</span></span> <span data-ttu-id="880a9-353">쿼리 결과에 모든 열에 대해 BaseTableName에서 반환 되지 않으면.NET Framework Data Provider for ODBC 쿼리에 포함 된 테이블 이름을 찾으려면 SQL 문을 구문 분석 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-353">If the BaseTableName is not returned for every column in the query results, the .NET Framework Data Provider for ODBC tries to parse the SQL statement to find the table names involved in the query.</span></span> <span data-ttu-id="880a9-354">보안 그룹은 UPDATE, INSERT, DELETE 및 간단한 SELECT 문으로 있고 저장된 프로시저 또는 조인을 기반으로 하는 SELECT 문을 사용 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-354">This works with UPDATE, INSERT, DELETE and simple SELECT statements, but not with stored procedures or SELECT statements based on joins.</span></span> <span data-ttu-id="880a9-355">이 테이블에서 스키마 정보를 일부 또는 모든 없으면는 <xref:System.Data.Odbc.OdbcCommandBuilder> 부족 하 여 스키마 정보를 올바른 INSERT, UPDATE 또는 DELETE 문을 자동으로 생성 되었기 때문에 속성이 제대로 작동 하지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-355">If some or all the schema information is missing from this table, the <xref:System.Data.Odbc.OdbcCommandBuilder> will not work correctly, because it has insufficient schema information to automatically generate the correct INSERT, UPDATE, or DELETE statements.</span></span>  
  
 <span data-ttu-id="880a9-356">올바른 정보를 반환 하는 메타 데이터 열, 호출 해야 되도록 <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> KeyInfo로 설정 동작 매개 변수를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-356">To make sure that metadata columns return the correct information, you must call <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> with the behavior parameter set to KeyInfo.</span></span> <span data-ttu-id="880a9-357">그렇지 않으면 스키마 테이블의 열 중 일부 기본값, null 또는 잘못 된 데이터를 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-357">Otherwise, some of the columns in the schema table may return default, null, or incorrect data.</span></span>  
  
 <span data-ttu-id="880a9-358">Oracle를 ODBC.NET를 사용 하 여 ODBC 드라이버를 통해 키 열 별칭이 지정 된 키로 인식 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-358">When you use ODBC.NET to Oracle via the ODBC driver, aliased key columns are not recognized as keys.</span></span> <span data-ttu-id="880a9-359">이 OdbcDataReader 스키마 테이블에 IsKey 및 IsUnique 열을 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-359">This affects the IsKey and IsUnique columns in the schema table of the OdbcDataReader.</span></span> <span data-ttu-id="880a9-360">업데이트 논리를 생성 하는 OdbcCommandBuilder 능력을 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-360">It also affects the OdbcCommandBuilder's ability to generate updating logic.</span></span> <span data-ttu-id="880a9-361">기본 키 열에 대 한 별칭을 사용 하지 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-361">Consider not using an alias for a primary key column.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="880a9-362">Microsoft Jet ODBC driver에는 항상 고유 인덱스와 기본 키 열 null 허용 여부는 nullable 인지에 관계 없이으로 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-362">The Microsoft Jet ODBC driver always returns unique index and primary key columns as nullable regardless of whether they are nullable or not.</span></span> <span data-ttu-id="880a9-363">드라이버도 기본 키 정보와; 반환 하지 않습니다. 고유 인덱스 및 열, 기본 키 열을 포함 하 여 이들 사이에서 구분 하지 않고의 목록을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-363">The driver also does not return primary key information; it only returns a list of unique indexes and their columns, including primary key columns, without differentiating among them.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="880a9-364">
            <see cref="T:System.Data.Odbc.OdbcDataReader" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-364">The <see cref="T:System.Data.Odbc.OdbcDataReader" /> is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(int i);" />
      <MemberSignature Language="F#" Value="override this.GetString : int -&gt; string" Usage="odbcDataReader.GetString i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="880a9-365">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-365">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="880a9-366">
            <see cref="T:System.String" />으로 지정된 열 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-366">Gets the value of the specified column as a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="880a9-367">
            <see cref="T:System.String" />으로 지정된 열의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-367">The value of the specified column as a <see cref="T:System.String" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="880a9-368">변환은은 ODBC 드라이버의 기본 기능에 따라 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-368">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="880a9-369">변환이 지원 되지 않는 경우 메서드 호출이 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-369">If the conversion is not supported, the method call fails.</span></span>  
  
 <span data-ttu-id="880a9-370">호출 <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값을 찾도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-370">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="880a9-371">지정된 캐스트가 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-371">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTime">
      <MemberSignature Language="C#" Value="public TimeSpan GetTime (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan GetTime(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTime (i As Integer) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan GetTime(int i);" />
      <MemberSignature Language="F#" Value="member this.GetTime : int -&gt; TimeSpan" Usage="odbcDataReader.GetTime i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="880a9-372">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-372">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="880a9-373">지정된 열의 값에 해당하는 <see cref="T:System.TimeSpan" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-373">Gets the value of the specified column as a <see cref="T:System.TimeSpan" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="880a9-374">지정된 열의 값을 <see cref="T:System.TimeSpan" /> 개체로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-374">The value of the specified column as a <see cref="T:System.TimeSpan" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValue (i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(int i);" />
      <MemberSignature Language="F#" Value="override this.GetValue : int -&gt; obj" Usage="odbcDataReader.GetValue i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="880a9-375">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-375">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="880a9-376">네이티브 형식에 있는 지정된 서수에서 열의 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-376">Gets the value of the column at the specified ordinal in its native format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="880a9-377">반환할 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-377">The value to return.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="880a9-378">이 메서드는 null 데이터베이스 열에 대해서는 <xref:System.DBNull>을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-378">This method returns <xref:System.DBNull> for null database columns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public override int GetValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="override this.GetValues : obj[] -&gt; int" Usage="odbcDataReader.GetValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="880a9-379">특성 열을 복사해 올 <see cref="T:System.Object" /> 형식의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-379">An array of type <see cref="T:System.Object" /> into which to copy the attribute columns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="880a9-380">현재 행의 열 값으로 개체 배열을 채웁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-380">Populates an array of objects with the column values of the current row.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="880a9-381">배열에 포함된 <see cref="T:System.Object" /> 인스턴스의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-381">The number of instances of <see cref="T:System.Object" /> in the array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="880a9-382">대부분의 응용 프로그램의 <xref:System.Data.Odbc.OdbcDataReader.GetValues%2A> 메서드 각 열을 개별적으로 검색 하는 대신 모든 열을 검색 하는 효율적인 방법을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-382">For most applications, the <xref:System.Data.Odbc.OdbcDataReader.GetValues%2A> method provides an efficient means for retrieving all columns, instead of retrieving each column individually.</span></span>  
  
 <span data-ttu-id="880a9-383">전달할 수는 <xref:System.Object> 보다 적은 수의 결과 행에 포함 된 열에 포함 된 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-383">You can pass an <xref:System.Object> array that contains fewer than the number of columns that are contained in the resulting row.</span></span> <span data-ttu-id="880a9-384">데이터의 양만 <xref:System.Object> 배열 저장 배열에 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-384">Only the amount of data the <xref:System.Object> array holds is copied to the array.</span></span> <span data-ttu-id="880a9-385">전달할 수도 있습니다는 <xref:System.Object> 배열 길이가 결과 행에 포함 된 열 수를 초과 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-385">You can also pass an <xref:System.Object> array whose length is more than the number of columns that are contained in the resulting row.</span></span>  
  
 <span data-ttu-id="880a9-386">이 메서드는 null 데이터베이스 열에 대해서는 <xref:System.DBNull>을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-386">This method returns <xref:System.DBNull> for null database columns.</span></span>  
  
   
  
## Examples  
 [!code-csharp[OdbcDataReader_GetValues#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/odbcdatareader_getvalues/cs/source.cs#1)]
 [!code-vb[OdbcDataReader_GetValues#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/odbcdatareader_getvalues/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasRows">
      <MemberSignature Language="C#" Value="public override bool HasRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRows" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataReader.HasRows" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasRows { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasRows : bool" Usage="System.Data.Odbc.OdbcDataReader.HasRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="880a9-387">
            <see cref="T:System.Data.Odbc.OdbcDataReader" />에 하나 이상의 행이 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-387">Gets a value that indicates whether the <see cref="T:System.Data.Odbc.OdbcDataReader" /> contains one or more rows.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="880a9-388">
            <see cref="T:System.Data.Odbc.OdbcDataReader" />에 행이 하나 이상 포함되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-388">
              <see langword="true" /> if the <see cref="T:System.Data.Odbc.OdbcDataReader" /> contains one or more rows; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public override bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsClosed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="System.Data.Odbc.OdbcDataReader.IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="880a9-389">
            <see cref="T:System.Data.Odbc.OdbcDataReader" />가 닫혔는지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-389">Indicates whether the <see cref="T:System.Data.Odbc.OdbcDataReader" /> is closed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="880a9-390">
            <see cref="T:System.Data.Odbc.OdbcDataReader" />가 닫혔으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-390">
              <see langword="true" /> if the <see cref="T:System.Data.Odbc.OdbcDataReader" /> is closed; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="880a9-391"><xref:System.Data.Odbc.OdbcDataReader.IsClosed%2A> 및 <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A> 후 호출할 수 있는 속성만 <xref:System.Data.Odbc.OdbcDataReader> 닫힙니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-391"><xref:System.Data.Odbc.OdbcDataReader.IsClosed%2A> and <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.Odbc.OdbcDataReader> is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public override bool IsDBNull (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDBNull(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.IsDBNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDBNull (i As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDBNull(int i);" />
      <MemberSignature Language="F#" Value="override this.IsDBNull : int -&gt; bool" Usage="odbcDataReader.IsDBNull i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="880a9-392">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-392">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="880a9-393">존재하지 않거나 누락된 값이 열에 포함되었는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-393">Gets a value that indicates whether the column contains nonexistent or missing values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="880a9-394">지정된 열 값이 <see cref="T:System.DBNull" />과 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-394">
              <see langword="true" /> if the specified column value is equivalent to <see cref="T:System.DBNull" />; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="880a9-395">오류 발생을 방지 하려면이 메서드는 형식화 된를 호출 하기 전에 null 열 값 get 메서드를 호출 (예를 들어 <xref:System.Data.Odbc.OdbcDataReader.GetByte%2A>, <xref:System.Data.Odbc.OdbcDataReader.GetChar%2A>등).</span><span class="sxs-lookup"><span data-stu-id="880a9-395">To avoid raising an error, call this method to look for null column values before calling the typed Get methods (for example, <xref:System.Data.Odbc.OdbcDataReader.GetByte%2A>, <xref:System.Data.Odbc.OdbcDataReader.GetChar%2A>, and so on).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="880a9-396">열 값을 네이티브 형식으로 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-396">Gets the value of a column in its native format.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[int i] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int i); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj" Usage="System.Data.Odbc.OdbcDataReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="880a9-397">열 서수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-397">The column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="880a9-398">열 서수가 지정된 경우, 지정된 열의 값을 네이티브 형식으로 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-398">Gets the value of the specified column in its native format given the column ordinal.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="880a9-399">지정된 열의 네이티브 형식 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-399">The value of the specified column in its native format.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="880a9-400">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-400">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string value] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(value As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj" Usage="System.Data.Odbc.OdbcDataReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="880a9-401">열 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-401">The column name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="880a9-402">열 이름이 지정된 경우, 지정된 열의 값을 네이티브 형식으로 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-402">Gets the value of the specified column in its native format given the column name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="880a9-403">지정된 열의 네이티브 형식 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-403">The value of the specified column in its native format.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="880a9-404">대/소문자 구분 조회를 먼저 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-404">A case-sensitive lookup is performed first.</span></span> <span data-ttu-id="880a9-405">실패 한 경우에 두 번째 대/소문자 구분 검색이 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-405">If it fails, a second case-insensitive search is made.</span></span>  
  
 <span data-ttu-id="880a9-406">이 메서드는 일본어가 나 너비 구분 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-406">This method is kana-width insensitive.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="880a9-407">지정된 이름의 열을 찾을 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-407">No column with the specified name was found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public override bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool NextResult();" />
      <MemberSignature Language="F#" Value="override this.NextResult : unit -&gt; bool" Usage="odbcDataReader.NextResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="880a9-408">SQL 배치 문의 결과를 읽는 동안 <see cref="T:System.Data.Odbc.OdbcDataReader" />가 다음 결과를 읽도록 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-408">Advances the <see cref="T:System.Data.Odbc.OdbcDataReader" /> to the next result when reading the results of batch SQL statements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="880a9-409">결과 집합이 더 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-409">
              <see langword="true" /> if there are more result sets; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="880a9-410">일괄 처리 SQL 문을 실행 하 여 생성 될 수 있는 여러 결과 처리 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-410">Used to process multiple results that can be generated by executing batch SQL statements.</span></span>  
  
 <span data-ttu-id="880a9-411">기본적으로는 <xref:System.Data.Odbc.OdbcDataReader> 첫 번째 결과에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-411">By default, the <xref:System.Data.Odbc.OdbcDataReader> is positioned on the first result.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="odbcDataReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="880a9-412">
            <see cref="T:System.Data.Odbc.OdbcDataReader" />를 다음 레코드로 이동합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-412">Advances the <see cref="T:System.Data.Odbc.OdbcDataReader" /> to the next record.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="880a9-413">행이 더 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-413">
              <see langword="true" /> if there are more rows; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="880a9-414">기본 위치는 <xref:System.Data.Odbc.OdbcDataReader> 첫 번째 레코드 앞입니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-414">The default position of the <xref:System.Data.Odbc.OdbcDataReader> is before the first record.</span></span> <span data-ttu-id="880a9-415">따라서 호출 해야 <xref:System.Data.Odbc.OdbcDataReader.Read%2A> 데이터에 액세스를 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-415">Therefore, you must call <xref:System.Data.Odbc.OdbcDataReader.Read%2A> to start accessing any data.</span></span>  
  
 <span data-ttu-id="880a9-416">동안는 <xref:System.Data.Odbc.OdbcDataReader> 사용 되는 연결 된 <xref:System.Data.Odbc.OdbcConnection> 중인 할 때까지 호출 <xref:System.Data.Odbc.OdbcDataReader.Close%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-416">While the <xref:System.Data.Odbc.OdbcDataReader> is being used, the associated <xref:System.Data.Odbc.OdbcConnection> is busy serving it until you call <xref:System.Data.Odbc.OdbcDataReader.Close%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="880a9-417">다음 예제에서는 <xref:System.Data.Odbc.OdbcConnection>, <xref:System.Data.Odbc.OdbcCommand>, 및 <xref:System.Data.Odbc.OdbcDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-417">The following example creates an <xref:System.Data.Odbc.OdbcConnection>, an <xref:System.Data.Odbc.OdbcCommand>, and an <xref:System.Data.Odbc.OdbcDataReader>.</span></span> <span data-ttu-id="880a9-418">이 예제에서는 콘솔에이 작성 하는 데이터를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-418">The example reads through the data, writing it out to the console.</span></span> <span data-ttu-id="880a9-419">마지막는 <xref:System.Data.Odbc.OdbcDataReader>, 한 다음은 <xref:System.Data.Odbc.OdbcConnection>합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-419">Finally, the example closes the <xref:System.Data.Odbc.OdbcDataReader>, and then the <xref:System.Data.Odbc.OdbcConnection>.</span></span>  
  
 [!code-csharp[Classic WebData IDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public override int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RecordsAffected { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RecordsAffected : int" Usage="System.Data.Odbc.OdbcDataReader.RecordsAffected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="880a9-420">SQL 문을 실행하여 변경, 삽입 또는 삭제된 행 수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-420">Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="880a9-421">변경, 삽입 또는 삭제된 행 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-421">The number of rows changed, inserted, or deleted.</span>
          </span>
          <span data-ttu-id="880a9-422">SELECT 문에 대해서는 -1을 반환하고, 영향을 받은 행이 없거나 문이 실패하면 0을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="880a9-422">-1 for SELECT statements; 0 if no rows were affected, or the statement failed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="880a9-423"><xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A> 모든 행을 닫을 때까지 속성이 설정 되지 않은 <xref:System.Data.Odbc.OdbcDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-423">The <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A> property is not set until all rows are read and you close the <xref:System.Data.Odbc.OdbcDataReader>.</span></span>  
  
 <span data-ttu-id="880a9-424">이 속성의 값은 누적 합니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-424">The value of this property is cumulative.</span></span> <span data-ttu-id="880a9-425">예를 들어, 일괄 처리 모드의 값에 두 개의 레코드를 삽입 하면 <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A> 은 2가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-425">For example, if two records are inserted in batch mode, the value of <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A> will be 2.</span></span>  
  
 <span data-ttu-id="880a9-426"><xref:System.Data.Odbc.OdbcDataReader.IsClosed%2A> 및 <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A> 후 호출할 수 있는 속성만 <xref:System.Data.Odbc.OdbcDataReader> 닫힙니다.</span><span class="sxs-lookup"><span data-stu-id="880a9-426"><xref:System.Data.Odbc.OdbcDataReader.IsClosed%2A> and <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.Odbc.OdbcDataReader> is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>