<Type Name="OdbcDataAdapter" FullName="System.Data.Odbc.OdbcDataAdapter">
  <TypeSignature Language="C#" Value="public sealed class OdbcDataAdapter : System.Data.Common.DbDataAdapter, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OdbcDataAdapter extends System.Data.Common.DbDataAdapter implements class System.Data.IDataAdapter, class System.Data.IDbDataAdapter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Odbc.OdbcDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OdbcDataAdapter&#xA;Inherits DbDataAdapter&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OdbcDataAdapter sealed : System::Data::Common::DbDataAdapter, ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Odbc</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("RowUpdated")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OdbcDataAdapterDesigner, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OdbcDataAdapterToolboxItem, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b4f8b-101"><see cref="T:System.Data.DataSet" />을 채우고 데이터 소스를 업데이트하는 데 사용되는 데이터 명령 집합 및 데이터 소스에 대한 연결을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-101">Represents a set of data commands and a connection to a data source that are used to fill the <see cref="T:System.Data.DataSet" /> and update the data source.</span></span> <span data-ttu-id="b4f8b-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4f8b-103"><xref:System.Data.Odbc.OdbcDataAdapter> 간의 다리 역할을 한 `DataSet` 와 데이터 소스를 검색 하 고 데이터를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-103">The <xref:System.Data.Odbc.OdbcDataAdapter> serves as a bridge between a `DataSet` and data source for retrieving and saving data.</span></span> <span data-ttu-id="b4f8b-104"><xref:System.Data.Odbc.OdbcDataAdapter> 를 사용 하 여이 연결을 제공 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 에 데이터 원본에서 데이터를 로드 하는 <xref:System.Data.DataSet>, 및를 사용 하 여 <xref:System.Data.Common.DbDataAdapter.Update%2A> 에서 변경 내용을 보낼는 <xref:System.Data.DataSet> 데이터 소스에 다시 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-104">The <xref:System.Data.Odbc.OdbcDataAdapter> provides this bridge by using <xref:System.Data.Common.DbDataAdapter.Fill%2A> to load data from the data source into the <xref:System.Data.DataSet>, and using <xref:System.Data.Common.DbDataAdapter.Update%2A> to send changes made in the <xref:System.Data.DataSet> back to the data source.</span></span>  
  
 <span data-ttu-id="b4f8b-105">경우는 <xref:System.Data.Odbc.OdbcDataAdapter> 채웁니다는 <xref:System.Data.DataSet>, 존재 하지 않을 경우 필요한 테이블 및 반환된 된 데이터에 대 한 열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-105">When the <xref:System.Data.Odbc.OdbcDataAdapter> fills a <xref:System.Data.DataSet>, it creates the required tables and columns for the returned data if they do not already exist.</span></span> <span data-ttu-id="b4f8b-106">그러나 기본 키 정보에에서 없는 암시적으로 만든된 스키마 하지 않는 한는 <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> 속성이 <xref:System.Data.MissingSchemaAction.AddWithKey>합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-106">However, primary key information is not included in the implicitly created schema unless the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property is set to <xref:System.Data.MissingSchemaAction.AddWithKey>.</span></span> <span data-ttu-id="b4f8b-107">설정할 수도 있습니다는 <xref:System.Data.Odbc.OdbcDataAdapter> 의 스키마를 만들기는 <xref:System.Data.DataSet>를 사용 하 여 데이터를 채우기 전에 기본 키 정보를 포함 하 여 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-107">You may also have the <xref:System.Data.Odbc.OdbcDataAdapter> create the schema of the <xref:System.Data.DataSet>, including primary key information, before filling it with data using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>.</span></span> <span data-ttu-id="b4f8b-108">자세한 내용은 참조 [기존 제약 조건 데이터 집합에 추가](~/docs/framework/data/adonet/adding-existing-constraints-to-a-dataset.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-108">For more information, see [Adding Existing Constraints to a DataSet](~/docs/framework/data/adonet/adding-existing-constraints-to-a-dataset.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4f8b-109">호출 하는 경우는 `Fill` 메서드는 기본 키 열이 없는 데이터 원본에는 <xref:System.Data.Odbc.OdbcDataAdapter> unique 제약 조건 열에서 기본 키를 승격 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-109">When you call the `Fill` method on a data source that does not have a primary key column, the <xref:System.Data.Odbc.OdbcDataAdapter> tries to promote the unique constraint column to the primary key.</span></span> <span data-ttu-id="b4f8b-110">프로세스에는 <xref:System.Data.Odbc.OdbcDataAdapter> null 허용 안 함으로 unique 제약 조건을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-110">In the process, the <xref:System.Data.Odbc.OdbcDataAdapter> marks the unique constraint as not nullable.</span></span> <span data-ttu-id="b4f8b-111">이 동작은 unique 제약 조건 열에서 null 값이 있으면 작동 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-111">This behavior works unless there is a null value in the unique constraint column.</span></span> <span data-ttu-id="b4f8b-112">Null 값이 있는 경우는 `Fill` 메서드는 제약 조건 위반으로 인해 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-112">If there is a null value, the `Fill` method fails with a constraint violation.</span></span> <span data-ttu-id="b4f8b-113">이러한 상황을 방지 하려면 unique 제약 조건 열에서 null 값을 허용 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-113">To avoid this situation, do not allow null values in the unique constraint column.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4f8b-114">하나만 네이티브 ODBC 드라이버의 제한으로 인해 <xref:System.Data.DataTable> 호출 하는 경우 수리 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-114">Due to the limitations of native ODBC drivers, only one <xref:System.Data.DataTable> is ever returned when you call <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>.</span></span> <span data-ttu-id="b4f8b-115">이 어떤 다중에서 SQL 일괄 처리 문을 실행 하는 경우에 <xref:System.Data.DataTable> 개체가 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-115">This is true even when executing SQL batch statements from which multiple <xref:System.Data.DataTable> objects would be expected.</span></span>  
  
 <span data-ttu-id="b4f8b-116"><xref:System.Data.Odbc.OdbcDataAdapter> 도 포함 되어는 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>, <xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A>, <xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A>, <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A>, 및 `TableMappings` 속성을 로드 하 고 데이터의 업데이트를 용이 하 게 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-116">The <xref:System.Data.Odbc.OdbcDataAdapter> also includes the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>, <xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A>, <xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A>, <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A>, and `TableMappings` properties to facilitate loading and updating of data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4f8b-117">다음 예제에서는 <xref:System.Data.Odbc.OdbcCommand>, <xref:System.Data.Odbc.OdbcDataAdapter>, 및 <xref:System.Data.Odbc.OdbcConnection> 레코드 선택를 채우는 한 `DataSet` 선택한 행과 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-117">The following example uses <xref:System.Data.Odbc.OdbcCommand>, <xref:System.Data.Odbc.OdbcDataAdapter>, and <xref:System.Data.Odbc.OdbcConnection> to select records and populate a `DataSet` with the selected rows.</span></span>  
  
 [!code-csharp[Classic WebData OdbcDataAdapter#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcDataAdapter/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcDataAdapter#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcDataAdapter/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b4f8b-118"><see cref="T:System.Data.Odbc.OdbcDataAdapter" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-118">Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcDataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcDataAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4f8b-119"><see cref="T:System.Data.Odbc.OdbcDataAdapter" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-119">Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4f8b-120">인스턴스를 만들 때 <xref:System.Data.Odbc.OdbcDataAdapter>, 테이블에 표시 된 대로 다음 쓰기 전용 및 읽기 전용 속성이 해당 기본값으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-120">When you create an instance of <xref:System.Data.Odbc.OdbcDataAdapter>, the following write-only and read-only properties are set to their default values, as shown in the table.</span></span>  
  
|<span data-ttu-id="b4f8b-121">속성</span><span class="sxs-lookup"><span data-stu-id="b4f8b-121">Properties</span></span>|<span data-ttu-id="b4f8b-122">기본값</span><span class="sxs-lookup"><span data-stu-id="b4f8b-122">Default value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="b4f8b-123">속성에 대 한 별도 호출을 통해 이러한 속성의 값을 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-123">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4f8b-124">다음 예제에서는 <xref:System.Data.Odbc.OdbcDataAdapter> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-124">The following example creates an <xref:System.Data.Odbc.OdbcDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OdbcDataAdapter.OdbcDataAdapter#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcDataAdapter.OdbcDataAdapter/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcDataAdapter.OdbcDataAdapter#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcDataAdapter.OdbcDataAdapter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcDataAdapter (System.Data.Odbc.OdbcCommand selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Odbc.OdbcCommand selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataAdapter.#ctor(System.Data.Odbc.OdbcCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommand As OdbcCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcDataAdapter(System::Data::Odbc::OdbcCommand ^ selectCommand);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommand" Type="System.Data.Odbc.OdbcCommand" />
      </Parameters>
      <Docs>
        <param name="selectCommand"><span data-ttu-id="b4f8b-125">SQL SELECT 문 또는 저장 프로시저이고 <see cref="T:System.Data.Odbc.OdbcCommand" />의 <see cref="P:System.Data.Odbc.OdbcDataAdapter.SelectCommand" /> 속성으로 설정되는 <see cref="T:System.Data.Odbc.OdbcDataAdapter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-125">An <see cref="T:System.Data.Odbc.OdbcCommand" /> that is an SQL SELECT statement or stored procedure, and is set as the <see cref="P:System.Data.Odbc.OdbcDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.Odbc.OdbcDataAdapter" />.</span></span></param>
        <summary><span data-ttu-id="b4f8b-126">지정된 SQL SELECT 문을 사용하여 <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-126">Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> class with the specified SQL SELECT statement.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4f8b-127">이 구현에서 <xref:System.Data.Odbc.OdbcDataAdapter> 생성자는 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> 속성에 지정 된 값을는 `selectCommand` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-127">This implementation of the <xref:System.Data.Odbc.OdbcDataAdapter> constructor sets the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> property to the value specified in the `selectCommand` parameter.</span></span>  
  
 <span data-ttu-id="b4f8b-128">인스턴스를 만들 때 <xref:System.Data.Odbc.OdbcDataAdapter>, 테이블에 표시 된 대로 다음 쓰기 전용 및 읽기 전용 속성이 해당 기본값으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-128">When you create an instance of <xref:System.Data.Odbc.OdbcDataAdapter>, the following write-only and read-only properties are set to their default values, as shown in the table.</span></span>  
  
|<span data-ttu-id="b4f8b-129">속성</span><span class="sxs-lookup"><span data-stu-id="b4f8b-129">Properties</span></span>|<span data-ttu-id="b4f8b-130">초기 값</span><span class="sxs-lookup"><span data-stu-id="b4f8b-130">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="b4f8b-131">속성에 대 한 별도 호출을 통해 이러한 속성의 값을 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-131">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4f8b-132">다음 예제에서는 <xref:System.Data.Odbc.OdbcDataAdapter> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-132">The following example creates an <xref:System.Data.Odbc.OdbcDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OdbcDataAdapter.OdbcDataAdapter1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcDataAdapter.OdbcDataAdapter1/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcDataAdapter.OdbcDataAdapter1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcDataAdapter.OdbcDataAdapter1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcDataAdapter (string selectCommandText, System.Data.Odbc.OdbcConnection selectConnection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string selectCommandText, class System.Data.Odbc.OdbcConnection selectConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataAdapter.#ctor(System.String,System.Data.Odbc.OdbcConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommandText As String, selectConnection As OdbcConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcDataAdapter(System::String ^ selectCommandText, System::Data::Odbc::OdbcConnection ^ selectConnection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnection" Type="System.Data.Odbc.OdbcConnection" />
      </Parameters>
      <Docs>
        <param name="selectCommandText"><span data-ttu-id="b4f8b-133">SQL SELECT 문 또는 저장 프로시저이고 <see cref="P:System.Data.Odbc.OdbcDataAdapter.SelectCommand" />의 <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> 속성에서 사용될 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-133">A string that is a SQL SELECT statement or stored procedure to be used by the <see cref="P:System.Data.Odbc.OdbcDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.Odbc.OdbcDataAdapter" />.</span></span></param>
        <param name="selectConnection"><span data-ttu-id="b4f8b-134">연결을 나타내는 <see cref="T:System.Data.Odbc.OdbcConnection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-134">An <see cref="T:System.Data.Odbc.OdbcConnection" /> that represents the connection.</span></span></param>
        <summary><span data-ttu-id="b4f8b-135">SQL SELECT 문 및 <see cref="T:System.Data.Odbc.OdbcDataAdapter" />을 사용하여 <see cref="T:System.Data.Odbc.OdbcConnection" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-135">Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> class with an SQL SELECT statement and an <see cref="T:System.Data.Odbc.OdbcConnection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4f8b-136">이 구현에서 <xref:System.Data.Odbc.OdbcDataAdapter> 호출 해야 하는 응용 프로그램에 유용할 수는 `Fill` 둘 이상에 대 한 메서드 <xref:System.Data.Odbc.OdbcDataAdapter> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-136">This implementation of the <xref:System.Data.Odbc.OdbcDataAdapter> can be useful in an application that must call the `Fill` method for two or more <xref:System.Data.Odbc.OdbcDataAdapter> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4f8b-137">다음 예제에서는 <xref:System.Data.Odbc.OdbcDataAdapter> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-137">The following example creates an <xref:System.Data.Odbc.OdbcDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OdbcDataAdapter.OdbcDataAdapter3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcDataAdapter.OdbcDataAdapter3/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcDataAdapter.OdbcDataAdapter3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcDataAdapter.OdbcDataAdapter3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcDataAdapter (string selectCommandText, string selectConnectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string selectCommandText, string selectConnectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataAdapter.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommandText As String, selectConnectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcDataAdapter(System::String ^ selectCommandText, System::String ^ selectConnectionString);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="selectCommandText"><span data-ttu-id="b4f8b-138">SQL SELECT 문 또는 저장 프로시저이고 <see cref="P:System.Data.Odbc.OdbcDataAdapter.SelectCommand" />의 <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> 속성에서 사용될 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-138">A string that is a SQL SELECT statement or stored procedure to be used by the <see cref="P:System.Data.Odbc.OdbcDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.Odbc.OdbcDataAdapter" />.</span></span></param>
        <param name="selectConnectionString"><span data-ttu-id="b4f8b-139">연결 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-139">The connection string.</span></span></param>
        <summary><span data-ttu-id="b4f8b-140">SQL SELECT 문과 연결 문자열을 사용하여 <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-140">Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> class with an SQL SELECT statement and a connection string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4f8b-141">이 오버 로드는 <xref:System.Data.Odbc.OdbcDataAdapter> 생성자 사용 하 여는 `selectConnectionString` 매개 변수를 설정의 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-141">This overload of the <xref:System.Data.Odbc.OdbcDataAdapter> constructor uses the `selectConnectionString` parameter to set the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="b4f8b-142">그러나 연결이 열리지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-142">However, it does not open the connection.</span></span> <span data-ttu-id="b4f8b-143">여전히 명시적으로 열어야 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-143">You still must explicitly open the connection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4f8b-144">다음 예제에서는 <xref:System.Data.Odbc.OdbcDataAdapter> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-144">The following example creates an <xref:System.Data.Odbc.OdbcDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OdbcDataAdapter.OdbcDataAdapter2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcDataAdapter.OdbcDataAdapter2/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcDataAdapter.OdbcDataAdapter2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcDataAdapter.OdbcDataAdapter2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatedEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::RowUpdatedEventArgs ^ CreateRowUpdatedEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatedEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatingEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::RowUpdatingEventArgs ^ CreateRowUpdatingEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatingEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Odbc.OdbcCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Odbc::OdbcCommand ^ DeleteCommand { System::Data::Odbc::OdbcCommand ^ get(); void set(System::Data::Odbc::OdbcCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4f8b-145">데이터 소스의 레코드를 삭제하는 데 사용할 SQL 문이나 저장 프로시저를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-145">Gets or sets an SQL statement or stored procedure used to delete records in the data source.</span></span></summary>
        <value><span data-ttu-id="b4f8b-146"><see cref="T:System.Data.Odbc.OdbcCommand" />의 삭제된 행에 해당하는 데이터 소스의 레코드를 삭제하기 위해 업데이트 작업 동안 사용되는 <see cref="T:System.Data.DataSet" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-146">An <see cref="T:System.Data.Odbc.OdbcCommand" /> used during an update operation to delete records in the data source that correspond to deleted rows in the <see cref="T:System.Data.DataSet" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4f8b-147">경우는 <xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A> 속성에 할당 되는 이전에 만든 <xref:System.Data.Odbc.OdbcCommand>, <xref:System.Data.Odbc.OdbcCommand> 가 복제 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-147">When the <xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A> property is assigned to a previously created <xref:System.Data.Odbc.OdbcCommand>, the <xref:System.Data.Odbc.OdbcCommand> is not cloned.</span></span> <span data-ttu-id="b4f8b-148">대신,는 <xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A> 이전에 만든에 대 한 참조를 유지 관리 <xref:System.Data.Odbc.OdbcCommand>합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-148">Instead, the <xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A> maintains a reference to the previously created <xref:System.Data.Odbc.OdbcCommand>.</span></span>  
  
 <span data-ttu-id="b4f8b-149">업데이트 작업을 하는 동안 경우 <xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A> 설정 되어 있지 않고 기본 키 정보에는 <xref:System.Data.DataSet>를 사용할 수 있습니다는 <xref:System.Data.Odbc.OdbcCommandBuilder> 자동으로 생성 하는 클래스는 <xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A>는 조정하는데필요한추가명령을<xref:System.Data.DataSet>데이터 원본에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-149">During an update operation, if <xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A> is not set and primary key information is present in the <xref:System.Data.DataSet>, you can use the <xref:System.Data.Odbc.OdbcCommandBuilder> class to automatically generate the <xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A>, and additional commands needed to reconcile the <xref:System.Data.DataSet> to the data source.</span></span> <span data-ttu-id="b4f8b-150">이 위해 설정 된 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> 속성은 <xref:System.Data.Odbc.OdbcDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-150">To do this, set the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> property of the <xref:System.Data.Odbc.OdbcDataAdapter>.</span></span> <span data-ttu-id="b4f8b-151">키 열에 대 한 정보가 있어야 생성 논리는 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-151">The generation logic also requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="b4f8b-152">자세한 내용은 참조 [commandbuilder 생성 명령을](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-152">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4f8b-153">다음 예제에서는 <xref:System.Data.Odbc.OdbcDataAdapter> 설정 하 고는 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> 및 <xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-153">The following example creates an <xref:System.Data.Odbc.OdbcDataAdapter> and sets the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> and <xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A> properties.</span></span> <span data-ttu-id="b4f8b-154">이미 만든 것으로 가정는 <xref:System.Data.Odbc.OdbcConnection> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-154">It assumes that you have already created an <xref:System.Data.Odbc.OdbcConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData OdbcDataAdapter.DeleteCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcDataAdapter.DeleteCommand/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcDataAdapter.DeleteCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcDataAdapter.DeleteCommand/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Odbc.OdbcCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Odbc::OdbcCommand ^ InsertCommand { System::Data::Odbc::OdbcCommand ^ get(); void set(System::Data::Odbc::OdbcCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4f8b-155">데이터 소스에 새 레코드를 삽입하는 데 사용되는 SQL 문 또는 저장 프로시저를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-155">Gets or sets an SQL statement or stored procedure used to insert new records into the data source.</span></span></summary>
        <value><span data-ttu-id="b4f8b-156"><see cref="T:System.Data.DataSet" />에서 새 행에 해당하는 데이터 소스에 레코드를 삽입하기 위해 업데이트 작업 중에 사용되는 <see cref="T:System.Data.Odbc.OdbcCommand" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-156">An <see cref="T:System.Data.Odbc.OdbcCommand" /> used during an update operation to insert records in the data source that correspond to new rows in the <see cref="T:System.Data.DataSet" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4f8b-157">때는 <xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A> 속성에 할당 되는 이전에 만든 <xref:System.Data.Odbc.OdbcCommand> 개체는 <xref:System.Data.Odbc.OdbcCommand> 가 복제 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-157">When the <xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A> property is assigned to a previously created <xref:System.Data.Odbc.OdbcCommand> object, the <xref:System.Data.Odbc.OdbcCommand> is not cloned.</span></span> <span data-ttu-id="b4f8b-158">대신, <xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A> 이전에 만든에 대 한 참조를 유지 관리 <xref:System.Data.Odbc.OdbcCommand>합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-158">Instead, <xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A> maintains a reference to the previously created <xref:System.Data.Odbc.OdbcCommand>.</span></span>  
  
 <span data-ttu-id="b4f8b-159">업데이트 작업을 하는 동안 경우 <xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A> 설정 되어 있지 않고 기본 키 정보에는 <xref:System.Data.DataSet>를 사용할 수 있습니다는 <xref:System.Data.Odbc.OdbcCommandBuilder> 자동으로 생성 하는 클래스 <xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A>를 조정 하는 데 필요한 추가 명령을 <xref:System.Data.DataSet> 데이터 원본.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-159">During an update operation, if <xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A> is not set and primary key information is present in the <xref:System.Data.DataSet>, you can use the <xref:System.Data.Odbc.OdbcCommandBuilder> class to automatically generate <xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A>, and additional commands needed to reconcile the <xref:System.Data.DataSet> to the data source.</span></span> <span data-ttu-id="b4f8b-160">이 위해 설정 된 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> 속성은 <xref:System.Data.Odbc.OdbcDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-160">To do this, set the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> property of the <xref:System.Data.Odbc.OdbcDataAdapter>.</span></span> <span data-ttu-id="b4f8b-161">키 열에 대 한 정보가 있어야 생성 논리는 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-161">The generation logic also requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="b4f8b-162">자세한 내용은 참조 [commandbuilder 생성 명령을](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-162">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4f8b-163">이 명령 실행 하 여 행이 반환 하는 경우 이러한 행에 추가할 수 있습니다는 <xref:System.Data.DataSet> 설정 하는 방법에 따라는 <xref:System.Data.Odbc.OdbcCommand.UpdatedRowSource%2A> 의 속성은 <xref:System.Data.Odbc.OdbcCommand> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-163">If execution of this command returns rows, these rows may be added to the <xref:System.Data.DataSet> depending upon how you set the <xref:System.Data.Odbc.OdbcCommand.UpdatedRowSource%2A> property of the <xref:System.Data.Odbc.OdbcCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4f8b-164">다음 예제에서는 <xref:System.Data.Odbc.OdbcDataAdapter> 설정 하 고는 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> 및 <xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-164">The following example creates an <xref:System.Data.Odbc.OdbcDataAdapter> and sets the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> and <xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A> properties.</span></span> <span data-ttu-id="b4f8b-165">이미 만든 것으로 가정는 <xref:System.Data.Odbc.OdbcConnection> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-165">It assumes that you have already created an <xref:System.Data.Odbc.OdbcConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData OdbcDataAdapter.InsertCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcDataAdapter.InsertCommand/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcDataAdapter.InsertCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcDataAdapter.InsertCommand/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRowUpdated(class System.Data.Common.RowUpdatedEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRowUpdated (value As RowUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRowUpdated(System::Data::Common::RowUpdatedEventArgs ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRowUpdating(class System.Data.Common.RowUpdatingEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRowUpdating (value As RowUpdatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRowUpdating(System::Data::Common::RowUpdatingEventArgs ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdated">
      <MemberSignature Language="C#" Value="public event System.Data.Odbc.OdbcRowUpdatedEventHandler RowUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.Odbc.OdbcRowUpdatedEventHandler RowUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Data.Odbc.OdbcDataAdapter.RowUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUpdated As OdbcRowUpdatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::Odbc::OdbcRowUpdatedEventHandler ^ RowUpdated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcRowUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4f8b-166">데이터 소스에 대해 명령이 실행된 후에 업데이트 작업을 수행하는 동안 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-166">Occurs during an update operation after a command is executed against the data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4f8b-167">사용 하는 경우 <xref:System.Data.Common.DbDataAdapter.Update%2A>, 업데이트 하는 데이터 행 단위로 발생 하는 두 가지 이벤트가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-167">When you use <xref:System.Data.Common.DbDataAdapter.Update%2A>, there are two events that occur per data row updated.</span></span> <span data-ttu-id="b4f8b-168">실행 순서는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-168">The order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="b4f8b-169">값은 <xref:System.Data.DataRow> 매개 변수 값으로 이동 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-169">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="b4f8b-170"><xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 이벤트가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-170">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="b4f8b-171">명령을 실행합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-171">The command executes.</span></span>  
  
4.  <span data-ttu-id="b4f8b-172">명령으로 설정 되어 있으면 `FirstReturnedRecord`, 첫 번째 반환 결과에 배치 되는 <xref:System.Data.DataRow>합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-172">If the command is set to `FirstReturnedRecord`, the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="b4f8b-173">에 지정 되므로 출력 매개 변수가 있는 경우는 <xref:System.Data.DataRow>합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-173">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="b4f8b-174"><xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 이벤트가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-174">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="b4f8b-175"><xref:System.Data.DataRow.AcceptChanges%2A>가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="b4f8b-175"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdating">
      <MemberSignature Language="C#" Value="public event System.Data.Odbc.OdbcRowUpdatingEventHandler RowUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.Odbc.OdbcRowUpdatingEventHandler RowUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Data.Odbc.OdbcDataAdapter.RowUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUpdating As OdbcRowUpdatingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::Odbc::OdbcRowUpdatingEventHandler ^ RowUpdating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcRowUpdatingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4f8b-176">데이터 소스에 대해 명령이 실행되기 전에 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />를 수행하는 동안 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-176">Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> before a command is executed against the data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4f8b-177">사용 하는 경우 <xref:System.Data.Common.DbDataAdapter.Update%2A>, 업데이트 하는 데이터 행 단위로 발생 하는 두 가지 이벤트가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-177">When you use <xref:System.Data.Common.DbDataAdapter.Update%2A>, there are two events that occur per data row updated.</span></span> <span data-ttu-id="b4f8b-178">실행 순서는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-178">The order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="b4f8b-179">값은 <xref:System.Data.DataRow> 매개 변수 값으로 이동 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-179">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="b4f8b-180"><xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 이벤트가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-180">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="b4f8b-181">명령을 실행합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-181">The command executes.</span></span>  
  
4.  <span data-ttu-id="b4f8b-182">명령으로 설정 되어 있으면 `FirstReturnedRecord`, 첫 번째 반환 결과에 배치 되는 <xref:System.Data.DataRow>합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-182">If the command is set to `FirstReturnedRecord`, the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="b4f8b-183">에 지정 되므로 출력 매개 변수가 있는 경우는 <xref:System.Data.DataRow>합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-183">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="b4f8b-184"><xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 이벤트가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-184">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="b4f8b-185"><xref:System.Data.DataRow.AcceptChanges%2A>가 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="b4f8b-185"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Odbc.OdbcCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Odbc::OdbcCommand ^ SelectCommand { System::Data::Odbc::OdbcCommand ^ get(); void set(System::Data::Odbc::OdbcCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4f8b-186">데이터 소스의 레코드를 선택하는 데 사용하는 SQL 문이나 저장 프로시저를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-186">Gets or sets an SQL statement or stored procedure used to select records in the data source.</span></span></summary>
        <value><span data-ttu-id="b4f8b-187">채우기 작업을 수행하는 동안 <see cref="T:System.Data.Odbc.OdbcCommand" />에 배치하기 위해 데이터 소스에서 레코드를 선택하는 데 사용되는 <see cref="T:System.Data.DataSet" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-187">An <see cref="T:System.Data.Odbc.OdbcCommand" /> that is used during a fill operation to select records from data source for placement in the <see cref="T:System.Data.DataSet" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4f8b-188">때 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> 할당 되는 이전에 만든 <xref:System.Data.Odbc.OdbcCommand>, <xref:System.Data.Odbc.OdbcCommand> 가 복제 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-188">When <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> is assigned to a previously created <xref:System.Data.Odbc.OdbcCommand>, the <xref:System.Data.Odbc.OdbcCommand> is not cloned.</span></span> <span data-ttu-id="b4f8b-189">대신,는 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> 이전에 만든에 대 한 참조를 유지 관리 <xref:System.Data.Odbc.OdbcCommand> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-189">Instead, the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> maintains a reference to the previously created <xref:System.Data.Odbc.OdbcCommand> object.</span></span>  
  
 <span data-ttu-id="b4f8b-190">경우 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> 행이 없으면 반환에 테이블이 추가 되는 <xref:System.Data.DataSet>, 예외가 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-190">If <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> returns no rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4f8b-191">다음 예제에서는 <xref:System.Data.Odbc.OdbcDataAdapter> 설정 하 고는 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> 및 <xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-191">The following example creates an <xref:System.Data.Odbc.OdbcDataAdapter> and sets the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> and <xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A> properties.</span></span> <span data-ttu-id="b4f8b-192">이미 만든 것으로 가정는 <xref:System.Data.Odbc.OdbcConnection> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-192">It assumes that you have already created an <xref:System.Data.Odbc.OdbcConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData OdbcDataAdapter.SelectCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcDataAdapter.SelectCommand/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcDataAdapter.SelectCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcDataAdapter.SelectCommand/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.DeleteCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#DeleteCommand" />
      <MemberSignature Language="VB.NET" Value=" Property DeleteCommand As IDbCommand Implements IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.DeleteCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4f8b-193">이 멤버에 대한 설명은 <see cref="M:System.Data.IDbDataAdapter.DeleteCommand" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-193">For a description of this member, see <see cref="M:System.Data.IDbDataAdapter.DeleteCommand" />.</span></span></summary>
        <value><span data-ttu-id="b4f8b-194">업데이트를 수행하는 동안 데이터 집합의 삭제된 행에 대한 데이터 소스에서 레코드를 삭제하는 데 사용되는 <see cref="T:System.Data.IDbCommand" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-194">An <see cref="T:System.Data.IDbCommand" /> used during an update to delete records in the data source for deleted rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4f8b-195">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="b4f8b-195">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b4f8b-196"><xref:System.Data.Odbc.OdbcDataAdapter> 인스턴스가 <xref:System.Data.IDbDataAdapter> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-196">It can be used only when the <xref:System.Data.Odbc.OdbcDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.InsertCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#InsertCommand" />
      <MemberSignature Language="VB.NET" Value=" Property InsertCommand As IDbCommand Implements IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.InsertCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4f8b-197">이 멤버에 대한 설명은 <see cref="M:System.Data.IDbDataAdapter.InsertCommand" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-197">For a description of this member, see <see cref="M:System.Data.IDbDataAdapter.InsertCommand" />.</span></span></summary>
        <value><span data-ttu-id="b4f8b-198">업데이트를 수행하는 동안 데이터 소스에서 데이터 집합에 배치할 레코드를 삽입하는 데 사용되는 <see cref="T:System.Data.IDbCommand" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-198">An <see cref="T:System.Data.IDbCommand" /> that is used during an update to insert records from a data source for placement in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4f8b-199">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="b4f8b-199">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b4f8b-200"><xref:System.Data.Odbc.OdbcDataAdapter> 인스턴스가 <xref:System.Data.IDbDataAdapter> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-200">It can be used only when the <xref:System.Data.Odbc.OdbcDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.SelectCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#SelectCommand" />
      <MemberSignature Language="VB.NET" Value=" Property SelectCommand As IDbCommand Implements IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.SelectCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4f8b-201">이 멤버에 대한 설명은 <see cref="M:System.Data.IDbDataAdapter.SelectCommand" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-201">For a description of this member, see <see cref="M:System.Data.IDbDataAdapter.SelectCommand" />.</span></span></summary>
        <value><span data-ttu-id="b4f8b-202">업데이트를 수행하는 동안 데이터 소스에서 데이터 집합에 배치할 레코드를 선택하는 데 사용되는 <see cref="T:System.Data.IDbCommand" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-202">An <see cref="T:System.Data.IDbCommand" /> that is used during an update to select records from a data source for placement in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4f8b-203">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="b4f8b-203">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b4f8b-204"><xref:System.Data.Odbc.OdbcDataAdapter> 인스턴스가 <xref:System.Data.IDbDataAdapter> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-204">It can be used only when the <xref:System.Data.Odbc.OdbcDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.UpdateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#UpdateCommand" />
      <MemberSignature Language="VB.NET" Value=" Property UpdateCommand As IDbCommand Implements IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.UpdateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4f8b-205">이 멤버에 대한 설명은 <see cref="M:System.Data.IDbDataAdapter.UpdateCommand" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-205">For a description of this member, see <see cref="M:System.Data.IDbDataAdapter.UpdateCommand" />.</span></span></summary>
        <value><span data-ttu-id="b4f8b-206">업데이트를 수행하는 동안 데이터 집합의 수정된 행에 대한 레코드를 데이터 소스에서 업데이트하는 데 사용되는 <see cref="T:System.Data.IDbCommand" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-206">An <see cref="T:System.Data.IDbCommand" /> used during an update to update records in the data source for modified rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4f8b-207">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="b4f8b-207">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b4f8b-208"><xref:System.Data.Odbc.OdbcDataAdapter> 인스턴스가 <xref:System.Data.IDbDataAdapter> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-208">It can be used only when the <xref:System.Data.Odbc.OdbcDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataAdapter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4f8b-209">이 멤버에 대한 설명은 <see cref="M:System.ICloneable.Clone" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-209">For a description of this member, see <see cref="M:System.ICloneable.Clone" />.</span></span></summary>
        <returns><span data-ttu-id="b4f8b-210">이 인스턴스의 복사본인 새 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-210">A new <see cref="T:System.Object" /> that is a copy of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4f8b-211">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="b4f8b-211">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b4f8b-212"><xref:System.Data.Odbc.OdbcDataAdapter> 인스턴스가 <xref:System.ICloneable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-212">It can be used only when the <xref:System.Data.Odbc.OdbcDataAdapter> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Odbc.OdbcCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Odbc::OdbcCommand ^ UpdateCommand { System::Data::Odbc::OdbcCommand ^ get(); void set(System::Data::Odbc::OdbcCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4f8b-213">데이터 소스의 레코드를 업데이트하는 데 사용되는 SQL 문 또는 저장 프로시저를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-213">Gets or sets an SQL statement or stored procedure used to update records in the data source.</span></span></summary>
        <value><span data-ttu-id="b4f8b-214"><see cref="T:System.Data.DataSet" />에서 수정된 행에 해당하는 데이터 소스의 레코드를 업데이트하기 위해 업데이트 작업 중에 사용되는 <see cref="T:System.Data.Odbc.OdbcCommand" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-214">An <see cref="T:System.Data.Odbc.OdbcCommand" /> used during an update operation to update records in the data source that correspond to modified rows in the <see cref="T:System.Data.DataSet" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4f8b-215">때 <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A> 할당 되는 이전에 만든 <xref:System.Data.Odbc.OdbcCommand>, <xref:System.Data.Odbc.OdbcCommand> 가 복제 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-215">When <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A> is assigned to a previously created <xref:System.Data.Odbc.OdbcCommand>, the <xref:System.Data.Odbc.OdbcCommand> is not cloned.</span></span> <span data-ttu-id="b4f8b-216">대신,는 <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A> 이전에 만든에 대 한 참조를 유지 관리 <xref:System.Data.Odbc.OdbcCommand> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-216">Instead, the <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A> maintains a reference to the previously created <xref:System.Data.Odbc.OdbcCommand> object.</span></span>  
  
 <span data-ttu-id="b4f8b-217">업데이트 작업을 하는 동안 경우 <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A> 설정 되어 있지 않고 기본 키 정보에는 <xref:System.Data.DataSet>를 사용할 수 있습니다는 <xref:System.Data.Odbc.OdbcCommandBuilder> 자동으로 생성 하는 클래스 <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A>를 조정 하는 데 필요한 추가 명령을 <xref:System.Data.DataSet> 데이터 원본.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-217">During an update operation, if <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A> is not set and primary key information is present in the <xref:System.Data.DataSet>, you can use the <xref:System.Data.Odbc.OdbcCommandBuilder> class to automatically generate <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A>, and additional commands needed to reconcile the <xref:System.Data.DataSet> to the data source.</span></span> <span data-ttu-id="b4f8b-218">이 위해 설정 된 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> 속성은 <xref:System.Data.Odbc.OdbcDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-218">To do this, set the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> property of the <xref:System.Data.Odbc.OdbcDataAdapter>.</span></span> <span data-ttu-id="b4f8b-219">키 열에 대 한 정보가 있어야 생성 논리는 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-219">The generation logic also requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="b4f8b-220">자세한 내용은 참조 [commandbuilder 생성 명령을](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-220">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4f8b-221">이러한 행이이 명령 실행 하 여 행이 반환 하는 경우와 병합 될 수 있습니다는 <xref:System.Data.DataSet> 설정 하는 방법에 따라는 <xref:System.Data.Odbc.OdbcCommand.UpdatedRowSource%2A> 의 속성은 <xref:System.Data.Odbc.OdbcCommand> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-221">If execution of this command returns rows, these rows may be merged with the <xref:System.Data.DataSet> depending upon how you set the <xref:System.Data.Odbc.OdbcCommand.UpdatedRowSource%2A> property of the <xref:System.Data.Odbc.OdbcCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4f8b-222">다음 예제에서는 <xref:System.Data.Odbc.OdbcDataAdapter> 설정 하 고는 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> 및 <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-222">The following example creates an <xref:System.Data.Odbc.OdbcDataAdapter> and sets the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> and <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A> properties.</span></span> <span data-ttu-id="b4f8b-223">이미 만든 것으로 가정는 <xref:System.Data.Odbc.OdbcConnection> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b4f8b-223">It assumes that you have already created an <xref:System.Data.Odbc.OdbcConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData OdbcDataAdapter.UpdateCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcDataAdapter.UpdateCommand/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcDataAdapter.UpdateCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcDataAdapter.UpdateCommand/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>