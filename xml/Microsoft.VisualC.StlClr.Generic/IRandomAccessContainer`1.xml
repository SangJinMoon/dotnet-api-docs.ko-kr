<Type Name="IRandomAccessContainer&lt;TValue&gt;" FullName="Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer&lt;TValue&gt;">
  <TypeSignature Language="C#" Value="public interface IRandomAccessContainer&lt;TValue&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IRandomAccessContainer`1&lt;TValue&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRandomAccessContainer(Of TValue)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TValue&gt;&#xA;public interface class IRandomAccessContainer" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="TValue">[!INCLUDE[cpp_iter_arg](~/includes/cpp-iter-arg-md.md)]</typeparam>
    <summary><span data-ttu-id="3f9e9-101">임의 액세스 반복기를 지원하는 컨테이너의 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="3f9e9-101">Interface for a container that supports random access iteration.</span></span> <span data-ttu-id="3f9e9-102">임의 액세스 반복기를 구현하는 컨테이너는 <c>operator++</c>를 호출하여 한 위치만큼 앞으로 이동, <c>operator--</c>를 호출하여 한 위치만큼 뒤로 이동, <c>operator[]</c>를 사용하여 요소에 액세스, 포인터 산술 연산을 사용하여 요소에 액세스하는 등의 작업을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="3f9e9-102">Containers that implement random access iteration support the following operations: moving forward one position by calling <c>operator++</c>, moving backward one position by calling <c>operator--</c>, accessing an element by using <c>operator[]</c>, and accessing an element by using pointer arithmetic.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="at_bias">
      <MemberSignature Language="C#" Value="public TValue at_bias (int A_0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TValue at_bias(int32 A_0) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.at_bias(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function at_bias (A_0 As Integer) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue % at_bias(int A_0);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue@</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="A_0" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="A_0">To be added.</param>
        <summary><span data-ttu-id="3f9e9-103">컨테이너의 현재 바이어스에 있는 요소를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3f9e9-103">Gets the element at the current bias of the container.</span></span> <span data-ttu-id="3f9e9-104">바이어스는 현재 요소 0에 대한 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="3f9e9-104">The bias is the offset from the current element zero.</span></span></summary>
        <returns><span data-ttu-id="3f9e9-105">지정된 바이어스의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="3f9e9-105">The element at the given bias.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="valid_bias">
      <MemberSignature Language="C#" Value="public bool valid_bias (int A_0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool valid_bias(int32 A_0) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.valid_bias(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function valid_bias (A_0 As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool valid_bias(int A_0);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="A_0" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="A_0"><span data-ttu-id="3f9e9-106">현재 바이어스입니다.</span><span class="sxs-lookup"><span data-stu-id="3f9e9-106">The current bias.</span></span></param>
        <summary><span data-ttu-id="3f9e9-107">지정된 바이어스가 컨테이너에 대해 유효한지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="3f9e9-107">Determines if a given bias is valid for the container.</span></span> <span data-ttu-id="3f9e9-108">바이어스는 현재 요소 0에 대한 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="3f9e9-108">The bias is the offset from the current element zero.</span></span></summary>
        <returns>
          <span data-ttu-id="3f9e9-109">지정된 바이어스가 컨테이너에 대해 유효하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3f9e9-109"><see langword="true" /> if the given bias is valid for the container; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>