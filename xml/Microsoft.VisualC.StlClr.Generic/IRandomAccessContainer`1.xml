<Type Name="IRandomAccessContainer&lt;TValue&gt;" FullName="Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer&lt;TValue&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ff68b64b49d02e64c6c7b9d74d970f6e08daec32" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36658493" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IRandomAccessContainer&lt;TValue&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IRandomAccessContainer`1&lt;TValue&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRandomAccessContainer(Of TValue)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TValue&gt;&#xA;public interface class IRandomAccessContainer" />
  <TypeSignature Language="F#" Value="type IRandomAccessContainer&lt;'Value&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="TValue">
      <span data-ttu-id="d9e86-101">[! INCLUDE[cpp_iter_arg](~/includes/cpp-iter-arg-md.md)]</span>
      <span class="sxs-lookup">
        <span data-stu-id="d9e86-101">[!INCLUDE[cpp_iter_arg](~/includes/cpp-iter-arg-md.md)]</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="d9e86-102">임의 액세스 반복기를 지원하는 컨테이너의 인터페이스입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d9e86-102">Interface for a container that supports random access iteration.</span>
      </span>
      <span data-ttu-id="d9e86-103">임의 액세스 반복기를 구현하는 컨테이너는 <c>operator++</c>를 호출하여 한 위치만큼 앞으로 이동, <c>operator--</c>를 호출하여 한 위치만큼 뒤로 이동, <c>operator[]</c>를 사용하여 요소에 액세스, 포인터 산술 연산을 사용하여 요소에 액세스하는 등의 작업을 지원합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d9e86-103">Containers that implement random access iteration support the following operations: moving forward one position by calling <c>operator++</c>, moving backward one position by calling <c>operator--</c>, accessing an element by using <c>operator[]</c>, and accessing an element by using pointer arithmetic.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="at_bias">
      <MemberSignature Language="C#" Value="public TValue at_bias (int A_0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TValue at_bias(int32 A_0) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.at_bias(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function at_bias (A_0 As Integer) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue % at_bias(int A_0);" />
      <MemberSignature Language="F#" Value="abstract member at_bias : int -&gt; " Usage="iRandomAccessContainer.at_bias A_0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue@</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="A_0" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="A_0">To be added.</param>
        <summary>
          <span data-ttu-id="d9e86-104">컨테이너의 현재 바이어스에 있는 요소를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9e86-104">Gets the element at the current bias of the container.</span>
          </span>
          <span data-ttu-id="d9e86-105">바이어스는 현재 요소 0에 대한 오프셋입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9e86-105">The bias is the offset from the current element zero.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9e86-106">지정된 바이어스의 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9e86-106">The element at the given bias.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="valid_bias">
      <MemberSignature Language="C#" Value="public bool valid_bias (int A_0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool valid_bias(int32 A_0) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.valid_bias(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function valid_bias (A_0 As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool valid_bias(int A_0);" />
      <MemberSignature Language="F#" Value="abstract member valid_bias : int -&gt; bool" Usage="iRandomAccessContainer.valid_bias A_0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="A_0" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="A_0">
          <span data-ttu-id="d9e86-107">현재 바이어스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9e86-107">The current bias.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9e86-108">지정된 바이어스가 컨테이너에 대해 유효한지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9e86-108">Determines if a given bias is valid for the container.</span>
          </span>
          <span data-ttu-id="d9e86-109">바이어스는 현재 요소 0에 대한 오프셋입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9e86-109">The bias is the offset from the current element zero.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9e86-110">지정된 바이어스가 컨테이너에 대해 유효하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9e86-110">
              <see langword="true" /> if the given bias is valid for the container; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>