<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IRandomAccessContainer`1.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59d915cf451e514a228e79daacb2aeeab32e3c1bc.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d915cf451e514a228e79daacb2aeeab32e3c1bc</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1">
          <source>Interface for a container that supports random access iteration.</source>
          <target state="translated">임의 액세스 반복기를 지원하는 컨테이너의 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1">
          <source>Containers that implement random access iteration support the following operations: moving forward one position by calling <bpt id="p1">&lt;c&gt;</bpt>operator++<ept id="p1">&lt;/c&gt;</ept>, moving backward one position by calling <bpt id="p2">&lt;c&gt;</bpt>operator--<ept id="p2">&lt;/c&gt;</ept>, accessing an element by using <bpt id="p3">&lt;c&gt;</bpt>operator[]<ept id="p3">&lt;/c&gt;</ept>, and accessing an element by using pointer arithmetic.</source>
          <target state="translated">임의 액세스 반복기를 구현하는 컨테이너는 <bpt id="p1">&lt;c&gt;</bpt>operator++<ept id="p1">&lt;/c&gt;</ept>를 호출하여 한 위치만큼 앞으로 이동, <bpt id="p2">&lt;c&gt;</bpt>operator--<ept id="p2">&lt;/c&gt;</ept>를 호출하여 한 위치만큼 뒤로 이동, <bpt id="p3">&lt;c&gt;</bpt>operator[]<ept id="p3">&lt;/c&gt;</ept>를 사용하여 요소에 액세스, 포인터 산술 연산을 사용하여 요소에 액세스하는 등의 작업을 지원합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.at_bias(System.Int32)">
          <source>Gets the element at the current bias of the container.</source>
          <target state="translated">컨테이너의 현재 바이어스에 있는 요소를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.at_bias(System.Int32)">
          <source>The bias is the offset from the current element zero.</source>
          <target state="translated">바이어스는 현재 요소 0에 대한 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.at_bias(System.Int32)">
          <source>The element at the given bias.</source>
          <target state="translated">지정된 바이어스의 요소입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.valid_bias(System.Int32)">
          <source>The current bias.</source>
          <target state="translated">현재 바이어스입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.valid_bias(System.Int32)">
          <source>Determines if a given bias is valid for the container.</source>
          <target state="translated">지정된 바이어스가 컨테이너에 대해 유효한지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.valid_bias(System.Int32)">
          <source>The bias is the offset from the current element zero.</source>
          <target state="translated">바이어스는 현재 요소 0에 대한 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.valid_bias(System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the given bias is valid for the container; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">지정된 바이어스가 컨테이너에 대해 유효하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>