<Type Name="IBaseIterator&lt;TValue&gt;" FullName="Microsoft.VisualC.StlClr.Generic.IBaseIterator&lt;TValue&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a7df75614d71057f281f554e416fb637623aea36" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52605716" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IBaseIterator&lt;TValue&gt; : ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IBaseIterator`1&lt;TValue&gt; implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBaseIterator(Of TValue)&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TValue&gt;&#xA;public interface class IBaseIterator : ICloneable" />
  <TypeSignature Language="F#" Value="type IBaseIterator&lt;'Value&gt; = interface&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TValue">[!INCLUDE[cpp_iter_arg](~/includes/cpp-iter-arg-md.md)]</typeparam>
    <summary>
      <span data-ttu-id="bbafe-101">모든 STL/CLR 반복기의 기본 인터페이스를 정의합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bbafe-101">Defines the base interface for all STL/CLR iterators.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="container">
      <MemberSignature Language="C#" Value="public object container ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object container() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.container" />
      <MemberSignature Language="VB.NET" Value="Public Function container () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ container();" />
      <MemberSignature Language="F#" Value="abstract member container : unit -&gt; obj" Usage="iBaseIterator.container " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bbafe-102">반복기가 이동하고 있는 컨테이너를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbafe-102">Gets the container that the iterator is traversing.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bbafe-103">반복기가 이동하고 있는 컨테이너입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbafe-103">The container that the iterator is traversing.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="get_bias">
      <MemberSignature Language="C#" Value="public int get_bias ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 get_bias() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.get_bias" />
      <MemberSignature Language="VB.NET" Value="Public Function get_bias () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int get_bias();" />
      <MemberSignature Language="F#" Value="abstract member get_bias : unit -&gt; int" Usage="iBaseIterator.get_bias " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bbafe-104">반복기의 바이어스를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbafe-104">Gets the bias of the iterator.</span>
          </span>
          <span data-ttu-id="bbafe-105">바이어스는 요소 0에 대한 반복기의 오프셋입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbafe-105">The bias is the offset of the iterator from element zero.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bbafe-106">반복기의 바이어스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbafe-106">The bias of the iterator.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="get_node">
      <MemberSignature Language="C#" Value="public object get_node ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object get_node() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.get_node" />
      <MemberSignature Language="VB.NET" Value="Public Function get_node () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ get_node();" />
      <MemberSignature Language="F#" Value="abstract member get_node : unit -&gt; obj" Usage="iBaseIterator.get_node " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bbafe-107">반복기가 가리키고 있는 노드 또는 요소를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbafe-107">Gets the node, or element, that the iterator is pointing to.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bbafe-108">반복기가 현재 가리키고 있는 노드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbafe-108">The node that the iterator is currently pointing to.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="next">
      <MemberSignature Language="C#" Value="public void next ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void next() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.next" />
      <MemberSignature Language="VB.NET" Value="Public Sub next ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void next();" />
      <MemberSignature Language="F#" Value="abstract member next : unit -&gt; unit" Usage="iBaseIterator.next " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bbafe-109">반복기를 기본 컨테이너의 다음 위치로, 또는 컨테이너를 모두 이동한 경우에는 컨테이너 끝 뒤의 첫 번째 위치로 증가시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbafe-109">Increments the iterator to the next position in the underlying container, or to the first position beyond the end of container if the container has been completely traversed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="valid">
      <MemberSignature Language="C#" Value="public bool valid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool valid() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.valid" />
      <MemberSignature Language="VB.NET" Value="Public Function valid () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool valid();" />
      <MemberSignature Language="F#" Value="abstract member valid : unit -&gt; bool" Usage="iBaseIterator.valid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bbafe-110">반복기가 유효하며 기본 컨테이너를 이동하는 데 안전하게 사용할 수 있는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbafe-110">Determines whether the iterator is valid and can be safely used to traverse the underlying container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bbafe-111">반복기가 유효하고 사용하기에 안전하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbafe-111">
              <see langword="true" /> if the iterator is valid and safe to use; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>