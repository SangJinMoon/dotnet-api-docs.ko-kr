<Type Name="IRandomAccessIterator&lt;TValue&gt;" FullName="Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator&lt;TValue&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e0bbc0fbe8acd575bb7d2bfcbbf8e73c4741fa1f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IRandomAccessIterator&lt;TValue&gt; : Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator&lt;TValue&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IRandomAccessIterator`1&lt;TValue&gt; implements class Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1&lt;!TValue&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRandomAccessIterator(Of TValue)&#xA;Implements IBidirectionalIterator(Of TValue)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TValue&gt;&#xA;public interface class IRandomAccessIterator : Microsoft::VisualC::StlClr::Generic::IBidirectionalIterator&lt;TValue&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator&lt;TValue&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TValue">[!INCLUDE[cpp_iter_arg](~/includes/cpp-iter-arg-md.md)]</typeparam>
    <summary>
      <span data-ttu-id="82311-101">임의 액세스 반복기의 인터페이스를 정의합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="82311-101">Defines the interface for a random access iterator.</span>
      </span>
      <span data-ttu-id="82311-102">임의 액세스 반복기는 <c>operator++</c>를 호출하여 한 위치만큼 앞으로 이동, <c>operator--</c>를 호출하여 한 위치만큼 뒤로 이동, <c>operator[]</c>를 사용하여 요소에 액세스, 포인터 산술 연산을 사용하여 요소에 액세스하는 등의 작업을 지원합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="82311-102">Random access iterators support the following operations: moving forward one position by calling <c>operator++</c>, moving backward one position by calling <c>operator--</c>, accessing an element by using <c>operator[]</c>, and accessing an element by using pointer arithmetic.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="distance">
      <MemberSignature Language="C#" Value="public int distance (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator&lt;TValue&gt; _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 distance(class Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1&lt;!TValue&gt; _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function distance (_Right As IRandomAccessIterator(Of TValue)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int distance(Microsoft::VisualC::StlClr::Generic::IRandomAccessIterator&lt;TValue&gt; ^ _Right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Right">
          <span data-ttu-id="82311-103">현재 반복기와 같은 컨테이너를 가리키는 유효한 반복기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82311-103">A valid iterator that points to the same container as the current iterator.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82311-104">현재 반복기가 가리키고 있는 요소와 지정된 반복기가 가리키고 있는 요소 사이의 거리를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82311-104">Determines the distance between the element that the current iterator is pointing to and the element that the given iterator is pointing to.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82311-105">현재 반복기가 가리키고 있는 요소와 <paramref name="_Right" />가 가리키고 있는 요소 사이의 거리(요소의 수로 표현)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82311-105">The distance, in number of elements, between the element that the current iterator is pointing to and the element that <paramref name="_Right" /> is pointing to.</span>
          </span>
          <span data-ttu-id="82311-106">
            <paramref name="_Right" />가 현재 반복기가 가리키는 요소 앞의 요소를 가리키는 경우 이 숫자는 음수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82311-106">This number is negative if <paramref name="_Right" /> points to an element that is before the element that the current iterator points to.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="less_than">
      <MemberSignature Language="C#" Value="public bool less_than (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator&lt;TValue&gt; _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool less_than(class Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1&lt;!TValue&gt; _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function less_than (_Right As IRandomAccessIterator(Of TValue)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool less_than(Microsoft::VisualC::StlClr::Generic::IRandomAccessIterator&lt;TValue&gt; ^ _Right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Right">
          <span data-ttu-id="82311-107">현재 반복기와 같은 컨테이너를 가리키는 유효한 반복기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82311-107">A valid iterator that points to the same container as the current iterator.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82311-108">현재 반복기가 컨테이너에서 지정된 반복기가 가리키는 요소 앞에 있는 요소를 가리키는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82311-108">Determines whether the current iterator is pointing to an element in the container that precedes the element that the given iterator points to.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82311-109">현재 반복기가 <paramref name="_Right" />가 가리키는 요소의 앞에 있는 요소를 가리키면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82311-109">
              <see langword="true" /> if the current iterator is pointing to an element that comes before the element that <paramref name="_Right" /> is pointing to; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="move">
      <MemberSignature Language="C#" Value="public int move (int _Offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 move(int32 _Offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.move(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function move (_Offset As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int move(int _Offset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="_Offset">
          <span data-ttu-id="82311-110">이동할 요소 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82311-110">The number of elements to traverse.</span>
          </span>
          <span data-ttu-id="82311-111">반복기를 앞쪽으로 이동하려면 양수를 지정하고</span>
          <span class="sxs-lookup">
            <span data-stu-id="82311-111">To move the iterator forward, specify a positive number.</span>
          </span>
          <span data-ttu-id="82311-112">뒤쪽으로 이동하려면 음수를 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82311-112">To move the iterator backward, use a negative number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82311-113">반복기를 지정된 요소 수만큼 이동합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82311-113">Moves the iterator by the given number of elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82311-114">이동된 실제 요소 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82311-114">The actual number of elements traversed.</span>
          </span>
          <span data-ttu-id="82311-115">원하는 요소 수를 반복하기 전에 컨테이너의 시작 또는 끝에 도달하는 경우 이 숫자는 <paramref name="_Offset" />과 달라집니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82311-115">This number will differ from <paramref name="_Offset" /> if the beginning or end of the container is reached before iterating the desired number of elements.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>