<Type Name="MetaData" FullName="System.Runtime.Remoting.MetadataServices.MetaData">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cd177fe34cf67d6c2f7c863f55e202a07eddacd8" />
    <Meta Name="ms.sourcegitcommit" Value="cbcba80f998e27b87425ad54726bdb684fb3a932" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="09/04/2018" />
    <Meta Name="ms.locfileid" Value="43654436" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MetaData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetaData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.MetadataServices.MetaData" />
  <TypeSignature Language="VB.NET" Value="Public Class MetaData" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaData" />
  <TypeSignature Language="F#" Value="type MetaData = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Remoting</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="3d974-101">XML 스키마로 작업할 수 있는 메서드를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3d974-101">Provides methods that allow you to work with XML schema.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d974-102"><xref:System.Runtime.Remoting.MetadataServices.MetaData> 형식 정보에서 WSDL 웹 서비스 설명 언어 ()를 생성할 수 있도록 하는 메서드를 코드 스트림으로 XML 스키마를 변환 하 고 코드 스트림의 어셈블리로 컴파일할 클래스를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="3d974-102">The <xref:System.Runtime.Remoting.MetadataServices.MetaData> class provides methods that allow you to generate Web Services Description Language (WSDL) from type information, convert an XML Schema into a code stream, and compile the code stream into an assembly.</span></span> <span data-ttu-id="3d974-103">또한이 기능은는 [Soapsuds 도구 (Soapsuds.exe)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/xd176a6c(v=vs.100))합니다.</span><span class="sxs-lookup"><span data-stu-id="3d974-103">This functionality is also present in the [Soapsuds Tool (Soapsuds.exe)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/xd176a6c(v=vs.100)).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetaData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetaData();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d974-104">
            <see cref="T:System.Runtime.Remoting.MetadataServices.MetaData" />의 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-104">Creates an instance of <see cref="T:System.Runtime.Remoting.MetadataServices.MetaData" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertCodeSourceFileToAssemblyFile">
      <MemberSignature Language="C#" Value="public static void ConvertCodeSourceFileToAssemblyFile (string codePath, string assemblyPath, string strongNameFilename);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertCodeSourceFileToAssemblyFile(string codePath, string assemblyPath, string strongNameFilename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceFileToAssemblyFile(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ConvertCodeSourceFileToAssemblyFile (codePath As String, assemblyPath As String, strongNameFilename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertCodeSourceFileToAssemblyFile(System::String ^ codePath, System::String ^ assemblyPath, System::String ^ strongNameFilename);" />
      <MemberSignature Language="F#" Value="static member ConvertCodeSourceFileToAssemblyFile : string * string * string -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceFileToAssemblyFile (codePath, assemblyPath, strongNameFilename)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePath" Type="System.String" />
        <Parameter Name="assemblyPath" Type="System.String" />
        <Parameter Name="strongNameFilename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="codePath">
          <span data-ttu-id="3d974-105">소스 코드가 포함된 파일의 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-105">The path to the file that contains the source code.</span>
          </span>
        </param>
        <param name="assemblyPath">
          <span data-ttu-id="3d974-106">새 런타임 어셈블리가 생성되는 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-106">The location where the new run-time assembly is generated.</span>
          </span>
        </param>
        <param name="strongNameFilename">
          <span data-ttu-id="3d974-107">새 어셈블리로 컴파일할 강력한 이름으로,</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-107">The strong name to compile into the new assembly.</span>
          </span>
          <span data-ttu-id="3d974-108">
            <see cref="F:System.String.Empty" />일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-108">Can be <see cref="F:System.String.Empty" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d974-109">지정된 코드 소스 파일을 런타임 어셈블리 파일로 컴파일합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-109">Compiles a specified code source file into a runtime assembly file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d974-110">강력한 이름에 대 한 자세한 내용은 참조 하세요. [강력한 이름의 어셈블리](~/docs/framework/app-domains/strong-named-assemblies.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="3d974-110">For additional information on strong names, see [Strong-Named Assemblies](~/docs/framework/app-domains/strong-named-assemblies.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d974-111">지정한 이름 가진 파일이 이미 있으면 덮어씁니다.</span><span class="sxs-lookup"><span data-stu-id="3d974-111">If a file with the specified name already exists, it is overwritten.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d974-112">다음 코드 예제에서는 <xref:System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceFileToAssemblyFile%2A> 지정 된 이름의 런타임 어셈블리에 지정 된 형식의 스키마 정의 작성 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="3d974-112">The following code example demonstrates the use of the <xref:System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceFileToAssemblyFile%2A> method to write the schema definition of the specified types to a runtime assembly with the specified name.</span></span> <span data-ttu-id="3d974-113">`CsSource.cs` 여기 변환 파일이 C# 소스 코드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="3d974-113">The `CsSource.cs` file converted here contains C# source code.</span></span>  
  
 [!code-cpp[MetaData.ConvertCodeSourceFileToAssemblyFile#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MetaData.ConvertCodeSourceFileToAssemblyFile/CPP/source.cpp#1)]
 [!code-csharp[MetaData.ConvertCodeSourceFileToAssemblyFile#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MetaData.ConvertCodeSourceFileToAssemblyFile/CS/source.cs#1)]
 [!code-vb[MetaData.ConvertCodeSourceFileToAssemblyFile#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MetaData.ConvertCodeSourceFileToAssemblyFile/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertCodeSourceStreamToAssemblyFile">
      <MemberSignature Language="C#" Value="public static void ConvertCodeSourceStreamToAssemblyFile (System.Collections.ArrayList outCodeStreamList, string assemblyPath, string strongNameFilename);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertCodeSourceStreamToAssemblyFile(class System.Collections.ArrayList outCodeStreamList, string assemblyPath, string strongNameFilename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceStreamToAssemblyFile(System.Collections.ArrayList,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ConvertCodeSourceStreamToAssemblyFile (outCodeStreamList As ArrayList, assemblyPath As String, strongNameFilename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertCodeSourceStreamToAssemblyFile(System::Collections::ArrayList ^ outCodeStreamList, System::String ^ assemblyPath, System::String ^ strongNameFilename);" />
      <MemberSignature Language="F#" Value="static member ConvertCodeSourceStreamToAssemblyFile : System.Collections.ArrayList * string * string -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceStreamToAssemblyFile (outCodeStreamList, assemblyPath, strongNameFilename)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outCodeStreamList" Type="System.Collections.ArrayList" />
        <Parameter Name="assemblyPath" Type="System.String" />
        <Parameter Name="strongNameFilename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outCodeStreamList">
          <span data-ttu-id="3d974-114">소스 코드가 있는 스트림의 <see cref="T:System.Collections.ArrayList" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-114">A <see cref="T:System.Collections.ArrayList" /> of streams with the source code.</span>
          </span>
        </param>
        <param name="assemblyPath">
          <span data-ttu-id="3d974-115">새 런타임 어셈블리가 생성되는 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-115">The location where the new run-time assembly is generated.</span>
          </span>
        </param>
        <param name="strongNameFilename">
          <span data-ttu-id="3d974-116">새 런타임 어셈블리로 컴파일할 강력한 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-116">The strong name to compile into the new run-time assembly.</span>
          </span>
          <span data-ttu-id="3d974-117">
            <see cref="F:System.String.Empty" />일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-117">Can be <see cref="F:System.String.Empty" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d974-118">지정된 코드 소스 스트림을 런타임 어셈블리 파일로 컴파일합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-118">Compiles specified code source streams into a run-time assembly file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d974-119">강력한 이름에 대 한 자세한 내용은 참조 하세요. [강력한 이름의 어셈블리](~/docs/framework/app-domains/strong-named-assemblies.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="3d974-119">For additional information on strong names, see [Strong-Named Assemblies](~/docs/framework/app-domains/strong-named-assemblies.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d974-120">지정한 이름 가진 파일이 이미 있으면 덮어씁니다.</span><span class="sxs-lookup"><span data-stu-id="3d974-120">If a file with the specified name already exists, it is overwritten.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertSchemaStreamToCodeSourceStream">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3d974-121">지정된 스키마 정의를 나중에 런타임 프록시 어셈블리로 컴파일할 수 있는 C# 소스 코드 프록시로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-121">Converts a specified schema definition to C# source code proxy, which can then be compiled into a runtime proxy assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertSchemaStreamToCodeSourceStream">
      <MemberSignature Language="C#" Value="public static void ConvertSchemaStreamToCodeSourceStream (bool clientProxy, string outputDirectory, System.IO.Stream inputStream, System.Collections.ArrayList outCodeStreamList);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertSchemaStreamToCodeSourceStream(bool clientProxy, string outputDirectory, class System.IO.Stream inputStream, class System.Collections.ArrayList outCodeStreamList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ConvertSchemaStreamToCodeSourceStream (clientProxy As Boolean, outputDirectory As String, inputStream As Stream, outCodeStreamList As ArrayList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertSchemaStreamToCodeSourceStream(bool clientProxy, System::String ^ outputDirectory, System::IO::Stream ^ inputStream, System::Collections::ArrayList ^ outCodeStreamList);" />
      <MemberSignature Language="F#" Value="static member ConvertSchemaStreamToCodeSourceStream : bool * string * System.IO.Stream * System.Collections.ArrayList -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream (clientProxy, outputDirectory, inputStream, outCodeStreamList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientProxy" Type="System.Boolean" />
        <Parameter Name="outputDirectory" Type="System.String" />
        <Parameter Name="inputStream" Type="System.IO.Stream" />
        <Parameter Name="outCodeStreamList" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="clientProxy">
          <span data-ttu-id="3d974-122">생성할 프록시의 형식을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-122">Indicates the type of proxy to generate.</span>
          </span>
          <span data-ttu-id="3d974-123">
            <see langword="true" />인 경우에는 자동으로 채널을 로드하는 단순 프록시(래핑된 프록시)를 생성하고 원격 개체의 모든 메서드를 노출하며 채널 속성에 대한 액세스를 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-123">If <see langword="true" />, generates a simple proxy (also known as wrapped proxy) that automatically loads the channels, exposes all the methods of the remote object, and provides access to the channel properties.</span>
          </span>
          <span data-ttu-id="3d974-124">
            <see langword="false" />인 경우에는 원격 개체의 모든 메서드를 노출하는 투명 프록시를 생성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-124">If <see langword="false" />, generates a transparent proxy that exposes all the methods of the remote object.</span>
          </span>
        </param>
        <param name="outputDirectory">
          <span data-ttu-id="3d974-125">프록시가 있는 새 C# 소스 코드 파일이 만들어지는 디렉터리입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-125">The directory where the new C# source code files with the proxy are created.</span>
          </span>
        </param>
        <param name="inputStream">
          <span data-ttu-id="3d974-126">WSDL(Web Services Description Language) 형식의 스키마 정의를 포함하는 입력 스트림입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-126">The input stream that contains the schema definition in Web Services Description Language (WSDL) format.</span>
          </span>
        </param>
        <param name="outCodeStreamList">
          <span data-ttu-id="3d974-127">생성되는 코드 스트림의 파일 이름 목록입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-127">The list of file names for the code streams that are generated.</span>
          </span>
          <span data-ttu-id="3d974-128">
            <see cref="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)" /> 메서드는 여러 개의 소스 코드 스트림을 만들 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-128">Note that the <see cref="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)" /> method can create multiple source code streams.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d974-129">지정된 스키마 정의를 C# 프록시 소스 코드로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-129">Converts the specified schema definition into C# proxy source code.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="3d974-130">지정한 이름 가진 파일이 이미 존재 하는 경우 덮어쓰여집니다.</span><span class="sxs-lookup"><span data-stu-id="3d974-130">If files with the specified names already exist, they are overwritten.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertSchemaStreamToCodeSourceStream">
      <MemberSignature Language="C#" Value="public static void ConvertSchemaStreamToCodeSourceStream (bool clientProxy, string outputDirectory, System.IO.Stream inputStream, System.Collections.ArrayList outCodeStreamList, string proxyUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertSchemaStreamToCodeSourceStream(bool clientProxy, string outputDirectory, class System.IO.Stream inputStream, class System.Collections.ArrayList outCodeStreamList, string proxyUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ConvertSchemaStreamToCodeSourceStream (clientProxy As Boolean, outputDirectory As String, inputStream As Stream, outCodeStreamList As ArrayList, proxyUrl As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertSchemaStreamToCodeSourceStream(bool clientProxy, System::String ^ outputDirectory, System::IO::Stream ^ inputStream, System::Collections::ArrayList ^ outCodeStreamList, System::String ^ proxyUrl);" />
      <MemberSignature Language="F#" Value="static member ConvertSchemaStreamToCodeSourceStream : bool * string * System.IO.Stream * System.Collections.ArrayList * string -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream (clientProxy, outputDirectory, inputStream, outCodeStreamList, proxyUrl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientProxy" Type="System.Boolean" />
        <Parameter Name="outputDirectory" Type="System.String" />
        <Parameter Name="inputStream" Type="System.IO.Stream" />
        <Parameter Name="outCodeStreamList" Type="System.Collections.ArrayList" />
        <Parameter Name="proxyUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clientProxy">
          <span data-ttu-id="3d974-131">생성할 프록시의 형식을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-131">Indicates the type of proxy to generate.</span>
          </span>
          <span data-ttu-id="3d974-132">
            <see langword="true" />인 경우에는 자동으로 채널을 로드하는 단순 프록시(래핑된 프록시)를 생성하고 원격 개체의 모든 메서드를 노출하며 채널 속성에 대한 액세스를 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-132">If <see langword="true" />, generates a simple proxy (also known as wrapped proxy) that automatically loads the channels, exposes all the methods of the remote object, and provides access to the channel properties.</span>
          </span>
          <span data-ttu-id="3d974-133">
            <see langword="false" />인 경우에는 원격 개체의 모든 메서드를 노출하는 투명 프록시를 생성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-133">If <see langword="false" />, generates a transparent proxy that exposes all the methods of the remote object.</span>
          </span>
        </param>
        <param name="outputDirectory">
          <span data-ttu-id="3d974-134">프록시가 있는 새 C# 소스 코드 파일이 만들어지는 디렉터리입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-134">The directory where the new C# source code files with the proxy are created.</span>
          </span>
        </param>
        <param name="inputStream">
          <span data-ttu-id="3d974-135">WSDL(Web Services Description Language) 형식의 스키마 정의를 포함하는 입력 스트림입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-135">The input stream that contains the schema definition in Web Services Description Language (WSDL) format.</span>
          </span>
        </param>
        <param name="outCodeStreamList">
          <span data-ttu-id="3d974-136">생성되는 코드 스트림의 파일 이름 목록입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-136">The list of file names for the code streams that are generated.</span>
          </span>
          <span data-ttu-id="3d974-137">
            <see cref="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)" /> 메서드는 여러 개의 소스 코드 스트림을 만들 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-137">Note that the <see cref="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)" /> method can create multiple source code streams.</span>
          </span>
        </param>
        <param name="proxyUrl">
          <span data-ttu-id="3d974-138">새 프록시가 나타내는 대상 원격 개체가 배치될 URL입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-138">The URL where the target remote object that is represented by the new proxy will be located.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d974-139">지정된 스키마 정의를 지정된 URL에 있는 원격 개체의 C# 프록시 소스 코드로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-139">Converts the specified schema definition into C# proxy source code for a remote object that is located at the specified URL.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="3d974-140">지정한 이름 가진 파일이 이미 존재 하는 경우 덮어쓰여집니다.</span><span class="sxs-lookup"><span data-stu-id="3d974-140">If files with the specified names already exist, they are overwritten.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertSchemaStreamToCodeSourceStream">
      <MemberSignature Language="C#" Value="public static void ConvertSchemaStreamToCodeSourceStream (bool clientProxy, string outputDirectory, System.IO.Stream inputStream, System.Collections.ArrayList outCodeStreamList, string proxyUrl, string proxyNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertSchemaStreamToCodeSourceStream(bool clientProxy, string outputDirectory, class System.IO.Stream inputStream, class System.Collections.ArrayList outCodeStreamList, string proxyUrl, string proxyNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ConvertSchemaStreamToCodeSourceStream (clientProxy As Boolean, outputDirectory As String, inputStream As Stream, outCodeStreamList As ArrayList, proxyUrl As String, proxyNamespace As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertSchemaStreamToCodeSourceStream(bool clientProxy, System::String ^ outputDirectory, System::IO::Stream ^ inputStream, System::Collections::ArrayList ^ outCodeStreamList, System::String ^ proxyUrl, System::String ^ proxyNamespace);" />
      <MemberSignature Language="F#" Value="static member ConvertSchemaStreamToCodeSourceStream : bool * string * System.IO.Stream * System.Collections.ArrayList * string * string -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream (clientProxy, outputDirectory, inputStream, outCodeStreamList, proxyUrl, proxyNamespace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientProxy" Type="System.Boolean" />
        <Parameter Name="outputDirectory" Type="System.String" />
        <Parameter Name="inputStream" Type="System.IO.Stream" />
        <Parameter Name="outCodeStreamList" Type="System.Collections.ArrayList" />
        <Parameter Name="proxyUrl" Type="System.String" />
        <Parameter Name="proxyNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clientProxy">
          <span data-ttu-id="3d974-141">생성할 프록시의 형식을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-141">Indicates the type of proxy to generate.</span>
          </span>
          <span data-ttu-id="3d974-142">
            <see langword="true" />인 경우에는 자동으로 채널을 로드하는 단순 프록시(래핑된 프록시)를 생성하고 원격 개체의 모든 메서드를 노출하며 채널 속성에 대한 액세스를 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-142">If <see langword="true" />, generates a simple proxy (also known as wrapped proxy) that automatically loads the channels, exposes all the methods of the remote object, and provides access to the channel properties.</span>
          </span>
          <span data-ttu-id="3d974-143">
            <see langword="false" />인 경우에는 원격 개체의 모든 메서드를 노출하는 투명 프록시를 생성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-143">If <see langword="false" />, generates a transparent proxy that exposes all the methods of the remote object.</span>
          </span>
        </param>
        <param name="outputDirectory">
          <span data-ttu-id="3d974-144">프록시가 있는 새 C# 소스 코드 파일이 만들어지는 디렉터리입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-144">The directory where the new C# source code files with the proxy are created.</span>
          </span>
        </param>
        <param name="inputStream">
          <span data-ttu-id="3d974-145">WSDL(Web Services Description Language) 형식의 스키마 정의를 포함하는 입력 스트림입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-145">The input stream containing the schema definition in Web Services Description Language (WSDL) format.</span>
          </span>
        </param>
        <param name="outCodeStreamList">
          <span data-ttu-id="3d974-146">생성되는 코드 스트림의 파일 이름 목록입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-146">The list of file names for the code streams that are generated.</span>
          </span>
          <span data-ttu-id="3d974-147">
            <see cref="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)" /> 메서드는 여러 개의 소스 코드 스트림을 만들 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-147">Note that the <see cref="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)" /> method can create multiple source code streams.</span>
          </span>
        </param>
        <param name="proxyUrl">
          <span data-ttu-id="3d974-148">새 프록시가 나타내는 대상 원격 개체가 배치될 URL입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-148">The URL where the target remote object that is represented by the new proxy will be located.</span>
          </span>
        </param>
        <param name="proxyNamespace">
          <span data-ttu-id="3d974-149">새로 만든 프록시의 네임스페이스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-149">The namespace of the newly created proxy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d974-150">지정된 스키마 정의를 지정된 URL과 제공된 클래스 네임스페이스에 있는 원격 개체의 C# 프록시 소스 코드로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-150">Converts the specified schema definition into C# proxy source code for a remote object that is located at the specified URL and in the provided class namespace.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="3d974-151">지정한 이름 가진 파일이 이미 존재 하는 경우 덮어쓰여집니다.</span><span class="sxs-lookup"><span data-stu-id="3d974-151">If files with the specified names already exist, they are overwritten.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTypesToSchemaToFile">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3d974-152">지정된 형식을 XML 스키마로 변환하여 파일에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-152">Converts the specified types to XML schema, and writes it to a file.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTypesToSchemaToFile">
      <MemberSignature Language="C#" Value="public static void ConvertTypesToSchemaToFile (System.Runtime.Remoting.MetadataServices.ServiceType[] types, System.Runtime.Remoting.MetadataServices.SdlType sdlType, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertTypesToSchemaToFile(class System.Runtime.Remoting.MetadataServices.ServiceType[] types, valuetype System.Runtime.Remoting.MetadataServices.SdlType sdlType, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile(System.Runtime.Remoting.MetadataServices.ServiceType[],System.Runtime.Remoting.MetadataServices.SdlType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertTypesToSchemaToFile(cli::array &lt;System::Runtime::Remoting::MetadataServices::ServiceType ^&gt; ^ types, System::Runtime::Remoting::MetadataServices::SdlType sdlType, System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member ConvertTypesToSchemaToFile : System.Runtime.Remoting.MetadataServices.ServiceType[] * System.Runtime.Remoting.MetadataServices.SdlType * string -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile (types, sdlType, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Runtime.Remoting.MetadataServices.ServiceType[]" />
        <Parameter Name="sdlType" Type="System.Runtime.Remoting.MetadataServices.SdlType" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="types">
          <span data-ttu-id="3d974-153">XML 스키마로 변환할 <see cref="T:System.Runtime.Remoting.MetadataServices.ServiceType" /> 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-153">The <see cref="T:System.Runtime.Remoting.MetadataServices.ServiceType" /> instances to convert to XML schema.</span>
          </span>
        </param>
        <param name="sdlType">
          <span data-ttu-id="3d974-154">XML 스키마에 사용할 Service Description Language의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-154">The type of service description language to use for the XML schema.</span>
          </span>
        </param>
        <param name="path">
          <span data-ttu-id="3d974-155">XML 파일의 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-155">The path of the XML file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d974-156">지정된 서비스 형식을 XML 스키마로 변환하여 지정된 이름의 파일에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-156">Converts the specified service types to XML schema, and writes it to a file that is specified by name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d974-157">A <xref:System.Runtime.Remoting.MetadataServices.ServiceType> 인스턴스를 사용 하면 개체를 사용 하 여 URL을 연결할 수 있습니다 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="3d974-157">A <xref:System.Runtime.Remoting.MetadataServices.ServiceType> instance allows you to associate a URL with an object <xref:System.Type>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d974-158">지정한 이름 가진 파일이 이미 있으면 덮어씁니다.</span><span class="sxs-lookup"><span data-stu-id="3d974-158">If a file with the specified name already exists, it is overwritten.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTypesToSchemaToFile">
      <MemberSignature Language="C#" Value="public static void ConvertTypesToSchemaToFile (Type[] types, System.Runtime.Remoting.MetadataServices.SdlType sdlType, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertTypesToSchemaToFile(class System.Type[] types, valuetype System.Runtime.Remoting.MetadataServices.SdlType sdlType, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile(System.Type[],System.Runtime.Remoting.MetadataServices.SdlType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertTypesToSchemaToFile(cli::array &lt;Type ^&gt; ^ types, System::Runtime::Remoting::MetadataServices::SdlType sdlType, System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member ConvertTypesToSchemaToFile : Type[] * System.Runtime.Remoting.MetadataServices.SdlType * string -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile (types, sdlType, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="sdlType" Type="System.Runtime.Remoting.MetadataServices.SdlType" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="types">
          <span data-ttu-id="3d974-159">XML 스키마로 변환할 개체 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-159">The object types to convert to XML schema.</span>
          </span>
        </param>
        <param name="sdlType">
          <span data-ttu-id="3d974-160">XML 스키마에 사용할 Service Description Language의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-160">The type of service description language to use for the XML schema.</span>
          </span>
        </param>
        <param name="path">
          <span data-ttu-id="3d974-161">XML 파일의 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-161">The path of the XML file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d974-162">지정된 개체 형식을 XML 스키마로 변환하여 지정된 이름의 파일에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-162">Converts the specified object types to XML schema, and writes it to a file that is specified by name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="3d974-163">지정한 이름 가진 파일이 이미 있으면 덮어씁니다.</span><span class="sxs-lookup"><span data-stu-id="3d974-163">If a file with the specified name already exists, it is overwritten.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d974-164">다음 코드 예제에서는 <xref:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile%2A> 파일에 지정 된 형식의 스키마 정의 작성 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="3d974-164">The following code example demonstrates the use of the <xref:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile%2A> method to write the schema definition of the specified types to a file.</span></span>  
  
 [!code-cpp[MetaData.ConvertTypesToSchemaToFile#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MetaData.ConvertTypesToSchemaToFile/CPP/source.cpp#1)]
 [!code-csharp[MetaData.ConvertTypesToSchemaToFile#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MetaData.ConvertTypesToSchemaToFile/CS/source.cs#1)]
 [!code-vb[MetaData.ConvertTypesToSchemaToFile#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MetaData.ConvertTypesToSchemaToFile/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTypesToSchemaToStream">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3d974-165">지정된 형식을 XML 스키마로 변환하여 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-165">Converts the specified types to XML schema, and writes it to a stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTypesToSchemaToStream">
      <MemberSignature Language="C#" Value="public static void ConvertTypesToSchemaToStream (System.Runtime.Remoting.MetadataServices.ServiceType[] serviceTypes, System.Runtime.Remoting.MetadataServices.SdlType sdlType, System.IO.Stream outputStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertTypesToSchemaToStream(class System.Runtime.Remoting.MetadataServices.ServiceType[] serviceTypes, valuetype System.Runtime.Remoting.MetadataServices.SdlType sdlType, class System.IO.Stream outputStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream(System.Runtime.Remoting.MetadataServices.ServiceType[],System.Runtime.Remoting.MetadataServices.SdlType,System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertTypesToSchemaToStream(cli::array &lt;System::Runtime::Remoting::MetadataServices::ServiceType ^&gt; ^ serviceTypes, System::Runtime::Remoting::MetadataServices::SdlType sdlType, System::IO::Stream ^ outputStream);" />
      <MemberSignature Language="F#" Value="static member ConvertTypesToSchemaToStream : System.Runtime.Remoting.MetadataServices.ServiceType[] * System.Runtime.Remoting.MetadataServices.SdlType * System.IO.Stream -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream (serviceTypes, sdlType, outputStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceTypes" Type="System.Runtime.Remoting.MetadataServices.ServiceType[]" />
        <Parameter Name="sdlType" Type="System.Runtime.Remoting.MetadataServices.SdlType" />
        <Parameter Name="outputStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="serviceTypes">
          <span data-ttu-id="3d974-166">XML 스키마로 변환할 <see cref="T:System.Runtime.Remoting.MetadataServices.ServiceType" /> 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-166">The <see cref="T:System.Runtime.Remoting.MetadataServices.ServiceType" /> instances to convert to XML schema.</span>
          </span>
        </param>
        <param name="sdlType">
          <span data-ttu-id="3d974-167">XML 스키마에 사용할 Service Description Language의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-167">The type of service description language to use for the XML schema.</span>
          </span>
        </param>
        <param name="outputStream">
          <span data-ttu-id="3d974-168">스키마가 기록되는 <see cref="T:System.IO.Stream" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-168">The <see cref="T:System.IO.Stream" /> that the schema is written to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d974-169">지정된 서비스 형식을 XML 스키마로 변환하여 지정된 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-169">Converts the specified service types to XML schema, and writes it to a specified stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d974-170">A <xref:System.Runtime.Remoting.MetadataServices.ServiceType> 인스턴스를 사용 하면 개체를 사용 하 여 URL을 연결할 수 있습니다 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="3d974-170">A <xref:System.Runtime.Remoting.MetadataServices.ServiceType> instance allows you to associate a URL with an object <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTypesToSchemaToStream">
      <MemberSignature Language="C#" Value="public static void ConvertTypesToSchemaToStream (Type[] types, System.Runtime.Remoting.MetadataServices.SdlType sdlType, System.IO.Stream outputStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertTypesToSchemaToStream(class System.Type[] types, valuetype System.Runtime.Remoting.MetadataServices.SdlType sdlType, class System.IO.Stream outputStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream(System.Type[],System.Runtime.Remoting.MetadataServices.SdlType,System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertTypesToSchemaToStream(cli::array &lt;Type ^&gt; ^ types, System::Runtime::Remoting::MetadataServices::SdlType sdlType, System::IO::Stream ^ outputStream);" />
      <MemberSignature Language="F#" Value="static member ConvertTypesToSchemaToStream : Type[] * System.Runtime.Remoting.MetadataServices.SdlType * System.IO.Stream -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream (types, sdlType, outputStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="sdlType" Type="System.Runtime.Remoting.MetadataServices.SdlType" />
        <Parameter Name="outputStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="types">
          <span data-ttu-id="3d974-171">XML 스키마로 변환할 개체 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-171">The object types to convert to XML schema.</span>
          </span>
        </param>
        <param name="sdlType">
          <span data-ttu-id="3d974-172">XML 스키마에 사용할 Service Description Language의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-172">The type of service description language to use for the XML schema.</span>
          </span>
        </param>
        <param name="outputStream">
          <span data-ttu-id="3d974-173">스키마가 기록되는 <see cref="T:System.IO.Stream" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-173">The <see cref="T:System.IO.Stream" /> that the schema is written to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d974-174">지정된 개체 형식을 XML 스키마로 변환하여 지정된 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-174">Converts the specified object types to XML schema, and writes it to a specified stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3d974-175">다음 코드 예제에서는 <xref:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream%2A> 스트림에 지정 된 형식의 스키마 정의 작성 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="3d974-175">The following code example demonstrates the use of the <xref:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream%2A> method to write the schema definition of the specified types to a stream.</span></span>  
  
 [!code-cpp[MetaData.ConvertTypesToSchemaToStream#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MetaData.ConvertTypesToSchemaToStream/CPP/source.cpp#1)]
 [!code-csharp[MetaData.ConvertTypesToSchemaToStream#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MetaData.ConvertTypesToSchemaToStream/CS/source.cs#1)]
 [!code-vb[MetaData.ConvertTypesToSchemaToStream#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MetaData.ConvertTypesToSchemaToStream/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrieveSchemaFromUrlToFile">
      <MemberSignature Language="C#" Value="public static void RetrieveSchemaFromUrlToFile (string url, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RetrieveSchemaFromUrlToFile(string url, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.RetrieveSchemaFromUrlToFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RetrieveSchemaFromUrlToFile (url As String, path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RetrieveSchemaFromUrlToFile(System::String ^ url, System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member RetrieveSchemaFromUrlToFile : string * string -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.RetrieveSchemaFromUrlToFile (url, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="3d974-176">XML 스키마가 있는 URL입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-176">The URL where the XML schema is located.</span>
          </span>
        </param>
        <param name="path">
          <span data-ttu-id="3d974-177">스키마가 기록되는 파일 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-177">The path of the file that the schema is written to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d974-178">URL에서 XML 스키마를 다운로드하여 지정된 파일에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-178">Downloads the XML schema from a URL, and writes it to the specified file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="3d974-179">지정한 이름 가진 파일이 이미 있으면 덮어씁니다.</span><span class="sxs-lookup"><span data-stu-id="3d974-179">If a file with the specified name already exists, it is overwritten.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrieveSchemaFromUrlToStream">
      <MemberSignature Language="C#" Value="public static void RetrieveSchemaFromUrlToStream (string url, System.IO.Stream outputStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RetrieveSchemaFromUrlToStream(string url, class System.IO.Stream outputStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.RetrieveSchemaFromUrlToStream(System.String,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RetrieveSchemaFromUrlToStream (url As String, outputStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RetrieveSchemaFromUrlToStream(System::String ^ url, System::IO::Stream ^ outputStream);" />
      <MemberSignature Language="F#" Value="static member RetrieveSchemaFromUrlToStream : string * System.IO.Stream -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.RetrieveSchemaFromUrlToStream (url, outputStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="outputStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="3d974-180">XML 스키마가 있는 URL입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-180">The URL where the XML schema is located.</span>
          </span>
        </param>
        <param name="outputStream">
          <span data-ttu-id="3d974-181">스키마가 기록되는 <see cref="T:System.IO.Stream" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-181">The <see cref="T:System.IO.Stream" /> that the schema is written to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d974-182">URL에서 XML 스키마를 다운로드하여 지정된 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-182">Downloads the XML schema from a URL, and writes it to the specified stream.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveStreamToFile">
      <MemberSignature Language="C#" Value="public static void SaveStreamToFile (System.IO.Stream inputStream, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SaveStreamToFile(class System.IO.Stream inputStream, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.SaveStreamToFile(System.IO.Stream,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SaveStreamToFile (inputStream As Stream, path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SaveStreamToFile(System::IO::Stream ^ inputStream, System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member SaveStreamToFile : System.IO.Stream * string -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.SaveStreamToFile (inputStream, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputStream" Type="System.IO.Stream" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputStream">
          <span data-ttu-id="3d974-183">지정된 파일에 쓸 스트림입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-183">The stream to write to the specified file.</span>
          </span>
        </param>
        <param name="path">
          <span data-ttu-id="3d974-184">입력 스트림이 기록되는 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-184">The file that the input stream is written to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d974-185">지정된 이름의 파일에 입력 스트림을 저장합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d974-185">Saves the input stream to a file with the specified name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="3d974-186">지정한 이름 가진 파일이 이미 있으면 덮어씁니다.</span><span class="sxs-lookup"><span data-stu-id="3d974-186">If a file with the specified name already exists, it is overwritten.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>