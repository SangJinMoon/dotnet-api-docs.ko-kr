<Type Name="ProfileBase" FullName="System.Web.Profile.ProfileBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c4c4aa034797f0d73c78986e75e2366030615ac2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30540827" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ProfileBase : System.Configuration.SettingsBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProfileBase extends System.Configuration.SettingsBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Profile.ProfileBase" />
  <TypeSignature Language="VB.NET" Value="Public Class ProfileBase&#xA;Inherits SettingsBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProfileBase : System::Configuration::SettingsBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.SettingsBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>프로필 속성 값과 정보에 대한 형식화되지 않은 액세스를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET이 사용은 <xref:System.Web.Profile.ProfileBase> 사용자 프로필에 사용 되는 클래스를 만드는 클래스입니다. 사용자 프로필을 사용 하는 응용 프로그램이 시작 되 면 ASP.NET 형식의 새 클래스를 만듭니다 `ProfileCommon`에서 상속 되는 <xref:System.Web.Profile.ProfileBase> 클래스입니다. 강력한 형식의 접근자에 추가 되는 `ProfileCommon` 구성 섹션에 정의 된 각 속성에 대 한 클래스입니다. 강력한 형식의 접근자는 `ProfileCommon` 호출 클래스는 <xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A> 및 <xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A> 의 메서드는 <xref:System.Web.Profile.ProfileBase> 기본 클래스를 검색 하 고 각각 프로필 속성 값을 설정 합니다. 인스턴스는 `ProfileCommon` 클래스의 값으로 설정 되는 <xref:System.Web.HttpContext.Profile%2A> ASP.NET 응용 프로그램에 대 한 속성입니다.  
  
 ASP.NET 응용 프로그램에서 사용자 프로필의 인스턴스를 만드는 것이 좋습니다를 사용 하 여 <xref:System.Web.Profile.ProfileBase.Create%2A> 메서드.  
  
   
  
## Examples  
 다음 코드 예제에서는 포함 된 사용자 프로필을 지정 하는 Web.config 파일을 보여 줍니다.는 `ZipCode` 형식의 속성이 `string` 및 `RecentSearchList` 형식의 속성이 <xref:System.Collections.Specialized.StringCollection>합니다. 생성 된 <xref:System.Web.HttpContext.Profile%2A> 현재 <xref:System.Web.HttpContext> 됩니다 한 강력한 형식의 접근자 각 지정된 된 속성에 대 한 합니다.  
  
```  
<configuration>  
  <system.web>  
    <anonymousIdentification enabled="true" />  
  
    <profile enabled="true" defaultProvider="SqlProvider" >  
      <properties>  
        <add name="ZipCode" allowAnonymous="true" />  
        <add name="RecentSearchList"  
          type="System.Collections.Specialized.StringCollection"  
          serializeAs="Xml"  
          allowAnonymous="true" />  
      </properties>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
 다음 코드 예제에서는 읽고 설정 하는 ASP.NET 페이지를 보여 줍니다.는 `ZipCode` 사용자 프로필에 대 한 지정 된 속성입니다. 다음이 코드를 실행 하려면 먼저 공급자를 기본값으로 설정 `AspNetSqlProvider` 웹 사이트에 대 한 ASP.NET 구성 설정에서 합니다.  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/defaultvb.aspx#1)]  
  
 다음 코드 예제에서는에서 상속 되는 클래스 정의 <xref:System.Web.Profile.ProfileBase> 사용자 지정 프로필을 만드는 클래스입니다. 에 지정 된 사용자 지정 프로필의 유형을 `inherits` 응용 프로그램에 대 한 Web.config 파일에서 구성 요소의 특성입니다.  
  
> [!IMPORTANT]
>  이 예제에서는 잠재적인 보안 문제가 사용자 입력을 허용 하는 텍스트 상자가 포함 되어 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-csharp[System.Web.Profile.ProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileBase/CS/employeeprofile.cs#1)]
 [!code-vb[System.Web.Profile.ProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileBase/VB/employeeprofile.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>상속 되는 사용자 지정 프로필 구현을 만들 수는 <see cref="T:System.Web.Profile.ProfileBase" /> 추상 클래스 및 사용자 프로필에 대 한 구성 요소에 지정 되지 않은 속성을 정의 합니다. 사용자 지정 사용자 프로필 유형을 사용 하 여 Web.config 파일에서 지정할 수 있습니다는 <see langword="inherits" /> 다음 예제와 같이 구성 요소의 특성입니다. 에 대 한 코드는 <c>EmployeeProfile</c> 클래스가이 항목의 예제 단원에 포함 되어 있습니다.  
  
```  
&lt;profile inherits="Samples.AspNet.Profile.EmployeeProfile"  
  defaultProvider="SqlProvider"&gt;  
  &lt;providers&gt;  
    &lt;clear /&gt;  
    &lt;add  
      name="SqlProvider"  
      type="System.Web.Profile.SqlProfileProvider"   
      connectionStringName="SqlServices"   
      description="SQL Profile Provider for Sample"/&gt;   
    &lt;add  
      name="EmployeeInfoProvider"  
      type="System.Web.Profile.SqlProfileProvider"   
      connectionStringName="SqlServices"   
      description="SQL Profile Provider for Employee Info"/&gt;   
  &lt;/providers&gt;  
  
  &lt;properties&gt;  
    &lt;add name="GarmentSize" /&gt;  
  &lt;/properties&gt;  
&lt;/profile&gt;  
```</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProfileBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProfileBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.Profile.ProfileBase" /> 클래스의 인스턴스를 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET이 사용은 <xref:System.Web.Profile.ProfileBase> 사용자 프로필에 사용 되는 클래스를 만드는 클래스입니다. 사용자 프로필을 사용 하는 응용 프로그램이 시작 되 면 ASP.NET 형식의 새 클래스를 만듭니다 `ProfileCommon`에서 상속 되는 <xref:System.Web.Profile.ProfileBase> 클래스입니다. 강력한 형식의 접근자에 추가 되는 `ProfileCommon` 구성 섹션에 정의 된 각 속성에 대 한 클래스입니다. 강력한 형식의 접근자는 `ProfileCommon` 호출 클래스는 <xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A> 및 <xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A> 의 메서드는 <xref:System.Web.Profile.ProfileBase> 기본 클래스를 검색 하 고 각각 프로필 속성 값을 설정 합니다. 인스턴스는 `ProfileCommon` 클래스의 값으로 설정 되는 <xref:System.Web.HttpContext.Profile%2A> ASP.NET 응용 프로그램에 대 한 속성입니다.  
  
> [!NOTE]
>  기본 클래스에 저장 된 클래스를 생성 하는 데는 <xref:System.Web.HttpContext.Profile%2A> 를 사용 하 여 속성을 재정의할 수 있습니다는 `inherits` 특성 구성 파일의 섹션입니다. 이 경우 사용자 지정 클래스에서 상속 되는 지정 된 <xref:System.Web.Profile.ProfileBase> 기본 클래스입니다.  
  
 이 생성자는 응용 프로그램 코드에서 사용할 수 없습니다. 사용자 프로필의 인스턴스를 만들려면 사용은 <xref:System.Web.Profile.ProfileBase.Create%2A> 메서드.  
  
   
  
## Examples  
 포함 된 사용자 프로필을 지정 하는 다음 Web.config 파일은 한 `ZipCode` 형식의 속성 `string` 및 `RecentSearchList` 형식의 속성 <xref:System.Collections.Specialized.StringCollection>합니다. 생성 된 <xref:System.Web.HttpContext.Profile%2A> 현재 <xref:System.Web.HttpContext> 됩니다 한 강력한 형식의 접근자 각 지정된 된 속성에 대 한 합니다.  
  
```  
<configuration>  
   <connectionStrings>  
       <add name="SqlServices" connectionString="Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
   </connectionStrings>  
  
  <system.web>  
   <anonymousIdentification enabled="true" />  
  
   <profile defaultProvider="SqlProvider" >  
     <providers>  
       <add  
         name="SqlProvider"  
         connectionStringName="SqlServices"  
         applicationName="ProfileBaseApplication"  
         type="System.Web.Profile.SqlProfileProvider" />  
     </providers>  
  
     <properties>  
       <add name="ZipCode" allowAnonymous="true" />  
       <add name="RecentSearchList"  
            type="System.Collections.Specialized.StringCollection"  
            serializeAs="Xml"  
            allowAnonymous="true" />  
      </properties>  
    </profile>  
   </system.web>  
</configuration>  
```  
  
 다음 ASP.NET 페이지를 읽고 설정의 `ZipCode` 사용자 프로필에 대 한 지정 된 속성입니다.  
  
> [!IMPORTANT]
>  이 예제에서는 잠재적인 보안 문제가 사용자 입력을 허용 하는 텍스트 상자가 포함 되어 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Web.config 파일에 있는 섹션의 <see langword="enabled" /> 특성이 <see langword="false" />인 경우</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Web.config 파일의 섹션에 지정된 속성 형식을 만들 수 없는 경우  
  
 또는  
  
 Web.config 파일의 섹션에서 속성의 <see langword="allowAnonymous" /> 특성이 <see langword="true" />로 설정되어 있고 요소의 <see langword="enabled" /> 특성이 <see langword="false" />로 설정되어 있는 경우  
  
 또는  
  
 Web.config 파일의 섹션에서 속성의 <see langword="serializeAs" /> 특성이 <see cref="F:System.Configuration.SettingsSerializeAs.Binary" />로 설정되어 있고 지정된 <see langword="type" />의 <see cref="P:System.Type.IsSerializable" /> 속성이 <see langword="false" />를 반환하는 경우  
  
 또는  
  
 프로필 속성의 <see langword="provider" /> 특성을 사용하여 지정한 공급자 이름을 <see cref="P:System.Web.Profile.ProfileManager.Providers" /> 컬렉션에서 찾을 수 없는 경우  
  
 또는  
  
 프로필 속성에 지정된 <see langword="type" />을 찾을 수 없는 경우  
  
 또는  
  
 프로필 속성이 섹션의 <see langword="inherits" /> 특성에 지정된 기본 클래스에 대한 속성 이름과 일치하는 이름으로 지정된 경우</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>사용자 프로필의 인스턴스를 만듭니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileBase Create (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileBase Create(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (username As String) As ProfileBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileBase ^ Create(System::String ^ username);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">프로필을 만들 사용자의 이름입니다.</param>
        <summary>ASP.NET에서 지정된 사용자 이름에 대한 프로필의 인스턴스를 만드는 데 사용됩니다.</summary>
        <returns>지정된 사용자의 프로필을 나타내는 <see cref="T:System.Web.Profile.ProfileBase" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileBase.Create%2A> 메서드가 생성 하 고 새 프로필 인스턴스를 초기화 되 고 ASP.NET 이외의 환경에서 사용자 프로필을 관리 또는 개체 사용자 지정 프로필을 사용 하는 응용 프로그램에 유용 합니다.  
  
 이 오버 로드는 <xref:System.Web.Profile.ProfileBase.Create%2A> 메서드 지정된 된 사용자 이름 인증된 된 사용자 있다고 가정 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용자 지정 프로필 개체의 인스턴스를 만듭니다, 그리고 속성을 설정 및 데이터 원본에 프로필을 저장 합니다.  
  
 [!code-csharp[System.Web.Profile.ProfileBase.Create#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileBase.Create/CS/profileBaseCreatecs.aspx.cs#1)]
 [!code-vb[System.Web.Profile.ProfileBase.Create#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileBase.Create/VB/profileBaseCreatevb.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Web.config 파일에 있는 섹션의 <see langword="enabled" /> 특성이 <see langword="false" />인 경우</exception>
        <exception cref="T:System.Web.HttpException">현재 호스팅 권한 수준이 <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" />보다 낮은 경우</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Web.config 파일의 섹션에 지정된 속성 형식을 만들 수 없는 경우  
  
 또는  
  
 Web.config 파일의 섹션에서 속성의 <see langword="allowAnonymous" /> 특성이 <see langword="true" />로 설정되어 있고 요소의 <see langword="enabled" /> 특성이 <see langword="false" />로 설정되어 있는 경우  
  
 또는  
  
 Web.config 파일의 섹션에서 속성의 <see langword="serializeAs" /> 특성이 <see cref="F:System.Configuration.SettingsSerializeAs.Binary" />로 설정되어 있고 지정된 <see langword="type" />의 <see cref="P:System.Type.IsSerializable" /> 속성이 <see langword="false" />를 반환하는 경우  
  
 또는  
  
 프로필 속성의 <see langword="provider" /> 특성을 사용하여 지정한 공급자 이름을 <see cref="P:System.Web.Profile.ProfileManager.Providers" /> 컬렉션에서 찾을 수 없는 경우  
  
 또는  
  
 프로필 속성에 지정된 <see langword="type" />을 찾을 수 없는 경우  
  
 또는  
  
 프로필 속성이 섹션의 <see langword="inherits" /> 특성에 지정된 기본 클래스에 대한 속성 이름과 일치하는 이름으로 지정된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileBase Create (string username, bool isAuthenticated);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileBase Create(string username, bool isAuthenticated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.Create(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (username As String, isAuthenticated As Boolean) As ProfileBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileBase ^ Create(System::String ^ username, bool isAuthenticated);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="isAuthenticated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">프로필을 만들 사용자의 이름입니다.</param>
        <param name="isAuthenticated">
          사용자가 인증 사용자임을 나타내면 <see langword="true" />이고, 사용자가 익명 사용자임을 나타내면 <see langword="false" />입니다.</param>
        <summary>ASP.NET에서 지정된 사용자 이름에 대한 프로필의 인스턴스를 만드는 데 사용됩니다. 사용자가 인증된 사용자인지, 아니면 익명 사용자인지 여부를 나타내는 매개 변수를 사용합니다.</summary>
        <returns>지정된 사용자의 프로필을 나타내는 <see cref="T:System.Web.Profile.ProfileBase" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileBase.Create%2A> 메서드가 생성 하 고 새 프로필 인스턴스를 초기화 되 고 ASP.NET 이외의 환경에서 사용자 프로필을 관리 또는 개체 사용자 지정 프로필을 사용 하는 응용 프로그램에 유용 합니다.  
  
 이 오버 로드는 <xref:System.Web.Profile.ProfileBase.Create%2A> 메서드는 인증된 된 사용자 또는 익명 사용자에 대 한 프로필을 만드는 데 사용할 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용자 지정 프로필 개체의 인스턴스를 만듭니다, 그리고 속성을 설정 및 데이터 원본에 프로필을 저장 합니다.  
  
 [!code-csharp[System.Web.Profile.ProfileBase.Create#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileBase.Create/CS/profileBaseCreatecs.aspx.cs#2)]
 [!code-vb[System.Web.Profile.ProfileBase.Create#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileBase.Create/VB/profileBaseCreatevb.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Web.config 파일에 있는 섹션의 <see langword="enabled" /> 특성이 <see langword="false" />인 경우</exception>
        <exception cref="T:System.Web.HttpException">현재 호스팅 권한 수준이 <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" />보다 낮은 경우</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Web.config 파일의 섹션에 지정된 속성 형식을 만들 수 없는 경우  
  
 또는  
  
 Web.config 파일의 섹션에서 속성의 <see langword="allowAnonymous" /> 특성이 <see langword="true" />로 설정되어 있고 요소의 <see langword="enabled" /> 특성이 <see langword="false" />로 설정되어 있는 경우  
  
 또는  
  
 Web.config 파일의 섹션에서 속성의 <see langword="serializeAs" /> 특성이 <see cref="F:System.Configuration.SettingsSerializeAs.Binary" />로 설정되어 있고 지정된 <see langword="type" />의 <see cref="P:System.Type.IsSerializable" /> 속성이 <see langword="false" />를 반환하는 경우  
  
 또는  
  
 프로필 속성의 <see langword="provider" /> 특성을 사용하여 지정한 공급자 이름을 <see cref="P:System.Web.Profile.ProfileManager.Providers" /> 컬렉션에서 찾을 수 없는 경우  
  
 또는  
  
 프로필 속성에 지정된 <see langword="type" />을 찾을 수 없는 경우  
  
 또는  
  
 프로필 속성이 섹션의 <see langword="inherits" /> 특성에 지정된 기본 클래스에 대한 속성 이름과 일치하는 이름으로 지정된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetProfileGroup">
      <MemberSignature Language="C#" Value="public System.Web.Profile.ProfileGroupBase GetProfileGroup (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Profile.ProfileGroupBase GetProfileGroup(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.GetProfileGroup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProfileGroup (groupName As String) As ProfileGroupBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Profile::ProfileGroupBase ^ GetProfileGroup(System::String ^ groupName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileGroupBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">속성 그룹의 이름입니다.</param>
        <summary>그룹 이름으로 식별된 속성 그룹을 가져옵니다.</summary>
        <returns>지정된 그룹 이름으로 구성된 속성 그룹에 대한 <see cref="T:System.Web.Profile.ProfileGroupBase" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 프로필 속성은 더 나은 조직에 대 한 그룹으로 구분할 수 있습니다. <xref:System.Web.Profile.ProfileBase.GetProfileGroup%2A> 속성을 그룹 이름으로 속성의 그룹을 검색 하려면 사용할 수 있습니다. 구성원으로 그룹 이름을 지정 하 여 프로필 속성 그룹에도 액세스할 수 있습니다는 `Profile` 각 페이지에서 사용할 수 있는 속성입니다. 예를 들어는 `ZipCode` 프로필의 구성원 인 속성은 `Address` 를 사용 하 여 프로필 그룹에 액세스할 수 없습니다 `Profile.Address.ZipCode`합니다.  
  
   
  
## Examples  
 속성의 그룹 이름에 그룹이 포함 된 사용자 프로필을 지정 하는 다음 Web.config 파일은 `Address`합니다. 에 생성 된 그룹화 된 속성의 <xref:System.Web.HttpContext.Profile%2A> 현재 <xref:System.Web.HttpContext> 그룹 이름으로와 야 합니다. 예를 들어, `Profile.Address.Street`을 입력합니다.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString=  
      "Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="login.aspx"  
        name=".ASPXFORMSAUTH" />  
    </authentication>  
  
    <authorization>  
      <deny users="?" />  
    </authorization>  
  
    <membership defaultProvider="SqlProvider"   
      userIsOnlineTimeWindow="15">  
      <providers>  
        <clear />  
        <add   
          name="SqlProvider"   
          type="System.Web.Security.SqlMembershipProvider"   
          connectionStringName="SqlServices"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"   
          requiresUniqueEmail="false"  
          passwordFormat="Hashed"  
          applicationName="MyApplication" />  
      </providers>  
    </membership>  
  
    <profile defaultProvider="SqlProvider">  
      <providers>  
        <add  
          name="SqlProvider"  
          connectionStringName="SqlServices"  
          applicationName="MyApplication"  
          type="System.Web.Profile.SqlProfileProvider" />  
  
      </providers>  
  
      <properties>  
        <add name="ZipCode" />  
        <group name="Address">  
          <add name="Street" />  
          <add name="City" />  
          <add name="State" />  
          <add name="CountryOrRegion" />  
        </group>  
      </properties>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
 다음 ASP.NET 페이지를 읽고 사용자 프로필에 대 한 지정 된 그룹화 속성을 설정 합니다.  
  
> [!IMPORTANT]
>  이 예제에서는 잠재적인 보안 문제가 사용자 입력을 허용 하는 텍스트 상자가 포함 되어 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileGroupBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileGroupBase/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileGroupBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileGroupBase/VB/defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">지정된 프로필 속성 그룹 이름을 구성 섹션에서 찾을 수 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public object GetPropertyValue (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetPropertyValue(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.GetPropertyValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValue (propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPropertyValue(System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">프로필 속성의 이름입니다.</param>
        <summary>프로필 속성의 값을 가져옵니다.</summary>
        <returns>
          <see langword="object" />로 형식화된, 지정된 프로필 속성의 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET이 사용은 <xref:System.Web.Profile.ProfileBase> 사용자 프로필에 사용 되는 클래스를 만드는 클래스입니다. 사용자 프로필을 사용 하는 응용 프로그램이 시작 되 면 ASP.NET 형식의 새 클래스를 만듭니다 `ProfileCommon`에서 상속 되는 <xref:System.Web.Profile.ProfileBase> 클래스입니다. 강력한 형식의 접근자에 추가 되는 `ProfileCommon` 구성 섹션에 정의 된 각 속성에 대 한 클래스입니다. 강력한 형식의 접근자는 `ProfileCommon` 호출 클래스는 <xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A> 에서 형식화 되지 않은 값을 검색 하는 메서드는 <xref:System.Web.Profile.ProfileProvider> 접근자 생성 된 다음 지정된 된 형식으로 캐스팅 하 고 속성 값으로 반환 하는 합니다.  
  
 사용할 수는 <xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A> 이름으로 응용 프로그램에 대 한 사용자 프로필의 속성 값을 검색 하는 메서드입니다. 반환 된 값은 형식화 되지 하 고 검색 될 때 특정 개체 형식으로 캐스팅 되어야 합니다. 프로필 속성 값에 대 한 강력한 형식의 액세스를 액세스할 수 있습니다는 속성 이름으로 각 페이지에 표시 되는 프로필 속성의 구성원으로 예를 들어 `Profile.CustomerAddress`합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 읽고 설정 하는 ASP.NET 페이지를 보여 줍니다.는 `ZipCode` 사용자 프로필에 대 한 지정 된 속성입니다. 사용자 프로필에 대 한 속성을 지정 하는 Web.config 파일의 예제를 제공 하는 예제를 참조 하십시오.는 <xref:System.Web.Profile.ProfileBase> 클래스입니다.  
  
> [!IMPORTANT]
>  이 예제에서는 잠재적인 보안 문제가 사용자 입력을 허용 하는 텍스트 상자가 포함 되어 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">속성의 <see langword="allowAnonymous" /> 특성이 <see langword="false" />일 때 익명 프로필에 대한 속성 값을 설정하려고 한 경우</exception>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">현재 프로필에 대해 정의된 속성이 없는 경우  
  
 또는  
  
 지정된 프로필 속성 이름이 현재 프로필에 없는 경우  
  
 또는  
  
 지정된 프로필 속성의 공급자가 지정된 속성을 인식하지 못한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (string username, bool isAuthenticated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Initialize(string username, bool isAuthenticated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.Initialize(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (username As String, isAuthenticated As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize(System::String ^ username, bool isAuthenticated);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="isAuthenticated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">프로필을 초기화할 사용자의 이름입니다.</param>
        <param name="isAuthenticated">
          사용자가 인증 사용자임을 나타내면 <see langword="true" />이고, 사용자가 익명 사용자임을 나타내면 <see langword="false" />입니다.</param>
        <summary>현재 사용자에 대한 프로필 속성 값과 정보를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 사용자 코드에서는 사용할 수 없습니다. 중 하나를 사용 하 여는 <xref:System.Web.Profile.ProfileBase.Create%2A> 사용자 프로필의 인스턴스를 만드는 오버 로드 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAnonymous">
      <MemberSignature Language="C#" Value="public bool IsAnonymous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAnonymous" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.IsAnonymous" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAnonymous As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAnonymous { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자 프로필이 익명 사용자에 대한 프로필인지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          사용자 프로필이 익명 사용자에 대한 프로필이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용자 프로필에 익명 액세스를 구성 섹션을 사용 하 여 사용할 수 및 `allowAnonymous` 특성 프로필 속성을 지정 하는 데 사용 되는 구성 요소입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>프로필 속성이 수정되었는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          프로필 속성이 수정되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileBase.IsDirty%2A> 속성 중 프로필 공급자가 사용할 수 있습니다는 <xref:System.Configuration.SettingsBase.Save%2A> 지 여부를 확인할 속성이 있는 메서드 기본 형식, 문자열, 구성 또는 <xref:System.DateTime> 개체 수가 변경 되었습니다. 변경 된 속성 프로필 공급자에 의해 업데이트 하는 다음의 <xref:System.Configuration.SettingsBase.Save%2A> 메서드. <xref:System.Configuration.SettingsBase.Save%2A> 메서드 경우 자동으로 페이지 실행의 끝에 호출 됩니다는 <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A> 속성은 `true`  
  
 호출 하는 프로필 공급자는 <xref:System.Configuration.SettingsBase.Save%2A> 메서드는 사용자 지정 클래스 형식 또는 복합 형식을 컬렉션과 같은 프로필 속성 변경 되었는지 여부를 명시적으로 확인할 수 없습니다. 사용할 수는 <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> 이벤트는 사용자 지정 개체 수정 되었는지 여부를 확인 하 고 수정 된 개체에 대 한 자동 저장을 계속 하거나 개체가 수정 된 경우 자동 저장을 취소할 수 있습니다. 기본 동작은 <xref:System.Web.Profile.ProfileBase> 설정 하는 클래스는 <xref:System.Web.Profile.ProfileBase.IsDirty%2A> 속성을 `true` 속성에는 사용자 지정 또는 복잡 한 형식이 첫 번째 시간 속성에 액세스 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string propertyName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides Property Item(propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ propertyName); void set(System::String ^ propertyName, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">프로필 속성의 이름입니다.</param>
        <summary>속성 이름별로 인덱싱된 프로필 속성 값을 가져오거나 설정합니다.</summary>
        <value>
          <see langword="object" />로 형식화된, 지정된 프로필 속성의 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하 여 검색 또는 이름으로 응용 프로그램에 대 한 사용자 프로필의 속성 값을 설정할 수 있습니다. 반환 된 값은로 형식화 `object` 이며 검색 될 때 특정 개체 유형으로 캐스팅 되어야 합니다. 프로필 속성 값에 대 한 강력한 형식의 액세스를 액세스할 수 있습니다는 속성 이름으로의 구성원으로는 `Profile` 예를 들어, 각 페이지에서 사용할 수 있는 속성 `Profile.CustomerAddress`합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 바인딩하여 사용자 프로필에 대 한 속성의 이름을 나열는 <xref:System.Configuration.SettingsProperty.Name%2A> 정적에서 속성 <xref:System.Web.Profile.ProfileBase.Properties%2A> 의 컬렉션 <xref:System.Configuration.SettingsProperty> 개체를 한 <xref:System.Web.UI.WebControls.GridView> 컨트롤입니다. 이름을 사용 하 여 선택한 속성 값이 검색은 <xref:System.Web.Profile.ProfileBase.Item%2A> 컬렉션입니다. 사용자 프로필에 대 한 속성을 지정 하는 Web.config 파일의 예제를 제공 하는 예제를 참조 하십시오.는 <xref:System.Web.Profile.ProfileBase> 클래스입니다.  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/ViewProfilecs.aspx#2)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/ViewProfilevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">속성의 <see langword="allowAnonymous" /> 특성이 <see langword="false" />일 때 익명 프로필에 대한 속성 값을 설정하려고 한 경우</exception>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">현재 프로필에 대해 정의된 속성이 없는 경우  
  
 또는  
  
 지정된 프로필 속성 이름이 현재 프로필에 없는 경우  
  
 또는  
  
 지정된 프로필 속성의 공급자가 지정된 속성을 인식하지 못한 경우</exception>
        <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException">읽기 전용으로 표시된 속성 값을 설정하려고 한 경우</exception>
        <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException">호환되지 않는 형식을 사용하여 속성에 값을 할당하려고 한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="LastActivityDate">
      <MemberSignature Language="C#" Value="public DateTime LastActivityDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LastActivityDate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.LastActivityDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastActivityDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime LastActivityDate { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>프로필을 마지막으로 읽거나 수정한 날짜와 시간을 가져옵니다.</summary>
        <value>기본 공급자가 프로필을 마지막으로 읽거나 수정한 날짜와 시간입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성 값은 기본 프로필 공급자만 수정 됩니다. 프로필 속성에 대 한 기본 프로필 공급자 이외의 공급자가 변경 하의 값에 영향을 주지는 <xref:System.Web.Profile.ProfileBase.LastActivityDate%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastUpdatedDate">
      <MemberSignature Language="C#" Value="public DateTime LastUpdatedDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LastUpdatedDate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.LastUpdatedDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastUpdatedDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime LastUpdatedDate { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>프로필을 마지막으로 수정한 날짜와 시간을 가져옵니다.</summary>
        <value>기본 공급자가 프로필을 마지막으로 수정한 날짜와 시간입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성 값은 기본 프로필 공급자만 수정 됩니다. 프로필 속성에 대 한 기본 프로필 공급자 이외의 공급자가 변경 하의 값에 영향을 주지는 <xref:System.Web.Profile.ProfileBase.LastUpdatedDate%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public static System.Configuration.SettingsPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Configuration.SettingsPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Properties As SettingsPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Configuration::SettingsPropertyCollection ^ Properties { System::Configuration::SettingsPropertyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>프로필의 각 속성에 대한 <see cref="T:System.Configuration.SettingsProperty" /> 개체의 컬렉션을 가져옵니다.</summary>
        <value>응용 프로그램에 대한 프로필의 각 속성에 대한 <see cref="T:System.Configuration.SettingsPropertyCollection" /> 개체의 <see cref="T:System.Configuration.SettingsProperty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 속성 이름 및 형식을 포함 하 여 응용 프로그램에 대해 구성 되는 프로필 속성에 대 한 정보를 얻으려면이 속성을 사용할 수 있습니다. 참조할 수도 있습니다는 <xref:System.Web.Profile.ProfileProvider> 각 속성의 합니다. A <xref:System.Web.Profile.ProfileProvider> 저장 및 검색 하 고 데이터 소스에서 속성 값을 관리 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 바인딩하여 사용자 프로필에 대 한 속성의 이름을 나열는 <xref:System.Configuration.SettingsProperty.Name%2A> 정적에서 속성 <xref:System.Web.Profile.ProfileBase.Properties%2A> 의 컬렉션 <xref:System.Configuration.SettingsProperty> 개체를 한 <xref:System.Web.UI.WebControls.GridView> 컨트롤입니다. 이름을 사용 하 여 선택한 속성 값이 검색은 <xref:System.Web.Profile.ProfileBase.Item%2A> 컬렉션입니다. 사용자 프로필에 대 한 속성을 지정 하는 Web.config 파일의 예제를 제공 하는 예제를 참조 하십시오.는 <xref:System.Web.Profile.ProfileBase> 클래스입니다.  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/ViewProfilecs.aspx#2)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/ViewProfilevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Web.config 파일의 섹션에 지정된 속성 형식을 만들 수 없는 경우  
  
 또는  
  
 Web.config 파일의 섹션에서 속성의 <see langword="allowAnonymous" /> 특성이 <see langword="true" />로 설정되어 있고 요소의 <see langword="enabled" /> 특성이 <see langword="false" />로 설정되어 있는 경우  
  
 또는  
  
 Web.config 파일의 섹션에서 속성의 <see langword="serializeAs" /> 특성이 <see cref="F:System.Configuration.SettingsSerializeAs.Binary" />로 설정되어 있고 지정된 <see langword="type" />의 <see cref="P:System.Type.IsSerializable" /> 속성이 <see langword="false" />를 반환하는 경우  
  
 또는  
  
 프로필 속성의 <see langword="provider" /> 특성을 사용하여 지정한 공급자 이름을 <see cref="P:System.Web.Profile.ProfileManager.Providers" /> 컬렉션에서 찾을 수 없는 경우  
  
 또는  
  
 프로필 속성에 지정된 <see langword="type" />을 찾을 수 없는 경우  
  
 또는  
  
 프로필 속성이 섹션의 <see langword="inherits" /> 특성에 지정된 기본 클래스에 대한 속성 이름과 일치하는 이름으로 지정된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public override void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.Save" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Save();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>프로필 데이터 소스를 변경된 프로필 속성 값으로 업데이트합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileBase.Save%2A> 메서드 수정 된 프로필 속성에 값을 쓴 데이터 원본입니다. 프로필 공급자 업데이트를 수행 하 여 데이터 원본에서의 작업량을 줄일 수 경우에만 <xref:System.Web.Profile.ProfileBase.IsDirty%2A> 속성이 `true`합니다. 이 기본 대/소문자 <xref:System.Web.Profile.SqlProfileProvider>합니다. 이후에 <xref:System.Web.Profile.ProfileBase.Save%2A> 메서드에 데이터 원본으로 속성 값을 저장 <xref:System.Web.Profile.ProfileBase.IsDirty%2A> 로 설정 된 `false`합니다.  
  
 사용할 수는 <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> 이벤트를 사용자 지정 형식 또는 복합 형식을 사용 하는 프로필 속성 수정 되었는지 여부를 결정 하는 사용자 지정 논리를 구현 하 고 수정 된 개체에 대 한 자동 저장을 계속 하거나 개체가 있는 경우 자동 저장을 취소 합니다. 수정 되었습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValue">
      <MemberSignature Language="C#" Value="public void SetPropertyValue (string propertyName, object propertyValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPropertyValue(string propertyName, object propertyValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.SetPropertyValue(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPropertyValue (propertyName As String, propertyValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPropertyValue(System::String ^ propertyName, System::Object ^ propertyValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="propertyName">설정할 속성의 이름입니다.</param>
        <param name="propertyValue">속성에 할당할 값입니다.</param>
        <summary>프로필 속성의 값을 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET이 사용은 <xref:System.Web.Profile.ProfileBase> 사용자 프로필에 사용 되는 클래스를 만드는 클래스입니다. 사용자 프로필을 사용 하는 응용 프로그램이 시작 되 면 ASP.NET 형식의 새 클래스를 만듭니다 `ProfileCommon`에서 상속 되는 <xref:System.Web.Profile.ProfileBase> 클래스입니다. 강력한 형식의 접근자에 추가 되는 `ProfileCommon` 구성 섹션에 정의 된 각 속성에 대 한 클래스입니다. 강력한 형식의 접근자는 `ProfileCommon` 호출 클래스는 <xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A> 값이 속성을 전달 하는 메서드는 <xref:System.Web.Profile.ProfileProvider> 데이터 원본에 저장 된 것입니다.  
  
 사용할 수는 <xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A> 메서드를 이름으로 응용 프로그램에 대 한 사용자 프로필의 속성 값을 할당 합니다. 값 형식화 되지 않으며 형식 검사 컴파일 타임이 아니라 런타임 시 수행 됩니다. 프로필 속성 값에 대 한 강력한 형식의 액세스를 액세스할 수 있습니다는 속성 이름으로의 구성원으로는 `Profile` 예를 들어, 각 페이지에서 사용할 수 있는 속성 `Profile.CustomerAddress`합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 읽고 설정 하는 ASP.NET 페이지를 보여 줍니다.는 `ZipCode` 사용자 프로필에 대 한 지정 된 속성입니다. 사용자 프로필에 대 한 속성을 지정 하는 Web.config 파일의 예제를 제공 하는 예제를 참조 하십시오.는 <xref:System.Web.Profile.ProfileBase> 클래스입니다.  
  
> [!IMPORTANT]
>  이 예제에서는 잠재적인 보안 문제가 사용자 입력을 허용 하는 텍스트 상자가 포함 되어 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">속성의 <see langword="allowAnonymous" /> 특성이 <see langword="false" />일 때 익명 프로필에 대한 속성 값을 설정하려고 한 경우</exception>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">현재 프로필에 대해 정의된 속성이 없는 경우  
  
 또는  
  
 지정된 프로필 속성 이름이 현재 프로필에 없는 경우  
  
 또는  
  
 지정된 프로필 속성의 공급자가 지정된 속성을 인식하지 못한 경우</exception>
        <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException">읽기 전용으로 표시된 속성 값을 설정하려고 한 경우</exception>
        <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException">호환되지 않는 형식을 사용하여 속성에 값을 할당하려고 한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public string UserName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.UserName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>프로필의 사용자 이름을 가져옵니다.</summary>
        <value>프로필의 사용자 이름이거나 프로필에 할당된 익명 사용자 식별자입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileBase.UserName%2A> 속성 프로필이 연결 된 인증된 된 사용자의 이름 또는 경우 프로필에 할당 된 사용자의 익명 id를 반환 합니다.는 <xref:System.Web.Profile.ProfileBase.IsAnonymous%2A> 속성은 `true`합니다.  
  
 사용자 프로필에 익명 액세스를 구성 섹션을 사용 하 여 사용할 수 및 `allowAnonymous` 특성 프로필 속성을 지정 하는 데 사용 되는 구성 요소입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>