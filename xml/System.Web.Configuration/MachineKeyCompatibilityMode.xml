<Type Name="MachineKeyCompatibilityMode" FullName="System.Web.Configuration.MachineKeyCompatibilityMode">
  <TypeSignature Language="C#" Value="public enum MachineKeyCompatibilityMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed MachineKeyCompatibilityMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.MachineKeyCompatibilityMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum MachineKeyCompatibilityMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class MachineKeyCompatibilityMode" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="586a3-101">암호화 방법을 사용할 수 있는지 여부를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="586a3-101">Specifies which encryption methods can be used.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="586a3-102">사용 된 <xref:System.Web.Configuration.MachineKeyCompatibilityMode> 값을 설정 하는 경우는 <xref:System.Web.Configuration.MachineKeySection.CompatibilityMode%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="586a3-102">You use the <xref:System.Web.Configuration.MachineKeyCompatibilityMode> values when you set the <xref:System.Web.Configuration.MachineKeySection.CompatibilityMode%2A> property.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Framework20SP1">
      <MemberSignature Language="C#" Value="Framework20SP1" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Configuration.MachineKeyCompatibilityMode Framework20SP1 = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Configuration.MachineKeyCompatibilityMode.Framework20SP1" />
      <MemberSignature Language="VB.NET" Value="Framework20SP1" />
      <MemberSignature Language="C++ CLI" Value="Framework20SP1" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.MachineKeyCompatibilityMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="586a3-103">2.0 서비스 팩 2 이전 버전의 .NET Framework에서 구현된 암호화 방법을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="586a3-103">Use the encryption methods that were implemented in .NET Framework versions earlier than version 2.0 Service Pack 2.</span></span> <span data-ttu-id="586a3-104">초기화 벡터(IV)는 ASP.NET 멤버십 데이터베이스에 암호화된 암호를 저장하는 경우를 제외하고 모든 암호화 작업에 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="586a3-104">Initialization vectors (IVs) are used for all encryption operations except for storing encrypted passwords in the ASP.NET membership database.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Framework20SP2">
      <MemberSignature Language="C#" Value="Framework20SP2" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Configuration.MachineKeyCompatibilityMode Framework20SP2 = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Configuration.MachineKeyCompatibilityMode.Framework20SP2" />
      <MemberSignature Language="VB.NET" Value="Framework20SP2" />
      <MemberSignature Language="C++ CLI" Value="Framework20SP2" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.MachineKeyCompatibilityMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="586a3-105">.NET Framework 버전 2.0 SP2 이상의 버전에서 사용할 수 있는 더욱 강한 암호화 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="586a3-105">Use the stronger encryption methods that are available in .NET Framework version 2.0 SP2 and later versions.</span></span> <span data-ttu-id="586a3-106">초기화 벡터(IV)는 모든 암호화 작업에 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="586a3-106">Initialization vectors (IVs) are used for all encryption operations.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Framework45">
      <MemberSignature Language="C#" Value="Framework45" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Configuration.MachineKeyCompatibilityMode Framework45 = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Configuration.MachineKeyCompatibilityMode.Framework45" />
      <MemberSignature Language="VB.NET" Value="Framework45" />
      <MemberSignature Language="C++ CLI" Value="Framework45" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.MachineKeyCompatibilityMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="586a3-107">.NET Framework 버전 4.5 이상의 버전에서 사용할 수 있는 암호화 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="586a3-107">Use encryption methods that are available in .NET Framework version 4.5 and later versions.</span></span> <span data-ttu-id="586a3-108"><see cref="F:System.Web.Configuration.MachineKeyCompatibilityMode.Framework20SP1" /> 및 <see cref="F:System.Web.Configuration.MachineKeyCompatibilityMode.Framework20SP2" />에 사용되는 암호화 메서드와 비교할 때 기본 암호화 루틴에 의해 생성되는 암호화 텍스트가 약간 더 작고 특정 유형의 이론적 공격에 보다 강합니다.</span><span class="sxs-lookup"><span data-stu-id="586a3-108">Compared to the encryption methods that are used for <see cref="F:System.Web.Configuration.MachineKeyCompatibilityMode.Framework20SP1" /> and <see cref="F:System.Web.Configuration.MachineKeyCompatibilityMode.Framework20SP2" />, the ciphertext that is generated by the default cryptographic routines is slightly smaller and is more resilient against certain classes of theoretical attacks.</span></span> <span data-ttu-id="586a3-109">필요한 암호화 키를 가져오기 위해 [!INCLUDE[win8](~/includes/win8-md.md)] 디렉터리 키 관리와도 통합합니다.</span><span class="sxs-lookup"><span data-stu-id="586a3-109">They also integrate with [!INCLUDE[win8](~/includes/win8-md.md)] directory key management in order to get required cryptographic keys.</span></span> <span data-ttu-id="586a3-110">또한 이 옵션을 통해 <see cref="T:System.Security.Cryptography.DataProtector" />에서 파생되는 클래스를 작성하고 <see cref="P:System.Web.Configuration.MachineKeySection.DataProtectorType" /> 속성에서 해당 클래스 이름을 지정하여 사용자 지정 암호화 루틴을 지정할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="586a3-110">This option also enables you to specify custom cryptographic routines by writing a class that derives from <see cref="T:System.Security.Cryptography.DataProtector" /> and specifying the class name in the <see cref="P:System.Web.Configuration.MachineKeySection.DataProtectorType" /> property.</span></span>  
  
 <span data-ttu-id="586a3-111">다음 구성 요구 사항이 이 옵션에 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="586a3-111">The following configuration requirements apply to this option:</span></span>  
  
 1. <span data-ttu-id="586a3-112"><see cref="P:System.Web.Configuration.MachineKeySection.DataProtectorType" /> 속성에 값이 있으면 <see cref="P:System.Web.Configuration.MachineKeySection.ApplicationName" /> 속성에도 값이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="586a3-112">If the <see cref="P:System.Web.Configuration.MachineKeySection.DataProtectorType" /> property has a value, the <see cref="P:System.Web.Configuration.MachineKeySection.ApplicationName" /> property must also have a value.</span></span>  
  
 2. <span data-ttu-id="586a3-113"><see cref="P:System.Web.Configuration.MachineKeySection.Validation" /> 특성에서는 시스템에서 정의한 유효성 검사 알고리즘(예: MD5, SHA1, HMACSHA256, HMACSHA384 또는 HMACSHA512)이거나 <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> 클래스에서 파생되는 클래스의 사용자 지정 유효성 검사 알고리즘을 지정해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="586a3-113">The <see cref="P:System.Web.Configuration.MachineKeySection.Validation" /> attribute must specify a system-defined validation algorithm (such as MD5, SHA1, HMACSHA256, HMACSHA384, or HMACSHA512) or a custom validation algorithm in a class that derives from the <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> class.</span></span> <span data-ttu-id="586a3-114">값 AES 및 3DES는 유효성 검사 알고리즘이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="586a3-114">The values AES and 3DES are not validation algorithms.</span></span>  
  
 <span data-ttu-id="586a3-115">이 옵션을 지정하면 폼 인증 티켓은 <see cref="P:System.Web.Configuration.FormsAuthenticationConfiguration.Protection" /> 속성에 지정된 값에 상관없이 항상 암호화되고 부호 있는 값으로 처리됩니다.</span><span class="sxs-lookup"><span data-stu-id="586a3-115">When you specify this option, forms authentication tickets are always both encrypted and signed, regardless of the value specified for the <see cref="P:System.Web.Configuration.FormsAuthenticationConfiguration.Protection" /> property.</span></span> <span data-ttu-id="586a3-116">페이지의 <see cref="P:System.Web.UI.Page.EnableViewStateMac" /> 속성이 <paramref name="true" />이거나 <see cref="P:System.Web.UI.Page.ViewStateEncryptionMode" /> 속성이 <see cref="F:System.Web.UI.ViewStateEncryptionMode.Always" />인 경우 뷰 상태가 암호화되고 서명됩니다.</span><span class="sxs-lookup"><span data-stu-id="586a3-116">View state is also both encrypted and signed if a page's <see cref="P:System.Web.UI.Page.EnableViewStateMac" /> property is <paramref name="true" /> or the <see cref="P:System.Web.UI.Page.ViewStateEncryptionMode" /> property is <see cref="F:System.Web.UI.ViewStateEncryptionMode.Always" />.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>