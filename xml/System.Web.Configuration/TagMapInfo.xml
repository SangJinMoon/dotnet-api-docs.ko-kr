<Type Name="TagMapInfo" FullName="System.Web.Configuration.TagMapInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0f8d4dc356d93dee8ea85474a02e10ad4a9abc94" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30537827" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TagMapInfo : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TagMapInfo extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.TagMapInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TagMapInfo&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class TagMapInfo sealed : System::Configuration::ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>단일 구성 태그 매핑 문이 포함되어 있습니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.TagMapInfo> 클래스 태그 형식을 컴파일 타임에 다시 매핑할 수 있습니다. 이 다시 매핑하면 매핑된 형식이 모든 페이지와 구성 파일의 범위에 ASP.NET 응용 프로그램의 컨트롤에 대 한 원래 태그 형식 대신 사용할 수 있습니다.  
  
 <xref:System.Web.Configuration.TagMapCollection> 클래스 프로그래밍 방식으로 액세스 하 고 수정할 수 있습니다는 `tagMapping` 하위 섹션은 `pages` 구성 파일의 섹션입니다. 내에서 `tagMappings` 하위 섹션을 추가 및 제거할 수 있습니다는 형식의 정규화 된 강력한 이름을 지정 하 여 태그 형식 간의 매핑.  
  
> [!NOTE]
>  다른 특성 및 컬렉션에서 달리는 `pages` 섹션 태그 매핑은 일치 하는 ASP.NET 페이지 지시문이 없습니다.  
  
   
  
## Examples  
 다음 구성 파일에서는 선언적으로의 여러 속성에 대 한 값을 지정 하는 방법을 보여 줍니다는 <xref:System.Web.Configuration.TagMapInfo> 클래스입니다.  
  
```  
<system.web>  
  <pages>  
    <tagMapping>  
      <add  
        tagType=  
          "System.Web.UI.WebControls.WebParts.WebPartManager"  
        mappedTagType=  
          "Microsoft.Sharepoint.WebPartPartManager,   
           MSPS.Web.dll, Version='2.0.0.0'"   
      />  
    </tagMapping>  
  </pages>  
</system.web>  
```  
  
 다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Web.Configuration.TagMapCollection> 태그 매핑 설정을 프로그래밍 방식으로 수정 하는 클래스입니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.Configuration.PagesSection> 클래스입니다.  
  
 [!code-csharp[System.Web.Configuration.PagesSection#17](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#17)]
 [!code-vb[System.Web.Configuration.PagesSection#17](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#17)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Configuration.PagesSection" />
    <altmember cref="T:System.Web.Configuration.TagMapCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TagMapInfo (string tagTypeName, string mappedTagTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tagTypeName, string mappedTagTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.TagMapInfo.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tagTypeName As String, mappedTagTypeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TagMapInfo(System::String ^ tagTypeName, System::String ^ mappedTagTypeName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tagTypeName" Type="System.String" />
        <Parameter Name="mappedTagTypeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagTypeName">다시 매핑되고 있는 태그 형식의 정규화된 이름입니다.</param>
        <param name="mappedTagTypeName">태그가 다시 매핑되는 형식의 이름과 지원 세부 사항입니다.</param>
        <summary>전달된 속성 값을 기반으로 <see cref="T:System.Web.Configuration.TagMapInfo" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Web.Configuration.TagMapInfo.%23ctor%2A> 생성자입니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.Configuration.PagesSection> 클래스입니다.  
  
 [!code-csharp[System.Web.Configuration.PagesSection#42](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#42)]
 [!code-vb[System.Web.Configuration.PagesSection#42](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#42)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.PagesSection" />
        <altmember cref="P:System.Web.Configuration.TagMapInfo.TagType" />
        <altmember cref="P:System.Web.Configuration.TagMapInfo.MappedTagType" />
        <altmember cref="P:System.Type.AssemblyQualifiedName" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.TagMapInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">비교할 개체입니다.</param>
        <summary>이 인스턴스를 다른 개체와 비교합니다.</summary>
        <returns>
          개체가 동일하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Configuration.PagesSection" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.TagMapInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 인스턴스의 해시 값을 반환합니다.</summary>
        <returns>현재 인스턴스의 해시 값입니다.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Configuration.PagesSection" />
      </Docs>
    </Member>
    <Member MemberName="MappedTagType">
      <MemberSignature Language="C#" Value="public string MappedTagType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MappedTagType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TagMapInfo.MappedTagType" />
      <MemberSignature Language="VB.NET" Value="Public Property MappedTagType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MappedTagType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("mappedTagType")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>태그가 다시 매핑되는 형식의 이름을 가져오거나 설정합니다.</summary>
        <value>태그가 다시 매핑되는 형식의 이름입니다. 기본값은 빈 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 태그 매핑은 컴파일 타임에 발생합니다. 이 다시 매핑하면 매핑된 형식 (에 지정 된는 <xref:System.Web.Configuration.TagMapInfo.MappedTagType%2A> 속성) 원래 태그 형식 대신 사용할 수 (지정 된는 <xref:System.Web.Configuration.TagMapInfo.TagType%2A> 속성) 모든 페이지와 구성 파일의 범위에 ASP.NET 응용 프로그램의 컨트롤에 대 한 합니다.  
  
> [!NOTE]
>  이 속성에 대 한 빈 문자열 값은 구성 시스템 개체를 serialize 할 때 예외를 throw 하도록 발생 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.Configuration.TagMapInfo.MappedTagType%2A> 속성을 사용하는 방법을 보여 줍니다. 에 대 한 보다 큰 예제의의 일부인는 <xref:System.Web.Configuration.PagesSection> 유형입니다.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.PagesSection" />
        <altmember cref="P:System.Web.Configuration.TagMapInfo.MappedTagType" />
        <altmember cref="P:System.Type.AssemblyQualifiedName" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TagMapInfo.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeElement">
      <MemberSignature Language="C#" Value="protected override bool SerializeElement (System.Xml.XmlWriter writer, bool serializeCollectionKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool SerializeElement(class System.Xml.XmlWriter writer, bool serializeCollectionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.TagMapInfo.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SerializeElement (writer As XmlWriter, serializeCollectionKey As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool SerializeElement(System::Xml::XmlWriter ^ writer, bool serializeCollectionKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="serializeCollectionKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <param name="serializeCollectionKey">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TagType">
      <MemberSignature Language="C#" Value="public string TagType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TagMapInfo.TagType" />
      <MemberSignature Language="VB.NET" Value="Public Property TagType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TagType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("tagType", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsKey=true, IsRequired=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>다시 매핑되고 있는 태그의 원본 형식 이름을 가져오거나 설정합니다.</summary>
        <value>다시 매핑되고 있는 태그의 원본 형식 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 태그 매핑은 컴파일 타임에 발생합니다. 이 다시 매핑하면 매핑된 형식 (에 지정 된는 <xref:System.Web.Configuration.TagMapInfo.MappedTagType%2A> 속성) 원래 태그 형식 대신 사용할 수 (지정 된는 <xref:System.Web.Configuration.TagMapInfo.TagType%2A> 속성) 모든 페이지와 구성 파일의 범위에 ASP.NET 응용 프로그램의 컨트롤에 대 한 합니다.  
  
> [!NOTE]
>  이 속성에 대 한 빈 문자열 값은 구성 시스템 개체를 serialize 할 때 예외를 throw 하도록 발생 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.Configuration.TagMapInfo.TagType%2A> 속성을 사용하는 방법을 보여 줍니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.Configuration.PagesSection> 클래스입니다.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.PagesSection" />
        <altmember cref="P:System.Web.Configuration.TagMapInfo.MappedTagType" />
        <altmember cref="P:System.Type.AssemblyQualifiedName" />
      </Docs>
    </Member>
  </Members>
</Type>