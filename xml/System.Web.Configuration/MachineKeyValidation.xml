<Type Name="MachineKeyValidation" FullName="System.Web.Configuration.MachineKeyValidation">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bd6bfc8b1566a1d266aead0fad0d8d4f6660bced" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30537017" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum MachineKeyValidation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed MachineKeyValidation extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.MachineKeyValidation" />
  <TypeSignature Language="VB.NET" Value="Public Enum MachineKeyValidation" />
  <TypeSignature Language="C++ CLI" Value="public enum class MachineKeyValidation" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>ASP.NET이 폼 인증, 보기 상태 데이터의 유효성 검사 및 out-of-process 세션 상태 식별에 사용하는 해싱 알고리즘을 지정합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 폼 인증 또는 보기 상태에 대해 사용 되는 데이터 훼손 되었는지 여부를 발견할 수 있도록 HMAC ()는 해시 기반 메시지 인증 코드를 사용 하 여 사용 합니다. HMAC 상태 콘텐츠 보기를 만들고 이후 요청에서 HMAC가 확인 하는 경우에 생성 됩니다. HMAC는 ASP.NET 서버와 클라이언트 간에 전송 되는 데이터 변경 하지만 암호화 된 경우가 아니면 인터넷을 통해 이동할 때 모든 사용자는 데이터를 읽을 수 있는지 여부를 결정 하는 데 도움이 됩니다. 기본적으로 뷰 상태 유효성 검사는 뿐 암호화 되지는 않습니다. 자세한 내용은 <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> 및 <xref:System.Web.UI.Page.RegisterRequiresViewStateEncryption%2A>를 참조하세요.  
  
 <xref:System.Web.Configuration.MachineKeyValidation> 열거형을 사용 하면 ASP.NET에서 HMAC를 만드는 데 사용할 알고리즘을 지정할 수 있습니다. 기본값은 HMACSHA256 합니다. 값을 사용 하는 ASP.NET의 <xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A> HMAC를 생성 하는 선택한 알고리즘을 사용 하 여 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Web.Configuration.MachineKeyValidation> 열거형입니다. 예제에서는 `configSection` 의 인스턴스가 <xref:System.Web.Configuration.MachineKeySection>합니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.Configuration.MachineKeySection> 클래스입니다.  
  
 [!code-csharp[System.Web.Configuration.MachineKeySection#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.MachineKeySection/CS/machinekeysection.cs#5)]
 [!code-vb[System.Web.Configuration.MachineKeySection#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.MachineKeySection/VB/machinekeysection.vb#5)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Configuration.MachineKeySection" />
    <altmember cref="P:System.Web.Configuration.MachineKeySection.Validation" />
    <altmember cref="P:System.Web.UI.Page.EnableViewStateMac" />
    <altmember cref="M:System.Web.UI.Page.RegisterRequiresViewStateEncryption" />
    <altmember cref="P:System.Web.UI.Page.ViewStateEncryptionMode" />
  </Docs>
  <Members>
    <Member MemberName="AES">
      <MemberSignature Language="C#" Value="AES" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Configuration.MachineKeyValidation AES = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Configuration.MachineKeyValidation.AES" />
      <MemberSignature Language="VB.NET" Value="AES" />
      <MemberSignature Language="C++ CLI" Value="AES" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.MachineKeyValidation</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>ASP.NET에서 <see langword="AES" />(Rijndael) 암호화 알고리즘을 사용하도록 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 웹 응용 프로그램에서 뷰 상태를 암호화 하려는 경우이 옵션을 선택 합니다. 이 옵션을 선택 하는 경우는 <xref:System.Web.Configuration.MachineKeySection.DecryptionKey%2A> 암호화 및 암호 해독에 대 한 속성을 사용 및 `HMACSHA1` 함께 사용 될 해시 알고리즘의 <xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A> 유효성 검사에 대 한 속성.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.MachineKeyValidation" />
      </Docs>
    </Member>
    <Member MemberName="Custom">
      <MemberSignature Language="C#" Value="Custom" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Configuration.MachineKeyValidation Custom = int32(7)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Configuration.MachineKeyValidation.Custom" />
      <MemberSignature Language="VB.NET" Value="Custom" />
      <MemberSignature Language="C++ CLI" Value="Custom" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.MachineKeyValidation</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>ASP.NET에서 사용자 지정 해시 알고리즘을 사용하도록 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 클래스에서 파생 되는 사용자 지정 해시 알고리즘을 구현할 수 있습니다 <xref:System.Security.Cryptography.KeyedHashAlgorithm>합니다.  
  
 형식에서 요소의 유효성 검사 특성에 사용자 지정 알고리즘은 선언적으로 지정 된 일반적으로 `alg:` *algorithm_name*합니다. 코드에서 사용자 지정 알고리즘을 지정 하는 방법에 대 한 정보를 참조 하십시오.는 <xref:System.Web.Configuration.MachineKeySection.ValidationAlgorithm%2A?displayProperty=nameWithType> 속성입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.MachineKeyValidation" />
      </Docs>
    </Member>
    <Member MemberName="HMACSHA256">
      <MemberSignature Language="C#" Value="HMACSHA256" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Configuration.MachineKeyValidation HMACSHA256 = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Configuration.MachineKeyValidation.HMACSHA256" />
      <MemberSignature Language="VB.NET" Value="HMACSHA256" />
      <MemberSignature Language="C++ CLI" Value="HMACSHA256" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.MachineKeyValidation</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>ASP.NET에서 <see langword="HMACSHA256" /> 해시 알고리즘을 사용하도록 지정합니다.  기본값입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HMACSHA256` 256 비트 해시 코드를 생성 하는 SHA2 해시 알고리즘이입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.MachineKeyValidation" />
      </Docs>
    </Member>
    <Member MemberName="HMACSHA384">
      <MemberSignature Language="C#" Value="HMACSHA384" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Configuration.MachineKeyValidation HMACSHA384 = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Configuration.MachineKeyValidation.HMACSHA384" />
      <MemberSignature Language="VB.NET" Value="HMACSHA384" />
      <MemberSignature Language="C++ CLI" Value="HMACSHA384" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.MachineKeyValidation</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>ASP.NET에서 <see langword="HMACSHA384" /> 해시 알고리즘을 사용하도록 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HMACSHA384` 384 비트 해시 코드를 생성 하는 SHA2 해시 알고리즘이입니다. 이 옵션은 제공한 것 보다 더 강력한 보안을 요구 하는 응용 프로그램에 사용할 수는 `HMACSHA256` 알고리즘입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.MachineKeyValidation" />
      </Docs>
    </Member>
    <Member MemberName="HMACSHA512">
      <MemberSignature Language="C#" Value="HMACSHA512" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Configuration.MachineKeyValidation HMACSHA512 = int32(6)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Configuration.MachineKeyValidation.HMACSHA512" />
      <MemberSignature Language="VB.NET" Value="HMACSHA512" />
      <MemberSignature Language="C++ CLI" Value="HMACSHA512" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.MachineKeyValidation</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>ASP.NET에서 <see langword="HMACSHA512" /> 해시 알고리즘을 사용하도록 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HMACSHA512` 512 비트 해시 코드를 생성 하는 SHA2 해시 알고리즘이입니다. 이 옵션은 제공한 것 보다 더 강력한 보안을 요구 하는 응용 프로그램에 사용할 수는 `HMACSHA384` 알고리즘입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.MachineKeyValidation" />
      </Docs>
    </Member>
    <Member MemberName="MD5">
      <MemberSignature Language="C#" Value="MD5" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Configuration.MachineKeyValidation MD5 = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Configuration.MachineKeyValidation.MD5" />
      <MemberSignature Language="VB.NET" Value="MD5" />
      <MemberSignature Language="C++ CLI" Value="MD5" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.MachineKeyValidation</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>ASP.NET에서 MD5(<see langword="MD5" />) 해시 알고리즘을 사용하도록 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `MD5` 128 비트 해시 값을 생성 하는 해시 알고리즘이입니다. 이 옵션 포함 레거시 용도로 되며 이전 버전의 ASP와의 호환성이 필요한 경우에 선택 해야 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.MachineKeyValidation" />
      </Docs>
    </Member>
    <Member MemberName="SHA1">
      <MemberSignature Language="C#" Value="SHA1" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Configuration.MachineKeyValidation SHA1 = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Configuration.MachineKeyValidation.SHA1" />
      <MemberSignature Language="VB.NET" Value="SHA1" />
      <MemberSignature Language="C++ CLI" Value="SHA1" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.MachineKeyValidation</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>ASP.NET에서 <see langword="HMACSHA1" /> 해시 알고리즘을 사용하도록 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HMACSHA1` 160 비트 해시 값을 생성 하는 해시 알고리즘이입니다. 이 옵션 포함 레거시 용도로 되며 이전 버전의 ASP와의 호환성이 필요한 경우에 선택 해야 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.MachineKeyValidation" />
      </Docs>
    </Member>
    <Member MemberName="TripleDES">
      <MemberSignature Language="C#" Value="TripleDES" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Configuration.MachineKeyValidation TripleDES = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Configuration.MachineKeyValidation.TripleDES" />
      <MemberSignature Language="VB.NET" Value="TripleDES" />
      <MemberSignature Language="C++ CLI" Value="TripleDES" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.MachineKeyValidation</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>ASP.NET에서 TripleDES(<see langword="3DES" />) 암호화 알고리즘을 사용하도록 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 TripleDES는 상태 보기의 암호화를 지정 하는 경우에 사용 되는 암호화 알고리즘입니다. 이 옵션 포함 레거시 용도로 되며 이전 버전의 ASP와의 호환성이 필요한 경우에 선택 해야 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.MachineKeyValidation" />
      </Docs>
    </Member>
  </Members>
</Type>