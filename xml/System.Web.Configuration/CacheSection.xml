<Type Name="CacheSection" FullName="System.Web.Configuration.CacheSection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6e4f49daa8eb51383e9bb222204958e7033e6f5c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30538577" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CacheSection : System.Configuration.ConfigurationSection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CacheSection extends System.Configuration.ConfigurationSection" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.CacheSection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CacheSection&#xA;Inherits ConfigurationSection" />
  <TypeSignature Language="C++ CLI" Value="public ref class CacheSection sealed : System::Configuration::ConfigurationSection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationSection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ASP.NET 응용 프로그램의 전역 캐시 설정을 구성합니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.CacheSection> 클래스를 사용하면 구성 파일의 `<cache>` 섹션을 프로그래밍 방식으로 액세스하고 수정할 수 있습니다.  
  
 ASP.NET 캐싱 기능에서 구현 되는 <xref:System.Web.Caching.Cache> 클래스입니다. 자세한 내용은 참조 [캐싱](http://msdn.microsoft.com/library/ac11c8ea-df5d-4de8-b315-9ccf1048b0ce)합니다.  
  
> [!NOTE]
>  <xref:System.Web.Configuration.CacheSection> section 속성에 정의 된 제한에 따라 구성 파일의 관련된 섹션에 정보를 쓸 수 <xref:System.Configuration.SectionInformation.AllowDefinition%2A> 값인 <xref:System.Configuration.ConfigurationAllowDefinition.MachineToApplication>합니다. 데이터를 계층 구조에서 사용할 수 없습니다 수준에서 구성 파일에 쓸 파서에서 생성 하는 오류가 발생 합니다. 그러나 계층의 모든 수준에서 구성 정보를 읽을이 클래스를 사용할 수 있습니다.  
  
 캐시는 데이터를 자주 액세스 하는 저장 하는 데 사용 하는 응용 프로그램별 해시 테이블입니다. 응용 프로그램 및 세션 상태 캐시를 가장 유사, 해당 응용 프로그램 수준 범위 때문에 응용 프로그램 상태 비슷합니다. 캐시와 응용 프로그램 상태 메커니즘 간의 가장 큰 차이점 중 하나는 캐시는 이러한 종속성을 사용 하면 특정 이벤트가 발생할 때 캐시 된 항목을 자동으로 제거 하는 응용 프로그램을 빌드할 수 있습니다 종속성을 지원 합니다.  
  
   
  
## Examples  
 관련 된 코드 파일을 사용 하 고 다음 코드 예제에서는 페이지를 보여 줍니다. 액세스는 <xref:System.Web.Configuration.CacheSection> 섹션 특성입니다.  
  
 [!code-aspx-csharp[System.Web.Configuration.CacheSection#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.CacheSection/CS/readwritecache.aspx#11)]
 [!code-aspx-vb[System.Web.Configuration.CacheSection#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.CacheSection/VB/readwritecache.aspx#11)]
  
 [!code-csharp[System.Web.Configuration.CacheSection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.CacheSection/CS/readwritecache.aspx.cs#1)]
 [!code-vb[System.Web.Configuration.CacheSection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.CacheSection/VB/readwritecache.aspx.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Configuration.OutputCacheSection" />
    <altmember cref="T:System.Web.Configuration.OutputCacheSettingsSection" />
    <altmember cref="T:System.Web.Configuration.SqlCacheDependencySection" />
    <altmember cref="T:System.Web.Caching.Cache" />
    <altmember cref="P:System.Web.HttpContext.Cache" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheSection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.CacheSection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheSection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.Configuration.CacheSection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.CacheSection.%23ctor%2A> 생성자는 사용자 코드에서 직접 사용할 수 없습니다. ASP.NET 구성 시스템에 의해 호출 됩니다. 인스턴스를 가져올 수는 <xref:System.Web.Configuration.CacheSection> 클래스를 사용 하 여는 <xref:System.Configuration.Configuration.GetSection%2A> 메서드.  
  
   
  
## Examples  
 [!code-csharp[System.Web.Configuration.CacheSection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.CacheSection/CS/readwritecache.aspx.cs#2)]
 [!code-vb[System.Web.Configuration.CacheSection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.CacheSection/VB/readwritecache.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultProvider">
      <MemberSignature Language="C#" Value="public string DefaultProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.CacheSection.DefaultProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultProvider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultProvider { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("defaultProvider", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>기본 공급자를 가져오거나 설정합니다.</summary>
        <value>기본 공급자입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableExpiration">
      <MemberSignature Language="C#" Value="public bool DisableExpiration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableExpiration" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.CacheSection.DisableExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Property DisableExpiration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisableExpiration { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("disableExpiration", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>캐시 만료가 비활성화되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          캐시 만료가 비활성화되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.Configuration.CacheSection.DisableExpiration%2A> 속성이 `true`, 캐시 된 항목이 만료 되지 않도록 합니다. 이 설정은 캐시 동작 응용 프로그램 코드에서 디버깅 하는 데 사용 됩니다. 사용 하 여 주의 캐시 만료를 비활성화 하는 경우 유효 기간 보다 더 이상 캐시 되는 항목에 발생할 수 있습니다.  
  
> [!NOTE]
>  페이지 출력 캐시에 추가 하려면 해당 페이지에 대 한 만료 정책을 설정 해야 합니다. 선언적으로 수행할 수 있습니다는 [@ OutputCache](http://msdn.microsoft.com/library/28a9e101-fb44-4198-9cb6-b8a52312fec2) 지시문 또는 프로그래밍 방식으로 사용 하 여는 <xref:System.Web.HttpCachePolicy.SetExpires%2A> 메서드. 자세한 내용은 참조 [하는 방법: ASP.NET 페이지 캐시에 대 한 만료 값 설정](http://msdn.microsoft.com/library/c8931600-b167-477d-bd5a-0186ac908646)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.Configuration.CacheSection.DisableExpiration%2A> 속성을 사용하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Configuration.CacheSection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.CacheSection/CS/readwritecache.aspx.cs#4)]
 [!code-vb[System.Web.Configuration.CacheSection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.CacheSection/VB/readwritecache.aspx.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableMemoryCollection">
      <MemberSignature Language="C#" Value="public bool DisableMemoryCollection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableMemoryCollection" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.CacheSection.DisableMemoryCollection" />
      <MemberSignature Language="VB.NET" Value="Public Property DisableMemoryCollection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisableMemoryCollection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("disableMemoryCollection", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>캐시 메모리 수집이 비활성화되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          캐시 메모리 수집이 비활성화되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.Configuration.CacheSection.DisableMemoryCollection%2A> 속성이 `true`, 캐시 관련 API 호출 아무런 효과가 없습니다.  
  
 경우는 <xref:System.Web.Configuration.CacheSection.DisableMemoryCollection%2A> 속성이 `true`, 캐시는 사용 되지 않는 항목을 수집 하지 않습니다. 주의이 설정을 사용할 때는 메모리 수집을 비활성화 응용 프로그램에 대 한 메모리 부족 조건을 신속 하 게 발생할 수 있습니다.  
  
 출력 캐시 또는 ASP.NET 내부 캐시에이 설정은 효과가 없습니다. 다양 한 유형의 캐시에 대 한 자세한 내용은 참조 [캐싱](http://msdn.microsoft.com/library/ac11c8ea-df5d-4de8-b315-9ccf1048b0ce)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.Configuration.CacheSection.DisableMemoryCollection%2A> 속성을 사용하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Configuration.CacheSection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.CacheSection/CS/readwritecache.aspx.cs#3)]
 [!code-vb[System.Web.Configuration.CacheSection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.CacheSection/VB/readwritecache.aspx.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PercentagePhysicalMemoryUsedLimit">
      <MemberSignature Language="C#" Value="public int PercentagePhysicalMemoryUsedLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PercentagePhysicalMemoryUsedLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.CacheSection.PercentagePhysicalMemoryUsedLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentagePhysicalMemoryUsedLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PercentagePhysicalMemoryUsedLimit { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("percentagePhysicalMemoryUsedLimit", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MaxValue=100, MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>최대 가상 메모리 사용률을 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>최대 가상 메모리 사용률입니다. 기본값은 90%입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.CacheSection.PercentagePhysicalMemoryUsedLimit%2A> 속성 높은 중 상태에 대 한 임계값을 지정 합니다. 이 임계값에 도달 하면 캐시 시스템 보다 적극적으로 청소 방식을 점진적으로 시작 합니다.  
  
   
  
## Examples  
 [!code-csharp[System.Web.Configuration.CacheSection#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.CacheSection/CS/readwritecache.aspx.cs#7)]
 [!code-vb[System.Web.Configuration.CacheSection#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.CacheSection/VB/readwritecache.aspx.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrivateBytesLimit">
      <MemberSignature Language="C#" Value="public long PrivateBytesLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 PrivateBytesLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.CacheSection.PrivateBytesLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property PrivateBytesLimit As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long PrivateBytesLimit { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("privateBytesLimit", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.LongValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>작업 프로세스 전용 공간의 최대 크기를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>작업 프로세스에 할당된 전용 공간의 최대 크기(바이트)입니다. 기본값은 0입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.CacheSection.PrivateBytesLimit%2A> 속성 높은 중 상태에 대 한 임계값을 지정 합니다. 이 임계값에 도달 하면 캐시 시스템 보다 적극적으로 청소 방식을 점진적으로 시작 합니다.  
  
   
  
## Examples  
 [!code-csharp[System.Web.Configuration.CacheSection#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.CacheSection/CS/readwritecache.aspx.cs#6)]
 [!code-vb[System.Web.Configuration.CacheSection#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.CacheSection/VB/readwritecache.aspx.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrivateBytesPollTime">
      <MemberSignature Language="C#" Value="public TimeSpan PrivateBytesPollTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan PrivateBytesPollTime" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.CacheSection.PrivateBytesPollTime" />
      <MemberSignature Language="VB.NET" Value="Public Property PrivateBytesPollTime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan PrivateBytesPollTime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.InfiniteTimeSpanConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("privateBytesPollTime", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>작업자 프로세스 메모리 사용을 폴링하는 시간 간격을 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>작업자 프로세스 메모리 사용을 폴링하는 시간 간격입니다. 기본값은 2 분입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 폴링 상당히 소모 되며 캐시 트리밍 알고리즘의 반응 속도 수행한 폴링 호출의 수 간의 적절 한 균형이 조정 해야 할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.CacheSection.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public System.Configuration.ProviderSettingsCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ProviderSettingsCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.CacheSection.Providers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Providers As ProviderSettingsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::ProviderSettingsCollection ^ Providers { System::Configuration::ProviderSettingsCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("providers")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ProviderSettingsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>공급자 설정 컬렉션을 가져옵니다.</summary>
        <value>공급자 설정 컬렉션입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>