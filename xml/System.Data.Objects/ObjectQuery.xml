<Type Name="ObjectQuery" FullName="System.Data.Objects.ObjectQuery">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ac08099d2b3bd5d7086c3226af390df28080b4a6" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51927230" /></Metadata><TypeSignature Language="C#" Value="public abstract class ObjectQuery : System.Collections.IEnumerable, System.ComponentModel.IListSource, System.Linq.IOrderedQueryable, System.Linq.IQueryable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ObjectQuery extends System.Object implements class System.Collections.IEnumerable, class System.ComponentModel.IListSource, class System.Linq.IOrderedQueryable, class System.Linq.IQueryable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectQuery" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ObjectQuery&#xA;Implements IEnumerable, IListSource, IOrderedQueryable, IQueryable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectQuery abstract : System::Collections::IEnumerable, System::ComponentModel::IListSource, System::Linq::IOrderedQueryable, System::Linq::IQueryable" />
  <TypeSignature Language="F#" Value="type ObjectQuery = class&#xA;    interface IEnumerable&#xA;    interface IQueryable&#xA;    interface IOrderedQueryable&#xA;    interface IListSource" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IListSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IOrderedQueryable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IQueryable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="3fd7b-101">LINQ to Entities와 <see cref="T:System.Data.Objects.ObjectQuery`1" />를 둘 다 사용하여 개념적 모델에 대한 쿼리의 일반 기능을 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-101">Implements common functionality for queries against a conceptual model using both LINQ to Entities and <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fd7b-102"><xref:System.Data.Objects.ObjectQuery> 개념적 모델에 대 한 쿼리에 대 한 기본 클래스가입니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-102"><xref:System.Data.Objects.ObjectQuery> is the base class for queries against a conceptual model.</span></span> <span data-ttu-id="3fd7b-103"><xref:System.Data.Objects.ObjectQuery>는 LINQ to Entities 쿼리가 <xref:System.Data.Objects.ObjectQuery%601>를 통해 실행한 쿼리와 동일한 기능을 가지도록 하기 위해 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-103"><xref:System.Data.Objects.ObjectQuery> is provided to ensure that LINQ to Entities queries have the same functionality as queries executed using <xref:System.Data.Objects.ObjectQuery%601>.</span></span> <span data-ttu-id="3fd7b-104">사용 해야 <xref:System.Data.Objects.ObjectQuery%601> 개념적 모델을 쿼리 하는 지정 된 형식을 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-104">You must use <xref:System.Data.Objects.ObjectQuery%601> with a specified type to query a conceptual model.</span></span> <span data-ttu-id="3fd7b-105">자세한 내용은 [개체 쿼리](https://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276)합니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-105">For more information, see [Object Queries](https://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276).</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/641f9b68-9046-47a1-abb0-1c8eaeda0e2d"><span data-ttu-id="3fd7b-106">LINQ to Entities</span><span class="sxs-lookup"><span data-stu-id="3fd7b-106">LINQ to Entities</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public string CommandText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandText { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandText : string" Usage="System.Data.Objects.ObjectQuery.CommandText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fd7b-107">쿼리의 명령 텍스트를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-107">Returns the command text for the query.</span></span></summary>
        <value><span data-ttu-id="3fd7b-108"><see langword="string" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-108">A <see langword="string" /> value.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Objects.ObjectContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As ObjectContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Objects::ObjectContext ^ Context { System::Data::Objects::ObjectContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Data.Objects.ObjectContext" Usage="System.Data.Objects.ObjectQuery.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fd7b-109">이 개체 쿼리와 관련된 개체 컨텍스트를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-109">Gets the object context associated with this object query.</span></span></summary>
        <value><span data-ttu-id="3fd7b-110">이 <see cref="T:System.Data.Objects.ObjectContext" /> 인스턴스와 관련된 <see cref="T:System.Data.Objects.ObjectQuery`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-110">The <see cref="T:System.Data.Objects.ObjectContext" /> associated with this <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fd7b-111">쿼리의 컨텍스트에는 연결, 캐시 및 메타데이터가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-111">The context for the query includes the connection, cache, and metadata.</span></span> <span data-ttu-id="3fd7b-112">자세한 내용은 [개체 서비스 개요(Entity Framework)](https://msdn.microsoft.com/library/43014cf9-c9cb-4538-bfbb-197820b60038)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-112">For more information, see [Object Services Overview (Entity Framework)](https://msdn.microsoft.com/library/43014cf9-c9cb-4538-bfbb-197820b60038).</span></span>  
  
 <span data-ttu-id="3fd7b-113">연결 속성은 변경할 수 있으며 쿼리를 실행하기 전에 설정해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-113">The connection property is mutable and must be set before a query can be executed.</span></span> <span data-ttu-id="3fd7b-114">자세한 내용은 [개체 서비스 (Entity Framework)에서 연결 관리](https://msdn.microsoft.com/library/a1df87ef-6441-417d-b264-bb58360e5d67(v=vs.90))합니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-114">For more information, see [Managing Connections in Object Services (Entity Framework)](https://msdn.microsoft.com/library/a1df87ef-6441-417d-b264-bb58360e5d67(v=vs.90)).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3fd7b-115">이 항목의 예제는 기준으로 합니다 [AdventureWorks Sales 모델](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-115">The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="3fd7b-116">예제에서는 이 <xref:System.Data.Objects.ObjectContext> 개체와 관련된 <xref:System.Data.Objects.ObjectQuery%601> 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-116">The example gets the <xref:System.Data.Objects.ObjectContext> object associated with this <xref:System.Data.Objects.ObjectQuery%601> object.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Context](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_context)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Context](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_context)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="3fd7b-117">데이터를 개체로 쿼리 및 결과 (Entity Framework) 셰이핑</span><span class="sxs-lookup"><span data-stu-id="3fd7b-117">Querying Data as Objects and Shaping Results (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnablePlanCaching">
      <MemberSignature Language="C#" Value="public bool EnablePlanCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePlanCaching" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.EnablePlanCaching" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePlanCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePlanCaching { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnablePlanCaching : bool with get, set" Usage="System.Data.Objects.ObjectQuery.EnablePlanCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fd7b-118">쿼리 계획을 캐시해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-118">Gets or sets a value that indicates whether the query plan should be cached.</span></span></summary>
        <value><span data-ttu-id="3fd7b-119">쿼리 계획을 캐시해야 하는지 여부를 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-119">A value that indicates whether the query plan should be cached.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fd7b-120">자세한 내용은 [쿼리 계획 캐싱](~/docs/framework/data/adonet/ef/language-reference/query-plan-caching-entity-sql.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-120">For more information, see [Query Plan Caching](~/docs/framework/data/adonet/ef/language-reference/query-plan-caching-entity-sql.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="3fd7b-121">데이터를 개체로 쿼리(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="3fd7b-121">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectResult Execute (System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectResult Execute(valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.Execute(System.Data.Objects.MergeOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectResult ^ Execute(System::Data::Objects::MergeOption mergeOption);" />
      <MemberSignature Language="F#" Value="member this.Execute : System.Data.Objects.MergeOption -&gt; System.Data.Objects.ObjectResult" Usage="objectQuery.Execute mergeOption" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" />
      </Parameters>
      <Docs>
        <param name="mergeOption"><span data-ttu-id="3fd7b-122">쿼리를 실행할 때 사용할 <see cref="T:System.Data.Objects.MergeOption" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-122">The <see cref="T:System.Data.Objects.MergeOption" /> to use when executing the query.</span></span> <span data-ttu-id="3fd7b-123">기본값은 <see cref="F:System.Data.Objects.MergeOption.AppendOnly" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-123">The default is <see cref="F:System.Data.Objects.MergeOption.AppendOnly" />.</span></span></param>
        <summary><span data-ttu-id="3fd7b-124">지정된 병합 옵션을 사용하여 형식화되지 않은 개체 쿼리를 실행합니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-124">Executes the untyped object query with the specified merge option.</span></span></summary>
        <returns><span data-ttu-id="3fd7b-125">쿼리에서 반환되는 엔터티 개체의 컬렉션을 포함하는 <see cref="T:System.Data.Objects.ObjectResult`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-125">An <see cref="T:System.Data.Objects.ObjectResult`1" /> that contains a collection of entity objects returned by the query.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fd7b-126">개체 쿼리에 대한 기본 병합 옵션은 <xref:System.Data.Objects.MergeOption.AppendOnly>입니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-126">The default merge option for object queries is <xref:System.Data.Objects.MergeOption.AppendOnly>.</span></span> <span data-ttu-id="3fd7b-127">자세한 내용은 [Id 확인, 상태 관리 및 변경 내용 추적](https://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0)합니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-127">For more information, see [Identity Resolution, State Management, and Change Tracking](https://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0).</span></span>  
  
 <span data-ttu-id="3fd7b-128">형식화된 개체 쿼리의 경우 <xref:System.Data.Objects.ObjectQuery%601.Execute%2A>에 대해 <xref:System.Data.Objects.ObjectQuery%601> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-128">Call the <xref:System.Data.Objects.ObjectQuery%601.Execute%2A> method on <xref:System.Data.Objects.ObjectQuery%601> for typed object queries.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="3fd7b-129">데이터를 개체로 쿼리(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="3fd7b-129">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetResultType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.TypeUsage GetResultType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.TypeUsage GetResultType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.GetResultType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetResultType () As TypeUsage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::TypeUsage ^ GetResultType();" />
      <MemberSignature Language="F#" Value="member this.GetResultType : unit -&gt; System.Data.Metadata.Edm.TypeUsage" Usage="objectQuery.GetResultType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.TypeUsage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3fd7b-130">쿼리의 결과 형식에 대한 정보를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-130">Returns information about the result type of the query.</span></span></summary>
        <returns><span data-ttu-id="3fd7b-131">쿼리의 결과 형식에 대한 정보를 포함하는 <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-131">A <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> value that contains information about the result type of the query.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3fd7b-132">이 예제는 기준으로 합니다 [AdventureWorks Sales 모델](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-132">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="3fd7b-133">예제에서는 <xref:System.Data.Objects.ObjectQuery%601> 형식의 <xref:System.Data.Common.DbDataRecord>를 만들고 <xref:System.Data.Objects.ObjectQuery.GetResultType%2A>을 사용하여 반환되는 형식이 행을 나타내는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-133">The example creates an <xref:System.Data.Objects.ObjectQuery%601> of type <xref:System.Data.Common.DbDataRecord> and uses <xref:System.Data.Objects.ObjectQuery.GetResultType%2A> to determine whether the type returned represents a row.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#GetResultType](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#getresulttype)]
 [!code-vb[DP ObjectServices Concepts#GetResultType](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#getresulttype)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a1df87ef-6441-417d-b264-bb58360e5d67(v=vs.90)"><span data-ttu-id="3fd7b-134">개체 서비스에서 연결 관리(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="3fd7b-134">Managing Connections in Object Services (Entity Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/196097a5-a791-4ac4-9e6a-805685d481d5"><span data-ttu-id="3fd7b-135">ADO.NET 메타데이터</span><span class="sxs-lookup"><span data-stu-id="3fd7b-135">ADO.NET Metadata</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MergeOption">
      <MemberSignature Language="C#" Value="public System.Data.Objects.MergeOption MergeOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Objects.MergeOption MergeOption" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.MergeOption" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeOption As MergeOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Objects::MergeOption MergeOption { System::Data::Objects::MergeOption get(); void set(System::Data::Objects::MergeOption value); };" />
      <MemberSignature Language="F#" Value="member this.MergeOption : System.Data.Objects.MergeOption with get, set" Usage="System.Data.Objects.ObjectQuery.MergeOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fd7b-136">쿼리에서 반환되는 개체를 개체 컨텍스트에 추가하는 방법을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-136">Gets or sets how objects returned from a query are added to the object context.</span></span></summary>
        <value><span data-ttu-id="3fd7b-137"><see cref="T:System.Data.Objects.MergeOption" /> 쿼리입니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-137">The query <see cref="T:System.Data.Objects.MergeOption" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fd7b-138"><xref:System.Data.Objects.MergeOption>을 지정하지 않았으면 <xref:System.Data.Objects.MergeOption.AppendOnly>가 기본값입니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-138">If no <xref:System.Data.Objects.MergeOption> is specified, the default value is <xref:System.Data.Objects.MergeOption.AppendOnly>.</span></span> <span data-ttu-id="3fd7b-139">자세한 내용은 [Id 확인, 상태 관리 및 변경 내용 추적](https://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0)합니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-139">For more information, see [Identity Resolution, State Management, and Change Tracking](https://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="3fd7b-140">데이터를 개체로 쿼리 및 결과 (Entity Framework) 셰이핑</span><span class="sxs-lookup"><span data-stu-id="3fd7b-140">Querying Data as Objects and Shaping Results (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Objects.ObjectParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As ObjectParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Objects::ObjectParameterCollection ^ Parameters { System::Data::Objects::ObjectParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Data.Objects.ObjectParameterCollection" Usage="System.Data.Objects.ObjectQuery.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fd7b-141">이 개체 쿼리에 대한 매개 변수 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-141">Gets the parameter collection for this object query.</span></span></summary>
        <value><span data-ttu-id="3fd7b-142">이 <see cref="T:System.Data.Objects.ObjectQuery`1" />에 대한 매개 변수 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-142">The parameter collection for this <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fd7b-143">반환되는 <xref:System.Data.Objects.ObjectParameterCollection>을 사용하여 쿼리에 전달되는 매개 변수를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-143">Use the returned <xref:System.Data.Objects.ObjectParameterCollection> to specify parameters that are passed to the query.</span></span> <span data-ttu-id="3fd7b-144">자세한 내용은 [쿼리 작성기 메서드](https://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0)합니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-144">For more information, see [Query Builder Methods](https://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3fd7b-145">이 예제는 기준으로 합니다 [AdventureWorks Sales 모델](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-145">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="3fd7b-146">예제에서는 새 매개 변수를 컬렉션에 추가한 다음 이 <xref:System.Data.Objects.ObjectQuery%601>에 대한 매개 변수 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-146">The example adds new parameters to the collection and then gets the parameter collection for this <xref:System.Data.Objects.ObjectQuery%601>.</span></span> <span data-ttu-id="3fd7b-147">@FSHO2@그런 다음 <xref:System.Data.Objects.ObjectParameterCollection>을 반복하여 컬렉션에 있는 각 매개 변수의 이름, 형식 및 값을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-147">Then it iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, type, and value of each parameter in the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_parameters)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_parameters)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="3fd7b-148">데이터를 개체로 쿼리(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="3fd7b-148">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3fd7b-149">컬렉션을 반복하는 열거자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-149">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="3fd7b-150">컬렉션에서 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.IEnumerator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-150">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fd7b-151"><xref:System.Data.Objects.ObjectQuery.System%23Collections%23IEnumerable%23GetEnumerator%2A>를 호출하면 <xref:System.Data.Objects.ObjectQuery.MergeOption%2A> 속성에 지정된 병합 옵션을 사용하여 쿼리가 실행됩니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-151">Calling <xref:System.Data.Objects.ObjectQuery.System%23Collections%23IEnumerable%23GetEnumerator%2A> executes the query with the merge option that is specified by the <xref:System.Data.Objects.ObjectQuery.MergeOption%2A> property.</span></span>  
  
 <span data-ttu-id="3fd7b-152">@FSHO1@C# 언어의 `foreach` 문(Visual Basic의 경우 `For Each`)은 열거자의 복잡성을 숨깁니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-152">The `foreach` statement of the C# language (`For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="3fd7b-153">그러므로 열거자를 직접 조작하는 대신 `foreach`를 사용하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-153">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="3fd7b-154">열거자를 사용하여 컬렉션의 데이터를 읽을 수는 있지만 내부 컬렉션을 수정할 수는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-154">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="3fd7b-155">데이터를 개체로 쿼리(Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="3fd7b-155">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.ContainsListCollection">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IListSource.ContainsListCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#ContainsListCollection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ContainsListCollection As Boolean Implements IListSource.ContainsListCollection" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ComponentModel::IListSource::ContainsListCollection { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fd7b-156">쿼리에서 반환되는 컬렉션에 컬렉션 개체가 포함되는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-156">Gets a value that indicates whether the collection returned by the query contains collection objects.</span></span></summary>
        <value><span data-ttu-id="3fd7b-157">부울 값입니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-157">A Boolean value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fd7b-158">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="3fd7b-158">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3fd7b-159"><xref:System.Data.Objects.ObjectQuery%601> 인스턴스가 <xref:System.ComponentModel.IListSource> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-159">It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 <span data-ttu-id="3fd7b-160">이 속성은 항상 반환 `false` 에 쿼리에 의해 반환 된 컬렉션 컬렉션이 아닌 개체가 들어 있으므로.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-160">This property always returns `false` because the collection returned by the query contains objects and not collections.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.GetList">
      <MemberSignature Language="C#" Value="System.Collections.IList IListSource.GetList ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IList System.ComponentModel.IListSource.GetList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#GetList" />
      <MemberSignature Language="VB.NET" Value="Function GetList () As IList Implements IListSource.GetList" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IList ^ System.ComponentModel.IListSource.GetList() = System::ComponentModel::IListSource::GetList;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3fd7b-161">컬렉션을 데이터 바인딩에 사용되는 <see cref="T:System.Collections.IList" />로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-161">Returns the collection as an <see cref="T:System.Collections.IList" /> used for data binding.</span></span></summary>
        <returns><span data-ttu-id="3fd7b-162">@FSHO2@엔터티 개체의 <see cref="T:System.Collections.IList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-162">An <see cref="T:System.Collections.IList" /> of entity objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fd7b-163">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="3fd7b-163">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3fd7b-164"><xref:System.Data.Objects.ObjectQuery%601> 인스턴스가 <xref:System.ComponentModel.IListSource> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-164">It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 <span data-ttu-id="3fd7b-165">이 메서드는 쿼리 결과에 대한 데이터 바인딩을 활성화합니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-165">This method enables data binding to the result of the query.</span></span> <span data-ttu-id="3fd7b-166">@FSHO2@이 메서드는 컬렉션에 바인딩된 컨트롤에 의해 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-166">It is called by the control bound to the collection.</span></span> <span data-ttu-id="3fd7b-167">자세한 내용은 [컨트롤에 개체 바인딩](https://msdn.microsoft.com/library/2fd34855-929b-4303-a91e-4bb69d958f2b)합니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-167">For more information, see [Binding Objects to Controls](https://msdn.microsoft.com/library/2fd34855-929b-4303-a91e-4bb69d958f2b).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Linq.IQueryable.ElementType">
      <MemberSignature Language="C#" Value="Type System.Linq.IQueryable.ElementType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type System.Linq.IQueryable.ElementType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.System#Linq#IQueryable#ElementType" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ElementType As Type Implements IQueryable.ElementType" />
      <MemberSignature Language="C++ CLI" Value="property Type ^ System::Linq::IQueryable::ElementType { Type ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Linq.IQueryable.ElementType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fd7b-168">이 쿼리 인스턴스에 대한 결과 요소 형식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-168">Gets the result element type for this query instance.</span></span></summary>
        <value><span data-ttu-id="3fd7b-169">이 쿼리 인스턴스에 대한 결과 요소 형식인 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-169">A <see cref="T:System.Type" /> that is the result element type for this query instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fd7b-170">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="3fd7b-170">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3fd7b-171"><xref:System.Data.Objects.ObjectQuery%601> 인스턴스가 <xref:System.ComponentModel.IListSource> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-171">It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Linq.IQueryable.Expression">
      <MemberSignature Language="C#" Value="System.Linq.Expressions.Expression System.Linq.IQueryable.Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.Expression System.Linq.IQueryable.Expression" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Expression" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Expression As Expression Implements IQueryable.Expression" />
      <MemberSignature Language="C++ CLI" Value="property System::Linq::Expressions::Expression ^ System::Linq::IQueryable::Expression { System::Linq::Expressions::Expression ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Linq.IQueryable.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fd7b-172">이 쿼리를 설명하는 식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-172">Gets the expression describing this query.</span></span></summary>
        <value><span data-ttu-id="3fd7b-173">이 쿼리를 설명하는 LINQ <see cref="T:System.Linq.Expressions.Expression" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-173">The LINQ <see cref="T:System.Linq.Expressions.Expression" /> that describes this query.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fd7b-174">LINQ 작성기 패턴을 사용하여 쿼리를 빌드했으면 전체 LINQ 식 트리가 반환되고, 그렇지 않으면 이 쿼리를 래핑하는 상수 식이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-174">For queries built by using LINQ builder patterns, this returns a full LINQ expression tree; otherwise, it returns a constant expression that wraps this query.</span></span> <span data-ttu-id="3fd7b-175">기본 식은 캐시되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-175">Note that the default expression is not cached.</span></span> <span data-ttu-id="3fd7b-176">따라서 프레임워크에서 LINQ 쿼리와 Entity SQL 쿼리를 구별할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-176">This allows the framework to differentiate between LINQ and Entity SQL queries.</span></span>  
  
 <span data-ttu-id="3fd7b-177">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="3fd7b-177">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3fd7b-178"><xref:System.Data.Objects.ObjectQuery%601> 인스턴스가 <xref:System.ComponentModel.IListSource> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-178">It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Linq.IQueryable.Provider">
      <MemberSignature Language="C#" Value="System.Linq.IQueryProvider System.Linq.IQueryable.Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.IQueryProvider System.Linq.IQueryable.Provider" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Provider" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Provider As IQueryProvider Implements IQueryable.Provider" />
      <MemberSignature Language="C++ CLI" Value="property System::Linq::IQueryProvider ^ System::Linq::IQueryable::Provider { System::Linq::IQueryProvider ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Linq.IQueryable.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fd7b-179">이 쿼리 인스턴스와 관련된 LINQ <see cref="T:System.Linq.IQueryProvider" />를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-179">Gets the LINQ <see cref="T:System.Linq.IQueryProvider" /> associated with this query instance.</span></span></summary>
        <value><span data-ttu-id="3fd7b-180">이 쿼리 인스턴스와 관련된 <see cref="T:System.Linq.IQueryProvider" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-180">The <see cref="T:System.Linq.IQueryProvider" /> associated with this query instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fd7b-181">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="3fd7b-181">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3fd7b-182"><xref:System.Data.Objects.ObjectQuery%601> 인스턴스가 <xref:System.ComponentModel.IListSource> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-182">It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTraceString">
      <MemberSignature Language="C#" Value="public string ToTraceString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToTraceString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.ToTraceString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToTraceString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToTraceString();" />
      <MemberSignature Language="F#" Value="member this.ToTraceString : unit -&gt; string" Usage="objectQuery.ToTraceString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3fd7b-183">데이터 원본에 대해 실행할 명령을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-183">Returns the commands to execute against the data source.</span></span></summary>
        <returns><span data-ttu-id="3fd7b-184">쿼리가 데이터 원본에 대해 실행하는 명령을 나타내는 <see langword="string" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-184">A <see langword="string" /> that represents the commands that the query executes against the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3fd7b-185">이 항목의 예제는 기준으로 합니다 [AdventureWorks Sales 모델](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.</span><span class="sxs-lookup"><span data-stu-id="3fd7b-185">The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_ToTraceString](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_totracestring)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_ToTraceString](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_totracestring)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="3fd7b-186">데이터를 개체로 쿼리 및 결과 (Entity Framework) 셰이핑</span><span class="sxs-lookup"><span data-stu-id="3fd7b-186">Querying Data as Objects and Shaping Results (Entity Framework)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>