<Type Name="ObjectParameterCollection" FullName="System.Data.Objects.ObjectParameterCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="76b9607d5132e5740d5761d1ea2d7b807c4771e2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ObjectParameterCollection : System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;, System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ObjectParameterCollection extends System.Object implements class System.Collections.Generic.ICollection`1&lt;class System.Data.Objects.ObjectParameter&gt;, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Objects.ObjectParameter&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectParameterCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ObjectParameterCollection&#xA;Implements ICollection(Of ObjectParameter), IEnumerable(Of ObjectParameter)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectParameterCollection sealed : System::Collections::Generic::ICollection&lt;System::Data::Objects::ObjectParameter ^&gt;, System::Collections::Generic::IEnumerable&lt;System::Data::Objects::ObjectParameter ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="bd610-101">쿼리 매개 변수를 <see cref="T:System.Data.Objects.ObjectParameter" />에 정의된 <see cref="T:System.Data.Objects.ObjectQuery`1" /> 개체로 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bd610-101">Represents the query parameters as <see cref="T:System.Data.Objects.ObjectParameter" /> objects that are defined in an <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd610-102">쿼리 매개 변수를 <xref:System.Data.Objects.ObjectParameter>에 정의된 <xref:System.Data.Objects.ObjectQuery%601> 개체로 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="bd610-102">Represents the query parameters as <xref:System.Data.Objects.ObjectParameter> objects defined in an <xref:System.Data.Objects.ObjectQuery%601>.</span></span>  
  
 <span data-ttu-id="bd610-103">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bd610-103">This class cannot be inherited.</span></span>  
  
 <span data-ttu-id="bd610-104">쿼리 작성기 메서드에 전달되는 매개 변수는 시퀀스에서 <xref:System.Data.Objects.ObjectQuery%601>의 후속 인스턴스에 의해 집계되며,</span><span class="sxs-lookup"><span data-stu-id="bd610-104">The parameters that are passed to query builder methods are aggregated by successive instances of an <xref:System.Data.Objects.ObjectQuery%601> in the sequence.</span></span> <span data-ttu-id="bd610-105"><xref:System.Data.Objects.ObjectQuery.Parameters%2A>을 반환하는 <xref:System.Data.Objects.ObjectParameterCollection> 속성을 사용하여 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bd610-105">They can be accessed by using the <xref:System.Data.Objects.ObjectQuery.Parameters%2A> property, which returns the <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="bd610-106">매개 변수를 추가한 다음 쿼리를 컴파일하거나 실행하지 않았으면 컬렉션에서 매개 변수를 제거할 수도 있고 컬렉션을 지울 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bd610-106">After parameters have been added, they can be removed from the collection and the collection can be cleared, as long as the query has not been compiled or executed.</span></span> <span data-ttu-id="bd610-107">매개 변수 이름은 변경할 수 없지만 값은 언제든지 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bd610-107">Parameter names cannot be changed, but values can be changed at any time.</span></span>  
  
 <span data-ttu-id="bd610-108">매개 변수는 <xref:System.Data.Objects.ObjectParameterCollection>에서 고유해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bd610-108">Parameters must be unique in the <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="bd610-109">@FSHO2@컬렉션에 같은 이름의 매개 변수가 두 개 있을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bd610-109">There cannot be two parameters in the collection with the same name.</span></span>  
  
 <span data-ttu-id="bd610-110"><xref:System.Data.Objects.ObjectQuery%601.Union%2A>, <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A>, <xref:System.Data.Objects.ObjectQuery%601.Intersect%2A>, <xref:System.Data.Objects.ObjectQuery%601.Except%2A> 등의 구성 메서드를 사용할 때 매개 변수가 병합됩니다.</span><span class="sxs-lookup"><span data-stu-id="bd610-110">When using composition methods, such as <xref:System.Data.Objects.ObjectQuery%601.Union%2A>, <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A>, <xref:System.Data.Objects.ObjectQuery%601.Intersect%2A> and <xref:System.Data.Objects.ObjectQuery%601.Except%2A>, the parameters are merged.</span></span> <span data-ttu-id="bd610-111">매개 변수 집합이 호환되지 않거나 완전하지 않으면 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="bd610-111">An exception is thrown when the sets of parameters are incompatible or incomplete.</span></span> <span data-ttu-id="bd610-112">자세한 내용은 참조 [쿼리 작성기 메서드가](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0)합니다.</span><span class="sxs-lookup"><span data-stu-id="bd610-112">For more information, see [Query Builder Methods](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bd610-113">이 항목의 예제를 기반는 [AdventureWorks Sales 모델](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.</span><span class="sxs-lookup"><span data-stu-id="bd610-113">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="bd610-114">예제에서는 새 매개 변수를 컬렉션에 추가하고 컬렉션에 있는 매개 변수의 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="bd610-114">The example adds new parameters to the collection and gets the count of the parameters in the collection.</span></span> <span data-ttu-id="bd610-115">@FSHO2@그런 다음 <xref:System.Data.Objects.ObjectParameterCollection>을 반복하여 컬렉션에 있는 각 매개 변수의 이름, 형식 및 값을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="bd610-115">Then it iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, type, and value of each parameter in the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_count_add_indexer)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_count_add_indexer)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Data.Objects.ObjectParameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Data.Objects.ObjectParameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.Add(System.Data.Objects.ObjectParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (parameter As ObjectParameter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Data::Objects::ObjectParameter ^ parameter);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Objects.ObjectParameter" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="bd610-116">컬렉션에 추가할 매개 변수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd610-116">The parameter to add to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd610-117">지정된 <see cref="T:System.Data.Objects.ObjectParameter" />를 컬렉션에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd610-117">Adds the specified <see cref="T:System.Data.Objects.ObjectParameter" /> to the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd610-118">매개 변수를 추가한 다음 쿼리를 컴파일하거나 실행하지 않았으면 컬렉션에서 매개 변수를 제거할 수도 있고 컬렉션을 지울 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bd610-118">After parameters have been added, they can be removed from the collection and the collection can be cleared, as long as the query has not been compiled or executed.</span></span> <span data-ttu-id="bd610-119">매개 변수 이름은 변경할 수 없지만 값은 언제든지 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bd610-119">Parameter names cannot be changed, but values can be changed at any time.</span></span>  
  
 <span data-ttu-id="bd610-120">매개 변수는 <xref:System.Data.Objects.ObjectParameterCollection>에서 고유해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bd610-120">Parameters must be unique in the <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="bd610-121">컬렉션에 같은 이름의 매개 변수가 두 개 있을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bd610-121">There cannot be two parameters in the collection with the same name.</span></span> <span data-ttu-id="bd610-122">자세한 내용은 참조 [쿼리 작성기 메서드가](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0)합니다.</span><span class="sxs-lookup"><span data-stu-id="bd610-122">For more information, see [Query Builder Methods](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bd610-123">이 항목의 예제를 기반는 [AdventureWorks Sales 모델](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.</span><span class="sxs-lookup"><span data-stu-id="bd610-123">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="bd610-124">@FSHO2@예제에서는 컬렉션에 새 매개 변수를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="bd610-124">The example adds new parameters to the collection.</span></span> <span data-ttu-id="bd610-125">@FSHO2@그런 다음 <xref:System.Data.Objects.ObjectParameterCollection>을 반복하여 컬렉션에 있는 각 매개 변수의 이름, 형식 및 값을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="bd610-125">It iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, type, and value of each parameter in the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_count_add_indexer)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_count_add_indexer)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bd610-126">
            <paramref name="parameter" /> 인수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd610-126">The <paramref name="parameter" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bd610-127">
            <paramref name="parameter" /> 인수가 컬렉션에 이미 있는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd610-127">The <paramref name="parameter" /> argument already exists in the collection.</span>
          </span>
          <span data-ttu-id="bd610-128">이 동작은 중복 항목을 허용하는 대다수 컬렉션의 동작과 다릅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd610-128">This behavior differs from that of most collections that allow duplicate entries.</span>
          </span>
          <span data-ttu-id="bd610-129">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd610-129">-or-</span>
          </span>
          <span data-ttu-id="bd610-130">
            <paramref name="parameter" /> 인수와 이름이 동일한 다른 매개 변수가 컬렉션이 이미 있는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd610-130">Another parameter with the same name as the <paramref name="parameter" /> argument already exists in the collection.</span>
          </span>
          <span data-ttu-id="bd610-131">조회할 때는 대/소문자가 구분되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd610-131">Note that the lookup is case-insensitive.</span>
          </span>
          <span data-ttu-id="bd610-132">이 동작은 대다수 컬렉션의 동작과 다르며 <see cref="T:System.Collections.Generic.Dictionary" />의 동작과 비슷합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd610-132">This behavior differs from that of most collections, and is more like that of a <see cref="T:System.Collections.Generic.Dictionary" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bd610-133">
            <paramref name="parameter" />의 형식이 유효하지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd610-133">The type of the <paramref name="parameter" /> is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bd610-134">컬렉션에서 <see cref="T:System.Data.Objects.ObjectParameter" /> 인스턴스를 모두 삭제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd610-134">Deletes all <see cref="T:System.Data.Objects.ObjectParameter" /> instances from the collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bd610-135">@FSHO2@지정한 <see cref="T:System.Data.Objects.ObjectParameter" />가 컬렉션에 있는지 참조를 통해 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd610-135">Checks for the existence of a specified <see cref="T:System.Data.Objects.ObjectParameter" /> in the collection by reference.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Data.Objects.ObjectParameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Data.Objects.ObjectParameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.Contains(System.Data.Objects.ObjectParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (parameter As ObjectParameter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Data::Objects::ObjectParameter ^ parameter);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Objects.ObjectParameter" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="bd610-136">컬렉션에서 찾을 <see cref="T:System.Data.Objects.ObjectParameter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd610-136">The <see cref="T:System.Data.Objects.ObjectParameter" /> to find in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd610-137">@FSHO2@지정한 <see cref="T:System.Data.Objects.ObjectParameter" />가 컬렉션에 있는지 참조를 통해 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd610-137">Checks for the existence of a specified <see cref="T:System.Data.Objects.ObjectParameter" /> in the collection by reference.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd610-138">매개 변수 개체가 컬렉션에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd610-138">Returns <see langword="true" /> if the parameter object was found in the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd610-139">이것은 참조 기반 확인입니다.</span><span class="sxs-lookup"><span data-stu-id="bd610-139">This is a reference-based check.</span></span> <span data-ttu-id="bd610-140">즉, 하는 경우는 <xref:System.Data.Objects.ObjectParameter> 지정 되어 컬렉션에서 매개 변수 개체와 동일한 이름이 있으면이 메서드는만 반환 `true` 같은 개체인 경우.</span><span class="sxs-lookup"><span data-stu-id="bd610-140">That is, if an <xref:System.Data.Objects.ObjectParameter> is specified that contains the same name as a parameter object in the collection, this method will only return `true` if it is the same object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bd610-141">
            <paramref name="parameter" /> 인수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd610-141">The <paramref name="parameter" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="bd610-142">컬렉션에서 검색할 매개 변수의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd610-142">The name of the parameter to look for in the collection.</span>
          </span>
          <span data-ttu-id="bd610-143">@FSHO2@이 이름에는 [!INCLUDE[esql](~/includes/esql-md.md)] 문에 사용되는 "@" 매개 변수 표식이 포함될 수 없으며, 실제 이름만 포함될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd610-143">This name should not include the "@" parameter marker that is used in the [!INCLUDE[esql](~/includes/esql-md.md)] statements, only the actual name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd610-144">지정한 이름의 <see cref="T:System.Data.Objects.ObjectParameter" />가 컬렉션에 있는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd610-144">Determines whether an <see cref="T:System.Data.Objects.ObjectParameter" /> with the specified name is in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd610-145">지정된 이름의 매개 변수가 컬렉션에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd610-145">Returns <see langword="true" /> if a parameter with the specified name was found in the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bd610-146">이 항목의 예제를 기반는 [AdventureWorks Sales 모델](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.</span><span class="sxs-lookup"><span data-stu-id="bd610-146">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="bd610-147">예제에서는 <xref:System.Data.Objects.ObjectParameterCollection.Contains%2A> 메서드를 사용하여 지정한 매개 변수가 컬렉션에 있는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="bd610-147">The example uses the <xref:System.Data.Objects.ObjectParameterCollection.Contains%2A> method to determine whether the specified parameter is in the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_StringArg](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_stringarg)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_StringArg](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_stringarg)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bd610-148">
            <paramref name="name" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd610-148">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Data.Objects.ObjectParameter[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Data.Objects.ObjectParameter[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.CopyTo(System.Data.Objects.ObjectParameter[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As ObjectParameter(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Data.Objects.ObjectParameter[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="bd610-149">매개 변수를 복사할 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd610-149">The array into which to copy the parameters.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bd610-150">매개 변수 복사를 시작할 배열의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd610-150">The index in the array at which to start copying the parameters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd610-151">지정된 인덱스의 개체부터 시작하여 컬렉션의 매개 변수를 제공된 배열에 복사할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd610-151">Allows the parameters in the collection to be copied into a supplied array, starting with the object at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bd610-152">이 항목의 예제를 기반는 [AdventureWorks Sales 모델](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.</span><span class="sxs-lookup"><span data-stu-id="bd610-152">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="bd610-153">예제에서는 매개 변수를 지정된 배열에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="bd610-153">The example copies the parameters into the specified array.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_CopyTo](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_copyto)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_CopyTo](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_copyto)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameterCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd610-154">현재 컬렉션에 있는 매개 변수의 수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd610-154">Gets the number of parameters currently in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd610-155">현재 컬렉션에 있는 <see cref="T:System.Data.Objects.ObjectParameter" /> 개체의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd610-155">The number of <see cref="T:System.Data.Objects.ObjectParameter" /> objects that are currently in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bd610-156">이 항목의 예제를 기반는 [AdventureWorks Sales 모델](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.</span><span class="sxs-lookup"><span data-stu-id="bd610-156">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="bd610-157">예제에서는 새 매개 변수를 컬렉션에 추가하고 컬렉션에 있는 매개 변수의 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="bd610-157">The example adds new parameters to the collection and gets the count of the parameters in the collection.</span></span> <span data-ttu-id="bd610-158">@FSHO2@그런 다음 <xref:System.Data.Objects.ObjectParameterCollection>을 반복하여 컬렉션에 있는 각 매개 변수의 이름, 형식 및 값을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="bd610-158">Then it iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, type, and value of each parameter in the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_count_add_indexer)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_count_add_indexer)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectParameter this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Objects.ObjectParameter Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameterCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(name As String) As ObjectParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Objects::ObjectParameter ^ default[System::String ^] { System::Data::Objects::ObjectParameter ^ get(System::String ^ name); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="bd610-159">찾을 매개 변수의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd610-159">The name of the parameter to find.</span>
          </span>
          <span data-ttu-id="bd610-160">@FSHO2@이 이름에는 [!INCLUDE[esql](~/includes/esql-md.md)] 문에 사용되는 "@" 매개 변수 표식이 포함될 수 없으며, 실제 이름만 포함될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd610-160">This name should not include the "@" parameter marker that is used in the [!INCLUDE[esql](~/includes/esql-md.md)] statements, only the actual name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd610-161">호출자가 이름으로 매개 변수를 검색할 수 있는 인덱서를 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd610-161">Provides an indexer that allows callers to retrieve parameters by name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd610-162">
            <see cref="T:System.Data.Objects.ObjectParameter" /> 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd610-162">The <see cref="T:System.Data.Objects.ObjectParameter" /> instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bd610-163">컬렉션에서 지정된 이름의 매개 변수를 찾을 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd610-163">No parameter with the specified name is found in the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Data.Objects.ObjectParameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class System.Data.Objects.ObjectParameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.Remove(System.Data.Objects.ObjectParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (parameter As ObjectParameter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::Data::Objects::ObjectParameter ^ parameter);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Objects.ObjectParameter" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="bd610-164">컬렉션에서 제거할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd610-164">An object to remove from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bd610-165">
            <see cref="T:System.Data.Objects.ObjectParameter" /> 인스턴스가 컬렉션에 있으면 참조를 통해 컬렉션에서 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd610-165">Removes an instance of an <see cref="T:System.Data.Objects.ObjectParameter" /> from the collection by reference if it exists in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd610-166">매개 변수 개체가 컬렉션에 있으며 해당 개체가 제거되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd610-166">Returns <see langword="true" /> if the parameter object was found and removed from the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd610-167">이것은 참조 기반 비교입니다.</span><span class="sxs-lookup"><span data-stu-id="bd610-167">This is a reference-based comparison.</span></span> <span data-ttu-id="bd610-168">즉, 컬렉션에 있는 매개 변수 개체와 이름이 같은 쿼리 매개 변수 개체가 지정되어 있으면 같은 개체인 경우에만 컬렉션의 매개 변수가 제거됩니다.</span><span class="sxs-lookup"><span data-stu-id="bd610-168">That is, if a query parameter object is specified that contains the same name as a parameter object in the collection, the parameter in the collection will only be removed if it is the same object.</span></span> <span data-ttu-id="bd610-169">이름을 통해 개체를 제거하려면 우선 인덱서를 사용하여 매개 변수 인스턴스를 검색한 다음 이 메서드를 사용하여 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="bd610-169">To remove an object by name, first use the indexer to retrieve the parameter instance, then remove it by using this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bd610-170">이 항목의 예제를 기반는 [AdventureWorks Sales 모델](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.</span><span class="sxs-lookup"><span data-stu-id="bd610-170">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="bd610-171">예제에서는 컬렉션에 두 매개 변수를 추가한 다음 매개 변수를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="bd610-171">The example adds two parameters to the collection and then removes the parameters.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_Remove](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_remove)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_Remove](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_remove)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bd610-172">
            <paramref name="parameter" /> 인수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd610-172">The <paramref name="parameter" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameterCollection.System#Collections#Generic#ICollection&lt;System#Data#Objects#ObjectParameter&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of ObjectParameter).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bd610-173">컬렉션이 읽기 전용인지 또는 수정할 수 있는지를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd610-173">Gets a value that indicates whether the collection is read-only or can be modified.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bd610-174">컬렉션이 읽기 전용이면 <see langword="true" />이고 컬렉션을 수정할 수 있으면 <see langword="false" />인 부울 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd610-174">A Boolean value that is <see langword="true" /> if the collection is read-only and <see langword="false" /> of the collection can be modified.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd610-175">이 컬렉션은 항상 읽고 쓸 수 있으며 매개 변수를 추가, 제거 및 수정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bd610-175">This collection is always read/write; parameters can be added, removed, and modified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Data.Objects.ObjectParameter&gt; IEnumerable&lt;ObjectParameter&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Data.Objects.ObjectParameter&gt; System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.System#Collections#Generic#IEnumerable&lt;System#Data#Objects#ObjectParameter&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of ObjectParameter) Implements IEnumerable(Of ObjectParameter).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Data::Objects::ObjectParameter ^&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Data::Objects::ObjectParameter ^&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Data.Objects.ObjectParameter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bd610-176">컬렉션에서 형식화된 열거자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd610-176">Returns a typed enumerator over the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd610-177">
            <see cref="T:System.Collections.Generic.IEnumerator`1" /> 형식의 <see cref="T:System.Data.Objects.ObjectParameter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd610-177">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> of type <see cref="T:System.Data.Objects.ObjectParameter" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd610-178"><xref:System.Collections.Generic.IEnumerator%601> 인스턴스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bd610-178">Returns an <xref:System.Collections.Generic.IEnumerator%601> instance.</span></span> <span data-ttu-id="bd610-179">이렇게 하면 컬렉션 전체를 반복할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bd610-179">This allows the collection to be iterated through and traversed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bd610-180">컬렉션에서 형식화되지 않은 열거자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd610-180">Returns an untyped enumerator over the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bd610-181">
            <see cref="T:System.Collections.IEnumerator" /> 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bd610-181">An <see cref="T:System.Collections.IEnumerator" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd610-182">컬렉션에서 형식화되지 않은 열거자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bd610-182">Returns an untyped enumerator over the collection.</span></span> <span data-ttu-id="bd610-183">이렇게 하면 컬렉션 전체를 반복할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bd610-183">This allows the collection to be iterated through and traversed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>