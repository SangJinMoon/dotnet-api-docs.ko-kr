<Type Name="ObjectContextOptions" FullName="System.Data.Objects.ObjectContextOptions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5bf144f0c62d969a330ec7275877444b313b4707" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ObjectContextOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ObjectContextOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectContextOptions" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ObjectContextOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectContextOptions sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="75956-101">
        <see cref="T:System.Data.Objects.ObjectContext" />의 동작에 영향을 미치는 옵션을 정의합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="75956-101">Defines options that affect the behavior of the <see cref="T:System.Data.Objects.ObjectContext" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75956-102">이곳의 콘텐츠는 업데이트되지 않습니다. 여기에 자료를 추가하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="75956-102">No content here will be updated; please do not add material here.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="LazyLoadingEnabled">
      <MemberSignature Language="C#" Value="public bool LazyLoadingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LazyLoadingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectContextOptions.LazyLoadingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property LazyLoadingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LazyLoadingEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75956-103">탐색 속성을 액세스할 때 관련 개체가 자동으로 로드되는지 여부를 결정하는 부울 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75956-103">Gets or sets a Boolean value that determines whether related objects are loaded automatically when a navigation property is accessed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="75956-104">지연된 로드(lazy loading)를 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75956-104">
              <see langword="true" /> if lazy loading is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProxyCreationEnabled">
      <MemberSignature Language="C#" Value="public bool ProxyCreationEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProxyCreationEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectContextOptions.ProxyCreationEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ProxyCreationEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProxyCreationEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75956-105">지속성을 무시하는 사용자 지정 데이터 클래스에 대해 프록시 인스턴스를 만들지 여부를 결정하는 부울 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75956-105">Gets or sets a Boolean value that determines whether proxy instances are created for custom data classes that are persistence ignorant.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="75956-106">프록시가 만들어지면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75956-106">
              <see langword="true" /> if proxies are created; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="75956-107">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75956-107">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseConsistentNullReferenceBehavior">
      <MemberSignature Language="C#" Value="public bool UseConsistentNullReferenceBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseConsistentNullReferenceBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectContextOptions.UseConsistentNullReferenceBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property UseConsistentNullReferenceBehavior As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseConsistentNullReferenceBehavior { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75956-108">일관된 NullReference 동작을 사용할지 여부를 결정하는 부울 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75956-108">Gets or sets a Boolean value that determines whether to use the consistent NullReference behavior.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="75956-109">일관적 NullReference 동작을 사용해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75956-109">
              <see langword="true" /> if the consistent NullReference behavior should be used; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75956-110">이 플래그가 설정 된 경우 `false`의 Value 속성을 설정 하는 다음의 <xref:System.Data.Objects.DataClasses.EntityReference%601> null로 외래 키 관계에 대 한 null 이미 있으면 아무런 효과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="75956-110">If this flag is set to `false`, then setting the Value property of the <xref:System.Data.Objects.DataClasses.EntityReference%601> for an FK relationship to null when it is already null will have no effect.</span></span> <span data-ttu-id="75956-111">이 플래그로 설정 되 면 `true`, null이 되어 수에 외래 키와 값이 현재 null 하는 경우에 삭제에 대 한 관계 항상 인해 값을 null로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="75956-111">When this flag is set to `true`, then setting the value to null will always cause the FK to be nulled and the relationship to be deleted even if the value is currently null.</span></span> <span data-ttu-id="75956-112">기본값은 `false` ObjectContext를 사용 하는 경우 및 `true` DbContext를 사용 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="75956-112">The default value is `false` when using ObjectContext and `true` when using DbContext.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseCSharpNullComparisonBehavior">
      <MemberSignature Language="C#" Value="public bool UseCSharpNullComparisonBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCSharpNullComparisonBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectContextOptions.UseCSharpNullComparisonBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCSharpNullComparisonBehavior As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCSharpNullComparisonBehavior { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75956-113">C# NullComparison 동작을 사용할지 여부를 결정하는 부울 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75956-113">Gets or sets a Boolean value that determines whether to use the C# NullComparison behavior.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="75956-114">C# NullComparison 동작을 사용해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75956-114">
              <see langword="true" /> if the C# NullComparison behavior should be used; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseLegacyPreserveChangesBehavior">
      <MemberSignature Language="C#" Value="public bool UseLegacyPreserveChangesBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseLegacyPreserveChangesBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectContextOptions.UseLegacyPreserveChangesBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property UseLegacyPreserveChangesBehavior As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseLegacyPreserveChangesBehavior { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75956-115">레거시 PreserveChanges 동작을 사용할지 여부를 결정하는 부울 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75956-115">Gets or sets a Boolean value that determines whether to use the legacy PreserveChanges behavior.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="75956-116">레거시 PreserveChanges 동작을 사용해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75956-116">
              <see langword="true" /> if the legacy PreserveChanges behavior should be used; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>