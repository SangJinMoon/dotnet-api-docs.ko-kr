<Type Name="MergeOption" FullName="System.Data.Objects.MergeOption">
  <TypeSignature Language="C#" Value="public enum MergeOption" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed MergeOption extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.MergeOption" />
  <TypeSignature Language="VB.NET" Value="Public Enum MergeOption" />
  <TypeSignature Language="C++ CLI" Value="public enum class MergeOption" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="7734d-101">개체 컨텍스트에 로드 중인 개체를 개체 컨텍스트에 이미 있는 개체와 병합하는 방법을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="7734d-101">Specifies how objects being loaded into the object context are merged with objects already in the object context.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7734d-102">[!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)]는 캐시에서 특정 엔터티 키가 있는 개체의 단일 인스턴스만 유지 관리합니다.</span><span class="sxs-lookup"><span data-stu-id="7734d-102">The [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] only maintains a single instance of an object with a specific entity key in the cache.</span></span> <span data-ttu-id="7734d-103"><xref:System.Data.EntityKey> 개체는 개체의 ID를 나타내는 변경할 수 없는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="7734d-103">The <xref:System.Data.EntityKey> objects are immutable objects that that represent object's identity.</span></span> <span data-ttu-id="7734d-104">엔터티 키는 개체 컨텍스트에서 ID 확인을 수행하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="7734d-104">Entity keys are used to perform identity resolution in the object context.</span></span> <span data-ttu-id="7734d-105">자세한 내용은 참조 [엔터티 키 작업](http://msdn.microsoft.com/library/fe3f4206-d277-43a1-a72f-4e86fdf12b9f)합니다.</span><span class="sxs-lookup"><span data-stu-id="7734d-105">For more information, see [Working with Entity Keys](http://msdn.microsoft.com/library/fe3f4206-d277-43a1-a72f-4e86fdf12b9f).</span></span> <span data-ttu-id="7734d-106">동일한 id 가진 엔터티가 이미 추적 중인 경우 데이터 원본 및 상태 관리자에서 이미 데이터에서 가져온 데이터에 따라 병합 됩니다는 <xref:System.Data.Objects.MergeOption> 쿼리 합니다.</span><span class="sxs-lookup"><span data-stu-id="7734d-106">If an entity with the same identity is already being tracked, the data coming from the data source and the data already in the state manager are merged according to the <xref:System.Data.Objects.MergeOption> of the query.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AppendOnly">
      <MemberSignature Language="C#" Value="AppendOnly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Objects.MergeOption AppendOnly = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Objects.MergeOption.AppendOnly" />
      <MemberSignature Language="VB.NET" Value="AppendOnly" />
      <MemberSignature Language="C++ CLI" Value="AppendOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="7734d-107">개체 컨텍스트에 없는 개체가 컨텍스트에 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="7734d-107">Objects that do not exist in the object context are attached to the context.</span></span> <span data-ttu-id="7734d-108">개체가 이미 컨텍스트에 있는 경우 항목의 개체 속성에 대한 현재 값과 원래 값을 데이터 소스 값으로 덮어쓰지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="7734d-108">If an object is already in the context, the current and original values of object's properties in the entry are not overwritten with data source values.</span></span> <span data-ttu-id="7734d-109">개체의 항목 상태와 항목에 있는 개체의 속성 상태는 변경되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="7734d-109">The state of the object's entry and state of properties of the object in the entry do not change.</span></span> <span data-ttu-id="7734d-110"><see cref="F:System.Data.Objects.MergeOption.AppendOnly" />가 기본 병합 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="7734d-110"><see cref="F:System.Data.Objects.MergeOption.AppendOnly" /> is the default merge option.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="NoTracking">
      <MemberSignature Language="C#" Value="NoTracking" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Objects.MergeOption NoTracking = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Objects.MergeOption.NoTracking" />
      <MemberSignature Language="VB.NET" Value="NoTracking" />
      <MemberSignature Language="C++ CLI" Value="NoTracking" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="7734d-111">개체가 <see cref="F:System.Data.EntityState.Detached" /> 상태로 유지 관리되며 <see cref="T:System.Data.Objects.ObjectStateManager" />에서 추적되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="7734d-111">Objects are maintained in a <see cref="F:System.Data.EntityState.Detached" /> state and are not tracked in the <see cref="T:System.Data.Objects.ObjectStateManager" />.</span></span> <span data-ttu-id="7734d-112">그러나 [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)]에서 생성한 엔터티 및 프록시가 있는 POCO 엔터티는 개체 컨텍스트에 대한 참조를 유지하여 관련 개체를 쉽게 로드할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="7734d-112">However, [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)]-generated entities and POCO entities with proxies maintain a reference to the object context to facilitate loading of related objects.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="OverwriteChanges">
      <MemberSignature Language="C#" Value="OverwriteChanges" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Objects.MergeOption OverwriteChanges = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Objects.MergeOption.OverwriteChanges" />
      <MemberSignature Language="VB.NET" Value="OverwriteChanges" />
      <MemberSignature Language="C++ CLI" Value="OverwriteChanges" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="7734d-113">개체 컨텍스트에 없는 개체가 컨텍스트에 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="7734d-113">Objects that do not exist in the object context are attached to the context.</span></span> <span data-ttu-id="7734d-114">개체가 이미 컨텍스트에 있는 경우 항목의 개체 속성에 대한 현재 값과 원래 값을 데이터 소스 값으로 덮어씁니다.</span><span class="sxs-lookup"><span data-stu-id="7734d-114">If an object is already in the context, the current and original values of object's properties in the entry are overwritten with data source values.</span></span> <span data-ttu-id="7734d-115">개체 항목의 상태가 <see cref="F:System.Data.EntityState.Unchanged" />로 설정되고 속성이 수정되지 않은 것으로 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="7734d-115">The state of the object's entry is set to <see cref="F:System.Data.EntityState.Unchanged" />, no properties are marked as modified.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="PreserveChanges">
      <MemberSignature Language="C#" Value="PreserveChanges" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Objects.MergeOption PreserveChanges = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Objects.MergeOption.PreserveChanges" />
      <MemberSignature Language="VB.NET" Value="PreserveChanges" />
      <MemberSignature Language="C++ CLI" Value="PreserveChanges" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="7734d-116">개체 컨텍스트에 없는 개체가 컨텍스트에 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="7734d-116">Objects that do not exist in the object context are attached to the context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7734d-117">엔터티 상태가 <xref:System.Data.EntityState.Unchanged>이면 항목의 현재 값과 원래 값이 데이터 소스 값으로 덮어쓰여집니다.</span><span class="sxs-lookup"><span data-stu-id="7734d-117">If the state of the entity is <xref:System.Data.EntityState.Unchanged>, the current and original values in the entry are overwritten with data source values.</span></span> <span data-ttu-id="7734d-118">엔터티 상태가 <xref:System.Data.EntityState.Unchanged>로 유지되고 속성이 수정된 것으로 표시되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="7734d-118">The state of the entity remains <xref:System.Data.EntityState.Unchanged> and no properties are marked as modified.</span></span>  
  
 <span data-ttu-id="7734d-119">엔터티 상태가 <xref:System.Data.EntityState.Modified>이면 수정된 속성의 현재 값이 데이터 소스 값으로 덮어쓰여지지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="7734d-119">If the state of the entity is <xref:System.Data.EntityState.Modified>, the current values of modified properties are not overwritten with data source values.</span></span> <span data-ttu-id="7734d-120">수정되지 않은 속성의 원래 값은 데이터 소스의 값으로 덮어쓰여집니다.</span><span class="sxs-lookup"><span data-stu-id="7734d-120">The original values of unmodified properties are overwritten with the values from the data source.</span></span>  
  
 <span data-ttu-id="7734d-121">에 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 버전 4는 [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] 수정 되지 않은 속성의 현재 값을 데이터 원본에서 반환 된 값과 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="7734d-121">In the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] version 4, the [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] compares the current values of unmodified properties with the values that were returned from the data source.</span></span> <span data-ttu-id="7734d-122">값이 동일하지 않으면 속성이 수정된 것으로 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="7734d-122">If the values are not the same, the property is marked as modified.</span></span>  
  
 <span data-ttu-id="7734d-123">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 버전 3.5 SP1에서 [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)]는 데이터 소스의 값이 다른 경우에도 속성을 수정된 것으로 표시하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="7734d-123">In the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] version 3.5 SP1, the [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] does not mark the property as modified, even if the value in the data source is different.</span></span>  
  
 <span data-ttu-id="7734d-124"><xref:System.Data.Objects.ObjectContext.SaveChanges%2A>를 호출하면 수정된 속성만 데이터 소스에 유지됩니다.</span><span class="sxs-lookup"><span data-stu-id="7734d-124">Only modified properties are persisted to the data source when you call <xref:System.Data.Objects.ObjectContext.SaveChanges%2A>.</span></span>  
  
 <span data-ttu-id="7734d-125">3.5 SP1 동작을 유지하려면 <xref:System.Data.Objects.ObjectContextOptions.UseLegacyPreserveChangesBehavior%2A>를 `true`로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="7734d-125">To preserve the 3.5 SP1 behavior, set <xref:System.Data.Objects.ObjectContextOptions.UseLegacyPreserveChangesBehavior%2A> to `true`.</span></span> <span data-ttu-id="7734d-126">로컬 컨텍스트에서 변경 내용을 유지 하는 동안 낙관적 동시성 예외를 확인할 PreserveChanges 옵션을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7734d-126">The PreserveChanges option can be used to resolve optimistic concurrency exceptions while preserving changes in the local context.</span></span> <span data-ttu-id="7734d-127">자세한 내용은 참조 [변경 내용을 저장 하 고 동시성 관리](http://msdn.microsoft.com/library/b8378601-4f26-4a05-a24a-f50aeb68610e)합니다.</span><span class="sxs-lookup"><span data-stu-id="7734d-127">For more information, see [Saving Changes and Managing Concurrency](http://msdn.microsoft.com/library/b8378601-4f26-4a05-a24a-f50aeb68610e).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>