<Type Name="ProxyDataContractResolver" FullName="System.Data.Objects.ProxyDataContractResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d2289860cd693694dbfbf189ef91cc94fb6d9942" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39952782" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ProxyDataContractResolver : System.Runtime.Serialization.DataContractResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProxyDataContractResolver extends System.Runtime.Serialization.DataContractResolver" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ProxyDataContractResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class ProxyDataContractResolver&#xA;Inherits DataContractResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProxyDataContractResolver : System::Runtime::Serialization::DataContractResolver" />
  <TypeSignature Language="F#" Value="type ProxyDataContractResolver = class&#xA;    inherit DataContractResolver" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.Serialization.DataContractResolver</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="709d8-101">이 클래스는 [지속성 무시](http://msdn.microsoft.com/library/5e0fb82a-b6d1-41a1-b37b-c12db61629d3) 데이터 클래스에 대해 생성된 프록시 형식을 지속성 무시 개체의 실제 형식으로 확인하도록 도와줍니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="709d8-101">This class helps resolve proxy types that were created for [persistence-ignorant](http://msdn.microsoft.com/library/5e0fb82a-b6d1-41a1-b37b-c12db61629d3) data classes to the actual types of persistence-ignorant objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="709d8-102">합니다 <xref:System.Data.Objects.ProxyDataContractResolver> 클래스와 함께 사용 되는 <xref:System.Runtime.Serialization.DataContractSerializer>합니다.</span><span class="sxs-lookup"><span data-stu-id="709d8-102">The <xref:System.Data.Objects.ProxyDataContractResolver> class is used with the <xref:System.Runtime.Serialization.DataContractSerializer>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProxyDataContractResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ProxyDataContractResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProxyDataContractResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="709d8-103">
            <see cref="T:System.Data.Objects.ProxyDataContractResolver" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="709d8-103">Initializes a new instance of the <see cref="T:System.Data.Objects.ProxyDataContractResolver" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveName">
      <MemberSignature Language="C#" Value="public override Type ResolveName (string typeName, string typeNamespace, Type declaredType, System.Runtime.Serialization.DataContractResolver knownTypeResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type ResolveName(string typeName, string typeNamespace, class System.Type declaredType, class System.Runtime.Serialization.DataContractResolver knownTypeResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ProxyDataContractResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveName (typeName As String, typeNamespace As String, declaredType As Type, knownTypeResolver As DataContractResolver) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ ResolveName(System::String ^ typeName, System::String ^ typeNamespace, Type ^ declaredType, System::Runtime::Serialization::DataContractResolver ^ knownTypeResolver);" />
      <MemberSignature Language="F#" Value="override this.ResolveName : string * string * Type * System.Runtime.Serialization.DataContractResolver -&gt; Type" Usage="proxyDataContractResolver.ResolveName (typeName, typeNamespace, declaredType, knownTypeResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="typeNamespace" Type="System.String" />
        <Parameter Name="declaredType" Type="System.Type" />
        <Parameter Name="knownTypeResolver" Type="System.Runtime.Serialization.DataContractResolver" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="709d8-104">매핑할 <see langword="xsi:type" /> 정보입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="709d8-104">The <see langword="xsi:type" /> information to map.</span>
          </span>
        </param>
        <param name="typeNamespace">
          <span data-ttu-id="709d8-105">
            <see langword="xsi:type" />의 네임스페이스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="709d8-105">The namespace of the <see langword="xsi:type" />.</span>
          </span>
        </param>
        <param name="declaredType">
          <span data-ttu-id="709d8-106">선언된 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="709d8-106">The declared type.</span>
          </span>
        </param>
        <param name="knownTypeResolver">
          <span data-ttu-id="709d8-107">
            <see cref="T:System.Data.Objects.ProxyDataContractResolver" />의 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="709d8-107">An instance of <see cref="T:System.Data.Objects.ProxyDataContractResolver" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="709d8-108">deserialization 중에 모든 <see langword="xsi:type" /> 정보를 [persistence-ignorant](http://msdn.microsoft.com/library/5e0fb82a-b6d1-41a1-b37b-c12db61629d3) 개체의 실제 형식으로 매핑합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="709d8-108">During deserialization, maps any <see langword="xsi:type" /> information to the actual type of the [persistence-ignorant](http://msdn.microsoft.com/library/5e0fb82a-b6d1-41a1-b37b-c12db61629d3) object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="709d8-109">
            <see langword="xsi:type" />이 매핑되는 형식을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="709d8-109">Returns the type that the <see langword="xsi:type" /> is mapped to.</span>
          </span>
          <span data-ttu-id="709d8-110">
            <see langword="xsi:type" />과 일치하는 알려진 형식이 없으면 <see langword="null" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="709d8-110">Returns <see langword="null" /> if no known type was found that matches the <see langword="xsi:type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="709d8-111">자세한 내용은 참조 하십시오: [POCO 엔터티 작업](http://msdn.microsoft.com/library/5e0fb82a-b6d1-41a1-b37b-c12db61629d3)합니다.</span><span class="sxs-lookup"><span data-stu-id="709d8-111">For more information, see: [Working with POCO Entities](http://msdn.microsoft.com/library/5e0fb82a-b6d1-41a1-b37b-c12db61629d3).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryResolveType">
      <MemberSignature Language="C#" Value="public override bool TryResolveType (Type dataContractType, Type declaredType, System.Runtime.Serialization.DataContractResolver knownTypeResolver, out System.Xml.XmlDictionaryString typeName, out System.Xml.XmlDictionaryString typeNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TryResolveType(class System.Type dataContractType, class System.Type declaredType, class System.Runtime.Serialization.DataContractResolver knownTypeResolver, [out] class System.Xml.XmlDictionaryString&amp; typeName, [out] class System.Xml.XmlDictionaryString&amp; typeNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ProxyDataContractResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TryResolveType (dataContractType As Type, declaredType As Type, knownTypeResolver As DataContractResolver, ByRef typeName As XmlDictionaryString, ByRef typeNamespace As XmlDictionaryString) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool TryResolveType(Type ^ dataContractType, Type ^ declaredType, System::Runtime::Serialization::DataContractResolver ^ knownTypeResolver, [Runtime::InteropServices::Out] System::Xml::XmlDictionaryString ^ % typeName, [Runtime::InteropServices::Out] System::Xml::XmlDictionaryString ^ % typeNamespace);" />
      <MemberSignature Language="F#" Value="override this.TryResolveType : Type * Type * System.Runtime.Serialization.DataContractResolver *  *  -&gt; bool" Usage="proxyDataContractResolver.TryResolveType (dataContractType, declaredType, knownTypeResolver, typeName, typeNamespace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataContractType" Type="System.Type" />
        <Parameter Name="declaredType" Type="System.Type" />
        <Parameter Name="knownTypeResolver" Type="System.Runtime.Serialization.DataContractResolver" />
        <Parameter Name="typeName" Type="System.Xml.XmlDictionaryString" RefType="out" />
        <Parameter Name="typeNamespace" Type="System.Xml.XmlDictionaryString" RefType="out" />
      </Parameters>
      <Docs>
        <param name="dataContractType">
          <span data-ttu-id="709d8-112">지속성 무시 개체의 실제 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="709d8-112">The actual type of the persistence-ignorant object.</span>
          </span>
        </param>
        <param name="declaredType">
          <span data-ttu-id="709d8-113">선언된 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="709d8-113">The declared type.</span>
          </span>
        </param>
        <param name="knownTypeResolver">
          <span data-ttu-id="709d8-114">
            <see cref="T:System.Data.Objects.ProxyDataContractResolver" />의 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="709d8-114">An instance of <see cref="T:System.Data.Objects.ProxyDataContractResolver" />.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="709d8-115">이 메서드가 반환될 때 <see langword="xsi:type" /> 선언 목록이 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="709d8-115">When this method returns, contains a list of <see langword="xsi:type" /> declarations.</span>
          </span>
        </param>
        <param name="typeNamespace">
          <span data-ttu-id="709d8-116">이 메서드가 반환될 때 사용된 네임스페이스 목록이 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="709d8-116">When this method returns, contains a list of namespaces used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="709d8-117">serialization 중에 실제 형식을 <see langword="xsi:type" /> 정보에 매핑합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="709d8-117">During serialization, maps actual types to <see langword="xsi:type" /> information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="709d8-118">형식이 확인되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="709d8-118">
              <see langword="true" /> if the type was resolved; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="709d8-119">자세한 내용은 참조 하십시오: [POCO 엔터티 작업](http://msdn.microsoft.com/library/5e0fb82a-b6d1-41a1-b37b-c12db61629d3)합니다.</span><span class="sxs-lookup"><span data-stu-id="709d8-119">For more information, see: [Working with POCO Entities](http://msdn.microsoft.com/library/5e0fb82a-b6d1-41a1-b37b-c12db61629d3).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>