<Type Name="AutomationInteropProvider" FullName="System.Windows.Automation.Provider.AutomationInteropProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="71f31a1351f3b2586204b04f19d9cc80e5af3e01" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class AutomationInteropProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AutomationInteropProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.AutomationInteropProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class AutomationInteropProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class AutomationInteropProvider abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b113d-101">UI 자동화 공급자와 UI 자동화 클라이언트 응용 프로그램 간의 통신을 지원합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b113d-101">Provides support for communication between UI Automation providers and UI Automation client applications.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AppendRuntimeId">
      <MemberSignature Language="C#" Value="public const int AppendRuntimeId = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 AppendRuntimeId = (3)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.Provider.AutomationInteropProvider.AppendRuntimeId" />
      <MemberSignature Language="VB.NET" Value="Public Const AppendRuntimeId As Integer  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: int AppendRuntimeId = 3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="b113d-102">UI 자동화 공급자가 <see cref="M:System.Windows.Automation.Provider.IRawElementProviderFragment.GetRuntimeId" />에 전달한 배열의 첫 번째 요소로 반환된 경우 ID가 부분적이므로 기본 공급자가 제공한 ID에 추가되어야 함을 나타내는 값이 포함되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b113d-102">Contains a value that, when returned as the first element of the array passed by the UI Automation provider to <see cref="M:System.Windows.Automation.Provider.IRawElementProviderFragment.GetRuntimeId" />, indicates that the ID is partial and should be appended to the ID provided by the base provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b113d-103">이 필드는의 구현에서 일반적으로 사용 <xref:System.Windows.Automation.Provider.IRawElementProviderFragment.GetRuntimeId%2A> 조각에서 창에서 직접 호스트 되지 하는 요소에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="b113d-103">This field is typically used in the implementation of <xref:System.Windows.Automation.Provider.IRawElementProviderFragment.GetRuntimeId%2A> for elements in a fragment that are not directly hosted in a window.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b113d-104">다음 예제는의 구현 <xref:System.Windows.Automation.Provider.IRawElementProviderFragment.GetRuntimeId%2A?displayProperty=nameWithType> 목록 항목에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="b113d-104">The following example is an implementation of <xref:System.Windows.Automation.Provider.IRawElementProviderFragment.GetRuntimeId%2A?displayProperty=nameWithType> for a list item.</span></span>  
  
 [!code-csharp[UIAFragmentProvider_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAFragmentProvider_snip/CSharp/ListItemFragment.cs#101)]
 [!code-vb[UIAFragmentProvider_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAFragmentProvider_snip/VisualBasic/ListItemFragment.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientsAreListening">
      <MemberSignature Language="C#" Value="public static bool ClientsAreListening { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool ClientsAreListening" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.AutomationInteropProvider.ClientsAreListening" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ClientsAreListening As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool ClientsAreListening { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b113d-105">UI 자동화 클라이언트 응용 프로그램에서 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 이벤트를 구독하는지 여부를 지정하는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b113d-105">Gets a value that specifies whether any UI Automation client application is subscribed to [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] events.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b113d-106">클라이언트에서 이벤트를 구독하면 <see langword="true" />이고, 구독하지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b113d-106">
              <see langword="true" /> if a client is subscribed to events; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[UIAFragmentProvider_snip#122](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAFragmentProvider_snip/CSharp/ListFragment.cs#122)]
 [!code-vb[UIAFragmentProvider_snip#122](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAFragmentProvider_snip/VisualBasic/ListFragment.vb#122)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostProviderFromHandle">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.Provider.IRawElementProviderSimple HostProviderFromHandle (IntPtr hwnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Automation.Provider.IRawElementProviderSimple HostProviderFromHandle(native int hwnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.AutomationInteropProvider.HostProviderFromHandle(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HostProviderFromHandle (hwnd As IntPtr) As IRawElementProviderSimple" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Automation::Provider::IRawElementProviderSimple ^ HostProviderFromHandle(IntPtr hwnd);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderSimple</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwnd" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hwnd">
          <span data-ttu-id="b113d-107">창의 핸들입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b113d-107">The handle of the window.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b113d-108">지정된 창을 나타내는 UI 자동화 공급자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b113d-108">Returns a UI Automation provider that represents the specified window.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b113d-109">지정된 창에 대한 원시 요소 공급자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b113d-109">The raw element provider for the specified window.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b113d-110">이 메서드에서 반환 된 인터페이스에 다시 전달 될 수 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="b113d-110">The interface returned by this method can only be passed back to [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)].</span></span> <span data-ttu-id="b113d-111">인터페이스의 메서드를 호출 하려고 하면 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="b113d-111">Attempting to call a method on the interface will raise an exception.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UIAFragmentProvider_snip#121](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAFragmentProvider_snip/CSharp/ListFragment.cs#121)]
 [!code-vb[UIAFragmentProvider_snip#121](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAFragmentProvider_snip/VisualBasic/ListFragment.vb#121)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateLimit">
      <MemberSignature Language="C#" Value="public const int InvalidateLimit = 20;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 InvalidateLimit = (20)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.Provider.AutomationInteropProvider.InvalidateLimit" />
      <MemberSignature Language="VB.NET" Value="Public Const InvalidateLimit As Integer  = 20" />
      <MemberSignature Language="C++ CLI" Value="public: int InvalidateLimit = 20;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>20</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="b113d-112">일괄 처리를 수행하기 전에 보낼 최대 이벤트 개수를 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b113d-112">Specifies the maximum number of events to send before batching.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b113d-113">이 값은 알림 개별 이벤트와 같은 제공 되는지 여부를 결정 <xref:System.Windows.Automation.StructureChangeType.ChildAdded> 또는와 같은 대량 이벤트의 <xref:System.Windows.Automation.StructureChangeType.ChildrenBulkAdded>합니다.</span><span class="sxs-lookup"><span data-stu-id="b113d-113">This value determines whether notification is given of individual events such as <xref:System.Windows.Automation.StructureChangeType.ChildAdded> or of bulk events such as <xref:System.Windows.Automation.StructureChangeType.ChildrenBulkAdded>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemsInvalidateLimit">
      <MemberSignature Language="C#" Value="public const int ItemsInvalidateLimit = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ItemsInvalidateLimit = (5)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.Provider.AutomationInteropProvider.ItemsInvalidateLimit" />
      <MemberSignature Language="VB.NET" Value="Public Const ItemsInvalidateLimit As Integer  = 5" />
      <MemberSignature Language="C++ CLI" Value="public: int ItemsInvalidateLimit = 5;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="b113d-114">컨테이너의 항목을 일괄 처리하기 전에 보낼 최대 이벤트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b113d-114">The maximum number of events to send before batching for items in containers.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseAutomationEvent">
      <MemberSignature Language="C#" Value="public static void RaiseAutomationEvent (System.Windows.Automation.AutomationEvent eventId, System.Windows.Automation.Provider.IRawElementProviderSimple provider, System.Windows.Automation.AutomationEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RaiseAutomationEvent(class System.Windows.Automation.AutomationEvent eventId, class System.Windows.Automation.Provider.IRawElementProviderSimple provider, class System.Windows.Automation.AutomationEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.AutomationInteropProvider.RaiseAutomationEvent(System.Windows.Automation.AutomationEvent,System.Windows.Automation.Provider.IRawElementProviderSimple,System.Windows.Automation.AutomationEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RaiseAutomationEvent (eventId As AutomationEvent, provider As IRawElementProviderSimple, e As AutomationEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RaiseAutomationEvent(System::Windows::Automation::AutomationEvent ^ eventId, System::Windows::Automation::Provider::IRawElementProviderSimple ^ provider, System::Windows::Automation::AutomationEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Windows.Automation.AutomationEvent" />
        <Parameter Name="provider" Type="System.Windows.Automation.Provider.IRawElementProviderSimple" />
        <Parameter Name="e" Type="System.Windows.Automation.AutomationEventArgs" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="b113d-115">이벤트 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b113d-115">The event identifier.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="b113d-116">이벤트와 연결된 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b113d-116">The element associated with the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="b113d-117">이벤트 정보입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b113d-117">Information about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b113d-118">패턴 이벤트 또는 사용자 지정 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b113d-118">Raises a pattern event or a custom event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b113d-119">패턴 구현에서 방금 패턴 이벤트가 발생 하지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b113d-119">Pattern events should not be raised just by a pattern implementation.</span></span> <span data-ttu-id="b113d-120">예를 들어 한 <xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent> 컨트롤이 호출 될 때마다 발생 해야 통해 <xref:System.Windows.Automation.InvokePattern.Invoke%2A> 또는 마우스 또는 키보드 입력을 통해.</span><span class="sxs-lookup"><span data-stu-id="b113d-120">For example, an <xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent> should be raised whenever the control is invoked, either through <xref:System.Windows.Automation.InvokePattern.Invoke%2A> or through mouse or keyboard input.</span></span> <span data-ttu-id="b113d-121">이러한 방식으로 시스템 이벤트에 대 한 클라이언트를 알릴 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b113d-121">In this way, clients can be informed about system events.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UIAFragmentProvider_snip#122](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAFragmentProvider_snip/CSharp/ListFragment.cs#122)]
 [!code-vb[UIAFragmentProvider_snip#122](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAFragmentProvider_snip/VisualBasic/ListFragment.vb#122)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseAutomationPropertyChangedEvent">
      <MemberSignature Language="C#" Value="public static void RaiseAutomationPropertyChangedEvent (System.Windows.Automation.Provider.IRawElementProviderSimple element, System.Windows.Automation.AutomationPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RaiseAutomationPropertyChangedEvent(class System.Windows.Automation.Provider.IRawElementProviderSimple element, class System.Windows.Automation.AutomationPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.AutomationInteropProvider.RaiseAutomationPropertyChangedEvent(System.Windows.Automation.Provider.IRawElementProviderSimple,System.Windows.Automation.AutomationPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RaiseAutomationPropertyChangedEvent (element As IRawElementProviderSimple, e As AutomationPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RaiseAutomationPropertyChangedEvent(System::Windows::Automation::Provider::IRawElementProviderSimple ^ element, System::Windows::Automation::AutomationPropertyChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.Provider.IRawElementProviderSimple" />
        <Parameter Name="e" Type="System.Windows.Automation.AutomationPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="b113d-122">이벤트와 연결된 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b113d-122">The element associated with the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="b113d-123">이벤트 정보입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b113d-123">Information about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b113d-124">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 속성이 변경되면 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b113d-124">Raises an event when a [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[UIAFragmentProvider_snip#123](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAFragmentProvider_snip/CSharp/ListFragment.cs#123)]
 [!code-vb[UIAFragmentProvider_snip#123](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAFragmentProvider_snip/VisualBasic/ListFragment.vb#123)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseStructureChangedEvent">
      <MemberSignature Language="C#" Value="public static void RaiseStructureChangedEvent (System.Windows.Automation.Provider.IRawElementProviderSimple provider, System.Windows.Automation.StructureChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RaiseStructureChangedEvent(class System.Windows.Automation.Provider.IRawElementProviderSimple provider, class System.Windows.Automation.StructureChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.AutomationInteropProvider.RaiseStructureChangedEvent(System.Windows.Automation.Provider.IRawElementProviderSimple,System.Windows.Automation.StructureChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RaiseStructureChangedEvent (provider As IRawElementProviderSimple, e As StructureChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RaiseStructureChangedEvent(System::Windows::Automation::Provider::IRawElementProviderSimple ^ provider, System::Windows::Automation::StructureChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Windows.Automation.Provider.IRawElementProviderSimple" />
        <Parameter Name="e" Type="System.Windows.Automation.StructureChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="b113d-125">이벤트와 연결된 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b113d-125">The element associated with the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="b113d-126">이벤트 정보입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b113d-126">Information about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b113d-127">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 트리가 변경되면 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b113d-127">Raises an event when the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] tree has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b113d-128">트리 구조가 변경의 예가에 추가 되 고 자식 요소 또는 목록 상자에서 제거 또는 되 고 확장 또는 축소 트리 보기에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="b113d-128">An example of a change in the tree structure is child elements being added to or removed from a list box, or being expanded or collapsed in a tree view.</span></span>  
  
 <span data-ttu-id="b113d-129">요소 또는 해당 컨테이너의 런타임 식별자에 전달 되는 자식 요소가 제거 되 고 <xref:System.Windows.Automation.StructureChangedEventArgs> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="b113d-129">When a child element is removed, the runtime identifier of either the element, or of its container, is passed to the <xref:System.Windows.Automation.StructureChangedEventArgs> constructor.</span></span> <span data-ttu-id="b113d-130">하지만 현재 버전의에서 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)], 해당 런타임 식별자를 검색 하는 공급자의 인스턴스에 대 한 쉬운 방법이 있으면 합니다.</span><span class="sxs-lookup"><span data-stu-id="b113d-130">In the current version of [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)], however, there is no easy way for an instance of a provider to discover its runtime identifier.</span></span> <span data-ttu-id="b113d-131"><xref:System.Windows.Automation.Provider.IRawElementProviderFragment.GetRuntimeId%2A> 메서드는 일반적으로 포함 하는 배열을 반환 <xref:System.Windows.Automation.Provider.AutomationInteropProvider.AppendRuntimeId>, 지시 하는 매직 넘버는 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 시스템 컨트롤의 모든 인스턴스에 대해 고유한 식별자를 만들려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="b113d-131">The <xref:System.Windows.Automation.Provider.IRawElementProviderFragment.GetRuntimeId%2A> method normally returns an array that contains <xref:System.Windows.Automation.Provider.AutomationInteropProvider.AppendRuntimeId>, a magic number that instructs the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] system to create a unique identifer for every instance of the control.</span></span> <span data-ttu-id="b113d-132">제공한 원시 값 <xref:System.Windows.Automation.Provider.IRawElementProviderFragment.GetRuntimeId%2A> 쓰일 수 없습니다 이벤트, 고 있기 때문에 클라이언트에 게 의미가 특정 인스턴스를 식별 하는 데 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b113d-132">The raw value provided by <xref:System.Windows.Automation.Provider.IRawElementProviderFragment.GetRuntimeId%2A> should not be used in events, because it is meaningless to clients and cannot be used to identify a specific instance.</span></span>  
  
 <span data-ttu-id="b113d-133">형식의 이벤트는이 제한으로 인해 <xref:System.Windows.Automation.StructureChangeType.ChildAdded> 및 <xref:System.Windows.Automation.StructureChangeType.ChildRemoved> 유용 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b113d-133">Because of this limitation, events of type <xref:System.Windows.Automation.StructureChangeType.ChildAdded> and <xref:System.Windows.Automation.StructureChangeType.ChildRemoved> are not very useful.</span></span> <span data-ttu-id="b113d-134">대신, 항상 사용 <xref:System.Windows.Automation.StructureChangeType.ChildrenBulkAdded> 및 <xref:System.Windows.Automation.StructureChangeType.ChildrenBulkRemoved>, 런타임 식별자로 0을 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="b113d-134">As an alternative, always use <xref:System.Windows.Automation.StructureChangeType.ChildrenBulkAdded> and <xref:System.Windows.Automation.StructureChangeType.ChildrenBulkRemoved>, passing 0 as the runtime identifer.</span></span> <span data-ttu-id="b113d-135">사용할 수 없습니다 `null`예외가 발생 하므로, 합니다.</span><span class="sxs-lookup"><span data-stu-id="b113d-135">You cannot use `null`, as this will raise an exception.</span></span> <span data-ttu-id="b113d-136">컨테이너에서 변경이 수행 된는 클라이언트에서 알림을 (로 식별 되는 `sender` 에 전달 된 매개 변수는 <xref:System.Windows.Automation.StructureChangedEventHandler>) 자식의 특정 통지 추가 하거나 제거 하지 않고, 합니다.</span><span class="sxs-lookup"><span data-stu-id="b113d-136">Clients will be notified that a change has been made in the container (identified by the `sender` parameter passed to the <xref:System.Windows.Automation.StructureChangedEventHandler>), without specific notice of what children have been added or removed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b113d-137">다음 예제에서는 자식이 추가 될 때 이벤트를 발생 시키는 방법을 보여 줍니다. 또는 사용자 지정 목록 상자에서 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="b113d-137">The following example shows how to raise an event when children are added to, or removed from, a custom list box.</span></span>  
  
 [!code-csharp[FragmentProvider#101](~/samples/snippets/csharp/VS_Snippets_Wpf/FragmentProvider/CSharp/ListFragment.cs#101)]
 [!code-vb[FragmentProvider#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FragmentProvider/VisualBasic/ListFragment.vb#101)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.StructureChangedEventArgs.#ctor(System.Windows.Automation.StructureChangeType,System.Int32[])" />
      </Docs>
    </Member>
    <Member MemberName="ReturnRawElementProvider">
      <MemberSignature Language="C#" Value="public static IntPtr ReturnRawElementProvider (IntPtr hwnd, IntPtr wParam, IntPtr lParam, System.Windows.Automation.Provider.IRawElementProviderSimple el);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ReturnRawElementProvider(native int hwnd, native int wParam, native int lParam, class System.Windows.Automation.Provider.IRawElementProviderSimple el) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.AutomationInteropProvider.ReturnRawElementProvider(System.IntPtr,System.IntPtr,System.IntPtr,System.Windows.Automation.Provider.IRawElementProviderSimple)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReturnRawElementProvider (hwnd As IntPtr, wParam As IntPtr, lParam As IntPtr, el As IRawElementProviderSimple) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr ReturnRawElementProvider(IntPtr hwnd, IntPtr wParam, IntPtr lParam, System::Windows::Automation::Provider::IRawElementProviderSimple ^ el);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwnd" Type="System.IntPtr" />
        <Parameter Name="wParam" Type="System.IntPtr" />
        <Parameter Name="lParam" Type="System.IntPtr" />
        <Parameter Name="el" Type="System.Windows.Automation.Provider.IRawElementProviderSimple" />
      </Parameters>
      <Docs>
        <param name="hwnd">
          <span data-ttu-id="b113d-138">요소 창의 핸들입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b113d-138">Handle of the element's window.</span>
          </span>
        </param>
        <param name="wParam">
          <span data-ttu-id="b113d-139">
            <see langword="WM_GETOBJECT" /> 메시지의 <see langword="wParam" /> 멤버입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b113d-139">The <see langword="wParam" /> member of the <see langword="WM_GETOBJECT" /> message.</span>
          </span>
        </param>
        <param name="lParam">
          <span data-ttu-id="b113d-140">
            <see langword="WM_GETOBJECT" /> 메시지의 <see langword="lParam" /> 멤버입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b113d-140">The <see langword="lParam" /> member of the <see langword="WM_GETOBJECT" /> message.</span>
          </span>
        </param>
        <param name="el">
          <span data-ttu-id="b113d-141">요소의 UI 자동화 공급자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b113d-141">The UI Automation provider for the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b113d-142">
            <see langword="WM_GETOBJECT" /> 메시지에 따라 요소의 UI Automation 공급자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b113d-142">Returns the UI automation provider for an element in response to a <see langword="WM_GETOBJECT" /> message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b113d-143">메시지를 기본 창 프로시저에 전달하기 전에 <see cref="P:System.Windows.Forms.Message.Result" />에 할당해야 하는 데이터를 가리키는 포인터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b113d-143">A pointer to data that should be assigned to <see cref="P:System.Windows.Forms.Message.Result" /> before passing the message to the base window procedure.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[UIAFragmentProvider_snip#116](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAFragmentProvider_snip/CSharp/ListFragment.cs#116)]
 [!code-vb[UIAFragmentProvider_snip#116](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAFragmentProvider_snip/VisualBasic/ListFragment.vb#116)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootObjectId">
      <MemberSignature Language="C#" Value="public const int RootObjectId = -25;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 RootObjectId = (-25)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.Provider.AutomationInteropProvider.RootObjectId" />
      <MemberSignature Language="VB.NET" Value="Public Const RootObjectId As Integer  = -25" />
      <MemberSignature Language="C++ CLI" Value="public: int RootObjectId = -25;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-25</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="b113d-144">
            <see langword="lParam" /> 메시지의 <see langword="WM_GETOBJECT" /> 멤버에 사용되며 서버에서 루트 원시 요소 공급자에 대한 참조를 반환해야 함을 나타내는 값을 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b113d-144">Contains a value used in the <see langword="lParam" /> member of a <see langword="WM_GETOBJECT" /> message, indicating that the server should return a reference to the root raw element provider.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>