<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IRangeValueProvider.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e344e59-9d8e-481b-978a-09f2e01be86c58a78d93529ddc2cf59c8fe5a6800abd76e65386.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">58a78d93529ddc2cf59c8fe5a6800abd76e65386</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9e3295b6cc303a611a73a84c4b27f9da792ad0d</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/26/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Automation.Provider.IRangeValueProvider">
          <source>Exposes methods and properties to support UI Automation client access to controls that can be set to a value within a range.</source>
          <target state="translated">범위 내 값으로 설정할 수 있는 컨트롤에 대한 UI 자동화 클라이언트 액세스를 지원하는 메서드 및 속성을 공개합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.Provider.IRangeValueProvider">
          <source>Implemented on a UI Automation provider that must support the <ph id="ph1">&lt;xref:System.Windows.Automation.RangeValuePattern&gt;</ph> control pattern.</source>
          <target state="translated">지원 해야 하는 UI 자동화 공급자에서 구현 되는 <ph id="ph1">&lt;xref:System.Windows.Automation.RangeValuePattern&gt;</ph> 컨트롤 패턴.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly">
          <source>Gets a value that specifies whether the value of a control is read-only.</source>
          <target state="translated">컨트롤의 값이 읽기 전용인지 여부를 지정하는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value is read-only; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if it can be modified.</source>
          <target state="translated">값이 읽기 전용이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 수정할 수 있으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly">
          <source>The following example shows an implementation of this method for a control that is not read-only.</source>
          <target state="translated">다음 예에서는 읽기 전용으로 설정 되지 않는 컨트롤에 대 한이 메서드의 구현을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange">
          <source>Gets the value that is added to or subtracted from the <ph id="ph1">&lt;see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /&gt;</ph> property when a large change is made, such as with the PAGE DOWN key.</source>
          <target state="translated">Page Down 키를 누르는 경우와 같이 화면이 크게 변경될 때 <ph id="ph1">&lt;see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /&gt;</ph> 속성에서 가감되는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange">
          <source>The large-change value supported by the control or null (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic) if the control does not support <ph id="ph2">&lt;see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange" /&gt;</ph>.</source>
          <target state="translated">Null 컨트롤에서 지 원하는 큰 변경 값 (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> Visual basic에서) 컨트롤을 지원 하지 않는 경우 <ph id="ph2">&lt;see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange">
          <source>The following example shows an implementation of this method for a control that has a large change value of 5.0.</source>
          <target state="translated">다음 예제에서는 5.0의 큰 변경 값을 가진 컨트롤에 대 한이 메서드의 구현을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum">
          <source>Gets the maximum range value supported by the control.</source>
          <target state="translated">컨트롤에서 지원하는 최대 범위 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum">
          <source>The maximum value supported by the control or null (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic) if the control does not support <ph id="ph2">&lt;see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum" /&gt;</ph>.</source>
          <target state="translated">컨트롤이 나 null에서 지 원하는 최대값 (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> Visual basic에서) 컨트롤을 지원 하지 않는 경우 <ph id="ph2">&lt;see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum">
          <source>The following example shows an implementation of this method for a control that has a maximum value of 255.0.</source>
          <target state="translated">다음 예제에서는 255.0 최대 값을 가진 컨트롤에 대 한이 메서드의 구현을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum">
          <source>Gets the minimum range value supported by the control.</source>
          <target state="translated">컨트롤에서 지원하는 최소 범위 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum">
          <source>The minimum value supported by the control or null (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic) if the control does not support <ph id="ph2">&lt;see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum" /&gt;</ph>.</source>
          <target state="translated">컨트롤이 나 null에서 지 원하는 최소값 (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> Visual basic에서) 컨트롤을 지원 하지 않는 경우 <ph id="ph2">&lt;see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum">
          <source>The following example shows an implementation of this method for a control that has a minimum value of 0.0.</source>
          <target state="translated">다음 예제에서는 최소 값이 0.0가 있는 컨트롤에 대 한이 메서드의 구현을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)">
          <source>The value to set.</source>
          <target state="translated">설정할 값입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)">
          <source>Sets the value of the control.</source>
          <target state="translated">컨트롤의 값을 설정합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)">
          <source>The actual value set depends on the control implementation.</source>
          <target state="translated">설정 된 실제 값은 컨트롤 구현에 따라 달라 집니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)">
          <source>The control may round the requested <ph id="ph1">`value`</ph> up or down.</source>
          <target state="translated">컨트롤에서 요청한 반올림할 수 <ph id="ph1">`value`</ph> 위나 아래로 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)">
          <source>The following example shows one possible implementation of this method for a custom control.</source>
          <target state="translated">다음 예제에는 가능한 한이 메서드는 사용자 지정 컨트롤에 대 한 가지 구현을 보여줍니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)">
          <source>The custom control displays its range value through the alpha value of its base color.</source>
          <target state="translated">사용자 지정 컨트롤은 기본 색의 알파 값을 통해 해당 범위 값을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)">
          <source>When <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than the minimum or greater than the maximum value of the control.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 컨트롤의 최소값보다 작거나 최대값보다 큰 경우입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange">
          <source>Gets the value that is added to or subtracted from the <ph id="ph1">&lt;see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /&gt;</ph> property when a small change is made, such as with an arrow key.</source>
          <target state="translated">화살표 키를 누르는 경우와 같이 화면이 조금씩 변경될 때 <ph id="ph1">&lt;see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /&gt;</ph> 속성에서 가감되는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange">
          <source>The small-change value or null (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic) if the control does not support <ph id="ph2">&lt;see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange" /&gt;</ph>.</source>
          <target state="translated">작은 변경 값 또는 null (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> Visual basic에서) 컨트롤을 지원 하지 않는 경우 <ph id="ph2">&lt;see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange">
          <source>The following example shows an implementation of this method for a control that has a small change value of 1.0.</source>
          <target state="translated">다음 예제에서는 작은 변경 값이 1.0가 있는 컨트롤에 대 한이 메서드의 구현을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.Provider.IRangeValueProvider.Value">
          <source>Gets the value of the control.</source>
          <target state="translated">컨트롤의 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IRangeValueProvider.Value">
          <source>The value of the control or null (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic) if the control does not support <ph id="ph2">&lt;see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /&gt;</ph>.</source>
          <target state="translated">컨트롤 또는 null 값 (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> Visual basic에서) 컨트롤을 지원 하지 않는 경우 <ph id="ph2">&lt;see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IRangeValueProvider.Value">
          <source>The following example shows an implementation of this method for a custom control.</source>
          <target state="translated">다음 예제에서는 사용자 지정 컨트롤에 대 한이 메서드의 구현을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IRangeValueProvider.Value">
          <source>For the purposes of this sample, the custom control displays the value through the alpha setting of its base color.</source>
          <target state="translated">이 샘플에서는 사용자 지정 컨트롤 기본 색의 알파 설정을 통해 값을 표시합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>