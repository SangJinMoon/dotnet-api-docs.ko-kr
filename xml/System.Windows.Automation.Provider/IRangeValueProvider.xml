<Type Name="IRangeValueProvider" FullName="System.Windows.Automation.Provider.IRangeValueProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6dffcd0287384ebbbce831285dfd1515ba9636ec" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IRangeValueProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRangeValueProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.IRangeValueProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRangeValueProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRangeValueProvider" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("36dc7aef-33e6-4691-afe1-2be7274b3d33")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="07f7e-101">범위 내 값으로 설정할 수 있는 컨트롤에 대한 UI 자동화 클라이언트 액세스를 지원하는 메서드 및 속성을 공개합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="07f7e-101">Exposes methods and properties to support UI Automation client access to controls that can be set to a value within a range.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f7e-102">지원 해야 하는 UI 자동화 공급자에서 구현 되는 <xref:System.Windows.Automation.RangeValuePattern> 컨트롤 패턴.</span><span class="sxs-lookup"><span data-stu-id="07f7e-102">Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.RangeValuePattern> control pattern.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.RangeValuePattern" />
  </Docs>
  <Members>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07f7e-103">컨트롤의 값이 읽기 전용인지 여부를 지정하는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f7e-103">Gets a value that specifies whether the value of a control is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="07f7e-104">값이 읽기 전용이면 <see langword="true" />이고, 수정할 수 있으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f7e-104">
              <see langword="true" /> if the value is read-only; <see langword="false" /> if it can be modified.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="07f7e-105">다음 예에서는 읽기 전용으로 설정 되지 않는 컨트롤에 대 한이 메서드의 구현을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="07f7e-105">The following example shows an implementation of this method for a control that is not read-only.</span></span>  
  
 [!code-csharp[UIAIRangeValueProvider_snip#IsReadOnly](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/CSharp/RangeValueFragment.cs#isreadonly)]
 [!code-vb[UIAIRangeValueProvider_snip#IsReadOnly](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/visualbasic/rangevaluefragment.vb#isreadonly)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LargeChange">
      <MemberSignature Language="C#" Value="public double LargeChange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LargeChange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LargeChange As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double LargeChange { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07f7e-106">Page Down 키를 누르는 경우와 같이 화면이 크게 변경될 때 <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> 속성에서 가감되는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f7e-106">Gets the value that is added to or subtracted from the <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> property when a large change is made, such as with the PAGE DOWN key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="07f7e-107">컨트롤에서 지원하는 큰 변경 값이거나, 컨트롤에서 <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange" />를 지원하지 않는 경우 null([!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)]의 경우 <see langword="Nothing" />)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f7e-107">The large-change value supported by the control or null (<see langword="Nothing" /> in [!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)]) if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="07f7e-108">다음 예제에서는 5.0의 큰 변경 값을 가진 컨트롤에 대 한이 메서드의 구현을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="07f7e-108">The following example shows an implementation of this method for a control that has a large change value of 5.0.</span></span>  
  
 [!code-csharp[UIAIRangeValueProvider_snip#LargeChange](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/CSharp/RangeValueFragment.cs#largechange)]
 [!code-vb[UIAIRangeValueProvider_snip#LargeChange](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/visualbasic/rangevaluefragment.vb#largechange)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange" />
      </Docs>
    </Member>
    <Member MemberName="Maximum">
      <MemberSignature Language="C#" Value="public double Maximum { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Maximum" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Maximum As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Maximum { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07f7e-109">컨트롤에서 지원하는 최대 범위 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f7e-109">Gets the maximum range value supported by the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="07f7e-110">컨트롤에서 지원하는 최대값이거나, 컨트롤에서 <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum" />을 지원하지 않는 경우 null([!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)]의 경우 <see langword="Nothing" />)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f7e-110">The maximum value supported by the control or null (<see langword="Nothing" /> in [!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)]) if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="07f7e-111">다음 예제에서는 255.0 최대 값을 가진 컨트롤에 대 한이 메서드의 구현을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="07f7e-111">The following example shows an implementation of this method for a control that has a maximum value of 255.0.</span></span>  
  
 [!code-csharp[UIAIRangeValueProvider_snip#Maximum](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/CSharp/RangeValueFragment.cs#maximum)]
 [!code-vb[UIAIRangeValueProvider_snip#Maximum](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/visualbasic/rangevaluefragment.vb#maximum)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum" />
      </Docs>
    </Member>
    <Member MemberName="Minimum">
      <MemberSignature Language="C#" Value="public double Minimum { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Minimum" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Minimum As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Minimum { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07f7e-112">컨트롤에서 지원하는 최소 범위 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f7e-112">Gets the minimum range value supported by the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="07f7e-113">컨트롤에서 지원하는 최소값이거나, 컨트롤에서 <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum" />을 지원하지 않는 경우 null([!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)]의 경우 <see langword="Nothing" />)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f7e-113">The minimum value supported by the control or null (<see langword="Nothing" /> in [!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)]) if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="07f7e-114">다음 예제에서는 최소 값이 0.0가 있는 컨트롤에 대 한이 메서드의 구현을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="07f7e-114">The following example shows an implementation of this method for a control that has a minimum value of 0.0.</span></span>  
  
 [!code-csharp[UIAIRangeValueProvider_snip#Minimum](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/CSharp/RangeValueFragment.cs#minimum)]
 [!code-vb[UIAIRangeValueProvider_snip#Minimum](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/visualbasic/rangevaluefragment.vb#minimum)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="07f7e-115">설정할 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f7e-115">The value to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07f7e-116">컨트롤의 값을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f7e-116">Sets the value of the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f7e-117">설정 된 실제 값은 컨트롤 구현에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="07f7e-117">The actual value set depends on the control implementation.</span></span> <span data-ttu-id="07f7e-118">컨트롤에서 요청한 반올림할 수 `value` 위나 아래로 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f7e-118">The control may round the requested `value` up or down.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07f7e-119">다음 예제에는 가능한 한이 메서드는 사용자 지정 컨트롤에 대 한 가지 구현을 보여줍니다.</span><span class="sxs-lookup"><span data-stu-id="07f7e-119">The following example shows one possible implementation of this method for a custom control.</span></span> <span data-ttu-id="07f7e-120">사용자 지정 컨트롤은 기본 색의 알파 값을 통해 해당 범위 값을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="07f7e-120">The custom control displays its range value through the alpha value of its base color.</span></span>  
  
 [!code-csharp[UIAIRangeValueProvider_snip#SetValue](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/CSharp/RangeValueFragment.cs#setvalue)]
 [!code-vb[UIAIRangeValueProvider_snip#SetValue](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/visualbasic/rangevaluefragment.vb#setvalue)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="07f7e-121">
            <paramref name="value" />가 컨트롤의 최소값보다 작거나 최대값보다 큰 경우입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f7e-121">When <paramref name="value" /> is less than the minimum or greater than the maximum value of the control.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SmallChange">
      <MemberSignature Language="C#" Value="public double SmallChange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SmallChange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmallChange As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SmallChange { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07f7e-122">화살표 키를 누르는 경우와 같이 화면이 조금씩 변경될 때 <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> 속성에서 가감되는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f7e-122">Gets the value that is added to or subtracted from the <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> property when a small change is made, such as with an arrow key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="07f7e-123">작은 변경 값이거나, 컨트롤에서 <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange" />를 지원하지 않는 경우 null([!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)]의 경우 <see langword="Nothing" />)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f7e-123">The small-change value or null (<see langword="Nothing" /> in [!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)]) if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="07f7e-124">다음 예제에서는 작은 변경 값이 1.0가 있는 컨트롤에 대 한이 메서드의 구현을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="07f7e-124">The following example shows an implementation of this method for a control that has a small change value of 1.0.</span></span>  
  
 [!code-csharp[UIAIRangeValueProvider_snip#SmallChange](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/CSharp/RangeValueFragment.cs#smallchange)]
 [!code-vb[UIAIRangeValueProvider_snip#SmallChange](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/visualbasic/rangevaluefragment.vb#smallchange)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public double Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Value { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07f7e-125">컨트롤의 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f7e-125">Gets the value of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="07f7e-126">컨트롤의 값이거나, 컨트롤에서 <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" />를 지원하지 않는 경우 null([!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)]의 경우 <see langword="Nothing" />)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07f7e-126">The value of the control or null (<see langword="Nothing" /> in [!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)]) if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="07f7e-127">다음 예제에서는 사용자 지정 컨트롤에 대 한이 메서드의 구현을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="07f7e-127">The following example shows an implementation of this method for a custom control.</span></span> <span data-ttu-id="07f7e-128">이 샘플에서는 사용자 지정 컨트롤 기본 색의 알파 설정을 통해 값을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="07f7e-128">For the purposes of this sample, the custom control displays the value through the alpha setting of its base color.</span></span>  
  
 [!code-csharp[UIAIRangeValueProvider_snip#Value](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/CSharp/RangeValueFragment.cs#value)]
 [!code-vb[UIAIRangeValueProvider_snip#Value](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/visualbasic/rangevaluefragment.vb#value)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)" />
      </Docs>
    </Member>
  </Members>
</Type>