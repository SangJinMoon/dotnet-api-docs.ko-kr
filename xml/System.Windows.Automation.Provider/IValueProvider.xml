<Type Name="IValueProvider" FullName="System.Windows.Automation.Provider.IValueProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ae36109fe7cdbc85dfd5298d9d9b5cd60a29e065" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37583469" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IValueProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IValueProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.IValueProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IValueProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IValueProvider" />
  <TypeSignature Language="F#" Value="type IValueProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("c7935180-6fb3-4201-b174-7df73adbf64a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b5e02-101">UI 자동화 클라이언트가 범위에 걸쳐 있지 않고 문자열로 나타낼 수 있는 내장 값을 가진 컨트롤에 액세스할 수 있도록 지원하는 메서드 및 속성을 노출합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b5e02-101">Exposes methods and properties to support UI Automation client access to controls having an intrinsic value that does not span a range and that can be represented as a string.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5e02-102">컨트롤의 값 수 또는 컨트롤 및 해당 설정에 따라 편집이 불가능할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b5e02-102">The value of the control may or may not be editable depending on the control and its settings.</span></span>  
  
 <span data-ttu-id="b5e02-103">지원 해야 하는 UI 자동화 공급자에서 구현 된 <xref:System.Windows.Automation.ValuePattern> 컨트롤 패턴입니다.</span><span class="sxs-lookup"><span data-stu-id="b5e02-103">Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.ValuePattern> control pattern.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.ValuePattern" />
  </Docs>
  <Members>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IValueProvider.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Automation.Provider.IValueProvider.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b5e02-104">컨트롤의 값이 읽기 전용인지 여부를 지정하는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5e02-104">Gets a value that specifies whether the value of a control is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b5e02-105">값이 읽기 전용이면 <see langword="true" />이고, 수정할 수 있으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5e02-105">
              <see langword="true" /> if the value is read-only; <see langword="false" /> if it can be modified.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5e02-106">컨트롤에서 <xref:System.Windows.Automation.AutomationElement.IsEnabledProperty> 가 `true` 로 설정되고 <xref:System.Windows.Automation.ValuePattern.IsReadOnlyProperty> 가 `false` 로 설정되어야 <xref:System.Windows.Automation.Provider.IValueProvider.SetValue%2A>를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b5e02-106">A control should have its <xref:System.Windows.Automation.AutomationElement.IsEnabledProperty> set to `true` and its <xref:System.Windows.Automation.ValuePattern.IsReadOnlyProperty> set to `false` before allowing a call to <xref:System.Windows.Automation.Provider.IValueProvider.SetValue%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5e02-107">다음 예제에서는 해당 값을 변경할 수 있도록 하는 컨트롤에 대 한이 메서드의 구현을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b5e02-107">The following example shows an implementation of this method for a control that allows its value to be changed.</span></span>  
  
 [!code-csharp[UIAIValueProvider_snip#IsReadOnly](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIValueProvider_snip/CSharp/ValueFragment.cs#isreadonly)]
 [!code-vb[UIAIValueProvider_snip#IsReadOnly](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIValueProvider_snip/visualbasic/valuefragment.vb#isreadonly)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : string -&gt; unit" Usage="iValueProvider.SetValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b5e02-108">설정할 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5e02-108">The value to set.</span>
          </span>
          <span data-ttu-id="b5e02-109">공급자는 적절한 데이터 형식으로 값을 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5e02-109">The provider is responsible for converting the value to the appropriate data type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5e02-110">컨트롤의 값을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5e02-110">Sets the value of a control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5e02-111">단일 줄 편집 컨트롤은 <xref:System.Windows.Automation.Provider.IValueProvider>를 구현하여 해당 내용에 대한 프로그래밍 방식 액세스를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="b5e02-111">Single-line edit controls support programmatic access to their contents by implementing <xref:System.Windows.Automation.Provider.IValueProvider>.</span></span> <span data-ttu-id="b5e02-112">하지만 여러 줄 편집 컨트롤은 <xref:System.Windows.Automation.Provider.IValueProvider>를 구현하지 않습니다. 대신, <xref:System.Windows.Automation.Provider.ITextProvider>를 구현하여 내용에 대한 액세스를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="b5e02-112">However, multi-line edit controls do not implement <xref:System.Windows.Automation.Provider.IValueProvider>; instead they provide access to their content by implementing <xref:System.Windows.Automation.Provider.ITextProvider>.</span></span>  
  
 <span data-ttu-id="b5e02-113">와 같은 컨트롤 <xref:System.Windows.Automation.ControlType.ListItem> 하 고 <xref:System.Windows.Automation.ControlType.TreeItem> 구현 해야 <xref:System.Windows.Automation.Provider.IValueProvider> 값 항목 중 하나를 편집할 수 있는 경우 현재에 관계 없이 편집 컨트롤의 모드입니다.</span><span class="sxs-lookup"><span data-stu-id="b5e02-113">Controls such as <xref:System.Windows.Automation.ControlType.ListItem> and <xref:System.Windows.Automation.ControlType.TreeItem> must implement <xref:System.Windows.Automation.Provider.IValueProvider> if the value of any of the items is editable, regardless of the current edit mode of the control.</span></span> <span data-ttu-id="b5e02-114">부모 컨트롤이 구현 해야 <xref:System.Windows.Automation.Provider.IValueProvider> 자식 항목을 편집할 수 있는 경우.</span><span class="sxs-lookup"><span data-stu-id="b5e02-114">The parent control must also implement <xref:System.Windows.Automation.Provider.IValueProvider> if the child items are editable.</span></span>  
  
 <span data-ttu-id="b5e02-115">![편집할 수 있는 목록 항목입니다. ] (~/add/media/uia-valuepattern-editable-listitem.PNG "편집할 수 있는 목록 항목입니다.")</span><span class="sxs-lookup"><span data-stu-id="b5e02-115">![Editable list item.](~/add/media/uia-valuepattern-editable-listitem.PNG "Editable list item.")</span></span>  
<span data-ttu-id="b5e02-116">편집 가능한 목록 항목의 예</span><span class="sxs-lookup"><span data-stu-id="b5e02-116">Example of an Editable List Item</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5e02-117">다음 예제 코드에는 해당 값을 제한 된 길이의 문자열로 설정할 수 있도록 사용자 지정 컨트롤을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b5e02-117">The following example code demonstrates a custom control that allows its value to be set to a string of limited length.</span></span>  
  
 [!code-csharp[UIAIValueProvider_snip#SetValue](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIValueProvider_snip/CSharp/ValueFragment.cs#setvalue)]
 [!code-vb[UIAIValueProvider_snip#SetValue](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIValueProvider_snip/visualbasic/valuefragment.vb#setvalue)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b5e02-118">로캘 관련 정보가 잘못된 형식(예: 올바르지 않은 형식의 날짜)으로 컨트롤에 전달되는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5e02-118">If locale-specific information is passed to a control in an incorrect format such as an incorrectly formatted date.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b5e02-119">새 값을 문자열에서 컨트롤이 인식하는 형식으로 변환할 수 없는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5e02-119">If a new value cannot be converted from a string to a format the control recognizes.</span>
          </span>
        </exception>
        <exception cref="T:System.Windows.Automation.ElementNotEnabledException">
          <span data-ttu-id="b5e02-120">활성화되지 않은 컨트롤을 조작하려고 시도하는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5e02-120">When an attempt is made to manipulate a control that is not enabled.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IValueProvider.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.Windows.Automation.Provider.IValueProvider.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b5e02-121">컨트롤의 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5e02-121">Gets the value of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b5e02-122">문자열로 나타낸 컨트롤 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5e02-122">The value of the control as a string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5e02-123">단일 줄 편집 컨트롤을 구현 하 여 해당 내용에 대 한 프로그래밍 방식 액세스를 지원 <xref:System.Windows.Automation.Provider.IValueProvider> (외에 <xref:System.Windows.Automation.Provider.ITextProvider>).</span><span class="sxs-lookup"><span data-stu-id="b5e02-123">Single-line edit controls support programmatic access to their contents by implementing <xref:System.Windows.Automation.Provider.IValueProvider> (in addition to <xref:System.Windows.Automation.Provider.ITextProvider>).</span></span> <span data-ttu-id="b5e02-124">그러나 여러 줄 편집 컨트롤 구현 하지 않는 <xref:System.Windows.Automation.Provider.IValueProvider>합니다.</span><span class="sxs-lookup"><span data-stu-id="b5e02-124">However, multi-line edit controls do not implement <xref:System.Windows.Automation.Provider.IValueProvider>.</span></span>  
  
 <span data-ttu-id="b5e02-125">여러 줄 편집 컨트롤의 텍스트 콘텐츠를 검색 하려면 컨트롤 구현 해야 <xref:System.Windows.Automation.Provider.ITextProvider>합니다.</span><span class="sxs-lookup"><span data-stu-id="b5e02-125">To retrieve the textual contents of multi-line edit controls, the controls must implement <xref:System.Windows.Automation.Provider.ITextProvider>.</span></span> <span data-ttu-id="b5e02-126">하지만 <xref:System.Windows.Automation.Provider.ITextProvider> 는 컨트롤의 값 설정을 지원하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b5e02-126">However, <xref:System.Windows.Automation.Provider.ITextProvider> does not support setting the value of a control.</span></span>  
  
 <span data-ttu-id="b5e02-127"><xref:System.Windows.Automation.Provider.IValueProvider> 는 서식 정보 및 하위 문자열 값 검색을 지원하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b5e02-127"><xref:System.Windows.Automation.Provider.IValueProvider> does not support the retrieval of formatting information or substring values.</span></span> <span data-ttu-id="b5e02-128">이러한 시나리오에서는 <xref:System.Windows.Automation.Provider.ITextProvider> 를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="b5e02-128">Implement <xref:System.Windows.Automation.Provider.ITextProvider> in these scenarios.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5e02-129">다음 예제에서는 해당 값을 검색할 수 있도록 하는 컨트롤에 대 한이 메서드의 구현을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b5e02-129">The following example shows an implementation of this method for a control that allows its value to be retrieved.</span></span>  
  
 [!code-csharp[UIAIValueProvider_snip#Value](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIValueProvider_snip/CSharp/ValueFragment.cs#value)]
 [!code-vb[UIAIValueProvider_snip#Value](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIValueProvider_snip/visualbasic/valuefragment.vb#value)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>