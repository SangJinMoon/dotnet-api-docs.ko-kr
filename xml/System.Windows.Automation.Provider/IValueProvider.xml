<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IValueProvider.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58c1d51b87ec2caeb4da3cf10dd4b86c61eba2716.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8c1d51b87ec2caeb4da3cf10dd4b86c61eba2716</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Automation.Provider.IValueProvider">
          <source>Exposes methods and properties to support UI Automation client access to controls having an intrinsic value that does not span a range and that can be represented as a string.</source>
          <target state="translated">UI 자동화 클라이언트가 범위에 걸쳐 있지 않고 문자열로 나타낼 수 있는 내장 값을 가진 컨트롤에 액세스할 수 있도록 지원하는 메서드 및 속성을 노출합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.Provider.IValueProvider">
          <source>The value of the control may or may not be editable depending on the control and its settings.</source>
          <target state="translated">컨트롤의 값 수도 있습니다 컨트롤 및 해당 설정에 따라 편집할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.Provider.IValueProvider">
          <source>Implemented on a UI Automation provider that must support the <ph id="ph1">&lt;xref:System.Windows.Automation.ValuePattern&gt;</ph> control pattern.</source>
          <target state="translated">지원 해야 하는 UI 자동화 공급자에서 구현 되는 <ph id="ph1">&lt;xref:System.Windows.Automation.ValuePattern&gt;</ph> 컨트롤 패턴.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.Provider.IValueProvider.IsReadOnly">
          <source>Gets a value that specifies whether the value of a control is read-only.</source>
          <target state="translated">컨트롤의 값이 읽기 전용인지 여부를 지정하는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IValueProvider.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value is read-only; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if it can be modified.</source>
          <target state="translated">값이 읽기 전용이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 수정할 수 있으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IValueProvider.IsReadOnly">
          <source>A control should have its <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement.IsEnabledProperty&gt;</ph> set to <ph id="ph2">`true`</ph> and its <ph id="ph3">&lt;xref:System.Windows.Automation.ValuePattern.IsReadOnlyProperty&gt;</ph> set to <ph id="ph4">`false`</ph> before allowing a call to <ph id="ph5">&lt;xref:System.Windows.Automation.Provider.IValueProvider.SetValue%2A&gt;</ph>.</source>
          <target state="translated">컨트롤에서 <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement.IsEnabledProperty&gt;</ph> 가 <ph id="ph2">`true`</ph> 로 설정되고 <ph id="ph3">&lt;xref:System.Windows.Automation.ValuePattern.IsReadOnlyProperty&gt;</ph> 가 <ph id="ph4">`false`</ph> 로 설정되어야 <ph id="ph5">&lt;xref:System.Windows.Automation.Provider.IValueProvider.SetValue%2A&gt;</ph>를 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IValueProvider.IsReadOnly">
          <source>The following example shows an implementation of this method for a control that allows its value to be changed.</source>
          <target state="translated">다음 예제에서는 값을 변경할 수 있는 컨트롤에 대 한이 메서드의 구현을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)">
          <source>The value to set.</source>
          <target state="translated">설정할 값입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)">
          <source>The provider is responsible for converting the value to the appropriate data type.</source>
          <target state="translated">공급자는 적절한 데이터 형식으로 값을 변환합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)">
          <source>Sets the value of a control.</source>
          <target state="translated">컨트롤의 값을 설정합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)">
          <source>Single-line edit controls support programmatic access to their contents by implementing <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IValueProvider&gt;</ph>.</source>
          <target state="translated">단일 줄 편집 컨트롤은 <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IValueProvider&gt;</ph>를 구현하여 해당 내용에 대한 프로그래밍 방식 액세스를 제공합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)">
          <source>However, multi-line edit controls do not implement <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IValueProvider&gt;</ph>; instead they provide access to their content by implementing <ph id="ph2">&lt;xref:System.Windows.Automation.Provider.ITextProvider&gt;</ph>.</source>
          <target state="translated">하지만 여러 줄 편집 컨트롤은 <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IValueProvider&gt;</ph>를 구현하지 않습니다. 대신, <ph id="ph2">&lt;xref:System.Windows.Automation.Provider.ITextProvider&gt;</ph>를 구현하여 내용에 대한 액세스를 제공합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)">
          <source>Controls such as <ph id="ph1">&lt;xref:System.Windows.Automation.ControlType.ListItem&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Automation.ControlType.TreeItem&gt;</ph> must implement <ph id="ph3">&lt;xref:System.Windows.Automation.Provider.IValueProvider&gt;</ph> if the value of any of the items is editable, regardless of the current edit mode of the control.</source>
          <target state="translated">와 같은 컨트롤 <ph id="ph1">&lt;xref:System.Windows.Automation.ControlType.ListItem&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Automation.ControlType.TreeItem&gt;</ph> 구현 해야 <ph id="ph3">&lt;xref:System.Windows.Automation.Provider.IValueProvider&gt;</ph> 항목의 값이 편집 가능한 경우 현재에 관계 없이 편집 컨트롤의 모드입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)">
          <source>The parent control must also implement <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IValueProvider&gt;</ph> if the child items are editable.</source>
          <target state="translated">부모 컨트롤이 구현 해야 <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IValueProvider&gt;</ph> 경우 자식 항목을 편집할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)">
          <source><bpt id="p1">![</bpt>Editable list item.<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-valuepattern-editable-listitem.PNG "</bpt>Editable list item.<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>편집 가능한 목록 항목입니다. <ept id="p1">]</ept> <bpt id="p2">(~/add/media/uia-valuepattern-editable-listitem.PNG "</bpt>편집 가능한 목록 항목입니다.<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)">
          <source>Example of an Editable List Item</source>
          <target state="translated">편집 가능한 목록 항목의 예</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)">
          <source>The following example code demonstrates a custom control that allows its value to be set to a string of limited length.</source>
          <target state="translated">다음 코드 예제에서는 해당 값을 제한 된 길이의 문자열로 설정할 수 있도록 하는 사용자 지정 컨트롤을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)">
          <source>If locale-specific information is passed to a control in an incorrect format such as an incorrectly formatted date.</source>
          <target state="translated">로캘 관련 정보가 잘못된 형식(예: 올바르지 않은 형식의 날짜)으로 컨트롤에 전달되는 경우.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)">
          <source>If a new value cannot be converted from a string to a format the control recognizes.</source>
          <target state="translated">새 값을 문자열에서 컨트롤이 인식하는 형식으로 변환할 수 없는 경우.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)">
          <source>When an attempt is made to manipulate a control that is not enabled.</source>
          <target state="translated">활성화되지 않은 컨트롤을 조작하려고 시도하는 경우.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.Provider.IValueProvider.Value">
          <source>Gets the value of the control.</source>
          <target state="translated">컨트롤의 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IValueProvider.Value">
          <source>The value of the control as a string.</source>
          <target state="translated">문자열로 나타낸 컨트롤 값입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IValueProvider.Value">
          <source>Single-line edit controls support programmatic access to their contents by implementing <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IValueProvider&gt;</ph> (in addition to <ph id="ph2">&lt;xref:System.Windows.Automation.Provider.ITextProvider&gt;</ph>).</source>
          <target state="translated">단일 줄 편집 컨트롤 구현 하 여 해당 내용에 대 한 프로그래밍 방식 액세스를 지원 <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IValueProvider&gt;</ph> (외에 <ph id="ph2">&lt;xref:System.Windows.Automation.Provider.ITextProvider&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IValueProvider.Value">
          <source>However, multi-line edit controls do not implement <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IValueProvider&gt;</ph>.</source>
          <target state="translated">그러나 여러 줄 편집 컨트롤 구현 하지 않는 <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IValueProvider&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IValueProvider.Value">
          <source>To retrieve the textual contents of multi-line edit controls, the controls must implement <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextProvider&gt;</ph>.</source>
          <target state="translated">여러 줄 편집 컨트롤의 텍스트 콘텐츠를 검색 하려면 컨트롤 구현 해야 <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextProvider&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IValueProvider.Value">
          <source>However, <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextProvider&gt;</ph> does not support setting the value of a control.</source>
          <target state="translated">하지만 <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextProvider&gt;</ph> 는 컨트롤의 값 설정을 지원하지 않습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IValueProvider.Value">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IValueProvider&gt;</ph> does not support the retrieval of formatting information or substring values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IValueProvider&gt;</ph> 는 서식 정보 및 하위 문자열 값 검색을 지원하지 않습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IValueProvider.Value">
          <source>Implement <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextProvider&gt;</ph> in these scenarios.</source>
          <target state="translated">이러한 시나리오에서는 <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextProvider&gt;</ph> 를 구현합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IValueProvider.Value">
          <source>The following example shows an implementation of this method for a control that allows its value to be retrieved.</source>
          <target state="translated">다음 예제에서는 해당 값을 검색할 수 있도록 하는 컨트롤에 대 한이 메서드의 구현을 보여 줍니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>