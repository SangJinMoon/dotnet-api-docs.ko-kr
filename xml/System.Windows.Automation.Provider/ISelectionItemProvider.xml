<Type Name="ISelectionItemProvider" FullName="System.Windows.Automation.Provider.ISelectionItemProvider">
  <TypeSignature Language="C#" Value="public interface ISelectionItemProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISelectionItemProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.ISelectionItemProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISelectionItemProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISelectionItemProvider" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("2acad808-b2d4-452d-a407-91ff1ad167b2")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="957b2-101"><see cref="T:System.Windows.Automation.Provider.ISelectionProvider" />를 구현하는 컨테이너의 선택 가능한 개별 자식 컨트롤에 대한 UI 자동화 클라이언트 액세스를 지원하는 메서드 및 속성을 공개합니다.</span><span class="sxs-lookup"><span data-stu-id="957b2-101">Exposes methods and properties to support UI Automation client access to individual, selectable child controls of containers that implement <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="957b2-102">지원 해야 하는 UI 자동화 공급자에서 구현 되는 <xref:System.Windows.Automation.SelectionItemPattern> 컨트롤 패턴.</span><span class="sxs-lookup"><span data-stu-id="957b2-102">Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.SelectionItemPattern> control pattern.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.SelectionItemPattern" />
  </Docs>
  <Members>
    <Member MemberName="AddToSelection">
      <MemberSignature Language="C#" Value="public void AddToSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddToSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ISelectionItemProvider.AddToSelection" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddToSelection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddToSelection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="957b2-103">선택한 항목 컬렉션에 현재 요소를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="957b2-103">Adds the current element to the collection of selected items.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="957b2-104">경우에 대 한 호출의 결과 <xref:System.Windows.Automation.Provider.ISelectionItemProvider.AddToSelection%2A> 단일 항목을 선택 하면 전송 되는 <xref:System.Windows.Automation.SelectionItemPatternIdentifiers.ElementSelectedEvent> 해당 요소의; 그렇지 않으면 보낼는 <xref:System.Windows.Automation.SelectionItemPatternIdentifiers.ElementAddedToSelectionEvent> 또는 <xref:System.Windows.Automation.SelectionItemPatternIdentifiers.ElementRemovedFromSelectionEvent> 적절 하 게 합니다.</span><span class="sxs-lookup"><span data-stu-id="957b2-104">If the result of a call to <xref:System.Windows.Automation.Provider.ISelectionItemProvider.AddToSelection%2A> is that a single item is selected, then send an <xref:System.Windows.Automation.SelectionItemPatternIdentifiers.ElementSelectedEvent> for that element; otherwise send an <xref:System.Windows.Automation.SelectionItemPatternIdentifiers.ElementAddedToSelectionEvent> or <xref:System.Windows.Automation.SelectionItemPatternIdentifiers.ElementRemovedFromSelectionEvent> as appropriate.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="957b2-105">이 규칙에는 선택을 변경 하려면 사용 했던 방법 또는 컨테이너 단일 허용 하는지 또는 여러 선택 항목에 종속 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="957b2-105">This rule does not depend on whether the container allows single or multiple selections, or on what method was used to change the selection.</span></span> <span data-ttu-id="957b2-106">결과만 중요합니다.</span><span class="sxs-lookup"><span data-stu-id="957b2-106">Only the result matters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="957b2-107">다음 코드 예제에서는 선택한 항목의 컬렉션에 항목을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="957b2-107">The following example code adds the item to a collection of selected items.</span></span>  
  
 [!code-csharp[UIAISelectionProvider_ISelectionItemProvider_snip#AddToSelection](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/CSharp/ListItemFragment.cs#addtoselection)]
 [!code-vb[UIAISelectionProvider_ISelectionItemProvider_snip#AddToSelection](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/visualbasic/listitemfragment.vb#addtoselection)]  
[!code-csharp[UIAISelectionProvider_ISelectionItemProvider_snip#IsSelected](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/CSharp/ListItemFragment.cs#isselected)]
[!code-vb[UIAISelectionProvider_ISelectionItemProvider_snip#IsSelected](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/visualbasic/listitemfragment.vb#isselected)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelected">
      <MemberSignature Language="C#" Value="public bool IsSelected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSelected" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.ISelectionItemProvider.IsSelected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSelected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSelected { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="957b2-108">항목이 선택되었는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="957b2-108">Gets a value that indicates whether an item is selected.</span></span></summary>
        <value>
          <span data-ttu-id="957b2-109">요소가 선택되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="957b2-109"><see langword="true" /> if the element is selected; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="957b2-110">다음 예제 코드 반환 `true` 이 항목이 선택 된 항목의 컬렉션에 있으면 합니다.</span><span class="sxs-lookup"><span data-stu-id="957b2-110">The following example code returns `true` if this item is in the collection of selected items.</span></span>  
  
 [!code-csharp[UIAISelectionProvider_ISelectionItemProvider_snip#IsSelected](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/CSharp/ListItemFragment.cs#isselected)]
 [!code-vb[UIAISelectionProvider_ISelectionItemProvider_snip#IsSelected](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/visualbasic/listitemfragment.vb#isselected)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveFromSelection">
      <MemberSignature Language="C#" Value="public void RemoveFromSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveFromSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ISelectionItemProvider.RemoveFromSelection" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveFromSelection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveFromSelection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="957b2-111">선택한 항목 컬렉션에서 현재 요소를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="957b2-111">Removes the current element from the collection of selected items.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="957b2-112">보내기는 <xref:System.Windows.Automation.SelectionItemPatternIdentifiers.ElementRemovedFromSelectionEvent> 적절 하 게 합니다.</span><span class="sxs-lookup"><span data-stu-id="957b2-112">Send an <xref:System.Windows.Automation.SelectionItemPatternIdentifiers.ElementRemovedFromSelectionEvent> as appropriate.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="957b2-113">이 규칙에는 선택을 변경 하려면 사용 했던 방법 또는 컨테이너 단일 허용 하는지 또는 여러 선택 항목에 종속 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="957b2-113">This rule does not depend on whether the container allows single or multiple selections, or on what method was used to change the selection.</span></span> <span data-ttu-id="957b2-114">결과만 중요합니다.</span><span class="sxs-lookup"><span data-stu-id="957b2-114">Only the result matters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="957b2-115">다음 코드 예제에서는 선택한 항목의 컬렉션에서 항목을 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="957b2-115">The following example code removes the item from a collection of selected items.</span></span>  
  
 [!code-csharp[UIAISelectionProvider_ISelectionItemProvider_snip#RemoveFromSelection](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/CSharp/ListItemFragment.cs#removefromselection)]
 [!code-vb[UIAISelectionProvider_ISelectionItemProvider_snip#RemoveFromSelection](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/visualbasic/listitemfragment.vb#removefromselection)]  
[!code-csharp[UIAISelectionProvider_ISelectionItemProvider_snip#IsSelected](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/CSharp/ListItemFragment.cs#isselected)]
[!code-vb[UIAISelectionProvider_ISelectionItemProvider_snip#IsSelected](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/visualbasic/listitemfragment.vb#isselected)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ISelectionItemProvider.Select" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="957b2-116">선택한 항목을 선택 취소한 다음 현재 요소를 선택합니다.</span><span class="sxs-lookup"><span data-stu-id="957b2-116">Deselects any selected items and then selects the current element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="957b2-117">다음 코드 예제에서는 선택한 항목의 컬렉션에서 항목을 모두 지우고이 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="957b2-117">The following example code clears all items from the collection of selected items and then adds this one.</span></span>  
  
 [!code-csharp[UIAISelectionProvider_ISelectionItemProvider_snip#Select](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/CSharp/ListItemFragment.cs#select)]
 [!code-vb[UIAISelectionProvider_ISelectionItemProvider_snip#Select](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/visualbasic/listitemfragment.vb#select)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionContainer">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderSimple SelectionContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.Provider.IRawElementProviderSimple SelectionContainer" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.ISelectionItemProvider.SelectionContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectionContainer As IRawElementProviderSimple" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::Provider::IRawElementProviderSimple ^ SelectionContainer { System::Windows::Automation::Provider::IRawElementProviderSimple ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderSimple</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="957b2-118"><see cref="T:System.Windows.Automation.Provider.ISelectionProvider" />를 구현하고 호출하는 개체에서 컨테이너 역할을 하는 UI 자동화 공급자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="957b2-118">Gets the UI Automation provider that implements <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" /> and acts as the container for the calling object.</span></span></summary>
        <value><span data-ttu-id="957b2-119"><see cref="T:System.Windows.Automation.Provider.ISelectionProvider" />를 지원하는 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="957b2-119">The provider that supports <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="957b2-120">다음 예제 코드는이 목록 항목을 포함 하는 목록 상자에 대 한 UI 자동화 공급자를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="957b2-120">The following example code returns the UI Automation provider for the list box that contains this list item.</span></span>  
  
 [!code-csharp[UIAISelectionProvider_ISelectionItemProvider_snip#SelectionContainer](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/CSharp/ListItemFragment.cs#selectioncontainer)]
 [!code-vb[UIAISelectionProvider_ISelectionItemProvider_snip#SelectionContainer](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/visualbasic/listitemfragment.vb#selectioncontainer)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>