<Type Name="IRawElementProviderFragment" FullName="System.Windows.Automation.Provider.IRawElementProviderFragment">
  <TypeSignature Language="C#" Value="public interface IRawElementProviderFragment : System.Windows.Automation.Provider.IRawElementProviderSimple" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRawElementProviderFragment implements class System.Windows.Automation.Provider.IRawElementProviderSimple" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.IRawElementProviderFragment" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRawElementProviderFragment&#xA;Implements IRawElementProviderSimple" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRawElementProviderFragment : System::Windows::Automation::Provider::IRawElementProviderSimple" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Automation.Provider.IRawElementProviderSimple</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("f7063da8-8359-439c-9297-bbc5299a7d87")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="58c6d-101">목록 상자 또는 목록 항목과 같이 수준이 둘 이상인 구조체의 일부인 UI(사용자 인터페이스) 요소에 대한 메서드 및 속성을 공개합니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-101">Exposes methods and properties on user interface (UI) elements that are part of a structure more than one level deep, such as a list box or a list item.</span></span> <span data-ttu-id="58c6d-102">UI 자동화 공급자에서 구현했습니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-102">Implemented by UI Automation providers.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58c6d-103">에 조각의 루트 노드를 지원 해야 합니다는 <xref:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot> 인터페이스에서 상속 하는 <xref:System.Windows.Automation.Provider.IRawElementProviderFragment>합니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-103">The root node of the fragment must support the <xref:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot> interface, which inherits from <xref:System.Windows.Automation.Provider.IRawElementProviderFragment>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BoundingRectangle">
      <MemberSignature Language="C#" Value="public System.Windows.Rect BoundingRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Rect BoundingRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRawElementProviderFragment.BoundingRectangle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BoundingRectangle As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Rect BoundingRectangle { System::Windows::Rect get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58c6d-104">이 요소의 경계 사각형을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-104">Gets the bounding rectangle of this element.</span></span></summary>
        <value><span data-ttu-id="58c6d-105">화면 좌표로 나타낸 경계 사각형입니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-105">The bounding rectangle, in screen coordinates.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58c6d-106">오려낸 없습니다가 려 지 면 부분적으로 또는 화면에서 벗어난 요소는 경우에 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-106">No clipping is required if the element is partly obscured or partly off-screen.</span></span> <span data-ttu-id="58c6d-107"><xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen%2A> 사각형 실제로 표시 여부를 나타내는 속성을 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-107">The <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen%2A> property should be set to indicate whether the rectangle is actually visible.</span></span>  
  
 <span data-ttu-id="58c6d-108">반드시 클릭할 수 있는 경계 사각형 내의 일부 지점이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-108">Not all points within the bounding rectangle are necessarily clickable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58c6d-109">다음 예제 코드는 경계 사각형의 내부 상태에 유지 되는 <xref:System.Drawing.Rectangle?displayProperty=nameWithType>, 변환 된 <xref:System.Windows.Rect?displayProperty=nameWithType> 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-109">In the following example code, the internal state of the bounding rectangle is kept in a <xref:System.Drawing.Rectangle?displayProperty=nameWithType>, which is converted to a <xref:System.Windows.Rect?displayProperty=nameWithType> before being returned.</span></span>  
  
 [!code-csharp[UIAFragmentProvider_snip#104](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAFragmentProvider_snip/CSharp/ListItemFragment.cs#104)]
 [!code-vb[UIAFragmentProvider_snip#104](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAFragmentProvider_snip/VisualBasic/ListItemFragment.vb#104)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FragmentRoot">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderFragmentRoot FragmentRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.Provider.IRawElementProviderFragmentRoot FragmentRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRawElementProviderFragment.FragmentRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FragmentRoot As IRawElementProviderFragmentRoot" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::Provider::IRawElementProviderFragmentRoot ^ FragmentRoot { System::Windows::Automation::Provider::IRawElementProviderFragmentRoot ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderFragmentRoot</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58c6d-110">조각의 루트 노드를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-110">Retrieves the root node of the fragment.</span></span></summary>
        <value><span data-ttu-id="58c6d-111">루트 노드입니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-111">The root node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58c6d-112">구현 하는 공급자 <xref:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot> 자체를 반환 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-112">A provider that implements <xref:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot> should return itself.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58c6d-113">다음 코드 예제에서는 목록 상자 내에서 목록 항목을 같은 조각에서 요소에 대 한 구현을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-113">The following code example shows an implementation for an element in a fragment, such as a list item within a list box.</span></span>  
  
 [!code-csharp[UIAFragmentProvider_snip#105](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAFragmentProvider_snip/CSharp/ListItemFragment.cs#105)]
 [!code-vb[UIAFragmentProvider_snip#105](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAFragmentProvider_snip/VisualBasic/ListItemFragment.vb#105)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEmbeddedFragmentRoots">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderSimple[] GetEmbeddedFragmentRoots ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.IRawElementProviderSimple[] GetEmbeddedFragmentRoots() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IRawElementProviderFragment.GetEmbeddedFragmentRoots" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEmbeddedFragmentRoots () As IRawElementProviderSimple()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Automation::Provider::IRawElementProviderSimple ^&gt; ^ GetEmbeddedFragmentRoots();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderSimple[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="58c6d-114">현재 요소에 루트가 있는 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 요소 트리에 포함된 조각 루트의 배열을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-114">Retrieves an array of fragment roots that are embedded in the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element tree rooted at the current element.</span></span></summary>
        <returns><span data-ttu-id="58c6d-115">루트 조각의 배열이거나 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-115">An array of root fragments, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58c6d-116">현재 요소를 다른 호스트 하는 경우에이 메서드에 조각의 배열을 반환 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 프레임 워크입니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-116">This method returns an array of fragments only if the current element is hosting another [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] framework.</span></span> <span data-ttu-id="58c6d-117">대부분의 공급자 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-117">Most providers return `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeId">
      <MemberSignature Language="C#" Value="public int[] GetRuntimeId ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32[] GetRuntimeId() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IRawElementProviderFragment.GetRuntimeId" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRuntimeId () As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;int&gt; ^ GetRuntimeId();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="58c6d-118">요소의 런타임 식별자를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-118">Retrieves the runtime identifier of an element.</span></span></summary>
        <returns><span data-ttu-id="58c6d-119">요소의 고유 런타임 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-119">The unique run-time identifier of the element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58c6d-120">구현에서는 반환 해야 `null` 창 핸들에 해당 하는 요소에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-120">Implementations should return `null` for an element that corresponds to a window handle.</span></span> <span data-ttu-id="58c6d-121">다른 요소에 포함 된 배열을 반환 해야 <xref:System.Windows.Automation.Provider.AutomationInteropProvider.AppendRuntimeId>조각 내에서 고유한 값에 이어집니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-121">Other elements should return an array that contains <xref:System.Windows.Automation.Provider.AutomationInteropProvider.AppendRuntimeId>, followed by a value that is unique within the fragment.</span></span>  
  
 <span data-ttu-id="58c6d-122">공급자의 책임; 조각 내에서 고유성을 유지 하는 예를 들어, 각 항목 목록에 개별적으로 번호가 지정 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-122">It is the provider's responsibility to ensure uniqueness within the fragment; for example, each item in a list must be individually numbered.</span></span> <span data-ttu-id="58c6d-123">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 엔진 식별자는 번역 하 여 모든 인스턴스 간에 고유한 지 확인는 <xref:System.Windows.Automation.Provider.AutomationInteropProvider.AppendRuntimeId> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-123">The [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] engine ensures that the identifier is unique among all instances, by translating the <xref:System.Windows.Automation.Provider.AutomationInteropProvider.AppendRuntimeId> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58c6d-124">다음 코드 예제에서는 예: 목록 상자 내에서 항목 조각 내에서 요소에 의해이 메서드의 구현을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-124">The following example code shows an implementation of this method by an element within a fragment, such as an item within a list box.</span></span> <span data-ttu-id="58c6d-125">항목에 고유한 자체 식별자에 조각의이 인스턴스 및 <xref:System.Windows.Automation.Provider.AutomationInteropProvider.AppendRuntimeId> 값을 입력 하면 메서드에서 반환 되는 식별자에서 고유한 지는 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 트리 합니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-125">The item has its own unique identifier within this instance of the fragment, and the <xref:System.Windows.Automation.Provider.AutomationInteropProvider.AppendRuntimeId> value ensures that the identifier returned by the method is unique in the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] tree.</span></span>  
  
 [!code-csharp[UIAFragmentProvider_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAFragmentProvider_snip/CSharp/ListItemFragment.cs#101)]
 [!code-vb[UIAFragmentProvider_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAFragmentProvider_snip/VisualBasic/ListItemFragment.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderFragment Navigate (System.Windows.Automation.Provider.NavigateDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.IRawElementProviderFragment Navigate(valuetype System.Windows.Automation.Provider.NavigateDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IRawElementProviderFragment.Navigate(System.Windows.Automation.Provider.NavigateDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (direction As NavigateDirection) As IRawElementProviderFragment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::IRawElementProviderFragment ^ Navigate(System::Windows::Automation::Provider::NavigateDirection direction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderFragment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Automation.Provider.NavigateDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="58c6d-126">탐색할 방향입니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-126">The direction in which to navigate.</span></span></param>
        <summary><span data-ttu-id="58c6d-127">트리 내에서 지정된 방향으로 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 요소를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-127">Retrieves the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element in a specified direction within the tree.</span></span></summary>
        <returns><span data-ttu-id="58c6d-128">지정된 방향의 요소이거나, 이 방향에 요소가 없는 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-128">The element in the specified direction, or <see langword="null" /> if there is no element in that direction</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58c6d-129">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 의 구조를 정의 하는 서버의 구현은이 메서드는 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 요소 트리 합니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-129">The [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] server's implementations of this method define the structure of the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element tree.</span></span>  
  
 <span data-ttu-id="58c6d-130">탐색 가능한 지원 되는 위쪽으로 아래로 부모에 첫 번째 및 마지막 자식 및 가로로 다음 이전 형제를 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-130">Navigation must be supported upward to the parent, downward to the first and last child, and laterally to the next and previous siblings, as applicable.</span></span>  
  
 <span data-ttu-id="58c6d-131">각 자식 노드에 하나의 부모와 형제 도달 하 여 부모 개체에서 체인에 배치 해야 <xref:System.Windows.Automation.Provider.NavigateDirection.FirstChild> 및 <xref:System.Windows.Automation.Provider.NavigateDirection.LastChild>합니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-131">Each child node has only one parent and must be placed in the chain of siblings reached from the parent by <xref:System.Windows.Automation.Provider.NavigateDirection.FirstChild> and <xref:System.Windows.Automation.Provider.NavigateDirection.LastChild>.</span></span>  
  
 <span data-ttu-id="58c6d-132">형제 간의 관계 방향으로 모두 동일 해야 합니다.: A가 B의 <xref:System.Windows.Automation.Provider.NavigateDirection.PreviousSibling>, B는 A의 <xref:System.Windows.Automation.Provider.NavigateDirection.NextSibling>합니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-132">Relationships among siblings must be identical in both directions: if A is B's <xref:System.Windows.Automation.Provider.NavigateDirection.PreviousSibling>, then B is A's <xref:System.Windows.Automation.Provider.NavigateDirection.NextSibling>.</span></span> <span data-ttu-id="58c6d-133">A <xref:System.Windows.Automation.Provider.NavigateDirection.FirstChild> 아무런 <xref:System.Windows.Automation.Provider.NavigateDirection.PreviousSibling>, 및 <xref:System.Windows.Automation.Provider.NavigateDirection.LastChild> 아무런 <xref:System.Windows.Automation.Provider.NavigateDirection.NextSibling>합니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-133">A <xref:System.Windows.Automation.Provider.NavigateDirection.FirstChild> has no <xref:System.Windows.Automation.Provider.NavigateDirection.PreviousSibling>, and a <xref:System.Windows.Automation.Provider.NavigateDirection.LastChild> has no <xref:System.Windows.Automation.Provider.NavigateDirection.NextSibling>.</span></span>  
  
 <span data-ttu-id="58c6d-134">조각 루트는 부모 또는 형제; 탐색을 사용 하도록 설정 하지 않습니다. 조각 루트 간 탐색은 기본 창 공급자에서 처리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-134">Fragment roots do not enable navigation to a parent or siblings; navigation among fragment roots is handled by the default window providers.</span></span> <span data-ttu-id="58c6d-135">조각의 요소는 해당 조각 내 다른 요소에만 이동 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-135">Elements in fragments must navigate only to other elements within that fragment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58c6d-136">다음 예제 코드의 구현을 보여 줍니다. <xref:System.Windows.Automation.Provider.IRawElementProviderFragment.Navigate%2A> 단일 자식 요소를 가진 조각 루트에 의해 합니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-136">The following example code shows the implementation of <xref:System.Windows.Automation.Provider.IRawElementProviderFragment.Navigate%2A> by a fragment root that has a single child element.</span></span> <span data-ttu-id="58c6d-137">구현 하는 요소가 조각 루트 이기 때문에 부모 요소 또는 형제 요소를 탐색을 사용 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-137">Because the implementing element is a fragment root, it does not enable navigation to a parent element or sibling elements.</span></span>  
  
 [!code-csharp[UIAProvider_snip#105](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAProvider_snip/CSharp/FragmentRoot.cs#105)]
 [!code-vb[UIAProvider_snip#105](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAProvider_snip/VisualBasic/FragmentRoot.vb#105)]  
  
 <span data-ttu-id="58c6d-138">다음 예제에서는 목록 상자 내에서 단일 항목을 나타내는 조각으로 구현을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-138">The following example shows an implementation by a fragment that represents a single item within a list box.</span></span> <span data-ttu-id="58c6d-139">이 경우 요소에는 해당 부모와 형제 아니라 모든 자식을 탐색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-139">In this case, the element enables navigation to its parent and siblings, but not to any children.</span></span>  
  
 [!code-csharp[UIAFragmentProvider_snip#103](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAFragmentProvider_snip/CSharp/ListItemFragment.cs#103)]
 [!code-vb[UIAFragmentProvider_snip#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAFragmentProvider_snip/VisualBasic/ListItemFragment.vb#103)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFocus">
      <MemberSignature Language="C#" Value="public void SetFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFocus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IRawElementProviderFragment.SetFocus" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFocus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFocus();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="58c6d-140">포커스를 이 요소로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-140">Sets the focus to this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58c6d-141">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 프레임 워크는이 부분을 호스트 하는 인터페이스의 일부가이 메서드를 호출 하기 전에 이미 포커스가 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-141">The [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] framework will ensure that the part of the interface that hosts this fragment is already focused before calling this method.</span></span> <span data-ttu-id="58c6d-142">구현 내부 포커스 상태만; 업데이트 해야 예를 들어는 목록 항목을 다시 그려야으로 포커스를 가집니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-142">Your implementation should update only its internal focus state; for example, by repainting a list item to show that it has the focus.</span></span> <span data-ttu-id="58c6d-143">선호 하는 경우 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 부모 창에 초점을 설정 하지는 <xref:System.Windows.Automation.Provider.ProviderOptions.ProviderOwnsSetFocus> 옵션 <xref:System.Windows.Automation.Provider.ProviderOptions> 조각 루트에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="58c6d-143">If you prefer that [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] not focus the parent window, set the <xref:System.Windows.Automation.Provider.ProviderOptions.ProviderOwnsSetFocus> option in <xref:System.Windows.Automation.Provider.ProviderOptions> for the fragment root.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>