<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IRawElementProviderSimple.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d8da2aa266c0edcfc4d1bedd0d482ffbfb69f8c5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d8da2aa266c0edcfc4d1bedd0d482ffbfb69f8c5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Automation.Provider.IRawElementProviderSimple">
          <source>Provides methods and properties that expose basic information about a UI element.</source>
          <target state="translated">UI 요소에 대한 기본 정보를 노출하는 메서드 및 속성을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.Provider.IRawElementProviderSimple">
          <source>This interface can be implemented on UI Automation providers for simple elements such as buttons.</source>
          <target state="translated">단추와 같은 단순 요소에 대 한 UI 자동화 공급자에서이 인터페이스를 구현할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.Provider.IRawElementProviderSimple">
          <source>It can also be implemented on providers that contribute additional properties or control patterns, or override existing properties or control patterns, on an element that already has a default provider.</source>
          <target state="translated">추가 속성 또는 컨트롤 패턴을 하거나 기존 속성 또는 이미 기본 공급자가 있는 요소에서 컨트롤 패턴, 재정의 하는 공급자에는 구현할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.Provider.IRawElementProviderSimple">
          <source>Providers for complex elements must implement <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IRawElementProviderFragment&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot&gt;</ph>.</source>
          <target state="translated">복잡 한 요소에 대 한 공급자를 구현 해야 <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IRawElementProviderFragment&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.IRawElementProviderSimple.GetPatternProvider(System.Int32)">
          <source>Identifier of the pattern.</source>
          <target state="translated">패턴의 식별자입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.IRawElementProviderSimple.GetPatternProvider(System.Int32)">
          <source>Retrieves an object that provides support for a control pattern on a <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> element.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 요소에 대한 컨트롤 패턴을 지원하는 개체를 검색합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.IRawElementProviderSimple.GetPatternProvider(System.Int32)">
          <source>Object that implements the pattern interface, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the pattern is not supported.</source>
          <target state="translated">패턴 인터페이스를 구현하는 개체이거나, 패턴이 지원되지 않는 경우 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IRawElementProviderSimple.GetPatternProvider(System.Int32)">
          <source>The following example shows an implementation of <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IRawElementProviderSimple.GetPatternProvider%2A&gt;</ph> for a provider that supports only <ph id="ph2">&lt;xref:System.Windows.Automation.InvokePattern&gt;</ph>.</source>
          <target state="translated">다음 예제에서는의 구현을 보여 줍니다. <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IRawElementProviderSimple.GetPatternProvider%2A&gt;</ph> 만 지 원하는 공급자에 대 한 <ph id="ph2">&lt;xref:System.Windows.Automation.InvokePattern&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.IRawElementProviderSimple.GetPropertyValue(System.Int32)">
          <source>The property identifier.</source>
          <target state="translated">속성 식별자입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.IRawElementProviderSimple.GetPropertyValue(System.Int32)">
          <source>Retrieves the value of a property supported by the UI Automation provider.</source>
          <target state="translated">UI 자동화 공급자가 지원하는 속성 값을 검색합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.IRawElementProviderSimple.GetPropertyValue(System.Int32)">
          <source>The property value, or a <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the property is not supported by this provider, or <ph id="ph2">&lt;see cref="F:System.Windows.Automation.AutomationElementIdentifiers.NotSupported" /&gt;</ph> if it is not supported at all.</source>
          <target state="translated">속성 값이거나, 이 공급자에서 해당 속성을 지원하지 않는 경우 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이거나, 속성이 전혀 지원되지 않는 경우 <ph id="ph2">&lt;see cref="F:System.Windows.Automation.AutomationElementIdentifiers.NotSupported" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IRawElementProviderSimple.GetPropertyValue(System.Int32)">
          <source>A provider should return <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElementIdentifiers.NotSupported&gt;</ph> only if it is explicitly hiding the property value and the request is not to be passed through to other providers.</source>
          <target state="translated">공급자를 반환 해야 <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElementIdentifiers.NotSupported&gt;</ph> 속성 값이 명시적으로 숨겨져 요청 하지 않는 다른 공급자에 게 전달 될 경우에 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IRawElementProviderSimple.GetPropertyValue(System.Int32)">
          <source>The following code example shows an implementation of <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IRawElementProviderSimple.GetPropertyValue%2A&gt;</ph> for a custom button control.</source>
          <target state="translated">다음 코드 예제에서는의 구현을 보여 줍니다. <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IRawElementProviderSimple.GetPropertyValue%2A&gt;</ph> 사용자 지정 단추 컨트롤에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.Provider.IRawElementProviderSimple.HostRawElementProvider">
          <source>Gets a base provider for this element.</source>
          <target state="translated">이 요소에 대한 기본 공급자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IRawElementProviderSimple.HostRawElementProvider">
          <source>The base provider, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본 공급자 또는 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IRawElementProviderSimple.HostRawElementProvider">
          <source>This property is the UI Automation provider for the window of a custom control.</source>
          <target state="translated">이 속성은 사용자 지정 컨트롤의 창에 대 한 UI 자동화 공급자입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IRawElementProviderSimple.HostRawElementProvider">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> uses this provider in combination with your provider implementation for a control hosted in a window.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 창에서에서 호스트 컨트롤에 대 한 공급자 구현과 함께에서이 공급자를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IRawElementProviderSimple.HostRawElementProvider">
          <source>For example, the run-time identifier of the element is obtained from the host provider.</source>
          <target state="translated">예를 들어 호스트 공급자에서 요소의 런타임 식별자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IRawElementProviderSimple.HostRawElementProvider">
          <source>A host provider must be returned in any of the following cases:</source>
          <target state="translated">호스트 공급자는 다음과 같은 경우에 반환 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IRawElementProviderSimple.HostRawElementProvider">
          <source>This element is the root of a fragment.</source>
          <target state="translated">이 요소는 조각 루트입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IRawElementProviderSimple.HostRawElementProvider">
          <source>The element is a simple element such as a pushbutton.</source>
          <target state="translated">누름 단추 등 단순 요소가입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IRawElementProviderSimple.HostRawElementProvider">
          <source>The provider is a repositioning placeholder.</source>
          <target state="translated">공급자가 재배치 자리 표시자.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IRawElementProviderSimple.HostRawElementProvider">
          <source>In other cases, the property should return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">다른 경우에는 속성을 반환 해야 <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IRawElementProviderSimple.HostRawElementProvider">
          <source>The following example code shows an implementation of <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IRawElementProviderSimple.HostRawElementProvider%2A&gt;</ph> for a fragment root that is hosted in a Windows form.</source>
          <target state="translated">다음 예제 코드의 구현을 보여 줍니다. <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IRawElementProviderSimple.HostRawElementProvider%2A&gt;</ph> Windows form에서 호스트 되는 조각 루트에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.Provider.IRawElementProviderSimple.ProviderOptions">
          <source>Gets a value that specifies characteristics of the UI Automation provider; for example, whether it is a client-side or server-side provider.</source>
          <target state="translated">UI 자동화 공급자의 특성을 지정하는 값을 가져옵니다. 예를 들어 클라이언트 쪽 공급자인지 아니면 서버 쪽 공급자인지를 지정합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IRawElementProviderSimple.ProviderOptions">
          <source>Either <ph id="ph1">&lt;see cref="F:System.Windows.Automation.Provider.ProviderOptions.ClientSideProvider" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.Windows.Automation.Provider.ProviderOptions.ServerSideProvider" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Windows.Automation.Provider.ProviderOptions.ClientSideProvider" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.Windows.Automation.Provider.ProviderOptions.ServerSideProvider" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IRawElementProviderSimple.ProviderOptions">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> treats different types of providers differently.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 다양 한 유형의 공급자에서는 다르게 처리 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IRawElementProviderSimple.ProviderOptions">
          <source>For example, events from server-side providers are broadcast to all listening UI Automation client processes, but events from client-side providers remain in that client process.</source>
          <target state="translated">예를 들어 서버 쪽 공급자의 이벤트 모두 수신 대기 하는 UI 자동화 클라이언트 프로세스에 브로드캐스트되지만 클라이언트 쪽 공급자의 이벤트는 해당 클라이언트 프로세스에 남아 있습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IRawElementProviderSimple.ProviderOptions">
          <source>The following example code shows an implementation of <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IRawElementProviderSimple.ProviderOptions%2A&gt;</ph> for a server-side UI Automation provider.</source>
          <target state="translated">다음 예제 코드의 구현을 보여 줍니다. <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IRawElementProviderSimple.ProviderOptions%2A&gt;</ph> 서버 쪽 UI 자동화 공급자에 대 한 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>