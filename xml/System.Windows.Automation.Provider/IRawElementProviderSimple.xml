<Type Name="IRawElementProviderSimple" FullName="System.Windows.Automation.Provider.IRawElementProviderSimple">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="62f4042be760cacc73865ed3199f7d0decf1c05f" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37526503" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IRawElementProviderSimple" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRawElementProviderSimple" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.IRawElementProviderSimple" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRawElementProviderSimple" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRawElementProviderSimple" />
  <TypeSignature Language="F#" Value="type IRawElementProviderSimple = interface" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("d6dd68d1-86fd-4332-8666-9abedea2d24c")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides methods and properties that expose basic information about a UI element.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 단추와 같은 간단한 요소에 대 한 UI 자동화 공급자에서이 인터페이스를 구현할 수 있습니다. 추가 속성 또는 컨트롤 패턴을 하거나 기존 속성 또는 컨트롤 패턴, 기본 공급자가 이미 있는 요소에서 재정의 하는 공급자에서 구현할 수도 있습니다.  
  
 복잡 한 요소에 대 한 공급자를 구현 해야 합니다 <xref:System.Windows.Automation.Provider.IRawElementProviderFragment> 또는 <xref:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot>합니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetPatternProvider">
      <MemberSignature Language="C#" Value="public object GetPatternProvider (int patternId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetPatternProvider(int32 patternId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IRawElementProviderSimple.GetPatternProvider(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPatternProvider (patternId As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPatternProvider(int patternId);" />
      <MemberSignature Language="F#" Value="abstract member GetPatternProvider : int -&gt; obj" Usage="iRawElementProviderSimple.GetPatternProvider patternId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patternId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="patternId">Identifier of the pattern.</param>
        <summary>Retrieves an object that provides support for a control pattern on a [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element.</summary>
        <returns>Object that implements the pattern interface, or <see langword="null" /> if the pattern is not supported.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 구현을 보여 줍니다 <xref:System.Windows.Automation.Provider.IRawElementProviderSimple.GetPatternProvider%2A> 만 지 원하는 공급자에 대 한 <xref:System.Windows.Automation.InvokePattern>합니다.  
  
 [!code-csharp[UIAProvider_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAProvider_snip/CSharp/FragmentRoot.cs#101)]
 [!code-vb[UIAProvider_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAProvider_snip/VisualBasic/FragmentRoot.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public object GetPropertyValue (int propertyId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetPropertyValue(int32 propertyId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IRawElementProviderSimple.GetPropertyValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValue (propertyId As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPropertyValue(int propertyId);" />
      <MemberSignature Language="F#" Value="abstract member GetPropertyValue : int -&gt; obj" Usage="iRawElementProviderSimple.GetPropertyValue propertyId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="propertyId">The property identifier.</param>
        <summary>Retrieves the value of a property supported by the UI Automation provider.</summary>
        <returns>The property value, or a <see langword="null" /> if the property is not supported by this provider, or <see cref="F:System.Windows.Automation.AutomationElementIdentifiers.NotSupported" /> if it is not supported at all.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 공급자를 반환 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers.NotSupported> 속성 값이 명시적으로 숨겨져 되며 요청 되지 다른 공급자에 게 전달 될 경우에 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 구현을 보여 줍니다. <xref:System.Windows.Automation.Provider.IRawElementProviderSimple.GetPropertyValue%2A> 사용자 지정 단추 컨트롤에 대 한 합니다.  
  
 [!code-csharp[UIAProvider_snip#102](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAProvider_snip/CSharp/FragmentRoot.cs#102)]
 [!code-vb[UIAProvider_snip#102](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAProvider_snip/VisualBasic/FragmentRoot.vb#102)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostRawElementProvider">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderSimple HostRawElementProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.Provider.IRawElementProviderSimple HostRawElementProvider" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRawElementProviderSimple.HostRawElementProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HostRawElementProvider As IRawElementProviderSimple" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::Provider::IRawElementProviderSimple ^ HostRawElementProvider { System::Windows::Automation::Provider::IRawElementProviderSimple ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HostRawElementProvider : System.Windows.Automation.Provider.IRawElementProviderSimple" Usage="System.Windows.Automation.Provider.IRawElementProviderSimple.HostRawElementProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderSimple</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a base provider for this element.</summary>
        <value>기본 공급자 또는 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 사용자 지정 컨트롤의 창에 대 한 UI 자동화 공급자입니다. [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 창에서 호스트 된 컨트롤에 대 한 공급자 구현과 함께에서이 공급자를 사용 합니다. 예를 들어 호스트 공급자에서 요소의 런타임 식별자를 가져옵니다.  
  
 호스트 공급자는 다음과 같은 경우에 반환 되어야 합니다.  
  
-   이 요소는 조각의 루트입니다.  
  
-   요소는 누름 단추와 같은 간단한 요소가입니다.  
  
-   공급자는 재배치 자리 표시자입니다.  
  
 다른 경우에 속성을 반환 해야 `null`합니다.  
  
   
  
## Examples  
 다음 예제 코드의 구현을 보여 줍니다. <xref:System.Windows.Automation.Provider.IRawElementProviderSimple.HostRawElementProvider%2A> Windows form에서 호스트 되는 조각 루트에 대 한 합니다.  
  
 [!code-csharp[UIAProvider_snip#103](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAProvider_snip/CSharp/FragmentRoot.cs#103)]
 [!code-vb[UIAProvider_snip#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAProvider_snip/VisualBasic/FragmentRoot.vb#103)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderOptions">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.ProviderOptions ProviderOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.Provider.ProviderOptions ProviderOptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRawElementProviderSimple.ProviderOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderOptions As ProviderOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::Provider::ProviderOptions ProviderOptions { System::Windows::Automation::Provider::ProviderOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.ProviderOptions : System.Windows.Automation.Provider.ProviderOptions" Usage="System.Windows.Automation.Provider.IRawElementProviderSimple.ProviderOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.ProviderOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that specifies characteristics of the UI Automation provider; for example, whether it is a client-side or server-side provider.</summary>
        <value>중 하나 <see cref="F:System.Windows.Automation.Provider.ProviderOptions.ClientSideProvider" /> 또는 <see cref="F:System.Windows.Automation.Provider.ProviderOptions.ServerSideProvider" />합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 다양 한 유형의 공급자에서는 다르게 처리 합니다. 예를 들어, 서버 쪽 공급자의 이벤트를에서 모두 수신 대기 하는 UI 자동화 클라이언트 프로세스에 브로드캐스트 됩니다 있지만 해당 클라이언트 프로세스에서 클라이언트 쪽 공급자의 이벤트를에서 유지 합니다.  
  
   
  
## Examples  
 다음 예제 코드의 구현을 보여 줍니다. <xref:System.Windows.Automation.Provider.IRawElementProviderSimple.ProviderOptions%2A> 서버 쪽 UI 자동화 공급자에 대 한 합니다.  
  
 [!code-csharp[UIAProvider_snip#104](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAProvider_snip/CSharp/FragmentRoot.cs#104)]
 [!code-vb[UIAProvider_snip#104](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAProvider_snip/VisualBasic/FragmentRoot.vb#104)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>