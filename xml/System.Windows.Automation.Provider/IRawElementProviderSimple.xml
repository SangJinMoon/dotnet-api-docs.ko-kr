<Type Name="IRawElementProviderSimple" FullName="System.Windows.Automation.Provider.IRawElementProviderSimple">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="64251ed14770018845d765711029c9b5c998aa0b" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39805846" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IRawElementProviderSimple" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRawElementProviderSimple" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.IRawElementProviderSimple" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRawElementProviderSimple" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRawElementProviderSimple" />
  <TypeSignature Language="F#" Value="type IRawElementProviderSimple = interface" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.Guid("d6dd68d1-86fd-4332-8666-9abedea2d24c")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d8777-101">UI 요소에 대한 기본 정보를 노출하는 메서드 및 속성을 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d8777-101">Provides methods and properties that expose basic information about a UI element.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8777-102">단추와 같은 간단한 요소에 대 한 UI 자동화 공급자에서이 인터페이스를 구현할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d8777-102">This interface can be implemented on UI Automation providers for simple elements such as buttons.</span></span> <span data-ttu-id="d8777-103">추가 속성 또는 컨트롤 패턴을 하거나 기존 속성 또는 컨트롤 패턴, 기본 공급자가 이미 있는 요소에서 재정의 하는 공급자에서 구현할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d8777-103">It can also be implemented on providers that contribute additional properties or control patterns, or override existing properties or control patterns, on an element that already has a default provider.</span></span>  
  
 <span data-ttu-id="d8777-104">복잡 한 요소에 대 한 공급자를 구현 해야 합니다 <xref:System.Windows.Automation.Provider.IRawElementProviderFragment> 또는 <xref:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot>합니다.</span><span class="sxs-lookup"><span data-stu-id="d8777-104">Providers for complex elements must implement <xref:System.Windows.Automation.Provider.IRawElementProviderFragment> or <xref:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetPatternProvider">
      <MemberSignature Language="C#" Value="public object GetPatternProvider (int patternId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetPatternProvider(int32 patternId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IRawElementProviderSimple.GetPatternProvider(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPatternProvider (patternId As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPatternProvider(int patternId);" />
      <MemberSignature Language="F#" Value="abstract member GetPatternProvider : int -&gt; obj" Usage="iRawElementProviderSimple.GetPatternProvider patternId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patternId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="patternId">
          <span data-ttu-id="d8777-105">패턴의 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8777-105">Identifier of the pattern.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8777-106">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 요소에 대한 컨트롤 패턴을 지원하는 개체를 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8777-106">Retrieves an object that provides support for a control pattern on a [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8777-107">패턴 인터페이스를 구현하는 개체이거나, 패턴이 지원되지 않는 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8777-107">Object that implements the pattern interface, or <see langword="null" /> if the pattern is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d8777-108">다음 예제에서는 구현을 보여 줍니다 <xref:System.Windows.Automation.Provider.IRawElementProviderSimple.GetPatternProvider%2A> 만 지 원하는 공급자에 대 한 <xref:System.Windows.Automation.InvokePattern>합니다.</span><span class="sxs-lookup"><span data-stu-id="d8777-108">The following example shows an implementation of <xref:System.Windows.Automation.Provider.IRawElementProviderSimple.GetPatternProvider%2A> for a provider that supports only <xref:System.Windows.Automation.InvokePattern>.</span></span>  
  
 [!code-csharp[UIAProvider_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAProvider_snip/CSharp/FragmentRoot.cs#101)]
 [!code-vb[UIAProvider_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAProvider_snip/VisualBasic/FragmentRoot.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public object GetPropertyValue (int propertyId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetPropertyValue(int32 propertyId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IRawElementProviderSimple.GetPropertyValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValue (propertyId As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPropertyValue(int propertyId);" />
      <MemberSignature Language="F#" Value="abstract member GetPropertyValue : int -&gt; obj" Usage="iRawElementProviderSimple.GetPropertyValue propertyId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="propertyId">
          <span data-ttu-id="d8777-109">속성 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8777-109">The property identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8777-110">UI 자동화 공급자가 지원하는 속성 값을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8777-110">Retrieves the value of a property supported by the UI Automation provider.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8777-111">속성 값이거나, 이 공급자에서 해당 속성을 지원하지 않는 경우 <see langword="null" />이거나, 속성이 전혀 지원되지 않는 경우 <see cref="F:System.Windows.Automation.AutomationElementIdentifiers.NotSupported" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8777-111">The property value, or a <see langword="null" /> if the property is not supported by this provider, or <see cref="F:System.Windows.Automation.AutomationElementIdentifiers.NotSupported" /> if it is not supported at all.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8777-112">공급자를 반환 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers.NotSupported> 속성 값이 명시적으로 숨겨져 되며 요청 되지 다른 공급자에 게 전달 될 경우에 합니다.</span><span class="sxs-lookup"><span data-stu-id="d8777-112">A provider should return <xref:System.Windows.Automation.AutomationElementIdentifiers.NotSupported> only if it is explicitly hiding the property value and the request is not to be passed through to other providers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8777-113">다음 코드 예제에서는 구현을 보여 줍니다. <xref:System.Windows.Automation.Provider.IRawElementProviderSimple.GetPropertyValue%2A> 사용자 지정 단추 컨트롤에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="d8777-113">The following code example shows an implementation of <xref:System.Windows.Automation.Provider.IRawElementProviderSimple.GetPropertyValue%2A> for a custom button control.</span></span>  
  
 [!code-csharp[UIAProvider_snip#102](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAProvider_snip/CSharp/FragmentRoot.cs#102)]
 [!code-vb[UIAProvider_snip#102](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAProvider_snip/VisualBasic/FragmentRoot.vb#102)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostRawElementProvider">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderSimple HostRawElementProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.Provider.IRawElementProviderSimple HostRawElementProvider" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRawElementProviderSimple.HostRawElementProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HostRawElementProvider As IRawElementProviderSimple" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::Provider::IRawElementProviderSimple ^ HostRawElementProvider { System::Windows::Automation::Provider::IRawElementProviderSimple ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HostRawElementProvider : System.Windows.Automation.Provider.IRawElementProviderSimple" Usage="System.Windows.Automation.Provider.IRawElementProviderSimple.HostRawElementProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderSimple</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8777-114">이 요소에 대한 기본 공급자를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8777-114">Gets a base provider for this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8777-115">기본 공급자 또는 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8777-115">The base provider, or <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8777-116">이 속성은 사용자 지정 컨트롤의 창에 대 한 UI 자동화 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="d8777-116">This property is the UI Automation provider for the window of a custom control.</span></span> [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]<span data-ttu-id="d8777-117"> 창에서 호스트 된 컨트롤에 대 한 공급자 구현과 함께에서이 공급자를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="d8777-117"> uses this provider in combination with your provider implementation for a control hosted in a window.</span></span> <span data-ttu-id="d8777-118">예를 들어 호스트 공급자에서 요소의 런타임 식별자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d8777-118">For example, the run-time identifier of the element is obtained from the host provider.</span></span>  
  
 <span data-ttu-id="d8777-119">호스트 공급자는 다음과 같은 경우에 반환 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d8777-119">A host provider must be returned in any of the following cases:</span></span>  
  
-   <span data-ttu-id="d8777-120">이 요소는 조각의 루트입니다.</span><span class="sxs-lookup"><span data-stu-id="d8777-120">This element is the root of a fragment.</span></span>  
  
-   <span data-ttu-id="d8777-121">요소는 누름 단추와 같은 간단한 요소가입니다.</span><span class="sxs-lookup"><span data-stu-id="d8777-121">The element is a simple element such as a pushbutton.</span></span>  
  
-   <span data-ttu-id="d8777-122">공급자는 재배치 자리 표시자입니다.</span><span class="sxs-lookup"><span data-stu-id="d8777-122">The provider is a repositioning placeholder.</span></span>  
  
 <span data-ttu-id="d8777-123">다른 경우에 속성을 반환 해야 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="d8777-123">In other cases, the property should return `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8777-124">다음 예제 코드의 구현을 보여 줍니다. <xref:System.Windows.Automation.Provider.IRawElementProviderSimple.HostRawElementProvider%2A> Windows form에서 호스트 되는 조각 루트에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="d8777-124">The following example code shows an implementation of <xref:System.Windows.Automation.Provider.IRawElementProviderSimple.HostRawElementProvider%2A> for a fragment root that is hosted in a Windows form.</span></span>  
  
 [!code-csharp[UIAProvider_snip#103](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAProvider_snip/CSharp/FragmentRoot.cs#103)]
 [!code-vb[UIAProvider_snip#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAProvider_snip/VisualBasic/FragmentRoot.vb#103)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderOptions">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.ProviderOptions ProviderOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.Provider.ProviderOptions ProviderOptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRawElementProviderSimple.ProviderOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderOptions As ProviderOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::Provider::ProviderOptions ProviderOptions { System::Windows::Automation::Provider::ProviderOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.ProviderOptions : System.Windows.Automation.Provider.ProviderOptions" Usage="System.Windows.Automation.Provider.IRawElementProviderSimple.ProviderOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.ProviderOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8777-125">UI 자동화 공급자의 특성을 지정하는 값을 가져옵니다. 예를 들어 클라이언트 쪽 공급자인지 아니면 서버 쪽 공급자인지를 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8777-125">Gets a value that specifies characteristics of the UI Automation provider; for example, whether it is a client-side or server-side provider.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8777-126">
            <see cref="F:System.Windows.Automation.Provider.ProviderOptions.ClientSideProvider" /> 또는 <see cref="F:System.Windows.Automation.Provider.ProviderOptions.ServerSideProvider" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8777-126">Either <see cref="F:System.Windows.Automation.Provider.ProviderOptions.ClientSideProvider" /> or <see cref="F:System.Windows.Automation.Provider.ProviderOptions.ServerSideProvider" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]<span data-ttu-id="d8777-127"> 다양 한 유형의 공급자에서는 다르게 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="d8777-127"> treats different types of providers differently.</span></span> <span data-ttu-id="d8777-128">예를 들어, 서버 쪽 공급자의 이벤트를에서 모두 수신 대기 하는 UI 자동화 클라이언트 프로세스에 브로드캐스트 됩니다 있지만 해당 클라이언트 프로세스에서 클라이언트 쪽 공급자의 이벤트를에서 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="d8777-128">For example, events from server-side providers are broadcast to all listening UI Automation client processes, but events from client-side providers remain in that client process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8777-129">다음 예제 코드의 구현을 보여 줍니다. <xref:System.Windows.Automation.Provider.IRawElementProviderSimple.ProviderOptions%2A> 서버 쪽 UI 자동화 공급자에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="d8777-129">The following example code shows an implementation of <xref:System.Windows.Automation.Provider.IRawElementProviderSimple.ProviderOptions%2A> for a server-side UI Automation provider.</span></span>  
  
 [!code-csharp[UIAProvider_snip#104](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAProvider_snip/CSharp/FragmentRoot.cs#104)]
 [!code-vb[UIAProvider_snip#104](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAProvider_snip/VisualBasic/FragmentRoot.vb#104)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>