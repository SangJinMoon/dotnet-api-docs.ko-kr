<Type Name="IRawElementProviderFragmentRoot" FullName="System.Windows.Automation.Provider.IRawElementProviderFragmentRoot">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2cc6bbaf23ca76a63a416b18e06d5778705dafe5" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36571403" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IRawElementProviderFragmentRoot : System.Windows.Automation.Provider.IRawElementProviderFragment" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRawElementProviderFragmentRoot implements class System.Windows.Automation.Provider.IRawElementProviderFragment, class System.Windows.Automation.Provider.IRawElementProviderSimple" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRawElementProviderFragmentRoot&#xA;Implements IRawElementProviderFragment" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRawElementProviderFragmentRoot : System::Windows::Automation::Provider::IRawElementProviderFragment" />
  <TypeSignature Language="F#" Value="type IRawElementProviderFragmentRoot = interface&#xA;    interface IRawElementProviderFragment&#xA;    interface IRawElementProviderSimple" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Automation.Provider.IRawElementProviderFragment</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("620ce2a5-ab8f-40a9-86cb-de3c75599b58")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>루트 요소에 대한 메서드 및 속성을 조각에 노출합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 인터페이스는 프레임 워크; 내에서 루트 요소에 의해 구현 됩니다. 예를 들어 창 내에서 목록 상자입니다. 목록 항목과 같은 동일한 조각에서 다른 요소는 구현에서 <xref:System.Windows.Automation.Provider.IRawElementProviderFragment> 인터페이스입니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ElementProviderFromPoint">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderFragment ElementProviderFromPoint (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.IRawElementProviderFragment ElementProviderFromPoint(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot.ElementProviderFromPoint(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function ElementProviderFromPoint (x As Double, y As Double) As IRawElementProviderFragment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::IRawElementProviderFragment ^ ElementProviderFromPoint(double x, double y);" />
      <MemberSignature Language="F#" Value="abstract member ElementProviderFromPoint : double * double -&gt; System.Windows.Automation.Provider.IRawElementProviderFragment" Usage="iRawElementProviderFragmentRoot.ElementProviderFromPoint (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderFragment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">X 좌표입니다.</param>
        <param name="y">Y 좌표입니다.</param>
        <summary>지정된 지점에 있는 이 조각에서 요소를 검색합니다.</summary>
        <returns>존재하는 경우 지정된 지점에서 자식 요소의 공급자이거나 지점이 이 요소에 있지만 자식 요소에 없는 경우 루트 공급자입니다. 그렇지 않으면 <see langword="null" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 조각에서 호스트 되는 다른 프레임 워크에서 요소의 지점이 있으면 메서드가 해당 조각을 호스팅하는 요소를 반환 합니다.  
  
 반환 된 공급자는 요소에 지정된 된 지점에 마우스 입력을 수신 하 게 일치 해야 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 메서드는 스크롤할 수 없는 목록 상자에 대 한 가능한 한 구현을 보여 줍니다. 지정된 된 지점에 목록 항목의 인덱스 각 항목의 높이 사용 하 여 계산 하 고 해당 시점에 항목 반환 됩니다. 항목이 해당 시점에 없으면 (예를 들어 목록 상자의 빈 영역 이므로 null 참조가 반환 (`Nothing`).  
  
 [!code-csharp[UIAFragmentProvider_snip#106](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAFragmentProvider_snip/CSharp/ListFragment.cs#106)]
 [!code-vb[UIAFragmentProvider_snip#106](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAFragmentProvider_snip/VisualBasic/ListFragment.vb#106)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.Provider.IRawElementProviderFragment.GetEmbeddedFragmentRoots" />
      </Docs>
    </Member>
    <Member MemberName="GetFocus">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderFragment GetFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.IRawElementProviderFragment GetFocus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot.GetFocus" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFocus () As IRawElementProviderFragment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::IRawElementProviderFragment ^ GetFocus();" />
      <MemberSignature Language="F#" Value="abstract member GetFocus : unit -&gt; System.Windows.Automation.Provider.IRawElementProviderFragment" Usage="iRawElementProviderFragmentRoot.GetFocus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderFragment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 조각에서 입력 포커스가 있는 요소를 검색합니다.</summary>
        <returns>이 조각에 입력 포커스가 있는 요소가 있으면 해당 요소의 공급자이고, 그렇지 않으면 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 조각에서 호스트 되는 다른 프레임 워크의 요소에 포커스가 있으면 메서드가 해당 조각을 호스팅하는 요소를 반환 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 목록 상자에 대 한이 메서드의 가능한 한 구현을 보여 줍니다. 목록에서 현재 선택 된 항목을 반환 합니다.  
  
 [!code-csharp[UIAFragmentProvider_snip#107](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAFragmentProvider_snip/CSharp/ListFragment.cs#107)]
 [!code-vb[UIAFragmentProvider_snip#107](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAFragmentProvider_snip/VisualBasic/ListFragment.vb#107)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.Provider.IRawElementProviderFragment.GetEmbeddedFragmentRoots" />
      </Docs>
    </Member>
  </Members>
</Type>