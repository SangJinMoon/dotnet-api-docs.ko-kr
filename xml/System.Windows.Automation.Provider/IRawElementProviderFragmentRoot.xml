<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IRawElementProviderFragmentRoot.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5071b86daa6cbd45e40bc9b67c2520568ec00579f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">071b86daa6cbd45e40bc9b67c2520568ec00579f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot">
          <source>Exposes methods and properties on the root element in a fragment.</source>
          <target state="translated">루트 요소에 대한 메서드 및 속성을 조각에 노출합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot">
          <source>This interface is implemented by a root element within a framework; for example, a list box within a window.</source>
          <target state="translated">이 인터페이스는 프레임 워크; 내에서 루트 요소에 의해 구현 됩니다. 예를 들어 창 내에서 목록 상자입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot">
          <source>Other elements in the same fragment, such as list items, implement the <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IRawElementProviderFragment&gt;</ph> interface.</source>
          <target state="translated">목록 항목과 같은 동일한 조각에서 다른 요소는 구현에서 <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IRawElementProviderFragment&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot.ElementProviderFromPoint(System.Double,System.Double)">
          <source>The X coordinate,.</source>
          <target state="translated">X 좌표입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot.ElementProviderFromPoint(System.Double,System.Double)">
          <source>The Y coordinate.</source>
          <target state="translated">Y 좌표입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot.ElementProviderFromPoint(System.Double,System.Double)">
          <source>Retrieves the element in this fragment that is at the specified point.</source>
          <target state="translated">지정된 지점에 있는 이 조각에서 요소를 검색합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot.ElementProviderFromPoint(System.Double,System.Double)">
          <source>The provider for the child element at the specified point, if one exists, or the root provider if the point is on this element but not on any child element.</source>
          <target state="translated">존재하는 경우 지정된 지점에서 자식 요소의 공급자이거나 지점이 이 요소에 있지만 자식 요소에 없는 경우 루트 공급자입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot.ElementProviderFromPoint(System.Double,System.Double)">
          <source>Otherwise returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">그렇지 않으면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot.ElementProviderFromPoint(System.Double,System.Double)">
          <source>If the point is on an element in another framework that is hosted by this fragment, the method returns the element that hosts that fragment.</source>
          <target state="translated">이 조각에서 호스트 되는 다른 프레임 워크에서 요소의 지점이 있으면 메서드가 해당 조각을 호스팅하는 요소를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot.ElementProviderFromPoint(System.Double,System.Double)">
          <source>The returned provider should correspond to the element that would receive mouse input at the specified point.</source>
          <target state="translated">반환 된 공급자는 요소에 지정된 된 지점에 마우스 입력을 수신 하 게 일치 해야 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot.ElementProviderFromPoint(System.Double,System.Double)">
          <source>The following code example shows one possible implementation of this method for a non-scrolling list box.</source>
          <target state="translated">다음 코드 예제에서는이 메서드는 스크롤할 수 없는 목록 상자에 대 한 가능한 한 구현을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot.ElementProviderFromPoint(System.Double,System.Double)">
          <source>The index of the list item at the specified point is calculated using the height of each item, and the item at that point is returned.</source>
          <target state="translated">지정된 된 지점에 목록 항목의 인덱스 각 항목의 높이 사용 하 여 계산 하 고 해당 시점에 항목 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot.ElementProviderFromPoint(System.Double,System.Double)">
          <source>If no item exists at that point (for example, it is a blank area of the list box, the method returns a null reference (<ph id="ph1">`Nothing`</ph>).</source>
          <target state="translated">항목이 해당 시점에 없으면 (예를 들어 목록 상자의 빈 영역 이므로 null 참조가 반환 (<ph id="ph1">`Nothing`</ph>).</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot.GetFocus">
          <source>Retrieves the element in this fragment that has the input focus.</source>
          <target state="translated">이 조각에서 입력 포커스가 있는 요소를 검색합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot.GetFocus">
          <source>The provider for the element in this fragment that has the input focus, if any; otherwise, a null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated">이 조각에 입력 포커스가 있는 요소가 있으면 해당 요소의 공급자이고, 그렇지 않으면 null 참조(Visual Basic의 경우 <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>)입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot.GetFocus">
          <source>If the focus is on an element in another framework that is hosted by this fragment, the method returns the element that hosts that fragment.</source>
          <target state="translated">이 조각에서 호스트 되는 다른 프레임 워크의 요소에 포커스가 있으면 메서드가 해당 조각을 호스팅하는 요소를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot.GetFocus">
          <source>The following code example shows one possible implementation of this method for a list box.</source>
          <target state="translated">다음 코드 예제에서는 목록 상자에 대 한이 메서드의 가능한 한 구현을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot.GetFocus">
          <source>It returns the currently selected item in the list.</source>
          <target state="translated">목록에서 현재 선택 된 항목을 반환 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>