<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ComContractElement.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac51ccc0a3a59cc97bc42a1b56428a2ab7ce41b1030.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1ccc0a3a59cc97bc42a1b56428a2ab7ce41b1030</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Configuration.ComContractElement">
          <source>Specifies a COM+ integration service contract.</source>
          <target state="translated">COM+ 통합 서비스 계약을 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Configuration.ComContractElement">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Configuration.ComContractElement">
          <source>COM+ integration service contracts are currently restricted to the "<ph id="ph1">http://tempuri.org</ph>" namespace, and the contract name is derived from the supporting COM interface.</source>
          <target state="translated">COM + 통합 서비스 계약은 현재 제한 되며는 "<ph id="ph1">http://tempuri.org</ph>" 네임 스페이스 및 계약 이름은 지원 COM 인터페이스에서 파생 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Configuration.ComContractElement">
          <source>You can, however, specify alternatives by using the <ph id="ph1">`comContracts`</ph> section in the configuration file.</source>
          <target state="translated">그러나 구성 파일에서 <ph id="ph1">`comContracts`</ph> 섹션을 사용하여 대안을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Configuration.ComContractElement">
          <source>You can use the following configuration to specify the namespace, contract name, and user defined types to be included.</source>
          <target state="translated">다음 구성을 사용하여, 포함할 네임스페이스, 계약 이름 및 사용자 정의 형식을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Configuration.ComContractElement">
          <source>You can also specify other settings for a service contract</source>
          <target state="translated">또한 서비스 계약에 대해 다른 설정을 지정할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Configuration.ComContractElement">
          <source>When the service is initialized, the specified namespaces and contract names are applied to the generated service descriptions.</source>
          <target state="translated">지정된 네임스페이스와 계약 이름은 서비스가 초기화될 때 생성된 서비스 설명에 적용됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Configuration.ComContractElement">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Configuration.ComContractElement" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Configuration.ComContractElement" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Configuration.ComContractElement.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Configuration.ComContractElement" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Configuration.ComContractElement" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Configuration.ComContractElement.#ctor(System.String)">
          <source>A string that contains the type of contract.</source>
          <target state="translated">계약의 형식을 포함하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Configuration.ComContractElement.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Configuration.ComContractElement" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Configuration.ComContractElement" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Configuration.ComContractElement.Contract">
          <source>Gets or sets the contract type.</source>
          <target state="translated">계약 형식을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.Contract">
          <source>The contract type.</source>
          <target state="translated">계약 형식입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Configuration.ComContractElement.ExposedMethods">
          <source>Gets a collection of COM+ methods that are exposed when the interface on a COM+ component is exposed as a Web service.</source>
          <target state="translated">COM+ 구성 요소의 인터페이스가 웹 서비스로 공개될 때 공개되는 COM+ 메서드 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.ExposedMethods">
          <source>The collection of COM+ methods that are exposed when the interface on a COM+ component is exposed as a Web service.</source>
          <target state="translated">COM+ 구성 요소의 인터페이스가 웹 서비스로 공개될 때 노출되는 COM+ 메서드 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.ExposedMethods">
          <source>The COM+ integration configuration tool (ComSvcConfig.exe) can be used to add specific methods from a COM interface to appear on the generated service contract.</source>
          <target state="translated">COM+ 통합 구성 도구(ComSvcConfig.exe)는 COM 인터페이스의 특정 메서드를 생성된 서비스 계약에 나타나도록 추가하는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.ExposedMethods">
          <source>For example, you can use the following command to add the three named methods from the <ph id="ph1">`IFinances`</ph> COM interface on the <ph id="ph2">`ItemOrders.Financial`</ph> component, to the generated service contract.</source>
          <target state="translated">예를 들어, 생성된 서비스 계약에 <ph id="ph1">`IFinances`</ph> 구성 요소 <ph id="ph2">`ItemOrders.Financial`</ph> COM 인터페이스의 명명된 메서드 3개를 추가하기 위해 다음 명령을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.ExposedMethods">
          <source>When you run the ComSvcConfig.exe tool, it then generates the following service contract listing the previously mentioned methods as <ph id="ph1">`exposedMethod`</ph> elements.</source>
          <target state="translated">ComSvcConfig.exe 도구를 실행하면 위의 메서드를 <ph id="ph1">`exposedMethod`</ph> 요소로 나열하는 다음 서비스 계약이 생성됩니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.ExposedMethods">
          <source>At service initialization time, the runtime attempts to generate a service contract by reflecting over and adding only the methods included in the list of <ph id="ph1">`exposedMethod`</ph> elements.</source>
          <target state="translated">서비스 초기화 시 런타임에서는 <ph id="ph1">`exposedMethod`</ph> 요소의 목록에 포함된 메서드만 검토하고 추가하는 방법으로 서비스 계약을 생성하려고 시도합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.ExposedMethods">
          <source>A trace is produced for every interface method that is not included on the service contract.</source>
          <target state="translated">서비스 계약에 포함되지 않은 모든 인터페이스 메서드에 대해서는 추적이 생성됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Configuration.ComContractElement.Name">
          <source>Gets or sets the contract name.</source>
          <target state="translated">계약 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.Name">
          <source>The contract name.</source>
          <target state="translated">계약 이름입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Configuration.ComContractElement.Namespace">
          <source>Gets or sets the contract namespace.</source>
          <target state="translated">계약 네임스페이스를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.Namespace">
          <source>The contract namespace.</source>
          <target state="translated">계약 네임스페이스입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Configuration.ComContractElement.PersistableTypes">
          <source>Gets all the persistable types.</source>
          <target state="translated">모든 지속 형식을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.PersistableTypes">
          <source>The persistable types.</source>
          <target state="translated">지속 형식입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Configuration.ComContractElement.RequiresSession">
          <source>Gets or sets a Boolean value that specifies whether the contract can only be used on sessionful bindings.</source>
          <target state="translated">계약을 세션 바인딩에서만 사용할 수 있는지 여부를 지정하는 부울 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.RequiresSession">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the contract can only be used on sessionful bindings; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">계약을 세션 바인딩에서만 사용할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.RequiresSession">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.RequiresSession">
          <source>When the service is initialized, the integration runtime ensures that this setting is consistent with the type of binding to be used.</source>
          <target state="translated">서비스가 초기화될 때 통합 런타임에서는 사용될 바인딩 형식과 이 설정이 일치하는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.RequiresSession">
          <source>An exception is generated if one or more of the bindings for the contract are in conflict.</source>
          <target state="translated">계약의 바인딩 중 하나 이상이 충돌할 경우 예외가 생성됩니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.RequiresSession">
          <source>If this property is <ph id="ph1">`false`</ph>, a one-way channel is in use and there are any [out] parameters, an exception is also generated.</source>
          <target state="translated">이 속성이 <ph id="ph1">`false`</ph>이고 단방향 채널을 사용하며 [out] 매개 변수가 있을 경우에도 예외가 생성됩니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes">
          <source>Gets a collection of User Defined Types (UDT) that is to be included in the service contract.</source>
          <target state="translated">서비스 계약에 포함될 UDT(사용자 정의 형식) 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes">
          <source>The collection of User Defined Types (UDT).</source>
          <target state="translated">UDT(사용자 정의 형식)의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes">
          <source>The COM+ integration runtime creates services by inspecting the type library.</source>
          <target state="translated">COM+ 통합 런타임에서는 형식 라이브러리를 검사하여 서비스를 생성합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes">
          <source>When a COM+ component contains methods that pass a VARIANT, the system cannot determine the actual types to be passed prior to runtime.</source>
          <target state="translated">COM+ 구성 요소에 VARIANT를 전달하는 메서드가 포함될 경우 시스템에서 런타임 전에 전달될 실제 형식을 확인할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes">
          <source>Therefore, when you attempt to pass a User Defined Type (UDT) within a VARIANT, it fails because it is not a known type for serialization.</source>
          <target state="translated">따라서 VARIANT 내에서 UDT(사용자 정의 형식)를 전달하려고 시도하면 알려진 serialization 형식이 아니므로 실패합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes">
          <source>To circumvent this problem, you can add the UDTs to the configuration file so that they can be included as known types on the appropriate service contract.</source>
          <target state="translated">이 문제를 방지하기 위해 UDT를 구성 파일에 추가함으로써 적절한 서비스 계약에 알려진 형식으로 포함되게 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes">
          <source>In order to do so, you have to uniquely identify the UDT and the contract(s), that is, the original COM interface(s) that uses it.</source>
          <target state="translated">그러기 위해서는 UDT와 계약, 즉 이를 사용하는 원래 COM 인터페이스를 고유하게 식별해야 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes">
          <source>The following example demonstrates adding two specific UDTs to the &lt;<ph id="ph1">`userDefinedTypes`</ph>&gt; section of the configuration file for this purpose.</source>
          <target state="translated">다음 예제에서는 이러한 목적으로 구성 파일의 &lt;<ph id="ph1">`userDefinedTypes`</ph>&gt; 섹션에 특정 UDT 두 개를 추가하는 것을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes">
          <source>The attributes of the &lt;<ph id="ph1">`userDefinedType`</ph>&gt; element are defined as follows:</source>
          <target state="translated">특성은 &lt;<ph id="ph1">`userDefinedType`</ph>&gt; 요소는 다음과 같이 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes">
          <source><ph id="ph1">`typeName`</ph>: An optional attribute that provides the readable type name.</source>
          <target state="translated"><ph id="ph1">`typeName`</ph>: 읽을 수 있는 형식 이름을 제공하는 선택적 특성입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes">
          <source>This is not used by the runtime but helps a reader to distinguish the types.</source>
          <target state="translated">이 특성은 런타임에서 사용되지 않지만, 판독기에서 형식을 구별할 때 도움이 됩니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes">
          <source><ph id="ph1">`typeLibID`</ph>: A GUID string that specifies the registered type library that defines the type.</source>
          <target state="translated"><ph id="ph1">`typeLibID`</ph>: 형식을 정의하는 등록된 형식 라이브러리를 지정하는 GUID 문자열입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes">
          <source><ph id="ph1">`typeLibVersion`</ph>: A string that specifies the type library version that defines the type.</source>
          <target state="translated"><ph id="ph1">`typeLibVersion`</ph>: 형식을 정의하는 형식 라이브러리 버전을 지정하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes">
          <source><ph id="ph1">`typeDefID`</ph>: A GUID string that specifies the specific UDT type within the registered type library.</source>
          <target state="translated"><ph id="ph1">`typeDefID`</ph>: 등록된 형식 라이브러리에 있는 특정 UDT 형식을 지정하는 GUID 문자열입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes">
          <source>When the service is initialized, the integration runtime looks up the specified types and adds them to the known types collection for the specified contracts.</source>
          <target state="translated">서비스가 초기화될 때 통합 런타임에서는 지정된 형식을 찾아 지정된 계약의 알려진 형식 컬렉션에 이를 추가합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>