<Type Name="VisualBasicSettingsConverter" FullName="Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsConverter">
  <TypeSignature Language="C#" Value="public sealed class VisualBasicSettingsConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit VisualBasicSettingsConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsConverter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class VisualBasicSettingsConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualBasicSettingsConverter sealed : System::ComponentModel::TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c24f7-101"><see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> 인스턴스를 지정한 형식으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="c24f7-101">Converts a <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> instance to the specified type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c24f7-102"><xref:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsConverter>는 XAML에서 Visual Basic 식을 쉽게 deserialization을 수행할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="c24f7-102"><xref:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsConverter> facilitates the deserialization of Visual Basic expressions from XAML.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualBasicSettingsConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualBasicSettingsConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c24f7-103"><see cref="T:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsConverter" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="c24f7-103">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="c24f7-104">변환에 사용되는 컨텍스트 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="c24f7-104">Context information that is used for conversion.</span></span></param>
        <param name="sourceType"><span data-ttu-id="c24f7-105">변환할 원본 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="c24f7-105">The type to convert from.</span></span></param>
        <summary><span data-ttu-id="c24f7-106">지정한 형식의 개체를 <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> 인스턴스로 변환할 수 있는지 여부를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="c24f7-106">Determines whether an object of the specified type can be converted to a <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> instance.</span></span></summary>
        <returns>
          <span data-ttu-id="c24f7-107">다른 형식을 지정된 형식으로 변환할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c24f7-107"><see langword="true" /> if the specified type can be converted from; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c24f7-108">경우 `sourceType` 는 <xref:System.String>,이 메서드가 반환 `true`고, 그렇지 않으면, 기본 클래스 메서드를 호출 하 여 결정 <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="c24f7-108">If `sourceType` is a <xref:System.String>, this method returns `true`; otherwise, the determination is made by calling the base class method <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="c24f7-109">변환에 사용되는 컨텍스트 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="c24f7-109">Context information that is used for conversion.</span></span></param>
        <param name="destinationType"><span data-ttu-id="c24f7-110">변환할 대상 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="c24f7-110">The type to convert to.</span></span></param>
        <summary><span data-ttu-id="c24f7-111"><see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> 인스턴스를 지정한 형식의 인스턴스로 변환할 수 있는지 여부를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="c24f7-111">Determines whether a <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> instance can be converted into an instance of the specified type.</span></span></summary>
        <returns>
          <span data-ttu-id="c24f7-112"><see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> 인스턴스를 지정한 형식의 인스턴스로 변환할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c24f7-112"><see langword="true" /> if a <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> instance can be converted to an instance of the specified type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c24f7-113">이 메서드가 반환 `false` 경우는 `destinationType` 는 <xref:System.String>고, 그렇지 않으면, 기본 클래스 메서드를 호출 하 여 결정 <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="c24f7-113">This method returns `false` if the `destinationType` is a <xref:System.String>; otherwise, the determination is made by calling the base class method <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="c24f7-114">변환에 사용되는 컨텍스트 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="c24f7-114">Context information that is used for conversion.</span></span></param>
        <param name="culture"><span data-ttu-id="c24f7-115">선택적 <see cref="T:System.Globalization.CultureInfo" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c24f7-115">An optional <see cref="T:System.Globalization.CultureInfo" />.</span></span> <span data-ttu-id="c24f7-116">제공되지 않으면 현재 문화권으로 가정합니다.</span><span class="sxs-lookup"><span data-stu-id="c24f7-116">If not supplied, the current culture is assumed.</span></span></param>
        <param name="value"><span data-ttu-id="c24f7-117">변환할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c24f7-117">The object to convert.</span></span></param>
        <summary><span data-ttu-id="c24f7-118">지정한 개체를 <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> 인스턴스로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="c24f7-118">Converts the specified object to a <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> instance.</span></span></summary>
        <returns><span data-ttu-id="c24f7-119">변환된 값을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c24f7-119">An object that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c24f7-120">기본 클래스 메서드 <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A>를 호출하여 변환됩니다.</span><span class="sxs-lookup"><span data-stu-id="c24f7-120">The conversion is made by calling the base class method <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A>.</span></span> <span data-ttu-id="c24f7-121">변환할 수 없는 경우 <xref:System.NotSupportedException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c24f7-121">If the conversion cannot be made, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="c24f7-122">변환에 사용되는 컨텍스트 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="c24f7-122">Context information that is used for conversion.</span></span></param>
        <param name="culture"><span data-ttu-id="c24f7-123">선택적 <see cref="T:System.Globalization.CultureInfo" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c24f7-123">An optional <see cref="T:System.Globalization.CultureInfo" />.</span></span> <span data-ttu-id="c24f7-124">제공되지 않으면 현재 문화권으로 가정합니다.</span><span class="sxs-lookup"><span data-stu-id="c24f7-124">If not supplied, the current culture is assumed.</span></span></param>
        <param name="value"><span data-ttu-id="c24f7-125">변환할 <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="c24f7-125">The <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> instance to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="c24f7-126">변환할 대상 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="c24f7-126">The type to convert to.</span></span></param>
        <summary><span data-ttu-id="c24f7-127"><see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> 인스턴스를 지정한 형식으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="c24f7-127">Converts a <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> instance to the specified type.</span></span></summary>
        <returns><span data-ttu-id="c24f7-128">변환된 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c24f7-128">The converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c24f7-129">기본 클래스 메서드 <xref:System.ComponentModel.TypeConverter.ConvertTo%2A>를 호출하여 변환됩니다.</span><span class="sxs-lookup"><span data-stu-id="c24f7-129">The conversion is made by calling the base class method <xref:System.ComponentModel.TypeConverter.ConvertTo%2A>.</span></span> <span data-ttu-id="c24f7-130">변환할 수 없는 경우 <xref:System.NotSupportedException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c24f7-130">If the conversion cannot be made, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>