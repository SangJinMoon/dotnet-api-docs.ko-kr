<Type Name="WorkflowQueue" FullName="System.Workflow.Runtime.WorkflowQueue">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c448e0d58fa8abcd97994bfb067ec306c11b685a" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48592949" /></Metadata><TypeSignature Language="C#" Value="public class WorkflowQueue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowQueue extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.WorkflowQueue" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowQueue" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowQueue" />
  <TypeSignature Language="F#" Value="type WorkflowQueue = class" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="732a6-101">워크플로 큐를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-101">Represents a workflow queue.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="732a6-102">워크플로 큐는 워크플로의 활동과 호스트 또는 호스트 서비스 간에 메시지를 전달하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-102">Workflow queues are used to pass messages between a host or host services and activities in a workflow.</span></span> <span data-ttu-id="732a6-103">모든 활동이 <xref:System.Workflow.Runtime.WorkflowQueue>를 호출하여 <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A?displayProperty=nameWithType>를 만들 수 있으며 호스트, 서비스 또는 다른 활동이 <xref:System.Workflow.Runtime.WorkflowQueue.Enqueue%2A>를 호출하여 항목을 해당 <xref:System.Workflow.Runtime.WorkflowQueue>에 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-103">Any activity can create a <xref:System.Workflow.Runtime.WorkflowQueue> by calling <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A?displayProperty=nameWithType>, and a host, a service, or another activity can call <xref:System.Workflow.Runtime.WorkflowQueue.Enqueue%2A> to add an item to that <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span> <span data-ttu-id="732a6-104"><xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> 이벤트를 구독하여 항목이 <xref:System.Workflow.Runtime.WorkflowQueue>에 도착할 때 알림을 받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-104">You can subscribe to the <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> event to be notified when an item arrives on the <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span> <span data-ttu-id="732a6-105"><xref:System.Workflow.Runtime.WorkflowQueue.Peek%2A>를 사용하여 <xref:System.Workflow.Runtime.WorkflowQueue>의 시작 부분에 있는 항목을 검사하고 <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A>를 사용하여 <xref:System.Workflow.Runtime.WorkflowQueue>에서 항목을 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-105">You can use <xref:System.Workflow.Runtime.WorkflowQueue.Peek%2A> to examine an item at the beginning of the <xref:System.Workflow.Runtime.WorkflowQueue> and <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> to remove an item from the <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span> <span data-ttu-id="732a6-106">각 <xref:System.Workflow.Runtime.WorkflowQueue>에는 <xref:System.Workflow.Runtime.WorkflowQueuingService>에서 큐 삭제와 같은 기타 관리 작업을 수행하는 데 사용할 수 있는 <xref:System.Workflow.Runtime.WorkflowQueue>가 연결되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-106">Each <xref:System.Workflow.Runtime.WorkflowQueue> is associated with a <xref:System.Workflow.Runtime.WorkflowQueuingService> that you can use to perform other management operations on the <xref:System.Workflow.Runtime.WorkflowQueue>, such as deleting the queue.</span></span> <span data-ttu-id="732a6-107"><xref:System.Workflow.Runtime.WorkflowQueue.QueuingService%2A>는 이 <xref:System.Workflow.Runtime.WorkflowQueuingService>와 연결된 <xref:System.Workflow.Runtime.WorkflowQueue>를 노출합니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-107"><xref:System.Workflow.Runtime.WorkflowQueue.QueuingService%2A> exposes the <xref:System.Workflow.Runtime.WorkflowQueuingService> associated with this <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="732a6-108">다음 코드 예제에서는 <xref:System.Workflow.Runtime.WorkflowQueue> 메서드를 호출하여 <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType>를 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-108">The following code example demonstrates how you can create a <xref:System.Workflow.Runtime.WorkflowQueue> by calling the <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="732a6-109">또한 <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> 속성을 사용하여 현재 큐에 메시지가 있는지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-109">It also uses the <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> property to determine whether any messages exist in the current queue.</span></span> <span data-ttu-id="732a6-110">마지막으로 이 코드에서는 <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> 메서드를 사용하여 큐의 첫 번째 개체를 제거하고 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-110">Finally, the code uses the <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> method to remove and return the first object in the queue.</span></span>  
  
 <span data-ttu-id="732a6-111">이 코드 예제는 FileSystemEvent.cs 파일에 있는 File Watcher Activity SDK 샘플의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-111">This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file.</span></span> <span data-ttu-id="732a6-112">자세한 내용은 [파일 시스템 감시자 작업](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90))합니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-112">For more information, see [File System Watcher Activity](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)).</span></span>  
  
 [!code-csharp[WF_Samples#227](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#227)]
 [!code-vb[WF_Samples#227](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#227)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms735924(v=vs.90)"><span data-ttu-id="732a6-113">워크플로 및 응용 프로그램 통신</span><span class="sxs-lookup"><span data-stu-id="732a6-113">Workflow and Application Communication</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)"><span data-ttu-id="732a6-114">파일 시스템 감시자 작업</span><span class="sxs-lookup"><span data-stu-id="732a6-114">File System Watcher Activity</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowQueue.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Workflow.Runtime.WorkflowQueue.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="732a6-115"><see cref="T:System.Workflow.Runtime.WorkflowQueue" />에 들어 있는 항목 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-115">Gets the number of items contained in the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span></span></summary>
        <value><span data-ttu-id="732a6-116">워크플로 큐의 항목 수입니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-116">The number of items in the workflow queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="732a6-117">다음 코드 예제에서는 <xref:System.Workflow.Runtime.WorkflowQueue> 메서드를 호출하여 <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType>를 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-117">The following code example demonstrates how you can create a <xref:System.Workflow.Runtime.WorkflowQueue> by calling the <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="732a6-118">또한 <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> 속성을 사용하여 현재 큐에 메시지가 있는지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-118">It also uses the <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> property to determine whether any messages exist in the current queue.</span></span> <span data-ttu-id="732a6-119">마지막으로 이 코드에서는 <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> 메서드를 사용하여 큐의 첫 번째 개체를 제거하고 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-119">Finally, the code uses the <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> method to remove and return the first object in the queue.</span></span>  
  
 <span data-ttu-id="732a6-120">이 코드 예제는 FileSystemEvent.cs 파일에 있는 File Watcher Activity SDK 샘플의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-120">This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file.</span></span> <span data-ttu-id="732a6-121">자세한 내용은 [파일 시스템 감시자 작업](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90))합니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-121">For more information, see [File System Watcher Activity](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)).</span></span>  
  
 [!code-csharp[WF_Samples#227](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#227)]
 [!code-vb[WF_Samples#227](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#227)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)"><span data-ttu-id="732a6-122">파일 시스템 감시자 작업</span><span class="sxs-lookup"><span data-stu-id="732a6-122">File System Watcher Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dequeue">
      <MemberSignature Language="C#" Value="public object Dequeue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Dequeue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.Dequeue" />
      <MemberSignature Language="VB.NET" Value="Public Function Dequeue () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dequeue();" />
      <MemberSignature Language="F#" Value="member this.Dequeue : unit -&gt; obj" Usage="workflowQueue.Dequeue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="732a6-123"><see cref="T:System.Workflow.Runtime.WorkflowQueue" />의 시작 부분에서 개체를 제거하고 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-123">Removes and returns the object at the beginning of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span></span></summary>
        <returns><span data-ttu-id="732a6-124"><see cref="T:System.Workflow.Runtime.WorkflowQueue" />의 시작에서 제거하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-124">The object that is removed from the beginning of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="732a6-125"><xref:System.Workflow.Runtime.WorkflowQueue.Count%2A>를 검사하여 <xref:System.Workflow.Runtime.WorkflowQueue>를 호출하기 전에 <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A>가 비어 있는지 여부를 확인하거나 <xref:System.InvalidOperationException>을 catch할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-125">You can check <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> to determine whether the <xref:System.Workflow.Runtime.WorkflowQueue> is empty before you call <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A>, or you can catch the <xref:System.InvalidOperationException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="732a6-126">다음 코드 예제에서는 <xref:System.Workflow.Runtime.WorkflowQueue> 메서드를 호출하여 <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType>를 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-126">The following code example demonstrates how you can create a <xref:System.Workflow.Runtime.WorkflowQueue> by calling the <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="732a6-127">또한 <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> 속성을 사용하여 현재 큐에 메시지가 있는지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-127">It also uses the <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> property to determine whether any messages exist in the current queue.</span></span> <span data-ttu-id="732a6-128">마지막으로 이 코드에서는 <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> 메서드를 사용하여 큐의 첫 번째 개체를 제거하고 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-128">Finally, the code uses the <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> method to remove and return the first object in the queue.</span></span>  
  
 <span data-ttu-id="732a6-129">이 코드 예제는 FileSystemEvent.cs 파일에 있는 File Watcher Activity SDK 샘플의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-129">This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file.</span></span> <span data-ttu-id="732a6-130">자세한 내용은 [파일 시스템 감시자 작업](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90))합니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-130">For more information, see [File System Watcher Activity](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)).</span></span>  
  
 [!code-csharp[WF_Samples#227](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#227)]
 [!code-vb[WF_Samples#227](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#227)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="732a6-131"><see cref="T:System.Workflow.Runtime.WorkflowQueue" />가 비어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="732a6-131">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> is empty.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)"><span data-ttu-id="732a6-132">파일 시스템 감시자 작업</span><span class="sxs-lookup"><span data-stu-id="732a6-132">File System Watcher Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowQueue.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Workflow.Runtime.WorkflowQueue.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="732a6-133"><see cref="T:System.Workflow.Runtime.WorkflowQueue" />를 사용할 수 있는지 여부를 지정하는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-133">Gets or sets a value that specifies whether the <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> is enabled.</span></span></summary>
        <value><span data-ttu-id="732a6-134"><see langword="true" />를 사용할 수 있으면 <see cref="T:System.Workflow.Runtime.WorkflowQueue" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-134"><see langword="true" /> if the <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> is enabled; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enqueue">
      <MemberSignature Language="C#" Value="public void Enqueue (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Enqueue(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.Enqueue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Enqueue (item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Enqueue(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="member this.Enqueue : obj -&gt; unit" Usage="workflowQueue.Enqueue item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="732a6-135"><see cref="T:System.Workflow.Runtime.WorkflowQueue" />에 추가할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-135">The object to add to the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span></span></param>
        <summary><span data-ttu-id="732a6-136">개체를 <see cref="T:System.Workflow.Runtime.WorkflowQueue" />의 끝 부분에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-136">Adds an object to the end of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="732a6-137"><see cref="T:System.Workflow.Runtime.WorkflowQueue" />를 사용할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="732a6-137">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> is not enabled.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public object Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Function Peek () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Peek();" />
      <MemberSignature Language="F#" Value="member this.Peek : unit -&gt; obj" Usage="workflowQueue.Peek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="732a6-138"><see cref="T:System.Workflow.Runtime.WorkflowQueue" />의 시작 부분에서 개체를 제거하지 않고 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-138">Returns the object at the beginning of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> without removing it.</span></span></summary>
        <returns><span data-ttu-id="732a6-139"><see cref="T:System.Workflow.Runtime.WorkflowQueue" />의 처음에 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-139">The object at the beginning of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="732a6-140">이 메서드는 <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> 메서드와 유사하지만 <xref:System.Workflow.Runtime.WorkflowQueue.Peek%2A>는 <xref:System.Workflow.Runtime.WorkflowQueue>를 수정하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-140">This method is similar to the <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> method, but <xref:System.Workflow.Runtime.WorkflowQueue.Peek%2A> does not modify the <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span> <span data-ttu-id="732a6-141"><xref:System.Workflow.Runtime.WorkflowQueue.Count%2A>를 검사하여 <xref:System.Workflow.Runtime.WorkflowQueue>를 호출하기 전에 <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A>가 비어 있는지 여부를 확인하거나 <xref:System.InvalidOperationException>을 catch할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-141">You can check <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> to determine whether the <xref:System.Workflow.Runtime.WorkflowQueue> is empty before you call <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A>, or you can catch the <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="732a6-142"><see cref="T:System.Workflow.Runtime.WorkflowQueue" />가 비어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="732a6-142">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="QueueItemArrived">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; QueueItemArrived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; QueueItemArrived" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowQueue.QueueItemArrived" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueueItemArrived As EventHandler(Of QueueEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ QueueItemArrived;" />
      <MemberSignature Language="F#" Value="member this.QueueItemArrived : EventHandler&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; " Usage="member this.QueueItemArrived : System.EventHandler&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="732a6-143">이 <see cref="T:System.Workflow.Runtime.WorkflowQueue" />에서 항목이 전달될 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-143">Occurs when an item is delivered on this <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="732a6-144">이 이벤트는 워크플로 인스턴스로의 이벤트 전달과 동기적으로 발생해야 하는 처리에만 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-144">This event is only used for processing that must occur synchronously with event delivery to the workflow instance.</span></span> <span data-ttu-id="732a6-145">이벤트 처리기는 워크플로가 아닌 스레드에서 실행될 수 있으므로 공유 워크플로 개체(예: <xref:System.Workflow.ComponentModel.DependencyObject>)에 대한 액세스를 보호해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-145">The event handler may execute on a non-workflow thread so access to any shared workflow object, for example, any <xref:System.Workflow.ComponentModel.DependencyObject>, must be protected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueItemAvailable">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; QueueItemAvailable;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; QueueItemAvailable" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueueItemAvailable As EventHandler(Of QueueEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ QueueItemAvailable;" />
      <MemberSignature Language="F#" Value="member this.QueueItemAvailable : EventHandler&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; " Usage="member this.QueueItemAvailable : System.EventHandler&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="732a6-146">이 <see cref="T:System.Workflow.Runtime.WorkflowQueue" />에서 항목을 사용할 수 있을 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-146">Occurs when an item is available on this <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="732a6-147"><xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> 이벤트는 비동기 방식으로 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-147">The <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> event is raised in an asynchronous manner.</span></span> <span data-ttu-id="732a6-148"><xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> 이벤트의 발신자는 구독하는 <xref:System.Workflow.ComponentModel.ActivityExecutionContext>의 <xref:System.Workflow.ComponentModel.Activity>가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-148">The sender for the <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> event will be the <xref:System.Workflow.ComponentModel.ActivityExecutionContext> of the subscribing <xref:System.Workflow.ComponentModel.Activity>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueName">
      <MemberSignature Language="C#" Value="public IComparable QueueName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IComparable QueueName" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowQueue.QueueName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueueName As IComparable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IComparable ^ QueueName { IComparable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QueueName : IComparable" Usage="System.Workflow.Runtime.WorkflowQueue.QueueName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IComparable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="732a6-149">워크플로 큐의 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-149">Gets the name of the workflow queue.</span></span></summary>
        <value><span data-ttu-id="732a6-150"><see cref="T:System.Workflow.Runtime.WorkflowQueue" />의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-150">The name of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="732a6-151">워크플로 큐의 이름은 <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A> 메서드로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-151">The name of the workflow queue is set by the <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueuingService">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowQueuingService QueuingService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Runtime.WorkflowQueuingService QueuingService" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowQueue.QueuingService" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueuingService As WorkflowQueuingService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Runtime::WorkflowQueuingService ^ QueuingService { System::Workflow::Runtime::WorkflowQueuingService ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QueuingService : System.Workflow.Runtime.WorkflowQueuingService" Usage="System.Workflow.Runtime.WorkflowQueue.QueuingService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowQueuingService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="732a6-152">이 <see cref="T:System.Workflow.Runtime.WorkflowQueue" />와 연결된 큐 서비스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-152">Gets the queuing service associated with this <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span></span></summary>
        <value><span data-ttu-id="732a6-153">이 <see cref="T:System.Workflow.Runtime.WorkflowQueuingService" />와 연결된 큐 서비스를 나타내는 <see cref="T:System.Workflow.Runtime.WorkflowQueue" />입니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-153">A <see cref="T:System.Workflow.Runtime.WorkflowQueuingService" /> that represents the queuing service associated with this <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterForQueueItemArrived">
      <MemberSignature Language="C#" Value="public void RegisterForQueueItemArrived (System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForQueueItemArrived(class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemArrived(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForQueueItemArrived (eventListener As IActivityEventListener(Of QueueEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForQueueItemArrived(System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ eventListener);" />
      <MemberSignature Language="F#" Value="member this.RegisterForQueueItemArrived : System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; -&gt; unit" Usage="workflowQueue.RegisterForQueueItemArrived eventListener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventListener" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="eventListener"><span data-ttu-id="732a6-154"><see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> 인터페이스를 구현하는 <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" />에 대한 구독자입니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-154">A subscriber for <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> that implements the <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> interface.</span></span></param>
        <summary><span data-ttu-id="732a6-155"><see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemArrived" /> 이벤트에 대한 구독자를 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-155">Registers a subscriber to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemArrived" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterForQueueItemAvailable">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="732a6-156"><see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> 이벤트에 대한 구독자를 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-156">Registers a subscriber to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="732a6-157">오버로드된 <xref:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable%2A> 메서드를 사용하여 <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> 이벤트에 대한 구독자를 등록할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-157">You can use the overloaded <xref:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable%2A> methods to register a subscriber for the <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> event.</span></span> <span data-ttu-id="732a6-158"><xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> 이벤트는 항목이 비동기 방식으로 이 <xref:System.Workflow.Runtime.WorkflowQueue>에 전달되었음을 구독자에게 알리는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-158">The <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> event is used to notify subscribers that an item has been delivered (in an asynchronous manner) to this <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterForQueueItemAvailable">
      <MemberSignature Language="C#" Value="public void RegisterForQueueItemAvailable (System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForQueueItemAvailable(class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForQueueItemAvailable (eventListener As IActivityEventListener(Of QueueEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForQueueItemAvailable(System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ eventListener);" />
      <MemberSignature Language="F#" Value="member this.RegisterForQueueItemAvailable : System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; -&gt; unit" Usage="workflowQueue.RegisterForQueueItemAvailable eventListener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventListener" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="eventListener"><span data-ttu-id="732a6-159"><see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> 인터페이스를 구현하는 <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" />에 대한 구독자입니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-159">A subscriber for <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> that implements the <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> interface.</span></span></param>
        <summary><span data-ttu-id="732a6-160"><see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> 이벤트에 대한 구독자를 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-160">Registers a subscriber to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="732a6-161">다음 코드 예제에서는 <xref:System.Workflow.Runtime.WorkflowQueue> 메서드를 호출하여 <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType>를 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-161">The following code example demonstrates how you can create a <xref:System.Workflow.Runtime.WorkflowQueue> by calling the <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="732a6-162">또한 <xref:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable%2A>를 사용하여 지정된 수신기를 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-162">It also uses the <xref:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable%2A> to register the specified listener.</span></span>  
  
 <span data-ttu-id="732a6-163">이 코드 예제는 FileSystemEvent.cs 파일에 있는 File Watcher Activity SDK 샘플의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-163">This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file.</span></span> <span data-ttu-id="732a6-164">자세한 내용은 [파일 시스템 감시자 작업](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90))합니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-164">For more information, see [File System Watcher Activity](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)).</span></span>  
  
 [!code-csharp[WF_Samples#225](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#225)]
 [!code-vb[WF_Samples#225](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#225)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="732a6-165"><paramref name="eventListener" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span><span class="sxs-lookup"><span data-stu-id="732a6-165"><paramref name="eventListener" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)"><span data-ttu-id="732a6-166">파일 시스템 감시자 작업</span><span class="sxs-lookup"><span data-stu-id="732a6-166">File System Watcher Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RegisterForQueueItemAvailable">
      <MemberSignature Language="C#" Value="public void RegisterForQueueItemAvailable (System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener, string subscriberQualifiedName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForQueueItemAvailable(class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener, string subscriberQualifiedName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForQueueItemAvailable (eventListener As IActivityEventListener(Of QueueEventArgs), subscriberQualifiedName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForQueueItemAvailable(System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ eventListener, System::String ^ subscriberQualifiedName);" />
      <MemberSignature Language="F#" Value="member this.RegisterForQueueItemAvailable : System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; * string -&gt; unit" Usage="workflowQueue.RegisterForQueueItemAvailable (eventListener, subscriberQualifiedName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventListener" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
        <Parameter Name="subscriberQualifiedName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventListener"><span data-ttu-id="732a6-167"><see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> 인터페이스를 구현하는 <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" />에 대한 구독자입니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-167">A subscriber for <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> that implements the <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> interface.</span></span></param>
        <param name="subscriberQualifiedName"><span data-ttu-id="732a6-168"><see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /> 이벤트를 구독하는 활동의 <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" />이나 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-168">The <see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /> of the activity that is subscribing to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> event or a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></param>
        <summary><span data-ttu-id="732a6-169"><see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> 이벤트에 대한 구독자를 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-169">Registers a subscriber to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="732a6-170">`subscriberQualifiedName`이 구독 활동의 정규화된 이름을 제공하는 경우 <xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=nameWithType>를 호출할 때 이 큐와 연결된 <xref:System.Workflow.Runtime.WorkflowQueueInfo>의 <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A?displayProperty=nameWithType>에 해당 이름이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-170">If the qualified name of the subscribing activity is supplied by `subscriberQualifiedName`, it is returned in <xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=nameWithType> of <xref:System.Workflow.Runtime.WorkflowQueueInfo> associated with this queue when <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A?displayProperty=nameWithType> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="732a6-171"><paramref name="eventListener" />가 null 참조(<see langword="Nothing" />)인 경우</span><span class="sxs-lookup"><span data-stu-id="732a6-171"><paramref name="eventListener" /> is a null reference (<see langword="Nothing" />).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UnregisterForQueueItemArrived">
      <MemberSignature Language="C#" Value="public void UnregisterForQueueItemArrived (System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterForQueueItemArrived(class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemArrived(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterForQueueItemArrived (eventListener As IActivityEventListener(Of QueueEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnregisterForQueueItemArrived(System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ eventListener);" />
      <MemberSignature Language="F#" Value="member this.UnregisterForQueueItemArrived : System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; -&gt; unit" Usage="workflowQueue.UnregisterForQueueItemArrived eventListener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventListener" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="eventListener"><span data-ttu-id="732a6-172"><see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> 인터페이스를 구현하는 <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" />에 대한 구독자입니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-172">A subscriber for <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> that implements the <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> interface.</span></span></param>
        <summary><span data-ttu-id="732a6-173"><see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemArrived" /> 이벤트에 대한 구독자를 등록 취소합니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-173">Unregisters a subscriber to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemArrived" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="732a6-174">이 메서드는 내부 전용으로 예약되었습니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-174">This method is reserved for internal use only.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="732a6-175"><paramref name="eventListener" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span><span class="sxs-lookup"><span data-stu-id="732a6-175"><paramref name="eventListener" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UnregisterForQueueItemAvailable">
      <MemberSignature Language="C#" Value="public void UnregisterForQueueItemAvailable (System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterForQueueItemAvailable(class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterForQueueItemAvailable (eventListener As IActivityEventListener(Of QueueEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnregisterForQueueItemAvailable(System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ eventListener);" />
      <MemberSignature Language="F#" Value="member this.UnregisterForQueueItemAvailable : System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; -&gt; unit" Usage="workflowQueue.UnregisterForQueueItemAvailable eventListener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventListener" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="eventListener"><span data-ttu-id="732a6-176"><see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> 인터페이스를 구현하는 <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" />에 대한 구독자입니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-176">A subscriber for <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> that implements the <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> interface.</span></span></param>
        <summary><span data-ttu-id="732a6-177"><see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> 이벤트에 대한 구독자를 등록 취소합니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-177">Unregisters a subscriber to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="732a6-178">다음 코드 예제에서는 <xref:System.Workflow.Runtime.WorkflowQueue> 메서드를 호출하여 <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType>를 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-178">The following code example demonstrates how you can create a <xref:System.Workflow.Runtime.WorkflowQueue> by calling the <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="732a6-179">또한 <xref:System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemAvailable%2A>를 사용하여 지정된 수신기를 등록 취소합니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-179">It also uses the <xref:System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemAvailable%2A> to unregister the specified listener.</span></span>  
  
 <span data-ttu-id="732a6-180">이 코드 예제는 FileSystemEvent.cs 파일에 있는 File Watcher Activity SDK 샘플의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-180">This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file.</span></span> <span data-ttu-id="732a6-181">자세한 내용은 [파일 시스템 감시자 작업](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90))합니다.</span><span class="sxs-lookup"><span data-stu-id="732a6-181">For more information, see [File System Watcher Activity](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)).</span></span>  
  
 [!code-csharp[WF_Samples#226](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#226)]
 [!code-vb[WF_Samples#226](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#226)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="732a6-182"><paramref name="eventListener" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span><span class="sxs-lookup"><span data-stu-id="732a6-182"><paramref name="eventListener" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741707(v=vs.90)"><span data-ttu-id="732a6-183">파일 시스템 감시자 작업</span><span class="sxs-lookup"><span data-stu-id="732a6-183">File System Watcher Activity</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>