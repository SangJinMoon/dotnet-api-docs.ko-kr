<Type Name="WorkflowRuntime" FullName="System.Workflow.Runtime.WorkflowRuntime">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9972d61b484762347fab0bc94315ae7a302abc41" />
    <Meta Name="ms.sourcegitcommit" Value="1b899505ed6d42225f2b3c9150bfdc080d0d1f9b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/28/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WorkflowRuntime : IDisposable, IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi WorkflowRuntime extends System.Object implements class System.IDisposable, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.WorkflowRuntime" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowRuntime&#xA;Implements IDisposable, IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowRuntime : IDisposable, IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="aabac-101">워크플로 런타임 엔진이 워크플로에 대해 제공하는 구성 가능한 실행 환경을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="aabac-101">Represents the configurable execution environment provided by the workflow run-time engine for workflows.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="aabac-102"><xref:System.Workflow.Runtime.WorkflowRuntime>은 호스트 응용 프로그램 및 서비스가 워크플로 런타임 엔진을 구성 및 제어하고 워크플로 런타임 엔진 및 해당 워크플로 인스턴스 변경 내용에 대한 알림을 받는 데 필요한 기능을 노출합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-102"><xref:System.Workflow.Runtime.WorkflowRuntime> exposes functionality required by a host application and services to configure and control the workflow run-time engine and to be notified of changes to both the workflow run-time engine and any of its workflow instances.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aabac-103">다음 코드 예제에서는 워크플로 호스트에서 <xref:System.Workflow.Runtime.WorkflowRuntime> 기능을 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-103">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="aabac-104"><xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A> 생성자와 <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>, <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> 및 <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> 메서드를 사용하는 방법의 예제를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-104">It provides examples of how to use the <xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A> constructor and the <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>, <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>, and <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> methods.</span></span> <span data-ttu-id="aabac-105">또한 이 코드에서는 <xref:System.Workflow.Runtime.WorkflowInstance> 메서드를 사용하여 워크플로 호스트에 <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> 개체를 만드는 권장 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-105">The code also shows the recommended way to create a <xref:System.Workflow.Runtime.WorkflowInstance> object in a workflow host using the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> method.</span></span> <span data-ttu-id="aabac-106"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted>, <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> 및 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> 이벤트에 대해 이벤트 처리기를 설정하는 방법도 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-106">It also shows how to set event handlers for the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted>, <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled>, and <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> events.</span></span>  
  
 <span data-ttu-id="aabac-107">이 코드 예제는의 일부는 [워크플로 취소](http://go.microsoft.com/fwlink/?LinkID=157346) 샘플.</span><span class="sxs-lookup"><span data-stu-id="aabac-107">This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#258](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#258)]
 [!code-vb[WF_Samples#258](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#258)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="aabac-108">이 형식은 스레드로부터 안전합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="aabac-108">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="aabac-109">
            <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-109">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowRuntime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowRuntime();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aabac-110">
            <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-110">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aabac-111"><xref:System.Workflow.Runtime.WorkflowRuntime>은 기본 속성 값으로 초기화되고 기본 핵심 서비스를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-111">The <xref:System.Workflow.Runtime.WorkflowRuntime> is initialized with the default property values and contains the default core services.</span></span> <span data-ttu-id="aabac-112">워크플로 런타임 엔진을 추가로 구성하려는 경우 <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> 및 <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A>를 사용하여 서비스를 추가 및 제거할 수 있으며 <xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A>을 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-112">To additionally configure the workflow run-time engine, you can add and remove services by using <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> and <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A>, and you can set <xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A>.</span></span> <span data-ttu-id="aabac-113"><xref:System.Workflow.Runtime.WorkflowRuntime>이 구성된 후 <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>을 호출하여 워크플로 런타임 엔진과 해당 서비스를 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-113">After the <xref:System.Workflow.Runtime.WorkflowRuntime> is configured, call <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> to start the workflow run-time engine and its services.</span></span>  
  
 <span data-ttu-id="aabac-114">다음 표에서는 <xref:System.Workflow.Runtime.WorkflowRuntime> 클래스의 인스턴스에 대한 초기 속성 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-114">The following table shows initial property values for an instance of <xref:System.Workflow.Runtime.WorkflowRuntime> class.</span></span>  
  
|<span data-ttu-id="aabac-115">속성</span><span class="sxs-lookup"><span data-stu-id="aabac-115">Property</span></span>|<span data-ttu-id="aabac-116">초기 값</span><span class="sxs-lookup"><span data-stu-id="aabac-116">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A>|<span data-ttu-id="aabac-117">"WorkflowRuntime"</span><span class="sxs-lookup"><span data-stu-id="aabac-117">"WorkflowRuntime"</span></span>|  
|<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>|`false`|  
  
 <span data-ttu-id="aabac-118">기본 핵심 서비스는 <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> 및 <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService>입니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-118">The default core services are <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> and <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aabac-119">다음 코드 예제에서는 워크플로 호스트에서 <xref:System.Workflow.Runtime.WorkflowRuntime> 기능을 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-119">The following code example demonstrates how you can use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="aabac-120"><xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A> 생성자를 사용하여 <xref:System.Workflow.Runtime.WorkflowRuntime>의 인스턴스를 만들고 해당 메서드 및 이벤트에 액세스하는 방법의 예제를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-120">It provides an example of how to use the <xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A> constructor to create an instance of a <xref:System.Workflow.Runtime.WorkflowRuntime> and access its methods and events.</span></span>  
  
 <span data-ttu-id="aabac-121">이 코드 예제는의 일부는 [워크플로 취소](http://go.microsoft.com/fwlink/?LinkID=157346) 샘플.</span><span class="sxs-lookup"><span data-stu-id="aabac-121">This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#258](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#258)]
 [!code-vb[WF_Samples#258](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#258)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowRuntime (string configSectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string configSectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (configSectionName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowRuntime(System::String ^ configSectionName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="configSectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configSectionName">
          <span data-ttu-id="aabac-122">응용 프로그램 구성 파일에 있는 올바른 <see langword="workflowSettings" /> 섹션의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-122">The name of a valid <see langword="workflowSettings" /> section in the application configuration file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aabac-123">응용 프로그램 구성 파일의 지정된 섹션을 사용하여 <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-123">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> class by using the specified section of the application configuration file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aabac-124"><xref:System.Workflow.Runtime.WorkflowRuntime>은 응용 프로그램 구성 파일의 `configSectionName`에 지정된 설정에 따라 초기화됩니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-124">The <xref:System.Workflow.Runtime.WorkflowRuntime> is initialized according to the settings in the section specified by `configSectionName` in the application configuration file.</span></span> <span data-ttu-id="aabac-125">`configSectionName` 유효한 일치 해야 `workflowSettings` 구성 파일의 섹션입니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-125">`configSectionName` must correspond to a valid `workflowSettings` section of a configuration file.</span></span>  
  
 <span data-ttu-id="aabac-126">응용 프로그램 구성 파일을 사용 하 여 워크플로 런타임 엔진을 구성, 로드 및에 나열 된 유형의 클래스를 인스턴스화하는 `Services` 구성 파일의 섹션입니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-126">When the workflow run-time engine is configured by using an application configuration file, it loads and instantiates classes of the types listed in the `Services` section of the configuration file.</span></span> <span data-ttu-id="aabac-127">워크플로 런타임 엔진은 이러한 클래스를 생성할 때 다음 서명을 순서대로 사용하여 클래스 생성자를 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-127">When the workflow run-time engine constructs these classes it looks for class constructors with the following signatures in the following order:</span></span>  
  
1.  <span data-ttu-id="aabac-128">Service(WorkflowRuntime 런타임, NameValueCollection 매개 변수)</span><span class="sxs-lookup"><span data-stu-id="aabac-128">Service(WorkflowRuntime runtime, NameValueCollection parameters)</span></span>  
  
2.  <span data-ttu-id="aabac-129">Service(WorkflowRuntime 런타임)</span><span class="sxs-lookup"><span data-stu-id="aabac-129">Service(WorkflowRuntime runtime)</span></span>  
  
3.  <span data-ttu-id="aabac-130">Service(NameValueCollection 매개 변수)</span><span class="sxs-lookup"><span data-stu-id="aabac-130">Service(NameValueCollection parameters)</span></span>  
  
4.  <span data-ttu-id="aabac-131">Service()</span><span class="sxs-lookup"><span data-stu-id="aabac-131">Service()</span></span>  
  
 <span data-ttu-id="aabac-132">구성 파일에서 로드된 모든 서비스 클래스는 이러한 생성자 시그니처를 하나 이상 구현해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-132">All service classes that are loaded from a configuration file must implement at least one of these constructor signatures.</span></span>  
  
 <span data-ttu-id="aabac-133">자세한 내용은 <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="aabac-133">For more information, see <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aabac-134">
            <paramref name="configSectionName" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-134">
              <paramref name="configSectionName" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="aabac-135">응용 프로그램 구성 파일에서 올바른 <see langword="workflowSettings" /> 섹션을 찾을 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-135">A valid <see langword="workflowSettings" /> section could not be found in the application configuration file.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aabac-136">이 응용 프로그램 도메인에 대한 <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />이 이미 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-136">A <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> already exists for this application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowRuntime (System.Workflow.Runtime.Configuration.WorkflowRuntimeSection settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Workflow.Runtime.Configuration.WorkflowRuntimeSection settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (settings As WorkflowRuntimeSection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowRuntime(System::Workflow::Runtime::Configuration::WorkflowRuntimeSection ^ settings);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settings" Type="System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" />
      </Parameters>
      <Docs>
        <param name="settings">
          <span data-ttu-id="aabac-137">
            <see cref="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-137">A <see cref="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aabac-138">지정된 <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />의 설정을 사용하여 <see cref="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-138">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> class by using the settings in the specified <see cref="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aabac-139">이 생성자는 응용 프로그램 구성 파일을 사용하지 않는 호스트에 대해 단일 메서드 호출을 사용하여 워크플로 런타임 엔진을 구성하는 메커니즘을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-139">This constructor provides a mechanism to configure the workflow run-time engine using a single method call for hosts that do not use an application configuration file.</span></span> <span data-ttu-id="aabac-140">응용 프로그램 구성 파일을 사용하지 않는 데는 여러 가지 이유가 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-140">There are many reasons for not using the application configuration file.</span></span> <span data-ttu-id="aabac-141">예를 들어 호스트가 구성 파일의 사용을 허용하지 않는 환경에서 실행될 수 있습니다. 이러한 환경의 예로는 보안상의 이유로 응용 프로그램 구성 파일 읽기를 허용하지 않는 신뢰할 수 있는 환경이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-141">A host can run in an environment that does not allow using configuration files; for example, in trusted environments that do not allow reading from the application configuration file for security reasons.</span></span> <span data-ttu-id="aabac-142">또한 호스트가 비공개 구성 메커니즘을 사용할 수 있습니다. 예를 들어 호스트가 워크플로 런타임 엔진 구성 설정을 SQL 데이터베이스에 저장할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-142">Also, a host can use a proprietary configuration mechanism; for example, the host can store the workflow run-time engine configuration settings in a SQL database.</span></span>  
  
 <span data-ttu-id="aabac-143">워크플로 런타임 엔진은 <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.Services%2A?displayProperty=nameWithType>에 포함된 형식의 클래스를 로드하고 인스턴스화합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-143">The workflow run-time engine loads and instantiates classes of the types contained in <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.Services%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="aabac-144">워크플로 런타임 엔진은 이러한 클래스를 생성할 때 다음 서명을 순서대로 사용하여 클래스 생성자를 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-144">When the workflow run-time engine constructs these classes it looks for class constructors with the following signatures in the following order:</span></span>  
  
1.  <span data-ttu-id="aabac-145">Service(WorkflowRuntime 런타임, NameValueCollection 매개 변수)</span><span class="sxs-lookup"><span data-stu-id="aabac-145">Service(WorkflowRuntime runtime, NameValueCollection parameters)</span></span>  
  
2.  <span data-ttu-id="aabac-146">Service(WorkflowRuntime 런타임)</span><span class="sxs-lookup"><span data-stu-id="aabac-146">Service(WorkflowRuntime runtime)</span></span>  
  
3.  <span data-ttu-id="aabac-147">Service(NameValueCollection 매개 변수)</span><span class="sxs-lookup"><span data-stu-id="aabac-147">Service(NameValueCollection parameters)</span></span>  
  
4.  <span data-ttu-id="aabac-148">Service()</span><span class="sxs-lookup"><span data-stu-id="aabac-148">Service()</span></span>  
  
 <span data-ttu-id="aabac-149">`settings`에 지정된 모든 서비스 클래스는 이러한 생성자 서명을 하나 이상 구현해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-149">All service classes that are specified in `settings` must implement at least one of these constructor signatures.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aabac-150">
            <paramref name="settings" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-150">
              <paramref name="settings" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aabac-151">이 응용 프로그램 도메인에 대한 <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />이 이미 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-151">A <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> already exists for this application domain.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddService">
      <MemberSignature Language="C#" Value="public void AddService (object service);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddService(object service) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddService (service As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddService(System::Object ^ service);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="service">
          <span data-ttu-id="aabac-152">추가할 서비스를 나타내는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-152">An object that represents the service to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aabac-153">지정된 서비스를 워크플로 런타임 엔진에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-153">Adds the specified service to the workflow run-time engine.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aabac-154">핵심 서비스를 추가하여 워크플로 런타임 엔진을 구성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-154">You can configure the workflow run-time engine by adding core services.</span></span> <span data-ttu-id="aabac-155">핵심 서비스는 서비스 기본 클래스인 <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> 클래스, <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> 클래스, <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> 클래스 및 <xref:System.Workflow.Runtime.Tracking.TrackingService> 클래스에서 파생된 서비스입니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-155">Core services are those that derive from any of the following service base classes: the <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class, and the <xref:System.Workflow.Runtime.Tracking.TrackingService> class.</span></span>  <span data-ttu-id="aabac-156">핵심 서비스는 워크플로 런타임 엔진; 실행 하지 않는 경우에 추가할 수 있습니다. 즉, <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> 은 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-156">Core services can only be added when the workflow run-time engine is not running; that is, when <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> is `false`.</span></span> <span data-ttu-id="aabac-157"><xref:System.Workflow.Runtime.WorkflowRuntime>은 호스트에서 실행 중인 응용 프로그램이나 다른 워크플로에서 사용할 수 있는 다른 서비스에 대한 저장소 컨테이너로 사용될 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-157">The <xref:System.Workflow.Runtime.WorkflowRuntime> can also be used as a storage container for other services that can be used by other workflows or by applications running on a host.</span></span> <span data-ttu-id="aabac-158">워크플로 런타임 엔진이 시작된 후 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 클래스에서 파생된 비핵심 서비스를 추가하면 <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>가 해당 서비스에 의해 구현된 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-158">If you add a non-core service that derives from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class after the workflow run-time engine has been started, <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> calls the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> method implemented by that service.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aabac-159"><xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>는 <xref:System.Type>이 동일한 두 개의 서비스를 <xref:System.Workflow.Runtime.WorkflowRuntime>에 추가할 수 없다는 제한을 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-159"><xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> enforces the restriction that no two services of the same <xref:System.Type> can be added to the <xref:System.Workflow.Runtime.WorkflowRuntime>.</span></span> <span data-ttu-id="aabac-160">그러나 동일한 기본 클래스에서 파생된 서비스는 여러 개 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-160">However, you can add multiple services that derive from the same base class.</span></span>  <span data-ttu-id="aabac-161"><xref:System.Workflow.Runtime.WorkflowRuntime>의 서비스 기본 클래스인 <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> 클래스, <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> 클래스 및 <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> 클래스에서 각각 하나의 서비스만 파생될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-161">There can be only one service derived from each of the following service base classes in the <xref:System.Workflow.Runtime.WorkflowRuntime>: the <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> class, and the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class.</span></span>  <span data-ttu-id="aabac-162">이러한 클래스 중 하나에서 파생된 여러 서비스(예: 두 개의 지속성 서비스)를 추가하면 <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>은 <xref:System.InvalidOperationException>을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-162">If you add multiple services derived from one of these classes, for example two persistence services, <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aabac-163">다음 코드 예제에서는 워크플로 호스트에서 <xref:System.Workflow.Runtime.WorkflowRuntime> 기능을 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-163">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="aabac-164"><xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> 메서드를 사용하여 <xref:System.Workflow.Activities.ExternalDataExchangeService> 및 <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>를 워크플로 런타임 엔진에 추가하는 방법의 예제를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-164">It provides example of how to use the <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> method to add an <xref:System.Workflow.Activities.ExternalDataExchangeService> and <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> to the workflow run-time engine.</span></span>  
  
 <span data-ttu-id="aabac-165">이 코드 예제는의 일부는 [워크플로 취소 하면](http://go.microsoft.com/fwlink/?LinkId=157346) 샘플.</span><span class="sxs-lookup"><span data-stu-id="aabac-165">This code example is part of the [Cancelling a Workflow](http://go.microsoft.com/fwlink/?LinkId=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#258](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#258)]
 [!code-vb[WF_Samples#258](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#258)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aabac-166">
            <paramref name="service" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-166">
              <paramref name="service" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aabac-167">
            <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />이 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-167">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aabac-168">
            <paramref name="service" />가 워크플로 런타임 엔진에 이미 등록된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-168">
              <paramref name="service" /> is already registered with the workflow run-time engine.</span>
          </span>
          <span data-ttu-id="aabac-169">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-169">-or-</span>
          </span>
          <span data-ttu-id="aabac-170">
            <paramref name="service" />가 핵심 서비스이고 워크플로 런타임 엔진이 이미 실행 중인 경우(<see cref="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" />가 <see langword="true" />인 경우)</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-170">
              <paramref name="service" /> is a core service and the workflow run-time engine is already running (<see cref="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" /> is <see langword="true" />).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateWorkflow">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="aabac-171">지정된 매개 변수를 사용하여 워크플로 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-171">Creates a workflow instance by using the specified parameters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aabac-172">워크플로 런타임 엔진이 시작되지 않은 경우 <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> 메서드는 <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>을 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-172">If the workflow run-time engine has not been started, the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> methods call <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>.</span></span> <span data-ttu-id="aabac-173">가능한 예외 목록은 <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aabac-173">See <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> for a list of possible exceptions.</span></span> <span data-ttu-id="aabac-174">워크플로 인스턴스를 만든 후 <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A?displayProperty=nameWithType> 메서드가 반환하는 <xref:System.Workflow.Runtime.WorkflowInstance> 개체에서 <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A>를 호출하여 실행을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-174">After you create the workflow instance, call <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A?displayProperty=nameWithType> on the <xref:System.Workflow.Runtime.WorkflowInstance> object returned by the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> method to begin its execution.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateWorkflow">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (Type workflowType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowInstance CreateWorkflow(class System.Type workflowType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWorkflow (workflowType As Type) As WorkflowInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowInstance ^ CreateWorkflow(Type ^ workflowType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="workflowType">
          <span data-ttu-id="aabac-175">만들 워크플로의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-175">The <see cref="T:System.Type" /> of the workflow to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aabac-176">지정된 워크플로 <see cref="T:System.Type" />을 사용하여 새 워크플로 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-176">Creates a new workflow instance by using the specified workflow <see cref="T:System.Type" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aabac-177">만들어진 워크플로 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-177">The created workflow instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aabac-178"><xref:System.Workflow.Runtime.WorkflowInstance>를 만들기 전에 유효성 검사가 먼저 실행됩니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-178">Before the <xref:System.Workflow.Runtime.WorkflowInstance> is created, validation is executed on it.</span></span> <span data-ttu-id="aabac-179">유효성 검사 오류가 발생하면 <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-179">If any validation errors occur, the <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> is thrown.</span></span> <span data-ttu-id="aabac-180">단순한 시나리오에서는 문제가 없지만 서버 환경에서는 활성화가 실행될 때마다 워크플로의 유효성을 다시 검사하는 것이 불필요한 부담이 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-180">This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</span></span>  
  
 <span data-ttu-id="aabac-181">유효성 검사 해제[!INCLUDE[crabout](~/includes/crabout-md.md)]<xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aabac-181">[!INCLUDE[crabout](~/includes/crabout-md.md)] disabling validation, see <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aabac-182">다음 코드 예제에서는 <xref:System.Workflow.Runtime.WorkflowInstance> 메서드를 사용하여 워크플로 호스트에 <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> 개체를 만드는 권장 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-182">The following code example demonstrates the recommended way to create a <xref:System.Workflow.Runtime.WorkflowInstance> object in a workflow host using the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> method.</span></span>  
  
 <span data-ttu-id="aabac-183">이 코드 예제는의 일부는 [워크플로 취소](http://go.microsoft.com/fwlink/?LinkID=157346) 샘플.</span><span class="sxs-lookup"><span data-stu-id="aabac-183">This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#260](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#260)]
 [!code-vb[WF_Samples#260](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#260)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aabac-184">
            <paramref name="workflowType" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-184">
              <paramref name="workflowType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWorkflow">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (System.Xml.XmlReader workflowDefinitionReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowInstance CreateWorkflow(class System.Xml.XmlReader workflowDefinitionReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWorkflow (workflowDefinitionReader As XmlReader) As WorkflowInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowInstance ^ CreateWorkflow(System::Xml::XmlReader ^ workflowDefinitionReader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowDefinitionReader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="workflowDefinitionReader">
          <span data-ttu-id="aabac-185">워크플로 정의를 포함하는 <see cref="T:System.Xml.XmlReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-185">An <see cref="T:System.Xml.XmlReader" /> that contains the workflow definition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aabac-186">지정된 <see cref="T:System.Xml.XmlReader" />를 사용하여 워크플로 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-186">Creates a workflow instance by using the specified <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aabac-187">만들어진 워크플로 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-187">The created workflow instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aabac-188">워크플로 인스턴스는 <xref:System.Xml.XmlReader>가 참조하는 XAML 워크플로 정의 파일에서 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-188">The workflow instance is created from a XAML workflow definition file referenced by the <xref:System.Xml.XmlReader>.</span></span>  
  
 <span data-ttu-id="aabac-189"><xref:System.Workflow.Runtime.WorkflowInstance>를 만들기 전에 유효성 검사가 먼저 실행됩니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-189">Before the <xref:System.Workflow.Runtime.WorkflowInstance> is created, validation is executed on it.</span></span> <span data-ttu-id="aabac-190">유효성 검사 오류가 발생하면 <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-190">If any validation errors occur, the <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> is thrown.</span></span> <span data-ttu-id="aabac-191">단순한 시나리오에서는 문제가 없지만 서버 환경에서는 활성화가 실행될 때마다 워크플로의 유효성을 다시 검사하는 것이 불필요한 부담이 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-191">This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</span></span>  
  
 <span data-ttu-id="aabac-192">유효성 검사 해제[!INCLUDE[crabout](~/includes/crabout-md.md)]<xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aabac-192">[!INCLUDE[crabout](~/includes/crabout-md.md)] disabling validation, see <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aabac-193">다음 예제에서는 XAML 기반 워크플로 정의가 지정된 워크플로를 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-193">The following example demonstrates how to create a workflow given a XAML-based workflow definition.</span></span>  
  
```  
static void Main(string[] args)  
{  
    using (WorkflowRuntime workflowRuntime = new WorkflowRuntime())  
    {  
        AutoResetEvent waitHandle = new AutoResetEvent(false);  
        workflowRuntime.WorkflowCompleted += delegate(object sender, WorkflowCompletedEventArgs e)  
        {  
            waitHandle.Set();  
        };  
        workflowRuntime.WorkflowTerminated += delegate(object sender, WorkflowTerminatedEventArgs e)  
        {  
            Console.WriteLine(e.Exception.Message);  
            waitHandle.Set();  
        };  
  
        TypeProvider typeProvider = new TypeProvider(null);  
        // Add referenced assemblies, if needed  
        // typeProvider.AddAssembly(...);  
        workflowRuntime.AddService(typeProvider);  
  
        using (XmlReader reader = XmlReader.Create("Workflow1.xoml"))  
        {  
            WorkflowInstance instance = workflowRuntime.CreateWorkflow(reader);  
            instance.Start();  
        }  
  
        waitHandle.WaitOne();  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aabac-194">
            <paramref name="workflowDefinitionReader" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-194">
              <paramref name="workflowDefinitionReader" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aabac-195">
            <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />이 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-195">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWorkflow">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (Type workflowType, System.Collections.Generic.Dictionary&lt;string,object&gt; namedArgumentValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowInstance CreateWorkflow(class System.Type workflowType, class System.Collections.Generic.Dictionary`2&lt;string, object&gt; namedArgumentValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWorkflow (workflowType As Type, namedArgumentValues As Dictionary(Of String, Object)) As WorkflowInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowInstance ^ CreateWorkflow(Type ^ workflowType, System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ namedArgumentValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowType" Type="System.Type" />
        <Parameter Name="namedArgumentValues" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="workflowType">
          <span data-ttu-id="aabac-196">만들 워크플로의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-196">The <see cref="T:System.Type" /> of the workflow to create.</span>
          </span>
        </param>
        <param name="namedArgumentValues">
          <span data-ttu-id="aabac-197">워크플로에 대한 인수를 나타내는 문자열로 키가 지정된 개체의 <see cref="T:System.Collections.Generic.Dictionary`2" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-197">A <see cref="T:System.Collections.Generic.Dictionary`2" /> of objects keyed by string that represents the arguments to the workflow.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aabac-198">지정된 워크플로 <see cref="T:System.Type" /> 및 지정된 <see cref="T:System.Collections.Generic.Dictionary`2" />에 포함된 워크플로에 대한 인수를 사용하여 워크플로 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-198">Creates a workflow instance by using the specified workflow <see cref="T:System.Type" /> and the arguments to the workflow contained in the specified <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aabac-199">만들어진 워크플로 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-199">The created workflow instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aabac-200"><xref:System.Workflow.Runtime.WorkflowInstance>를 만들기 전에 유효성 검사가 먼저 실행됩니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-200">Before the <xref:System.Workflow.Runtime.WorkflowInstance> is created, validation is executed on it.</span></span> <span data-ttu-id="aabac-201">유효성 검사 오류가 발생하면 <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-201">If any validation errors occur, the <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> is thrown.</span></span> <span data-ttu-id="aabac-202">단순한 시나리오에서는 문제가 없지만 서버 환경에서는 활성화가 실행될 때마다 워크플로의 유효성을 다시 검사하는 것이 불필요한 부담이 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-202">This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</span></span>  
  
 <span data-ttu-id="aabac-203">유효성 검사 해제[!INCLUDE[crabout](~/includes/crabout-md.md)]<xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aabac-203">[!INCLUDE[crabout](~/includes/crabout-md.md)] disabling validation, see <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</span></span>  
  
 <span data-ttu-id="aabac-204">매개 변수를 전달에 대 한 예제 `CreateWorkflow`, 참조 [Workflow with Parameters 샘플](http://go.microsoft.com/fwlink/?LinkId=157403)합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-204">For an example of passing in parameters to `CreateWorkflow`, see [Workflow with Parameters Sample](http://go.microsoft.com/fwlink/?LinkId=157403).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aabac-205">
            <paramref name="workflowType" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-205">
              <paramref name="workflowType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWorkflow">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (Type workflowType, System.Collections.Generic.Dictionary&lt;string,object&gt; namedArgumentValues, Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowInstance CreateWorkflow(class System.Type workflowType, class System.Collections.Generic.Dictionary`2&lt;string, object&gt; namedArgumentValues, valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWorkflow (workflowType As Type, namedArgumentValues As Dictionary(Of String, Object), instanceId As Guid) As WorkflowInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowInstance ^ CreateWorkflow(Type ^ workflowType, System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ namedArgumentValues, Guid instanceId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowType" Type="System.Type" />
        <Parameter Name="namedArgumentValues" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="workflowType">
          <span data-ttu-id="aabac-206">만들 워크플로의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-206">The <see cref="T:System.Type" /> of the workflow to create.</span>
          </span>
        </param>
        <param name="namedArgumentValues">
          <span data-ttu-id="aabac-207">워크플로에 대한 인수를 나타내는 문자열로 키가 지정된 개체의 <see cref="T:System.Collections.Generic.Dictionary`2" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-207">A <see cref="T:System.Collections.Generic.Dictionary`2" /> of objects keyed by a string that represents the arguments to the workflow.</span>
          </span>
        </param>
        <param name="instanceId">
          <span data-ttu-id="aabac-208">만들 특정 <see cref="T:System.Guid" />의 <see cref="T:System.Workflow.Runtime.WorkflowInstance" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-208">The <see cref="T:System.Guid" /> of the specific <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aabac-209">지정된 매개 변수를 사용하여 워크플로 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-209">Creates a workflow instance by using the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aabac-210">만들어진 워크플로 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-210">The created workflow instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aabac-211"><xref:System.Workflow.Runtime.WorkflowInstance>를 만들기 전에 유효성 검사가 먼저 실행됩니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-211">Before the <xref:System.Workflow.Runtime.WorkflowInstance> is created, validation is executed on it.</span></span> <span data-ttu-id="aabac-212">유효성 검사 오류가 발생하면 <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-212">If any validation errors occur, the <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> is thrown.</span></span> <span data-ttu-id="aabac-213">단순한 시나리오에서는 문제가 없지만 서버 환경에서는 활성화가 실행될 때마다 워크플로의 유효성을 다시 검사하는 것이 불필요한 부담이 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-213">This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</span></span>  
  
 <span data-ttu-id="aabac-214">유효성 검사 해제[!INCLUDE[crabout](~/includes/crabout-md.md)]<xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aabac-214">[!INCLUDE[crabout](~/includes/crabout-md.md)] disabling validation, see <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</span></span>  
  
 <span data-ttu-id="aabac-215">`instanceId`이 로드한 모든 실행 중인 워크플로의 워크플로 <xref:System.Workflow.Runtime.WorkflowRuntime>는 고유해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-215">The workflow `instanceId` for any running workflows loaded by the <xref:System.Workflow.Runtime.WorkflowRuntime> must be unique.</span></span> <span data-ttu-id="aabac-216">`instanceId`를 전달하여 워크플로를 만드는 경우 실행 중인 워크플로에서 이미 해당 `instanceId`를 사용 중이면 <xref:System.InvalidOperationException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-216">If you pass an `instanceId` to create a workflow and a running workflow is already using that `instanceId`, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 <span data-ttu-id="aabac-217">매개 변수를 전달에 대 한 예제 `CreateWorkflow`, 참조 [Workflow with Parameters 샘플](http://go.microsoft.com/fwlink/?LinkID=157403)합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-217">For an example of passing in parameters to `CreateWorkflow`, see [Workflow with Parameters Sample](http://go.microsoft.com/fwlink/?LinkID=157403).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aabac-218">
            <paramref name="workflowType" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-218">
              <paramref name="workflowType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWorkflow">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (System.Xml.XmlReader workflowDefinitionReader, System.Xml.XmlReader rulesReader, System.Collections.Generic.Dictionary&lt;string,object&gt; namedArgumentValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowInstance CreateWorkflow(class System.Xml.XmlReader workflowDefinitionReader, class System.Xml.XmlReader rulesReader, class System.Collections.Generic.Dictionary`2&lt;string, object&gt; namedArgumentValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWorkflow (workflowDefinitionReader As XmlReader, rulesReader As XmlReader, namedArgumentValues As Dictionary(Of String, Object)) As WorkflowInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowInstance ^ CreateWorkflow(System::Xml::XmlReader ^ workflowDefinitionReader, System::Xml::XmlReader ^ rulesReader, System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ namedArgumentValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowDefinitionReader" Type="System.Xml.XmlReader" />
        <Parameter Name="rulesReader" Type="System.Xml.XmlReader" />
        <Parameter Name="namedArgumentValues" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="workflowDefinitionReader">
          <span data-ttu-id="aabac-219">워크플로 정의를 포함하는 <see cref="T:System.Xml.XmlReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-219">An <see cref="T:System.Xml.XmlReader" /> that contains the workflow definition.</span>
          </span>
        </param>
        <param name="rulesReader">
          <span data-ttu-id="aabac-220">
            <see cref="T:System.Xml.XmlReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-220">An <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </param>
        <param name="namedArgumentValues">
          <span data-ttu-id="aabac-221">워크플로에 대한 인수를 나타내는 문자열로 키가 지정된 개체의 <see cref="T:System.Collections.Generic.Dictionary`2" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-221">A <see cref="T:System.Collections.Generic.Dictionary`2" /> of objects keyed by a string that represents the arguments to the workflow.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aabac-222">지정된 <see cref="T:System.Xml.XmlReader" /> 개체 및 지정된 <see cref="T:System.Collections.Generic.Dictionary`2" />에 포함된 인수를 사용하여 워크플로 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-222">Creates a workflow instance by using the specified <see cref="T:System.Xml.XmlReader" /> objects and the arguments contained in the specified <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aabac-223">만들어진 워크플로 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-223">The created workflow instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aabac-224">워크플로 인스턴스는 <xref:System.Xml.XmlReader>가 참조하는 워크플로 및 `namedArgumentValues`가 제공하는 인수에서 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-224">The workflow instance is created from the workflow definition referenced by the <xref:System.Xml.XmlReader> and the arguments supplied by `namedArgumentValues`.</span></span>  
  
 <span data-ttu-id="aabac-225"><xref:System.Workflow.Runtime.WorkflowInstance>를 만들기 전에 유효성 검사가 먼저 실행됩니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-225">Before the <xref:System.Workflow.Runtime.WorkflowInstance> is created, validation is executed on it.</span></span> <span data-ttu-id="aabac-226">유효성 검사 오류가 발생하면 <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-226">If any validation errors occur, the <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> is thrown.</span></span> <span data-ttu-id="aabac-227">단순한 시나리오에서는 문제가 없지만 서버 환경에서는 활성화가 실행될 때마다 워크플로의 유효성을 다시 검사하는 것이 불필요한 부담이 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-227">This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</span></span>  
  
 <span data-ttu-id="aabac-228">유효성 검사 해제[!INCLUDE[crabout](~/includes/crabout-md.md)]<xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aabac-228">[!INCLUDE[crabout](~/includes/crabout-md.md)] disabling validation, see <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</span></span>  
  
 <span data-ttu-id="aabac-229">매개 변수를 전달에 대 한 예제 `CreateWorkflow`, 참조 [Workflow with Parameters 샘플](http://go.microsoft.com/fwlink/?LinkID=157403)합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-229">For an example of passing in parameters to `CreateWorkflow`, see [Workflow with Parameters Sample](http://go.microsoft.com/fwlink/?LinkID=157403).</span></span>  
  
 <span data-ttu-id="aabac-230">XML에 정의 된 규칙을 사용 하 여 예제를 보려면 [규칙 샘플 IfElse](http://go.microsoft.com/fwlink/?LinkId=157404)합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-230">For an example of using rules defined in XML, see [IfElse with Rules Sample](http://go.microsoft.com/fwlink/?LinkId=157404).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aabac-231">
            <paramref name="workflowDefinitionReader" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-231">
              <paramref name="workflowDefinitionReader" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aabac-232">
            <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />이 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-232">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWorkflow">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (System.Xml.XmlReader workflowDefinitionReader, System.Xml.XmlReader rulesReader, System.Collections.Generic.Dictionary&lt;string,object&gt; namedArgumentValues, Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowInstance CreateWorkflow(class System.Xml.XmlReader workflowDefinitionReader, class System.Xml.XmlReader rulesReader, class System.Collections.Generic.Dictionary`2&lt;string, object&gt; namedArgumentValues, valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWorkflow (workflowDefinitionReader As XmlReader, rulesReader As XmlReader, namedArgumentValues As Dictionary(Of String, Object), instanceId As Guid) As WorkflowInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowInstance ^ CreateWorkflow(System::Xml::XmlReader ^ workflowDefinitionReader, System::Xml::XmlReader ^ rulesReader, System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ namedArgumentValues, Guid instanceId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowDefinitionReader" Type="System.Xml.XmlReader" />
        <Parameter Name="rulesReader" Type="System.Xml.XmlReader" />
        <Parameter Name="namedArgumentValues" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="workflowDefinitionReader">
          <span data-ttu-id="aabac-233">워크플로 정의를 포함하는 <see cref="T:System.Xml.XmlReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-233">An <see cref="T:System.Xml.XmlReader" /> that contains the workflow definition.</span>
          </span>
        </param>
        <param name="rulesReader">
          <span data-ttu-id="aabac-234">
            <see cref="T:System.Xml.XmlReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-234">An <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </param>
        <param name="namedArgumentValues">
          <span data-ttu-id="aabac-235">워크플로에 대한 인수를 나타내는 문자열로 키가 지정된 개체의 <see cref="T:System.Collections.Generic.Dictionary`2" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-235">A <see cref="T:System.Collections.Generic.Dictionary`2" /> of objects keyed by a string that represents the arguments to the workflow.</span>
          </span>
        </param>
        <param name="instanceId">
          <span data-ttu-id="aabac-236">만들 특정 <see cref="T:System.Guid" />의 <see cref="T:System.Workflow.Runtime.WorkflowInstance" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-236">The <see cref="T:System.Guid" /> of the specific <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aabac-237">지정된 매개 변수를 사용하여 워크플로 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-237">Creates a workflow instance by using the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aabac-238">만들어진 워크플로 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-238">The created workflow instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aabac-239"><xref:System.Workflow.Runtime.WorkflowInstance>를 만들기 전에 유효성 검사가 먼저 실행됩니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-239">Before the <xref:System.Workflow.Runtime.WorkflowInstance> is created, validation is executed on it.</span></span> <span data-ttu-id="aabac-240">유효성 검사 오류가 발생하면 <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-240">If any validation errors occur, the <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> is thrown.</span></span> <span data-ttu-id="aabac-241">단순한 시나리오에서는 문제가 없지만 서버 환경에서는 활성화가 실행될 때마다 워크플로의 유효성을 다시 검사하는 것이 불필요한 부담이 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-241">This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</span></span>  
  
 <span data-ttu-id="aabac-242">유효성 검사 해제[!INCLUDE[crabout](~/includes/crabout-md.md)]<xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aabac-242">[!INCLUDE[crabout](~/includes/crabout-md.md)] disabling validation, see <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</span></span>  
  
 <span data-ttu-id="aabac-243">`instanceId`이 로드한 모든 실행 중인 워크플로의 워크플로 <xref:System.Workflow.Runtime.WorkflowRuntime>는 고유해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-243">The workflow `instanceId` for any running workflows loaded by the <xref:System.Workflow.Runtime.WorkflowRuntime> must be unique.</span></span> <span data-ttu-id="aabac-244">`instanceId`를 전달하여 워크플로를 만드는 경우 실행 중인 워크플로에서 이미 해당 `instanceId`를 사용 중이면 <xref:System.InvalidOperationException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-244">If you pass an `instanceId` to create a workflow and a running workflow is already using that `instanceId`, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 <span data-ttu-id="aabac-245">매개 변수를 전달에 대 한 예제 `CreateWorkflow`, 참조 [Workflow with Parameters 샘플](http://go.microsoft.com/fwlink/?LinkID=157403)합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-245">For an example of passing in parameters to `CreateWorkflow`, see [Workflow with Parameters Sample](http://go.microsoft.com/fwlink/?LinkID=157403).</span></span>  
  
 <span data-ttu-id="aabac-246">XML에 정의 된 규칙을 사용 하 여 예제를 보려면 [규칙 샘플 IfElse](http://go.microsoft.com/fwlink/?LinkID=157404)합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-246">For an example of using rules defined in XML, see [IfElse with Rules Sample](http://go.microsoft.com/fwlink/?LinkID=157404).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aabac-247">
            <paramref name="workflowType" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-247">
              <paramref name="workflowType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aabac-248">
            <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />에서 사용하는 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-248">Releases the resources used by the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aabac-249"><xref:System.Workflow.Runtime.WorkflowRuntime>을 올바르게 종료하려면 <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A>을 호출한 후에 <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>만 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-249">To shut down the <xref:System.Workflow.Runtime.WorkflowRuntime> gracefully, you should only call <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> after you have called <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>.</span></span> <span data-ttu-id="aabac-250">이는 <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> 메서드만을 호출하면 <xref:System.Workflow.Runtime.WorkflowRuntime>이 사용할 수 없는 상태가 되기 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-250">This is because calling the <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> method alone leaves the <xref:System.Workflow.Runtime.WorkflowRuntime> in an unusable state.</span></span> <span data-ttu-id="aabac-251"><xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A>는 열린 파일 핸들, 데이터베이스 연결 등을 닫아 런타임이 사용하는 리소스를 확보하지만 워크플로 인스턴스 언로드, 서비스 중지 또는 <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>이 수행하는 기타 작업을 수행하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-251"><xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> frees the resources used by the runtime by closing open file handles, database connections, and so on, but it does not unload workflow instances, stop services, or do any of the other actions that <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> does.</span></span>  
  
 <span data-ttu-id="aabac-252"><xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A>에 사용되는 리소스를 가비지 수집기가 자동으로 해제하기 전에 호스트 응용 프로그램에서 해제해야 하는 경우에만 <xref:System.Workflow.Runtime.WorkflowRuntime>를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-252"><xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> should be called only when the host application must free the resources used by the <xref:System.Workflow.Runtime.WorkflowRuntime> before they are automatically freed by the garbage collector.</span></span> <span data-ttu-id="aabac-253">에 대 한 일반적인 내용은 <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A>, 참조 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Dispose 메서드를 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-253">For general information about <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A>, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aabac-254">다음 예제에서는 <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> 개체에서 <xref:System.Workflow.Runtime.WorkflowRuntime>를 호출하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-254">The following example demonstrates how to call <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> on a <xref:System.Workflow.Runtime.WorkflowRuntime> object.</span></span> <span data-ttu-id="aabac-255">이 샘플에서 <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> 메서드는 응용 프로그램의 기본 폼에 대한 FormClosing 이벤트 처리기에서 호출됩니다. 이렇게 하면 런타임에서 만들어진 개체가 응용 프로그램이 종료될 때 올바르게 정리됩니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-255">In this sample, the <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> method is called from the FormClosing event handler for the main form of the application; this ensures that the objects created by the runtime are properly cleaned up when the application shuts down.</span></span> <span data-ttu-id="aabac-256">이 샘플은는 [음성 응용 프로그램 샘플](http://go.microsoft.com/fwlink/?LinkId=157405)합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-256">This sample is from the [Speech Application Sample](http://go.microsoft.com/fwlink/?LinkId=157405).</span></span>  
  
 [!code-csharp[WF_Samples#108](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#108)]
 [!code-vb[WF_Samples#108](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#108)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllServices">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;object&gt; GetAllServices (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;object&gt; GetAllServices(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllServices (serviceType As Type) As ReadOnlyCollection(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Object ^&gt; ^ GetAllServices(Type ^ serviceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="aabac-257">서비스가 반환되기 위해 구현해야 하는 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-257">The <see cref="T:System.Type" /> that services must implement to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aabac-258">지정된 <see cref="T:System.Type" />을 구현하거나 해당 형식에서 파생되었으며 워크플로 런타임 엔진에 추가된 모든 서비스를 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-258">Retrieves all the services that are added to the workflow run-time engine that implement or derive from the specified <see cref="T:System.Type" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aabac-259">지정된 <see cref="T:System.Type" />을 구현하거나 해당 형식에서 파생된 서비스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-259">Services that implement or derive from the specified <see cref="T:System.Type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aabac-260">빈 <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>은 지정된 <xref:System.Type>을 구현하거나 해당 형식에서 파생된 서비스가 워크플로 런타임 엔진에 추가되지 않았음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-260">An empty <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> indicates that no services that implement or derive from the specified <xref:System.Type> have been added to the workflow run-time engine.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aabac-261">다음 예제에서는 <xref:System.Workflow.Runtime.WorkflowRuntime> 개체에서 지정된 유형의 모든 서비스를 검색하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-261">The following example demonstrates how to retrieve all services of a given type from a <xref:System.Workflow.Runtime.WorkflowRuntime> object.</span></span>  
  
 [!code-csharp[WF_Samples#19](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#19)]
 [!code-vb[WF_Samples#19](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aabac-262">
            <paramref name="serviceType" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-262">
              <paramref name="serviceType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aabac-263">
            <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />이 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-263">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAllServices&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt; GetAllServices&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;!!T&gt; GetAllServices&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllServices(Of T) () As ReadOnlyCollection(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;T&gt; ^ GetAllServices();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="aabac-264">서비스 유형입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-264">The service type.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="aabac-265">지정된 제네릭 형식을 구현하거나 해당 형식에서 파생되었으며 워크플로 런타임 엔진에 추가된 모든 서비스를 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-265">Retrieves all the services that are added to the workflow run-time engine that implement or derive from the specified generic type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aabac-266">지정된 제네릭 형식을 구현하거나 해당 형식에서 파생된 서비스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-266">Services that implement or derive from the specified generic type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aabac-267">빈 <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>은 지정된 제네릭 형식을 구현하거나 해당 형식에서 파생된 서비스가 워크플로 런타임 엔진에 추가되지 않았음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-267">An empty <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> indicates that no services have been added to the workflow run-time engine that implement or derive from the specified generic type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aabac-268">다음 예제에서는 <xref:System.Workflow.Runtime.WorkflowRuntime> 개체에서 지정된 유형의 모든 서비스를 검색하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-268">The following example demonstrates how to retrieve all services of a given type from a <xref:System.Workflow.Runtime.WorkflowRuntime> object.</span></span>  
  
 [!code-csharp[WF_Samples#6](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#6)]
 [!code-vb[WF_Samples#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aabac-269">
            <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />이 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-269">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLoadedWorkflows">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.Runtime.WorkflowInstance&gt; GetLoadedWorkflows ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.Runtime.WorkflowInstance&gt; GetLoadedWorkflows() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLoadedWorkflows () As ReadOnlyCollection(Of WorkflowInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::Runtime::WorkflowInstance ^&gt; ^ GetLoadedWorkflows();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.Runtime.WorkflowInstance&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aabac-270">현재 메모리에 로드된 모든 워크플로 인스턴스를 포함하는 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-270">Gets a collection that contains all the workflow instances currently loaded in memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aabac-271">현재 메모리에 로드된 각 워크플로 인스턴스에 대한 <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-271">A <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> object for each workflow instance currently loaded in memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aabac-272"><xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A>와 달리 이 메서드는 런타임이 시작되지 않은 경우 <xref:System.InvalidOperationException>을 throw하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-272">Note that, unlike <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A>, this method does not throw a <xref:System.InvalidOperationException> if the runtime is not started.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aabac-273">다음 예제에서는 <xref:System.Workflow.Runtime.WorkflowRuntime> 개체에서 로드된 워크플로 컬렉션을 검색하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-273">The following example demonstrates how to retrieve a collection of loaded workflows from a <xref:System.Workflow.Runtime.WorkflowRuntime> object.</span></span>  
  
 [!code-csharp[WF_Samples#18](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#18)]
 [!code-vb[WF_Samples#18](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aabac-274">
            <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />이 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-274">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="aabac-275">검색할 서비스의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-275">The <see cref="T:System.Type" /> of the service to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aabac-276">워크플로 런타임 엔진에서 지정된 <see cref="T:System.Type" />의 서비스를 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-276">Retrieves a service of the specified <see cref="T:System.Type" /> from the workflow run-time engine.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aabac-277">지정된 <see cref="T:System.Type" />의 서비스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-277">The service of the specified <see cref="T:System.Type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aabac-278">지정된 <xref:System.Workflow.Runtime.WorkflowRuntime.GetService%2A>에 대한 서비스가 여러 개 있으면 <xref:System.InvalidOperationException>에서 <xref:System.Type>을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-278"><xref:System.Workflow.Runtime.WorkflowRuntime.GetService%2A> throws an <xref:System.InvalidOperationException> if more than one service exists for the specified <xref:System.Type>.</span></span> <span data-ttu-id="aabac-279">따라서 <xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A>에 지정된 형식의 서비스가 여러 개 있을 수 있는 경우 <xref:System.Workflow.Runtime.WorkflowRuntime>의 오버로드된 메서드 중 하나를 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-279">Therefore, you should use one of the overloaded methods of <xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A> if it is possible that multiple services of the specified type are present in the <xref:System.Workflow.Runtime.WorkflowRuntime>.</span></span> <span data-ttu-id="aabac-280">예를 들어 워크플로 런타임 엔진에는 여러 개의 추적 서비스가 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-280">For example, the workflow run-time engine may have multiple tracking services.</span></span> <span data-ttu-id="aabac-281"><xref:System.Workflow.Runtime.Tracking.TrackingService> 기본 클래스를 지정하여 추적 서비스를 요청하면 예외가 throw될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-281">If you request a tracking service by specifying the <xref:System.Workflow.Runtime.Tracking.TrackingService> base class, it is possible that an exception will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aabac-282">
            <paramref name="serviceType" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-282">
              <paramref name="serviceType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aabac-283">
            <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />이 이미 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-283">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is already disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aabac-284">
            <paramref name="serviceType" /> 형식의 서비스가 여러 개 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-284">More than one service of type <paramref name="serviceType" /> was found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetService&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetService&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetService&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService(Of T) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T GetService();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="aabac-285">서비스 유형입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-285">The service type.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="aabac-286">워크플로 런타임 엔진에서 지정된 제네릭 형식의 서비스를 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-286">Retrieves a service of the specified generic type from the workflow run-time engine.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aabac-287">지정된 제네릭 형식의 단일 서비스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-287">A single service of the specified generic type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aabac-288">지정된 제네릭 형식에 대한 서비스가 여러 개 있으면 <xref:System.Workflow.Runtime.WorkflowRuntime.GetService%2A>에서 <xref:System.InvalidOperationException>을 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-288"><xref:System.Workflow.Runtime.WorkflowRuntime.GetService%2A> throws an <xref:System.InvalidOperationException> if more than one service exists for the specified generic type.</span></span> <span data-ttu-id="aabac-289">따라서 <xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A>에 해당 제네릭 형식의 서비스가 여러 개 있을 수 있는 경우 <xref:System.Workflow.Runtime.WorkflowRuntime>의 오버로드된 메서드 중 하나를 사용해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-289">Therefore, you should use one of the overloaded methods of <xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A> if it is possible that multiple services of the generic type are present in the <xref:System.Workflow.Runtime.WorkflowRuntime>.</span></span> <span data-ttu-id="aabac-290">예를 들어 워크플로 런타임 엔진에는 여러 개의 추적 서비스가 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-290">For example, the workflow run-time engine may have multiple tracking services.</span></span> <span data-ttu-id="aabac-291"><xref:System.Workflow.Runtime.Tracking.TrackingService> 기본 클래스를 지정하여 추적 서비스를 요청하면 예외가 throw될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-291">If you request a tracking service by specifying the <xref:System.Workflow.Runtime.Tracking.TrackingService> base class, it is possible that an exception will be thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aabac-292">다음 예제에서는 <xref:System.Workflow.Runtime.WorkflowRuntime> 개체에서 단일 서비스, 이 경우 <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService> 유형의 서비스를 검색하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-292">The following example demonstrates how to retrieve a single service from a <xref:System.Workflow.Runtime.WorkflowRuntime> object; in this case, a service of type <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService>.</span></span> <span data-ttu-id="aabac-293">이 예제에서는 [워크플로 스레딩 샘플](http://go.microsoft.com/fwlink/?LinkId=157350)합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-293">This example is from the [Workflow Threading Sample](http://go.microsoft.com/fwlink/?LinkId=157350).</span></span>  
  
 [!code-csharp[WF_Samples#28](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#28)]
 [!code-vb[WF_Samples#28](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aabac-294">
            <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />이 이미 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-294">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> has already been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aabac-295">제네릭 형식의 서비스가 여러 개 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-295">More than one service of the generic type was found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflow">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowInstance GetWorkflow (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowInstance GetWorkflow(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflow (instanceId As Guid) As WorkflowInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowInstance ^ GetWorkflow(Guid instanceId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="aabac-296">워크플로 인스턴스의 <see cref="T:System.Guid" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-296">The <see cref="T:System.Guid" /> of a workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aabac-297">지정된 <see cref="T:System.Guid" />가 있는 워크플로 인스턴스를 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-297">Retrieves the workflow instance that has the specified <see cref="T:System.Guid" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aabac-298">지정한 <see cref="T:System.Workflow.Runtime.WorkflowInstance" />가 있는 <see cref="T:System.Guid" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-298">The <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> that has the specified <see cref="T:System.Guid" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aabac-299">`instanceId`가 현재 메모리에 없는 워크플로 인스턴스를 지정하면 워크플로 인스턴스가 메모리에 로드되고 실행이 예약됩니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-299">If `instanceId` specifies a workflow instance that is not currently in memory, the workflow instance is loaded into memory and scheduled for execution.</span></span> <span data-ttu-id="aabac-300">예를 들어 워크플로 인스턴스가 중단된 후에는 <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A>를 호출하여 워크플로 인스턴스를 다시 메모리에 로드할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-300">For example, after a workflow instance is aborted, you can call <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A> to load the workflow instance back into memory.</span></span> <span data-ttu-id="aabac-301">이 경우 워크플로 인스턴스의 마지막으로 지속된 상태가 지속성 서비스에 의해 메모리에 로드됩니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-301">In this case, the last persisted state of the workflow instance is loaded into memory by the persistence service.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aabac-302">다음 코드 예제에서는 `ReloadWorkflow` 메서드를 호출하는 <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A> 메서드를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-302">The following code example demonstrates a `ReloadWorkflow` method that calls the <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A> method.</span></span> <span data-ttu-id="aabac-303">`ReloadWorkflow` 메서드는 `Runtime` 클래스의 모든 메서드, 속성 및 이벤트에 액세스하는 <xref:System.Workflow.Runtime.WorkflowRuntime> 속성이 있는 더 큰 클래스의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-303">The `ReloadWorkflow` method is part of a larger class that has a `Runtime` property to access all of the methods, properties, and events of the <xref:System.Workflow.Runtime.WorkflowRuntime> class.</span></span>  
  
 <span data-ttu-id="aabac-304">이 코드 예제는의 일부는 [사용자 지정 지 속성 서비스 샘플](http://go.microsoft.com/fwlink/?LinkId=157351) 샘플.</span><span class="sxs-lookup"><span data-stu-id="aabac-304">This code example is part of the [Custom Persistence Service Sample](http://go.microsoft.com/fwlink/?LinkId=157351) sample.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aabac-305">이 예제에서 <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> 호출은 <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A> 및 <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> 메서드가 동일한 내부 도우미 메서드를 사용하여 워크플로 인스턴스를 메모리에 로드하므로 중복됩니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-305">In the example, the call to <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> is redundant because both the <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A> and <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> methods use the same internal helper method to load the workflow instance into memory.</span></span>  
  
 [!code-csharp[WF_Samples#265](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#265)]
 [!code-vb[WF_Samples#265](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#265)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aabac-306">워크플로 런타임이 시작되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-306">The workflow runtime is not started.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsStarted">
      <MemberSignature Language="C#" Value="public bool IsStarted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStarted" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStarted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStarted { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aabac-307">워크플로 런타임 엔진이 시작되었는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-307">Gets a value that indicates whether the workflow run-time engine has been started.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aabac-308">워크플로 런타임 엔진이 시작되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-308">
              <see langword="true" /> if the workflow run-time engine has been started; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aabac-309">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-309">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aabac-310"><xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>는 워크플로 런타임 엔진 서비스가 실행 중임을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-310"><xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> indicates that the workflow run-time engine services are running.</span></span> <span data-ttu-id="aabac-311"><xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> `false` 호스트 호출할 때까지 <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-311"><xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> is `false` until the host calls <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>.</span></span> <span data-ttu-id="aabac-312">또한 호스트가 `true`을 호출할 때까지 <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>로 유지됩니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-312">It remains `true` until the host calls <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aabac-313">실행되는 동안에는 워크플로 런타임 엔진에 핵심 서비스를 추가할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-313">You cannot add core services to the workflow run-time engine while it is running.</span></span> <span data-ttu-id="aabac-314">핵심 서비스는 <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> 클래스, <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> 클래스, <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> 클래스 및 <xref:System.Workflow.Runtime.Tracking.TrackingService> 클래스에서 파생된 서비스입니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-314">Core services are services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> class, the <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class, and the <xref:System.Workflow.Runtime.Tracking.TrackingService> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aabac-315">다음 예제에서는 <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> 개체의 <xref:System.Workflow.Runtime.WorkflowRuntime> 속성에 액세스하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-315">The following example demonstrates how to access the <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> property of a <xref:System.Workflow.Runtime.WorkflowRuntime> object.</span></span> <span data-ttu-id="aabac-316">이 예제에서 런타임이 시작되면 메시지가 콘솔에 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-316">In this example, if the runtime is started, a message is printed to the console.</span></span>  
  
 [!code-csharp[WF_Samples#21](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#21)]
 [!code-vb[WF_Samples#21](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowRuntime.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aabac-317">
            <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />과 연결된 이름을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-317">Gets or sets the name associated with the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aabac-318">이 <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />과 연결된 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-318">The name associated with this <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aabac-319">설정할 수 없습니다. <xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A> 하는 동안 워크플로 런타임 엔진이 실행 되 고 (<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> 은 `true`).</span><span class="sxs-lookup"><span data-stu-id="aabac-319">You cannot set <xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A> while the workflow run-time engine is running (<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> is `true`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aabac-320">다음 예제에서는 <xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A> 개체의 <xref:System.Workflow.Runtime.WorkflowRuntime> 속성에 액세스하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-320">The following example demonstrates how to access the <xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A> property of a <xref:System.Workflow.Runtime.WorkflowRuntime> object.</span></span> <span data-ttu-id="aabac-321">이 예제에서 런타임 이름은 "Main Runtime"으로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-321">In this example, the name of the runtime is set to "Main Runtime".</span></span>  
  
 [!code-csharp[WF_Samples#20](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#20)]
 [!code-vb[WF_Samples#20](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aabac-322">삭제된 <see cref="P:System.Workflow.Runtime.WorkflowRuntime.Name" />에 <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />을 설정하려고 시도하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-322">An attempt to set <see cref="P:System.Workflow.Runtime.WorkflowRuntime.Name" /> on a <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> that is disposed occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aabac-323">워크플로 런타임 엔진이 실행되는 동안 <see cref="P:System.Workflow.Runtime.WorkflowRuntime.Name" />을 설정하려고 시도하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-323">An attempt to set <see cref="P:System.Workflow.Runtime.WorkflowRuntime.Name" /> while the workflow run-time engine is running occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveService">
      <MemberSignature Language="C#" Value="public void RemoveService (object service);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveService(object service) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveService (service As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveService(System::Object ^ service);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="service">
          <span data-ttu-id="aabac-324">제거할 서비스를 나타내는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-324">An object that represents the service to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aabac-325">워크플로 런타임 엔진에서 지정된 서비스를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-325">Removes the specified service from the workflow run-time engine.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aabac-326">워크플로 런타임 엔진이 실행 되는 동안에 핵심 서비스를 제거할 수 없습니다 (<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> 은 `true`).</span><span class="sxs-lookup"><span data-stu-id="aabac-326">You cannot remove a core service while the workflow run-time engine is running (<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> is `true`).</span></span> <span data-ttu-id="aabac-327">핵심 서비스는 <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> 클래스, <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> 클래스, <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> 클래스 및 <xref:System.Workflow.Runtime.Tracking.TrackingService> 클래스에서 파생된 서비스입니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-327">Core services are services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class, or the <xref:System.Workflow.Runtime.Tracking.TrackingService> class.</span></span>  <span data-ttu-id="aabac-328">`service`가 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 클래스에서 파생되는 경우 <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A>는 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>가 구현하는 `service` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-328">If `service` derives from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class, <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> calls the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> method implemented by `service`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aabac-329">다음 예제에서는 <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>를 <xref:System.Workflow.Runtime.WorkflowRuntime>에 추가 및 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-329">In the following example, a <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> is added and removed from the <xref:System.Workflow.Runtime.WorkflowRuntime>.</span></span>  
  
 [!code-csharp[WF_Samples#16](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#16)]
 [!code-vb[WF_Samples#16](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aabac-330">
            <paramref name="service" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-330">
              <paramref name="service" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aabac-331">
            <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />이 이미 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-331">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is already disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aabac-332">워크플로 런타임 엔진이 시작되었고(<see cref="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" />가 <see langword="true" />인 경우) <paramref name="service" />가 핵심 서비스인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-332">The workflow run-time engine has started (<see cref="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" /> is <see langword="true" />) and <paramref name="service" /> is a core service.</span>
          </span>
          <span data-ttu-id="aabac-333">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-333">\- or -</span>
          </span>
          <span data-ttu-id="aabac-334">
            <paramref name="service" />가 워크플로 런타임 엔진에 등록되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-334">
              <paramref name="service" /> is not registered with the workflow run-time engine.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ServicesExceptionNotHandled">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs&gt; ServicesExceptionNotHandled;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs&gt; ServicesExceptionNotHandled" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled" />
      <MemberSignature Language="VB.NET" Value="Public Event ServicesExceptionNotHandled As EventHandler(Of ServicesExceptionNotHandledEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::ServicesExceptionNotHandledEventArgs ^&gt; ^ ServicesExceptionNotHandled;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aabac-335">
            <see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /> 클래스에서 파생된 서비스가 <see cref="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)" />를 호출할 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-335">Occurs when a service that is derived from the <see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /> class calls <see cref="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aabac-336"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 클래스에서 파생된 서비스는 처리할 수 없었던 예외가 실행 중에 발생했음을 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A> 이벤트에 대한 구독자에 알리기 위해 <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled> 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-336">A service that is derived from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class can call the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A> method to inform subscribers to the <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled> event that an exception that it was unable to handle occurred during its execution.</span></span> <span data-ttu-id="aabac-337">복구 메커니즘을 구현하기 위해 이 이벤트를 구독할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-337">You can subscribe to this event to implement a recovery mechanism.</span></span>  
  
 <span data-ttu-id="aabac-338">워크플로 런타임 엔진이 워크플로 인스턴스를 만들기 전에 예외가 발생하면 이 이벤트가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-338">This event is raised when a workflow instance has not been created yet by the workflow run-time engine and an exception occurs.</span></span> <span data-ttu-id="aabac-339">이 시나리오에서 호스트 응용 프로그램에 예외가 발생했다고 알리는 유일한 방법은 이 이벤트를 발생시키는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-339">In this scenario, the only way to inform a host application that an exception occurred is to raise this event.</span></span> <span data-ttu-id="aabac-340">그러나 워크플로 런타임 엔진이 직접 이 이벤트를 호출하지는 않습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-340">However, the workflow run-time engine does not call this directly.</span></span> <span data-ttu-id="aabac-341">대신 워크플로 런타임 엔진은 예외를 워크플로 인스턴스로 전달하거나, 인스턴스가 없는 경우 호출자(이 경우 이 이벤트를 발생시킨 서비스)에 예외를 다시 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-341">Instead, the workflow run-time engine either delivers an exception to the workflow instance or, if there is no instance, throws back to the caller, which in this case is actually the service that fires this event.</span></span> <span data-ttu-id="aabac-342">사용자가 직접 지속성 또는 스케줄러 서비스를 만드는 경우 기본 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A> 메서드를 통해 이 이벤트를 구현해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-342">If you create your own persistence or scheduler service, you must implement this event yourself through the base <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A> method.</span></span>  
  
 <span data-ttu-id="aabac-343"><xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled> 이벤트의 경우 발신자는 <xref:System.Workflow.Runtime.WorkflowRuntime>을 포함하고 <xref:System.Workflow.Runtime.WorkflowEventArgs>는 서비스를 사용하고 있던 워크플로 인스턴스의 <xref:System.Guid>와 처리할 수 없었던 <xref:System.Exception>을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-343">For the <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled> event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Guid> of the workflow instance that was using the service and the <xref:System.Exception> that could not be handled.</span></span>  
  
 [!INCLUDE[crabout](~/includes/crabout-md.md)]<span data-ttu-id="aabac-344"> 이벤트를 처리 하는, 참조 [이벤트 사용](http://go.microsoft.com/fwlink/?LinkID=157352)합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-344"> handling events, see [Consuming Events](http://go.microsoft.com/fwlink/?LinkID=157352).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aabac-345">다음 코드 예제에서는 워크플로 호스트에서 <xref:System.Workflow.Runtime.WorkflowRuntime> 기능을 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-345">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="aabac-346">이 코드에서는 <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled>를 이벤트 처리기인 `OnExceptionNotHandled` 메서드에 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-346">The code associates <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled> with an event handler, a method named `OnExceptionNotHandled`.</span></span>  
  
 <span data-ttu-id="aabac-347">이 코드 예제는의 일부는 [사용자 지정 지 속성 서비스 샘플](http://go.microsoft.com/fwlink/?LinkID=157351)합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-347">This code example is part of the [Custom Persistence Service Sample](http://go.microsoft.com/fwlink/?LinkID=157351).</span></span>  
  
 [!code-csharp[WF_Samples#271](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#271)]
 [!code-vb[WF_Samples#271](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#271)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Started">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt; Started;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt; Started" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.Started" />
      <MemberSignature Language="VB.NET" Value="Public Event Started As EventHandler(Of WorkflowRuntimeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowRuntimeEventArgs ^&gt; ^ Started;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aabac-348">워크플로 런타임 엔진이 시작될 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-348">Occurs when the workflow run-time engine is started.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aabac-349"><xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> 메서드를 발생 시킵니다는 <xref:System.Workflow.Runtime.WorkflowRuntime.Started> 이벤트 워크플로 런타임 엔진의 핵심 서비스 구성 유효성을 검사 한 후이 호출의 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 각에서 파생 되는 서비스에 의해 구현 되는 메서드는 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 클래스 이 설정 <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> 를 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-349">The <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> method raises the <xref:System.Workflow.Runtime.WorkflowRuntime.Started> event after it has validated the core service configuration of the workflow run-time engine, has invoked the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> method implemented by each of its services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class, and has set <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> to `true`.</span></span> <span data-ttu-id="aabac-350">워크플로 런타임 엔진이 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 클래스에서 파생된 서비스를 시작하는 순서는 경우에 따라 달라지며, 이러한 워크플로 런타임 엔진 서비스 중 일부는 다른 서비스가 제공하는 기능이 있어야만 시작 작업을 완료할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-350">There is no guarantee about the order in which the services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class are started by the workflow run-time engine, and some of these workflow run-time engine services may depend on functionality supplied by other of these services to complete their startup tasks.</span></span> <span data-ttu-id="aabac-351">워크플로 런타임 엔진 서비스는 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A?displayProperty=nameWithType> 이벤트가 발생할 때 다른 워크플로 런타임 엔진 서비스의 지원이 필요한 최종 시작 작업을 수행하기 위해 <xref:System.Workflow.Runtime.WorkflowRuntime.Started> 메서드를 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-351">Workflow run-time engine services can override the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A?displayProperty=nameWithType> method to perform any final startup tasks that require the support of other workflow run-time engine services when the <xref:System.Workflow.Runtime.WorkflowRuntime.Started> event is raised.</span></span>  
  
 [!INCLUDE[crabout](~/includes/crabout-md.md)]<span data-ttu-id="aabac-352"> 이벤트를 처리 하는, 참조 [이벤트 사용](http://go.microsoft.com/fwlink/?LinkID=157352)합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-352"> handling events, see [Consuming Events](http://go.microsoft.com/fwlink/?LinkID=157352).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aabac-353">다음 예제에서는 이벤트 처리기가 <xref:System.Workflow.Runtime.WorkflowRuntime.Started>의 <xref:System.Workflow.Runtime.WorkflowRuntime> 이벤트에 추가됩니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-353">In the following example, an event handler is added to the <xref:System.Workflow.Runtime.WorkflowRuntime.Started> event of the <xref:System.Workflow.Runtime.WorkflowRuntime>.</span></span> <span data-ttu-id="aabac-354">이 예제에서 처리기는 단순한 메시지를 콘솔에 표시하는 익명 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-354">In this example, the handler is an anonymous method that prints a simple message to the console.</span></span>  
  
 [!code-csharp[WF_Samples#15](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#15)]
 [!code-vb[WF_Samples#15](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartRuntime">
      <MemberSignature Language="C#" Value="public void StartRuntime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartRuntime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartRuntime ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartRuntime();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aabac-355">워크플로 런타임 엔진과 워크플로 런타임 엔진 서비스를 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-355">Starts the workflow run-time engine and the workflow run-time engine services.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aabac-356">이 메서드는 올바른 핵심 서비스 집합이 있는지 확인한 다음 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 클래스에서 파생된 모든 서비스를 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-356">This method verifies that a valid set of core services exists and then starts any services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class.</span></span>  <span data-ttu-id="aabac-357">하나 및 각 핵심 서비스를 다음 중에서 하나만 있어야: 워크플로 `CommitWorkBatch` 에서 파생 된 서비스는 <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> 에서 파생 된 기본 클래스 및 스케줄러 서비스는 <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> 기본 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-357">There must be one and only one of each of the following core services: a workflow `CommitWorkBatch` service derived from the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> base class and a scheduler service derived from the <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> base class.</span></span>  <span data-ttu-id="aabac-358">이러한 주요 서비스 중 하나 또는 모두 누락 되 면 워크플로 런타임 엔진은 적절 한 기본 서비스를 제공 하는: <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> 워크플로에 대 한 `CommitWorkBatch` 서비스 및 <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService> 스케줄러 서비스에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-358">If either or both of these core services are missing, the workflow run-time engine supplies the appropriate default service: <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> for the workflow `CommitWorkBatch` service and <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService> for the scheduler service.</span></span> <span data-ttu-id="aabac-359">지속성 서비스는 선택 사항이지만 하나의 지속성 서비스만 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-359">A persistence service is optional, but there can be at most only one persistence service present.</span></span> <span data-ttu-id="aabac-360">서비스 구성의 유효성을 검사한 후 <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>은 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 클래스에서 파생된 모든 서비스에서 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-360">After it has validated the service configuration, <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> calls <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> on all of the services that are derived from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class.</span></span>  <span data-ttu-id="aabac-361">마지막으로 워크플로 런타임 엔진은 <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>를 설정하고 <xref:System.Workflow.Runtime.WorkflowRuntime.Started> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-361">Finally, the workflow run-time engine sets <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> and raises the <xref:System.Workflow.Runtime.WorkflowRuntime.Started> event.</span></span>  
  
 <span data-ttu-id="aabac-362">워크플로 런타임 엔진이 시작된 후에는 핵심 서비스를 추가하거나 제거할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-362">You cannot add or remove core services after the workflow run-time engine is started.</span></span> <span data-ttu-id="aabac-363">핵심 서비스는 <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> 클래스, <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> 클래스, <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> 클래스 및 <xref:System.Workflow.Runtime.Tracking.TrackingService> 클래스에서 파생된 서비스입니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-363">Core services are services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class, or the <xref:System.Workflow.Runtime.Tracking.TrackingService> class.</span></span>  <span data-ttu-id="aabac-364">워크플로 런타임 엔진이 실행되는 동안 <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>을 호출하면 작업이 수행되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-364">If you call <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> while the workflow run-time engine is running, no action is performed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aabac-365">다음 코드 예제에서는 워크플로 호스트에서 <xref:System.Workflow.Runtime.WorkflowRuntime> 기능을 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-365">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="aabac-366">이 코드에서는 <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>가 <xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A> 인스턴스를 만들고 <xref:System.Workflow.Runtime.WorkflowRuntime>를 호출하여 서비스를 런타임에 추가한 후 <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>을 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-366">The code calls the <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> after the <xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A> creates a <xref:System.Workflow.Runtime.WorkflowRuntime> instance and after it calls <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> to add services to the runtime.</span></span> <span data-ttu-id="aabac-367">또한 다른 처리가 발생하기 전에 <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>을 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-367">It also calls <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> before any other processing occurs.</span></span>  
  
 <span data-ttu-id="aabac-368">이 코드 예제는의 일부는 [워크플로 취소](http://go.microsoft.com/fwlink/?LinkId=157346) 샘플.</span><span class="sxs-lookup"><span data-stu-id="aabac-368">This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkId=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#258](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#258)]
 [!code-vb[WF_Samples#258](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#258)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aabac-369">
            <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />이 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-369">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="aabac-370">둘 이상의 서비스 워크플로 <see langword="CommitWorkBatch" /> 서비스가 이 <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />에 등록된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-370">There is more than one service workflow <see langword="CommitWorkBatch" /> service registered with this <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span>
          </span>
          <span data-ttu-id="aabac-371">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-371">-or-</span>
          </span>
          <span data-ttu-id="aabac-372">둘 이상의 스케줄러 서비스가 이 <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />에 등록된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-372">There is more than one scheduler service registered with this <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span>
          </span>
          <span data-ttu-id="aabac-373">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-373">-or-</span>
          </span>
          <span data-ttu-id="aabac-374">둘 이상의 지속성 서비스가 이 <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />에 등록된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-374">There is more than one persistence service registered with this <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Stopped">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt; Stopped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt; Stopped" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.Stopped" />
      <MemberSignature Language="VB.NET" Value="Public Event Stopped As EventHandler(Of WorkflowRuntimeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowRuntimeEventArgs ^&gt; ^ Stopped;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aabac-375">워크플로 런타임 엔진이 중지될 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-375">Occurs when the workflow run-time engine is stopped.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aabac-376"><xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> 메서드는 <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> 클래스에서 파생된 각 서비스가 구현하는 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> 메서드를 호출한 후 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-376">The <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> method raises the <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> event after it has invoked the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> method implemented by each of its services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class.</span></span>  <span data-ttu-id="aabac-377">이러한 워크플로 런타임 엔진 서비스가 중지되는 순서는 경우에 따라 달라지며, 이러한 서비스 중 다른 서비스에서 사용되는 기능이 있는 일부 서비스는 다른 서비스도 중지될 때까지 해당 기능을 유지해야 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-377">There is no guarantee about the order in which these workflow run-time engine services are stopped, and some of these services may need to preserve some functionality that is relied on by other services until they too are stopped.</span></span> <span data-ttu-id="aabac-378">이러한 서비스는 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A?displayProperty=nameWithType> 이벤트가 발생할 때 나머지 종료 논리를 수행하기 위해 <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> 메서드를 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-378">Such services can override the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A?displayProperty=nameWithType> method to perform any residual shutdown logic when the <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> event is raised.</span></span>  
  
 [!INCLUDE[crabout](~/includes/crabout-md.md)]<span data-ttu-id="aabac-379"> 이벤트를 처리 하는, 참조 [이벤트 사용](http://go.microsoft.com/fwlink/?LinkID=157352)합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-379"> handling events, see [Consuming Events](http://go.microsoft.com/fwlink/?LinkID=157352).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aabac-380">다음 예제에서는 이벤트 처리기가 <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped>의 <xref:System.Workflow.Runtime.WorkflowRuntime> 이벤트에 추가됩니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-380">In the following example, an event handler is added to the <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> event of the <xref:System.Workflow.Runtime.WorkflowRuntime>.</span></span> <span data-ttu-id="aabac-381">이 예제에서 처리기는 단순한 메시지를 콘솔에 표시하는 익명 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-381">In this example, the handler is an anonymous method that prints a simple message to the console.</span></span>  
  
 [!code-csharp[WF_Samples#14](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#14)]
 [!code-vb[WF_Samples#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopRuntime">
      <MemberSignature Language="C#" Value="public void StopRuntime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopRuntime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopRuntime ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopRuntime();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aabac-382">워크플로 런타임 엔진과 런타임 서비스를 중지합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-382">Stops the workflow run-time engine and the run-time services.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aabac-383">이 메서드를 사용 하면 워크플로 런타임 엔진 각 해당 워크플로 인스턴스 언로드, 모든에서 파생 된 서비스를 중지 하는 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 클래스, 설정 <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> 를 `false`, 발생는 <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-383">This method causes the workflow run-time engine to unload each of its workflow instances, stop all of its services that are derived from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class, set <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> to `false`, and raise the <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> event.</span></span>  
  
 <span data-ttu-id="aabac-384"><xref:System.Workflow.Runtime.WorkflowRuntime>을 올바르게 종료하려면 <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>를 호출하기 전에 <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A>을 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-384">To shut down the <xref:System.Workflow.Runtime.WorkflowRuntime> gracefully, call <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> before you call <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A>.</span></span>  
  
 <span data-ttu-id="aabac-385">자세한 내용은 <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> 메서드를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="aabac-385">For more information, see the <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aabac-386">다음 코드 예제에서는 워크플로 호스트에서 <xref:System.Workflow.Runtime.WorkflowRuntime> 기능을 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-386">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="aabac-387"><xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>은 호스트가 런타임과 연결된 다른 모든 처리를 완료한 후에 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-387"><xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> is called after the host has completed all other processing associated with the runtime.</span></span>  
  
 <span data-ttu-id="aabac-388">이 코드 예제는의 일부는 [워크플로 취소](http://go.microsoft.com/fwlink/?LinkId=157346) 샘플.</span><span class="sxs-lookup"><span data-stu-id="aabac-388">This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkId=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#259](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#259)]
 [!code-vb[WF_Samples#259](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#259)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="aabac-389">
            <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />이 이미 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-389">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is already disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WorkflowAborted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowAborted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowAborted" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowAborted As EventHandler(Of WorkflowEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowEventArgs ^&gt; ^ WorkflowAborted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aabac-390">워크플로 인스턴스가 중단될 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-390">Occurs when a workflow instance is aborted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aabac-391"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted>는 워크플로 인스턴스에 대해 보류 중인 모든 작업이 지워진 후, 워크플로 인스턴스가 메모리에서 무효화되기 전에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-391"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted> occurs after all pending work for the workflow instance is cleared, but before the workflow instance is invalidated in memory.</span></span> <span data-ttu-id="aabac-392"><xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A?displayProperty=nameWithType>를 호출하여 워크플로 인스턴스를 중단할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-392">You can abort a workflow instance by calling <xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="aabac-393">이 이벤트의 경우 발신자는 <xref:System.Workflow.Runtime.WorkflowRuntime>을 포함하고 <xref:System.Workflow.Runtime.WorkflowEventArgs>는 이벤트와 연결된 <xref:System.Workflow.Runtime.WorkflowInstance>를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-393">For this event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> associated with the event.</span></span>  
  
 [!INCLUDE[crabout](~/includes/crabout-md.md)]<span data-ttu-id="aabac-394"> 이벤트를 처리 하는, 참조 [이벤트 사용](http://go.microsoft.com/fwlink/?LinkId=157352)합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-394"> handling events, see [Consuming Events](http://go.microsoft.com/fwlink/?LinkId=157352).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aabac-395">다음 코드 예제에서는 워크플로 호스트에서 <xref:System.Workflow.Runtime.WorkflowRuntime> 기능을 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-395">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="aabac-396">이 코드에서는 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted>를 이벤트 처리기인 `OnWorkflowAborted` 메서드에 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-396">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted> with an event handler, a method named `OnWorkflowAborted`.</span></span>  
  
 <span data-ttu-id="aabac-397">이 코드 예제는의 일부는 [워크플로 취소](http://go.microsoft.com/fwlink/?LinkID=157346) 샘플.</span><span class="sxs-lookup"><span data-stu-id="aabac-397">This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#141](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#141)]
 [!code-vb[WF_Samples#141](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#141)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowCompletedEventArgs&gt; WorkflowCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowCompletedEventArgs&gt; WorkflowCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowCompleted As EventHandler(Of WorkflowCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowCompletedEventArgs ^&gt; ^ WorkflowCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aabac-398">워크플로 인스턴스가 완료될 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-398">Occurs when a workflow instance has completed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aabac-399"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted>는 워크플로 인스턴스가 완료된 후, 인스턴스가 메모리에서 무효화되기 전에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-399"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> is raised after the workflow instance has completed but before the instance is invalidated in memory.</span></span>  
  
 <span data-ttu-id="aabac-400"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> 이벤트의 경우 발신자는 <xref:System.Workflow.Runtime.WorkflowRuntime>을 포함하고 <xref:System.Workflow.Runtime.WorkflowCompletedEventArgs>는 <xref:System.Workflow.Runtime.WorkflowInstance>와 해당 출력 매개 변수를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-400">For the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowCompletedEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> and its output parameters.</span></span>  
  
 [!INCLUDE[crabout](~/includes/crabout-md.md)]<span data-ttu-id="aabac-401"> 이벤트를 처리 하는, 참조 [이벤트 사용](http://go.microsoft.com/fwlink/?LinkId=157352)합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-401"> handling events, see [Consuming Events](http://go.microsoft.com/fwlink/?LinkId=157352).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aabac-402">다음 코드 예제에서는 워크플로 호스트에서 <xref:System.Workflow.Runtime.WorkflowRuntime> 기능을 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-402">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="aabac-403">이 코드에서는 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted>를 이벤트 처리기인 `OnWorkflowCompleted` 메서드에 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-403">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> with an event handler, a method named `OnWorkflowCompleted`.</span></span>  
  
 <span data-ttu-id="aabac-404">이 코드 예제는의 일부는 [워크플로 취소](http://go.microsoft.com/fwlink/?LinkId=157346) 샘플.</span><span class="sxs-lookup"><span data-stu-id="aabac-404">This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkId=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#258](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#258)]
 [!code-vb[WF_Samples#258](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#258)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowCreated" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowCreated As EventHandler(Of WorkflowEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowEventArgs ^&gt; ^ WorkflowCreated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aabac-405">워크플로 인스턴스가 만들어질 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-405">Occurs when a workflow instance is created.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aabac-406">워크플로 런타임 엔진은 워크플로 인스턴스가 완전히 생성된 후, 활동이 처리되기 전에 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-406">The workflow run-time engine raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated> event after the workflow instance is completely constructed but before activities are processed.</span></span> <span data-ttu-id="aabac-407">이 이벤트의 경우 발신자는 <xref:System.Workflow.Runtime.WorkflowRuntime>을 포함하고 <xref:System.Workflow.Runtime.WorkflowEventArgs>는 이벤트와 연결된 <xref:System.Workflow.Runtime.WorkflowInstance>를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-407">For this event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> associated with the event.</span></span>  
  
 [!INCLUDE[crabout](~/includes/crabout-md.md)]<span data-ttu-id="aabac-408"> 이벤트를 처리 하는, 참조 [이벤트 사용](http://go.microsoft.com/fwlink/?LinkId=157352)합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-408"> handling events, see [Consuming Events](http://go.microsoft.com/fwlink/?LinkId=157352).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aabac-409">다음 코드 예제에서는 워크플로 호스트에서 <xref:System.Workflow.Runtime.WorkflowRuntime> 기능을 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-409">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="aabac-410">이 코드에서는 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated>를 이벤트 처리기인 `OnWorkflowCreated` 메서드에 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-410">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated> with an event handler, a method named `OnWorkflowCreated`.</span></span>  
  
 <span data-ttu-id="aabac-411">이 코드 예제는의 일부는 [사용자 지정 지 속성 서비스 샘플](http://go.microsoft.com/fwlink/?LinkID=15735)합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-411">This code example is part of the [Custom Persistence Service Sample](http://go.microsoft.com/fwlink/?LinkID=15735).</span></span>  
  
 [!code-csharp[WF_Samples#271](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#271)]
 [!code-vb[WF_Samples#271](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#271)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowIdled">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowIdled;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowIdled" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowIdled As EventHandler(Of WorkflowEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowEventArgs ^&gt; ^ WorkflowIdled;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aabac-412">워크플로 인스턴스가 유휴 상태에 들어갈 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-412">Occurs when a workflow instance enters the idle state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aabac-413">워크플로 런타임 엔진은 예를 들어 워크플로가 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> 활동이 완료될 동안 기다릴 때와 같이 워크플로 인스턴스가 유휴 상태에 들어갈 때 <xref:System.Workflow.Activities.DelayActivity> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-413">The workflow run-time engine raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> event when the workflow instance enters an idle state; for example, when the workflow is waiting for a <xref:System.Workflow.Activities.DelayActivity> activity to complete.</span></span>  
  
 <span data-ttu-id="aabac-414">이 이벤트의 경우 발신자는 <xref:System.Workflow.Runtime.WorkflowRuntime>을 포함하고 <xref:System.Workflow.Runtime.WorkflowEventArgs>는 이벤트와 연결된 <xref:System.Workflow.Runtime.WorkflowInstance>를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-414">For this event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> associated with the event.</span></span>  
  
 [!INCLUDE[crabout](~/includes/crabout-md.md)]<span data-ttu-id="aabac-415"> 이벤트를 처리 하는, 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-415"> handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aabac-416">다음 코드 예제에서는 워크플로 호스트에서 <xref:System.Workflow.Runtime.WorkflowRuntime> 기능을 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-416">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="aabac-417">이 코드에서는 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled>를 이벤트 처리기인 `OnWorkflowIdled` 메서드에 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-417">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> with an event handler, a method named `OnWorkflowIdled`.</span></span>  
  
 <span data-ttu-id="aabac-418">이 코드 예제는의 일부는 [워크플로 취소](http://go.microsoft.com/fwlink/?LinkID=157346) 샘플.</span><span class="sxs-lookup"><span data-stu-id="aabac-418">This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#258](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#258)]
 [!code-vb[WF_Samples#258](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#258)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowLoaded">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowLoaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowLoaded" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowLoaded As EventHandler(Of WorkflowEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowEventArgs ^&gt; ^ WorkflowLoaded;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aabac-419">워크플로 인스턴스가 메모리에 로드될 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-419">Occurs when the workflow instance is loaded into memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aabac-420"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded>는 지속성 서비스가 워크플로 인스턴스를 복원한 후, 워크플로 런타임 엔진이 활동 실행을 시작하기 전에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-420"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded> occurs after the persistence service has restored the workflow instance, but before the workflow run-time engine begins to execute any activities.</span></span>  
  
 <span data-ttu-id="aabac-421"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded> 이벤트의 경우 발신자는 <xref:System.Workflow.Runtime.WorkflowRuntime>을 포함하고 <xref:System.Workflow.Runtime.WorkflowEventArgs>는 이벤트와 연결된 <xref:System.Workflow.Runtime.WorkflowInstance>를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-421">For the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded> event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> associated with the event.</span></span>  
  
 [!INCLUDE[crabout](~/includes/crabout-md.md)]<span data-ttu-id="aabac-422"> 이벤트를 처리 하는, 참조 [이벤트 사용](http://go.microsoft.com/fwlink/?LinkID=157352)합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-422"> handling events, see [Consuming Events](http://go.microsoft.com/fwlink/?LinkID=157352).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aabac-423">다음 코드 예제에서는 워크플로 호스트에서 <xref:System.Workflow.Runtime.WorkflowRuntime> 기능을 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-423">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="aabac-424">이 코드에서는 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded>를 이벤트 처리기인 `OnWorkflowLoad` 메서드에 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-424">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded> with an event handler, a method named `OnWorkflowLoad`.</span></span>  
  
 <span data-ttu-id="aabac-425">이 코드 예제는의 일부는 [Custom Persistence Service](http://go.microsoft.com/fwlink/?LinkID=157351) 샘플.</span><span class="sxs-lookup"><span data-stu-id="aabac-425">This code example is part of the [Custom Persistence Service](http://go.microsoft.com/fwlink/?LinkID=157351) sample.</span></span>  
  
 [!code-csharp[WF_Samples#271](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#271)]
 [!code-vb[WF_Samples#271](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#271)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowPersisted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowPersisted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowPersisted" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowPersisted As EventHandler(Of WorkflowEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowEventArgs ^&gt; ^ WorkflowPersisted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aabac-426">워크플로 인스턴스의 상태가 지속될 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-426">Occurs when the state of a workflow instance is persisted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aabac-427">워크플로 인스턴스는 여러 가지 이유로 지속될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-427">The workflow instance can be persisted for many reasons.</span></span> <span data-ttu-id="aabac-428">예를 들어 호스트가 워크플로 인스턴스에서 <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=nameWithType>를 호출할 수도 있고, 인스턴스가 유휴 상태가 되거나 원자성 범위가 완료되어 워크플로 런타임 엔진이 워크플로 인스턴스를 지속할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-428">For example, the host can call <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=nameWithType> on a workflow instance, or the workflow run-time engine can persist a workflow instance because the instance is idle or because an atomic scope has completed.</span></span> <span data-ttu-id="aabac-429"><xref:System.Workflow.Runtime.WorkflowRuntime>에 지속성 서비스가 있으면 런타임에서는 워크플로 인스턴스의 상태가 메모리에 저장된 후 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted>를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-429">If a persistence service is present in the <xref:System.Workflow.Runtime.WorkflowRuntime>, <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> is raised by the runtime after the state of the workflow instance is saved to memory.</span></span> <span data-ttu-id="aabac-430">지속성 서비스가 없어도 이 이벤트가 발생하지만 인스턴스 상태는 저장되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-430">If a persistence service is not present, the event is still raised but the instance state is not saved.</span></span> <span data-ttu-id="aabac-431">워크플로 인스턴스가 언로드되는 중이어서 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> 이벤트가 발생하는 경우 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> 이벤트가 뒤이어 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-431">If the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> event occurs because the workflow instance is being unloaded, it is followed by a <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> event.</span></span>  
  
 <span data-ttu-id="aabac-432"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> 이벤트의 경우 발신자는 <xref:System.Workflow.Runtime.WorkflowRuntime>을 포함하고 <xref:System.Workflow.Runtime.WorkflowEventArgs>는 이벤트와 연결된 <xref:System.Workflow.Runtime.WorkflowInstance>를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-432">For the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> associated with the event.</span></span>  
  
 [!INCLUDE[crabout](~/includes/crabout-md.md)]<span data-ttu-id="aabac-433"> 이벤트를 처리 하는, 참조 [이벤트 사용](http://go.microsoft.com/fwlink/?LinkID=157352)합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-433"> handling events, see [Consuming Events](http://go.microsoft.com/fwlink/?LinkID=157352).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aabac-434">다음 코드 예제에서는 워크플로 호스트에서 <xref:System.Workflow.Runtime.WorkflowRuntime> 기능을 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-434">The following code example demonstrates how you can use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="aabac-435">이 코드에서는 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted>를 이벤트 처리기인 `OnWorkflowPersisted` 메서드에 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-435">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> with an event handler, a method named `OnWorkflowPersisted`.</span></span>  
  
 <span data-ttu-id="aabac-436">이 코드 예제는의 일부는 [사용자 지정 지 속성 서비스 샘플](http://go.microsoft.com/fwlink/?LinkID=15735)합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-436">This code example is part of the [Custom Persistence Service Sample](http://go.microsoft.com/fwlink/?LinkID=15735).</span></span>  
  
 [!code-csharp[WF_Samples#279](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#279)]
 [!code-vb[WF_Samples#279](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#279)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowResumed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowResumed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowResumed" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowResumed As EventHandler(Of WorkflowEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowEventArgs ^&gt; ^ WorkflowResumed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aabac-437">워크플로 인스턴스의 실행이 일시 중단 후에 계속될 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-437">Occurs when execution of a workflow instance is resumed following a suspension.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aabac-438">워크플로 런타임 엔진은 워크플로 인스턴스가 예약되기 직전에 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-438">The workflow run-time engine raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> event just before the workflow instance is scheduled.</span></span> <span data-ttu-id="aabac-439"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> 이벤트는 일반적으로 <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType>에 대한 명시적 호출로 인해 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-439">The <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> event is usually raised because of an explicit call to <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="aabac-440">그러나 워크플로 런타임 엔진에서는 예를 들어 워크플로 변경 내용을 적용하는 등의 작업을 수행하기 위해 인스턴스를 일시적으로 중단할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-440">However, the workflow run-time engine can temporarily suspend an instance to perform an operation, for example, to apply a workflow change.</span></span> <span data-ttu-id="aabac-441">이 경우 런타임에서 해당 작업을 수행한 후 워크플로 인스턴스의 실행을 다시 시작하면 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> 이벤트가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-441">In this case, the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> event is raised when the runtime resumes execution of the workflow instance following the operation.</span></span>  
  
 <span data-ttu-id="aabac-442"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> 이벤트의 경우 발신자는 <xref:System.Workflow.Runtime.WorkflowRuntime>을 포함하고 <xref:System.Workflow.Runtime.WorkflowEventArgs>는 이벤트와 연결된 <xref:System.Workflow.Runtime.WorkflowInstance>를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-442">For the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> associated with the event.</span></span>  
  
 [!INCLUDE[crabout](~/includes/crabout-md.md)]<span data-ttu-id="aabac-443"> 이벤트를 처리 하는, 참조 [이벤트 사용](http://go.microsoft.com/fwlink/?LinkID=157352)합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-443"> handling events, see [Consuming Events](http://go.microsoft.com/fwlink/?LinkID=157352).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aabac-444">다음 코드 예제에서는 워크플로 호스트에서 <xref:System.Workflow.Runtime.WorkflowRuntime> 기능을 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-444">The following code example demonstrates how you can use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="aabac-445">이 코드에서는 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed>를 이벤트 처리기인 `OnWorkflowResume` 메서드에 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-445">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> with an event handler, a method named `OnWorkflowResume`.</span></span>  
  
 <span data-ttu-id="aabac-446">이 코드 예제는의 일부는 [Suspend and Terminate 샘플](http://go.microsoft.com/fwlink/?LinkId=157402)합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-446">This code example is part of the [Suspend and Terminate Sample](http://go.microsoft.com/fwlink/?LinkId=157402).</span></span>  
  
 [!code-csharp[WF_Samples#171](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#171)]
 [!code-vb[WF_Samples#171](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#171)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowStarted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowStarted" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowStarted As EventHandler(Of WorkflowEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowEventArgs ^&gt; ^ WorkflowStarted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aabac-447">워크플로 인스턴스가 시작된 경우에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-447">Occurs when a workflow instance has been started.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aabac-448">워크플로 런타임 엔진은 실행할 루트 활동을 예약하여 워크플로 인스턴스가 시작된 후에 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-448">The workflow run-time engine raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted> event after the workflow instance is started by scheduling the root activity for execution.</span></span> <span data-ttu-id="aabac-449">이 이벤트의 경우 발신자는 <xref:System.Workflow.Runtime.WorkflowRuntime>을 포함하고 <xref:System.Workflow.Runtime.WorkflowEventArgs>는 이벤트와 연결된 <xref:System.Workflow.Runtime.WorkflowInstance>를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-449">For this event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> associated with the event.</span></span>  
  
 [!INCLUDE[crabout](~/includes/crabout-md.md)]<span data-ttu-id="aabac-450"> 이벤트를 처리 하는, 참조 [이벤트 사용](http://go.microsoft.com/fwlink/?LinkID=157352)합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-450"> handling events, see [Consuming Events](http://go.microsoft.com/fwlink/?LinkID=157352).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aabac-451">다음 코드 예제에서는 워크플로 호스트에서 <xref:System.Workflow.Runtime.WorkflowRuntime> 기능을 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-451">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="aabac-452">이 코드에서는 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted>를 이벤트 처리기인 `OnWorkflowStarted` 메서드에 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-452">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted> with an event handler, a method named `OnWorkflowStarted`.</span></span>  
  
 <span data-ttu-id="aabac-453">이 코드 예제는의 일부는 [호스트 통신 샘플](http://go.microsoft.com/fwlink/?LinkId=157406)합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-453">This code example is part of the [Host Communication Sample](http://go.microsoft.com/fwlink/?LinkId=157406).</span></span>  
  
 [!code-csharp[WF_Samples#297](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets38.cs#297)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowSuspended">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt; WorkflowSuspended;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt; WorkflowSuspended" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowSuspended As EventHandler(Of WorkflowSuspendedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowSuspendedEventArgs ^&gt; ^ WorkflowSuspended;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aabac-454">워크플로 인스턴스가 일시 중단될 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-454">Occurs when a workflow instance is suspended.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aabac-455">워크플로 인스턴스는 호스트에서 <xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A> 메서드 호출을 통해, <xref:System.Workflow.ComponentModel.SuspendActivity> 활동에 의해, 또는 워크플로 런타임 엔진에 의해 암시적으로 일시 중단될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-455">The workflow instance can be suspended by the host through a call to the <xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A> method, by a <xref:System.Workflow.ComponentModel.SuspendActivity> activity, or implicitly by the workflow run-time engine.</span></span> <span data-ttu-id="aabac-456">예를 들어 워크플로 런타임 엔진은 동적 변경 내용을 인스턴스에 적용할 때 인스턴스를 일시 중단합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-456">For example, the workflow run-time engine temporarily suspends the instance when it applies dynamic changes to the instance.</span></span>  
  
 <span data-ttu-id="aabac-457"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended> 이벤트의 경우 발신자는 <xref:System.Workflow.Runtime.WorkflowRuntime>을 포함하고 <xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs>는 인스턴스가 일시 중단된 이유를 설명하는 문자열과 <xref:System.Workflow.Runtime.WorkflowInstance>를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-457">For the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended> event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> and a string that describes the reason the instance was suspended.</span></span>  
  
 [!INCLUDE[crabout](~/includes/crabout-md.md)]<span data-ttu-id="aabac-458"> 이벤트를 처리 하는, 참조 [이벤트 사용](http://go.microsoft.com/fwlink/?LinkID=157352)합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-458"> handling events, see [Consuming Events](http://go.microsoft.com/fwlink/?LinkID=157352).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aabac-459">다음 코드 예제에서는 워크플로 호스트에서 <xref:System.Workflow.Runtime.WorkflowRuntime> 기능을 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-459">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="aabac-460">이 코드에서는 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended>를 이벤트 처리기인 `OnWorkflowSuspended` 메서드에 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-460">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended> with an event handler, a method named `OnWorkflowSuspended`.</span></span>  
  
 <span data-ttu-id="aabac-461">이 코드 예제는의 일부는 [Suspend and Terminate 샘플](http://go.microsoft.com/fwlink/?LinkID=157402)합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-461">This code example is part of the [Suspend and Terminate Sample](http://go.microsoft.com/fwlink/?LinkID=157402).</span></span>  
  
 [!code-csharp[WF_Samples#170](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#170)]
 [!code-vb[WF_Samples#170](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#170)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowTerminated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt; WorkflowTerminated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt; WorkflowTerminated" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowTerminated As EventHandler(Of WorkflowTerminatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowTerminatedEventArgs ^&gt; ^ WorkflowTerminated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aabac-462">워크플로 인스턴스가 종료될 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-462">Occurs when a workflow instance is terminated.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aabac-463">워크플로는 호스트에서 <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> 메서드 호출을 통해, <xref:System.Workflow.ComponentModel.TerminateActivity> 활동에 의해, 또는 처리되지 않은 예외가 발생할 때 워크플로 런타임 엔진에 의해 종료될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-463">The workflow can be terminated by the host through a call to the <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> method, by a <xref:System.Workflow.ComponentModel.TerminateActivity> activity, or by the workflow run-time engine when an unhandled exception occurs.</span></span> <span data-ttu-id="aabac-464">워크플로 런타임 엔진은 워크플로 인스턴스가 종료된 후, 메모리에서 무효화되기 전에 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-464">The workflow run-time engine raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> event after the workflow instance is terminated, but before it is invalidated in memory.</span></span>  
  
 <span data-ttu-id="aabac-465"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> 이벤트의 경우 발신자는 <xref:System.Workflow.Runtime.WorkflowRuntime>을 포함하고 <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs>는 <xref:System.Workflow.Runtime.WorkflowInstance> 및 인스턴스가 종료된 이유에 대한 정보를 <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception%2A?displayProperty=nameWithType> 속성에 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-465">For the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> and information about the reason the instance was terminated in the <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception%2A?displayProperty=nameWithType> property.</span></span>  
  
 [!INCLUDE[crabout](~/includes/crabout-md.md)]<span data-ttu-id="aabac-466"> 이벤트를 처리 하는, 참조 [이벤트 사용](http://go.microsoft.com/fwlink/?LinkID=157352)합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-466"> handling events, see [Consuming Events](http://go.microsoft.com/fwlink/?LinkID=157352).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aabac-467">다음 코드 예제에서는 워크플로 호스트에서 <xref:System.Workflow.Runtime.WorkflowRuntime> 기능을 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-467">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="aabac-468">이 코드에서는 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted>를 이벤트 처리기인 `OnWorkflowCompleted` 메서드에 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-468">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> with an event handler, a method named `OnWorkflowCompleted`.</span></span>  
  
 <span data-ttu-id="aabac-469">이 코드 예제는의 일부는 [워크플로 취소](http://go.microsoft.com/fwlink/?LinkID=157346) 샘플.</span><span class="sxs-lookup"><span data-stu-id="aabac-469">This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#260](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#260)]
 [!code-vb[WF_Samples#260](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#260)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowUnloaded">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowUnloaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowUnloaded" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowUnloaded As EventHandler(Of WorkflowEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowEventArgs ^&gt; ^ WorkflowUnloaded;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aabac-470">워크플로 인스턴스가 메모리에서 언로드될 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aabac-470">Occurs when the workflow instance is unloaded from memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aabac-471">워크플로 인스턴스는 <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A>에 대한 명시적 호출에 의해, 또는 워크플로 런타임 엔진에서 해당 의미 체계에 따라 암시적으로 언로드될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-471">A workflow instance can be unloaded from memory by an explicit call to <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A>, or implicitly by the workflow run-time engine according to its own semantics.</span></span> <span data-ttu-id="aabac-472">인스턴스가 유휴 상태가 되 고 런타임에 경우 워크플로 런타임 엔진에서 워크플로 인스턴스를 언로드합니다 하는 예를 들어 한 <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> 는 대 한 추가 <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle%2A> 은 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-472">For example, the workflow run-time engine unloads a workflow instance if the instance becomes idle and the runtime has a <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> added for which <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle%2A> is `true`.</span></span>  
  
 <span data-ttu-id="aabac-473">워크플로 런타임 엔진은</span><span class="sxs-lookup"><span data-stu-id="aabac-473">The workflow run-time engine raises the</span></span>  
  
 <span data-ttu-id="aabac-474">워크플로 인스턴스의 상태가 성공적으로 지속된 후, 인스턴스가 메모리에서 무효화되기 전에 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-474"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> event after the state of the workflow instance has been successfully persisted but before the instance is invalidated in memory.</span></span> <span data-ttu-id="aabac-475">따라서 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> 이벤트는 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> 이벤트보다 먼저 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-475">Therefore, a <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> event precedes the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> event.</span></span>  
  
 <span data-ttu-id="aabac-476"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> 이벤트의 경우 발신자는 <xref:System.Workflow.Runtime.WorkflowRuntime>을 포함하고 <xref:System.Workflow.Runtime.WorkflowEventArgs>는 이벤트와 연결된 <xref:System.Workflow.Runtime.WorkflowInstance>를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-476">For the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> associated with the event.</span></span>  
  
 [!INCLUDE[crabout](~/includes/crabout-md.md)]<span data-ttu-id="aabac-477"> 이벤트를 처리 하는, 참조 [이벤트 사용](http://go.microsoft.com/fwlink/?LinkID=157352)합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-477"> handling events, see [Consuming Events](http://go.microsoft.com/fwlink/?LinkID=157352).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aabac-478">다음 코드 예제에서는 워크플로 호스트에서 <xref:System.Workflow.Runtime.WorkflowRuntime> 기능을 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-478">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="aabac-479">이 코드에서는 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded>를 이벤트 처리기인 `OnWorkflowUnload` 메서드에 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-479">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> with an event handler, a method named `OnWorkflowUnload`.</span></span>  
  
 <span data-ttu-id="aabac-480">이 코드 예제는의 일부는 [사용자 지정 지 속성 서비스 샘플](http://go.microsoft.com/fwlink/?LinkID=157351)합니다.</span><span class="sxs-lookup"><span data-stu-id="aabac-480">This code example is part of the [Custom Persistence Service Sample](http://go.microsoft.com/fwlink/?LinkID=157351).</span></span>  
  
 [!code-csharp[WF_Samples#271](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#271)]
 [!code-vb[WF_Samples#271](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#271)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>