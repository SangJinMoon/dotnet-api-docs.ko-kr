<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WorkflowRuntime.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b415af08fe6d71b8ce93803fae47dfb546e65be0.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b415af08fe6d71b8ce93803fae47dfb546e65be0</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>Represents the configurable execution environment provided by the workflow run-time engine for workflows.</source>
          <target state="translated">워크플로 런타임 엔진이 워크플로에 대해 제공하는 구성 가능한 실행 환경을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> exposes functionality required by a host application and services to configure and control the workflow run-time engine and to be notified of changes to both the workflow run-time engine and any of its workflow instances.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>은 호스트 응용 프로그램 및 서비스가 워크플로 런타임 엔진을 구성 및 제어하고 워크플로 런타임 엔진 및 해당 워크플로 인스턴스 변경 내용에 대한 알림을 받는 데 필요한 기능을 노출합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">다음 코드 예제에서는 워크플로 호스트에서 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 기능을 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>It provides examples of how to use the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A&gt;</ph> constructor and the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A&gt;</ph> 생성자와 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> 메서드를 사용하는 방법의 예제를 제공합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>The code also shows the recommended way to create a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object in a workflow host using the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> method.</source>
          <target state="translated">또한 이 코드에서는 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 메서드를 사용하여 워크플로 호스트에 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> 개체를 만드는 권장 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>It also shows how to set event handlers for the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph>, <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph>, and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;</ph> events.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph>, <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;</ph> 이벤트에 대해 이벤트 처리기를 설정하는 방법도 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> sample.</source>
          <target state="translated">이 코드 예제는의 일부는 <bpt id="p1">[</bpt>워크플로 취소<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> 샘플.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>This type is thread safe.</source>
          <target state="translated">이 형식은 스레드로부터 안전합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> is initialized with the default property values and contains the default core services.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>은 기본 속성 값으로 초기화되고 기본 핵심 서비스를 포함합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>To additionally configure the workflow run-time engine, you can add and remove services by using <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;</ph>, and you can set <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A&gt;</ph>.</source>
          <target state="translated">워크플로 런타임 엔진을 추가로 구성하려는 경우 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;</ph>를 사용하여 서비스를 추가 및 제거할 수 있으며 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A&gt;</ph>을 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>After the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> is configured, call <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> to start the workflow run-time engine and its services.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>이 구성된 후 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph>을 호출하여 워크플로 런타임 엔진과 해당 서비스를 시작합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>The following table shows initial property values for an instance of <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> class.</source>
          <target state="translated">다음 표에서는 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 클래스의 인스턴스에 대한 초기 속성 값을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>Initial Value</source>
          <target state="translated">초기 값</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>"WorkflowRuntime"</source>
          <target state="translated">"WorkflowRuntime"</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>The default core services are <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService&gt;</ph> and <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&gt;</ph>.</source>
          <target state="translated">기본 핵심 서비스는 <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>The following code example demonstrates how you can use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">다음 코드 예제에서는 워크플로 호스트에서 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 기능을 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>It provides an example of how to use the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A&gt;</ph> constructor to create an instance of a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and access its methods and events.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A&gt;</ph> 생성자를 사용하여 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>의 인스턴스를 만들고 해당 메서드 및 이벤트에 액세스하는 방법의 예제를 제공합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> sample.</source>
          <target state="translated">이 코드 예제는의 일부는 <bpt id="p1">[</bpt>워크플로 취소<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> 샘플.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>The name of a valid <ph id="ph1">&lt;see langword="workflowSettings" /&gt;</ph> section in the application configuration file.</source>
          <target state="translated">응용 프로그램 구성 파일에 있는 올바른 <ph id="ph1">&lt;see langword="workflowSettings" /&gt;</ph> 섹션의 이름입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> class by using the specified section of the application configuration file.</source>
          <target state="translated">응용 프로그램 구성 파일의 지정된 섹션을 사용하여 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> is initialized according to the settings in the section specified by <ph id="ph2">`configSectionName`</ph> in the application configuration file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>은 응용 프로그램 구성 파일의 <ph id="ph2">`configSectionName`</ph>에 지정된 설정에 따라 초기화됩니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source><ph id="ph1">`configSectionName`</ph> must correspond to a valid <ph id="ph2">`workflowSettings`</ph> section of a configuration file.</source>
          <target state="translated"><ph id="ph1">`configSectionName`</ph> 유효한 일치 해야 <ph id="ph2">`workflowSettings`</ph> 구성 파일의 섹션입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>When the workflow run-time engine is configured by using an application configuration file, it loads and instantiates classes of the types listed in the <ph id="ph1">`Services`</ph> section of the configuration file.</source>
          <target state="translated">응용 프로그램 구성 파일을 사용 하 여 워크플로 런타임 엔진을 구성, 로드 및에 나열 된 유형의 클래스를 인스턴스화하는 <ph id="ph1">`Services`</ph> 구성 파일의 섹션입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>When the workflow run-time engine constructs these classes it looks for class constructors with the following signatures in the following order:</source>
          <target state="translated">워크플로 런타임 엔진은 이러한 클래스를 생성할 때 다음 서명을 순서대로 사용하여 클래스 생성자를 찾습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>Service(WorkflowRuntime runtime, NameValueCollection parameters)</source>
          <target state="translated">Service(WorkflowRuntime 런타임, NameValueCollection 매개 변수)</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>Service(WorkflowRuntime runtime)</source>
          <target state="translated">Service(WorkflowRuntime 런타임)</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>Service(NameValueCollection parameters)</source>
          <target state="translated">Service(NameValueCollection 매개 변수)</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>Service()</source>
          <target state="translated">Service()</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>All service classes that are loaded from a configuration file must implement at least one of these constructor signatures.</source>
          <target state="translated">구성 파일에서 로드된 모든 서비스 클래스는 이러한 생성자 서명을 하나 이상 구현해야 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection&gt;</ph>을 참조하십시오.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="configSectionName" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="configSectionName" /&gt;</ph>이 null 참조(Visual Basic의 경우 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>)인 경우</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>A valid <ph id="ph1">&lt;see langword="workflowSettings" /&gt;</ph> section could not be found in the application configuration file.</source>
          <target state="translated">응용 프로그램 구성 파일에서 올바른 <ph id="ph1">&lt;see langword="workflowSettings" /&gt;</ph> 섹션을 찾을 수 없는 경우</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> already exists for this application domain.</source>
          <target state="translated">이 응용 프로그램 도메인에 대한 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>이 이미 있는 경우</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> class by using the settings in the specified <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>의 설정을 사용하여 <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>This constructor provides a mechanism to configure the workflow run-time engine using a single method call for hosts that do not use an application configuration file.</source>
          <target state="translated">이 생성자는 응용 프로그램 구성 파일을 사용하지 않는 호스트에 대해 단일 메서드 호출을 사용하여 워크플로 런타임 엔진을 구성하는 메커니즘을 제공합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>There are many reasons for not using the application configuration file.</source>
          <target state="translated">응용 프로그램 구성 파일을 사용하지 않는 데는 여러 가지 이유가 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>A host can run in an environment that does not allow using configuration files; for example, in trusted environments that do not allow reading from the application configuration file for security reasons.</source>
          <target state="translated">예를 들어 호스트가 구성 파일의 사용을 허용하지 않는 환경에서 실행될 수 있습니다. 이러한 환경의 예로는 보안상의 이유로 응용 프로그램 구성 파일 읽기를 허용하지 않는 신뢰할 수 있는 환경이 있습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>Also, a host can use a proprietary configuration mechanism; for example, the host can store the workflow run-time engine configuration settings in a SQL database.</source>
          <target state="translated">또한 호스트가 비공개 구성 메커니즘을 사용할 수 있습니다. 예를 들어 호스트가 워크플로 런타임 엔진 구성 설정을 SQL 데이터베이스에 저장할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>The workflow run-time engine loads and instantiates classes of the types contained in <ph id="ph1">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.Services%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">워크플로 런타임 엔진은 <ph id="ph1">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.Services%2A?displayProperty=nameWithType&gt;</ph>에 포함된 형식의 클래스를 로드하고 인스턴스화합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>When the workflow run-time engine constructs these classes it looks for class constructors with the following signatures in the following order:</source>
          <target state="translated">워크플로 런타임 엔진은 이러한 클래스를 생성할 때 다음 서명을 순서대로 사용하여 클래스 생성자를 찾습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>Service(WorkflowRuntime runtime, NameValueCollection parameters)</source>
          <target state="translated">Service(WorkflowRuntime 런타임, NameValueCollection 매개 변수)</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>Service(WorkflowRuntime runtime)</source>
          <target state="translated">Service(WorkflowRuntime 런타임)</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>Service(NameValueCollection parameters)</source>
          <target state="translated">Service(NameValueCollection 매개 변수)</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>Service()</source>
          <target state="translated">Service()</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>All service classes that are specified in <ph id="ph1">`settings`</ph> must implement at least one of these constructor signatures.</source>
          <target state="translated"><ph id="ph1">`settings`</ph>에 지정된 모든 서비스 클래스는 이러한 생성자 서명을 하나 이상 구현해야 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source><ph id="ph1">&lt;paramref name="settings" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="settings" /&gt;</ph>이 null 참조(Visual Basic의 경우 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>)인 경우</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> already exists for this application domain.</source>
          <target state="translated">이 응용 프로그램 도메인에 대한 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>이 이미 있는 경우</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>An object that represents the service to add.</source>
          <target state="translated">추가할 서비스를 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>Adds the specified service to the workflow run-time engine.</source>
          <target state="translated">지정된 서비스를 워크플로 런타임 엔진에 추가합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>You can configure the workflow run-time engine by adding core services.</source>
          <target state="translated">핵심 서비스를 추가하여 워크플로 런타임 엔진을 구성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>Core services are those that derive from any of the following service base classes: the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> class, the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> class, the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> class, and the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> class.</source>
          <target state="translated">핵심 서비스는 서비스 기본 클래스인 <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> 클래스, <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> 클래스, <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> 클래스 및 <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> 클래스에서 파생된 서비스입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>Core services can only be added when the workflow run-time engine is not running; that is, when <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> is <ph id="ph2">`false`</ph>.</source>
          <target state="translated">핵심 서비스는 워크플로 런타임 엔진; 실행 하지 않는 경우에 추가할 수 있습니다. 즉, <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> 은 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> can also be used as a storage container for other services that can be used by other workflows or by applications running on a host.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>은 호스트에서 실행 중인 응용 프로그램이나 다른 워크플로에서 사용할 수 있는 다른 서비스에 대한 저장소 컨테이너로 사용될 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>If you add a non-core service that derives from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class after the workflow run-time engine has been started, <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> calls the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> method implemented by that service.</source>
          <target state="translated">워크플로 런타임 엔진이 시작된 후 <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> 클래스에서 파생된 비핵심 서비스를 추가하면 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph>가 해당 서비스에 의해 구현된 <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> enforces the restriction that no two services of the same <ph id="ph2">&lt;xref:System.Type&gt;</ph> can be added to the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph>는 <ph id="ph2">&lt;xref:System.Type&gt;</ph>이 동일한 두 개의 서비스를 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>에 추가할 수 없다는 제한을 적용합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>However, you can add multiple services that derive from the same base class.</source>
          <target state="translated">그러나 동일한 기본 클래스에서 파생된 서비스는 여러 개 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>There can be only one service derived from each of the following service base classes in the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>: the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> class, the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> class, and the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>의 서비스 기본 클래스인 <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> 클래스, <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> 클래스 및 <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> 클래스에서 각각 하나의 서비스만 파생될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>If you add multiple services derived from one of these classes, for example two persistence services, <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">이러한 클래스 중 하나에서 파생된 여러 서비스(예: 두 개의 지속성 서비스)를 추가하면 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph>은 <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>을 throw합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">다음 코드 예제에서는 워크플로 호스트에서 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 기능을 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>It provides example of how to use the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> method to add an <ph id="ph2">&lt;xref:System.Workflow.Activities.ExternalDataExchangeService&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph> to the workflow run-time engine.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> 메서드를 사용하여 <ph id="ph2">&lt;xref:System.Workflow.Activities.ExternalDataExchangeService&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph>를 워크플로 런타임 엔진에 추가하는 방법의 예제를 제공합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>This code example is part of the <bpt id="p1">[</bpt>Cancelling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157346)</ept> sample.</source>
          <target state="translated">이 코드 예제는의 일부는 <bpt id="p1">[</bpt>워크플로 취소 하면<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157346)</ept> 샘플.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source><ph id="ph1">&lt;paramref name="service" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="service" /&gt;</ph>이 null 참조(Visual Basic의 경우 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>)인 경우</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>이 삭제된 경우</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source><ph id="ph1">&lt;paramref name="service" /&gt;</ph> is already registered with the workflow run-time engine.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="service" /&gt;</ph>가 워크플로 런타임 엔진에 이미 등록된 경우</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source><ph id="ph1">&lt;paramref name="service" /&gt;</ph> is a core service and the workflow run-time engine is already running (<ph id="ph2">&lt;see cref="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" /&gt;</ph> is <ph id="ph3">&lt;see langword="true" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="service" /&gt;</ph>가 핵심 서비스이고 워크플로 런타임 엔진이 이미 실행 중인 경우(<ph id="ph2">&lt;see cref="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" /&gt;</ph>가 <ph id="ph3">&lt;see langword="true" /&gt;</ph>인 경우)</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>Creates a workflow instance by using the specified parameters.</source>
          <target state="translated">지정된 매개 변수를 사용하여 워크플로 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>If the workflow run-time engine has not been started, the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> methods call <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph>.</source>
          <target state="translated">워크플로 런타임 엔진이 시작되지 않은 경우 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph>을 호출합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>See <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> for a list of possible exceptions.</source>
          <target state="translated">가능한 예외 목록은 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph>을 참조하십시오.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>After you create the workflow instance, call <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A?displayProperty=nameWithType&gt;</ph> on the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object returned by the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> method to begin its execution.</source>
          <target state="translated">워크플로 인스턴스를 만든 후 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A?displayProperty=nameWithType&gt;</ph> 메서드가 반환하는 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 개체에서 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph>를 호출하여 실행을 시작합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the workflow to create.</source>
          <target state="translated">만들 워크플로의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source>Creates a new workflow instance by using the specified workflow <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">지정된 워크플로 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>을 사용하여 새 워크플로 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source>The created workflow instance.</source>
          <target state="translated">만들어진 워크플로 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source>Before the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> is created, validation is executed on it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>를 만들기 전에 유효성 검사가 먼저 실행됩니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source>If any validation errors occur, the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph> is thrown.</source>
          <target state="translated">유효성 검사 오류가 발생하면 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source>This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</source>
          <target state="translated">단순한 시나리오에서는 문제가 없지만 서버 환경에서는 활성화가 실행될 때마다 워크플로의 유효성을 다시 검사하는 것이 불필요한 부담이 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> disabling validation, see <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</source>
          <target state="translated">유효성 검사 해제<ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph><ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source>The following code example demonstrates the recommended way to create a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object in a workflow host using the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 메서드를 사용하여 워크플로 호스트에 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> 개체를 만드는 권장 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> sample.</source>
          <target state="translated">이 코드 예제는의 일부는 <bpt id="p1">[</bpt>워크플로 취소<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> 샘플.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source><ph id="ph1">&lt;paramref name="workflowType" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="workflowType" /&gt;</ph>이 null 참조(Visual Basic의 경우 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>)인 경우</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> that contains the workflow definition.</source>
          <target state="translated">워크플로 정의를 포함하는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>Creates a workflow instance by using the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>를 사용하여 워크플로 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>The created workflow instance.</source>
          <target state="translated">만들어진 워크플로 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>The workflow instance is created from a XAML workflow definition file referenced by the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">워크플로 인스턴스는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>가 참조하는 XAML 워크플로 정의 파일에서 만들어집니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>Before the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> is created, validation is executed on it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>를 만들기 전에 유효성 검사가 먼저 실행됩니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>If any validation errors occur, the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph> is thrown.</source>
          <target state="translated">유효성 검사 오류가 발생하면 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</source>
          <target state="translated">단순한 시나리오에서는 문제가 없지만 서버 환경에서는 활성화가 실행될 때마다 워크플로의 유효성을 다시 검사하는 것이 불필요한 부담이 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> disabling validation, see <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</source>
          <target state="translated">유효성 검사 해제<ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph><ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>The following example demonstrates how to create a workflow given a XAML-based workflow definition.</source>
          <target state="translated">다음 예제에서는 XAML 기반 워크플로 정의가 지정된 워크플로를 만드는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="workflowDefinitionReader" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="workflowDefinitionReader" /&gt;</ph>이 null 참조(Visual Basic의 경우 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>)인 경우</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>이 삭제된 경우</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the workflow to create.</source>
          <target state="translated">만들 워크플로의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> of objects keyed by string that represents the arguments to the workflow.</source>
          <target state="translated">워크플로에 대한 인수를 나타내는 문자열로 키가 지정된 개체의 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>Creates a workflow instance by using the specified workflow <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> and the arguments to the workflow contained in the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">지정된 워크플로 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 및 지정된 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>에 포함된 워크플로에 대한 인수를 사용하여 워크플로 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>The created workflow instance.</source>
          <target state="translated">만들어진 워크플로 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>Before the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> is created, validation is executed on it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>를 만들기 전에 유효성 검사가 먼저 실행됩니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>If any validation errors occur, the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph> is thrown.</source>
          <target state="translated">유효성 검사 오류가 발생하면 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</source>
          <target state="translated">단순한 시나리오에서는 문제가 없지만 서버 환경에서는 활성화가 실행될 때마다 워크플로의 유효성을 다시 검사하는 것이 불필요한 부담이 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> disabling validation, see <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</source>
          <target state="translated">유효성 검사 해제<ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph><ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>For an example of passing in parameters to <ph id="ph1">`CreateWorkflow`</ph>, see <bpt id="p1">[</bpt>Workflow with Parameters Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157403)</ept>.</source>
          <target state="translated">매개 변수를 전달에 대 한 예제 <ph id="ph1">`CreateWorkflow`</ph>, 참조 <bpt id="p1">[</bpt>Workflow with Parameters 샘플<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157403)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source><ph id="ph1">&lt;paramref name="workflowType" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="workflowType" /&gt;</ph>이 null 참조(Visual Basic의 경우 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>)인 경우</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the workflow to create.</source>
          <target state="translated">만들 워크플로의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> of objects keyed by a string that represents the arguments to the workflow.</source>
          <target state="translated">워크플로에 대한 인수를 나타내는 문자열로 키가 지정된 개체의 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> of the specific <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> to create.</source>
          <target state="translated">만들 특정 <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>Creates a workflow instance by using the specified parameters.</source>
          <target state="translated">지정된 매개 변수를 사용하여 워크플로 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>The created workflow instance.</source>
          <target state="translated">만들어진 워크플로 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>Before the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> is created, validation is executed on it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>를 만들기 전에 유효성 검사가 먼저 실행됩니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>If any validation errors occur, the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph> is thrown.</source>
          <target state="translated">유효성 검사 오류가 발생하면 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</source>
          <target state="translated">단순한 시나리오에서는 문제가 없지만 서버 환경에서는 활성화가 실행될 때마다 워크플로의 유효성을 다시 검사하는 것이 불필요한 부담이 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> disabling validation, see <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</source>
          <target state="translated">유효성 검사 해제<ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph><ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>The workflow <ph id="ph1">`instanceId`</ph> for any running workflows loaded by the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> must be unique.</source>
          <target state="translated"><ph id="ph1">`instanceId`</ph>이 로드한 모든 실행 중인 워크플로의 워크플로 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>는 고유해야 합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>If you pass an <ph id="ph1">`instanceId`</ph> to create a workflow and a running workflow is already using that <ph id="ph2">`instanceId`</ph>, an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated"><ph id="ph1">`instanceId`</ph>를 전달하여 워크플로를 만드는 경우 실행 중인 워크플로에서 이미 해당 <ph id="ph2">`instanceId`</ph>를 사용 중이면 <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>For an example of passing in parameters to <ph id="ph1">`CreateWorkflow`</ph>, see <bpt id="p1">[</bpt>Workflow with Parameters Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157403)</ept>.</source>
          <target state="translated">매개 변수를 전달에 대 한 예제 <ph id="ph1">`CreateWorkflow`</ph>, 참조 <bpt id="p1">[</bpt>Workflow with Parameters 샘플<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157403)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source><ph id="ph1">&lt;paramref name="workflowType" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="workflowType" /&gt;</ph>이 null 참조(Visual Basic의 경우 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>)인 경우</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> that contains the workflow definition.</source>
          <target state="translated">워크플로 정의를 포함하는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> of objects keyed by a string that represents the arguments to the workflow.</source>
          <target state="translated">워크플로에 대한 인수를 나타내는 문자열로 키가 지정된 개체의 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>Creates a workflow instance by using the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> objects and the arguments contained in the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 개체 및 지정된 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>에 포함된 인수를 사용하여 워크플로 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>The created workflow instance.</source>
          <target state="translated">만들어진 워크플로 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>The workflow instance is created from the workflow definition referenced by the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> and the arguments supplied by <ph id="ph2">`namedArgumentValues`</ph>.</source>
          <target state="translated">워크플로 인스턴스는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>가 참조하는 워크플로 및 <ph id="ph2">`namedArgumentValues`</ph>가 제공하는 인수에서 만들어집니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>Before the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> is created, validation is executed on it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>를 만들기 전에 유효성 검사가 먼저 실행됩니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>If any validation errors occur, the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph> is thrown.</source>
          <target state="translated">유효성 검사 오류가 발생하면 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</source>
          <target state="translated">단순한 시나리오에서는 문제가 없지만 서버 환경에서는 활성화가 실행될 때마다 워크플로의 유효성을 다시 검사하는 것이 불필요한 부담이 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> disabling validation, see <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</source>
          <target state="translated">유효성 검사 해제<ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph><ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>For an example of passing in parameters to <ph id="ph1">`CreateWorkflow`</ph>, see <bpt id="p1">[</bpt>Workflow with Parameters Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157403)</ept>.</source>
          <target state="translated">매개 변수를 전달에 대 한 예제 <ph id="ph1">`CreateWorkflow`</ph>, 참조 <bpt id="p1">[</bpt>Workflow with Parameters 샘플<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157403)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>For an example of using rules defined in XML, see <bpt id="p1">[</bpt>IfElse with Rules Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157404)</ept>.</source>
          <target state="translated">XML에 정의 된 규칙을 사용 하 여 예제를 보려면 <bpt id="p1">[</bpt>규칙 샘플 IfElse<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157404)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source><ph id="ph1">&lt;paramref name="workflowDefinitionReader" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="workflowDefinitionReader" /&gt;</ph>이 null 참조(Visual Basic의 경우 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>)인 경우</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>이 삭제된 경우</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> that contains the workflow definition.</source>
          <target state="translated">워크플로 정의를 포함하는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> of objects keyed by a string that represents the arguments to the workflow.</source>
          <target state="translated">워크플로에 대한 인수를 나타내는 문자열로 키가 지정된 개체의 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> of the specific <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> to create.</source>
          <target state="translated">만들 특정 <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>Creates a workflow instance by using the specified parameters.</source>
          <target state="translated">지정된 매개 변수를 사용하여 워크플로 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>The created workflow instance.</source>
          <target state="translated">만들어진 워크플로 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>Before the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> is created, validation is executed on it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>를 만들기 전에 유효성 검사가 먼저 실행됩니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>If any validation errors occur, the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph> is thrown.</source>
          <target state="translated">유효성 검사 오류가 발생하면 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</source>
          <target state="translated">단순한 시나리오에서는 문제가 없지만 서버 환경에서는 활성화가 실행될 때마다 워크플로의 유효성을 다시 검사하는 것이 불필요한 부담이 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> disabling validation, see <ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</source>
          <target state="translated">유효성 검사 해제<ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph><ph id="ph2">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>The workflow <ph id="ph1">`instanceId`</ph> for any running workflows loaded by the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> must be unique.</source>
          <target state="translated"><ph id="ph1">`instanceId`</ph>이 로드한 모든 실행 중인 워크플로의 워크플로 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>는 고유해야 합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>If you pass an <ph id="ph1">`instanceId`</ph> to create a workflow and a running workflow is already using that <ph id="ph2">`instanceId`</ph>, an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated"><ph id="ph1">`instanceId`</ph>를 전달하여 워크플로를 만드는 경우 실행 중인 워크플로에서 이미 해당 <ph id="ph2">`instanceId`</ph>를 사용 중이면 <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>For an example of passing in parameters to <ph id="ph1">`CreateWorkflow`</ph>, see <bpt id="p1">[</bpt>Workflow with Parameters Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157403)</ept>.</source>
          <target state="translated">매개 변수를 전달에 대 한 예제 <ph id="ph1">`CreateWorkflow`</ph>, 참조 <bpt id="p1">[</bpt>Workflow with Parameters 샘플<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157403)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>For an example of using rules defined in XML, see <bpt id="p1">[</bpt>IfElse with Rules Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157404)</ept>.</source>
          <target state="translated">XML에 정의 된 규칙을 사용 하 여 예제를 보려면 <bpt id="p1">[</bpt>규칙 샘플 IfElse<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157404)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source><ph id="ph1">&lt;paramref name="workflowType" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="workflowType" /&gt;</ph>이 null 참조(Visual Basic의 경우 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>)인 경우</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>에서 사용하는 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source>To shut down the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> gracefully, you should only call <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> after you have called <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>을 올바르게 종료하려면 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph>을 호출한 후에 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph>만 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source>This is because calling the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> method alone leaves the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> in an unusable state.</source>
          <target state="translated">이는 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> 메서드만을 호출하면 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>이 사용할 수 없는 상태가 되기 때문입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> frees the resources used by the runtime by closing open file handles, database connections, and so on, but it does not unload workflow instances, stop services, or do any of the other actions that <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> does.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph>는 열린 파일 핸들, 데이터베이스 연결 등을 닫아 런타임이 사용하는 리소스를 확보하지만 워크플로 인스턴스 언로드, 서비스 중지 또는 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph>이 수행하는 기타 작업을 수행하지 않습니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> should be called only when the host application must free the resources used by the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> before they are automatically freed by the garbage collector.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph>에 사용되는 리소스를 가비지 수집기가 자동으로 해제하기 전에 호스트 응용 프로그램에서 해제해야 하는 경우에만 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source>For general information about <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">에 대 한 일반적인 내용은 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph>, 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> 및 <bpt id="p2">[</bpt>Dispose 메서드를 구현<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source>The following example demonstrates how to call <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> on a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> object.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> 개체에서 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>를 호출하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source>In this sample, the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> method is called from the FormClosing event handler for the main form of the application; this ensures that the objects created by the runtime are properly cleaned up when the application shuts down.</source>
          <target state="translated">이 샘플에서 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> 메서드는 응용 프로그램의 기본 폼에 대한 FormClosing 이벤트 처리기에서 호출됩니다. 이렇게 하면 런타임에서 만들어진 개체가 응용 프로그램이 종료될 때 올바르게 정리됩니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source>This sample is from the <bpt id="p1">[</bpt>Speech Application Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157405)</ept>.</source>
          <target state="translated">이 샘플은는 <bpt id="p1">[</bpt>음성 응용 프로그램 샘플<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157405)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that services must implement to be returned.</source>
          <target state="translated">서비스가 반환되기 위해 구현해야 하는 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)">
          <source>Retrieves all the services that are added to the workflow run-time engine that implement or derive from the specified <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>을 구현하거나 해당 형식에서 파생되었으며 워크플로 런타임 엔진에 추가된 모든 서비스를 검색합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)">
          <source>Services that implement or derive from the specified <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>을 구현하거나 해당 형식에서 파생된 서비스입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)">
          <source>An empty <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> indicates that no services that implement or derive from the specified <ph id="ph2">&lt;xref:System.Type&gt;</ph> have been added to the workflow run-time engine.</source>
          <target state="translated">빈 <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph>은 지정된 <ph id="ph2">&lt;xref:System.Type&gt;</ph>을 구현하거나 해당 형식에서 파생된 서비스가 워크플로 런타임 엔진에 추가되지 않았음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)">
          <source>The following example demonstrates how to retrieve all services of a given type from a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> object.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 개체에서 지정된 유형의 모든 서비스를 검색하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)">
          <source><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph>이 null 참조(Visual Basic의 경우 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>)인 경우</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>이 삭제된 경우</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1">
          <source>The service type.</source>
          <target state="translated">서비스 유형입니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1">
          <source>Retrieves all the services that are added to the workflow run-time engine that implement or derive from the specified generic type.</source>
          <target state="translated">지정된 제네릭 형식을 구현하거나 해당 형식에서 파생되었으며 워크플로 런타임 엔진에 추가된 모든 서비스를 검색합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1">
          <source>Services that implement or derive from the specified generic type.</source>
          <target state="translated">지정된 제네릭 형식을 구현하거나 해당 형식에서 파생된 서비스입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1">
          <source>An empty <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> indicates that no services have been added to the workflow run-time engine that implement or derive from the specified generic type.</source>
          <target state="translated">빈 <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph>은 지정된 제네릭 형식을 구현하거나 해당 형식에서 파생된 서비스가 워크플로 런타임 엔진에 추가되지 않았음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1">
          <source>The following example demonstrates how to retrieve all services of a given type from a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> object.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 개체에서 지정된 유형의 모든 서비스를 검색하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>이 삭제된 경우</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows">
          <source>Gets a collection that contains all the workflow instances currently loaded in memory.</source>
          <target state="translated">현재 메모리에 로드된 모든 워크플로 인스턴스를 포함하는 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows">
          <source>A <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> object for each workflow instance currently loaded in memory.</source>
          <target state="translated">현재 메모리에 로드된 각 워크플로 인스턴스에 대한 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows">
          <source>Note that, unlike <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph>, this method does not throw a <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> if the runtime is not started.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph>와 달리 이 메서드는 런타임이 시작되지 않은 경우 <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>을 throw하지 않습니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows">
          <source>The following example demonstrates how to retrieve a collection of loaded workflows from a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> object.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 개체에서 로드된 워크플로 컬렉션을 검색하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>이 삭제된 경우</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the service to retrieve.</source>
          <target state="translated">검색할 서비스의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source>Retrieves a service of the specified <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> from the workflow run-time engine.</source>
          <target state="translated">워크플로 런타임 엔진에서 지정된 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>의 서비스를 검색합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source>The service of the specified <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>의 서비스입니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetService%2A&gt;</ph> throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> if more than one service exists for the specified <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetService%2A&gt;</ph>에 대한 서비스가 여러 개 있으면 <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>에서 <ph id="ph3">&lt;xref:System.Type&gt;</ph>을 throw합니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source>Therefore, you should use one of the overloaded methods of <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A&gt;</ph> if it is possible that multiple services of the specified type are present in the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</source>
          <target state="translated">따라서 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A&gt;</ph>에 지정된 형식의 서비스가 여러 개 있을 수 있는 경우 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>의 오버로드된 메서드 중 하나를 사용해야 합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source>For example, the workflow run-time engine may have multiple tracking services.</source>
          <target state="translated">예를 들어 워크플로 런타임 엔진에는 여러 개의 추적 서비스가 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source>If you request a tracking service by specifying the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> base class, it is possible that an exception will be thrown.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> 기본 클래스를 지정하여 추적 서비스를 요청하면 예외가 throw될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph>이 null 참조(Visual Basic의 경우 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>)인 경우</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is already disposed of.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>이 이미 삭제된 경우</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source>More than one service of type <ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> was found.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> 형식의 서비스가 여러 개 있는 경우</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>The service type.</source>
          <target state="translated">서비스 유형입니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>Retrieves a service of the specified generic type from the workflow run-time engine.</source>
          <target state="translated">워크플로 런타임 엔진에서 지정된 제네릭 형식의 서비스를 검색합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>A single service of the specified generic type.</source>
          <target state="translated">지정된 제네릭 형식의 단일 서비스입니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetService%2A&gt;</ph> throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> if more than one service exists for the specified generic type.</source>
          <target state="translated">지정된 제네릭 형식에 대한 서비스가 여러 개 있으면 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetService%2A&gt;</ph>에서 <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>을 throw합니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>Therefore, you should use one of the overloaded methods of <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A&gt;</ph> if it is possible that multiple services of the generic type are present in the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</source>
          <target state="translated">따라서 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A&gt;</ph>에 해당 제네릭 형식의 서비스가 여러 개 있을 수 있는 경우 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>의 오버로드된 메서드 중 하나를 사용해야 합니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>For example, the workflow run-time engine may have multiple tracking services.</source>
          <target state="translated">예를 들어 워크플로 런타임 엔진에는 여러 개의 추적 서비스가 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>If you request a tracking service by specifying the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> base class, it is possible that an exception will be thrown.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> 기본 클래스를 지정하여 추적 서비스를 요청하면 예외가 throw될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>The following example demonstrates how to retrieve a single service from a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> object; in this case, a service of type <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 개체에서 단일 서비스, 이 경우 <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService&gt;</ph> 유형의 서비스를 검색하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>This example is from the <bpt id="p1">[</bpt>Workflow Threading Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157350)</ept>.</source>
          <target state="translated">이 예제에서는 <bpt id="p1">[</bpt>워크플로 스레딩 샘플<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157350)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> has already been disposed of.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>이 이미 삭제된 경우</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>More than one service of the generic type was found.</source>
          <target state="translated">제네릭 형식의 서비스가 여러 개 있는 경우</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> of a workflow instance.</source>
          <target state="translated">워크플로 인스턴스의 <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>Retrieves the workflow instance that has the specified <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph>가 있는 워크플로 인스턴스를 검색합니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> that has the specified <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph>.</source>
          <target state="translated">지정한 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph>가 있는 <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>If <ph id="ph1">`instanceId`</ph> specifies a workflow instance that is not currently in memory, the workflow instance is loaded into memory and scheduled for execution.</source>
          <target state="translated"><ph id="ph1">`instanceId`</ph>가 현재 메모리에 없는 워크플로 인스턴스를 지정하면 워크플로 인스턴스가 메모리에 로드되고 실행이 예약됩니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>For example, after a workflow instance is aborted, you can call <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph> to load the workflow instance back into memory.</source>
          <target state="translated">예를 들어 워크플로 인스턴스가 중단된 후에는 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph>를 호출하여 워크플로 인스턴스를 다시 메모리에 로드할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>In this case, the last persisted state of the workflow instance is loaded into memory by the persistence service.</source>
          <target state="translated">이 경우 워크플로 인스턴스의 마지막으로 지속된 상태가 지속성 서비스에 의해 메모리에 로드됩니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>The following code example demonstrates a <ph id="ph1">`ReloadWorkflow`</ph> method that calls the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">`ReloadWorkflow`</ph> 메서드를 호출하는 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph> 메서드를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>The <ph id="ph1">`ReloadWorkflow`</ph> method is part of a larger class that has a <ph id="ph2">`Runtime`</ph> property to access all of the methods, properties, and events of the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">`ReloadWorkflow`</ph> 메서드는 <ph id="ph2">`Runtime`</ph> 클래스의 모든 메서드, 속성 및 이벤트에 액세스하는 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 속성이 있는 더 큰 클래스의 일부입니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>This code example is part of the <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157351)</ept> sample.</source>
          <target state="translated">이 코드 예제는의 일부는 <bpt id="p1">[</bpt>사용자 지정 지 속성 서비스 샘플<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157351)</ept> 샘플.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>In the example, the call to <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> is redundant because both the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> methods use the same internal helper method to load the workflow instance into memory.</source>
          <target state="translated">이 예제에서 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> 호출은 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> 메서드가 동일한 내부 도우미 메서드를 사용하여 워크플로 인스턴스를 메모리에 로드하므로 중복됩니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>The workflow runtime is not started.</source>
          <target state="translated">워크플로 런타임이 시작되지 않은 경우</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source>Gets a value that indicates whether the workflow run-time engine has been started.</source>
          <target state="translated">워크플로 런타임 엔진이 시작되었는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the workflow run-time engine has been started; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">워크플로 런타임 엔진이 시작되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> indicates that the workflow run-time engine services are running.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph>는 워크플로 런타임 엔진 서비스가 실행 중임을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> is <ph id="ph2">`false`</ph> until the host calls <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> <ph id="ph2">`false`</ph> 호스트 호출할 때까지 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source>It remains <ph id="ph1">`true`</ph> until the host calls <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph>.</source>
          <target state="translated">또한 호스트가 <ph id="ph1">`true`</ph>을 호출할 때까지 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph>로 유지됩니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source>You cannot add core services to the workflow run-time engine while it is running.</source>
          <target state="translated">실행되는 동안에는 워크플로 런타임 엔진에 핵심 서비스를 추가할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source>Core services are services that derive from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> class, the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService&gt;</ph> class, the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> class, and the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> class.</source>
          <target state="translated">핵심 서비스는 <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> 클래스, <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService&gt;</ph> 클래스, <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> 클래스 및 <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> 클래스에서 파생된 서비스입니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source>The following example demonstrates how to access the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> object.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> 개체의 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 속성에 액세스하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source>In this example, if the runtime is started, a message is printed to the console.</source>
          <target state="translated">이 예제에서 런타임이 시작되면 메시지가 콘솔에 표시됩니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.WorkflowRuntime.Name">
          <source>Gets or sets the name associated with the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>과 연결된 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.Name">
          <source>The name associated with this <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>과 연결된 이름입니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.Name">
          <source>You cannot set <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A&gt;</ph> while the workflow run-time engine is running (<ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> is <ph id="ph3">`true`</ph>).</source>
          <target state="translated">설정할 수 없습니다. <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A&gt;</ph> 하는 동안 워크플로 런타임 엔진이 실행 되 고 (<ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> 은 <ph id="ph3">`true`</ph>).</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.Name">
          <source>The following example demonstrates how to access the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> object.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A&gt;</ph> 개체의 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 속성에 액세스하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.Name">
          <source>In this example, the name of the runtime is set to "Main Runtime".</source>
          <target state="translated">이 예제에서 런타임 이름은 "Main Runtime"으로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.WorkflowRuntime.Name">
          <source>An attempt to set <ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.WorkflowRuntime.Name" /&gt;</ph> on a <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> that is disposed occurs.</source>
          <target state="translated">삭제된 <ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.WorkflowRuntime.Name" /&gt;</ph>에 <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>을 설정하려고 시도하는 경우</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.WorkflowRuntime.Name">
          <source>An attempt to set <ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.WorkflowRuntime.Name" /&gt;</ph> while the workflow run-time engine is running occurs.</source>
          <target state="translated">워크플로 런타임 엔진이 실행되는 동안 <ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.WorkflowRuntime.Name" /&gt;</ph>을 설정하려고 시도하는 경우</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source>An object that represents the service to remove.</source>
          <target state="translated">제거할 서비스를 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source>Removes the specified service from the workflow run-time engine.</source>
          <target state="translated">워크플로 런타임 엔진에서 지정된 서비스를 제거합니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source>You cannot remove a core service while the workflow run-time engine is running (<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> is <ph id="ph2">`true`</ph>).</source>
          <target state="translated">워크플로 런타임 엔진이 실행 되는 동안에 핵심 서비스를 제거할 수 없습니다 (<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> 은 <ph id="ph2">`true`</ph>).</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source>Core services are services that derive from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> class, the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> class, the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> class, or the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> class.</source>
          <target state="translated">핵심 서비스는 <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> 클래스, <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> 클래스, <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> 클래스 및 <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> 클래스에서 파생된 서비스입니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source>If <ph id="ph1">`service`</ph> derives from the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class, <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;</ph> calls the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> method implemented by <ph id="ph5">`service`</ph>.</source>
          <target state="translated"><ph id="ph1">`service`</ph>가 <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> 클래스에서 파생되는 경우 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;</ph>는 <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph>가 구현하는 <ph id="ph5">`service`</ph> 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source>In the following example, a <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph> is added and removed from the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph>를 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>에 추가 및 제거합니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source><ph id="ph1">&lt;paramref name="service" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="service" /&gt;</ph>이 null 참조(Visual Basic의 경우 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>)인 경우</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is already disposed of.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>이 이미 삭제된 경우</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source>The workflow run-time engine has started (<ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>) and <ph id="ph3">&lt;paramref name="service" /&gt;</ph> is a core service.</source>
          <target state="translated">워크플로 런타임 엔진이 시작되었고(<ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" /&gt;</ph>가 <ph id="ph2">&lt;see langword="true" /&gt;</ph>인 경우) <ph id="ph3">&lt;paramref name="service" /&gt;</ph>가 핵심 서비스인 경우</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source><ph id="ph1">&lt;paramref name="service" /&gt;</ph> is not registered with the workflow run-time engine.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="service" /&gt;</ph>가 워크플로 런타임 엔진에 등록되지 않은 경우</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>Occurs when a service that is derived from the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /&gt;</ph> class calls <ph id="ph2">&lt;see cref="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /&gt;</ph> 클래스에서 파생된 서비스가 <ph id="ph2">&lt;see cref="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)" /&gt;</ph>를 호출할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>A service that is derived from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class can call the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;</ph> method to inform subscribers to the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled&gt;</ph> event that an exception that it was unable to handle occurred during its execution.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> 클래스에서 파생된 서비스는 처리할 수 없었던 예외가 실행 중에 발생했음을 <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;</ph> 이벤트에 대한 구독자에 알리기 위해 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled&gt;</ph> 메서드를 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>You can subscribe to this event to implement a recovery mechanism.</source>
          <target state="translated">복구 메커니즘을 구현하기 위해 이 이벤트를 구독할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>This event is raised when a workflow instance has not been created yet by the workflow run-time engine and an exception occurs.</source>
          <target state="translated">워크플로 런타임 엔진이 워크플로 인스턴스를 만들기 전에 예외가 발생하면 이 이벤트가 발생합니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>In this scenario, the only way to inform a host application that an exception occurred is to raise this event.</source>
          <target state="translated">이 시나리오에서 호스트 응용 프로그램에 예외가 발생했다고 알리는 유일한 방법은 이 이벤트를 발생시키는 것입니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>However, the workflow run-time engine does not call this directly.</source>
          <target state="translated">그러나 워크플로 런타임 엔진이 직접 이 이벤트를 호출하지는 않습니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>Instead, the workflow run-time engine either delivers an exception to the workflow instance or, if there is no instance, throws back to the caller, which in this case is actually the service that fires this event.</source>
          <target state="translated">대신 워크플로 런타임 엔진은 예외를 워크플로 인스턴스로 전달하거나, 인스턴스가 없는 경우 호출자(이 경우 이 이벤트를 발생시킨 서비스)에 예외를 다시 throw합니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>If you create your own persistence or scheduler service, you must implement this event yourself through the base <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;</ph> method.</source>
          <target state="translated">사용자가 직접 지속성 또는 스케줄러 서비스를 만드는 경우 기본 <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;</ph> 메서드를 통해 이 이벤트를 구현해야 합니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled&gt;</ph> event, the sender contains the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph4">&lt;xref:System.Guid&gt;</ph> of the workflow instance that was using the service and the <ph id="ph5">&lt;xref:System.Exception&gt;</ph> that could not be handled.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled&gt;</ph> 이벤트의 경우 발신자는 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>을 포함하고 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph>는 서비스를 사용하고 있던 워크플로 인스턴스의 <ph id="ph4">&lt;xref:System.Guid&gt;</ph>와 처리할 수 없었던 <ph id="ph5">&lt;xref:System.Exception&gt;</ph>을 포함합니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> 이벤트를 처리 하는, 참조 <bpt id="p1">[</bpt>이벤트 사용<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">다음 코드 예제에서는 워크플로 호스트에서 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 기능을 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>The code associates <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled&gt;</ph> with an event handler, a method named <ph id="ph2">`OnExceptionNotHandled`</ph>.</source>
          <target state="translated">이 코드에서는 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled&gt;</ph>를 이벤트 처리기인 <ph id="ph2">`OnExceptionNotHandled`</ph> 메서드에 연결합니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>This code example is part of the <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157351)</ept>.</source>
          <target state="translated">이 코드 예제는의 일부는 <bpt id="p1">[</bpt>사용자 지정 지 속성 서비스 샘플<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157351)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.Started">
          <source>Occurs when the workflow run-time engine is started.</source>
          <target state="translated">워크플로 런타임 엔진이 시작될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Started">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> method raises the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> event after it has validated the core service configuration of the workflow run-time engine, has invoked the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> method implemented by each of its services that derive from the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class, and has set <ph id="ph5">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> to <ph id="ph6">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> 메서드를 발생 시킵니다는 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> 이벤트 워크플로 런타임 엔진의 핵심 서비스 구성 유효성을 검사 한 후이 호출의 <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> 각에서 파생 되는 서비스에 의해 구현 되는 메서드는 <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> 클래스 이 설정 <ph id="ph5">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> 를 <ph id="ph6">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Started">
          <source>There is no guarantee about the order in which the services that derive from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class are started by the workflow run-time engine, and some of these workflow run-time engine services may depend on functionality supplied by other of these services to complete their startup tasks.</source>
          <target state="translated">워크플로 런타임 엔진이 <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> 클래스에서 파생된 서비스를 시작하는 순서는 경우에 따라 달라지며, 이러한 워크플로 런타임 엔진 서비스 중 일부는 다른 서비스가 제공하는 기능이 있어야만 시작 작업을 완료할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Started">
          <source>Workflow run-time engine services can override the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A?displayProperty=nameWithType&gt;</ph> method to perform any final startup tasks that require the support of other workflow run-time engine services when the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> event is raised.</source>
          <target state="translated">워크플로 런타임 엔진 서비스는 <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A?displayProperty=nameWithType&gt;</ph> 이벤트가 발생할 때 다른 워크플로 런타임 엔진 서비스의 지원이 필요한 최종 시작 작업을 수행하기 위해 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> 메서드를 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Started">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> 이벤트를 처리 하는, 참조 <bpt id="p1">[</bpt>이벤트 사용<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Started">
          <source>In the following example, an event handler is added to the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> event of the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 이벤트 처리기가 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph>의 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 이벤트에 추가됩니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Started">
          <source>In this example, the handler is an anonymous method that prints a simple message to the console.</source>
          <target state="translated">이 예제에서 처리기는 단순한 메시지를 콘솔에 표시하는 익명 메서드입니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>Starts the workflow run-time engine and the workflow run-time engine services.</source>
          <target state="translated">워크플로 런타임 엔진과 워크플로 런타임 엔진 서비스를 시작합니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>This method verifies that a valid set of core services exists and then starts any services that derive from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class.</source>
          <target state="translated">이 메서드는 올바른 핵심 서비스 집합이 있는지 확인한 다음 <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> 클래스에서 파생된 모든 서비스를 시작합니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>There must be one and only one of each of the following core services: a workflow <ph id="ph1">`CommitWorkBatch`</ph> service derived from the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> base class and a scheduler service derived from the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> base class.</source>
          <target state="translated">하나 및 각 핵심 서비스를 다음 중에서 하나만 있어야: 워크플로 <ph id="ph1">`CommitWorkBatch`</ph> 에서 파생 된 서비스는 <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> 에서 파생 된 기본 클래스 및 스케줄러 서비스는 <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> 기본 클래스입니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>If either or both of these core services are missing, the workflow run-time engine supplies the appropriate default service: <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService&gt;</ph> for the workflow <ph id="ph2">`CommitWorkBatch`</ph> service and <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&gt;</ph> for the scheduler service.</source>
          <target state="translated">이러한 주요 서비스 중 하나 또는 모두 누락 되 면 워크플로 런타임 엔진은 적절 한 기본 서비스를 제공 하는: <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService&gt;</ph> 워크플로에 대 한 <ph id="ph2">`CommitWorkBatch`</ph> 서비스 및 <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&gt;</ph> 스케줄러 서비스에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>A persistence service is optional, but there can be at most only one persistence service present.</source>
          <target state="translated">지속성 서비스는 선택 사항이지만 하나의 지속성 서비스만 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>After it has validated the service configuration, <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> calls <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> on all of the services that are derived from the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class.</source>
          <target state="translated">서비스 구성의 유효성을 검사한 후 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph>은 <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> 클래스에서 파생된 모든 서비스에서 <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph>를 호출합니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>Finally, the workflow run-time engine sets <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> and raises the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> event.</source>
          <target state="translated">마지막으로 워크플로 런타임 엔진은 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph>를 설정하고 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>You cannot add or remove core services after the workflow run-time engine is started.</source>
          <target state="translated">워크플로 런타임 엔진이 시작된 후에는 핵심 서비스를 추가하거나 제거할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>Core services are services that derive from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> class, the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> class, the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> class, or the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> class.</source>
          <target state="translated">핵심 서비스는 <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> 클래스, <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> 클래스, <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> 클래스 및 <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> 클래스에서 파생된 서비스입니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>If you call <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> while the workflow run-time engine is running, no action is performed.</source>
          <target state="translated">워크플로 런타임 엔진이 실행되는 동안 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph>을 호출하면 작업이 수행되지 않습니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">다음 코드 예제에서는 워크플로 호스트에서 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 기능을 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>The code calls the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> after the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A&gt;</ph> creates a <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> instance and after it calls <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> to add services to the runtime.</source>
          <target state="translated">이 코드에서는 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph>가 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A&gt;</ph> 인스턴스를 만들고 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>를 호출하여 서비스를 런타임에 추가한 후 <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph>을 호출합니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>It also calls <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> before any other processing occurs.</source>
          <target state="translated">또한 다른 처리가 발생하기 전에 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph>을 호출합니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157346)</ept> sample.</source>
          <target state="translated">이 코드 예제는의 일부는 <bpt id="p1">[</bpt>워크플로 취소<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157346)</ept> 샘플.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>이 삭제된 경우</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>There is more than one service workflow <ph id="ph1">&lt;see langword="CommitWorkBatch" /&gt;</ph> service registered with this <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</source>
          <target state="translated">둘 이상의 서비스 워크플로 <ph id="ph1">&lt;see langword="CommitWorkBatch" /&gt;</ph> 서비스가 이 <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>에 등록된 경우</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>There is more than one scheduler service registered with this <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</source>
          <target state="translated">둘 이상의 스케줄러 서비스가 이 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>에 등록된 경우</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>There is more than one persistence service registered with this <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</source>
          <target state="translated">둘 이상의 지속성 서비스가 이 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>에 등록된 경우</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.Stopped">
          <source>Occurs when the workflow run-time engine is stopped.</source>
          <target state="translated">워크플로 런타임 엔진이 중지될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Stopped">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> method raises the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph> event after it has invoked the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> method implemented by each of its services that derive from the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph> 클래스에서 파생된 각 서비스가 구현하는 <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> 메서드를 호출한 후 <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Stopped">
          <source>There is no guarantee about the order in which these workflow run-time engine services are stopped, and some of these services may need to preserve some functionality that is relied on by other services until they too are stopped.</source>
          <target state="translated">이러한 워크플로 런타임 엔진 서비스가 중지되는 순서는 경우에 따라 달라지며, 이러한 서비스 중 다른 서비스에서 사용되는 기능이 있는 일부 서비스는 다른 서비스도 중지될 때까지 해당 기능을 유지해야 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Stopped">
          <source>Such services can override the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A?displayProperty=nameWithType&gt;</ph> method to perform any residual shutdown logic when the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph> event is raised.</source>
          <target state="translated">이러한 서비스는 <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A?displayProperty=nameWithType&gt;</ph> 이벤트가 발생할 때 나머지 종료 논리를 수행하기 위해 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph> 메서드를 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Stopped">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> 이벤트를 처리 하는, 참조 <bpt id="p1">[</bpt>이벤트 사용<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Stopped">
          <source>In the following example, an event handler is added to the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph> event of the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 이벤트 처리기가 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph>의 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 이벤트에 추가됩니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Stopped">
          <source>In this example, the handler is an anonymous method that prints a simple message to the console.</source>
          <target state="translated">이 예제에서 처리기는 단순한 메시지를 콘솔에 표시하는 익명 메서드입니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime">
          <source>Stops the workflow run-time engine and the run-time services.</source>
          <target state="translated">워크플로 런타임 엔진과 런타임 서비스를 중지합니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime">
          <source>This method causes the workflow run-time engine to unload each of its workflow instances, stop all of its services that are derived from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class, set <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> to <ph id="ph3">`false`</ph>, and raise the <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph> event.</source>
          <target state="translated">이 메서드를 사용 하면 워크플로 런타임 엔진 각 해당 워크플로 인스턴스 언로드, 모든에서 파생 된 서비스를 중지 하는 <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> 클래스, 설정 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> 를 <ph id="ph3">`false`</ph>, 발생는 <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime">
          <source>To shut down the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> gracefully, call <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> before you call <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>을 올바르게 종료하려면 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph>를 호출하기 전에 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph>을 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> 메서드를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">다음 코드 예제에서는 워크플로 호스트에서 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 기능을 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> is called after the host has completed all other processing associated with the runtime.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph>은 호스트가 런타임과 연결된 다른 모든 처리를 완료한 후에 호출됩니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157346)</ept> sample.</source>
          <target state="translated">이 코드 예제는의 일부는 <bpt id="p1">[</bpt>워크플로 취소<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157346)</ept> 샘플.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is already disposed of.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>이 이미 삭제된 경우</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted">
          <source>Occurs when a workflow instance is aborted.</source>
          <target state="translated">워크플로 인스턴스가 중단될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted&gt;</ph> occurs after all pending work for the workflow instance is cleared, but before the workflow instance is invalidated in memory.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted&gt;</ph>는 워크플로 인스턴스에 대해 보류 중인 모든 작업이 지워진 후, 워크플로 인스턴스가 메모리에서 무효화되기 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted">
          <source>You can abort a workflow instance by calling <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A?displayProperty=nameWithType&gt;</ph>를 호출하여 워크플로 인스턴스를 중단할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted">
          <source>For this event, the sender contains the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with the event.</source>
          <target state="translated">이 이벤트의 경우 발신자는 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>을 포함하고 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph>는 이벤트와 연결된 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>를 포함합니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> 이벤트를 처리 하는, 참조 <bpt id="p1">[</bpt>이벤트 사용<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157352)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">다음 코드 예제에서는 워크플로 호스트에서 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 기능을 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowAborted`</ph>.</source>
          <target state="translated">이 코드에서는 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted&gt;</ph>를 이벤트 처리기인 <ph id="ph2">`OnWorkflowAborted`</ph> 메서드에 연결합니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> sample.</source>
          <target state="translated">이 코드 예제는의 일부는 <bpt id="p1">[</bpt>워크플로 취소<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> 샘플.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted">
          <source>Occurs when a workflow instance has completed.</source>
          <target state="translated">워크플로 인스턴스가 완료될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph> is raised after the workflow instance has completed but before the instance is invalidated in memory.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph>는 워크플로 인스턴스가 완료된 후, 인스턴스가 메모리에서 무효화되기 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> event, the sender contains the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowCompletedEventArgs&gt;</ph> contains the <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> and its output parameters.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> 이벤트의 경우 발신자는 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>을 포함하고 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowCompletedEventArgs&gt;</ph>는 <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>와 해당 출력 매개 변수를 포함합니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> 이벤트를 처리 하는, 참조 <bpt id="p1">[</bpt>이벤트 사용<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157352)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">다음 코드 예제에서는 워크플로 호스트에서 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 기능을 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowCompleted`</ph>.</source>
          <target state="translated">이 코드에서는 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph>를 이벤트 처리기인 <ph id="ph2">`OnWorkflowCompleted`</ph> 메서드에 연결합니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157346)</ept> sample.</source>
          <target state="translated">이 코드 예제는의 일부는 <bpt id="p1">[</bpt>워크플로 취소<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157346)</ept> 샘플.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated">
          <source>Occurs when a workflow instance is created.</source>
          <target state="translated">워크플로 인스턴스가 만들어질 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated">
          <source>The workflow run-time engine raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated&gt;</ph> event after the workflow instance is completely constructed but before activities are processed.</source>
          <target state="translated">워크플로 런타임 엔진은 워크플로 인스턴스가 완전히 생성된 후, 활동이 처리되기 전에 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated">
          <source>For this event, the sender contains the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with the event.</source>
          <target state="translated">이 이벤트의 경우 발신자는 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>을 포함하고 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph>는 이벤트와 연결된 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>를 포함합니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> 이벤트를 처리 하는, 참조 <bpt id="p1">[</bpt>이벤트 사용<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157352)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">다음 코드 예제에서는 워크플로 호스트에서 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 기능을 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowCreated`</ph>.</source>
          <target state="translated">이 코드에서는 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated&gt;</ph>를 이벤트 처리기인 <ph id="ph2">`OnWorkflowCreated`</ph> 메서드에 연결합니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated">
          <source>This code example is part of the <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=15735)</ept>.</source>
          <target state="translated">이 코드 예제는의 일부는 <bpt id="p1">[</bpt>사용자 지정 지 속성 서비스 샘플<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=15735)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled">
          <source>Occurs when a workflow instance enters the idle state.</source>
          <target state="translated">워크플로 인스턴스가 유휴 상태에 들어갈 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled">
          <source>The workflow run-time engine raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> event when the workflow instance enters an idle state; for example, when the workflow is waiting for a <ph id="ph2">&lt;xref:System.Workflow.Activities.DelayActivity&gt;</ph> activity to complete.</source>
          <target state="translated">워크플로 런타임 엔진은 예를 들어 워크플로가 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> 활동이 완료될 동안 기다릴 때와 같이 워크플로 인스턴스가 유휴 상태에 들어갈 때 <ph id="ph2">&lt;xref:System.Workflow.Activities.DelayActivity&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled">
          <source>For this event, the sender contains the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with the event.</source>
          <target state="translated">이 이벤트의 경우 발신자는 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>을 포함하고 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph>는 이벤트와 연결된 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>를 포함합니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> 이벤트를 처리 하는, 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">다음 코드 예제에서는 워크플로 호스트에서 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 기능을 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowIdled`</ph>.</source>
          <target state="translated">이 코드에서는 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph>를 이벤트 처리기인 <ph id="ph2">`OnWorkflowIdled`</ph> 메서드에 연결합니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> sample.</source>
          <target state="translated">이 코드 예제는의 일부는 <bpt id="p1">[</bpt>워크플로 취소<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> 샘플.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded">
          <source>Occurs when the workflow instance is loaded into memory.</source>
          <target state="translated">워크플로 인스턴스가 메모리에 로드될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;</ph> occurs after the persistence service has restored the workflow instance, but before the workflow run-time engine begins to execute any activities.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;</ph>는 지속성 서비스가 워크플로 인스턴스를 복원한 후, 워크플로 런타임 엔진이 활동 실행을 시작하기 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;</ph> event, the sender contains the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with the event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;</ph> 이벤트의 경우 발신자는 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>을 포함하고 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph>는 이벤트와 연결된 <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>를 포함합니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> 이벤트를 처리 하는, 참조 <bpt id="p1">[</bpt>이벤트 사용<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">다음 코드 예제에서는 워크플로 호스트에서 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 기능을 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowLoad`</ph>.</source>
          <target state="translated">이 코드에서는 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;</ph>를 이벤트 처리기인 <ph id="ph2">`OnWorkflowLoad`</ph> 메서드에 연결합니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded">
          <source>This code example is part of the <bpt id="p1">[</bpt>Custom Persistence Service<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157351)</ept> sample.</source>
          <target state="translated">이 코드 예제는의 일부는 <bpt id="p1">[</bpt>Custom Persistence Service<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157351)</ept> 샘플.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>Occurs when the state of a workflow instance is persisted.</source>
          <target state="translated">워크플로 인스턴스의 상태가 지속될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>The workflow instance can be persisted for many reasons.</source>
          <target state="translated">워크플로 인스턴스는 여러 가지 이유로 지속될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>For example, the host can call <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=nameWithType&gt;</ph> on a workflow instance, or the workflow run-time engine can persist a workflow instance because the instance is idle or because an atomic scope has completed.</source>
          <target state="translated">예를 들어 호스트가 워크플로 인스턴스에서 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=nameWithType&gt;</ph>를 호출할 수도 있고, 인스턴스가 유휴 상태가 되거나 원자성 범위가 완료되어 워크플로 런타임 엔진이 워크플로 인스턴스를 지속할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>If a persistence service is present in the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>, <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> is raised by the runtime after the state of the workflow instance is saved to memory.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>에 지속성 서비스가 있으면 런타임에서는 워크플로 인스턴스의 상태가 메모리에 저장된 후 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph>를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>If a persistence service is not present, the event is still raised but the instance state is not saved.</source>
          <target state="translated">지속성 서비스가 없어도 이 이벤트가 발생하지만 인스턴스 상태는 저장되지 않습니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>If the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> event occurs because the workflow instance is being unloaded, it is followed by a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> event.</source>
          <target state="translated">워크플로 인스턴스가 언로드되는 중이어서 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> 이벤트가 발생하는 경우 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> 이벤트가 뒤이어 발생합니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> event, the sender contains the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with the event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> 이벤트의 경우 발신자는 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>을 포함하고 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph>는 이벤트와 연결된 <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>를 포함합니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> 이벤트를 처리 하는, 참조 <bpt id="p1">[</bpt>이벤트 사용<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>The following code example demonstrates how you can use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">다음 코드 예제에서는 워크플로 호스트에서 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 기능을 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowPersisted`</ph>.</source>
          <target state="translated">이 코드에서는 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph>를 이벤트 처리기인 <ph id="ph2">`OnWorkflowPersisted`</ph> 메서드에 연결합니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>This code example is part of the <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=15735)</ept>.</source>
          <target state="translated">이 코드 예제는의 일부는 <bpt id="p1">[</bpt>사용자 지정 지 속성 서비스 샘플<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=15735)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>Occurs when execution of a workflow instance is resumed following a suspension.</source>
          <target state="translated">워크플로 인스턴스의 실행이 일시 중단 후에 계속될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>The workflow run-time engine raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> event just before the workflow instance is scheduled.</source>
          <target state="translated">워크플로 런타임 엔진은 워크플로 인스턴스가 예약되기 직전에 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> event is usually raised because of an explicit call to <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> 이벤트는 일반적으로 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType&gt;</ph>에 대한 명시적 호출로 인해 발생합니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>However, the workflow run-time engine can temporarily suspend an instance to perform an operation, for example, to apply a workflow change.</source>
          <target state="translated">그러나 워크플로 런타임 엔진에서는 예를 들어 워크플로 변경 내용을 적용하는 등의 작업을 수행하기 위해 인스턴스를 일시적으로 중단할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> event is raised when the runtime resumes execution of the workflow instance following the operation.</source>
          <target state="translated">이 경우 런타임에서 해당 작업을 수행한 후 워크플로 인스턴스의 실행을 다시 시작하면 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> 이벤트가 발생합니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> event, the sender contains the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with the event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> 이벤트의 경우 발신자는 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>을 포함하고 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph>는 이벤트와 연결된 <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>를 포함합니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> 이벤트를 처리 하는, 참조 <bpt id="p1">[</bpt>이벤트 사용<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>The following code example demonstrates how you can use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">다음 코드 예제에서는 워크플로 호스트에서 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 기능을 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowResume`</ph>.</source>
          <target state="translated">이 코드에서는 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph>를 이벤트 처리기인 <ph id="ph2">`OnWorkflowResume`</ph> 메서드에 연결합니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>This code example is part of the <bpt id="p1">[</bpt>Suspend and Terminate Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157402)</ept>.</source>
          <target state="translated">이 코드 예제는의 일부는 <bpt id="p1">[</bpt>Suspend and Terminate 샘플<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157402)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted">
          <source>Occurs when a workflow instance has been started.</source>
          <target state="translated">워크플로 인스턴스가 시작된 경우에 발생합니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted">
          <source>The workflow run-time engine raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted&gt;</ph> event after the workflow instance is started by scheduling the root activity for execution.</source>
          <target state="translated">워크플로 런타임 엔진은 실행할 루트 활동을 예약하여 워크플로 인스턴스가 시작된 후에 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted">
          <source>For this event, the sender contains the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with the event.</source>
          <target state="translated">이 이벤트의 경우 발신자는 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>을 포함하고 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph>는 이벤트와 연결된 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>를 포함합니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> 이벤트를 처리 하는, 참조 <bpt id="p1">[</bpt>이벤트 사용<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">다음 코드 예제에서는 워크플로 호스트에서 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 기능을 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowStarted`</ph>.</source>
          <target state="translated">이 코드에서는 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted&gt;</ph>를 이벤트 처리기인 <ph id="ph2">`OnWorkflowStarted`</ph> 메서드에 연결합니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted">
          <source>This code example is part of the <bpt id="p1">[</bpt>Host Communication Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157406)</ept>.</source>
          <target state="translated">이 코드 예제는의 일부는 <bpt id="p1">[</bpt>호스트 통신 샘플<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157406)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended">
          <source>Occurs when a workflow instance is suspended.</source>
          <target state="translated">워크플로 인스턴스가 일시 중단될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended">
          <source>The workflow instance can be suspended by the host through a call to the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A&gt;</ph> method, by a <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.SuspendActivity&gt;</ph> activity, or implicitly by the workflow run-time engine.</source>
          <target state="translated">워크플로 인스턴스는 호스트에서 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A&gt;</ph> 메서드 호출을 통해, <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.SuspendActivity&gt;</ph> 활동에 의해, 또는 워크플로 런타임 엔진에 의해 암시적으로 일시 중단될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended">
          <source>For example, the workflow run-time engine temporarily suspends the instance when it applies dynamic changes to the instance.</source>
          <target state="translated">예를 들어 워크플로 런타임 엔진은 동적 변경 내용을 인스턴스에 적용할 때 인스턴스를 일시 중단합니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended&gt;</ph> event, the sender contains the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt;</ph> contains the <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> and a string that describes the reason the instance was suspended.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended&gt;</ph> 이벤트의 경우 발신자는 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>을 포함하고 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt;</ph>는 인스턴스가 일시 중단된 이유를 설명하는 문자열과 <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>를 포함합니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> 이벤트를 처리 하는, 참조 <bpt id="p1">[</bpt>이벤트 사용<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">다음 코드 예제에서는 워크플로 호스트에서 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 기능을 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowSuspended`</ph>.</source>
          <target state="translated">이 코드에서는 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended&gt;</ph>를 이벤트 처리기인 <ph id="ph2">`OnWorkflowSuspended`</ph> 메서드에 연결합니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended">
          <source>This code example is part of the <bpt id="p1">[</bpt>Suspend and Terminate Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157402)</ept>.</source>
          <target state="translated">이 코드 예제는의 일부는 <bpt id="p1">[</bpt>Suspend and Terminate 샘플<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157402)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated">
          <source>Occurs when a workflow instance is terminated.</source>
          <target state="translated">워크플로 인스턴스가 종료될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated">
          <source>The workflow can be terminated by the host through a call to the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;</ph> method, by a <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.TerminateActivity&gt;</ph> activity, or by the workflow run-time engine when an unhandled exception occurs.</source>
          <target state="translated">워크플로는 호스트에서 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;</ph> 메서드 호출을 통해, <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.TerminateActivity&gt;</ph> 활동에 의해, 또는 처리되지 않은 예외가 발생할 때 워크플로 런타임 엔진에 의해 종료될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated">
          <source>The workflow run-time engine raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;</ph> event after the workflow instance is terminated, but before it is invalidated in memory.</source>
          <target state="translated">워크플로 런타임 엔진은 워크플로 인스턴스가 종료된 후, 메모리에서 무효화되기 전에 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> event, the sender contains the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt;</ph> contains the <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> and information about the reason the instance was terminated in the <ph id="ph5">&lt;xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> 이벤트의 경우 발신자는 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>을 포함하고 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt;</ph>는 <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 및 인스턴스가 종료된 이유에 대한 정보를 <ph id="ph5">&lt;xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception%2A?displayProperty=nameWithType&gt;</ph> 속성에 포함합니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> 이벤트를 처리 하는, 참조 <bpt id="p1">[</bpt>이벤트 사용<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">다음 코드 예제에서는 워크플로 호스트에서 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 기능을 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowCompleted`</ph>.</source>
          <target state="translated">이 코드에서는 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph>를 이벤트 처리기인 <ph id="ph2">`OnWorkflowCompleted`</ph> 메서드에 연결합니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> sample.</source>
          <target state="translated">이 코드 예제는의 일부는 <bpt id="p1">[</bpt>워크플로 취소<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> 샘플.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>Occurs when the workflow instance is unloaded from memory.</source>
          <target state="translated">워크플로 인스턴스가 메모리에서 언로드될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>A workflow instance can be unloaded from memory by an explicit call to <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph>, or implicitly by the workflow run-time engine according to its own semantics.</source>
          <target state="translated">워크플로 인스턴스는 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph>에 대한 명시적 호출에 의해, 또는 워크플로 런타임 엔진에서 해당 의미 체계에 따라 암시적으로 언로드될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>For example, the workflow run-time engine unloads a workflow instance if the instance becomes idle and the runtime has a <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> added for which <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle%2A&gt;</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">인스턴스가 유휴 상태가 되 고 런타임에 경우 워크플로 런타임 엔진에서 워크플로 인스턴스를 언로드합니다 하는 예를 들어 한 <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> 는 대 한 추가 <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle%2A&gt;</ph> 은 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>The workflow run-time engine raises the</source>
          <target state="translated">워크플로 런타임 엔진은</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> event after the state of the workflow instance has been successfully persisted but before the instance is invalidated in memory.</source>
          <target state="translated">워크플로 인스턴스의 상태가 성공적으로 지속된 후, 인스턴스가 메모리에서 무효화되기 전에 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>Therefore, a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> event precedes the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> event.</source>
          <target state="translated">따라서 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> 이벤트는 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> 이벤트보다 먼저 발생합니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> event, the sender contains the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with the event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> 이벤트의 경우 발신자는 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>을 포함하고 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph>는 이벤트와 연결된 <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>를 포함합니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> 이벤트를 처리 하는, 참조 <bpt id="p1">[</bpt>이벤트 사용<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">다음 코드 예제에서는 워크플로 호스트에서 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 기능을 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowUnload`</ph>.</source>
          <target state="translated">이 코드에서는 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph>를 이벤트 처리기인 <ph id="ph2">`OnWorkflowUnload`</ph> 메서드에 연결합니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>This code example is part of the <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157351)</ept>.</source>
          <target state="translated">이 코드 예제는의 일부는 <bpt id="p1">[</bpt>사용자 지정 지 속성 서비스 샘플<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157351)</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>