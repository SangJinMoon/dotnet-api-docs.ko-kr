<Type Name="TimerEventSubscriptionCollection" FullName="System.Workflow.Runtime.TimerEventSubscriptionCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4177dc4afabca710c6eab76138b51b039282af4f" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55408641" /></Metadata><TypeSignature Language="C#" Value="public class TimerEventSubscriptionCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TimerEventSubscriptionCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class TimerEventSubscriptionCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class TimerEventSubscriptionCollection : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type TimerEventSubscriptionCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a2e63-101"><see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> 개체의 순서 있는 목록을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-101">Represents an ordered list of <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="a2e63-102"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>은 워크플로 인스턴스와 연결된 <xref:System.Workflow.Runtime.TimerEventSubscription> 개체의 큐를 나타내고 이 큐를 관리할 메서드를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-102">A <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> represents the queue of <xref:System.Workflow.Runtime.TimerEventSubscription> objects associated with a workflow instance and provides methods to manage this queue.</span></span> <span data-ttu-id="a2e63-103">구독은 해당 <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> 값을 기반으로 큐에 정렬됩니다. <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> 값이 작은 구독이 <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> 값이 큰 구독보다 앞에 배치됩니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-103">Subscriptions are ordered in the queue based on their <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> values; those with smaller <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> values are positioned before those with larger <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> values.</span></span> <span data-ttu-id="a2e63-104">이 클래스가 제공하는 메서드를 사용하여 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty>가 각 워크플로 인스턴스에 대해 노출하는 활성 타이머 구독의 컬렉션을 관리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-104">You can use the methods provided by this class to manage the collection of active timer event subscriptions exposed by <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty> for each workflow instance.</span></span> <span data-ttu-id="a2e63-105"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add%2A> 또는 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%2A>를 사용하여 타이머 큐에서 구독을 추가하거나 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-105">You can use <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add%2A> or <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%2A> to add or remove subscriptions from the timer queue.</span></span> <span data-ttu-id="a2e63-106">타이머 큐의 첫 번째 요소가 변경될 때마다 <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>가 호출되어 이전에 큐의 시작 부분에 있던 타이머 이벤트를 취소하고 새 타이머 이벤트를 예약합니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-106">Whenever the first element in the timer queue changes, the <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> is called to cancel the timer event that was previously at the beginning of the queue and schedule the new timer event.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Workflow.Runtime.TimerEventSubscription item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Workflow.Runtime.TimerEventSubscription item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add(System.Workflow.Runtime.TimerEventSubscription)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As TimerEventSubscription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Workflow::Runtime::TimerEventSubscription ^ item);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Workflow.Runtime.TimerEventSubscription -&gt; unit" Usage="timerEventSubscriptionCollection.Add item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.Runtime.TimerEventSubscription" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="a2e63-107">타이머 큐에 추가할 <see cref="T:System.Workflow.Runtime.TimerEventSubscription" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-107">The <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> to add to the timer queue.</span></span></param>
        <summary><span data-ttu-id="a2e63-108"><see cref="T:System.Workflow.Runtime.TimerEventSubscription" />을 타이머 큐에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-108">Adds a <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> to the timer queue.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e63-109"><xref:System.Workflow.Runtime.TimerEventSubscription>을 타이머 큐에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-109">Adds the <xref:System.Workflow.Runtime.TimerEventSubscription> to the timer queue.</span></span> <span data-ttu-id="a2e63-110">큐의 구독은 해당 <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=nameWithType> 값을 기반으로 배치됩니다. 값이 작은 구독이 값이 큰 구독보다 앞에 배치됩니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-110">Subscriptions in the queue are positioned based on their <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=nameWithType> values; those with smaller values are positioned in front of those with larger values.</span></span> <span data-ttu-id="a2e63-111">새 구독이 큐의 시작 부분에 추가되면 <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=nameWithType>이 호출되어 이전에 큐의 시작 부분에 있던 타이머 이벤트를 취소하고 <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=nameWithType>이 호출되어 새 타이머 이벤트를 예약합니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-111">If the new subscription is added at the beginning of the queue, <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=nameWithType> is called to cancel the timer event that was previously at the beginning of the queue and <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=nameWithType> is called to schedule the new timer event.</span></span> <span data-ttu-id="a2e63-112"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add%2A>는 새 구독을 추가하기 전에 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>을 잠그므로 스레드로부터 안전합니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-112"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add%2A> locks the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> before adding the new subscription and is, therefore, thread safe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a2e63-113"><paramref name="item" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span><span class="sxs-lookup"><span data-stu-id="a2e63-113"><paramref name="item" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="timerEventSubscriptionCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="a2e63-114"><see cref="T:System.Array" />에서 복사한 요소의 대상인 1차원 <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-114">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />.</span></span> <span data-ttu-id="a2e63-115"><see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-115">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="a2e63-116"><paramref name="array" />에서 복사가 시작되는 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-116">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="a2e63-117"><see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /> 요소를 지정한 배열 인덱스에서 시작하여 기존의 1차원 <see cref="T:System.Array" />에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-117">Copies the <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /> elements to an existing one-dimensional <see cref="T:System.Array" />, starting at the specified array index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e63-118"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo%2A>는 스레드로부터 안전합니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-118"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo%2A> is thread safe.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.TimerEventSubscriptionCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Workflow.Runtime.TimerEventSubscriptionCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2e63-119">타이머 큐의 <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> 개체 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-119">Gets the number of <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> objects in the timer queue.</span></span></summary>
        <value><span data-ttu-id="a2e63-120">큐의 <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> 개체 수입니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-120">The number of <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> objects in the queue.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="timerEventSubscriptionCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a2e63-121"><see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />를 반복하는 열거자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-121">Returns an enumerator that iterates through the <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />.</span></span></summary>
        <returns><span data-ttu-id="a2e63-122"><see cref="T:System.Collections.IEnumerator" />에 대한 <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-122">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e63-123"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>에 대한 액세스가 동기화됩니다. 그러나 컬렉션 열거는 기본적으로 스레드로부터 안전한 프로시저가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-123">Access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> is synchronized; however, enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="a2e63-124">열거자는 컬렉션이 변경되지 않은 상태로 유지되는 한 유효한 상태를 유지합니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-124">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="a2e63-125">컬렉션에 대해 변경 내용을 수행하면(예: 요소 추가, 수정 또는 삭제) 열거자는 복구 불가능하게 무효화되고 해당 동작은 정의되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-125">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span> <span data-ttu-id="a2e63-126">열거자는 컬렉션에 독점적으로 액세스할 수 있는 권한이 없으므로 컬렉션을 열거하는 프로시저는 기본적으로 스레드로부터 안전하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-126">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="a2e63-127">열거하는 동안 스레드로부터 안전을 보장하려면 전체 열거를 수행하는 동안 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>를 사용하여 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A>을 잠그면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-127">To guarantee thread safety during enumeration, you can lock the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> during the entire enumeration by using <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.TimerEventSubscriptionCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Workflow.Runtime.TimerEventSubscriptionCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2e63-128"><see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />에 대한 액세스가 동기화되었는지의 여부, 즉 스레드로부터 안전한지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-128">Gets a value that indicates whether the access to the <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /> is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="a2e63-129">항상 <see langword="true" />에 대한 액세스가 동기화됨(스레드로부터 안전함)을 나타내는 <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-129">Always returns <see langword="true" /> indicating that access to the <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /> is synchronized (thread safe).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e63-130"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>에 대한 액세스가 동기화됩니다. 그러나 컬렉션 열거는 기본적으로 스레드로부터 안전한 프로시저가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-130">Access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> is synchronized; however, enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="a2e63-131">컬렉션이 동기화되어 있을 때 다른 스레드에서 해당 컬렉션을 수정할 수 있으므로 이렇게 되면 열거자에서 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-131">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="a2e63-132">열거하는 동안 스레드로부터 안전을 보장하려면 전체 열거를 수행하는 동안 컬렉션을 잠그거나 다른 스레드에서 변경된 내용으로 인해 발생한 예외를 catch하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-132">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span> <span data-ttu-id="a2e63-133"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A>는 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-133"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A> returns an object, which can be used to synchronize access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.TimerEventSubscription Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.TimerEventSubscription Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Function Peek () As TimerEventSubscription" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::TimerEventSubscription ^ Peek();" />
      <MemberSignature Language="F#" Value="member this.Peek : unit -&gt; System.Workflow.Runtime.TimerEventSubscription" Usage="timerEventSubscriptionCollection.Peek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.TimerEventSubscription</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a2e63-134">타이머 큐의 시작 부분에 있는 <see cref="T:System.Workflow.Runtime.TimerEventSubscription" />을 제거하지 않고 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-134">Returns the <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> at the beginning of the timer queue without removing it.</span></span></summary>
        <returns><span data-ttu-id="a2e63-135">타이머 큐의 시작 부분에 있는 <see cref="T:System.Workflow.Runtime.TimerEventSubscription" />이나 타이머 큐가 비어 있는 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-135">The <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> at the beginning of the timer queue or a null reference (<see langword="Nothing" /> in Visual Basic) if the timer queue is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e63-136"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek%2A>는 스레드로부터 안전합니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-136"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek%2A> is thread safe.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a2e63-137">지정된 <see cref="T:System.Workflow.Runtime.TimerEventSubscription" />을 타이머 큐에서 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-137">Removes the specified <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> from the timer queue.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (Guid timerSubscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(valuetype System.Guid timerSubscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (timerSubscriptionId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(Guid timerSubscriptionId);" />
      <MemberSignature Language="F#" Value="member this.Remove : Guid -&gt; unit" Usage="timerEventSubscriptionCollection.Remove timerSubscriptionId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timerSubscriptionId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="timerSubscriptionId"><span data-ttu-id="a2e63-138">제거할 <see cref="T:System.Guid" />의 <see cref="T:System.Workflow.Runtime.TimerEventSubscription" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-138">The <see cref="T:System.Guid" /> of the <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> to remove.</span></span></param>
        <summary><span data-ttu-id="a2e63-139">지정된 구독 ID를 가진 <see cref="T:System.Workflow.Runtime.TimerEventSubscription" />을 타이머 큐에서 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-139">Removes the <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> that has the specified subscription id from the timer queue.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e63-140">지정된 구독 ID를 가진 <xref:System.Workflow.Runtime.TimerEventSubscription>을 타이머 큐에서 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-140">Removes the <xref:System.Workflow.Runtime.TimerEventSubscription> with the specified subscription id from the timer queue.</span></span> <span data-ttu-id="a2e63-141">큐의 구독은 해당 <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=nameWithType> 값을 기반으로 배치됩니다. 값이 작은 구독이 값이 큰 구독보다 앞에 배치됩니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-141">Subscriptions in the queue are positioned based on their <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=nameWithType> values; those with smaller values are positioned in front of those with larger values.</span></span> <span data-ttu-id="a2e63-142">제거한 구독이 큐의 시작 부분에 있는 구독이면 <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=nameWithType>이 호출되어 이 구독과 연결된 타이머 이벤트를 취소하고 <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=nameWithType>이 호출되어 현재 큐의 시작 부분에 있는 구독에 대해 타이머 이벤트를 예약합니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-142">If the subscription removed was the subscription at the beginning of the queue, <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=nameWithType> is called to cancel the timer event associated with this subscription and <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=nameWithType> is called to schedule a timer event for the subscription that is now at the beginning of the queue.</span></span> <span data-ttu-id="a2e63-143"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%28System.Guid%29>는 스레드로부터 안전합니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-143"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%28System.Guid%29> is thread safe.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Workflow.Runtime.TimerEventSubscription item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Workflow.Runtime.TimerEventSubscription item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Workflow.Runtime.TimerEventSubscription)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (item As TimerEventSubscription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Workflow::Runtime::TimerEventSubscription ^ item);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Workflow.Runtime.TimerEventSubscription -&gt; unit" Usage="timerEventSubscriptionCollection.Remove item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.Runtime.TimerEventSubscription" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="a2e63-144">타이머 큐에서 제거할 <see cref="T:System.Workflow.Runtime.TimerEventSubscription" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-144">The <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> to remove from the timer queue.</span></span></param>
        <summary><span data-ttu-id="a2e63-145"><see cref="T:System.Workflow.Runtime.TimerEventSubscription" />을 타이머 큐에서 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-145">Removes the <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> from the timer queue.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e63-146"><xref:System.Workflow.Runtime.TimerEventSubscription>을 타이머 큐에서 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-146">Removes the <xref:System.Workflow.Runtime.TimerEventSubscription> from the timer queue.</span></span> <span data-ttu-id="a2e63-147">큐의 구독은 해당 <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=nameWithType> 값을 기반으로 배치됩니다. 값이 작은 구독이 값이 큰 구독보다 앞에 배치됩니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-147">Subscriptions in the queue are positioned based on their <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=nameWithType> values; those with smaller values are positioned in front of those with larger values.</span></span> <span data-ttu-id="a2e63-148">제거한 구독이 큐의 시작 부분에 있는 구독이면 <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=nameWithType>이 호출되어 이 구독과 연결된 타이머 이벤트를 취소하고 <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=nameWithType>이 호출되어 현재 큐의 시작 부분에 있는 구독에 대해 타이머 이벤트를 예약합니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-148">If the subscription removed was the subscription at the beginning of the queue, <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=nameWithType> is called to cancel the timer event associated with this subscription and <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=nameWithType> is called to schedule a timer event for the subscription that is now at the beginning of the queue.</span></span> <span data-ttu-id="a2e63-149"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%28System.Guid%29>는 스레드로부터 안전합니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-149"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%28System.Guid%29> is thread safe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a2e63-150"><paramref name="item" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span><span class="sxs-lookup"><span data-stu-id="a2e63-150"><paramref name="item" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2e63-151"><see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-151">Gets an object that can be used to synchronize access to the <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />.</span></span></summary>
        <value><span data-ttu-id="a2e63-152"><see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />에 대한 액세스를 동기화하는 데 사용되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-152">An object used to synchronize access to the <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e63-153"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A>는 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-153"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A> returns an object, which can be used to synchronize access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>.</span></span>  
  
 <span data-ttu-id="a2e63-154"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>에 대한 액세스가 동기화됩니다. 그러나 컬렉션 열거는 기본적으로 스레드로부터 안전한 프로시저가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-154">Access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> is synchronized; however, enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="a2e63-155">컬렉션이 동기화되어 있을 때 다른 스레드에서 해당 컬렉션을 수정할 수 있으므로 이렇게 되면 열거자에서 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-155">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="a2e63-156">열거하는 동안 스레드로부터 안전을 보장하려면 전체 열거를 수행하는 동안 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>를 사용하여 <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A>을 잠그거나 다른 스레드에서 변경된 내용으로 인해 발생한 예외를 catch하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-156">To guarantee thread safety during enumeration, you can either lock the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> during the entire enumeration by using <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A> or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimerCollectionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty TimerCollectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty TimerCollectionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TimerCollectionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ TimerCollectionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TimerCollectionProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2e63-157">워크플로 인스턴스와 연결된 타이머 큐입니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-157">Timer queue associated with a workflow instance.</span></span> <span data-ttu-id="a2e63-158">이 큐는 워크플로에 대한 시간 순서가 지정된 <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> 개체를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="a2e63-158">This queue contains time ordered <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> objects for a workflow.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>