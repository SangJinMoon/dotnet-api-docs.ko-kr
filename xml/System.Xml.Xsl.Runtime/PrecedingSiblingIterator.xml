<Type Name="PrecedingSiblingIterator" FullName="System.Xml.Xsl.Runtime.PrecedingSiblingIterator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="99917799f81cb8d447658cfc94edeed1b130e9cc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30686347" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct PrecedingSiblingIterator" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit PrecedingSiblingIterator extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.Runtime.PrecedingSiblingIterator" />
  <TypeSignature Language="VB.NET" Value="Public Structure PrecedingSiblingIterator" />
  <TypeSignature Language="C++ CLI" Value="public value class PrecedingSiblingIterator" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlXml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="N:System.Xml.XPath" /> 선행 형제 축 규칙에 따라 모든 선행 형제 노드를 반복하고 문서와 반대 순서로 노드를 반환합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우에만 탐색기 변경의 상태는 <xref:System.Xml.Xsl.Runtime.PrecedingSiblingIterator.MoveNext%2A> 메서드가 반환 되었음을 `true`합니다.  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create (System.Xml.XPath.XPathNavigator context, System.Xml.Xsl.Runtime.XmlNavigatorFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Create(class System.Xml.XPath.XPathNavigator context, class System.Xml.Xsl.Runtime.XmlNavigatorFilter filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.PrecedingSiblingIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Create (context As XPathNavigator, filter As XmlNavigatorFilter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create(System::Xml::XPath::XPathNavigator ^ context, System::Xml::Xsl::Runtime::XmlNavigatorFilter ^ filter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="filter" Type="System.Xml.Xsl.Runtime.XmlNavigatorFilter" />
      </Parameters>
      <Docs>
        <param name="context">노드 트래버스를 시작하는 노드입니다.</param>
        <param name="filter">이름을 기준으로 노드를 필터링할 수 있습니다.</param>
        <summary>
          <see cref="T:System.Xml.Xsl.Runtime.PrecedingSiblingIterator" /> 을(를) 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Xml.XPath.XPathNavigator Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XPath.XPathNavigator Current" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.Runtime.PrecedingSiblingIterator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XPath::XPathNavigator ^ Current { System::Xml::XPath::XPathNavigator ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 결과 탐색기를 반환합니다.</summary>
        <value>현재 결과 탐색기입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우에만 탐색기 변경의 상태는 <xref:System.Xml.Xsl.Runtime.PrecedingSiblingIterator.MoveNext%2A> 메서드가 반환 되었음을 `true`합니다.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.PrecedingSiblingIterator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>문서 순서와 역순으로 다음 선행 형제 노드에 반복기를 배치합니다.</summary>
        <returns>
          다음 선행 형제 노드가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 앞에 다음 노드가 있는 경우는 <xref:System.Xml.Xsl.Runtime.PrecedingSiblingIterator.MoveNext%2A> 메서드는 <xref:System.Xml.Xsl.Runtime.PrecedingSiblingIterator.Current%2A> 속성을 현재 결과 탐색기입니다; 그렇지 않으면는 <xref:System.Xml.Xsl.Runtime.PrecedingSiblingIterator.Current%2A> 속성이 변경 되지 않습니다.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>