<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Int64Aggregator.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5be1ac5e81780a21de8ad53d7813fe15e053108ec.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">be1ac5e81780a21de8ad53d7813fe15e053108ec</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Xsl.Runtime.Int64Aggregator">
          <source>Computes aggregates over a sequence of <ph id="ph1">&lt;see langword="Int64" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Int64" /&gt;</ph> 값 시퀀스의 집계를 계산합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.Xml.Xsl.Runtime.Int64Aggregator.Average(System.Int64)">
          <source>A value of type <ph id="ph1">&lt;see langword="Int64" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Int64" /&gt;</ph> 형식의 값입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Xml.Xsl.Runtime.Int64Aggregator.Average(System.Int64)">
          <source>Finds an average of a sequence of <ph id="ph1">&lt;see langword="Int64" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Int64" /&gt;</ph> 값 시퀀스의 평균을 찾습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="P:System.Xml.Xsl.Runtime.Int64Aggregator.AverageResult">
          <source>Returns an <ph id="ph1">&lt;see langword="Int64" /&gt;</ph> value that contains the average of a sequence of <ph id="ph2">&lt;see langword="Int64" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Int64" /&gt;</ph> 값 시퀀스의 평균이 포함된 <ph id="ph2">&lt;see langword="Int64" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Xsl.Runtime.Int64Aggregator.AverageResult">
          <source>An <ph id="ph1">&lt;see langword="Int64" /&gt;</ph> value that contains the average of a sequence of <ph id="ph2">&lt;see langword="Int64" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Int64" /&gt;</ph> 값 시퀀스의 평균이 포함된 <ph id="ph2">&lt;see langword="Int64" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Xml.Xsl.Runtime.Int64Aggregator.Create">
          <source>Initializes a sequence of <ph id="ph1">&lt;see langword="Int64" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Int64" /&gt;</ph> 값 시퀀스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="P:System.Xml.Xsl.Runtime.Int64Aggregator.IsEmpty">
          <source>Returns a Boolean value that indicates whether the sequence of <ph id="ph1">&lt;see langword="Int64" /&gt;</ph> values is empty.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Int64" /&gt;</ph> 값 시퀀스가 비어 있는지 여부를 나타내는 부울 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Xsl.Runtime.Int64Aggregator.IsEmpty">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the sequence of <ph id="ph2">&lt;see langword="Int64" /&gt;</ph> values is empty; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 값 시퀀스가 비어 있으면 <ph id="ph2">&lt;see langword="Int64" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Xml.Xsl.Runtime.Int64Aggregator.Maximum(System.Int64)">
          <source>A value of type <ph id="ph1">&lt;see langword="Int64" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Int64" /&gt;</ph> 형식의 값입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Xml.Xsl.Runtime.Int64Aggregator.Maximum(System.Int64)">
          <source>Assigns the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter to the existing result if the <ph id="ph2">&lt;paramref name="value" /&gt;</ph> parameter is greater than the existing result.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 매개 변수가 기존 결과보다 크면 <ph id="ph2">&lt;paramref name="value" /&gt;</ph> 매개 변수를 기존 결과에 할당합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="P:System.Xml.Xsl.Runtime.Int64Aggregator.MaximumResult">
          <source>Gets the largest <ph id="ph1">&lt;see langword="Int64" /&gt;</ph> value.</source>
          <target state="translated">가장 큰 <ph id="ph1">&lt;see langword="Int64" /&gt;</ph> 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Xsl.Runtime.Int64Aggregator.MaximumResult">
          <source>The largest <ph id="ph1">&lt;see langword="Int64" /&gt;</ph> value.</source>
          <target state="translated">가장 큰 <ph id="ph1">&lt;see langword="Int64" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Xml.Xsl.Runtime.Int64Aggregator.Minimum(System.Int64)">
          <source>A value of type <ph id="ph1">&lt;see langword="Int64" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Int64" /&gt;</ph> 형식의 값입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Xml.Xsl.Runtime.Int64Aggregator.Minimum(System.Int64)">
          <source>Assigns the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter to the existing result if the <ph id="ph2">&lt;paramref name="value" /&gt;</ph> parameter is less than the existing result.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 매개 변수가 기존 결과보다 작으면 <ph id="ph2">&lt;paramref name="value" /&gt;</ph> 매개 변수를 기존 결과에 할당합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="P:System.Xml.Xsl.Runtime.Int64Aggregator.MinimumResult">
          <source>Gest the smallest <ph id="ph1">&lt;see langword="Int64" /&gt;</ph> value.</source>
          <target state="translated">가장 작은 <ph id="ph1">&lt;see langword="Int64" /&gt;</ph> 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Xsl.Runtime.Int64Aggregator.MinimumResult">
          <source>The smallest <ph id="ph1">&lt;see langword="Int64" /&gt;</ph> value.</source>
          <target state="translated">가장 작은 <ph id="ph1">&lt;see langword="Int64" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xml.Xsl.Runtime.Int64Aggregator.Sum(System.Int64)">
          <source>A value of type <ph id="ph1">&lt;see langword="Int64" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Int64" /&gt;</ph> 형식의 값입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Xml.Xsl.Runtime.Int64Aggregator.Sum(System.Int64)">
          <source>Adds an <ph id="ph1">&lt;see langword="Int64" /&gt;</ph> value to the existing result.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Int64" /&gt;</ph> 값을 기존 결과에 추가합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.Xml.Xsl.Runtime.Int64Aggregator.SumResult">
          <source>Returns an <ph id="ph1">&lt;see langword="Int64" /&gt;</ph> value that contains the sum of a sequence of <ph id="ph2">&lt;see langword="Int64" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Int64" /&gt;</ph> 값 시퀀스의 합이 포함된 <ph id="ph2">&lt;see langword="Int64" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Xsl.Runtime.Int64Aggregator.SumResult">
          <source>An <ph id="ph1">&lt;see langword="Int64" /&gt;</ph> value that contains the sum of a sequence of <ph id="ph2">&lt;see langword="Int64" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Int64" /&gt;</ph> 값 시퀀스의 합이 포함된 <ph id="ph2">&lt;see langword="Int64" /&gt;</ph> 값입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>