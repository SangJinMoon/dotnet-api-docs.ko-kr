<Type Name="Ping" FullName="System.Net.NetworkInformation.Ping">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2ca87d840e9ac849488a52a1432fd504e5c32ecd" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="05/07/2018" />
    <Meta Name="ms.locfileid" Value="33683363" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Ping : System.ComponentModel.Component, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Ping extends System.ComponentModel.Component implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.NetworkInformation.Ping" />
  <TypeSignature Language="VB.NET" Value="Public Class Ping&#xA;Inherits Component&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Ping : System::ComponentModel::Component, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Ping</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.MonoTODO("IPv6 support is missing")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>응용 프로그램에서 네트워크를 통해 원격 컴퓨터에 액세스할 수 있는지 여부를 확인하는 데 사용하는 클래스입니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 응용 프로그램 사용은 <xref:System.Net.NetworkInformation.Ping> 원격 컴퓨터를 연결할 수 있는지 여부를 검색 하는 클래스입니다.  
  
 네트워크 토폴로지를 확인할 수 있는지 여부를 <xref:System.Net.NetworkInformation.Ping> 원격 호스트를 성공적으로 연결할 수 있습니다. 존재 여부와 프록시, 네트워크 주소 변환 (NAT) 장치 또는 방화벽의 구성을 방지할 수 <xref:System.Net.NetworkInformation.Ping> 성공 합니다. 성공적인 <xref:System.Net.NetworkInformation.Ping> 원격 것만 나타냅니다 네트워크에서 호스트에 연결할 수 있습니다; 원격 호스트에서 더 높은 수준의 서비스 (예: 웹 서버)의 존재를 보장 되지 않습니다.  
  
 이 클래스는 Ping.exe 명령줄 도구와 유사한 기능을 제공합니다. <xref:System.Net.NetworkInformation.Ping.Send%2A> 및 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 메서드 해당 컴퓨터에서 원격 컴퓨터에서 ICMP 에코 응답 메시지에 대 한 대기 작업을 제어 메시지 ICMP (Internet Protocol) 에코 요청 메시지를 보냅니다. 에 대 한 자세한 설명은 ICMP 메시지를 참조에서 사용할 수 있는 RFC 792 [ https://www.ietf.org ](https://www.ietf.org/)합니다.  
  
 다음 형식에 사용 되는 <xref:System.Net.NetworkInformation.Ping> 클래스 및 아래에서 자세히 설명 합니다.  
  
|**형식 이름**|**설명**|  
|-------------------|---------------------|  
|<xref:System.Net.NetworkInformation.IPStatus>|ICMP 에코 요청 메시지의 결과 설명 하는 상태 코드를 정의 합니다.|  
|<xref:System.Net.NetworkInformation.PingOptions>|검색 요청 패킷에 횟수를 제어 하는 설정을 전달할 수 또는 구성할 수 있습니다 (<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>)를 조각화 할 수 있는지 여부 및 (<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> ).|  
|<xref:System.Net.NetworkInformation.PingReply>|ICMP 에코 요청의 결과 포함합니다.|  
|<xref:System.Net.NetworkInformation.PingException>|복구할 수 없는 오류가 발생 한 경우 throw 합니다.|  
|<xref:System.Net.NetworkInformation.PingCompletedEventArgs>|와 연결 된 데이터를 포함 <xref:System.Net.NetworkInformation.Ping.PingCompleted> 이벤트는 발생 시기는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 호출이 완료 되거나 취소 될 합니다.|  
|<xref:System.Net.NetworkInformation.PingCompletedEventHandler>|콜백 메서드를 제공 하는 대리자를 호출 하는 경우는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 호출이 완료 되거나 취소 됩니다.|  
  
 <xref:System.Net.NetworkInformation.Ping.Send%2A> 및 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 에 회신을 반환 하는 메서드는 <xref:System.Net.NetworkInformation.PingReply> 개체입니다. <xref:System.Net.NetworkInformation.PingReply.Status%2A?displayProperty=nameWithType> 속성에서 반환 된 <xref:System.Net.NetworkInformation.IPStatus> 요청의 결과 나타내는 값을 합니다.  
  
 요청을 보낼 때 원격 컴퓨터를 지정 해야 합니다. 이름 문자열을 문자열 형식으로 IP 주소는 호스트를 제공 하 여이 작업을 수행할 수 또는 <xref:System.Net.IPAddress> 개체입니다.  
  
 또한 다음과 같은 유형의 정보를 지정할 수 있습니다.  
  
-   데이터 요청과 함께 전송입니다. 지정 `buffer` 특정 크기의 패킷을 원격 호스트와의 네트워크 경로의 최대 전송 단위 받는 데 필요한 시간을 알 수 있습니다. (참조는 <xref:System.Net.NetworkInformation.Ping.Send%2A> 또는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 사용 하는 오버 로드는 `buffer` 매개 변수.)  
  
-   여부 ICMP 에코 패킷은 전송 중에 조각화 될 수 있습니다. (참조는 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 속성 및 <xref:System.Net.NetworkInformation.Ping.Send%2A> 또는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 사용 하는 오버 로드는 `options` 매개 변수.)  
  
-   횟수 라우팅 노드 예: 라우터 또는 게이트웨이와 대상 컴퓨터에 도달 하거나 삭제 하기 전에 패킷을 전달할 수 있습니다. (참조 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 및 <xref:System.Net.NetworkInformation.Ping.Send%2A> 또는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 사용 하는 오버 로드는 `options` 매개 변수.)  
  
-   회신을 수신 해야 할 시간 제한입니다. (참조는 <xref:System.Net.NetworkInformation.Ping.Send%2A> 또는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 사용 하는 오버 로드는 `timeout` 매개 변수입니다.  
  
 <xref:System.Net.NetworkInformation.Ping> 클래스 요청을 보내기 위한 동기 및 비동기 메서드를 제공 합니다. 을 회신에 대 한 대기 하는 동안 응용 프로그램을 차단 해야 하는 경우 사용 하 여는 <xref:System.Net.NetworkInformation.Ping.Send%2A> 메서드; 이러한 메서드는 동기적입니다. 응용 프로그램을 차단 하지 않아야 하는 경우 사용 하 여 비동기 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 메서드. 에 대 한 호출 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 스레드 풀에서 자동으로 할당 되는 자체 스레드에서 실행 합니다. 비동기 작업이 완료 되 면 발생는 <xref:System.Net.NetworkInformation.Ping.PingCompleted> 이벤트입니다. 응용 프로그램 사용을 <xref:System.Net.NetworkInformation.PingCompletedEventHandler> 에 대해 호출 하는 방법을 지정 하는 대리자 <xref:System.Net.NetworkInformation.Ping.PingCompleted> 이벤트입니다. 추가 해야 합니다는 <xref:System.Net.NetworkInformation.PingCompletedEventHandler> 대리자를 호출 하기 전에 이벤트 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>합니다. 대리자의 메서드는 <xref:System.Net.NetworkInformation.PingCompletedEventArgs> 포함 된 개체는 <xref:System.Net.NetworkInformation.PingReply> 의 결과 설명 하는 개체는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 호출 합니다.  
  
 동일한 인스턴스를 사용할 수 없습니다는 <xref:System.Net.NetworkInformation.Ping> 에 여러 개의 ICMP 에코 요청을 생성 하는 클래스입니다. 호출 <xref:System.Net.NetworkInformation.Ping.Send%2A> 동안는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 호출이 진행 중 또는 호출 중인 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 여러 번 모든 이전 호출 하면 완료 하기 전에 <xref:System.InvalidOperationException>합니다.  
  
   
  
## Examples  
 다음 코드 예제는 <xref:System.Net.NetworkInformation.Ping> 클래스를 동기적으로 합니다.  
  
 [!code-cpp[NCLPingSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingSync/CPP/syncping.cpp#1)]
 [!code-csharp[NCLPingSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingSync/CS/syncping.cs#1)]  
  
 다음 코드 예제는 <xref:System.Net.NetworkInformation.Ping> 클래스는 비동기적으로 합니다.  
  
 [!code-cpp[NCLPingASync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#1)]
 [!code-csharp[NCLPingASync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Ping ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Ping();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Net.NetworkInformation.Ping" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 만드는 방법을 보여 줍니다는 <xref:System.Net.NetworkInformation.Ping> 인스턴스. 전체 예제는에서 사용할 수는 <xref:System.Net.NetworkInformation.Ping> 클래스 개요입니다.  
  
 [!code-cpp[NCLPingAsync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#2)]
 [!code-csharp[NCLPingAsync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />, 관리되지 않는 리소스만 해제하려면 <see langword="false" />입니다.</param>
        <summary>
          <see cref="T:System.Net.NetworkInformation.Ping" /> 개체에서 사용하는 관리되지 않는 리소스를 해제하고 관리되는 리소스를 선택적으로 삭제할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 public `Dispose()` 메서드 및 <xref:System.ComponentModel.Component.Finalize%2A> 메서드. 공용 `Dispose()` 메서드가 호출 하 여 보호 된 <xref:System.Net.NetworkInformation.Ping.Dispose%2A> 메서드는 `disposing` 매개 변수 설정 `true`합니다. <xref:System.ComponentModel.Component.Finalize%2A> 호출 `Dispose` 와 `disposing` 로 설정 `false`합니다.  
  
 경우는 `disposing` 매개 변수는 `true`,이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 <xref:System.Net.NetworkInformation.Ping> 개체에서 참조 합니다. 이 메서드는 참조되는 각 개체의 `Dispose()` 메서드를 호출합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPingCompleted">
      <MemberSignature Language="C#" Value="protected void OnPingCompleted (System.Net.NetworkInformation.PingCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnPingCompleted(class System.Net.NetworkInformation.PingCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnPingCompleted (e As PingCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnPingCompleted(System::Net::NetworkInformation::PingCompletedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.NetworkInformation.PingCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 포함된 <see cref="T:System.Net.NetworkInformation.PingCompletedEventArgs" /> 개체입니다.</param>
        <summary>
          <see cref="E:System.Net.NetworkInformation.Ping.PingCompleted" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 클래스에서 상속 되는 <xref:System.Net.NetworkInformation.Ping> 클래스에 포함 된 데이터를 기록 하는 등의 추가 작업을 수행 하려면이 메서드를 재정의할 수 있습니다는 `e` 매개 변수입니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Net.NetworkInformation.Ping.OnPingCompleted%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PingCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.NetworkInformation.PingCompletedEventHandler PingCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.NetworkInformation.PingCompletedEventHandler PingCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.NetworkInformation.Ping.PingCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PingCompleted As PingCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::NetworkInformation::PingCompletedEventHandler ^ PingCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ICMP(Internet Control Message Protocol) Echo 메시지를 보내고 이에 대응하는 ICMP Echo Reply 메시지를 받기 위한 비동기 작업이 완료되거나 취소될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 응용 프로그램 사용는 <xref:System.Net.NetworkInformation.Ping.PingCompleted> 중 하나에 대 한 호출에 의해 수집 된 이벤트의 완료 상태 및 데이터에 대 한 정보는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 메서드. <xref:System.Net.NetworkInformation.PingCompletedEventHandler> 대리자 호출 제공 될 때 콜백 메서드 호출 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 이 이벤트를 발생 시킵니다.  
  
   
  
## Examples  
 다음 코드 예제에 대 한 콜백 메서드를 지정 하는 방법을 보여 줍니다는 <xref:System.Net.NetworkInformation.Ping.PingCompleted> 이벤트입니다. 전체 예제는에서 사용할 수는 <xref:System.Net.NetworkInformation.Ping> 클래스 개요입니다.  
  
 [!code-cpp[NCLPingAsync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#2)]
 [!code-csharp[NCLPingAsync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>원격 컴퓨터에 ICMP(Internet Control Message Protocol) Echo 메시지를 보내고 해당 원격 컴퓨터로부터 이에 대응하는 ICMP Echo Reply 메시지를 받으려고 시도합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 IP 주소 중 하나에서 반환 되는 <xref:System.Net.NetworkInformation.Ping.Send%2A> 오버 로드는 악의적인 원격 컴퓨터에서 발생할 수 있습니다. 이 사용 하 여 원격 컴퓨터에 연결 하지 않습니다. DNS를 사용 하 여 연결 하려는 컴퓨터의 IP 주소를 결정 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (address As IPAddress) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::Net::IPAddress ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="address">ICMP Echo 메시지의 대상 컴퓨터를 식별하는 <see cref="T:System.Net.IPAddress" />입니다.</param>
        <summary>지정된 <see cref="T:System.Net.IPAddress" />를 사용하는 컴퓨터에 ICMP(Internet Control Message Protocol) Echo 메시지를 보내고 해당 컴퓨터로부터 이에 대응하는 ICMP Echo Reply 메시지를 받으려고 시도합니다.</summary>
        <returns>ICMP Echo Reply 메시지를 받은 경우 이 메시지에 대한 정보를 제공하고 메시지를 받지 못한 경우에는 오류의 원인을 설명하는 <see cref="T:System.Net.NetworkInformation.PingReply" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정 된 호스트에이 메서드는 전송 `address` 32 <xref:System.Byte> ICMP 에코 메시지와 함께 데이터 버퍼입니다. 메서드는 ICMP 에코 응답 메시지에 대 한 5 초 동안 대기합니다. 메서드가 반환 하는 경우 수신 되지 않으면 회신 해당 시간에, 및 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 속성이 <xref:System.Net.NetworkInformation.IPStatus.TimedOut>합니다.  
  
 이 오버 로드 패킷 조각화 및 패킷 전송에 대 한 기본 설정을 사용합니다. ICMP 에코 메시지를 포함 하는 패킷 수 조각화 전송 중에는 총 패킷 크기는 전송할 수 있는 최대 패킷 크기를 초과 하는 경우 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서. 조각화를 방지 하려면 중 하나를 사용는 <xref:System.Net.NetworkInformation.Ping.Send%2A> 를 사용 하는 메서드는 `options` 집합과, 매개 변수는 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 속성을 `true`합니다. 때 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 은 `true` 한 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서 전송할 수 있는 최대 패킷 크기를 초과 하는 총 패킷 크기를 ICMP 에코 요청 작업이 실패 합니다. 이런 경우는 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 로 설정 된 <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>합니다. 패킷 또는 (조각화 된 경우)에 패킷 조각이 삭제 되기 전에 라우팅 노드에 의해 128 번 전달 될 수 있습니다. 이 설정을 변경 하려면 사용는 <xref:System.Net.NetworkInformation.Ping.Send%2A> 사용 오버 로드는 `options` 매개 변수를 설정은 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 속성을 원하는 값으로 합니다. 패킷에 지정 된 횟수 만큼 전달 된 후 대상에 도달 하지 않도록, 패킷이 삭제 되 고 ICMP 에코 요청에 실패 합니다. 이런 경우는 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 로 설정 된 <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 메서드를 호출 하는 방법을 보여 줍니다.  
  
 [!code-cpp[NCLPingSampler#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#3)]
 [!code-csharp[NCLPingSampler#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />를 호출하고 있는 경우</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="address" />가 IPv6 주소이고, 로컬 컴퓨터가 Windows 2000 이전의 운영 체제를 실행하고 있는 경우</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">ICMP 메시지를 보내거나 받는 동안 예외가 throw된 경우. throw된 정확한 예외에 대해서는 내부 예외를 참조하십시오.</exception>
        <exception cref="T:System.ObjectDisposedException">이 개체가 삭제되었습니다.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">ICMP 에코 메시지를 보내려고 합니다.  
  
 연결 된 열거형의 경우: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (hostNameOrAddress As String) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::String ^ hostNameOrAddress);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">ICMP Echo 메시지의 대상 컴퓨터를 식별하는 <see cref="T:System.String" />입니다. 이 매개 변수에 지정된 값은 호스트 이름 또는 IP 주소의 문자열 표현일 수 있습니다.</param>
        <summary>지정된 컴퓨터에 ICMP(Internet Control Message Protocol) Echo 메시지를 보내고 해당 컴퓨터로부터 이에 대응하는 ICMP Echo Reply 메시지를 받으려고 시도합니다.</summary>
        <returns>ICMP Echo Reply 메시지를 받은 경우 이 메시지에 대한 정보를 제공하고 메시지를 받지 못한 경우에는 오류의 원인을 제공하는 <see cref="T:System.Net.NetworkInformation.PingReply" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 전송 32 <xref:System.Byte> ICMP 에코 메시지와 함께 데이터 버퍼입니다. 메서드는 ICMP 에코 응답 메시지에 대 한 5 초 동안 대기합니다. 메서드가 반환 하는 경우 수신 되지 않으면 회신 해당 시간에, 및 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 속성이 <xref:System.Net.NetworkInformation.IPStatus.TimedOut>합니다.  
  
 이 오버 로드 패킷 조각화 및 패킷 전송에 대 한 기본 설정을 사용합니다. ICMP 에코 메시지를 포함 하는 패킷 수 조각화 전송 중에는 총 패킷 크기는 전송할 수 있는 최대 패킷 크기를 초과 하는 경우 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서. 조각화를 방지 하려면 중 하나를 사용는 <xref:System.Net.NetworkInformation.Ping.Send%2A> 를 사용 하는 메서드는 `options` 집합과, 매개 변수는 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 속성을 `true`합니다. 때 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 은 `true` 한 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서 전송할 수 있는 최대 패킷 크기를 초과 하는 총 패킷 크기를 ICMP 에코 요청 작업이 실패 합니다. 이런 경우는 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 로 설정 된 <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>합니다. 패킷 또는 (조각화 된 경우)에 패킷 조각이 삭제 되기 전에 라우팅 노드에 의해 128 번 전달 될 수 있습니다. 이 설정을 변경 하려면 사용는 <xref:System.Net.NetworkInformation.Ping.Send%2A> 사용 오버 로드는 `options` 매개 변수를 설정은 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 속성을 원하는 값으로 합니다. 패킷에 지정 된 횟수 만큼 전달 된 후 대상에 도달 하지 않도록, 패킷이 삭제 되 고 ICMP 에코 요청에 실패 합니다. 이런 경우는 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 로 설정 된 <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 메서드를 호출 하는 방법을 보여 줍니다.  
  
 [!code-cpp[NCLPingSampler#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#2)]
 [!code-csharp[NCLPingSampler#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostNameOrAddress" />이 <see langword="null" />이거나 빈 문자열("")인 경우</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />를 호출하고 있는 경우</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="address" />가 IPv6 주소이고, 로컬 컴퓨터가 Windows 2000 이전의 운영 체제를 실행하고 있는 경우</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">ICMP 메시지를 보내거나 받는 동안 예외가 throw된 경우. throw된 정확한 예외에 대해서는 내부 예외를 참조하십시오.</exception>
        <exception cref="T:System.ObjectDisposedException">이 개체가 삭제되었습니다.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">ICMP 에코 메시지를 보내려고 합니다. 연결 된 열거형의 경우: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(class System.Net.IPAddress address, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (address As IPAddress, timeout As Integer) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::Net::IPAddress ^ address, int timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">ICMP Echo 메시지의 대상 컴퓨터를 식별하는 <see cref="T:System.Net.IPAddress" />입니다.</param>
        <param name="timeout">ICMP Echo 메시지를 보낸 후 ICMP Echo Reply 메시지를 기다리는 최대 시간(밀리초)을 지정하는 <see cref="T:System.Int32" /> 값입니다.</param>
        <summary>지정된 <see cref="T:System.Net.IPAddress" />를 사용하는 컴퓨터에 ICMP(Internet Control Message Protocol) Echo 메시지와 지정된 데이터 버퍼를 보내고 해당 컴퓨터로부터 이에 대응하는 ICMP Echo Reply 메시지를 받으려고 시도합니다. 이 메서드를 통해 작업의 시간 제한 값을 지정할 수 있습니다.</summary>
        <returns>ICMP Echo Reply 메시지를 받은 경우 이 메시지에 대한 정보를 제공하고 메시지를 받지 못한 경우에는 오류의 원인을 제공하는 <see cref="T:System.Net.NetworkInformation.PingReply" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ICMP 에코 응답 메시지에 지정 된 시간 안에 수신 되지 않으면는 `timeout` 매개 변수를 ICMP 에코 실패 및 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 속성이 <xref:System.Net.NetworkInformation.IPStatus.TimedOut>합니다.  
  
> [!NOTE]
>  매우 작은 숫자를 지정 하는 경우 `timeout`, Ping 응답을 받을 수 있는 경우에 `timeout` 밀리초가 경과 합니다.  
  
 이 오버 로드 패킷 조각화 및 패킷 전송에 대 한 기본 설정을 사용합니다. ICMP 에코 메시지를 포함 하는 패킷 수 조각화 전송 중에는 총 패킷 크기는 전송할 수 있는 최대 패킷 크기를 초과 하는 경우 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서. 조각화를 방지 하려면 중 하나를 사용는 <xref:System.Net.NetworkInformation.Ping.Send%2A> 를 사용 하는 메서드는 `options` 집합과, 매개 변수는 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 속성을 `true`합니다. 때 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 은 `true` 한 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서 전송할 수 있는 최대 패킷 크기를 초과 하는 총 패킷 크기를 ICMP 에코 요청 작업이 실패 합니다. 이런 경우는 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 로 설정 된 <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>합니다.  
  
 패킷 또는 패킷 조각을 삭제 되기 전에 라우팅 노드에 의해 128 번 전달 될 수 있습니다. 이 설정을 변경 하려면 사용는 <xref:System.Net.NetworkInformation.Ping.Send%2A> 사용 오버 로드는 `options` 매개 변수를 설정은 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 속성을 원하는 값으로 합니다. 패킷에 지정 된 횟수 만큼 전달 된 후 대상에 도달 하지 않도록, 패킷이 삭제 되 고 ICMP 에코 요청에 실패 합니다. 이런 경우는 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 로 설정 된 <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>합니다.  
  
   
  
## Examples  
 에 대 한 호출을 보여 주는 예제는 <xref:System.Net.NetworkInformation.Ping.Send%2A> 메서드를 참조는 <xref:System.Net.NetworkInformation.Ping> 클래스 개요입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="timeout" />가 0보다 작은 경우</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />를 호출하고 있는 경우</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="address" />가 IPv6 주소이고, 로컬 컴퓨터가 Windows 2000 이전의 운영 체제를 실행하고 있는 경우</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">ICMP 메시지를 보내거나 받는 동안 예외가 throw된 경우. throw된 정확한 예외에 대해서는 내부 예외를 참조하십시오.</exception>
        <exception cref="T:System.ObjectDisposedException">이 개체가 삭제되었습니다.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">ICMP 에코 메시지를 보내려고 합니다.  
  
 연결 된 열거형의 경우: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(string hostNameOrAddress, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (hostNameOrAddress As String, timeout As Integer) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::String ^ hostNameOrAddress, int timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">ICMP Echo 메시지의 대상 컴퓨터를 식별하는 <see cref="T:System.String" />입니다. 이 매개 변수에 지정된 값은 호스트 이름 또는 IP 주소의 문자열 표현일 수 있습니다.</param>
        <param name="timeout">ICMP Echo 메시지를 보낸 후 ICMP Echo Reply 메시지를 기다리는 최대 시간(밀리초)을 지정하는 <see cref="T:System.Int32" /> 값입니다.</param>
        <summary>지정된 컴퓨터에 ICMP(Internet Control Message Protocol) Echo 메시지를 보내고 해당 컴퓨터로부터 이에 대응하는 ICMP Echo Reply 메시지를 받으려고 시도합니다. 이 메서드를 통해 작업의 시간 제한 값을 지정할 수 있습니다.</summary>
        <returns>ICMP Echo Reply 메시지를 받은 경우 이 메시지에 대한 정보를 제공하고 메시지를 받지 못한 경우에는 오류의 원인을 제공하는 <see cref="T:System.Net.NetworkInformation.PingReply" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ICMP 에코 응답 메시지에 지정 된 시간 안에 수신 되지 않으면는 `timeout` 매개 변수를 ICMP 에코 실패 및 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 속성이 <xref:System.Net.NetworkInformation.IPStatus.TimedOut>합니다.  
  
> [!NOTE]
>  매우 작은 숫자를 지정 하는 경우 `timeout`, Ping 응답을 받을 수 있는 경우에 `timeout` 밀리초가 경과 합니다.  
  
 이 오버 로드 패킷 조각화 및 패킷 전송에 대 한 기본 설정을 사용합니다. ICMP 에코 메시지를 포함 하는 패킷 수 조각화 전송 중에는 총 패킷 크기는 전송할 수 있는 최대 패킷 크기를 초과 하는 경우 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서. 조각화를 방지 하려면 중 하나를 사용는 <xref:System.Net.NetworkInformation.Ping.Send%2A> 를 사용 하는 메서드는 `options` 집합과, 매개 변수는 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 속성을 `true`합니다. 때 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 은 `true` 한 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서 전송할 수 있는 최대 패킷 크기를 초과 하는 총 패킷 크기를 ICMP 에코 요청 작업이 실패 합니다. 이런 경우는 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 로 설정 된 <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>합니다. 패킷 또는 (조각화 된 경우)에 패킷 조각이 삭제 되기 전에 라우팅 노드에 의해 128 번 전달 될 수 있습니다. 이 설정을 변경 하려면 사용는 <xref:System.Net.NetworkInformation.Ping.Send%2A> 사용 오버 로드는 `options` 매개 변수를 설정은 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 속성을 원하는 값으로 합니다. 패킷에 지정 된 횟수 만큼 전달 된 후 대상에 도달 하지 않도록, 패킷이 삭제 되 고 ICMP 에코 요청에 실패 합니다. 이런 경우는 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 로 설정 된 <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>합니다.  
  
   
  
## Examples  
 에 대 한 호출을 보여 주는 예제는 <xref:System.Net.NetworkInformation.Ping.Send%2A> 메서드를 참조는 <xref:System.Net.NetworkInformation.Ping> 클래스 개요입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostNameOrAddress" />이 <see langword="null" />이거나 빈 문자열("")인 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="timeout" />가 0보다 작은 경우</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />를 호출하고 있는 경우</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">ICMP 메시지를 보내거나 받는 동안 예외가 throw된 경우. throw된 정확한 예외에 대해서는 내부 예외를 참조하십시오.</exception>
        <exception cref="T:System.ObjectDisposedException">이 개체가 삭제되었습니다.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">ICMP 에코 메시지를 보내려고 합니다.  
  
 연결 된 열거형의 경우: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout, byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(class System.Net.IPAddress address, int32 timeout, unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (address As IPAddress, timeout As Integer, buffer As Byte()) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::Net::IPAddress ^ address, int timeout, cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">ICMP Echo 메시지의 대상 컴퓨터를 식별하는 <see cref="T:System.Net.IPAddress" />입니다.</param>
        <param name="timeout">ICMP Echo 메시지를 보낸 후 ICMP Echo Reply 메시지를 기다리는 최대 시간(밀리초)을 지정하는 <see cref="T:System.Int32" /> 값입니다.</param>
        <param name="buffer">ICMP Echo 메시지와 함께 보내지고 ICMP Echo Reply 메시지에 담겨 반환되는 데이터가 포함된 <see cref="T:System.Byte" /> 배열입니다. 배열은 65,500바이트를 초과할 수 없습니다.</param>
        <summary>지정된 <see cref="T:System.Net.IPAddress" />를 사용하는 컴퓨터에 ICMP(Internet Control Message Protocol) Echo 메시지와 지정된 데이터 버퍼를 보내고 해당 컴퓨터로부터 이에 대응하는 ICMP Echo Reply 메시지를 받으려고 시도합니다. 이 오버로드를 통해 작업의 시간 제한 값을 지정할 수 있습니다.</summary>
        <returns>ICMP Echo Reply 메시지를 받은 경우 이 메시지에 대한 정보를 제공하고 메시지를 받지 못한 경우에는 오류의 원인을 제공하는 <see cref="T:System.Net.NetworkInformation.PingReply" /> 개체입니다. 이 메서드는 패킷이 MTU(최대 전송 단위)를 초과할 경우 <see cref="F:System.Net.NetworkInformation.IPStatus.PacketTooBig" />을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ICMP 에코 응답 메시지에 지정 된 시간 안에 수신 되지 않으면는 `timeout` 매개 변수를 ICMP 에코 실패 및 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 속성이 <xref:System.Net.NetworkInformation.IPStatus.TimedOut>합니다.  
  
> [!NOTE]
>  매우 작은 숫자를 지정 하는 경우 `timeout`, Ping 응답을 받을 수 있는 경우에 `timeout` 밀리초가 경과 합니다.  
  
 이 오버 로드 패킷 조각화 및 패킷 전송에 대 한 기본 설정을 사용합니다. ICMP 에코 메시지를 포함 하는 패킷 수 조각화 전송 중에는 총 패킷 크기는 전송할 수 있는 최대 패킷 크기를 초과 하는 경우 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서. 조각화를 방지 하려면 중 하나를 사용는 <xref:System.Net.NetworkInformation.Ping.Send%2A> 를 사용 하는 메서드는 `options` 집합과, 매개 변수는 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 속성을 `true`합니다. 때 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 은 `true` 한 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서 전송할 수 있는 최대 패킷 크기를 초과 하는 총 패킷 크기를 ICMP 에코 요청 작업이 실패 합니다. 이런 경우는 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 로 설정 된 <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>합니다.  
  
 패킷 또는 패킷 조각을 삭제 되기 전에 라우팅 노드에 의해 128 번 전달 될 수 있습니다. 이 설정을 변경 하려면 사용는 <xref:System.Net.NetworkInformation.Ping.Send%2A> 사용 오버 로드는 `options` 매개 변수를 설정은 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 속성을 원하는 값으로 합니다. 패킷에 지정 된 횟수 만큼 전달 된 후 대상에 도달 하지 않도록, 패킷이 삭제 되 고 ICMP 에코 요청에 실패 합니다. 이런 경우는 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 로 설정 된 <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 메서드를 호출 하는 방법을 보여 줍니다.  
  
 [!code-cpp[NCLPingSampler#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#6)]
 [!code-csharp[NCLPingSampler#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="buffer" />의 크기가 65500바이트를 초과하는 경우</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" />가 <see langword="null" />인 경우  
  
 또는  
  
 <paramref name="buffer" />가 <see langword="null" />이거나 <paramref name="buffer" /> 크기가 65500바이트보다 큰 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="timeout" />가 0보다 작은 경우</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />를 호출하고 있는 경우</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="address" />가 IPv6 주소이고, 로컬 컴퓨터가 Windows 2000 이전의 운영 체제를 실행하고 있는 경우</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">ICMP 메시지를 보내거나 받는 동안 예외가 throw된 경우. throw된 정확한 예외에 대해서는 내부 예외를 참조하십시오.</exception>
        <exception cref="T:System.ObjectDisposedException">이 개체가 삭제되었습니다.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">ICMP 에코 메시지를 보내려고 합니다.  
  
 연결 된 열거형의 경우: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout, byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(string hostNameOrAddress, int32 timeout, unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (hostNameOrAddress As String, timeout As Integer, buffer As Byte()) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::String ^ hostNameOrAddress, int timeout, cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">ICMP Echo 메시지의 대상 컴퓨터를 식별하는 <see cref="T:System.String" />입니다. 이 매개 변수에 지정된 값은 호스트 이름 또는 IP 주소의 문자열 표현일 수 있습니다.</param>
        <param name="timeout">ICMP Echo 메시지를 보낸 후 ICMP Echo Reply 메시지를 기다리는 최대 시간(밀리초)을 지정하는 <see cref="T:System.Int32" /> 값입니다.</param>
        <param name="buffer">ICMP Echo 메시지와 함께 보내지고 ICMP Echo Reply 메시지에 담겨 반환되는 데이터가 포함된 <see cref="T:System.Byte" /> 배열입니다. 배열은 65,500바이트를 초과할 수 없습니다.</param>
        <summary>지정된 컴퓨터에 ICMP(Internet Control Message Protocol) Echo 메시지와 지정된 데이터 버퍼를 보내고 해당 컴퓨터로부터 이에 대응하는 ICMP Echo Reply 메시지를 받으려고 시도합니다. 이 오버로드를 통해 작업의 시간 제한 값을 지정할 수 있습니다.</summary>
        <returns>ICMP Echo Reply 메시지를 받은 경우 이 메시지에 대한 정보를 제공하고 메시지를 받지 못한 경우에는 오류의 원인을 제공하는 <see cref="T:System.Net.NetworkInformation.PingReply" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ICMP 에코 응답 메시지에 지정 된 시간 안에 수신 되지 않으면는 `timeout` 매개 변수를 ICMP 에코 실패 및 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 속성이 <xref:System.Net.NetworkInformation.IPStatus.TimedOut>합니다.  
  
> [!NOTE]
>  매우 작은 숫자를 지정 하는 경우 `timeout`, Ping 응답을 받을 수 있는 경우에 `timeout` 밀리초가 경과 합니다.  
  
 이 오버 로드 패킷 조각화 및 패킷 전송에 대 한 기본 설정을 사용합니다. ICMP 에코 메시지를 포함 하는 패킷 수 조각화 전송 중에는 총 패킷 크기는 전송할 수 있는 최대 패킷 크기를 초과 하는 경우 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서. 조각화를 방지 하려면 중 하나를 사용는 <xref:System.Net.NetworkInformation.Ping.Send%2A> 를 사용 하는 메서드는 `options` 집합과, 매개 변수는 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 속성을 `true`합니다. 때 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 은 `true` 한 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서 전송할 수 있는 최대 패킷 크기를 초과 하는 총 패킷 크기를 ICMP 에코 요청 작업이 실패 합니다. 이런 경우는 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 로 설정 된 <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>합니다.  
  
 패킷 또는 패킷 조각을 삭제 되기 전에 라우팅 노드에 의해 128 번 전달 될 수 있습니다. 이 설정을 변경 하려면 사용는 <xref:System.Net.NetworkInformation.Ping.Send%2A> 사용 오버 로드는 `options` 매개 변수를 설정은 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 속성을 원하는 값으로 합니다. 패킷에 지정 된 횟수 만큼 전달 된 후 대상에 도달 하지 않도록, 패킷이 삭제 되 고 ICMP 에코 요청에 실패 합니다. 이런 경우는 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 로 설정 된 <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>합니다.  
  
   
  
## Examples  
 호출 하는 방법을 보여 주는 예제는 <xref:System.Net.NetworkInformation.Ping.Send%2A> 오버 로드를 참조 하십시오.는 <xref:System.Net.NetworkInformation.Ping> 클래스 개요.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="buffer" />의 크기가 65500바이트를 초과하는 경우</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostNameOrAddress" />이 <see langword="null" />이거나 빈 문자열("")인 경우  
  
 또는  
  
 <paramref name="buffer" />가 <see langword="null" />이거나 <paramref name="buffer" /> 크기가 65500바이트보다 큰 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="timeout" />가 0보다 작은 경우</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />를 호출하고 있는 경우</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">ICMP 메시지를 보내거나 받는 동안 예외가 throw된 경우. throw된 정확한 예외에 대해서는 내부 예외를 참조하십시오.</exception>
        <exception cref="T:System.ObjectDisposedException">이 개체가 삭제되었습니다.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">ICMP 에코 메시지를 보내려고 합니다.  
  
 연결 된 열거형의 경우: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(class System.Net.IPAddress address, int32 timeout, unsigned int8[] buffer, class System.Net.NetworkInformation.PingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (address As IPAddress, timeout As Integer, buffer As Byte(), options As PingOptions) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::Net::IPAddress ^ address, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Net::NetworkInformation::PingOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" />
      </Parameters>
      <Docs>
        <param name="address">ICMP Echo 메시지의 대상 컴퓨터를 식별하는 <see cref="T:System.Net.IPAddress" />입니다.</param>
        <param name="timeout">ICMP Echo 메시지를 보낸 후 ICMP Echo Reply 메시지를 기다리는 최대 시간(밀리초)을 지정하는 <see cref="T:System.Int32" /> 값입니다.</param>
        <param name="buffer">ICMP Echo 메시지와 함께 보내지고 ICMP Echo Reply 메시지에 담겨 반환되는 데이터가 포함된 <see cref="T:System.Byte" /> 배열입니다. 배열은 65,500바이트를 초과할 수 없습니다.</param>
        <param name="options">ICMP Echo 메시지 패킷의 조각화 및 Time-to-Live 값을 제어하는 데 사용되는 <see cref="T:System.Net.NetworkInformation.PingOptions" /> 개체입니다.</param>
        <summary>지정된 <see cref="T:System.Net.IPAddress" />를 사용하는 컴퓨터에 ICMP(Internet Control Message Protocol) Echo 메시지와 지정된 데이터 버퍼를 보내고 해당 컴퓨터로부터 이에 대응하는 ICMP Echo Reply 메시지를 받으려고 시도합니다. 이 오버로드를 사용하여 작업의 제한 시간 값을 지정하고 ICMP Echo 메시지 패킷의 조각화 및 Time-to-Live 값을 제어할 수 있습니다.</summary>
        <returns>ICMP Echo Reply 메시지를 받은 경우 이 메시지에 대한 정보를 제공하고 메시지를 받지 못한 경우에는 오류의 원인을 제공하는 <see cref="T:System.Net.NetworkInformation.PingReply" /> 개체입니다. 이 메서드는 패킷이 MTU(최대 전송 단위)를 초과할 경우 <see cref="F:System.Net.NetworkInformation.IPStatus.PacketTooBig" />을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ICMP 에코 응답 메시지에 지정 된 시간 내에서 수신 되지 않으면는 `timeout` 매개 변수를 ICMP 에코 실패 및 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 속성이 <xref:System.Net.NetworkInformation.IPStatus.TimedOut>합니다.  
  
> [!NOTE]
>  매우 작은 숫자를 지정 하는 경우 `timeout`, Ping 응답을 받을 수 있는 경우에 `timeout` 밀리초가 경과 합니다.  
  
 경우는 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 속성은 `true` 한 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서 전송할 수 있는 최대 패킷 크기를 초과 하는 총 패킷 크기를 ICMP 에코 요청 작업이 실패 합니다. 이런 경우는 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 로 설정 된 <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>합니다.  
  
 사용 하 여는 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 속성을 대상에 도달 하기 전에 ICMP 에코 메시지를 전달할 수는 최대 횟수를 지정 합니다. 패킷에 지정 된 횟수 만큼 전달 된 후 대상에 도달 하지 않도록, 패킷이 삭제 되 고 ICMP 에코 요청에 실패 합니다. 이런 경우는 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 로 설정 된 <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 메서드를 호출 하는 방법을 보여 줍니다.  
  
 [!code-cpp[NCLPingSampler#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#5)]
 [!code-csharp[NCLPingSampler#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="buffer" />의 크기가 65500바이트를 초과하는 경우</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" />가 <see langword="null" />인 경우  
  
 또는  
  
 <paramref name="buffer" />가 <see langword="null" />이거나 <paramref name="buffer" /> 크기가 65500바이트보다 큰 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="timeout" />가 0보다 작은 경우</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />를 호출하고 있는 경우</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="address" />가 IPv6 주소이고, 로컬 컴퓨터가 Windows 2000 이전의 운영 체제를 실행하고 있는 경우</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">ICMP 메시지를 보내거나 받는 동안 예외가 throw된 경우. throw된 정확한 예외에 대해서는 내부 예외를 참조하십시오.</exception>
        <exception cref="T:System.ObjectDisposedException">이 개체가 삭제되었습니다.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">ICMP 에코 메시지를 보내려고 합니다.  
  
 연결 된 열거형의 경우: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(string hostNameOrAddress, int32 timeout, unsigned int8[] buffer, class System.Net.NetworkInformation.PingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (hostNameOrAddress As String, timeout As Integer, buffer As Byte(), options As PingOptions) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::String ^ hostNameOrAddress, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Net::NetworkInformation::PingOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">ICMP Echo 메시지의 대상 컴퓨터를 식별하는 <see cref="T:System.String" />입니다. 이 매개 변수에 지정된 값은 호스트 이름 또는 IP 주소의 문자열 표현일 수 있습니다.</param>
        <param name="timeout">ICMP Echo 메시지를 보낸 후 ICMP Echo Reply 메시지를 기다리는 최대 시간(밀리초)을 지정하는 <see cref="T:System.Int32" /> 값입니다.</param>
        <param name="buffer">ICMP Echo 메시지와 함께 보내지고 ICMP Echo Reply 메시지에 담겨 반환되는 데이터가 포함된 <see cref="T:System.Byte" /> 배열입니다. 배열은 65,500바이트를 초과할 수 없습니다.</param>
        <param name="options">ICMP Echo 메시지 패킷의 조각화 및 Time-to-Live 값을 제어하는 데 사용되는 <see cref="T:System.Net.NetworkInformation.PingOptions" /> 개체입니다.</param>
        <summary>지정된 컴퓨터에 ICMP(Internet Control Message Protocol) Echo 메시지와 지정된 데이터 버퍼를 보내고 해당 컴퓨터로부터 이에 대응하는 ICMP Echo Reply 메시지를 받으려고 시도합니다. 이 오버로드를 사용하여 작업의 제한 시간 값을 지정하고 ICMP 패킷의 조각화 및 Time-to-Live 값을 제어할 수 있습니다.</summary>
        <returns>ICMP Echo Reply 메시지를 받은 경우 이 메시지에 대한 정보를 제공하고 메시지를 받지 못한 경우에는 오류의 원인을 제공하는 <see cref="T:System.Net.NetworkInformation.PingReply" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ICMP 에코 응답 메시지에 지정 된 시간 내에서 수신 되지 않으면는 `timeout` 매개 변수를 ICMP 에코 실패 및 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 속성이 <xref:System.Net.NetworkInformation.IPStatus.TimedOut>합니다.  
  
> [!NOTE]
>  매우 작은 숫자를 지정 하는 경우 `timeout`, Ping 응답을 받을 수 있는 경우에 `timeout` 밀리초가 경과 합니다.  
  
 경우는 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 속성은 `true` 한 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서 전송할 수 있는 최대 패킷 크기를 초과 하는 총 패킷 크기를 ICMP 에코 요청 작업이 실패 합니다. 이런 경우는 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 로 설정 된 <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>합니다.  
  
 사용 하 여는 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 속성을 대상에 도달 하기 전에 ICMP 에코 메시지를 전달할 수는 최대 횟수를 지정 합니다. 패킷에 지정 된 횟수 만큼 전달 된 후 대상에 도달 하지 않도록, 패킷이 삭제 되 고 ICMP 에코 요청에 실패 합니다. 이런 경우는 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 로 설정 된 <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 메서드를 호출 하는 방법을 보여 줍니다.  
  
 [!code-cpp[NCLPingSampler#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#4)]
 [!code-csharp[NCLPingSampler#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="buffer" />의 크기가 65500바이트를 초과하는 경우</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostNameOrAddress" />가 <see langword="null" />이거나 길이가 0인 문자열인 경우  
  
 또는  
  
 <paramref name="buffer" />가 <see langword="null" />이거나 <paramref name="buffer" /> 크기가 65500바이트보다 큰 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="timeout" />가 0보다 작은 경우</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />를 호출하고 있는 경우</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="address" />가 IPv6 주소이고, 로컬 컴퓨터가 Windows 2000 이전의 운영 체제를 실행하고 있는 경우</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">ICMP 메시지를 보내거나 받는 동안 예외가 throw된 경우. throw된 정확한 예외에 대해서는 내부 예외를 참조하십시오.</exception>
        <exception cref="T:System.ObjectDisposedException">이 개체가 삭제되었습니다.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">ICMP 에코 메시지를 보내려고 합니다.  
  
 연결 된 열거형의 경우: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>컴퓨터에 ICMP(Internet Control Message Protocol) Echo 메시지를 보내고 해당 컴퓨터로부터 이에 대응하는 ICMP Echo Reply 메시지를 받는 작업을 비동기적으로 시도합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이러한 메서드는 응용 프로그램의 주 스레드를 차단 되지 않습니다. ICMP 에코 응답 메시지를 기다리는 동안 차단 하려는 경우 사용 하 여는 <xref:System.Net.NetworkInformation.Ping.Send%2A> 메서드.  
  
> [!NOTE]
>  IP 주소 중 하나에서 반환 되는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 메서드는 악의적인 원격 컴퓨터에서 발생할 수 있습니다. 이 사용 하 여 원격 컴퓨터에 연결 하지 않습니다. DNS를 사용 하 여 연결 하려는 컴퓨터의 IP 주소를 결정 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (System.Net.IPAddress address, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(class System.Net.IPAddress address, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (address As IPAddress, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::Net::IPAddress ^ address, System::Object ^ userToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">ICMP Echo 메시지의 대상 컴퓨터를 식별하는 <see cref="T:System.Net.IPAddress" />입니다.</param>
        <param name="userToken">비동기 작업이 완료될 때 호출되는 메서드로 전달되는 개체입니다.</param>
        <summary>지정된 <see cref="T:System.Net.IPAddress" />를 사용하는 컴퓨터에 ICMP(Internet Control Message Protocol) Echo 메시지를 보내고 해당 컴퓨터로부터 이에 대응하는 ICMP Echo Reply 메시지를 받는 작업을 비동기적으로 시도합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 메서드 echo 메시지를 비동기적으로 보내고, 응용 프로그램에 상태를 반환 하는 작업이 완료 되 면 (성공 여부)를 합니다. 호출 된 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 메서드 응용 프로그램을 차단 하지 않아야 하는 경우. 이 메서드를 호출할 때마다 스레드 풀에서 자동으로 할당 되는 별도 스레드에서 실행 됩니다. 비동기 작업이 완료 되 면 발생는 <xref:System.Net.NetworkInformation.Ping.PingCompleted> 이벤트입니다. 때 호출 되는 방법을 지정 하려면 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 추가한 다음 이벤트를 발생 한 <xref:System.Net.NetworkInformation.PingCompletedEventHandler> 대리자를 호출 하기 전에 이벤트 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>합니다. 대리자의 메서드는 <xref:System.Net.NetworkInformation.PingCompletedEventArgs> 포함 된 개체는 <xref:System.Net.NetworkInformation.PingReply> 의 결과 설명 하는 개체는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 호출 합니다. <xref:System.Net.NetworkInformation.PingCompletedEventArgs> 개체 상속는 <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> 속성입니다. 이 속성에 포함 된 `userToken` 에 전달 된 개체는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 호출 합니다.  
  
> [!NOTE]
>  을 회신에 대 한 대기 하는 동안 응용 프로그램을 차단 해야 하는 경우 중 하나를 사용는 <xref:System.Net.NetworkInformation.Ping.Send%2A> 메서드; 이러한 메서드는 동기적입니다.  
  
 이 메서드는 전송 32 <xref:System.Byte> ICMP 에코 메시지와 함께 데이터 버퍼입니다. 메서드는 ICMP 에코 응답 메시지에 대 한 5 초 동안 대기합니다. 메서드가 반환 하는 경우 수신 되지 않으면 회신 해당 시간에, 및 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 속성이 <xref:System.Net.NetworkInformation.IPStatus.TimedOut>합니다.  
  
 이 오버 로드 패킷 조각화 및 패킷 전송에 대 한 기본 설정을 사용합니다. ICMP 에코 메시지를 포함 하는 패킷 수 조각화 전송 중에는 총 패킷 크기는 전송할 수 있는 최대 패킷 크기를 초과 하는 경우 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서. 조각화를 방지 하려면 중 하나를 사용는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 를 사용 하는 메서드는 `options` 집합과, 매개 변수는 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 속성을 `true`합니다. 때 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 은 `true` 한 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서 전송할 수 있는 최대 패킷 크기를 초과 하는 총 패킷 크기를 ICMP 에코 요청 작업이 실패 합니다. 이런 경우는 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 로 설정 된 <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>합니다.  
  
 패킷 또는 패킷 조각을 삭제 되기 전에 라우팅 노드에 의해 128 번 전달 될 수 있습니다. 이 설정을 변경 하려면 사용는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 사용 오버 로드는 `options` 매개 변수를 설정은 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 속성을 원하는 값으로 합니다. 패킷에 지정 된 횟수 만큼 전달 된 후 대상에 도달 하지 않도록, 패킷이 삭제 되 고 ICMP 에코 요청에 실패 합니다. 이런 경우는 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 로 설정 된 <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>합니다.  
  
   
  
## Examples  
 호출 방법을 보여 주는 코드 예제는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 메서드를 참조는 <xref:System.Net.NetworkInformation.Ping> 클래스 개요입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> 메서드를 호출하고 있는 경우</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="address" />가 IPv6 주소이고, 로컬 컴퓨터가 Windows 2000 이전의 운영 체제를 실행하고 있는 경우</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">ICMP 메시지를 보내거나 받는 동안 예외가 throw된 경우. throw된 정확한 예외에 대해서는 내부 예외를 참조하십시오.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <paramref name="address" />이 유효한 IP 주소가 아닌 경우</exception>
        <exception cref="T:System.ObjectDisposedException">이 개체가 삭제되었습니다.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">ICMP 에코 메시지를 보내려고 합니다.  
  
 연결 된 열거형의 경우: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (string hostNameOrAddress, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string hostNameOrAddress, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (hostNameOrAddress As String, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ hostNameOrAddress, System::Object ^ userToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">ICMP Echo 메시지의 대상 컴퓨터를 식별하는 <see cref="T:System.String" />입니다. 이 매개 변수에 지정된 값은 호스트 이름 또는 IP 주소의 문자열 표현일 수 있습니다.</param>
        <param name="userToken">비동기 작업이 완료될 때 호출되는 메서드로 전달되는 개체입니다.</param>
        <summary>지정된 컴퓨터에 ICMP(Internet Control Message Protocol) Echo 메시지를 보내고 해당 컴퓨터로부터 이에 대응하는 ICMP Echo Reply 메시지를 받는 작업을 비동기적으로 시도합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 메서드 echo 메시지를 비동기적으로 보내고, 응용 프로그램에 상태를 반환 하는 작업이 완료 되 면 (성공 여부)를 합니다. 호출 된 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 메서드 응용 프로그램을 차단 하지 않아야 하는 경우. 이 메서드를 호출할 때마다 스레드 풀에서 자동으로 할당 되는 별도 스레드에서 실행 됩니다. 비동기 작업이 완료 되 면 발생는 <xref:System.Net.NetworkInformation.Ping.PingCompleted> 이벤트입니다. 때 호출 되는 방법을 지정 하려면 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 추가한 다음 이벤트를 발생 한 <xref:System.Net.NetworkInformation.PingCompletedEventHandler> 대리자를 호출 하기 전에 이벤트 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>합니다. 대리자의 메서드는 <xref:System.Net.NetworkInformation.PingCompletedEventArgs> 포함 된 개체는 <xref:System.Net.NetworkInformation.PingReply> 의 결과 설명 하는 개체는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 호출 합니다. <xref:System.Net.NetworkInformation.PingCompletedEventArgs> 개체 상속는 <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> 속성입니다. 이 속성에 포함 된 `userToken` 에 전달 된 개체는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 호출 합니다.  
  
> [!NOTE]
>  을 회신에 대 한 대기 하는 동안 응용 프로그램을 차단 해야 하는 경우 사용 하 여는 <xref:System.Net.NetworkInformation.Ping.Send%2A> 메서드; 이러한 메서드는 동기적입니다.  
  
 이 메서드는 전송 32 <xref:System.Byte> ICMP 에코 메시지와 함께 데이터 버퍼입니다. 메서드는 ICMP 에코 응답 메시지에 대 한 5 초 동안 대기합니다. 해당 시간에 응답을 수신 하지 않는 경우 메서드는 반환 및 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 속성이 <xref:System.Net.NetworkInformation.IPStatus.TimedOut>합니다.  
  
 이 오버 로드 패킷 조각화 및 패킷 전송에 대 한 기본 설정을 사용합니다. ICMP 에코 메시지를 포함 하는 패킷 수 조각화 전송 중에는 총 패킷 크기는 전송할 수 있는 최대 패킷 크기를 초과 하는 경우 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서. 조각화를 방지 하려면 중 하나를 사용는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 를 사용 하는 메서드는 `options` 집합과, 매개 변수는 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 속성을 `true`합니다. 때 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 은 `true` 한 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서 전송할 수 있는 최대 패킷 크기를 초과 하는 총 패킷 크기를 ICMP 에코 요청 작업이 실패 합니다. 이런 경우는 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 로 설정 된 <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>합니다.  
  
 패킷 또는 패킷 조각을 삭제 되기 전에 라우팅 노드에 의해 128 번 전달 될 수 있습니다. 이 설정을 변경 하려면 사용는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 사용 오버 로드는 `options` 매개 변수를 설정은 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 속성을 원하는 값으로 합니다. 패킷에 지정 된 횟수 만큼 전달 된 후 대상에 도달 하지 않도록, 패킷이 삭제 되 고 ICMP 에코 요청에 실패 합니다. 이런 경우는 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 로 설정 된 <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>합니다.  
  
   
  
## Examples  
 호출 방법을 보여 주는 코드 예제는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 메서드를 참조는 <xref:System.Net.NetworkInformation.Ping> 클래스 개요입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostNameOrAddress" />이 <see langword="null" />이거나 빈 문자열("")인 경우</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)" /> 메서드를 호출 중인 경우</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="address" />가 IPv6 주소이고, 로컬 컴퓨터가 Windows 2000 이전의 운영 체제를 실행하고 있는 경우</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">ICMP 메시지를 보내거나 받는 동안 예외가 throw된 경우. throw된 정확한 예외에 대해서는 내부 예외를 참조하십시오.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <paramref name="hostNameOrAddress" />의 유효한 IP 주소를 확인할 수 없는 경우</exception>
        <exception cref="T:System.ObjectDisposedException">이 개체가 삭제되었습니다.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">ICMP 에코 메시지를 보내려고 합니다.  
  
 연결 된 열거형의 경우: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (System.Net.IPAddress address, int timeout, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(class System.Net.IPAddress address, int32 timeout, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (address As IPAddress, timeout As Integer, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::Net::IPAddress ^ address, int timeout, System::Object ^ userToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">ICMP Echo 메시지의 대상 컴퓨터를 식별하는 <see cref="T:System.Net.IPAddress" />입니다.</param>
        <param name="timeout">ICMP Echo 메시지를 보낸 후 ICMP Echo Reply 메시지를 기다리는 최대 시간(밀리초)을 지정하는 <see cref="T:System.Int32" /> 값입니다.</param>
        <param name="userToken">비동기 작업이 완료될 때 호출되는 메서드로 전달되는 개체입니다.</param>
        <summary>지정된 <see cref="T:System.Net.IPAddress" />를 사용하는 컴퓨터에 ICMP(Internet Control Message Protocol) Echo 메시지를 보내고 해당 컴퓨터로부터 이에 대응하는 ICMP Echo Reply 메시지를 받는 작업을 비동기적으로 시도합니다. 이 오버로드를 통해 작업의 시간 제한 값을 지정할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 메서드 Echo 메시지를 비동기적으로 보내고, 응용 프로그램에 상태를 반환 하는 작업이 완료 되 면 (성공 여부)를 합니다. 호출 된 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 메서드 응용 프로그램을 차단 하지 않아야 하는 경우. 각 호출에 스레드 풀에서 자동으로 할당 되는 별도 스레드로 실행 합니다. 비동기 작업이 완료 되 면 발생는 <xref:System.Net.NetworkInformation.Ping.PingCompleted> 이벤트입니다. 응용 프로그램 사용을 <xref:System.Net.NetworkInformation.PingCompletedEventHandler> 때 호출 되는 방법을 지정 하는 대리자 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 이벤트를 발생 시킵니다. 추가 해야 합니다는 <xref:System.Net.NetworkInformation.PingCompletedEventHandler> 대리자를 호출 하기 전에 이벤트 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>합니다. 대리자의 메서드는 <xref:System.Net.NetworkInformation.PingCompletedEventArgs> 포함 된 개체는 <xref:System.Net.NetworkInformation.PingReply> 의 결과 설명 하는 개체는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 호출 합니다. <xref:System.Net.NetworkInformation.PingCompletedEventArgs> 개체 상속는 <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> 속성입니다. 이 속성에 포함 된 `userToken` 에 전달 된 개체는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 호출 합니다.  
  
 을 회신에 대 한 대기 하는 동안 응용 프로그램을 차단 해야 하는 경우 사용 하 여는 <xref:System.Net.NetworkInformation.Ping.Send%2A> 메서드; 이러한 메서드는 동기적입니다.  
  
 ICMP 에코 응답 메시지에 지정 된 시간 내에서 수신 되지 않으면는 `timeout` 매개 변수를 ICMP 에코 실패 및 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 속성이 <xref:System.Net.NetworkInformation.IPStatus.TimedOut>합니다.  
  
> [!NOTE]
>  매우 작은 숫자를 지정 하는 경우 `timeout`, Ping 응답을 받을 수 있는 경우에 `timeout` 밀리초가 경과 합니다.  
  
 이 오버 로드 패킷 조각화 및 패킷 전송에 대 한 기본 설정을 사용합니다. ICMP 에코 메시지를 포함 하는 패킷 수 조각화 전송 중에는 총 패킷 크기는 전송할 수 있는 최대 패킷 크기를 초과 하는 경우 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서. 조각화를 방지 하려면 중 하나를 사용는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 를 사용 하는 메서드는 `options` 집합과, 매개 변수는 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 속성을 `true`합니다. 때 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 은 `true` 한 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서 전송할 수 있는 최대 패킷 크기를 초과 하는 총 패킷 크기를 ICMP 에코 요청 작업이 실패 합니다. 이런 경우는 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 로 설정 된 <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>합니다. 패킷 또는 (조각화 된 경우)에 패킷 조각이 삭제 되기 전에 라우팅 노드에 의해 128 번 전달 될 수 있습니다. 이 설정을 변경 하려면 사용는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 사용 오버 로드는 `options` 매개 변수를 설정은 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 속성을 원하는 값으로 합니다. 패킷에 지정 된 횟수 만큼 전달 된 후 대상에 도달 하지 않도록, 패킷이 삭제 되 고 ICMP 에코 요청에 실패 합니다. 이런 경우는 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 로 설정 된 <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>합니다.  
  
   
  
## Examples  
 호출 방법을 보여 주는 코드 예제는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 오버 로드를 참조 하십시오.는 <xref:System.Net.NetworkInformation.Ping> 클래스 개요입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="timeout" />가 0보다 작은 경우</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)" /> 메서드를 호출 중인 경우</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="address" />가 IPv6 주소이고, 로컬 컴퓨터가 Windows 2000 이전의 운영 체제를 실행하고 있는 경우</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">ICMP 메시지를 보내거나 받는 동안 예외가 throw된 경우. throw된 정확한 예외에 대해서는 내부 예외를 참조하십시오.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <paramref name="address" />이 유효한 IP 주소가 아닌 경우</exception>
        <exception cref="T:System.ObjectDisposedException">이 개체가 삭제되었습니다.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">ICMP 에코 메시지를 보내려고 합니다.  
  
 연결 된 열거형의 경우: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (string hostNameOrAddress, int timeout, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string hostNameOrAddress, int32 timeout, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (hostNameOrAddress As String, timeout As Integer, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ hostNameOrAddress, int timeout, System::Object ^ userToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">ICMP Echo 메시지의 대상 컴퓨터를 식별하는 <see cref="T:System.String" />입니다. 이 매개 변수에 지정된 값은 호스트 이름 또는 IP 주소의 문자열 표현일 수 있습니다.</param>
        <param name="timeout">ICMP Echo 메시지를 보낸 후 ICMP Echo Reply 메시지를 기다리는 최대 시간(밀리초)을 지정하는 <see cref="T:System.Int32" /> 값입니다.</param>
        <param name="userToken">비동기 작업이 완료될 때 호출되는 메서드로 전달되는 개체입니다.</param>
        <summary>지정된 컴퓨터에 ICMP(Internet Control Message Protocol) Echo 메시지를 보내고 해당 컴퓨터로부터 이에 대응하는 ICMP Echo Reply 메시지를 받는 작업을 비동기적으로 시도합니다. 이 오버로드를 통해 작업의 시간 제한 값을 지정할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 메서드 Echo 메시지를 비동기적으로 보내고, 응용 프로그램에 상태를 반환 하는 작업이 완료 되 면 (성공 여부)를 합니다. 호출 된 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 메서드 응용 프로그램을 차단 하지 않아야 하는 경우. 각 호출에 스레드 풀에서 자동으로 할당 되는 별도 스레드로 실행 합니다. 비동기 작업이 완료 되 면 발생는 <xref:System.Net.NetworkInformation.Ping.PingCompleted> 이벤트입니다. 응용 프로그램 사용을 <xref:System.Net.NetworkInformation.PingCompletedEventHandler> 때 호출 되는 방법을 지정 하는 대리자 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 이벤트를 발생 시킵니다. 추가 해야 합니다는 <xref:System.Net.NetworkInformation.PingCompletedEventHandler> 대리자를 호출 하기 전에 이벤트 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>합니다. 대리자의 메서드는 <xref:System.Net.NetworkInformation.PingCompletedEventArgs> 포함 된 개체는 <xref:System.Net.NetworkInformation.PingReply> 의 결과 설명 하는 개체는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 호출 합니다. <xref:System.Net.NetworkInformation.PingCompletedEventArgs> 개체 상속는 <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> 속성입니다. 이 속성에 포함 된 `userToken` 에 전달 된 개체는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 호출 합니다.  
  
 을 회신에 대 한 대기 하는 동안 응용 프로그램을 차단 해야 하는 경우 사용 하 여는 <xref:System.Net.NetworkInformation.Ping.Send%2A> 메서드; 이러한 메서드는 동기적입니다.  
  
 ICMP 에코 응답 메시지에 지정 된 시간 내에서 수신 되지 않으면는 `timeout` 매개 변수를 ICMP 에코 실패 및 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 속성이 <xref:System.Net.NetworkInformation.IPStatus.TimedOut>합니다.  
  
> [!NOTE]
>  매우 작은 숫자를 지정 하는 경우 `timeout`, Ping 응답을 받을 수 있는 경우에 `timeout` 밀리초가 경과 합니다.  
  
 이 오버 로드 패킷 조각화 및 패킷 전송에 대 한 기본 설정을 사용합니다. ICMP 에코 메시지를 포함 하는 패킷 수 조각화 전송 중에는 총 패킷 크기는 전송할 수 있는 최대 패킷 크기를 초과 하는 경우 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서. 조각화를 방지 하려면 중 하나를 사용는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 를 사용 하는 메서드는 `options` 집합과, 매개 변수는 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 속성을 `true`합니다. 때 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 은 `true` 한 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서 전송할 수 있는 최대 패킷 크기를 초과 하는 총 패킷 크기를 ICMP 에코 요청 작업이 실패 합니다. 이런 경우는 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 로 설정 된 <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>합니다. 패킷 또는 (조각화 된 경우)에 패킷 조각이 삭제 되기 전에 라우팅 노드에 의해 128 번 전달 될 수 있습니다. 이 설정을 변경 하려면 사용는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 사용 오버 로드는 `options` 매개 변수를 설정은 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 속성을 원하는 값으로 합니다. 패킷에 지정 된 횟수 만큼 전달 된 후 대상에 도달 하지 않도록, 패킷이 삭제 되 고 ICMP 에코 요청에 실패 합니다. 이런 경우는 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 로 설정 된 <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>합니다.  
  
   
  
## Examples  
 호출 방법을 보여 주는 코드 예제는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 메서드를 참조는 <xref:System.Net.NetworkInformation.Ping> 클래스 개요입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostNameOrAddress" />이 <see langword="null" />이거나 빈 문자열("")인 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="timeout" />가 0보다 작은 경우</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />를 호출하고 있는 경우</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="hostNameOrAddress" />가 IPv6 주소이고, 로컬 컴퓨터가 Windows 2000 이전의 운영 체제를 실행하고 있는 경우</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">ICMP 메시지를 보내거나 받는 동안 예외가 throw된 경우. throw된 정확한 예외에 대해서는 내부 예외를 참조하십시오.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <paramref name="hostNameOrAddress" />의 유효한 IP 주소를 확인할 수 없는 경우</exception>
        <exception cref="T:System.ObjectDisposedException">이 개체가 삭제되었습니다.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">ICMP 에코 메시지를 보내려고 합니다.  
  
 연결 된 열거형의 경우: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (System.Net.IPAddress address, int timeout, byte[] buffer, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(class System.Net.IPAddress address, int32 timeout, unsigned int8[] buffer, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (address As IPAddress, timeout As Integer, buffer As Byte(), userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::Net::IPAddress ^ address, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Object ^ userToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">ICMP Echo 메시지의 대상 컴퓨터를 식별하는 <see cref="T:System.Net.IPAddress" />입니다.</param>
        <param name="timeout">ICMP Echo 메시지를 보낸 후 ICMP Echo Reply 메시지를 기다리는 최대 시간(밀리초)을 지정하는 <see cref="T:System.Int32" /> 값입니다.</param>
        <param name="buffer">ICMP Echo 메시지와 함께 보내지고 ICMP Echo Reply 메시지에 담겨 반환되는 데이터가 포함된 <see cref="T:System.Byte" /> 배열입니다. 배열은 65,500바이트를 초과할 수 없습니다.</param>
        <param name="userToken">비동기 작업이 완료될 때 호출되는 메서드로 전달되는 개체입니다.</param>
        <summary>지정된 <see cref="T:System.Net.IPAddress" />를 사용하는 컴퓨터에 ICMP(Internet Control Message Protocol) Echo 메시지와 지정된 데이터 버퍼를 보내고 해당 컴퓨터로부터 이에 대응하는 ICMP Echo Reply 메시지를 받는 작업을 비동기적으로 시도합니다. 이 오버로드를 통해 작업의 시간 제한 값을 지정할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 echo 메시지를 비동기적으로 전송 하 고 응용 프로그램에 상태를 반환 하는 작업이 완료 되 면 (성공 여부)를 합니다. 호출 된 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 메서드 응용 프로그램을 차단 하지 않아야 하는 경우. 각 호출에 스레드 풀에서 자동으로 할당 되는 별도 스레드로 실행 합니다. 비동기 작업이 완료 되 면 발생는 <xref:System.Net.NetworkInformation.Ping.PingCompleted> 이벤트입니다. 때 호출 되는 방법을 지정 하려면 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 추가한 다음 이벤트를 발생 한 <xref:System.Net.NetworkInformation.PingCompletedEventHandler> 대리자를 호출 하기 전에 이벤트 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>합니다. 대리자의 메서드는 <xref:System.Net.NetworkInformation.PingCompletedEventArgs> 포함 된 개체는 <xref:System.Net.NetworkInformation.PingReply> 의 결과 설명 하는 개체는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 호출 합니다. <xref:System.Net.NetworkInformation.PingCompletedEventArgs> 개체 상속는 <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> 속성입니다. 이 속성에 포함 된 `userToken` 에 전달 된 개체는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 호출 합니다.  
  
> [!NOTE]
>  사용 하 여 응용 프로그램 회신을 기다리는 동안 차단는 <xref:System.Net.NetworkInformation.Ping.Send%2A> 메서드; 이러한 메서드는 동기적입니다.  
  
 ICMP 에코 응답 메시지에 지정 된 시간 내에서 수신 되지 않으면는 `timeout` 매개 변수를 ICMP 에코 실패 및 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 속성이 <xref:System.Net.NetworkInformation.IPStatus.TimedOut>합니다.  
  
> [!NOTE]
>  매우 작은 숫자를 지정 하는 경우 `timeout`, Ping 응답을 받을 수 있는 경우에 `timeout` 밀리초가 경과 합니다.  
  
 이 오버 로드 패킷 조각화 및 패킷 전송에 대 한 기본 설정을 사용합니다. ICMP 에코 메시지를 포함 하는 패킷 수 조각화 전송 중에는 총 패킷 크기는 전송할 수 있는 최대 패킷 크기를 초과 하는 경우 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서. 조각화를 방지 하려면 중 하나를 사용는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 를 사용 하는 메서드는 `options` 집합과, 매개 변수는 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 속성을 `true`합니다. 때 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 은 `true` 한 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서 전송할 수 있는 최대 패킷 크기를 초과 하는 총 패킷 크기를 ICMP 에코 요청 작업이 실패 합니다. 이런 경우는 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 로 설정 된 <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>합니다. 패킷 또는 (조각화 된 경우)에 패킷 조각이 삭제 되기 전에 라우팅 노드에 의해 128 번 전달 될 수 있습니다. 이 설정을 변경 하려면 사용는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 사용 오버 로드는 `options` 매개 변수를 설정은 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 속성을 원하는 값으로 합니다. 패킷에 지정 된 횟수 만큼 전달 된 후 대상에 도달 하지 않도록, 패킷이 삭제 되 고 ICMP 에코 요청에 실패 합니다. 이런 경우는 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 로 설정 된 <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>합니다.  
  
   
  
## Examples  
 호출 방법을 보여 주는 코드 예제는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 오버 로드를 참조 하십시오.는 <xref:System.Net.NetworkInformation.Ping> 클래스 개요입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" />가 <see langword="null" />인 경우  
  
 또는  
  
 <paramref name="buffer" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="timeout" />가 0보다 작은 경우</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />를 호출하고 있는 경우</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="address" />가 IPv6 주소이고, 로컬 컴퓨터가 Windows 2000 이전의 운영 체제를 실행하고 있는 경우</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">ICMP 메시지를 보내거나 받는 동안 예외가 throw된 경우. throw된 정확한 예외에 대해서는 내부 예외를 참조하십시오.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <paramref name="address" />이 유효한 IP 주소가 아닌 경우</exception>
        <exception cref="T:System.ObjectDisposedException">이 개체가 삭제되었습니다.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="buffer" />의 크기가 65500바이트를 초과하는 경우</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">ICMP 에코 메시지를 보내려고 합니다.  
  
 연결 된 열거형의 경우: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (string hostNameOrAddress, int timeout, byte[] buffer, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string hostNameOrAddress, int32 timeout, unsigned int8[] buffer, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (hostNameOrAddress As String, timeout As Integer, buffer As Byte(), userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ hostNameOrAddress, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Object ^ userToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">ICMP Echo 메시지의 대상 컴퓨터를 식별하는 <see cref="T:System.String" />입니다. 이 매개 변수에 지정된 값은 호스트 이름 또는 IP 주소의 문자열 표현일 수 있습니다.</param>
        <param name="timeout">ICMP Echo 메시지를 보낸 후 ICMP Echo Reply 메시지를 기다리는 최대 시간(밀리초)을 지정하는 <see cref="T:System.Int32" /> 값입니다.</param>
        <param name="buffer">ICMP Echo 메시지와 함께 보내지고 ICMP Echo Reply 메시지에 담겨 반환되는 데이터가 포함된 <see cref="T:System.Byte" /> 배열입니다. 배열은 65,500바이트를 초과할 수 없습니다.</param>
        <param name="userToken">비동기 작업이 완료될 때 호출되는 메서드로 전달되는 개체입니다.</param>
        <summary>지정된 컴퓨터에 ICMP(Internet Control Message Protocol) Echo 메시지와 지정된 데이터 버퍼를 보내고 해당 컴퓨터로부터 이에 대응하는 ICMP Echo Reply 메시지를 받는 작업을 비동기적으로 시도합니다. 이 오버로드를 통해 작업의 시간 제한 값을 지정할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 메서드 Echo 메시지를 비동기적으로 보내고, 응용 프로그램에 상태를 반환 하는 작업이 완료 되 면 (성공 여부)를 합니다. 호출 된 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 메서드 응용 프로그램을 차단 하지 않아야 하는 경우. 각 호출에 스레드 풀에서 자동으로 할당 되는 별도 스레드로 실행 합니다. 비동기 작업이 완료 되 면 발생는 <xref:System.Net.NetworkInformation.Ping.PingCompleted> 이벤트입니다. 응용 프로그램 사용을 <xref:System.Net.NetworkInformation.PingCompletedEventHandler> 때 호출 되는 방법을 지정 하는 대리자 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 이벤트를 발생 시킵니다. 추가 해야 합니다는 <xref:System.Net.NetworkInformation.PingCompletedEventHandler> 대리자를 호출 하기 전에 이벤트 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>합니다. 대리자의 메서드는 <xref:System.Net.NetworkInformation.PingCompletedEventArgs> 포함 된 개체는 <xref:System.Net.NetworkInformation.PingReply> 의 결과 설명 하는 개체는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 호출 합니다. <xref:System.Net.NetworkInformation.PingCompletedEventArgs> 개체 상속는 <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> 속성입니다. 이 속성에 포함 된 `userToken` 에 전달 된 개체는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 호출 합니다.  
  
 을 회신에 대 한 대기 하는 동안 응용 프로그램을 차단 해야 하는 경우 사용 하 여는 <xref:System.Net.NetworkInformation.Ping.Send%2A> 메서드; 이러한 메서드는 동기적입니다.  
  
 ICMP 에코 응답 메시지에 지정 된 시간 내에서 수신 되지 않으면는 `timeout` 매개 변수를 ICMP 에코 실패 및 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 속성이 <xref:System.Net.NetworkInformation.IPStatus.TimedOut>합니다.  
  
> [!NOTE]
>  매우 작은 숫자를 지정 하는 경우 `timeout`, Ping 응답을 받을 수 있는 경우에 `timeout` 밀리초가 경과 합니다.  
  
 이 오버 로드 패킷 조각화 및 패킷 전송에 대 한 기본 설정을 사용합니다. ICMP 에코 메시지를 포함 하는 패킷 수 조각화 전송 중에는 총 패킷 크기는 전송할 수 있는 최대 패킷 크기를 초과 하는 경우 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서. 조각화를 방지 하려면 중 하나를 사용는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 를 사용 하는 메서드는 `options` 집합과, 매개 변수는 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 속성을 `true`합니다. 때 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 은 `true` 한 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서 전송할 수 있는 최대 패킷 크기를 초과 하는 총 패킷 크기를 ICMP 에코 요청 작업이 실패 합니다. 이런 경우는 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 로 설정 된 <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>합니다. 패킷 또는 (조각화 된 경우)에 패킷 조각이 삭제 되기 전에 라우팅 노드에 의해 128 번 전달 될 수 있습니다. 이 설정을 변경 하려면 사용는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 사용 오버 로드는 `options` 매개 변수를 설정은 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 속성을 원하는 값으로 합니다. 패킷에 지정 된 횟수 만큼 전달 된 후 대상에 도달 하지 않도록, 패킷이 삭제 되 고 ICMP 에코 요청에 실패 합니다. 이런 경우는 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 로 설정 된 <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 호출 하는 방법을 보여 줍니다.는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 오버 로드를 참조 하십시오.는 <xref:System.Net.NetworkInformation.Ping> 클래스 개요입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostNameOrAddress" />이 <see langword="null" />이거나 빈 문자열("")인 경우  
  
 또는  
  
 <paramref name="buffer" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="timeout" />가 0보다 작은 경우</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />를 호출하고 있는 경우</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="hostNameOrAddress" />가 IPv6 주소이고, 로컬 컴퓨터가 Windows 2000 이전의 운영 체제를 실행하고 있는 경우</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">ICMP 메시지를 보내거나 받는 동안 예외가 throw된 경우. throw된 정확한 예외에 대해서는 내부 예외를 참조하십시오.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <paramref name="hostNameOrAddress" />의 유효한 IP 주소를 확인할 수 없는 경우</exception>
        <exception cref="T:System.ObjectDisposedException">이 개체가 삭제되었습니다.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="buffer" />의 크기가 65500바이트를 초과하는 경우</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">ICMP 에코 메시지를 보내려고 합니다.  
  
 연결 된 열거형의 경우: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(class System.Net.IPAddress address, int32 timeout, unsigned int8[] buffer, class System.Net.NetworkInformation.PingOptions options, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (address As IPAddress, timeout As Integer, buffer As Byte(), options As PingOptions, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::Net::IPAddress ^ address, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Net::NetworkInformation::PingOptions ^ options, System::Object ^ userToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">ICMP Echo 메시지의 대상 컴퓨터를 식별하는 <see cref="T:System.Net.IPAddress" />입니다.</param>
        <param name="timeout">ICMP Echo 메시지를 보낸 후 ICMP Echo Reply 메시지를 기다리는 최대 시간(밀리초)을 지정하는 <see cref="T:System.Int32" /> 값입니다.</param>
        <param name="buffer">ICMP Echo 메시지와 함께 보내지고 ICMP Echo Reply 메시지에 담겨 반환되는 데이터가 포함된 <see cref="T:System.Byte" /> 배열입니다. 배열은 65,500바이트를 초과할 수 없습니다.</param>
        <param name="options">ICMP Echo 메시지 패킷의 조각화 및 Time-to-Live 값을 제어하는 데 사용되는 <see cref="T:System.Net.NetworkInformation.PingOptions" /> 개체입니다.</param>
        <param name="userToken">비동기 작업이 완료될 때 호출되는 메서드로 전달되는 개체입니다.</param>
        <summary>지정된 <see cref="T:System.Net.IPAddress" />를 사용하는 컴퓨터에 ICMP(Internet Control Message Protocol) Echo 메시지와 지정된 데이터 버퍼를 보내고 해당 컴퓨터로부터 이에 대응하는 ICMP Echo Reply 메시지를 받는 작업을 비동기적으로 시도합니다. 이 오버로드를 사용하여 작업의 제한 시간 값을 지정하고 ICMP Echo 메시지 패킷의 조각화 및 Time-to-Live 값을 제어할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 메서드 Echo 메시지를 비동기적으로 보내고, 응용 프로그램에 상태를 반환 하는 작업이 완료 되 면 (성공 여부)를 합니다. 호출 된 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 메서드 응용 프로그램을 차단 해야 하는 경우. 각 호출에 스레드 풀에서 자동으로 할당 되는 별도 스레드로 실행 합니다. 비동기 작업이 완료 되 면 발생는 <xref:System.Net.NetworkInformation.Ping.PingCompleted> 이벤트입니다. 응용 프로그램 사용을 <xref:System.Net.NetworkInformation.PingCompletedEventHandler> 때 호출 되는 방법을 지정 하는 대리자 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 이벤트를 발생 시킵니다. 추가 해야 합니다는 <xref:System.Net.NetworkInformation.PingCompletedEventHandler> 대리자를 호출 하기 전에 이벤트 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>합니다. 대리자의 메서드는 <xref:System.Net.NetworkInformation.PingCompletedEventArgs> 포함 된 개체는 <xref:System.Net.NetworkInformation.PingReply> 의 결과 설명 하는 개체는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 호출 합니다. <xref:System.Net.NetworkInformation.PingCompletedEventArgs> 개체 상속는 <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> 속성입니다. 이 속성에 포함 된 `userToken` 에 전달 된 개체는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 호출 합니다.  
  
 사용 하 여 응용 프로그램 회신을 기다리는 동안 차단는 <xref:System.Net.NetworkInformation.Ping.Send%2A> 메서드; 이러한 메서드는 동기적입니다.  
  
 ICMP 에코 응답 메시지에 지정 된 시간 내에서 수신 되지 않으면는 `timeout` 매개 변수를 ICMP 에코 실패 및 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 속성이 <xref:System.Net.NetworkInformation.IPStatus.TimedOut>합니다.  
  
> [!NOTE]
>  매우 작은 숫자를 지정 하는 경우 `timeout`, Ping 응답을 받을 수 있는 경우에 `timeout` 밀리초가 경과 합니다.  
  
 경우는 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 속성은 `true` 한 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서 전송할 수 있는 최대 패킷 크기를 초과 하는 총 패킷 크기를 ICMP 에코 요청 작업이 실패 합니다. 이런 경우는 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 로 설정 된 <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>합니다.  
  
 사용 하 여는 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 속성을 대상에 도달 하기 전에 ICMP 에코 메시지를 전달할 수는 최대 횟수를 지정 합니다. 패킷에 지정 된 횟수 만큼 전달 된 후 대상에 도달 하지 않도록, 패킷이 삭제 되 고 ICMP 에코 요청에 실패 합니다. 이런 경우는 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 로 설정 된 <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 메서드를 호출 하는 방법을 보여 줍니다. 콜백 메서드를 구현 하는 것을 참조 하십시오.는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 메서드 오버 로드 예제 섹션.  
  
 다음 코드 예제에서는 다음 네임 스페이스가 필요합니다.  
  
 [!code-cpp[NCLPingSampler#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#0)]
 [!code-csharp[NCLPingSampler#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#0)]  
  
 다음 코드 예제에서는 ICMP 에코 메시지를 비동기적으로 보냅니다.  
  
 [!code-cpp[NCLPingSampler#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#7)]
 [!code-csharp[NCLPingSampler#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" />가 <see langword="null" />인 경우  
  
 또는  
  
 <paramref name="buffer" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="timeout" />가 0보다 작은 경우</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />를 호출하고 있는 경우</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="address" />가 IPv6 주소이고, 로컬 컴퓨터가 Windows 2000 이전의 운영 체제를 실행하고 있는 경우</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">ICMP 메시지를 보내거나 받는 동안 예외가 throw된 경우. throw된 정확한 예외에 대해서는 내부 예외를 참조하십시오.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <paramref name="address" />이 유효한 IP 주소가 아닌 경우</exception>
        <exception cref="T:System.ObjectDisposedException">이 개체가 삭제되었습니다.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="buffer" />의 크기가 65500바이트를 초과하는 경우</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">ICMP 에코 메시지를 보내려고 합니다.  
  
 연결 된 열거형의 경우: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string hostNameOrAddress, int32 timeout, unsigned int8[] buffer, class System.Net.NetworkInformation.PingOptions options, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (hostNameOrAddress As String, timeout As Integer, buffer As Byte(), options As PingOptions, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ hostNameOrAddress, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Net::NetworkInformation::PingOptions ^ options, System::Object ^ userToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">ICMP Echo 메시지의 대상 컴퓨터를 식별하는 <see cref="T:System.String" />입니다. 이 매개 변수에 지정된 값은 호스트 이름 또는 IP 주소의 문자열 표현일 수 있습니다.</param>
        <param name="timeout">ICMP Echo 메시지와 함께 보내지고 ICMP Echo Reply 메시지에 담겨 반환되는 데이터가 포함된 <see cref="T:System.Byte" /> 배열입니다. 배열은 65,500바이트를 초과할 수 없습니다.</param>
        <param name="buffer">ICMP Echo 메시지를 보낸 후 ICMP Echo Reply 메시지를 기다리는 최대 시간(밀리초)을 지정하는 <see cref="T:System.Int32" /> 값입니다.</param>
        <param name="options">ICMP Echo 메시지 패킷의 조각화 및 Time-to-Live 값을 제어하는 데 사용되는 <see cref="T:System.Net.NetworkInformation.PingOptions" /> 개체입니다.</param>
        <param name="userToken">비동기 작업이 완료될 때 호출되는 메서드로 전달되는 개체입니다.</param>
        <summary>지정된 컴퓨터에 ICMP(Internet Control Message Protocol) Echo 메시지와 지정된 데이터 버퍼를 보내고 해당 컴퓨터로부터 이에 대응하는 ICMP Echo Reply 메시지를 받는 작업을 비동기적으로 시도합니다. 이 오버로드를 사용하여 작업의 제한 시간 값을 지정하고 ICMP 패킷의 조각화 및 Time-to-Live 값을 제어할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 메서드 Echo 메시지를 비동기적으로 보내고, 응용 프로그램에 상태를 반환 하는 작업이 완료 되 면 (성공 여부)를 합니다. 호출 된 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 메서드 응용 프로그램을 차단 해야 하는 경우. 각 호출에 스레드 풀에서 자동으로 할당 되는 별도 스레드로 실행 합니다. 비동기 작업이 완료 되 면 발생는 <xref:System.Net.NetworkInformation.Ping.PingCompleted> 이벤트입니다. 응용 프로그램 사용을 <xref:System.Net.NetworkInformation.PingCompletedEventHandler> 때 호출 되는 방법을 지정 하는 대리자 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 이벤트를 발생 시킵니다. 추가 해야 합니다는 <xref:System.Net.NetworkInformation.PingCompletedEventHandler> 대리자를 호출 하기 전에 이벤트 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>합니다. 대리자의 메서드는 <xref:System.Net.NetworkInformation.PingCompletedEventArgs> 포함 된 개체는 <xref:System.Net.NetworkInformation.PingReply> 의 결과 설명 하는 개체는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 호출 합니다. <xref:System.Net.NetworkInformation.PingCompletedEventArgs> 개체 상속는 <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> 속성입니다. 이 속성에 포함 된 `userToken` 에 전달 된 개체는 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 호출 합니다.  
  
 을 회신에 대 한 대기 하는 동안 응용 프로그램을 차단 해야 하는 경우 사용 하 여는 <xref:System.Net.NetworkInformation.Ping.Send%2A> 메서드; 이러한 메서드는 동기적입니다.  
  
 ICMP 에코 응답 메시지에 지정 된 시간 내에서 수신 되지 않으면는 `timeout` 매개 변수를 ICMP 에코 실패 및 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 속성이 <xref:System.Net.NetworkInformation.IPStatus.TimedOut>합니다.  
  
> [!NOTE]
>  매우 작은 숫자를 지정 하는 경우 `timeout`, Ping 응답을 받을 수 있는 경우에 `timeout` 밀리초가 경과 합니다.  
  
 경우는 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> 속성은 `true` 한 로컬 및 원격 컴퓨터 간의 라우팅 노드 중 하나에서 전송할 수 있는 최대 패킷 크기를 초과 하는 총 패킷 크기를 ICMP 에코 요청 작업이 실패 합니다. 이런 경우는 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 로 설정 된 <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>합니다.  
  
 사용 하 여는 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> 속성을 대상에 도달 하기 전에 ICMP 에코 메시지를 전달할 수는 최대 횟수를 지정 합니다. 패킷에 지정 된 횟수 만큼 전달 된 후 대상에 도달 하지 않도록, 패킷이 삭제 되 고 ICMP 에코 요청에 실패 합니다. 이런 경우는 <xref:System.Net.NetworkInformation.PingReply.Status%2A> 로 설정 된 <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 메서드를 호출 하는 방법을 보여 줍니다.  
  
 [!code-cpp[NCLPingAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#1)]
 [!code-csharp[NCLPingAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostNameOrAddress" />이 <see langword="null" />이거나 빈 문자열("")인 경우  
  
 또는  
  
 <paramref name="buffer" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="timeout" />가 0보다 작은 경우</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />를 호출하고 있는 경우</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="address" />가 IPv6 주소이고, 로컬 컴퓨터가 Windows 2000 이전의 운영 체제를 실행하고 있는 경우</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">ICMP 메시지를 보내거나 받는 동안 예외가 throw된 경우. throw된 정확한 예외에 대해서는 내부 예외를 참조하십시오.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <paramref name="hostNameOrAddress" />의 유효한 IP 주소를 확인할 수 없는 경우</exception>
        <exception cref="T:System.ObjectDisposedException">이 개체가 삭제되었습니다.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="buffer" />의 크기가 65500바이트를 초과하는 경우</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">ICMP 에코 메시지를 보내려고 합니다.  
  
 연결 된 열거형의 경우: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsyncCancel">
      <MemberSignature Language="C#" Value="public void SendAsyncCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsyncCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsyncCancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsyncCancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsyncCancel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ICMP(Internet Control Message Protocol) Echo 메시지를 보내고 이에 대응하는 ICMP Echo Reply 메시지를 받기 위한, 보류 중인 모든 비동기 요청을 취소합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출을 종료 하려면이 메서드를 호출 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> 완료 되지 않았습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendPingAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>컴퓨터에 ICMP(Internet Control Message Protocol) Echo 메시지를 보내고 해당 컴퓨터로부터 이에 대응하는 ICMP Echo Reply 메시지를 받는 작업을 비동기 작업으로 보냅니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (address As IPAddress) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::Net::IPAddress ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="address">ICMP Echo 메시지의 대상 컴퓨터를 식별하는 IP 주소입니다.</param>
        <summary>지정된 <see cref="T:System.Net.IPAddress" />를 사용하는 컴퓨터에 ICMP(Internet Control Message Protocol) Echo 메시지와 지정된 데이터 버퍼를 보내고 해당 컴퓨터로부터 이에 대응하는 ICMP Echo Reply 메시지를 받는 작업을 비동기 작업으로 보냅니다.</summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task`1" />를 반환합니다.  
  
 비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 작업을 차단 하지 않습니다. 반환 된 <xref:System.Threading.Tasks.Task%601>> 개체 ICMP 패킷을 전송 되어 고 응답이 수신 된 후 완료 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="Overload:System.Net.NetworkInformation.Ping.SendPingAsync" />를 호출하고 있는 경우</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">ICMP 메시지를 보내거나 받는 동안 예외가 throw된 경우. throw된 정확한 예외에 대해서는 내부 예외를 참조하십시오.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <paramref name="address" />이 유효한 IP 주소가 아닌 경우</exception>
        <exception cref="T:System.ObjectDisposedException">이 개체가 삭제되었습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (hostNameOrAddress As String) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::String ^ hostNameOrAddress);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">ICMP echo 메시지의 대상 컴퓨터입니다. 이 매개 변수에 지정된 값은 호스트 이름 또는 IP 주소의 문자열 표현일 수 있습니다.</param>
        <summary>지정된 컴퓨터에 ICMP(Internet Control Message Protocol) Echo 메시지와 지정된 데이터 버퍼를 보내고 해당 컴퓨터로부터 이에 대응하는 ICMP Echo Reply 메시지를 받는 작업을 비동기 작업으로 보냅니다.</summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task`1" />를 반환합니다.  
  
 비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 작업을 차단 하지 않습니다. 반환 된 <xref:System.Threading.Tasks.Task%601>> 개체 ICMP 패킷을 전송 되어 고 응답이 수신 된 후 완료 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (System.Net.IPAddress address, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(class System.Net.IPAddress address, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (address As IPAddress, timeout As Integer) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::Net::IPAddress ^ address, int timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">ICMP Echo 메시지의 대상 컴퓨터를 식별하는 IP 주소입니다.</param>
        <param name="timeout">ICMP Echo 메시지를 보낸 후 ICMP Echo Reply 메시지를 기다리는 최대 시간(밀리초)입니다.</param>
        <summary>지정된 <see cref="T:System.Net.IPAddress" />를 사용하는 컴퓨터에 ICMP(Internet Control Message Protocol) Echo 메시지와 지정된 데이터 버퍼를 보내고 해당 컴퓨터로부터 이에 대응하는 ICMP Echo Reply 메시지를 받는 작업을 비동기 작업으로 보냅니다. 이 오버로드를 통해 작업의 시간 제한 값을 지정할 수 있습니다.</summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task`1" />를 반환합니다.  
  
 비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 작업을 차단 하지 않습니다. 반환 된 <xref:System.Threading.Tasks.Task%601>> 개체 ICMP 패킷을 전송 되어 고 응답이 수신 된 후 완료 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (string hostNameOrAddress, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(string hostNameOrAddress, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (hostNameOrAddress As String, timeout As Integer) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::String ^ hostNameOrAddress, int timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">ICMP echo 메시지의 대상 컴퓨터입니다. 이 매개 변수에 지정된 값은 호스트 이름 또는 IP 주소의 문자열 표현일 수 있습니다.</param>
        <param name="timeout">ICMP Echo 메시지를 보낸 후 ICMP Echo Reply 메시지를 기다리는 최대 시간(밀리초)입니다.</param>
        <summary>지정된 컴퓨터에 ICMP(Internet Control Message Protocol) Echo 메시지와 지정된 데이터 버퍼를 보내고 해당 컴퓨터로부터 이에 대응하는 ICMP Echo Reply 메시지를 받는 작업을 비동기 작업으로 보냅니다. 이 오버로드를 통해 작업의 시간 제한 값을 지정할 수 있습니다.</summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task`1" />를 반환합니다.  
  
 비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 작업을 차단 하지 않습니다. 반환 된 <xref:System.Threading.Tasks.Task%601>> 개체 ICMP 패킷을 전송 되어 고 응답이 수신 된 후 완료 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (System.Net.IPAddress address, int timeout, byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(class System.Net.IPAddress address, int32 timeout, unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (address As IPAddress, timeout As Integer, buffer As Byte()) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::Net::IPAddress ^ address, int timeout, cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">ICMP Echo 메시지의 대상 컴퓨터를 식별하는 IP 주소입니다.</param>
        <param name="timeout">ICMP Echo 메시지를 보낸 후 ICMP Echo Reply 메시지를 기다리는 최대 시간(밀리초)입니다.</param>
        <param name="buffer">ICMP Echo 메시지와 함께 보내지고 ICMP Echo Reply 메시지에 담겨 반환되는 데이터가 포함된 <see cref="T:System.Byte" /> 배열입니다. 배열은 65,500바이트를 초과할 수 없습니다.</param>
        <summary>지정된 <see cref="T:System.Net.IPAddress" />를 사용하는 컴퓨터에 ICMP(Internet Control Message Protocol) Echo 메시지와 지정된 데이터 버퍼를 보내고 해당 컴퓨터로부터 이에 대응하는 ICMP Echo Reply 메시지를 받는 작업을 비동기 작업으로 보냅니다. 이 오버로드를 사용하면 작업의 시간 초과 값과 송수신하는 데 사용할 수 있는 버퍼를 지정할 수 있습니다.</summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task`1" />를 반환합니다.  
  
 비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 작업을 차단 하지 않습니다. 반환 된 <xref:System.Threading.Tasks.Task%601>> 개체 ICMP 패킷을 전송 되어 고 응답이 수신 된 후 완료 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" />가 <see langword="null" />인 경우  
  
 또는  
  
 <paramref name="buffer" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="timeout" />가 0보다 작은 경우</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="Overload:System.Net.NetworkInformation.Ping.SendPingAsync" />를 호출하고 있는 경우</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">ICMP 메시지를 보내거나 받는 동안 예외가 throw된 경우. throw된 정확한 예외에 대해서는 내부 예외를 참조하십시오.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <paramref name="address" />이 유효한 IP 주소가 아닌 경우</exception>
        <exception cref="T:System.ObjectDisposedException">이 개체가 삭제되었습니다.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="buffer" />의 크기가 65,500바이트를 초과하는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (string hostNameOrAddress, int timeout, byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(string hostNameOrAddress, int32 timeout, unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (hostNameOrAddress As String, timeout As Integer, buffer As Byte()) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::String ^ hostNameOrAddress, int timeout, cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">ICMP echo 메시지의 대상 컴퓨터입니다. 이 매개 변수에 지정된 값은 호스트 이름 또는 IP 주소의 문자열 표현일 수 있습니다.</param>
        <param name="timeout">ICMP Echo 메시지를 보낸 후 ICMP Echo Reply 메시지를 기다리는 최대 시간(밀리초)입니다.</param>
        <param name="buffer">ICMP Echo 메시지와 함께 보내지고 ICMP Echo Reply 메시지에 담겨 반환되는 데이터가 포함된 <see cref="T:System.Byte" /> 배열입니다. 배열은 65,500바이트를 초과할 수 없습니다.</param>
        <summary>지정된 컴퓨터에 ICMP(Internet Control Message Protocol) Echo 메시지와 지정된 데이터 버퍼를 보내고 해당 컴퓨터로부터 이에 대응하는 ICMP Echo Reply 메시지를 받는 작업을 비동기 작업으로 보냅니다. 이 오버로드를 사용하면 작업의 시간 초과 값과 송수신하는 데 사용할 수 있는 버퍼를 지정할 수 있습니다.</summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task`1" />를 반환합니다.  
  
 비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 작업을 차단 하지 않습니다. 반환 된 <xref:System.Threading.Tasks.Task%601>> 개체 ICMP 패킷을 전송 되어 고 응답이 수신 된 후 완료 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(class System.Net.IPAddress address, int32 timeout, unsigned int8[] buffer, class System.Net.NetworkInformation.PingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (address As IPAddress, timeout As Integer, buffer As Byte(), options As PingOptions) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::Net::IPAddress ^ address, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Net::NetworkInformation::PingOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" />
      </Parameters>
      <Docs>
        <param name="address">ICMP Echo 메시지의 대상 컴퓨터를 식별하는 IP 주소입니다.</param>
        <param name="timeout">ICMP Echo 메시지를 보낸 후 ICMP Echo Reply 메시지를 기다리는 최대 시간(밀리초)입니다.</param>
        <param name="buffer">ICMP Echo 메시지와 함께 보내지고 ICMP Echo Reply 메시지에 담겨 반환되는 데이터가 포함된 <see cref="T:System.Byte" /> 배열입니다. 배열은 65,500바이트를 초과할 수 없습니다.</param>
        <param name="options">ICMP Echo 메시지 패킷의 조각화 및 Time-to-Live 값을 제어하는 데 사용되는 <see cref="T:System.Net.NetworkInformation.PingOptions" /> 개체입니다.</param>
        <summary>지정된 <see cref="T:System.Net.IPAddress" />를 사용하는 컴퓨터에 ICMP(Internet Control Message Protocol) Echo 메시지와 지정된 데이터 버퍼를 보내고 해당 컴퓨터로부터 이에 대응하는 ICMP Echo Reply 메시지를 받는 작업을 비동기 작업으로 보냅니다. 이 오버로드를 사용하여 작업의 제한 시간 값을 지정하고 보내고 받는 데 사용할 버퍼를 지정하며 ICMP Echo 메시지 패킷의 조각화 및 Time-to-Live 값을 제어할 수 있습니다.</summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task`1" />를 반환합니다.  
  
 비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 작업을 차단 하지 않습니다. 반환 된 <xref:System.Threading.Tasks.Task%601>> 개체 ICMP 패킷을 전송 되어 고 응답이 수신 된 후 완료 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" />가 <see langword="null" />인 경우  
  
 또는  
  
 <paramref name="buffer" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="timeout" />가 0보다 작은 경우</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="Overload:System.Net.NetworkInformation.Ping.SendPingAsync" />를 호출하고 있는 경우</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">ICMP 메시지를 보내거나 받는 동안 예외가 throw된 경우. throw된 정확한 예외에 대해서는 내부 예외를 참조하십시오.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <paramref name="address" />이 유효한 IP 주소가 아닌 경우</exception>
        <exception cref="T:System.ObjectDisposedException">이 개체가 삭제되었습니다.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="buffer" />의 크기가 65,500바이트를 초과하는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(string hostNameOrAddress, int32 timeout, unsigned int8[] buffer, class System.Net.NetworkInformation.PingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (hostNameOrAddress As String, timeout As Integer, buffer As Byte(), options As PingOptions) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::String ^ hostNameOrAddress, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Net::NetworkInformation::PingOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">ICMP echo 메시지의 대상 컴퓨터입니다. 이 매개 변수에 지정된 값은 호스트 이름 또는 IP 주소의 문자열 표현일 수 있습니다.</param>
        <param name="timeout">ICMP Echo 메시지를 보낸 후 ICMP Echo Reply 메시지를 기다리는 최대 시간(밀리초)입니다.</param>
        <param name="buffer">ICMP Echo 메시지와 함께 보내지고 ICMP Echo Reply 메시지에 담겨 반환되는 데이터가 포함된 <see cref="T:System.Byte" /> 배열입니다. 배열은 65,500바이트를 초과할 수 없습니다.</param>
        <param name="options">ICMP Echo 메시지 패킷의 조각화 및 Time-to-Live 값을 제어하는 데 사용되는 <see cref="T:System.Net.NetworkInformation.PingOptions" /> 개체입니다.</param>
        <summary>지정된 컴퓨터에 ICMP(Internet Control Message Protocol) Echo 메시지와 지정된 데이터 버퍼를 보내고 해당 컴퓨터로부터 이에 대응하는 ICMP Echo Reply 메시지를 받는 작업을 비동기 작업으로 보냅니다. 이 오버로드를 사용하여 작업의 제한 시간 값을 지정하고 보내고 받는 데 사용할 버퍼를 지정하며 ICMP Echo 메시지 패킷의 조각화 및 Time-to-Live 값을 제어할 수 있습니다.</summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task`1" />를 반환합니다.  
  
 비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 작업을 차단 하지 않습니다. 반환 된 <xref:System.Threading.Tasks.Task%601>> 개체 ICMP 패킷을 전송 되어 고 응답이 수신 된 후 완료 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>